using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml;
using AK.Wwise;
using CacheUtils;
using Chronos;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using Exploder;
using Flat;
using FlatBuffers;
using FlowCanvas;
using FlowCanvas.Nodes;
using Il2CppDummyDll;
using Knife.Effects;
using Knife.Effects.SimpleController;
using Knife.ScifiEffects;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using NodeCanvas.Tasks.Actions;
using NodeCanvas.Tasks.Conditions;
using ParadoxNotion;
using PostProcess;
using RootMotion;
using RootMotion.FinalIK;
using Runemark.DeadlyDungeonTraps;
using SWS;
using TMPro;
using UniRx;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.Rendering.Universal.Internal;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using UnityEngine.XR.OpenXR.Features;
using VRNetLib;
using VRPlatformLib;
using Valve.VR;
using kTools.Decals;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE50C9C", Offset = "0xE50C9C")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AEB8", Offset = "0xE5AEB8")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AECC", Offset = "0xE5AECC")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE50CAC", Offset = "0xE50CAC")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AEE0", Offset = "0xE5AEE0")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AEF4", Offset = "0xE5AEF4")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF08", Offset = "0xE5AF08")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE50CBC", Offset = "0xE50CBC")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF1C", Offset = "0xE5AF1C")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF30", Offset = "0xE5AF30")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF44", Offset = "0xE5AF44")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF58", Offset = "0xE5AF58")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF6C", Offset = "0xE5AF6C")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE5AF80", Offset = "0xE5AF80")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE50CCC", Offset = "0xE50CCC")]
public class AGGlobalSettings : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5AF94", Offset = "0xE5AF94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5AF94", Offset = "0xE5AF94")]
	public float AOIntensity;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5AFE8", Offset = "0xE5AFE8")]
	public float TranslucencyIntensity;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TranslucencyDistance;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE5B000", Offset = "0xE5B000")]
	public bool EnableTintColor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TintToggle;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B014", Offset = "0xE5B014")]
	public float TintNoiseTile;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B030", Offset = "0xE5B030")]
	public float TintNoiseContrast;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1FABCF4", Offset = "0x1FABCF4", VA = "0x1FABCF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1FABD78", Offset = "0x1FABD78", VA = "0x1FABD78")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1FABEB8", Offset = "0x1FABEB8", VA = "0x1FABEB8")]
	public AGGlobalSettings()
	{
	}
}
[Token(Token = "0x2000006")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE50D4C", Offset = "0xE50D4C")]
public class AGGlobalSnow : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B04C", Offset = "0xE5B04C")]
	public bool EnableGlobalWind;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B084", Offset = "0xE5B084")]
	public float WindGrassAmplitude;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B09C", Offset = "0xE5B09C")]
	public float WindGrassSpeed;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B0B4", Offset = "0xE5B0B4")]
	public float WindGrassScale;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B0CC", Offset = "0xE5B0CC")]
	public float WindGrassStiffness;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B0E4", Offset = "0xE5B0E4")]
	public bool EnableTintColor;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float TintToggle;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B11C", Offset = "0xE5B11C")]
	public float TintNoiseTile;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B138", Offset = "0xE5B138")]
	public float TintNoiseContrast;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B154", Offset = "0xE5B154")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B154", Offset = "0xE5B154")]
	public float SnowPropsIntensity;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B1A8", Offset = "0xE5B1A8")]
	public float SnowPropsOffset;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B1C0", Offset = "0xE5B1C0")]
	public float SnowPropsContrast;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B1D8", Offset = "0xE5B1D8")]
	public float SnowMinimumHeight;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B210", Offset = "0xE5B210")]
	public float SnowFadeHeight;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1FABEDC", Offset = "0x1FABEDC", VA = "0x1FABEDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1FABF60", Offset = "0x1FABF60", VA = "0x1FABF60")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1FAC1FC", Offset = "0x1FAC1FC", VA = "0x1FAC1FC")]
	public AGGlobalSnow()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE50DCC", Offset = "0xE50DCC")]
public class AGGlobalSnowGrass : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B228", Offset = "0xE5B228")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B228", Offset = "0xE5B228")]
	public float SnowGrassIntensity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B27C", Offset = "0xE5B27C")]
	public float SnowGrassOffset;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B294", Offset = "0xE5B294")]
	public float SnowGrassContrast;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1FAC238", Offset = "0x1FAC238", VA = "0x1FAC238")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1FAC2BC", Offset = "0x1FAC2BC", VA = "0x1FAC2BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1FAC354", Offset = "0x1FAC354", VA = "0x1FAC354")]
	public AGGlobalSnowGrass()
	{
	}
}
[Token(Token = "0x2000008")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE50E4C", Offset = "0xE50E4C")]
public class AGGlobalSnowProps : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B2AC", Offset = "0xE5B2AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B2AC", Offset = "0xE5B2AC")]
	public float SnowPropsIntensity;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B300", Offset = "0xE5B300")]
	public float SnowPropsOffset;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B318", Offset = "0xE5B318")]
	public float SnowPropsContrast;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1FAC36C", Offset = "0x1FAC36C", VA = "0x1FAC36C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1FAC3F0", Offset = "0x1FAC3F0", VA = "0x1FAC3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1FAC488", Offset = "0x1FAC488", VA = "0x1FAC488")]
	public AGGlobalSnowProps()
	{
	}
}
[Token(Token = "0x2000009")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE50ECC", Offset = "0xE50ECC")]
public class AGGlobalWind : MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableGlobalWind;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B330", Offset = "0xE5B330")]
	public float WindTreeAmplitude;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B348", Offset = "0xE5B348")]
	public float WindTreeSpeed;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B360", Offset = "0xE5B360")]
	public float WindTreeScale;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B378", Offset = "0xE5B378")]
	public float WindTreeStiffness;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B390", Offset = "0xE5B390")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE5B390", Offset = "0xE5B390")]
	public float WindGrassAmplitude;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B3D4", Offset = "0xE5B3D4")]
	public float WindGrassSpeed;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B3EC", Offset = "0xE5B3EC")]
	public float WindGrassScale;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B404", Offset = "0xE5B404")]
	public float WindGrassStiffness;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1FAC4A0", Offset = "0x1FAC4A0", VA = "0x1FAC4A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1FAC524", Offset = "0x1FAC524", VA = "0x1FAC524")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1FAC6FC", Offset = "0x1FAC6FC", VA = "0x1FAC6FC")]
	public AGGlobalWind()
	{
	}
}
[Token(Token = "0x200000A")]
public class AutoConnectJoint : MonoBehaviour
{
	[Token(Token = "0x6000027")]
	[Address(RVA = "0x28FFA30", Offset = "0x28FFA30", VA = "0x28FFA30")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE69A44", Offset = "0xE69A44")]
	private void ConnectUpInHierarchy()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x28FFB30", Offset = "0x28FFB30", VA = "0x28FFB30")]
	public AutoConnectJoint()
	{
	}
}
[Token(Token = "0x200000B")]
public class DamageableExample : MonoBehaviour, IDamageable
{
	[Serializable]
	[Token(Token = "0x200000C")]
	public class DamageEvent : UnityEvent<float>
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x20F5424", Offset = "0x20F5424", VA = "0x20F5424")]
		public DamageEvent()
		{
		}
	}

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaxHP;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int currHP;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DamageEvent OnDamage;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDeath;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x21C7480", Offset = "0x21C7480", VA = "0x21C7480")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x21C74E0", Offset = "0x21C74E0", VA = "0x21C74E0", Slot = "5")]
	public void TakeDamage(DamageResult result)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x21C7584", Offset = "0x21C7584", VA = "0x21C7584")]
	public DamageableExample()
	{
	}

	[SpecialName]
	[Token(Token = "0x600002C")]
	[Address(RVA = "0x21C7594", Offset = "0x21C7594", VA = "0x21C7594", Slot = "4")]
	private Transform Runemark.DeadlyDungeonTraps.IDamageable.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200000D")]
public class ExampleDamageable : MonoBehaviour, IDamageable
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Health;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x24F42B8", Offset = "0x24F42B8", VA = "0x24F42B8", Slot = "5")]
	public void TakeDamage(DamageResult result)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x24F42DC", Offset = "0x24F42DC", VA = "0x24F42DC")]
	public ExampleDamageable()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000030")]
	[Address(RVA = "0x24F42EC", Offset = "0x24F42EC", VA = "0x24F42EC", Slot = "4")]
	private Transform Runemark.DeadlyDungeonTraps.IDamageable.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200000E")]
public class HUDExample : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE50F4C", Offset = "0xE50F4C")]
	private sealed class <DamageEffectCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HUDExample <>4__this;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <c>5__2;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__3;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000039")]
			[Address(RVA = "0x28440D4", Offset = "0x28440D4", VA = "0x28440D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003B")]
			[Address(RVA = "0x284411C", Offset = "0x284411C", VA = "0x284411C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x2843F64", Offset = "0x2843F64", VA = "0x2843F64")]
		[DebuggerHidden]
		public <DamageEffectCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x2843F90", Offset = "0x2843F90", VA = "0x2843F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x2843F94", Offset = "0x2843F94", VA = "0x2843F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0x28440DC", Offset = "0x28440DC", VA = "0x28440DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider HPBar;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image damageEffect;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float damageEffectSpeed;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve damageEffectCurve;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject deathEffect;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine dmgEffect;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x2526E50", Offset = "0x2526E50", VA = "0x2526E50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x2526E70", Offset = "0x2526E70", VA = "0x2526E70")]
	public void OnHPChanged(float currHP)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x2526FA0", Offset = "0x2526FA0", VA = "0x2526FA0")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x2526F28", Offset = "0x2526F28", VA = "0x2526F28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE69A7C", Offset = "0xE69A7C")]
	private IEnumerator DamageEffectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x2526FC0", Offset = "0x2526FC0", VA = "0x2526FC0")]
	public HUDExample()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE50F5C", Offset = "0xE50F5C")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int[] m_queues;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x21578D8", Offset = "0x21578D8", VA = "0x21578D8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x21579B8", Offset = "0x21579B8", VA = "0x21579B8")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x2000011")]
public class CameraHolder : MonoBehaviour
{
	[Token(Token = "0x2000012")]
	public struct SVA
	{
		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float S;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float V;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float A;
	}

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Holder;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currDistance;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xRotate;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yRotate;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float prevDistance;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float x;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float y;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B42C", Offset = "0xE5B42C")]
	private float windowDpi;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int Prefab;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject Instance;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float StartColor;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float HueColor;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture HueTexture;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<SVA> svList;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float H;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x243ED44", Offset = "0x243ED44", VA = "0x243ED44")]
	private void Start()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x243F098", Offset = "0x243F098", VA = "0x243F098")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x243EDD4", Offset = "0x243EDD4", VA = "0x243EDD4")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x243F4CC", Offset = "0x243F4CC", VA = "0x243F4CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x243F8D0", Offset = "0x243F8D0", VA = "0x243F8D0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x243F900", Offset = "0x243F900", VA = "0x243F900")]
	public CameraHolder()
	{
	}
}
[Token(Token = "0x2000013")]
public class LaserControl : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRender;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5B474", Offset = "0xE5B474")]
	private float maxDistance;

	[Token(Token = "0x400005D")]
	private const int posCount = 2;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 endPosDefault;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem pts;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit hit;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int activeLayer;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x20BB09C", Offset = "0x20BB09C", VA = "0x20BB09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x20BB2DC", Offset = "0x20BB2DC", VA = "0x20BB2DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x20BB524", Offset = "0x20BB524", VA = "0x20BB524")]
	public LaserControl()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class ChinarMirror : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mainCamera;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x2667E5C", Offset = "0x2667E5C", VA = "0x2667E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x2667EB8", Offset = "0x2667EB8", VA = "0x2667EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x266805C", Offset = "0x266805C", VA = "0x266805C")]
	public ChinarMirror()
	{
	}
}
[Token(Token = "0x2000015")]
[ExecuteInEditMode]
public class ChinarMirrorPlane : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateViewFrustum;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool setNearClipPlane;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float nearClipDistanceOffset;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 vn;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float l;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float r;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float b;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float t;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float d;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float n;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float f;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 pa;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 pb;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 pc;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 pe;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 va;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 vb;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 vc;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 vr;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 vu;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Matrix4x4 p;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Matrix4x4 rm;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Matrix4x4 tm;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Quaternion q;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 lb_p;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 rb_p;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 lt_p;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x2668064", Offset = "0x2668064", VA = "0x2668064")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x26680C0", Offset = "0x26680C0", VA = "0x26680C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x2668C30", Offset = "0x2668C30", VA = "0x2668C30")]
	public ChinarMirrorPlane()
	{
	}
}
[Token(Token = "0x2000016")]
public class MirrorAutoInit : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChinarMirror Mirror;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChinarMirrorPlane MirrorPlane;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x279BF18", Offset = "0x279BF18", VA = "0x279BF18")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x279C080", Offset = "0x279C080", VA = "0x279C080")]
	public MirrorAutoInit()
	{
	}
}
[Token(Token = "0x2000017")]
public class TOD_Animation : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B4C0", Offset = "0xE5B4C0")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5B4C0", Offset = "0xE5B4C0")]
	public float CameraMovement;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5B510", Offset = "0xE5B510")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B510", Offset = "0xE5B510")]
	public float WindDegrees;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5B568", Offset = "0xE5B568")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B568", Offset = "0xE5B568")]
	public float WindSpeed;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B5B8", Offset = "0xE5B5B8")]
	private Vector3 <CloudUV>k__BackingField;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TOD_Sky sky;

	[Token(Token = "0x1700000E")]
	public Vector3 CloudUV
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x2262884", Offset = "0x2262884", VA = "0x2262884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B2C", Offset = "0xE69B2C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x2262890", Offset = "0x2262890", VA = "0x2262890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B3C", Offset = "0xE69B3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector3 OffsetUV
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x226289C", Offset = "0x226289C", VA = "0x226289C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x2262968", Offset = "0x2262968", VA = "0x2262968")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x22629F8", Offset = "0x22629F8", VA = "0x22629F8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x2262AE4", Offset = "0x2262AE4", VA = "0x2262AE4")]
	public TOD_Animation()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE50FB4", Offset = "0xE50FB4")]
public class TOD_MinAttribute : PropertyAttribute
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x2266AF8", Offset = "0x2266AF8", VA = "0x2266AF8")]
	public TOD_MinAttribute(float min)
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE50FEC", Offset = "0xE50FEC")]
public class TOD_MaxAttribute : PropertyAttribute
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float max;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x2266AC4", Offset = "0x2266AC4", VA = "0x2266AC4")]
	public TOD_MaxAttribute(float max)
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE51024", Offset = "0xE51024")]
public class TOD_RangeAttribute : PropertyAttribute
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float max;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x2267408", Offset = "0x2267408", VA = "0x2267408")]
	public TOD_RangeAttribute(float min, float max)
	{
	}
}
[Token(Token = "0x200001B")]
public class TOD_Billboard : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Altitude;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Azimuth;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distance;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Size;

	[Token(Token = "0x6000058")]
	private T GetComponentInParents<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x226329C", Offset = "0x226329C", VA = "0x226329C")]
	public TOD_Billboard()
	{
	}
}
[Token(Token = "0x200001C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5105C", Offset = "0xE5105C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5105C", Offset = "0xE5105C")]
public class TOD_Camera : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_Sky sky;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DomePosToCamera;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 DomePosOffset;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DomeScaleToFarClip;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DomeScaleFactor;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cameraComponent;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cameraTransform;

	[Token(Token = "0x17000010")]
	public bool HDR
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x22632AC", Offset = "0x22632AC", VA = "0x22632AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000011")]
	public float NearClipPlane
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x226333C", Offset = "0x226333C", VA = "0x226333C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000012")]
	public float FarClipPlane
	{
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x22633D0", Offset = "0x22633D0", VA = "0x22633D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000013")]
	public Color BackgroundColor
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x2263464", Offset = "0x2263464", VA = "0x2263464")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x22634F4", Offset = "0x22634F4", VA = "0x22634F4")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x226352C", Offset = "0x226352C", VA = "0x226352C")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x22637A8", Offset = "0x22637A8", VA = "0x22637A8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x22639C4", Offset = "0x22639C4", VA = "0x22639C4")]
	protected void OnPreCull()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x226361C", Offset = "0x226361C", VA = "0x226361C")]
	private TOD_Sky FindSky(bool fallback = false)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x2263AC4", Offset = "0x2263AC4", VA = "0x2263AC4")]
	public void DoDomeScaleToFarClip()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x2263B28", Offset = "0x2263B28", VA = "0x2263B28")]
	public void DoDomePosToCamera()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x2263BBC", Offset = "0x2263BBC", VA = "0x2263BBC")]
	public TOD_Camera()
	{
	}
}
[Token(Token = "0x200001D")]
[ExecuteInEditMode]
public class TOD_Components : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Space;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Stars;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Sun;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Moon;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Atmosphere;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Clear;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Clouds;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Billboards;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Light;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B5C8", Offset = "0xE5B5C8")]
	private Transform <DomeTransform>k__BackingField;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B5D8", Offset = "0xE5B5D8")]
	private Transform <SpaceTransform>k__BackingField;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B5E8", Offset = "0xE5B5E8")]
	private Transform <StarTransform>k__BackingField;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B5F8", Offset = "0xE5B5F8")]
	private Transform <SunTransform>k__BackingField;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B608", Offset = "0xE5B608")]
	private Transform <MoonTransform>k__BackingField;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B618", Offset = "0xE5B618")]
	private Transform <AtmosphereTransform>k__BackingField;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B628", Offset = "0xE5B628")]
	private Transform <ClearTransform>k__BackingField;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B638", Offset = "0xE5B638")]
	private Transform <CloudTransform>k__BackingField;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B648", Offset = "0xE5B648")]
	private Transform <BillboardTransform>k__BackingField;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B658", Offset = "0xE5B658")]
	private Transform <LightTransform>k__BackingField;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B668", Offset = "0xE5B668")]
	private Renderer <SpaceRenderer>k__BackingField;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B678", Offset = "0xE5B678")]
	private Renderer <StarRenderer>k__BackingField;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B688", Offset = "0xE5B688")]
	private Renderer <SunRenderer>k__BackingField;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B698", Offset = "0xE5B698")]
	private Renderer <MoonRenderer>k__BackingField;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B6A8", Offset = "0xE5B6A8")]
	private Renderer <AtmosphereRenderer>k__BackingField;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B6B8", Offset = "0xE5B6B8")]
	private Renderer <ClearRenderer>k__BackingField;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B6C8", Offset = "0xE5B6C8")]
	private Renderer <CloudRenderer>k__BackingField;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B6D8", Offset = "0xE5B6D8")]
	private Renderer[] <BillboardRenderers>k__BackingField;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B6E8", Offset = "0xE5B6E8")]
	private MeshFilter <SpaceMeshFilter>k__BackingField;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B6F8", Offset = "0xE5B6F8")]
	private MeshFilter <StarMeshFilter>k__BackingField;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B708", Offset = "0xE5B708")]
	private MeshFilter <SunMeshFilter>k__BackingField;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B718", Offset = "0xE5B718")]
	private MeshFilter <MoonMeshFilter>k__BackingField;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B728", Offset = "0xE5B728")]
	private MeshFilter <AtmosphereMeshFilter>k__BackingField;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B738", Offset = "0xE5B738")]
	private MeshFilter <ClearMeshFilter>k__BackingField;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B748", Offset = "0xE5B748")]
	private MeshFilter <CloudMeshFilter>k__BackingField;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B758", Offset = "0xE5B758")]
	private MeshFilter[] <BillboardMeshFilters>k__BackingField;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B768", Offset = "0xE5B768")]
	private Material <SpaceMaterial>k__BackingField;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B778", Offset = "0xE5B778")]
	private Material <StarMaterial>k__BackingField;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B788", Offset = "0xE5B788")]
	private Material <SunMaterial>k__BackingField;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B798", Offset = "0xE5B798")]
	private Material <MoonMaterial>k__BackingField;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B7A8", Offset = "0xE5B7A8")]
	private Material <AtmosphereMaterial>k__BackingField;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B7B8", Offset = "0xE5B7B8")]
	private Material <ClearMaterial>k__BackingField;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B7C8", Offset = "0xE5B7C8")]
	private Material <CloudMaterial>k__BackingField;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B7D8", Offset = "0xE5B7D8")]
	private Material[] <BillboardMaterials>k__BackingField;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B7E8", Offset = "0xE5B7E8")]
	private Light <LightSource>k__BackingField;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B7F8", Offset = "0xE5B7F8")]
	private TOD_Sky <Sky>k__BackingField;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B808", Offset = "0xE5B808")]
	private TOD_Animation <Animation>k__BackingField;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B818", Offset = "0xE5B818")]
	private TOD_Time <Time>k__BackingField;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B828", Offset = "0xE5B828")]
	private TOD_Camera <Camera>k__BackingField;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B838", Offset = "0xE5B838")]
	private TOD_Rays <Rays>k__BackingField;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B848", Offset = "0xE5B848")]
	private TOD_Scattering <Scattering>k__BackingField;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5B858", Offset = "0xE5B858")]
	private TOD_Shadows <Shadows>k__BackingField;

	[Token(Token = "0x17000014")]
	public Transform DomeTransform
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x2263C2C", Offset = "0x2263C2C", VA = "0x2263C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B4C", Offset = "0xE69B4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x2263C34", Offset = "0x2263C34", VA = "0x2263C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B5C", Offset = "0xE69B5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public Transform SpaceTransform
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x2263C3C", Offset = "0x2263C3C", VA = "0x2263C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B6C", Offset = "0xE69B6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x2263C44", Offset = "0x2263C44", VA = "0x2263C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B7C", Offset = "0xE69B7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Transform StarTransform
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x2263C4C", Offset = "0x2263C4C", VA = "0x2263C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B8C", Offset = "0xE69B8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006B")]
		[Address(RVA = "0x2263C54", Offset = "0x2263C54", VA = "0x2263C54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69B9C", Offset = "0xE69B9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public Transform SunTransform
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x2263C5C", Offset = "0x2263C5C", VA = "0x2263C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69BAC", Offset = "0xE69BAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006D")]
		[Address(RVA = "0x2263C64", Offset = "0x2263C64", VA = "0x2263C64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69BBC", Offset = "0xE69BBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Transform MoonTransform
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0x2263C6C", Offset = "0x2263C6C", VA = "0x2263C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69BCC", Offset = "0xE69BCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x2263C74", Offset = "0x2263C74", VA = "0x2263C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69BDC", Offset = "0xE69BDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public Transform AtmosphereTransform
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x2263C7C", Offset = "0x2263C7C", VA = "0x2263C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69BEC", Offset = "0xE69BEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x2263C84", Offset = "0x2263C84", VA = "0x2263C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69BFC", Offset = "0xE69BFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public Transform ClearTransform
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x2263C8C", Offset = "0x2263C8C", VA = "0x2263C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C0C", Offset = "0xE69C0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x2263C94", Offset = "0x2263C94", VA = "0x2263C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C1C", Offset = "0xE69C1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Transform CloudTransform
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x2263C9C", Offset = "0x2263C9C", VA = "0x2263C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C2C", Offset = "0xE69C2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x2263CA4", Offset = "0x2263CA4", VA = "0x2263CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C3C", Offset = "0xE69C3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Transform BillboardTransform
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x2263CAC", Offset = "0x2263CAC", VA = "0x2263CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C4C", Offset = "0xE69C4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x2263CB4", Offset = "0x2263CB4", VA = "0x2263CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C5C", Offset = "0xE69C5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public Transform LightTransform
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x2263CBC", Offset = "0x2263CBC", VA = "0x2263CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C6C", Offset = "0xE69C6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x2263CC4", Offset = "0x2263CC4", VA = "0x2263CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C7C", Offset = "0xE69C7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public Renderer SpaceRenderer
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x2263CCC", Offset = "0x2263CCC", VA = "0x2263CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C8C", Offset = "0xE69C8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x2263CD4", Offset = "0x2263CD4", VA = "0x2263CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69C9C", Offset = "0xE69C9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public Renderer StarRenderer
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x2263CDC", Offset = "0x2263CDC", VA = "0x2263CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69CAC", Offset = "0xE69CAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x2263CE4", Offset = "0x2263CE4", VA = "0x2263CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69CBC", Offset = "0xE69CBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Renderer SunRenderer
	{
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x2263CEC", Offset = "0x2263CEC", VA = "0x2263CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69CCC", Offset = "0xE69CCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007F")]
		[Address(RVA = "0x2263CF4", Offset = "0x2263CF4", VA = "0x2263CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69CDC", Offset = "0xE69CDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public Renderer MoonRenderer
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0x2263CFC", Offset = "0x2263CFC", VA = "0x2263CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69CEC", Offset = "0xE69CEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000081")]
		[Address(RVA = "0x2263D04", Offset = "0x2263D04", VA = "0x2263D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69CFC", Offset = "0xE69CFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public Renderer AtmosphereRenderer
	{
		[Token(Token = "0x6000082")]
		[Address(RVA = "0x2263D0C", Offset = "0x2263D0C", VA = "0x2263D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D0C", Offset = "0xE69D0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x2263D14", Offset = "0x2263D14", VA = "0x2263D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D1C", Offset = "0xE69D1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Renderer ClearRenderer
	{
		[Token(Token = "0x6000084")]
		[Address(RVA = "0x2263D1C", Offset = "0x2263D1C", VA = "0x2263D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D2C", Offset = "0xE69D2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000085")]
		[Address(RVA = "0x2263D24", Offset = "0x2263D24", VA = "0x2263D24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D3C", Offset = "0xE69D3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Renderer CloudRenderer
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0x2263D2C", Offset = "0x2263D2C", VA = "0x2263D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D4C", Offset = "0xE69D4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x2263D34", Offset = "0x2263D34", VA = "0x2263D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D5C", Offset = "0xE69D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Renderer[] BillboardRenderers
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x2263D3C", Offset = "0x2263D3C", VA = "0x2263D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D6C", Offset = "0xE69D6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x2263D44", Offset = "0x2263D44", VA = "0x2263D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D7C", Offset = "0xE69D7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public MeshFilter SpaceMeshFilter
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x2263D4C", Offset = "0x2263D4C", VA = "0x2263D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D8C", Offset = "0xE69D8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x2263D54", Offset = "0x2263D54", VA = "0x2263D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69D9C", Offset = "0xE69D9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public MeshFilter StarMeshFilter
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x2263D5C", Offset = "0x2263D5C", VA = "0x2263D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69DAC", Offset = "0xE69DAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008D")]
		[Address(RVA = "0x2263D64", Offset = "0x2263D64", VA = "0x2263D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69DBC", Offset = "0xE69DBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public MeshFilter SunMeshFilter
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x2263D6C", Offset = "0x2263D6C", VA = "0x2263D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69DCC", Offset = "0xE69DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x2263D74", Offset = "0x2263D74", VA = "0x2263D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69DDC", Offset = "0xE69DDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public MeshFilter MoonMeshFilter
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x2263D84", Offset = "0x2263D84", VA = "0x2263D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69DEC", Offset = "0xE69DEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x2263D8C", Offset = "0x2263D8C", VA = "0x2263D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69DFC", Offset = "0xE69DFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public MeshFilter AtmosphereMeshFilter
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x2263D9C", Offset = "0x2263D9C", VA = "0x2263D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E0C", Offset = "0xE69E0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x2263DA4", Offset = "0x2263DA4", VA = "0x2263DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E1C", Offset = "0xE69E1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public MeshFilter ClearMeshFilter
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x2263DB4", Offset = "0x2263DB4", VA = "0x2263DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E2C", Offset = "0xE69E2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x2263DBC", Offset = "0x2263DBC", VA = "0x2263DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E3C", Offset = "0xE69E3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public MeshFilter CloudMeshFilter
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x2263DCC", Offset = "0x2263DCC", VA = "0x2263DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E4C", Offset = "0xE69E4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x2263DD4", Offset = "0x2263DD4", VA = "0x2263DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E5C", Offset = "0xE69E5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public MeshFilter[] BillboardMeshFilters
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x2263DE4", Offset = "0x2263DE4", VA = "0x2263DE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E6C", Offset = "0xE69E6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x2263DEC", Offset = "0x2263DEC", VA = "0x2263DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E7C", Offset = "0xE69E7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public Material SpaceMaterial
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x2263DFC", Offset = "0x2263DFC", VA = "0x2263DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E8C", Offset = "0xE69E8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x2263E04", Offset = "0x2263E04", VA = "0x2263E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69E9C", Offset = "0xE69E9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public Material StarMaterial
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x2263E14", Offset = "0x2263E14", VA = "0x2263E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69EAC", Offset = "0xE69EAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x2263E1C", Offset = "0x2263E1C", VA = "0x2263E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69EBC", Offset = "0xE69EBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public Material SunMaterial
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x2263E2C", Offset = "0x2263E2C", VA = "0x2263E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69ECC", Offset = "0xE69ECC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0x2263E34", Offset = "0x2263E34", VA = "0x2263E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69EDC", Offset = "0xE69EDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public Material MoonMaterial
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x2263E44", Offset = "0x2263E44", VA = "0x2263E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69EEC", Offset = "0xE69EEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x2263E4C", Offset = "0x2263E4C", VA = "0x2263E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69EFC", Offset = "0xE69EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public Material AtmosphereMaterial
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x2263E5C", Offset = "0x2263E5C", VA = "0x2263E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F0C", Offset = "0xE69F0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x2263E64", Offset = "0x2263E64", VA = "0x2263E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F1C", Offset = "0xE69F1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public Material ClearMaterial
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x2263E74", Offset = "0x2263E74", VA = "0x2263E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F2C", Offset = "0xE69F2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x2263E7C", Offset = "0x2263E7C", VA = "0x2263E7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F3C", Offset = "0xE69F3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public Material CloudMaterial
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x2263E8C", Offset = "0x2263E8C", VA = "0x2263E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F4C", Offset = "0xE69F4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x2263E94", Offset = "0x2263E94", VA = "0x2263E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F5C", Offset = "0xE69F5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public Material[] BillboardMaterials
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x2263EA4", Offset = "0x2263EA4", VA = "0x2263EA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F6C", Offset = "0xE69F6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x2263EAC", Offset = "0x2263EAC", VA = "0x2263EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F7C", Offset = "0xE69F7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public Light LightSource
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x2263EBC", Offset = "0x2263EBC", VA = "0x2263EBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F8C", Offset = "0xE69F8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x2263EC4", Offset = "0x2263EC4", VA = "0x2263EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69F9C", Offset = "0xE69F9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public TOD_Sky Sky
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x2263ED4", Offset = "0x2263ED4", VA = "0x2263ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69FAC", Offset = "0xE69FAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x2263EDC", Offset = "0x2263EDC", VA = "0x2263EDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69FBC", Offset = "0xE69FBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public TOD_Animation Animation
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x2263EEC", Offset = "0x2263EEC", VA = "0x2263EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69FCC", Offset = "0xE69FCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x2263EF4", Offset = "0x2263EF4", VA = "0x2263EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69FDC", Offset = "0xE69FDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public TOD_Time Time
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x2263F04", Offset = "0x2263F04", VA = "0x2263F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69FEC", Offset = "0xE69FEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x2263F0C", Offset = "0x2263F0C", VA = "0x2263F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69FFC", Offset = "0xE69FFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public TOD_Camera Camera
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x2263F1C", Offset = "0x2263F1C", VA = "0x2263F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A00C", Offset = "0xE6A00C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x2263F24", Offset = "0x2263F24", VA = "0x2263F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A01C", Offset = "0xE6A01C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public TOD_Rays Rays
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x2263F34", Offset = "0x2263F34", VA = "0x2263F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A02C", Offset = "0xE6A02C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x2263F3C", Offset = "0x2263F3C", VA = "0x2263F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A03C", Offset = "0xE6A03C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public TOD_Scattering Scattering
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x2263F4C", Offset = "0x2263F4C", VA = "0x2263F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A04C", Offset = "0xE6A04C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x2263F54", Offset = "0x2263F54", VA = "0x2263F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A05C", Offset = "0xE6A05C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public TOD_Shadows Shadows
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x2263F64", Offset = "0x2263F64", VA = "0x2263F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A06C", Offset = "0xE6A06C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x2263F6C", Offset = "0x2263F6C", VA = "0x2263F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A07C", Offset = "0xE6A07C")]
		set
		{
		}
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x2263F7C", Offset = "0x2263F7C", VA = "0x2263F7C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x2264894", Offset = "0x2264894", VA = "0x2264894")]
	public TOD_Components()
	{
	}
}
[Token(Token = "0x200001E")]
public enum TOD_MoonPositionType
{
	[Token(Token = "0x40000CC")]
	OppositeToSun,
	[Token(Token = "0x40000CD")]
	Realistic
}
[Token(Token = "0x200001F")]
public enum TOD_StarsPositionType
{
	[Token(Token = "0x40000CF")]
	Static,
	[Token(Token = "0x40000D0")]
	Rotating
}
[Token(Token = "0x2000020")]
public enum TOD_FogType
{
	[Token(Token = "0x40000D2")]
	None,
	[Token(Token = "0x40000D3")]
	Atmosphere,
	[Token(Token = "0x40000D4")]
	Directional,
	[Token(Token = "0x40000D5")]
	Gradient
}
[Token(Token = "0x2000021")]
public enum TOD_AmbientType
{
	[Token(Token = "0x40000D7")]
	None,
	[Token(Token = "0x40000D8")]
	Color,
	[Token(Token = "0x40000D9")]
	Gradient,
	[Token(Token = "0x40000DA")]
	Spherical
}
[Token(Token = "0x2000022")]
public enum TOD_ReflectionType
{
	[Token(Token = "0x40000DC")]
	None,
	[Token(Token = "0x40000DD")]
	Cubemap
}
[Token(Token = "0x2000023")]
public enum TOD_ColorSpaceType
{
	[Token(Token = "0x40000DF")]
	Auto,
	[Token(Token = "0x40000E0")]
	Linear,
	[Token(Token = "0x40000E1")]
	Gamma
}
[Token(Token = "0x2000024")]
public enum TOD_ColorRangeType
{
	[Token(Token = "0x40000E3")]
	Auto,
	[Token(Token = "0x40000E4")]
	HDR,
	[Token(Token = "0x40000E5")]
	LDR
}
[Token(Token = "0x2000025")]
public enum TOD_ColorOutputType
{
	[Token(Token = "0x40000E7")]
	Raw,
	[Token(Token = "0x40000E8")]
	Dithered
}
[Token(Token = "0x2000026")]
public enum TOD_CloudQualityType
{
	[Token(Token = "0x40000EA")]
	Low,
	[Token(Token = "0x40000EB")]
	Medium,
	[Token(Token = "0x40000EC")]
	High
}
[Token(Token = "0x2000027")]
public enum TOD_MeshQualityType
{
	[Token(Token = "0x40000EE")]
	Low,
	[Token(Token = "0x40000EF")]
	Medium,
	[Token(Token = "0x40000F0")]
	High
}
[Token(Token = "0x2000028")]
public enum TOD_StarQualityType
{
	[Token(Token = "0x40000F2")]
	Low,
	[Token(Token = "0x40000F3")]
	Medium,
	[Token(Token = "0x40000F4")]
	High
}
[Token(Token = "0x2000029")]
public enum TOD_SkyQualityType
{
	[Token(Token = "0x40000F6")]
	PerVertex,
	[Token(Token = "0x40000F7")]
	PerPixel
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE51100", Offset = "0xE51100")]
[ExecuteInEditMode]
public abstract class TOD_ImageEffect : MonoBehaviour
{
	[Token(Token = "0x200002B")]
	public enum ResolutionType
	{
		[Token(Token = "0x40000FC")]
		Low,
		[Token(Token = "0x40000FD")]
		Normal,
		[Token(Token = "0x40000FE")]
		High
	}

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_Sky sky;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Camera cam;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] frustumCornersArray;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x2264ADC", Offset = "0x2264ADC", VA = "0x2264ADC")]
	protected Material CreateMaterial(Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x2264E40", Offset = "0x2264E40", VA = "0x2264E40")]
	private TOD_Sky FindSky(bool fallback = false)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x2264FCC", Offset = "0x2264FCC", VA = "0x2264FCC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x22650C8", Offset = "0x22650C8", VA = "0x22650C8")]
	protected bool CheckSupport(bool needDepth = false, bool needHdr = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x22653CC", Offset = "0x22653CC", VA = "0x22653CC")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x2265748", Offset = "0x2265748", VA = "0x2265748")]
	protected Matrix4x4 FrustumCorners()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x2265A74", Offset = "0x2265A74", VA = "0x2265A74")]
	protected RenderTexture GetSkyMask(RenderTexture source, Material skyMaskMaterial, Material screenClearMaterial, ResolutionType resolution, Vector3 lightPos, int blurIterations, float blurRadius, float maxRadius)
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x2265F20", Offset = "0x2265F20", VA = "0x2265F20")]
	protected TOD_ImageEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class TOD_Parameters
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TOD_CycleParameters Cycle;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_WorldParameters World;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TOD_AtmosphereParameters Atmosphere;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TOD_DayParameters Day;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TOD_NightParameters Night;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TOD_SunParameters Sun;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TOD_MoonParameters Moon;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TOD_LightParameters Light;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TOD_StarParameters Stars;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TOD_CloudParameters Clouds;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TOD_FogParameters Fog;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TOD_AmbientParameters Ambient;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TOD_ReflectionParameters Reflection;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x2266B60", Offset = "0x2266B60", VA = "0x2266B60")]
	public TOD_Parameters()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x2266B68", Offset = "0x2266B68", VA = "0x2266B68")]
	public TOD_Parameters(TOD_Sky sky)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x2266C64", Offset = "0x2266C64", VA = "0x2266C64")]
	public void ToSky(TOD_Sky sky)
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class TOD_CycleParameters
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B868", Offset = "0xE5B868")]
	public float Hour;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B8A0", Offset = "0xE5B8A0")]
	public int Day;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B8D8", Offset = "0xE5B8D8")]
	public int Month;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B910", Offset = "0xE5B910")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5B910", Offset = "0xE5B910")]
	public int Year;

	[Token(Token = "0x1700003E")]
	public DateTime DateTime
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x226489C", Offset = "0x226489C", VA = "0x226489C")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x2264950", Offset = "0x2264950", VA = "0x2264950")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long Ticks
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x2264A30", Offset = "0x2264A30", VA = "0x2264A30")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x2264A5C", Offset = "0x2264A5C", VA = "0x2264A5C")]
		set
		{
		}
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x2264A98", Offset = "0x2264A98", VA = "0x2264A98")]
	public TOD_CycleParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class TOD_WorldParameters
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B968", Offset = "0xE5B968")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B968", Offset = "0xE5B968")]
	public float Latitude;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5B9C4", Offset = "0xE5B9C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5B9C4", Offset = "0xE5B9C4")]
	public float Longitude;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5BA20", Offset = "0xE5BA20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BA20", Offset = "0xE5BA20")]
	public float UTC;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x2AB029C", Offset = "0x2AB029C", VA = "0x2AB029C")]
	public TOD_WorldParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class TOD_AtmosphereParameters
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BA74", Offset = "0xE5BA74")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5BA74", Offset = "0xE5BA74")]
	public float RayleighMultiplier;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BAC4", Offset = "0xE5BAC4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5BAC4", Offset = "0xE5BAC4")]
	public float MieMultiplier;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BB14", Offset = "0xE5BB14")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5BB14", Offset = "0xE5BB14")]
	public float Brightness;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BB64", Offset = "0xE5BB64")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5BB64", Offset = "0xE5BB64")]
	public float Contrast;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BBB4", Offset = "0xE5BBB4")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5BBB4", Offset = "0xE5BBB4")]
	public float Directionality;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5BC08", Offset = "0xE5BC08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BC08", Offset = "0xE5BC08")]
	public float Fogginess;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x2262AF8", Offset = "0x2262AF8", VA = "0x2262AF8")]
	public TOD_AtmosphereParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class TOD_DayParameters
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BC5C", Offset = "0xE5BC5C")]
	public Gradient SunColor;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BC94", Offset = "0xE5BC94")]
	public Gradient LightColor;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BCCC", Offset = "0xE5BCCC")]
	public Gradient RayColor;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BD04", Offset = "0xE5BD04")]
	public Gradient SkyColor;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BD3C", Offset = "0xE5BD3C")]
	public Gradient CloudColor;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BD74", Offset = "0xE5BD74")]
	public Gradient FogColor;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BDAC", Offset = "0xE5BDAC")]
	public Gradient AmbientColor;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5BDE4", Offset = "0xE5BDE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BDE4", Offset = "0xE5BDE4")]
	public float LightIntensity;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5BE38", Offset = "0xE5BE38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BE38", Offset = "0xE5BE38")]
	public float ShadowStrength;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BE8C", Offset = "0xE5BE8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5BE8C", Offset = "0xE5BE8C")]
	public float AmbientMultiplier;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5BEE0", Offset = "0xE5BEE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BEE0", Offset = "0xE5BEE0")]
	public float ReflectionMultiplier;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x2264ABC", Offset = "0x2264ABC", VA = "0x2264ABC")]
	public TOD_DayParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class TOD_NightParameters
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BF34", Offset = "0xE5BF34")]
	public Gradient MoonColor;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BF6C", Offset = "0xE5BF6C")]
	public Gradient LightColor;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BFA4", Offset = "0xE5BFA4")]
	public Gradient RayColor;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5BFDC", Offset = "0xE5BFDC")]
	public Gradient SkyColor;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C014", Offset = "0xE5C014")]
	public Gradient CloudColor;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C04C", Offset = "0xE5C04C")]
	public Gradient FogColor;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C084", Offset = "0xE5C084")]
	public Gradient AmbientColor;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C0BC", Offset = "0xE5C0BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5C0BC", Offset = "0xE5C0BC")]
	public float LightIntensity;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5C110", Offset = "0xE5C110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C110", Offset = "0xE5C110")]
	public float ShadowStrength;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C164", Offset = "0xE5C164")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5C164", Offset = "0xE5C164")]
	public float AmbientMultiplier;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C1B8", Offset = "0xE5C1B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5C1B8", Offset = "0xE5C1B8")]
	public float ReflectionMultiplier;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x2266B4C", Offset = "0x2266B4C", VA = "0x2266B4C")]
	public TOD_NightParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class TOD_SunParameters
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C20C", Offset = "0xE5C20C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C20C", Offset = "0xE5C20C")]
	public float MeshSize;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C25C", Offset = "0xE5C25C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C25C", Offset = "0xE5C25C")]
	public float MeshBrightness;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C2AC", Offset = "0xE5C2AC")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C2AC", Offset = "0xE5C2AC")]
	public float MeshContrast;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x2AAE53C", Offset = "0x2AAE53C", VA = "0x2AAE53C")]
	public TOD_SunParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class TOD_MoonParameters
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C2FC", Offset = "0xE5C2FC")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C2FC", Offset = "0xE5C2FC")]
	public float MeshSize;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C34C", Offset = "0xE5C34C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C34C", Offset = "0xE5C34C")]
	public float MeshBrightness;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C39C", Offset = "0xE5C39C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C39C", Offset = "0xE5C39C")]
	public float MeshContrast;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C3EC", Offset = "0xE5C3EC")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C3EC", Offset = "0xE5C3EC")]
	public float HaloSize;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C43C", Offset = "0xE5C43C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C43C", Offset = "0xE5C43C")]
	public float HaloBrightness;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C48C", Offset = "0xE5C48C")]
	public TOD_MoonPositionType Position;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x2266B2C", Offset = "0x2266B2C", VA = "0x2266B2C")]
	public TOD_MoonParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class TOD_StarParameters
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C4C4", Offset = "0xE5C4C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C4C4", Offset = "0xE5C4C4")]
	public float Size;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C514", Offset = "0xE5C514")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C514", Offset = "0xE5C514")]
	public float Brightness;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C564", Offset = "0xE5C564")]
	public TOD_StarsPositionType Position;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x2AAE524", Offset = "0x2AAE524", VA = "0x2AAE524")]
	public TOD_StarParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class TOD_CloudParameters
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C59C", Offset = "0xE5C59C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C59C", Offset = "0xE5C59C")]
	public float Size;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C5EC", Offset = "0xE5C5EC")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C5EC", Offset = "0xE5C5EC")]
	public float Opacity;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C640", Offset = "0xE5C640")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C640", Offset = "0xE5C640")]
	public float Coverage;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C694", Offset = "0xE5C694")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C694", Offset = "0xE5C694")]
	public float Sharpness;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C6E8", Offset = "0xE5C6E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C6E8", Offset = "0xE5C6E8")]
	public float Coloring;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C73C", Offset = "0xE5C73C")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C73C", Offset = "0xE5C73C")]
	public float Attenuation;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C790", Offset = "0xE5C790")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C790", Offset = "0xE5C790")]
	public float Saturation;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C7E4", Offset = "0xE5C7E4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C7E4", Offset = "0xE5C7E4")]
	public float Scattering;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C834", Offset = "0xE5C834")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C834", Offset = "0xE5C834")]
	public float Brightness;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x2263C08", Offset = "0x2263C08", VA = "0x2263C08")]
	public TOD_CloudParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class TOD_LightParameters
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C884", Offset = "0xE5C884")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C884", Offset = "0xE5C884")]
	public float UpdateInterval;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C8D4", Offset = "0xE5C8D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C8D4", Offset = "0xE5C8D4")]
	public float MinimumHeight;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x2266648", Offset = "0x2266648", VA = "0x2266648")]
	public TOD_LightParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class TOD_FogParameters
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C928", Offset = "0xE5C928")]
	public TOD_FogType Mode;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C960", Offset = "0xE5C960")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5C960", Offset = "0xE5C960")]
	public float HeightBias;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x2264ACC", Offset = "0x2264ACC", VA = "0x2264ACC")]
	public TOD_FogParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class TOD_AmbientParameters
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C9B4", Offset = "0xE5C9B4")]
	public TOD_AmbientType Mode;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5C9EC", Offset = "0xE5C9EC")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5C9EC", Offset = "0xE5C9EC")]
	public float Saturation;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CA3C", Offset = "0xE5CA3C")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5CA3C", Offset = "0xE5CA3C")]
	public float UpdateInterval;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x226286C", Offset = "0x226286C", VA = "0x226286C")]
	public TOD_AmbientParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class TOD_ReflectionParameters
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CA8C", Offset = "0xE5CA8C")]
	public TOD_ReflectionType Mode;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CAC4", Offset = "0xE5CAC4")]
	public ReflectionProbeClearFlags ClearFlags;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CAFC", Offset = "0xE5CAFC")]
	public LayerMask CullingMask;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CB34", Offset = "0xE5CB34")]
	public ReflectionProbeTimeSlicingMode TimeSlicing;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5CB6C", Offset = "0xE5CB6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CB6C", Offset = "0xE5CB6C")]
	public int Resolution;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5CBC4", Offset = "0xE5CBC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CBC4", Offset = "0xE5CBC4")]
	public float UpdateInterval;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x2267A1C", Offset = "0x2267A1C", VA = "0x2267A1C")]
	public TOD_ReflectionParameters()
	{
	}
}
[Token(Token = "0x200003A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE51170", Offset = "0xE51170")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE51170", Offset = "0xE51170")]
[ExecuteInEditMode]
public class TOD_Rays : TOD_ImageEffect
{
	[Token(Token = "0x200003B")]
	public enum BlendModeType
	{
		[Token(Token = "0x4000161")]
		Screen,
		[Token(Token = "0x4000162")]
		Add
	}

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader GodRayShader;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader ScreenClearShader;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader SkyMaskShader;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CC14", Offset = "0xE5CC14")]
	public bool UseDepthTexture;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CC4C", Offset = "0xE5CC4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5CC4C", Offset = "0xE5CC4C")]
	public BlendModeType BlendMode;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5CCAC", Offset = "0xE5CCAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CCAC", Offset = "0xE5CCAC")]
	public float Intensity;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5CCFC", Offset = "0xE5CCFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CCFC", Offset = "0xE5CCFC")]
	public ResolutionType Resolution;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CD5C", Offset = "0xE5CD5C")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5CD5C", Offset = "0xE5CD5C")]
	public int BlurIterations;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CDB0", Offset = "0xE5CDB0")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5CDB0", Offset = "0xE5CDB0")]
	public float BlurRadius;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5CE00", Offset = "0xE5CE00")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5CE00", Offset = "0xE5CE00")]
	public float MaxRadius;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material godRayMaterial;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material screenClearMaterial;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material skyMaskMaterial;

	[Token(Token = "0x400015E")]
	private const int PASS_SCREEN = 0;

	[Token(Token = "0x400015F")]
	private const int PASS_ADD = 1;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x2267440", Offset = "0x2267440", VA = "0x2267440")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x22675FC", Offset = "0x22675FC", VA = "0x22675FC")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x2267750", Offset = "0x2267750", VA = "0x2267750")]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x2267990", Offset = "0x2267990", VA = "0x2267990")]
	public TOD_Rays()
	{
	}
}
[Token(Token = "0x200003C")]
public class TOD_Resources : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Skybox;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh MoonLOD0;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh MoonLOD1;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh MoonLOD2;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh SkyLOD0;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh SkyLOD1;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh SkyLOD2;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh CloudsLOD0;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh CloudsLOD1;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mesh CloudsLOD2;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Mesh StarsLOD0;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Mesh StarsLOD1;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Mesh StarsLOD2;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CE50", Offset = "0xE5CE50")]
	private int <ID_SunLightColor>k__BackingField;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CE60", Offset = "0xE5CE60")]
	private int <ID_MoonLightColor>k__BackingField;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CE70", Offset = "0xE5CE70")]
	private int <ID_SunSkyColor>k__BackingField;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CE80", Offset = "0xE5CE80")]
	private int <ID_MoonSkyColor>k__BackingField;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CE90", Offset = "0xE5CE90")]
	private int <ID_SunMeshColor>k__BackingField;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CEA0", Offset = "0xE5CEA0")]
	private int <ID_MoonMeshColor>k__BackingField;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CEB0", Offset = "0xE5CEB0")]
	private int <ID_SunCloudColor>k__BackingField;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CEC0", Offset = "0xE5CEC0")]
	private int <ID_MoonCloudColor>k__BackingField;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CED0", Offset = "0xE5CED0")]
	private int <ID_FogColor>k__BackingField;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CEE0", Offset = "0xE5CEE0")]
	private int <ID_GroundColor>k__BackingField;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CEF0", Offset = "0xE5CEF0")]
	private int <ID_AmbientColor>k__BackingField;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF00", Offset = "0xE5CF00")]
	private int <ID_SunDirection>k__BackingField;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF10", Offset = "0xE5CF10")]
	private int <ID_MoonDirection>k__BackingField;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF20", Offset = "0xE5CF20")]
	private int <ID_LightDirection>k__BackingField;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF30", Offset = "0xE5CF30")]
	private int <ID_LocalSunDirection>k__BackingField;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF40", Offset = "0xE5CF40")]
	private int <ID_LocalMoonDirection>k__BackingField;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF50", Offset = "0xE5CF50")]
	private int <ID_LocalLightDirection>k__BackingField;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF60", Offset = "0xE5CF60")]
	private int <ID_Contrast>k__BackingField;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF70", Offset = "0xE5CF70")]
	private int <ID_Brightness>k__BackingField;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF80", Offset = "0xE5CF80")]
	private int <ID_Fogginess>k__BackingField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CF90", Offset = "0xE5CF90")]
	private int <ID_Directionality>k__BackingField;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CFA0", Offset = "0xE5CFA0")]
	private int <ID_MoonHaloPower>k__BackingField;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CFB0", Offset = "0xE5CFB0")]
	private int <ID_MoonHaloColor>k__BackingField;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CFC0", Offset = "0xE5CFC0")]
	private int <ID_CloudSize>k__BackingField;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CFD0", Offset = "0xE5CFD0")]
	private int <ID_CloudOpacity>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CFE0", Offset = "0xE5CFE0")]
	private int <ID_CloudCoverage>k__BackingField;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5CFF0", Offset = "0xE5CFF0")]
	private int <ID_CloudSharpness>k__BackingField;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D000", Offset = "0xE5D000")]
	private int <ID_CloudDensity>k__BackingField;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D010", Offset = "0xE5D010")]
	private int <ID_CloudColoring>k__BackingField;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D020", Offset = "0xE5D020")]
	private int <ID_CloudAttenuation>k__BackingField;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D030", Offset = "0xE5D030")]
	private int <ID_CloudSaturation>k__BackingField;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D040", Offset = "0xE5D040")]
	private int <ID_CloudScattering>k__BackingField;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D050", Offset = "0xE5D050")]
	private int <ID_CloudBrightness>k__BackingField;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D060", Offset = "0xE5D060")]
	private int <ID_CloudMultiplier>k__BackingField;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D070", Offset = "0xE5D070")]
	private int <ID_CloudOffset>k__BackingField;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D080", Offset = "0xE5D080")]
	private int <ID_CloudWind>k__BackingField;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D090", Offset = "0xE5D090")]
	private int <ID_StarSize>k__BackingField;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D0A0", Offset = "0xE5D0A0")]
	private int <ID_StarBrightness>k__BackingField;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D0B0", Offset = "0xE5D0B0")]
	private int <ID_StarVisibility>k__BackingField;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D0C0", Offset = "0xE5D0C0")]
	private int <ID_SunMeshContrast>k__BackingField;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D0D0", Offset = "0xE5D0D0")]
	private int <ID_SunMeshBrightness>k__BackingField;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D0E0", Offset = "0xE5D0E0")]
	private int <ID_MoonMeshContrast>k__BackingField;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D0F0", Offset = "0xE5D0F0")]
	private int <ID_MoonMeshBrightness>k__BackingField;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D100", Offset = "0xE5D100")]
	private int <ID_kBetaMie>k__BackingField;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D110", Offset = "0xE5D110")]
	private int <ID_kSun>k__BackingField;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D120", Offset = "0xE5D120")]
	private int <ID_k4PI>k__BackingField;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D130", Offset = "0xE5D130")]
	private int <ID_kRadius>k__BackingField;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D140", Offset = "0xE5D140")]
	private int <ID_kScale>k__BackingField;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D150", Offset = "0xE5D150")]
	private int <ID_World2Sky>k__BackingField;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D160", Offset = "0xE5D160")]
	private int <ID_Sky2World>k__BackingField;

	[Token(Token = "0x17000040")]
	public int ID_SunLightColor
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x2267D38", Offset = "0x2267D38", VA = "0x2267D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A08C", Offset = "0xE6A08C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x2267D40", Offset = "0x2267D40", VA = "0x2267D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A09C", Offset = "0xE6A09C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public int ID_MoonLightColor
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x2267D48", Offset = "0x2267D48", VA = "0x2267D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0AC", Offset = "0xE6A0AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x2267D50", Offset = "0x2267D50", VA = "0x2267D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0BC", Offset = "0xE6A0BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public int ID_SunSkyColor
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x2267D58", Offset = "0x2267D58", VA = "0x2267D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0CC", Offset = "0xE6A0CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x2267D60", Offset = "0x2267D60", VA = "0x2267D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0DC", Offset = "0xE6A0DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public int ID_MoonSkyColor
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x2267D68", Offset = "0x2267D68", VA = "0x2267D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0EC", Offset = "0xE6A0EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x2267D70", Offset = "0x2267D70", VA = "0x2267D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A0FC", Offset = "0xE6A0FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public int ID_SunMeshColor
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x2267D78", Offset = "0x2267D78", VA = "0x2267D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A10C", Offset = "0xE6A10C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x2267D80", Offset = "0x2267D80", VA = "0x2267D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A11C", Offset = "0xE6A11C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int ID_MoonMeshColor
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x2267D88", Offset = "0x2267D88", VA = "0x2267D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A12C", Offset = "0xE6A12C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x2267D90", Offset = "0x2267D90", VA = "0x2267D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A13C", Offset = "0xE6A13C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public int ID_SunCloudColor
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x2267D98", Offset = "0x2267D98", VA = "0x2267D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A14C", Offset = "0xE6A14C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x2267DA0", Offset = "0x2267DA0", VA = "0x2267DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A15C", Offset = "0xE6A15C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public int ID_MoonCloudColor
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x2267DA8", Offset = "0x2267DA8", VA = "0x2267DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A16C", Offset = "0xE6A16C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x2267DB0", Offset = "0x2267DB0", VA = "0x2267DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A17C", Offset = "0xE6A17C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public int ID_FogColor
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x2267DB8", Offset = "0x2267DB8", VA = "0x2267DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A18C", Offset = "0xE6A18C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x2267DC0", Offset = "0x2267DC0", VA = "0x2267DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A19C", Offset = "0xE6A19C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public int ID_GroundColor
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x2267DC8", Offset = "0x2267DC8", VA = "0x2267DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A1AC", Offset = "0xE6A1AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x2267DD0", Offset = "0x2267DD0", VA = "0x2267DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A1BC", Offset = "0xE6A1BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public int ID_AmbientColor
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x2267DD8", Offset = "0x2267DD8", VA = "0x2267DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A1CC", Offset = "0xE6A1CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x2267DE0", Offset = "0x2267DE0", VA = "0x2267DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A1DC", Offset = "0xE6A1DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int ID_SunDirection
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x2267DE8", Offset = "0x2267DE8", VA = "0x2267DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A1EC", Offset = "0xE6A1EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x2267DF0", Offset = "0x2267DF0", VA = "0x2267DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A1FC", Offset = "0xE6A1FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public int ID_MoonDirection
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x2267DF8", Offset = "0x2267DF8", VA = "0x2267DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A20C", Offset = "0xE6A20C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x2267E00", Offset = "0x2267E00", VA = "0x2267E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A21C", Offset = "0xE6A21C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int ID_LightDirection
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x2267E08", Offset = "0x2267E08", VA = "0x2267E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A22C", Offset = "0xE6A22C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x2267E10", Offset = "0x2267E10", VA = "0x2267E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A23C", Offset = "0xE6A23C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public int ID_LocalSunDirection
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x2267E18", Offset = "0x2267E18", VA = "0x2267E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A24C", Offset = "0xE6A24C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x2267E20", Offset = "0x2267E20", VA = "0x2267E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A25C", Offset = "0xE6A25C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public int ID_LocalMoonDirection
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x2267E28", Offset = "0x2267E28", VA = "0x2267E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A26C", Offset = "0xE6A26C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x2267E30", Offset = "0x2267E30", VA = "0x2267E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A27C", Offset = "0xE6A27C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public int ID_LocalLightDirection
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x2267E38", Offset = "0x2267E38", VA = "0x2267E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A28C", Offset = "0xE6A28C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x2267E40", Offset = "0x2267E40", VA = "0x2267E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A29C", Offset = "0xE6A29C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public int ID_Contrast
	{
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x2267E48", Offset = "0x2267E48", VA = "0x2267E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A2AC", Offset = "0xE6A2AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000100")]
		[Address(RVA = "0x2267E50", Offset = "0x2267E50", VA = "0x2267E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A2BC", Offset = "0xE6A2BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public int ID_Brightness
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x2267E58", Offset = "0x2267E58", VA = "0x2267E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A2CC", Offset = "0xE6A2CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x2267E60", Offset = "0x2267E60", VA = "0x2267E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A2DC", Offset = "0xE6A2DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public int ID_Fogginess
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x2267E68", Offset = "0x2267E68", VA = "0x2267E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A2EC", Offset = "0xE6A2EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x2267E70", Offset = "0x2267E70", VA = "0x2267E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A2FC", Offset = "0xE6A2FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public int ID_Directionality
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x2267E78", Offset = "0x2267E78", VA = "0x2267E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A30C", Offset = "0xE6A30C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x2267E80", Offset = "0x2267E80", VA = "0x2267E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A31C", Offset = "0xE6A31C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public int ID_MoonHaloPower
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x2267E88", Offset = "0x2267E88", VA = "0x2267E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A32C", Offset = "0xE6A32C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x2267E90", Offset = "0x2267E90", VA = "0x2267E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A33C", Offset = "0xE6A33C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public int ID_MoonHaloColor
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x2267E98", Offset = "0x2267E98", VA = "0x2267E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A34C", Offset = "0xE6A34C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x2267EA0", Offset = "0x2267EA0", VA = "0x2267EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A35C", Offset = "0xE6A35C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public int ID_CloudSize
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x2267EA8", Offset = "0x2267EA8", VA = "0x2267EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A36C", Offset = "0xE6A36C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x2267EB0", Offset = "0x2267EB0", VA = "0x2267EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A37C", Offset = "0xE6A37C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public int ID_CloudOpacity
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x2267EB8", Offset = "0x2267EB8", VA = "0x2267EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A38C", Offset = "0xE6A38C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x2267EC0", Offset = "0x2267EC0", VA = "0x2267EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A39C", Offset = "0xE6A39C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public int ID_CloudCoverage
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x2267EC8", Offset = "0x2267EC8", VA = "0x2267EC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3AC", Offset = "0xE6A3AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x2267ED0", Offset = "0x2267ED0", VA = "0x2267ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3BC", Offset = "0xE6A3BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public int ID_CloudSharpness
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x2267ED8", Offset = "0x2267ED8", VA = "0x2267ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3CC", Offset = "0xE6A3CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x2267EE0", Offset = "0x2267EE0", VA = "0x2267EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3DC", Offset = "0xE6A3DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public int ID_CloudDensity
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x2267EE8", Offset = "0x2267EE8", VA = "0x2267EE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3EC", Offset = "0xE6A3EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x2267EF0", Offset = "0x2267EF0", VA = "0x2267EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A3FC", Offset = "0xE6A3FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public int ID_CloudColoring
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x2267EF8", Offset = "0x2267EF8", VA = "0x2267EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A40C", Offset = "0xE6A40C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x2267F00", Offset = "0x2267F00", VA = "0x2267F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A41C", Offset = "0xE6A41C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int ID_CloudAttenuation
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x2267F08", Offset = "0x2267F08", VA = "0x2267F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A42C", Offset = "0xE6A42C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x2267F10", Offset = "0x2267F10", VA = "0x2267F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A43C", Offset = "0xE6A43C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public int ID_CloudSaturation
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x2267F18", Offset = "0x2267F18", VA = "0x2267F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A44C", Offset = "0xE6A44C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x2267F20", Offset = "0x2267F20", VA = "0x2267F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A45C", Offset = "0xE6A45C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int ID_CloudScattering
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x2267F28", Offset = "0x2267F28", VA = "0x2267F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A46C", Offset = "0xE6A46C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x2267F30", Offset = "0x2267F30", VA = "0x2267F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A47C", Offset = "0xE6A47C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public int ID_CloudBrightness
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x2267F38", Offset = "0x2267F38", VA = "0x2267F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A48C", Offset = "0xE6A48C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x2267F40", Offset = "0x2267F40", VA = "0x2267F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A49C", Offset = "0xE6A49C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public int ID_CloudMultiplier
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x2267F48", Offset = "0x2267F48", VA = "0x2267F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A4AC", Offset = "0xE6A4AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x2267F50", Offset = "0x2267F50", VA = "0x2267F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A4BC", Offset = "0xE6A4BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public int ID_CloudOffset
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x2267F58", Offset = "0x2267F58", VA = "0x2267F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A4CC", Offset = "0xE6A4CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x2267F60", Offset = "0x2267F60", VA = "0x2267F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A4DC", Offset = "0xE6A4DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public int ID_CloudWind
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x2267F68", Offset = "0x2267F68", VA = "0x2267F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A4EC", Offset = "0xE6A4EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x2267F70", Offset = "0x2267F70", VA = "0x2267F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A4FC", Offset = "0xE6A4FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public int ID_StarSize
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x2267F78", Offset = "0x2267F78", VA = "0x2267F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A50C", Offset = "0xE6A50C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x2267F80", Offset = "0x2267F80", VA = "0x2267F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A51C", Offset = "0xE6A51C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public int ID_StarBrightness
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x2267F88", Offset = "0x2267F88", VA = "0x2267F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A52C", Offset = "0xE6A52C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x2267F90", Offset = "0x2267F90", VA = "0x2267F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A53C", Offset = "0xE6A53C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public int ID_StarVisibility
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x2267F98", Offset = "0x2267F98", VA = "0x2267F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A54C", Offset = "0xE6A54C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x2267FA0", Offset = "0x2267FA0", VA = "0x2267FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A55C", Offset = "0xE6A55C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public int ID_SunMeshContrast
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x2267FA8", Offset = "0x2267FA8", VA = "0x2267FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A56C", Offset = "0xE6A56C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x2267FB0", Offset = "0x2267FB0", VA = "0x2267FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A57C", Offset = "0xE6A57C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public int ID_SunMeshBrightness
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x2267FB8", Offset = "0x2267FB8", VA = "0x2267FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A58C", Offset = "0xE6A58C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x2267FC0", Offset = "0x2267FC0", VA = "0x2267FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A59C", Offset = "0xE6A59C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public int ID_MoonMeshContrast
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x2267FC8", Offset = "0x2267FC8", VA = "0x2267FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A5AC", Offset = "0xE6A5AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x2267FD0", Offset = "0x2267FD0", VA = "0x2267FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A5BC", Offset = "0xE6A5BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public int ID_MoonMeshBrightness
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x2267FD8", Offset = "0x2267FD8", VA = "0x2267FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A5CC", Offset = "0xE6A5CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x2267FE0", Offset = "0x2267FE0", VA = "0x2267FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A5DC", Offset = "0xE6A5DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public int ID_kBetaMie
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x2267FE8", Offset = "0x2267FE8", VA = "0x2267FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A5EC", Offset = "0xE6A5EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x2267FF0", Offset = "0x2267FF0", VA = "0x2267FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A5FC", Offset = "0xE6A5FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public int ID_kSun
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x2267FF8", Offset = "0x2267FF8", VA = "0x2267FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A60C", Offset = "0xE6A60C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x2268000", Offset = "0x2268000", VA = "0x2268000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A61C", Offset = "0xE6A61C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public int ID_k4PI
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x2268008", Offset = "0x2268008", VA = "0x2268008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A62C", Offset = "0xE6A62C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x2268010", Offset = "0x2268010", VA = "0x2268010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A63C", Offset = "0xE6A63C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public int ID_kRadius
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x2268018", Offset = "0x2268018", VA = "0x2268018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A64C", Offset = "0xE6A64C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x2268020", Offset = "0x2268020", VA = "0x2268020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A65C", Offset = "0xE6A65C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public int ID_kScale
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x2268028", Offset = "0x2268028", VA = "0x2268028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A66C", Offset = "0xE6A66C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x2268030", Offset = "0x2268030", VA = "0x2268030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A67C", Offset = "0xE6A67C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public int ID_World2Sky
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x2268038", Offset = "0x2268038", VA = "0x2268038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A68C", Offset = "0xE6A68C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x2268040", Offset = "0x2268040", VA = "0x2268040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A69C", Offset = "0xE6A69C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public int ID_Sky2World
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x2268048", Offset = "0x2268048", VA = "0x2268048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A6AC", Offset = "0xE6A6AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x2268050", Offset = "0x2268050", VA = "0x2268050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A6BC", Offset = "0xE6A6BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x2268058", Offset = "0x2268058", VA = "0x2268058")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x226876C", Offset = "0x226876C", VA = "0x226876C")]
	public TOD_Resources()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE51204", Offset = "0xE51204")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE51204", Offset = "0xE51204")]
public class TOD_Scattering : TOD_ImageEffect
{
	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader ScatteringShader;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader ScreenClearShader;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader SkyMaskShader;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D DitheringTexture;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D170", Offset = "0xE5D170")]
	public bool SinglePass;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D1A8", Offset = "0xE5D1A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5D1A8", Offset = "0xE5D1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5D1A8", Offset = "0xE5D1A8")]
	public float GlobalDensity;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5D220", Offset = "0xE5D220")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D220", Offset = "0xE5D220")]
	public float HeightFalloff;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D274", Offset = "0xE5D274")]
	public float StartDistance;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D2AC", Offset = "0xE5D2AC")]
	public float ZeroLevel;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5D2E4", Offset = "0xE5D2E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D2E4", Offset = "0xE5D2E4")]
	public ResolutionType Resolution;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D344", Offset = "0xE5D344")]
	[AttributeAttribute(Name = "TOD_RangeAttribute", RVA = "0xE5D344", Offset = "0xE5D344")]
	public int BlurIterations;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D398", Offset = "0xE5D398")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5D398", Offset = "0xE5D398")]
	public float BlurRadius;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D3E8", Offset = "0xE5D3E8")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5D3E8", Offset = "0xE5D3E8")]
	public float MaxRadius;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material scatteringMaterial;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material screenClearMaterial;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material skyMaskMaterial;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x2268774", Offset = "0x2268774", VA = "0x2268774")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x2268930", Offset = "0x2268930", VA = "0x2268930")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x2268A84", Offset = "0x2268A84", VA = "0x2268A84")]
	protected void OnPreCull()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x2268B34", Offset = "0x2268B34", VA = "0x2268B34")]
	protected void OnPostRender()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x2268BE4", Offset = "0x2268BE4", VA = "0x2268BE4")]
	[ImageEffectOpaque]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x2268E64", Offset = "0x2268E64", VA = "0x2268E64")]
	public TOD_Scattering()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE51298", Offset = "0xE51298")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE51298", Offset = "0xE51298")]
[ExecuteInEditMode]
public class TOD_Shadows : TOD_ImageEffect
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader ShadowShader;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D CloudTexture;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5D438", Offset = "0xE5D438")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5D438", Offset = "0xE5D438")]
	public float Cutoff;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5D48C", Offset = "0xE5D48C")]
	public float Fade;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5D4A4", Offset = "0xE5D4A4")]
	public float Intensity;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material shadowMaterial;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x2268EF8", Offset = "0x2268EF8", VA = "0x2268EF8")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x2268FBC", Offset = "0x2268FBC", VA = "0x2268FBC")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x2269068", Offset = "0x2269068", VA = "0x2269068")]
	[ImageEffectOpaque]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x2269280", Offset = "0x2269280", VA = "0x2269280")]
	public TOD_Shadows()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5132C", Offset = "0xE5132C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5132C", Offset = "0xE5132C")]
public class TOD_Sky : MonoBehaviour
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<TOD_Sky> instances;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int probeRenderID;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D4BC", Offset = "0xE5D4BC")]
	public TOD_ColorSpaceType ColorSpace;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D4F4", Offset = "0xE5D4F4")]
	public TOD_ColorRangeType ColorRange;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D52C", Offset = "0xE5D52C")]
	public TOD_ColorOutputType ColorOutput;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D564", Offset = "0xE5D564")]
	public TOD_SkyQualityType SkyQuality;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D59C", Offset = "0xE5D59C")]
	public TOD_CloudQualityType CloudQuality;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D5D4", Offset = "0xE5D5D4")]
	public TOD_MeshQualityType MeshQuality;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D60C", Offset = "0xE5D60C")]
	public TOD_StarQualityType StarQuality;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TOD_CycleParameters Cycle;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TOD_WorldParameters World;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TOD_AtmosphereParameters Atmosphere;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TOD_DayParameters Day;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TOD_NightParameters Night;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TOD_SunParameters Sun;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TOD_MoonParameters Moon;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TOD_StarParameters Stars;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TOD_CloudParameters Clouds;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TOD_LightParameters Light;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TOD_FogParameters Fog;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TOD_AmbientParameters Ambient;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TOD_ReflectionParameters Reflection;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D644", Offset = "0xE5D644")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D654", Offset = "0xE5D654")]
	private TOD_Components <Components>k__BackingField;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D664", Offset = "0xE5D664")]
	private TOD_Resources <Resources>k__BackingField;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D674", Offset = "0xE5D674")]
	private bool <IsDay>k__BackingField;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D684", Offset = "0xE5D684")]
	private bool <IsNight>k__BackingField;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D694", Offset = "0xE5D694")]
	private float <LerpValue>k__BackingField;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D6A4", Offset = "0xE5D6A4")]
	private float <SunZenith>k__BackingField;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D6B4", Offset = "0xE5D6B4")]
	private float <SunAltitude>k__BackingField;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D6C4", Offset = "0xE5D6C4")]
	private float <SunAzimuth>k__BackingField;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D6D4", Offset = "0xE5D6D4")]
	private float <MoonZenith>k__BackingField;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D6E4", Offset = "0xE5D6E4")]
	private float <MoonAltitude>k__BackingField;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D6F4", Offset = "0xE5D6F4")]
	private float <MoonAzimuth>k__BackingField;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D704", Offset = "0xE5D704")]
	private float <SunsetTime>k__BackingField;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D714", Offset = "0xE5D714")]
	private float <SunriseTime>k__BackingField;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D724", Offset = "0xE5D724")]
	private float <LocalSiderealTime>k__BackingField;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D734", Offset = "0xE5D734")]
	private float <SunVisibility>k__BackingField;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D744", Offset = "0xE5D744")]
	private float <MoonVisibility>k__BackingField;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D754", Offset = "0xE5D754")]
	private Vector3 <SunDirection>k__BackingField;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D764", Offset = "0xE5D764")]
	private Vector3 <MoonDirection>k__BackingField;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D774", Offset = "0xE5D774")]
	private Vector3 <LightDirection>k__BackingField;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D784", Offset = "0xE5D784")]
	private Vector3 <LocalSunDirection>k__BackingField;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D794", Offset = "0xE5D794")]
	private Vector3 <LocalMoonDirection>k__BackingField;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D7A4", Offset = "0xE5D7A4")]
	private Vector3 <LocalLightDirection>k__BackingField;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D7B4", Offset = "0xE5D7B4")]
	private Color <SunLightColor>k__BackingField;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D7C4", Offset = "0xE5D7C4")]
	private Color <MoonLightColor>k__BackingField;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D7D4", Offset = "0xE5D7D4")]
	private Color <SunRayColor>k__BackingField;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D7E4", Offset = "0xE5D7E4")]
	private Color <MoonRayColor>k__BackingField;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D7F4", Offset = "0xE5D7F4")]
	private Color <SunSkyColor>k__BackingField;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D804", Offset = "0xE5D804")]
	private Color <MoonSkyColor>k__BackingField;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D814", Offset = "0xE5D814")]
	private Color <SunMeshColor>k__BackingField;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D824", Offset = "0xE5D824")]
	private Color <MoonMeshColor>k__BackingField;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D834", Offset = "0xE5D834")]
	private Color <SunCloudColor>k__BackingField;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D844", Offset = "0xE5D844")]
	private Color <MoonCloudColor>k__BackingField;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D854", Offset = "0xE5D854")]
	private Color <FogColor>k__BackingField;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D864", Offset = "0xE5D864")]
	private Color <GroundColor>k__BackingField;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D874", Offset = "0xE5D874")]
	private Color <AmbientColor>k__BackingField;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D884", Offset = "0xE5D884")]
	private Color <MoonHaloColor>k__BackingField;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5D894", Offset = "0xE5D894")]
	private ReflectionProbe <Probe>k__BackingField;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeSinceLightUpdate;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float timeSinceAmbientUpdate;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float timeSinceReflectionUpdate;

	[Token(Token = "0x40001F7")]
	private const int TOD_SAMPLES = 2;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private Vector3 kBetaMie;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector4 kSun;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector4 k4PI;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Vector4 kRadius;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector4 kScale;

	[Token(Token = "0x40001FD")]
	private const float pi = (float)Math.PI;

	[Token(Token = "0x40001FE")]
	private const float tau = (float)Math.PI * 2f;

	[Token(Token = "0x17000072")]
	public static List<TOD_Sky> Instances
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x22692EC", Offset = "0x22692EC", VA = "0x22692EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public static TOD_Sky Instance
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x2262D50", Offset = "0x2262D50", VA = "0x2262D50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public bool Initialized
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x2269350", Offset = "0x2269350", VA = "0x2269350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A6EC", Offset = "0xE6A6EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x2269358", Offset = "0x2269358", VA = "0x2269358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A6FC", Offset = "0xE6A6FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool Headless
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x2269364", Offset = "0x2269364", VA = "0x2269364")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000076")]
	public TOD_Components Components
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x2269384", Offset = "0x2269384", VA = "0x2269384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A70C", Offset = "0xE6A70C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x226938C", Offset = "0x226938C", VA = "0x226938C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A71C", Offset = "0xE6A71C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public TOD_Resources Resources
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x2269394", Offset = "0x2269394", VA = "0x2269394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A72C", Offset = "0xE6A72C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x226939C", Offset = "0x226939C", VA = "0x226939C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A73C", Offset = "0xE6A73C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool IsDay
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x22693A4", Offset = "0x22693A4", VA = "0x22693A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A74C", Offset = "0xE6A74C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x22693AC", Offset = "0x22693AC", VA = "0x22693AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A75C", Offset = "0xE6A75C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public bool IsNight
	{
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x22693B8", Offset = "0x22693B8", VA = "0x22693B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A76C", Offset = "0xE6A76C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x22693C0", Offset = "0x22693C0", VA = "0x22693C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A77C", Offset = "0xE6A77C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public float Radius
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x22693CC", Offset = "0x22693CC", VA = "0x22693CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007B")]
	public float Diameter
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x22693FC", Offset = "0x22693FC", VA = "0x22693FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007C")]
	public float LerpValue
	{
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x226942C", Offset = "0x226942C", VA = "0x226942C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A78C", Offset = "0xE6A78C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x2269434", Offset = "0x2269434", VA = "0x2269434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A79C", Offset = "0xE6A79C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public float SunZenith
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x226943C", Offset = "0x226943C", VA = "0x226943C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7AC", Offset = "0xE6A7AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x2269444", Offset = "0x2269444", VA = "0x2269444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7BC", Offset = "0xE6A7BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public float SunAltitude
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x226944C", Offset = "0x226944C", VA = "0x226944C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7CC", Offset = "0xE6A7CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x2269454", Offset = "0x2269454", VA = "0x2269454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7DC", Offset = "0xE6A7DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public float SunAzimuth
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x226945C", Offset = "0x226945C", VA = "0x226945C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7EC", Offset = "0xE6A7EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x2269464", Offset = "0x2269464", VA = "0x2269464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A7FC", Offset = "0xE6A7FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public float MoonZenith
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x226946C", Offset = "0x226946C", VA = "0x226946C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A80C", Offset = "0xE6A80C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x2269474", Offset = "0x2269474", VA = "0x2269474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A81C", Offset = "0xE6A81C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float MoonAltitude
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x226947C", Offset = "0x226947C", VA = "0x226947C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A82C", Offset = "0xE6A82C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x2269484", Offset = "0x2269484", VA = "0x2269484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A83C", Offset = "0xE6A83C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public float MoonAzimuth
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x226948C", Offset = "0x226948C", VA = "0x226948C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A84C", Offset = "0xE6A84C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x2269494", Offset = "0x2269494", VA = "0x2269494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A85C", Offset = "0xE6A85C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public float SunsetTime
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x226949C", Offset = "0x226949C", VA = "0x226949C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A86C", Offset = "0xE6A86C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x22694A4", Offset = "0x22694A4", VA = "0x22694A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A87C", Offset = "0xE6A87C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public float SunriseTime
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x22694AC", Offset = "0x22694AC", VA = "0x22694AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A88C", Offset = "0xE6A88C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x22694B4", Offset = "0x22694B4", VA = "0x22694B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A89C", Offset = "0xE6A89C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public float LocalSiderealTime
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x22694BC", Offset = "0x22694BC", VA = "0x22694BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8AC", Offset = "0xE6A8AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x22694C4", Offset = "0x22694C4", VA = "0x22694C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8BC", Offset = "0xE6A8BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float LightZenith
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x22694CC", Offset = "0x22694CC", VA = "0x22694CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000087")]
	public float LightIntensity
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x22694DC", Offset = "0x22694DC", VA = "0x22694DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000088")]
	public float SunVisibility
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x2269504", Offset = "0x2269504", VA = "0x2269504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8CC", Offset = "0xE6A8CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x226950C", Offset = "0x226950C", VA = "0x226950C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8DC", Offset = "0xE6A8DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public float MoonVisibility
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x2269514", Offset = "0x2269514", VA = "0x2269514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8EC", Offset = "0xE6A8EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x226951C", Offset = "0x226951C", VA = "0x226951C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A8FC", Offset = "0xE6A8FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public Vector3 SunDirection
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x2269524", Offset = "0x2269524", VA = "0x2269524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A90C", Offset = "0xE6A90C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x2269530", Offset = "0x2269530", VA = "0x2269530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A91C", Offset = "0xE6A91C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public Vector3 MoonDirection
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x226953C", Offset = "0x226953C", VA = "0x226953C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A92C", Offset = "0xE6A92C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x2269548", Offset = "0x2269548", VA = "0x2269548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A93C", Offset = "0xE6A93C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public Vector3 LightDirection
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x2269554", Offset = "0x2269554", VA = "0x2269554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A94C", Offset = "0xE6A94C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x2269564", Offset = "0x2269564", VA = "0x2269564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A95C", Offset = "0xE6A95C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public Vector3 LocalSunDirection
	{
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x2269574", Offset = "0x2269574", VA = "0x2269574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A96C", Offset = "0xE6A96C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x2269584", Offset = "0x2269584", VA = "0x2269584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A97C", Offset = "0xE6A97C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public Vector3 LocalMoonDirection
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x2269594", Offset = "0x2269594", VA = "0x2269594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A98C", Offset = "0xE6A98C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x22695A4", Offset = "0x22695A4", VA = "0x22695A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A99C", Offset = "0xE6A99C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public Vector3 LocalLightDirection
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x22695B4", Offset = "0x22695B4", VA = "0x22695B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9AC", Offset = "0xE6A9AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x22695C4", Offset = "0x22695C4", VA = "0x22695C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9BC", Offset = "0xE6A9BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public Color SunLightColor
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x22695D4", Offset = "0x22695D4", VA = "0x22695D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9CC", Offset = "0xE6A9CC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x22695E8", Offset = "0x22695E8", VA = "0x22695E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9DC", Offset = "0xE6A9DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public Color MoonLightColor
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x22695FC", Offset = "0x22695FC", VA = "0x22695FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9EC", Offset = "0xE6A9EC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x2269610", Offset = "0x2269610", VA = "0x2269610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6A9FC", Offset = "0xE6A9FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public Color LightColor
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x2269624", Offset = "0x2269624", VA = "0x2269624")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000093")]
	public Color SunRayColor
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x226964C", Offset = "0x226964C", VA = "0x226964C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA0C", Offset = "0xE6AA0C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x2269660", Offset = "0x2269660", VA = "0x2269660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA1C", Offset = "0xE6AA1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public Color MoonRayColor
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x2269674", Offset = "0x2269674", VA = "0x2269674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA2C", Offset = "0xE6AA2C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x2269688", Offset = "0x2269688", VA = "0x2269688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA3C", Offset = "0xE6AA3C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public Color SunSkyColor
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x226969C", Offset = "0x226969C", VA = "0x226969C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA4C", Offset = "0xE6AA4C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x22696B0", Offset = "0x22696B0", VA = "0x22696B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA5C", Offset = "0xE6AA5C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public Color MoonSkyColor
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x22696C4", Offset = "0x22696C4", VA = "0x22696C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA6C", Offset = "0xE6AA6C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x22696D8", Offset = "0x22696D8", VA = "0x22696D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA7C", Offset = "0xE6AA7C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public Color SunMeshColor
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x22696EC", Offset = "0x22696EC", VA = "0x22696EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA8C", Offset = "0xE6AA8C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x2269700", Offset = "0x2269700", VA = "0x2269700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AA9C", Offset = "0xE6AA9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public Color MoonMeshColor
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x2269714", Offset = "0x2269714", VA = "0x2269714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AAAC", Offset = "0xE6AAAC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x2269728", Offset = "0x2269728", VA = "0x2269728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AABC", Offset = "0xE6AABC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public Color SunCloudColor
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x226973C", Offset = "0x226973C", VA = "0x226973C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AACC", Offset = "0xE6AACC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x2269750", Offset = "0x2269750", VA = "0x2269750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AADC", Offset = "0xE6AADC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public Color MoonCloudColor
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x2269764", Offset = "0x2269764", VA = "0x2269764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AAEC", Offset = "0xE6AAEC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x2269778", Offset = "0x2269778", VA = "0x2269778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AAFC", Offset = "0xE6AAFC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public Color FogColor
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x226978C", Offset = "0x226978C", VA = "0x226978C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB0C", Offset = "0xE6AB0C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x22697A0", Offset = "0x22697A0", VA = "0x22697A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB1C", Offset = "0xE6AB1C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public Color GroundColor
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x22697B4", Offset = "0x22697B4", VA = "0x22697B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB2C", Offset = "0xE6AB2C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x22697C8", Offset = "0x22697C8", VA = "0x22697C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB3C", Offset = "0xE6AB3C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public Color AmbientColor
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x22697DC", Offset = "0x22697DC", VA = "0x22697DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB4C", Offset = "0xE6AB4C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x22697F0", Offset = "0x22697F0", VA = "0x22697F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB5C", Offset = "0xE6AB5C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public Color MoonHaloColor
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x2269804", Offset = "0x2269804", VA = "0x2269804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB6C", Offset = "0xE6AB6C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x2269818", Offset = "0x2269818", VA = "0x2269818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB7C", Offset = "0xE6AB7C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public ReflectionProbe Probe
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x226982C", Offset = "0x226982C", VA = "0x226982C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB8C", Offset = "0xE6AB8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x2269834", Offset = "0x2269834", VA = "0x2269834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AB9C", Offset = "0xE6AB9C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x2269844", Offset = "0x2269844", VA = "0x2269844")]
	public Vector3 OrbitalToUnity(float radius, float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x22698B4", Offset = "0x22698B4", VA = "0x22698B4")]
	public Vector3 OrbitalToLocal(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x2269910", Offset = "0x2269910", VA = "0x2269910")]
	public Color SampleAtmosphere(Vector3 direction, bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x226A03C", Offset = "0x226A03C", VA = "0x226A03C")]
	public SphericalHarmonicsL2 RenderToSphericalHarmonics()
	{
		return default(SphericalHarmonicsL2);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x226A0C0", Offset = "0x226A0C0", VA = "0x226A0C0")]
	public SphericalHarmonicsL2 RenderToSphericalHarmonics(float intensity, float saturation)
	{
		return default(SphericalHarmonicsL2);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x226A6E4", Offset = "0x226A6E4", VA = "0x226A6E4")]
	public void RenderToCubemap([Optional] RenderTexture targetTexture)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x226AA30", Offset = "0x226AA30", VA = "0x226AA30")]
	public Color SampleFogColor(bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x226ABEC", Offset = "0x226ABEC", VA = "0x226ABEC")]
	public Color SampleSkyColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x226AC60", Offset = "0x226AC60", VA = "0x226AC60")]
	public Color SampleEquatorColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x226ACC8", Offset = "0x226ACC8", VA = "0x226ACC8")]
	public void UpdateFog()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x226AD30", Offset = "0x226AD30", VA = "0x226AD30")]
	public void UpdateAmbient()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x226AF94", Offset = "0x226AF94", VA = "0x226AF94")]
	public void UpdateReflection()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x226676C", Offset = "0x226676C", VA = "0x226676C")]
	public void LoadParameters(string xml)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x226B034", Offset = "0x226B034", VA = "0x226B034")]
	public string SaveParameters()
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x226B38C", Offset = "0x226B38C", VA = "0x226B38C")]
	private void UpdateQualitySettings()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x226B884", Offset = "0x226B884", VA = "0x226B884")]
	private void UpdateRenderSettings()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x226B950", Offset = "0x226B950", VA = "0x226B950")]
	private void UpdateShaderKeywords()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x226BBF4", Offset = "0x226BBF4", VA = "0x226BBF4")]
	private void UpdateShaderProperties()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x226C45C", Offset = "0x226C45C", VA = "0x226C45C")]
	private float ShaderScale(float inCos)
	{
		return default(float);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x226C4C4", Offset = "0x226C4C4", VA = "0x226C4C4")]
	private float ShaderMiePhase(float eyeCos, float eyeCos2)
	{
		return default(float);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x226C50C", Offset = "0x226C50C", VA = "0x226C50C")]
	private float ShaderRayleighPhase(float eyeCos2)
	{
		return default(float);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x226C51C", Offset = "0x226C51C", VA = "0x226C51C")]
	private Color ShaderNightSkyColor(Vector3 dir)
	{
		return default(Color);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x226C56C", Offset = "0x226C56C", VA = "0x226C56C")]
	private Color ShaderMoonHaloColor(Vector3 dir)
	{
		return default(Color);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x2269EF8", Offset = "0x2269EF8", VA = "0x2269EF8")]
	private Color TOD_HDR2LDR(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x226C608", Offset = "0x226C608", VA = "0x226C608")]
	private Color TOD_GAMMA2LINEAR(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x2269F98", Offset = "0x2269F98", VA = "0x2269F98")]
	private Color TOD_LINEAR2GAMMA(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x2269960", Offset = "0x2269960", VA = "0x2269960")]
	private Color ShaderScatteringColor(Vector3 dir, bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x226C644", Offset = "0x226C644", VA = "0x226C644")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x226C754", Offset = "0x226C754", VA = "0x226C754")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x226C86C", Offset = "0x226C86C", VA = "0x226C86C")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x226C8C8", Offset = "0x226C8C8", VA = "0x226C8C8")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x226C870", Offset = "0x226C870", VA = "0x226C870")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x226DE74", Offset = "0x226DE74", VA = "0x226DE74")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x226C8CC", Offset = "0x226C8CC", VA = "0x226C8CC")]
	private void UpdateScattering()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x226C9E0", Offset = "0x226C9E0", VA = "0x226C9E0")]
	private void UpdateCelestials()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x226DEA8", Offset = "0x226DEA8", VA = "0x226DEA8")]
	public TOD_Sky()
	{
	}
}
[Token(Token = "0x2000040")]
public class TOD_Time : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D8A4", Offset = "0xE5D8A4")]
	[AttributeAttribute(Name = "TOD_MinAttribute", RVA = "0xE5D8A4", Offset = "0xE5D8A4")]
	public float DayLengthInMinutes;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D8F4", Offset = "0xE5D8F4")]
	public bool ProgressTime;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D92C", Offset = "0xE5D92C")]
	public bool UseDeviceDate;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D964", Offset = "0xE5D964")]
	public bool UseDeviceTime;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D99C", Offset = "0xE5D99C")]
	public bool UseTimeCurve;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE5D9D4", Offset = "0xE5D9D4")]
	public AnimationCurve TimeCurve;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TOD_Sky sky;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationCurve timeCurve;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationCurve timeCurveInverse;

	[Token(Token = "0x14000001")]
	public event Action OnSecond
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x2AAE558", Offset = "0x2AAE558", VA = "0x2AAE558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABAC", Offset = "0xE6ABAC")]
		add
		{
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x2AAE5F8", Offset = "0x2AAE5F8", VA = "0x2AAE5F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABBC", Offset = "0xE6ABBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action OnMinute
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x2AAE698", Offset = "0x2AAE698", VA = "0x2AAE698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABCC", Offset = "0xE6ABCC")]
		add
		{
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x2AAE738", Offset = "0x2AAE738", VA = "0x2AAE738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABDC", Offset = "0xE6ABDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action OnHour
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x2AAE7D8", Offset = "0x2AAE7D8", VA = "0x2AAE7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABEC", Offset = "0xE6ABEC")]
		add
		{
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x2AAE878", Offset = "0x2AAE878", VA = "0x2AAE878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ABFC", Offset = "0xE6ABFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnDay
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x2AAE918", Offset = "0x2AAE918", VA = "0x2AAE918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC0C", Offset = "0xE6AC0C")]
		add
		{
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x2AAE9B8", Offset = "0x2AAE9B8", VA = "0x2AAE9B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC1C", Offset = "0xE6AC1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnMonth
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x2AAEA58", Offset = "0x2AAEA58", VA = "0x2AAEA58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC2C", Offset = "0xE6AC2C")]
		add
		{
		}
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x2AAEAF8", Offset = "0x2AAEAF8", VA = "0x2AAEAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC3C", Offset = "0xE6AC3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action OnYear
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x2AAEB98", Offset = "0x2AAEB98", VA = "0x2AAEB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC4C", Offset = "0xE6AC4C")]
		add
		{
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x2AAEC38", Offset = "0x2AAEC38", VA = "0x2AAEC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC5C", Offset = "0xE6AC5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action OnSunrise
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x2AAECD8", Offset = "0x2AAECD8", VA = "0x2AAECD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC6C", Offset = "0xE6AC6C")]
		add
		{
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x2AAED78", Offset = "0x2AAED78", VA = "0x2AAED78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC7C", Offset = "0xE6AC7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action OnSunset
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x2AAEE18", Offset = "0x2AAEE18", VA = "0x2AAEE18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC8C", Offset = "0xE6AC8C")]
		add
		{
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x2AAEEB8", Offset = "0x2AAEEB8", VA = "0x2AAEEB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AC9C", Offset = "0xE6AC9C")]
		remove
		{
		}
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x2AAEF58", Offset = "0x2AAEF58", VA = "0x2AAEF58")]
	public void RefreshTimeCurve()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x2AAF22C", Offset = "0x2AAF22C", VA = "0x2AAF22C")]
	public float ApplyTimeCurve(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x2AAF348", Offset = "0x2AAF348", VA = "0x2AAF348")]
	public void AddHours(float hours, bool adjust = true)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x2AAF5D0", Offset = "0x2AAF5D0", VA = "0x2AAF5D0")]
	public void AddSeconds(float seconds, bool adjust = true)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x2AAF5E4", Offset = "0x2AAF5E4", VA = "0x2AAF5E4")]
	private void CalculateLinearTangents(Keyframe[] keys)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x2AAF010", Offset = "0x2AAF010", VA = "0x2AAF010")]
	private void ApproximateCurve(AnimationCurve source, out AnimationCurve approxCurve, out AnimationCurve approxInverse)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x2AAF7C0", Offset = "0x2AAF7C0", VA = "0x2AAF7C0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x2AAF968", Offset = "0x2AAF968", VA = "0x2AAF968")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x2AAF9DC", Offset = "0x2AAF9DC", VA = "0x2AAF9DC")]
	public TOD_Time()
	{
	}
}
[Token(Token = "0x2000041")]
public static class TOD_Util
{
	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x2AAFA38", Offset = "0x2AAFA38", VA = "0x2AAFA38")]
	public static Color MulRGB(Color color, float multiplier)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x2AAFA8C", Offset = "0x2AAFA8C", VA = "0x2AAFA8C")]
	public static Color MulRGBA(Color color, float multiplier)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x2AAFAE4", Offset = "0x2AAFAE4", VA = "0x2AAFAE4")]
	public static Color PowRGB(Color color, float power)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x2AAFB98", Offset = "0x2AAFB98", VA = "0x2AAFB98")]
	public static Color PowRGBA(Color color, float power)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x2AAFC5C", Offset = "0x2AAFC5C", VA = "0x2AAFC5C")]
	public static Color SatRGB(Color color, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x2AAFCC8", Offset = "0x2AAFCC8", VA = "0x2AAFCC8")]
	public static Color SatRGBA(Color color, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x2AAFD40", Offset = "0x2AAFD40", VA = "0x2AAFD40")]
	public static Color AdjustRGB(Color color, float intensity, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x2AAFD68", Offset = "0x2AAFD68", VA = "0x2AAFD68")]
	public static Color AdjustRGBA(Color color, float intensity, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x2AAFD90", Offset = "0x2AAFD90", VA = "0x2AAFD90")]
	public static Color ApplyAlpha(Color color)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000042")]
public abstract class TOD_Audio : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioComponent;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x2262B18", Offset = "0x2262B18", VA = "0x2262B18")]
	protected float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x2262BA8", Offset = "0x2262BA8", VA = "0x2262BA8")]
	protected void SetVolume(float value)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x2262C60", Offset = "0x2262C60", VA = "0x2262C60")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x2262CBC", Offset = "0x2262CBC", VA = "0x2262CBC")]
	protected TOD_Audio()
	{
	}
}
[Token(Token = "0x2000043")]
public class TOD_AudioAtDay : TOD_Audio
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxVolume;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x2262CC4", Offset = "0x2262CC4", VA = "0x2262CC4")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x2262E28", Offset = "0x2262E28", VA = "0x2262E28")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x2262EEC", Offset = "0x2262EEC", VA = "0x2262EEC")]
	public TOD_AudioAtDay()
	{
	}
}
[Token(Token = "0x2000044")]
public class TOD_AudioAtNight : TOD_Audio
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxVolume;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x2262EFC", Offset = "0x2262EFC", VA = "0x2262EFC")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x2262F88", Offset = "0x2262F88", VA = "0x2262F88")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x226304C", Offset = "0x226304C", VA = "0x226304C")]
	public TOD_AudioAtNight()
	{
	}
}
[Token(Token = "0x2000045")]
public class TOD_AudioAtTime : TOD_Audio
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Volume;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x226305C", Offset = "0x226305C", VA = "0x226305C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x22630E8", Offset = "0x22630E8", VA = "0x22630E8")]
	public TOD_AudioAtTime()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class TOD_Light : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light lightComponent;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x2265F9C", Offset = "0x2265F9C", VA = "0x2265F9C")]
	protected float GetIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x226602C", Offset = "0x226602C", VA = "0x226602C")]
	protected void SetIntensity(float value)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x22660E4", Offset = "0x22660E4", VA = "0x22660E4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x2266140", Offset = "0x2266140", VA = "0x2266140")]
	protected TOD_Light()
	{
	}
}
[Token(Token = "0x2000047")]
public class TOD_LightAtDay : TOD_Light
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x2266148", Offset = "0x2266148", VA = "0x2266148")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x22661D4", Offset = "0x22661D4", VA = "0x22661D4")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x2266298", Offset = "0x2266298", VA = "0x2266298")]
	public TOD_LightAtDay()
	{
	}
}
[Token(Token = "0x2000048")]
public class TOD_LightAtNight : TOD_Light
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x22662A8", Offset = "0x22662A8", VA = "0x22662A8")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x2266334", Offset = "0x2266334", VA = "0x2266334")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x22663F8", Offset = "0x22663F8", VA = "0x22663F8")]
	public TOD_LightAtNight()
	{
	}
}
[Token(Token = "0x2000049")]
public class TOD_LightAtTime : TOD_Light
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Intensity;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x2266408", Offset = "0x2266408", VA = "0x2266408")]
	protected void Update()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x2266494", Offset = "0x2266494", VA = "0x2266494")]
	public TOD_LightAtTime()
	{
	}
}
[Token(Token = "0x200004A")]
public class TOD_LoadSkyFromFile : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_Sky sky;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset textAsset;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x2266650", Offset = "0x2266650", VA = "0x2266650")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x2266ABC", Offset = "0x2266ABC", VA = "0x2266ABC")]
	public TOD_LoadSkyFromFile()
	{
	}
}
[Token(Token = "0x200004B")]
public abstract class TOD_Particle : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particleComponent;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x2266D58", Offset = "0x2266D58", VA = "0x2266D58")]
	protected float GetEmission()
	{
		return default(float);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x2266DFC", Offset = "0x2266DFC", VA = "0x2266DFC")]
	protected void SetEmission(float value)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x2266EA4", Offset = "0x2266EA4", VA = "0x2266EA4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x2266F00", Offset = "0x2266F00", VA = "0x2266F00")]
	protected TOD_Particle()
	{
	}
}
[Token(Token = "0x200004C")]
public class TOD_ParticleAtDay : TOD_Particle
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxEmission;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x2266F08", Offset = "0x2266F08", VA = "0x2266F08")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x2266F94", Offset = "0x2266F94", VA = "0x2266F94")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x2267058", Offset = "0x2267058", VA = "0x2267058")]
	public TOD_ParticleAtDay()
	{
	}
}
[Token(Token = "0x200004D")]
public class TOD_ParticleAtNight : TOD_Particle
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxEmission;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x2267068", Offset = "0x2267068", VA = "0x2267068")]
	protected void Start()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x22670F4", Offset = "0x22670F4", VA = "0x22670F4")]
	protected void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x22671B8", Offset = "0x22671B8", VA = "0x22671B8")]
	public TOD_ParticleAtNight()
	{
	}
}
[Token(Token = "0x200004E")]
public class TOD_ParticleAtTime : TOD_Particle
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Emission;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x22671C8", Offset = "0x22671C8", VA = "0x22671C8")]
	protected void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x2267254", Offset = "0x2267254", VA = "0x2267254")]
	public TOD_ParticleAtTime()
	{
	}
}
[Token(Token = "0x200004F")]
public abstract class TOD_Render : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rendererComponent;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x2267A64", Offset = "0x2267A64", VA = "0x2267A64")]
	protected void SetState(bool value)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x2267B04", Offset = "0x2267B04", VA = "0x2267B04")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x2267B60", Offset = "0x2267B60", VA = "0x2267B60")]
	protected TOD_Render()
	{
	}
}
[Token(Token = "0x2000050")]
public class TOD_RenderAtDay : TOD_Render
{
	[Token(Token = "0x6000211")]
	[Address(RVA = "0x2267B68", Offset = "0x2267B68", VA = "0x2267B68")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x2267BD8", Offset = "0x2267BD8", VA = "0x2267BD8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x2267C48", Offset = "0x2267C48", VA = "0x2267C48")]
	public TOD_RenderAtDay()
	{
	}
}
[Token(Token = "0x2000051")]
public class TOD_RenderAtNight : TOD_Render
{
	[Token(Token = "0x6000214")]
	[Address(RVA = "0x2267C50", Offset = "0x2267C50", VA = "0x2267C50")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x2267CC0", Offset = "0x2267CC0", VA = "0x2267CC0")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x2267D30", Offset = "0x2267D30", VA = "0x2267D30")]
	public TOD_RenderAtNight()
	{
	}
}
[Token(Token = "0x2000052")]
public class TOD_WeatherManager : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	public enum RainType
	{
		[Token(Token = "0x400023B")]
		None,
		[Token(Token = "0x400023C")]
		Light,
		[Token(Token = "0x400023D")]
		Heavy
	}

	[Token(Token = "0x2000054")]
	public enum CloudType
	{
		[Token(Token = "0x400023F")]
		None,
		[Token(Token = "0x4000240")]
		Few,
		[Token(Token = "0x4000241")]
		Scattered,
		[Token(Token = "0x4000242")]
		Broken,
		[Token(Token = "0x4000243")]
		Overcast
	}

	[Token(Token = "0x2000055")]
	public enum AtmosphereType
	{
		[Token(Token = "0x4000245")]
		Clear,
		[Token(Token = "0x4000246")]
		Storm,
		[Token(Token = "0x4000247")]
		Dust,
		[Token(Token = "0x4000248")]
		Fog
	}

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem RainParticleSystem;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RainType Rain;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CloudType Clouds;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AtmosphereType Atmosphere;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cloudOpacityMax;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cloudBrightnessMax;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float atmosphereBrightnessMax;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rainEmissionMax;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cloudOpacity;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float cloudCoverage;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float cloudBrightness;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float atmosphereFog;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float atmosphereBrightness;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rainEmission;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x2AAFDD0", Offset = "0x2AAFDD0", VA = "0x2AAFDD0")]
	private float GetRainEmission()
	{
		return default(float);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x2AAFE74", Offset = "0x2AAFE74", VA = "0x2AAFE74")]
	private void SetRainEmission(float value)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x2AAFF1C", Offset = "0x2AAFF1C", VA = "0x2AAFF1C")]
	protected void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x2AAFFFC", Offset = "0x2AAFFFC", VA = "0x2AAFFFC")]
	protected void Update()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x2AB028C", Offset = "0x2AB028C", VA = "0x2AB028C")]
	public TOD_WeatherManager()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE513D0", Offset = "0xE513D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE513D0", Offset = "0xE513D0")]
public class InnerMap : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform _innerMapRect;

	[Token(Token = "0x170000A0")]
	public RectTransform InnerMapRect
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x20AE794", Offset = "0x20AE794", VA = "0x20AE794")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x20AE844", Offset = "0x20AE844", VA = "0x20AE844")]
	public float getMapRadius()
	{
		return default(float);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x20AE8E0", Offset = "0x20AE8E0", VA = "0x20AE8E0")]
	public InnerMap()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE51454", Offset = "0xE51454")]
public class MapArrow : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform _arrowRect;

	[Token(Token = "0x170000A1")]
	public RectTransform ArrowRect
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x24DEE10", Offset = "0x24DEE10", VA = "0x24DEE10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x24DEF38", Offset = "0x24DEF38", VA = "0x24DEF38")]
	public void localrotate(Quaternion quat)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x24DEF88", Offset = "0x24DEF88", VA = "0x24DEF88")]
	public void rotate(Quaternion quat)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x24DEFD8", Offset = "0x24DEFD8", VA = "0x24DEFD8")]
	public MapArrow()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5148C", Offset = "0xE5148C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5148C", Offset = "0xE5148C")]
public class MapCanvasController : MonoBehaviour
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MapCanvasController _instance;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<RectTransform> Teammate_tranform;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<WUnit> AllPlayersWUit;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerTransform;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radarDistance;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool hideOutOfRadius;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool useOpacity;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool rotateMap;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float scale;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minimalOpacity;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject MGo;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image parentNode;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image QuestionImage;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action IintMapMaker;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action DestroyMapMaker;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public GameObject markerImageObject;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<int, Image> QuestionUI;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public List<Image> FixationRotate;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool offset;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 v33;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RectTransform mapRect;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private InnerMap innerMap;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MapArrow mapArrow;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MarkerGroup markerGroup;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float innerMapRadius;

	[Token(Token = "0x170000A2")]
	public static MapCanvasController Instance
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x24DEFE0", Offset = "0x24DEFE0", VA = "0x24DEFE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A3")]
	public InnerMap InnerMapComponent
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x24DF0DC", Offset = "0x24DF0DC", VA = "0x24DF0DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A4")]
	public MarkerGroup MarkerGroup
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x24DF0E4", Offset = "0x24DF0E4", VA = "0x24DF0E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x24DF0EC", Offset = "0x24DF0EC", VA = "0x24DF0EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x24DF0F0", Offset = "0x24DF0F0", VA = "0x24DF0F0")]
	public void Dostrat()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x24DF3E8", Offset = "0x24DF3E8", VA = "0x24DF3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x24DF978", Offset = "0x24DF978", VA = "0x24DF978")]
	public void checkIn(MapMarker marker)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x24DFFAC", Offset = "0x24DFFAC", VA = "0x24DFFAC")]
	public void SetScale(int ID_Map)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x24DFF3C", Offset = "0x24DFF3C", VA = "0x24DFF3C")]
	private float distanceToPlayer(Vector3 other)
	{
		return default(float);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x24E01C0", Offset = "0x24E01C0", VA = "0x24E01C0")]
	public MapCanvasController()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE51510", Offset = "0xE51510")]
public class MapMarker : MonoBehaviour
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite markerSprite;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float markerSize;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isActive;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool IintPos;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image markerImage;

	[Token(Token = "0x170000A5")]
	public Image MarkerImage
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x279A644", Offset = "0x279A644", VA = "0x279A644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x279A64C", Offset = "0x279A64C", VA = "0x279A64C")]
	private void DOInit()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x279AAAC", Offset = "0x279AAAC", VA = "0x279AAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x279ABA8", Offset = "0x279ABA8", VA = "0x279ABA8")]
	private void DoDestroy()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x279AC7C", Offset = "0x279AC7C", VA = "0x279AC7C")]
	public void show()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x279AD1C", Offset = "0x279AD1C", VA = "0x279AD1C")]
	public void hide()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x279ADBC", Offset = "0x279ADBC", VA = "0x279ADBC")]
	public bool isVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x279AE5C", Offset = "0x279AE5C", VA = "0x279AE5C")]
	public Vector3 getPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x279AE8C", Offset = "0x279AE8C", VA = "0x279AE8C")]
	public void setLocalPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x279AF58", Offset = "0x279AF58", VA = "0x279AF58")]
	public void setOpacity(float opacity)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x279B028", Offset = "0x279B028", VA = "0x279B028")]
	public MapMarker()
	{
	}
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE51548", Offset = "0xE51548")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE51548", Offset = "0xE51548")]
public class MarkerGroup : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform _rectTransform;

	[Token(Token = "0x170000A6")]
	public RectTransform MarkerGroupRect
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x279A9FC", Offset = "0x279A9FC", VA = "0x279A9FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x279B040", Offset = "0x279B040", VA = "0x279B040")]
	public MarkerGroup()
	{
	}
}
[Token(Token = "0x200005B")]
public class RecordCamera : MonoBehaviour
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mainCamera;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera subCamera;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sensitivity;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotaSensitivity;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fieldOfViewSensitivity;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float MouseSensitivity;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float MoveSensitivity;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseXAxis;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mouseYAxis;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float moveXAxis;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float moveYAxis;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_RotationMouseInput;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_Vector3YAxisUp;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_tempVector3YAxisUp;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_Vector3YAxisDown;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_tempVector3YAxisDown;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_Vector3YAxisLeft;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_tempVector3YAxisLeft;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_Vector3YAxisRight;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_tempVector3YAxisRight;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float Vector3YAxisFor;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tempVector3YAxisFor;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float Vector3YAxisBack;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float tempVector3YAxisBack;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float Vector3YAxisUp;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float tempVector3YAxisUp;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float Vector3YAxisDown;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float tempVector3YAxisDown;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float Vector3YAxisLeft;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float tempVector3YAxisLeft;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float Vector3YAxisRight;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float tempVector3YAxisRight;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float minimumY;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float maximumY;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float movespeed;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rotationspeed;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float depthOfFieldspeed;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float rotationX;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float rotationY;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 MoveX;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 MoveY;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float depth;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool is1;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool is2;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool is3;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	private bool is4;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x271B68C", Offset = "0x271B68C", VA = "0x271B68C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x271B698", Offset = "0x271B698", VA = "0x271B698")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x271B760", Offset = "0x271B760", VA = "0x271B760")]
	private void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x271CA84", Offset = "0x271CA84", VA = "0x271CA84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x271CA88", Offset = "0x271CA88", VA = "0x271CA88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6ACAC", Offset = "0xE6ACAC")]
	public void Test()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x271CA8C", Offset = "0x271CA8C", VA = "0x271CA8C")]
	public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x271CB28", Offset = "0x271CB28", VA = "0x271CB28")]
	public RecordCamera()
	{
	}
}
[Token(Token = "0x200005C")]
public class RecordCameraAudioControl : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float Music;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Voice;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x271CB58", Offset = "0x271CB58", VA = "0x271CB58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x271CD10", Offset = "0x271CD10", VA = "0x271CD10")]
	public RecordCameraAudioControl()
	{
	}
}
[Token(Token = "0x200005D")]
public class TeleporterLayer : MonoBehaviour
{
	[Token(Token = "0x6000243")]
	[Address(RVA = "0x2AB1F14", Offset = "0x2AB1F14", VA = "0x2AB1F14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x2AB1FEC", Offset = "0x2AB1FEC", VA = "0x2AB1FEC")]
	public TeleporterLayer()
	{
	}
}
[Token(Token = "0x200005E")]
public class Bird : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int animCount;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedX;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedZ;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float amplitudeX;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float amplitudeY;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float amplitudeZ;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canChangeAnim;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float angleX;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float angleY;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float angleZ;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x2907928", Offset = "0x2907928", VA = "0x2907928")]
	public Bird()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x2907938", Offset = "0x2907938", VA = "0x2907938")]
	private Vector3 GetNewPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x29079B0", Offset = "0x29079B0", VA = "0x29079B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x29079B4", Offset = "0x29079B4", VA = "0x29079B4")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x2907B34", Offset = "0x2907B34", VA = "0x2907B34")]
	private void Start()
	{
	}
}
[Token(Token = "0x200005F")]
public class TestAgentBlock : MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxBlockTime;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float blockDistance;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalDistance;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent aiagent;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float curBlockTime;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool isBlock;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 oldPos;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 newPos;

	[Token(Token = "0x170000A7")]
	public bool IsBlock
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x2AB2000", Offset = "0x2AB2000", VA = "0x2AB2000")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x2AB1FF4", Offset = "0x2AB1FF4", VA = "0x2AB1FF4")]
		set
		{
		}
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x2AB2008", Offset = "0x2AB2008", VA = "0x2AB2008")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x2AB20A0", Offset = "0x2AB20A0", VA = "0x2AB20A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x2AB20F0", Offset = "0x2AB20F0", VA = "0x2AB20F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x2AB20F4", Offset = "0x2AB20F4", VA = "0x2AB20F4")]
	private void TestBlock2()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x2AB224C", Offset = "0x2AB224C", VA = "0x2AB224C")]
	private void TestBlock()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x2AB2384", Offset = "0x2AB2384", VA = "0x2AB2384")]
	public TestAgentBlock()
	{
	}
}
[Token(Token = "0x2000060")]
public enum eAIState
{
	[Token(Token = "0x40002B2")]
	Idle,
	[Token(Token = "0x40002B3")]
	Patrol,
	[Token(Token = "0x40002B4")]
	Attack,
	[Token(Token = "0x40002B5")]
	WarningAwake
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE515CC", Offset = "0xE515CC")]
public class AnimatorMove : ActionTask<Transform>
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> keepDistance;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> OffsetDis;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<string> AniStr;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<MoveTargetType> e_BlendTree;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> AverageVelocity;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool IsDirectSteer;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Animator animator;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 worldDir;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 inertialDir;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int TargetIndex;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 stageTarget;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int index;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float CurDis;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float time;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float moveTime;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float rotTime;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion curRot;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Quaternion tarRot;

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x212FA10", Offset = "0x212FA10", VA = "0x212FA10", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x212FE24", Offset = "0x212FE24", VA = "0x212FE24")]
	private void SetMove()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x212FF28", Offset = "0x212FF28", VA = "0x212FF28")]
	private void StepLookAt()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x2130468", Offset = "0x2130468", VA = "0x2130468", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x213072C", Offset = "0x213072C", VA = "0x213072C", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x2130738", Offset = "0x2130738", VA = "0x2130738", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x212FB7C", Offset = "0x212FB7C", VA = "0x212FB7C")]
	private void NavPoint()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x2130138", Offset = "0x2130138", VA = "0x2130138")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x2130748", Offset = "0x2130748", VA = "0x2130748")]
	public AnimatorMove()
	{
	}
}
[Token(Token = "0x2000062")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51604", Offset = "0xE51604")]
public class AnimatorMoveAroundTheTarget : ActionTask<Transform>
{
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5163C", Offset = "0xE5163C")]
	public class GetIncludedAngle : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<WUnit> owner;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<WUnit> target;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> Angle;

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x20F0528", Offset = "0x20F0528", VA = "0x20F0528", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x20F052C", Offset = "0x20F052C", VA = "0x20F052C")]
		public void GetCurAngle()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x20F06AC", Offset = "0x20F06AC", VA = "0x20F06AC")]
		public GetIncludedAngle()
		{
		}
	}

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float keepDistance;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> MinRadius;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> MaxRadius;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> Angle;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<int> AngleOffset;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<string> AniNameStr;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> AverageVelocity;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int index;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator animator;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 worldDir;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 inertialDir;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3[] pathCorners;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isNavMeshPoint;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 stageTarget;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int TargetIndex;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float CurDis;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float time;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float moveTime;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x21307C8", Offset = "0x21307C8", VA = "0x21307C8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x2130CA8", Offset = "0x2130CA8", VA = "0x2130CA8")]
	public void GetCurAngle()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x213085C", Offset = "0x213085C", VA = "0x213085C")]
	public void GetMoveTargetPoint()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x2130E18", Offset = "0x2130E18", VA = "0x2130E18")]
	private void ChangeRotDir()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x2130E9C", Offset = "0x2130E9C", VA = "0x2130E9C")]
	private void SetMove()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x2131240", Offset = "0x2131240", VA = "0x2131240", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x2130F98", Offset = "0x2130F98", VA = "0x2130F98")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x21313BC", Offset = "0x21313BC", VA = "0x21313BC", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x21313C8", Offset = "0x21313C8", VA = "0x21313C8", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x21313D8", Offset = "0x21313D8", VA = "0x21313D8")]
	public AnimatorMoveAroundTheTarget()
	{
	}
}
[Token(Token = "0x2000064")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51674", Offset = "0xE51674")]
public class SetAnimatorMove : ActionTask<Transform>
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool move;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<string> ChangeAniStr;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<MoveTargetType> e_BlendTree;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator animator;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int index;

	[Token(Token = "0x170000A8")]
	protected override string info
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x2154030", Offset = "0x2154030", VA = "0x2154030", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x2154090", Offset = "0x2154090", VA = "0x2154090", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x2154128", Offset = "0x2154128", VA = "0x2154128")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x21542F0", Offset = "0x21542F0", VA = "0x21542F0")]
	public SetAnimatorMove()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE516AC", Offset = "0xE516AC")]
public class MonsterAnimatorMove : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> OffsetDis;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 targetPosition;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float keepDistance;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<string> AniStr;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> AverageVelocity;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool IsDirectSteer;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Animator animator;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 worldDir;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 inertialDir;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int TargetIndex;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 stageTarget;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int index;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float CurDis;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float time;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float moveTime;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float rotTime;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion curRot;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Quaternion tarRot;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x279F6CC", Offset = "0x279F6CC", VA = "0x279F6CC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x279FD38", Offset = "0x279FD38", VA = "0x279FD38")]
	private void SetMove()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x279FDFC", Offset = "0x279FDFC", VA = "0x279FDFC")]
	private void StepLookAt()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x27A02EC", Offset = "0x27A02EC", VA = "0x27A02EC", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x27A0684", Offset = "0x27A0684", VA = "0x27A0684", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x27A0764", Offset = "0x27A0764", VA = "0x27A0764", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x279F90C", Offset = "0x279F90C", VA = "0x279F90C")]
	private void NavPoint()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x279FFDC", Offset = "0x279FFDC", VA = "0x279FFDC")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x27A0774", Offset = "0x27A0774", VA = "0x27A0774")]
	private Vector3 RandomPoint(Vector3 center, float range)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x27A0988", Offset = "0x27A0988", VA = "0x27A0988")]
	public MonsterAnimatorMove()
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE516E4", Offset = "0xE516E4")]
public class SetMonsterMoveParame : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool move;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator animator;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int index;

	[Token(Token = "0x170000A9")]
	protected override string info
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x215617C", Offset = "0x215617C", VA = "0x215617C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x21561DC", Offset = "0x21561DC", VA = "0x21561DC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x2156274", Offset = "0x2156274", VA = "0x2156274")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x2156394", Offset = "0x2156394", VA = "0x2156394")]
	public SetMonsterMoveParame()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5171C", Offset = "0xE5171C")]
public class MonsterMove : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> speed;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> OffsetDis;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 targetPosition;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float keepDistance;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<string> AniStr;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator animator;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 worldDir;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 inertialDir;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int TargetIndex;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 stageTarget;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int index;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x27AD800", Offset = "0x27AD800", VA = "0x27AD800", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x27ADD5C", Offset = "0x27ADD5C", VA = "0x27ADD5C")]
	private void SetMove()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x27AE11C", Offset = "0x27AE11C", VA = "0x27AE11C", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x27ADE0C", Offset = "0x27ADE0C", VA = "0x27ADE0C")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x27AE240", Offset = "0x27AE240", VA = "0x27AE240", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x27AE2E8", Offset = "0x27AE2E8", VA = "0x27AE2E8", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x27AE2F8", Offset = "0x27AE2F8", VA = "0x27AE2F8")]
	public MonsterMove()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51754", Offset = "0xE51754")]
public class SetMonsterMove : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool move;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator animator;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int index;

	[Token(Token = "0x170000AA")]
	protected override string info
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x2155F18", Offset = "0x2155F18", VA = "0x2155F18", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x2155F78", Offset = "0x2155F78", VA = "0x2155F78", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x2156010", Offset = "0x2156010", VA = "0x2156010")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x2156130", Offset = "0x2156130", VA = "0x2156130")]
	public SetMonsterMove()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5178C", Offset = "0xE5178C")]
public class MonsterMoveRogulite : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> speed;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> OffsetDis;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float keepDistance;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<string> AniStr;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator animator;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 worldDir;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 inertialDir;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int TargetIndex;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 stageTarget;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int index;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float CurDis;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float time;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x27AE350", Offset = "0x27AE350", VA = "0x27AE350", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x27AEA5C", Offset = "0x27AEA5C", VA = "0x27AEA5C")]
	private void SetMove()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x27AEE64", Offset = "0x27AEE64", VA = "0x27AEE64", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x27AF204", Offset = "0x27AF204", VA = "0x27AF204", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x27AF2AC", Offset = "0x27AF2AC", VA = "0x27AF2AC", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x27AE5D0", Offset = "0x27AE5D0", VA = "0x27AE5D0")]
	private void NavPoint()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x27AEB54", Offset = "0x27AEB54", VA = "0x27AEB54")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x27AF2BC", Offset = "0x27AF2BC", VA = "0x27AF2BC")]
	private Vector3 RandomPoint(Vector3 center, float range)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x27AF4D0", Offset = "0x27AF4D0", VA = "0x27AF4D0")]
	public MonsterMoveRogulite()
	{
	}
}
[Token(Token = "0x200006A")]
public class MonsterTeleporting : MonoBehaviour
{
	[Token(Token = "0x600028E")]
	[Address(RVA = "0x2655EB0", Offset = "0x2655EB0", VA = "0x2655EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x2655EB4", Offset = "0x2655EB4", VA = "0x2655EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x2655EB8", Offset = "0x2655EB8", VA = "0x2655EB8")]
	public MonsterTeleporting()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE517C4", Offset = "0xE517C4")]
public class MoveAroundTheTarget : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE517FC", Offset = "0xE517FC")]
	public class GetIncludedAngle : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<WUnit> owner;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<WUnit> target;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> Angle;

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x205CC2C", Offset = "0x205CC2C", VA = "0x205CC2C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x205CC30", Offset = "0x205CC30", VA = "0x205CC30")]
		public void GetCurAngle()
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x205CDB0", Offset = "0x205CDB0", VA = "0x205CDB0")]
		public GetIncludedAngle()
		{
		}
	}

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float keepDistance;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> MinRadius;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> MaxRadius;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> Angle;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<int> AngleOffset;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<string> AniNameStr;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<string> AniTreeBoolStr;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int index;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator animator;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 worldDir;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 inertialDir;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3[] pathCorners;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isNavMeshPoint;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 stageTarget;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int TargetIndex;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x2658828", Offset = "0x2658828", VA = "0x2658828", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x2658D54", Offset = "0x2658D54", VA = "0x2658D54")]
	public void GetCurAngle()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x2658908", Offset = "0x2658908", VA = "0x2658908")]
	public void GetMoveTargetPoint()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x2658EC4", Offset = "0x2658EC4", VA = "0x2658EC4")]
	private void ChangeRotDir()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x2658F48", Offset = "0x2658F48", VA = "0x2658F48")]
	private void SetMove()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x26592A0", Offset = "0x26592A0", VA = "0x26592A0", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x2658FF8", Offset = "0x2658FF8", VA = "0x2658FF8")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x26593BC", Offset = "0x26593BC", VA = "0x26593BC", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x2659464", Offset = "0x2659464", VA = "0x2659464", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x2659474", Offset = "0x2659474", VA = "0x2659474")]
	public MoveAroundTheTarget()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51834", Offset = "0xE51834")]
public class DOPathPosList : ActionTask<Transform>
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<NavPointCell>> PointList;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<int> index;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NavPointCell PointCell;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private DOTweenPath tweenPath;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x21C5C38", Offset = "0x21C5C38", VA = "0x21C5C38", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x21C5FF8", Offset = "0x21C5FF8", VA = "0x21C5FF8", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x21C60C4", Offset = "0x21C60C4", VA = "0x21C60C4")]
	public DOPathPosList()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5186C", Offset = "0xE5186C")]
public class DisposeDie : ConditionTask
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetObj;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x24EA460", Offset = "0x24EA460", VA = "0x24EA460", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x24EA4E4", Offset = "0x24EA4E4", VA = "0x24EA4E4")]
	public DisposeDie()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE518A4", Offset = "0xE518A4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE518A4", Offset = "0xE518A4")]
public class GetFightPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> wunit;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<NavPointCell>> FightPointList;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x2255620", Offset = "0x2255620", VA = "0x2255620", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x2255730", Offset = "0x2255730", VA = "0x2255730")]
	public GetFightPoint()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51904", Offset = "0xE51904")]
public class GetIncludedAngle : ActionTask<Transform>
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> wunit;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> IncludedAngle;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2255904", Offset = "0x2255904", VA = "0x2255904", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2255A74", Offset = "0x2255A74", VA = "0x2255A74")]
	public GetIncludedAngle()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5193C", Offset = "0xE5193C")]
public class GetWunitIncludedAngle : ActionTask
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> WunitPos;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> WunitFor;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> IncludedAngle;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x251F64C", Offset = "0x251F64C", VA = "0x251F64C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x251F7CC", Offset = "0x251F7CC", VA = "0x251F7CC")]
	public GetWunitIncludedAngle()
	{
	}
}
[Token(Token = "0x2000072")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51974", Offset = "0xE51974")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE51974", Offset = "0xE51974")]
public class GetNavPoint : ActionTask<Transform>
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> wunit;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<NavPointCell>> PatrolPointList;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<NavPointCell>> FightPointList;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<List<NavPointCell>> NavPointList;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> PatrolPointCount;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> FightPointCount;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<int> NavPointCount;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x2256BA8", Offset = "0x2256BA8", VA = "0x2256BA8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x2256FEC", Offset = "0x2256FEC", VA = "0x2256FEC")]
	public GetNavPoint()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE519D4", Offset = "0xE519D4")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE519D4", Offset = "0xE519D4")]
public class GetPatrolPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> wunit;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<NavPointCell>> PatrolPointList;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x2257600", Offset = "0x2257600", VA = "0x2257600", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x2257710", Offset = "0x2257710", VA = "0x2257710")]
	public GetPatrolPoint()
	{
	}
}
[Token(Token = "0x2000074")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51A34", Offset = "0xE51A34")]
public class GetSpawnPointData : ActionTask
{
	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<int> index;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<SpawnPointInfo> spawnPointInfo;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<MoveTargetType> moveType;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> targetRange;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> speed;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x251EC4C", Offset = "0x251EC4C", VA = "0x251EC4C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x251EE00", Offset = "0x251EE00", VA = "0x251EE00")]
	public GetSpawnPointData()
	{
	}
}
[Token(Token = "0x2000075")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51A6C", Offset = "0xE51A6C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE51A6C", Offset = "0xE51A6C")]
public class LookAtPosition : ActionTask<Transform>
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isHorizontal;

	[Token(Token = "0x170000AB")]
	protected override string info
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x24D93C8", Offset = "0x24D93C8", VA = "0x24D93C8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x24D9438", Offset = "0x24D9438", VA = "0x24D9438", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x24D9518", Offset = "0x24D9518", VA = "0x24D9518")]
	public LookAtPosition()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51AD0", Offset = "0xE51AD0")]
public class ReturnBool : ActionTask
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<bool> retState;

	[Token(Token = "0x170000AC")]
	protected override string info
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x2721078", Offset = "0x2721078", VA = "0x2721078", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x2721118", Offset = "0x2721118", VA = "0x2721118", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x272117C", Offset = "0x272117C", VA = "0x272117C")]
	public ReturnBool()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51B08", Offset = "0xE51B08")]
public class SetRagdollTools : ActionTask
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerObj;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x21576E8", Offset = "0x21576E8", VA = "0x21576E8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x21578D0", Offset = "0x21578D0", VA = "0x21578D0")]
	public SetRagdollTools()
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51B40", Offset = "0xE51B40")]
public class CheckHitAni : ConditionTask
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerObj;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x26657E8", Offset = "0x26657E8", VA = "0x26657E8", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x2665880", Offset = "0x2665880", VA = "0x2665880")]
	public CheckHitAni()
	{
	}
}
[Token(Token = "0x2000079")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51B78", Offset = "0xE51B78")]
public class CheckHitDir : ConditionTask
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerObj;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x2665888", Offset = "0x2665888", VA = "0x2665888", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x2665920", Offset = "0x2665920", VA = "0x2665920")]
	public CheckHitDir()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51BB0", Offset = "0xE51BB0")]
public class SetRagdollStatus : ActionTask
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool HitAniStatus;

	[Token(Token = "0x170000AD")]
	protected override string info
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x2157574", Offset = "0x2157574", VA = "0x2157574", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x21575D4", Offset = "0x21575D4", VA = "0x21575D4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x21576E0", Offset = "0x21576E0", VA = "0x21576E0")]
	public SetRagdollStatus()
	{
	}
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51BE8", Offset = "0xE51BE8")]
public class SetRagdollHitBodys : ActionTask
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<e_BodyParts> e_BodyParts;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<e_BodyDirection> e_BodyDirection;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x21573F4", Offset = "0x21573F4", VA = "0x21573F4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x215756C", Offset = "0x215756C", VA = "0x215756C")]
	public SetRagdollHitBodys()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51C20", Offset = "0xE51C20")]
public class SetStartAddForceStatus : ActionTask
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool StartAddForce;

	[Token(Token = "0x170000AE")]
	protected override string info
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x2157A44", Offset = "0x2157A44", VA = "0x2157A44", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x2157AA4", Offset = "0x2157AA4", VA = "0x2157AA4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x2157BC8", Offset = "0x2157BC8", VA = "0x2157BC8")]
	public SetStartAddForceStatus()
	{
	}
}
[Token(Token = "0x200007D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51C58", Offset = "0xE51C58")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE51C58", Offset = "0xE51C58")]
public class SkillPosMove : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> Owner;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> speed;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> Dis;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 targetPosition;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float keepDistance;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int index;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 stageTarget;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x21602C8", Offset = "0x21602C8", VA = "0x21602C8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x2160720", Offset = "0x2160720", VA = "0x2160720")]
	private void SetMove()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x21607C0", Offset = "0x21607C0", VA = "0x21607C0", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x21608DC", Offset = "0x21608DC", VA = "0x21608DC")]
	public SkillPosMove()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51CBC", Offset = "0xE51CBC")]
public class RandomAltitudeFlight : ActionTask<Transform>
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> keepDistance;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> AverageVelocity;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] pathCorners;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int TargetIndex;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 stageTarget;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float CurDis;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float time;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float moveTime;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rotTime;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion curRot;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion tarRot;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 originPos;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x27172E8", Offset = "0x27172E8", VA = "0x27172E8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x271769C", Offset = "0x271769C", VA = "0x271769C")]
	private void SetMove()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x27177AC", Offset = "0x27177AC", VA = "0x27177AC")]
	private void StepLookAt()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x2717918", Offset = "0x2717918", VA = "0x2717918", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x2717C64", Offset = "0x2717C64", VA = "0x2717C64", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2717C70", Offset = "0x2717C70", VA = "0x2717C70", Slot = "20")]
	protected override void OnPause()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x27173FC", Offset = "0x27173FC", VA = "0x27173FC")]
	private void NavPoint()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x2717C80", Offset = "0x2717C80", VA = "0x2717C80")]
	public RandomAltitudeFlight()
	{
	}
}
[Token(Token = "0x200007F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51CF4", Offset = "0xE51CF4")]
public class SetCanNavmeshWalk : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<bool> isOnNavMesh;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x21555A0", Offset = "0x21555A0", VA = "0x21555A0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x2155634", Offset = "0x2155634", VA = "0x2155634")]
	public SetCanNavmeshWalk()
	{
	}
}
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51D2C", Offset = "0xE51D2C")]
public class CheckCanNavmeshWalk : ConditionTask<NavMeshAgent>
{
	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x2665524", Offset = "0x2665524", VA = "0x2665524", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x2665580", Offset = "0x2665580", VA = "0x2665580")]
	public CheckCanNavmeshWalk()
	{
	}
}
[Token(Token = "0x2000081")]
public enum Direction
{
	[Token(Token = "0x4000386")]
	Left,
	[Token(Token = "0x4000387")]
	Right
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51D64", Offset = "0xE51D64")]
public class SetMonsterStrafeMoveParame : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool move;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<MoveTargetType> e_BlendTree;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator Animator;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int index;

	[Token(Token = "0x170000AF")]
	protected override string info
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x2156DE0", Offset = "0x2156DE0", VA = "0x2156DE0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x2156E40", Offset = "0x2156E40", VA = "0x2156E40", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x2156ED8", Offset = "0x2156ED8", VA = "0x2156ED8")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x2157030", Offset = "0x2157030", VA = "0x2157030")]
	public SetMonsterStrafeMoveParame()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51D9C", Offset = "0xE51D9C")]
public class SetMonsterStrafeMoveAction : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float keepDistance;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<MoveTargetType> e_BlendTree;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<string> stateName;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Animator Animator;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 worldDir;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 inertialDir;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int index;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int TargetIndex;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 stageTarget;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x21563E0", Offset = "0x21563E0", VA = "0x21563E0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x215683C", Offset = "0x215683C", VA = "0x215683C")]
	private void SetMove()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x2156C6C", Offset = "0x2156C6C", VA = "0x2156C6C", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x215693C", Offset = "0x215693C", VA = "0x215693C")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x2156D88", Offset = "0x2156D88", VA = "0x2156D88")]
	public SetMonsterStrafeMoveAction()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51DD4", Offset = "0xE51DD4")]
public class Transport : ActionTask
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> Trans;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x2ABB784", Offset = "0x2ABB784", VA = "0x2ABB784", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x2ABB824", Offset = "0x2ABB824", VA = "0x2ABB824")]
	public Transport()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51E0C", Offset = "0xE51E0C")]
public class TransportEffect : ActionTask
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool IsShow;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x2ABE4A8", Offset = "0x2ABE4A8", VA = "0x2ABE4A8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x2ABE53C", Offset = "0x2ABE53C", VA = "0x2ABE53C")]
	public TransportEffect()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51E44", Offset = "0xE51E44")]
public class ClearTransportEffect : ActionTask
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<RagdollTools> ragdoll;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x26692A0", Offset = "0x26692A0", VA = "0x26692A0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x2669330", Offset = "0x2669330", VA = "0x2669330")]
	public ClearTransportEffect()
	{
	}
}
[Token(Token = "0x2000087")]
public enum BornDirection
{
	[Token(Token = "0x40003A0")]
	Front,
	[Token(Token = "0x40003A1")]
	Left,
	[Token(Token = "0x40003A2")]
	Right,
	[Token(Token = "0x40003A3")]
	Top
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE51E7C", Offset = "0xE51E7C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51E7C", Offset = "0xE51E7C")]
public class CheckDirection : ActionTask<Transform>
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> refPos;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<BornDirection> direction;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x26655CC", Offset = "0x26655CC", VA = "0x26655CC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x266579C", Offset = "0x266579C", VA = "0x266579C")]
	public CheckDirection()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51EE0", Offset = "0xE51EE0")]
public class ComponentSwitch<T> : ActionTask<T> where T : Behaviour
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> enable;

	[Token(Token = "0x170000B0")]
	protected override string info
	{
		[Token(Token = "0x60002E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E5")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002E6")]
	public ComponentSwitch()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51F18", Offset = "0xE51F18")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE51F18", Offset = "0xE51F18")]
public class CreateList<T> : ActionTask
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<string> varName;

	[Token(Token = "0x170000B1")]
	protected override string info
	{
		[Token(Token = "0x60002E7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E8")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002E9")]
	public CreateList()
	{
	}
}
[Token(Token = "0x200008B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE51F7C", Offset = "0xE51F7C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51F7C", Offset = "0xE51F7C")]
public class CreateVariable<T> : ActionTask
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<string> varName;

	[Token(Token = "0x170000B2")]
	protected override string info
	{
		[Token(Token = "0x60002EA")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EB")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002EC")]
	public CreateVariable()
	{
	}
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE51FE0", Offset = "0xE51FE0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE51FE0", Offset = "0xE51FE0")]
public class ExtractGameObject : ActionTask
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> tunit;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<GameObject> resultObject;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x24F66DC", Offset = "0x24F66DC", VA = "0x24F66DC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x24F6800", Offset = "0x24F6800", VA = "0x24F6800")]
	public ExtractGameObject()
	{
	}
}
[Token(Token = "0x200008D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52044", Offset = "0xE52044")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52044", Offset = "0xE52044")]
public class FindAttackPosWUnit : ActionTask<Transform>
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> tunit;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> radius;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x24F8960", Offset = "0x24F8960", VA = "0x24F8960", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x24F8BCC", Offset = "0x24F8BCC", VA = "0x24F8BCC")]
	public FindAttackPosWUnit()
	{
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE520A8", Offset = "0xE520A8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE520A8", Offset = "0xE520A8")]
public class FindAttackPosTranform : ActionTask<Transform>
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> tunit;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> radius;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x24F83E4", Offset = "0x24F83E4", VA = "0x24F83E4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x24F8634", Offset = "0x24F8634", VA = "0x24F8634")]
	public FindAttackPosTranform()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5210C", Offset = "0xE5210C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5210C", Offset = "0xE5210C")]
public class FindAttackPosTranformH : ActionTask<Transform>
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> tunit;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> radius;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> high;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<bool> isRefPos;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> refPos;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 offset;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x24F8680", Offset = "0x24F8680", VA = "0x24F8680", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x24F8914", Offset = "0x24F8914", VA = "0x24F8914")]
	public FindAttackPosTranformH()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52170", Offset = "0xE52170")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52170", Offset = "0xE52170")]
public class FindMinFloatIndex : ActionTask
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<float>> valueList;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<int> index;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x24F8C18", Offset = "0x24F8C18", VA = "0x24F8C18", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x24F8E30", Offset = "0x24F8E30", VA = "0x24F8E30")]
	public FindMinFloatIndex()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE521D4", Offset = "0xE521D4")]
public class FindNearPlayer : ActionTask<Transform>
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x24FA040", Offset = "0x24FA040", VA = "0x24FA040", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x24FA1E0", Offset = "0x24FA1E0", VA = "0x24FA1E0")]
	public FindNearPlayer()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5220C", Offset = "0xE5220C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5220C", Offset = "0xE5220C")]
public class FindPointInRect : ActionTask
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> rect;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> euler;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> scale;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x24FA550", Offset = "0x24FA550", VA = "0x24FA550", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x24FA86C", Offset = "0x24FA86C", VA = "0x24FA86C")]
	public static Vector3 FindPointInRectTransform(Transform transf)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x24FA990", Offset = "0x24FA990", VA = "0x24FA990")]
	public FindPointInRect()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52270", Offset = "0xE52270")]
public class FindRandomPlayer : ActionTask
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> saveAsTargetUnit;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x24FB87C", Offset = "0x24FB87C", VA = "0x24FB87C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x24FB9CC", Offset = "0x24FB9CC", VA = "0x24FB9CC")]
	public FindRandomPlayer()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE522A8", Offset = "0xE522A8")]
public class FindRandomPointInLine : ActionTask<Transform>
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<GameObject> target;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> minDistance;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> maxDistance;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsTargetPos;

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x24FB9D4", Offset = "0x24FB9D4", VA = "0x24FB9D4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x24FBC7C", Offset = "0x24FBC7C", VA = "0x24FBC7C")]
	public FindRandomPointInLine()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE522E0", Offset = "0xE522E0")]
public class FindSpawnPoint : ActionTask<Transform>
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<int> spawnId;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsStrafePosition;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x223E2DC", Offset = "0x223E2DC", VA = "0x223E2DC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x223E30C", Offset = "0x223E30C", VA = "0x223E30C")]
	public FindSpawnPoint()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52318", Offset = "0xE52318")]
public class GetChildTransform : ActionTask
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> rootTransform;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> childContainer;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2255464", Offset = "0x2255464", VA = "0x2255464", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2255618", Offset = "0x2255618", VA = "0x2255618")]
	public GetChildTransform()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52350", Offset = "0xE52350")]
public class GetNearTransform : ActionTask<Transform>
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<Transform>> transforms;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<Transform> result;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2257288", Offset = "0x2257288", VA = "0x2257288", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x22575B4", Offset = "0x22575B4", VA = "0x22575B4")]
	public GetNearTransform()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52388", Offset = "0xE52388")]
public class RandomChildTransform : ActionTask
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> rootTransform;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<Transform> result;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x2717E28", Offset = "0x2717E28", VA = "0x2717E28", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x2717F8C", Offset = "0x2717F8C", VA = "0x2717F8C")]
	public RandomChildTransform()
	{
	}
}
[Token(Token = "0x2000099")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE523C0", Offset = "0xE523C0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE523C0", Offset = "0xE523C0")]
public class GetNavPointMoveType : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<NavPointCell>> NavPointList;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<string> MoveAniStr;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<string> ClimbAniStr;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> CrouchAniStr;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<string> DefaultAniStr;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MoveTargetType MoveType;

	[Token(Token = "0x170000B3")]
	protected override string info
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x2257038", Offset = "0x2257038", VA = "0x2257038", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x225707C", Offset = "0x225707C", VA = "0x225707C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x225723C", Offset = "0x225723C", VA = "0x225723C")]
	public GetNavPointMoveType()
	{
	}
}
[Token(Token = "0x200009A")]
public class JumpMoveData : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMoving;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float currentTime;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GoSpline path;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x20B3D50", Offset = "0x20B3D50", VA = "0x20B3D50")]
	public JumpMoveData()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52420", Offset = "0xE52420")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52420", Offset = "0xE52420")]
public class JumpPointStraight : ActionTask<Transform>
{
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE52484", Offset = "0xE52484")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpPointStraight <>4__this;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percent;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GoSpline path;

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x2058338", Offset = "0x2058338", VA = "0x2058338")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x2058340", Offset = "0x2058340", VA = "0x2058340")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> high;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> time;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Action updateAction;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x20B3D58", Offset = "0x20B3D58", VA = "0x20B3D58", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x20B43AC", Offset = "0x20B43AC", VA = "0x20B43AC", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x20B43C0", Offset = "0x20B43C0", VA = "0x20B43C0", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x20B40D4", Offset = "0x20B40D4", VA = "0x20B40D4")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x20B43F4", Offset = "0x20B43F4", VA = "0x20B43F4")]
	public JumpPointStraight()
	{
	}
}
[Token(Token = "0x200009D")]
public enum e_type_jump_rotation
{
	[Token(Token = "0x40003E5")]
	None,
	[Token(Token = "0x40003E6")]
	LookAt,
	[Token(Token = "0x40003E7")]
	TwoPointDir,
	[Token(Token = "0x40003E8")]
	PointDirAndRotate
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52494", Offset = "0xE52494")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52494", Offset = "0xE52494")]
public class JumpPointStraightOhter : ActionTask<Transform>
{
	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE524F8", Offset = "0xE524F8")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpPointStraightOhter <>4__this;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoSpline path;

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x20584E4", Offset = "0x20584E4", VA = "0x20584E4")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x20584EC", Offset = "0x20584EC", VA = "0x20584EC")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DC2C", Offset = "0xE5DC2C")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> high;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> speed;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> time;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> curPercent;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public e_type_jump_rotation direction;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> lookAtPos;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DC44", Offset = "0xE5DC44")]
	public BBParameter<float> exchangeRotio;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DC5C", Offset = "0xE5DC5C")]
	public BBParameter<float> middleRatio;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public BBParameter<AnimationCurve> exchangeCurve;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BBParameter<float> dirPointRatio;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Action updateAction;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 beginPos;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 prePoint;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 endDir;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float curRotateRatio;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x20B4470", Offset = "0x20B4470", VA = "0x20B4470", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x20B4CC0", Offset = "0x20B4CC0", VA = "0x20B4CC0", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x20B4CD4", Offset = "0x20B4CD4", VA = "0x20B4CD4", Slot = "19")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x20B4888", Offset = "0x20B4888", VA = "0x20B4888")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x20B4B74", Offset = "0x20B4B74", VA = "0x20B4B74")]
	private void InitDirection()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x20B4D08", Offset = "0x20B4D08", VA = "0x20B4D08")]
	private void SetDirection()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x20B5150", Offset = "0x20B5150", VA = "0x20B5150")]
	public JumpPointStraightOhter()
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52508", Offset = "0xE52508")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52508", Offset = "0xE52508")]
public class JumpPointStraightTime : ActionTask<Transform>
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> time;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x20B5260", Offset = "0x20B5260", VA = "0x20B5260", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x20B53B8", Offset = "0x20B53B8", VA = "0x20B53B8")]
	public JumpPointStraightTime()
	{
	}
}
[Token(Token = "0x20000A1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5256C", Offset = "0xE5256C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5256C", Offset = "0xE5256C")]
public class CheckNavmeshWalkPoint : ConditionTask
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> fromPoint;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> toPoint;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> radius;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> checkNavRadius;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DC74", Offset = "0xE5DC74")]
	public BBParameter<int> checkMaxNum;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DC8C", Offset = "0xE5DC8C")]
	public BBParameter<int> checkNum;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> randDis;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> returnPos;

	[Token(Token = "0x170000B4")]
	protected override string info
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x2666D0C", Offset = "0x2666D0C", VA = "0x2666D0C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x2666D50", Offset = "0x2666D50", VA = "0x2666D50", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x26672B4", Offset = "0x26672B4", VA = "0x26672B4")]
	public CheckNavmeshWalkPoint()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE525D0", Offset = "0xE525D0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE525D0", Offset = "0xE525D0")]
public class Bullet1 : ActionTask<Transform>
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<bool> isChild;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isTarget;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Transform> target;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[BlackboardOnly]
	public BBParameter<MonsterBullet> msBullet;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x27D01F0", Offset = "0x27D01F0", VA = "0x27D01F0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x27D079C", Offset = "0x27D079C", VA = "0x27D079C")]
	public Bullet1()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52634", Offset = "0xE52634")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52634", Offset = "0xE52634")]
public class KillBullet : ActionTask
{
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<MonsterBullet> bullet;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x20B5DD8", Offset = "0x20B5DD8", VA = "0x20B5DD8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x20B5E4C", Offset = "0x20B5E4C", VA = "0x20B5E4C")]
	public KillBullet()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52698", Offset = "0xE52698")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52698", Offset = "0xE52698")]
public class BulletNOnTarget : ActionTask<Transform>
{
	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletNum;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<List<Transform>> targetList;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x27D5A90", Offset = "0x27D5A90", VA = "0x27D5A90", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x27D5E9C", Offset = "0x27D5E9C", VA = "0x27D5E9C")]
	public BulletNOnTarget()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE526FC", Offset = "0xE526FC")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE526FC", Offset = "0xE526FC")]
public class BulletN : ActionTask<Transform>
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletNum;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> posDistance;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> radius;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x27D54B0", Offset = "0x27D54B0", VA = "0x27D54B0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x27D59E4", Offset = "0x27D59E4", VA = "0x27D59E4")]
	public BulletN()
	{
	}
}
[Token(Token = "0x20000A6")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52760", Offset = "0xE52760")]
public class CheckMonsterIsHit : ConditionTask
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<bool> IsHit;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x2666384", Offset = "0x2666384", VA = "0x2666384", Slot = "16")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x2666388", Offset = "0x2666388", VA = "0x2666388", Slot = "17")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x26664C8", Offset = "0x26664C8", VA = "0x26664C8", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x2666690", Offset = "0x2666690", VA = "0x2666690")]
	private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x26667D8", Offset = "0x26667D8", VA = "0x26667D8")]
	public CheckMonsterIsHit()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52798", Offset = "0xE52798")]
public class CreateEffectAudioAsync : ActionTask
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int EffectID;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsAutoDestroy;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool IsParent;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int INDEX;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x21BFDBC", Offset = "0x21BFDBC", VA = "0x21BFDBC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x21BFEB4", Offset = "0x21BFEB4", VA = "0x21BFEB4")]
	public CreateEffectAudioAsync()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE527D0", Offset = "0xE527D0")]
public class ClearEffect : ActionTask<Transform>
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x2668FF4", Offset = "0x2668FF4", VA = "0x2668FF4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x2669140", Offset = "0x2669140", VA = "0x2669140")]
	public ClearEffect()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52808", Offset = "0xE52808")]
public class ClearEffectAudioAsync : ActionTask<Transform>
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int EffectID;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public AudioEvent audioEvent;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x266918C", Offset = "0x266918C", VA = "0x266918C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x2669254", Offset = "0x2669254", VA = "0x2669254")]
	public ClearEffectAudioAsync()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52840", Offset = "0xE52840")]
public class GetBossData : ActionTask
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<BossDataController> BossDataController;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<List<int>> SummonMonsterAreaIDList;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<List<int>> SummonFireballAreaIDList;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<List<Transform>> LeftAttackPointList;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<List<Transform>> RightAttackPointList;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x225520C", Offset = "0x225520C", VA = "0x225520C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x225545C", Offset = "0x225545C", VA = "0x225545C")]
	public GetBossData()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52878", Offset = "0xE52878")]
public class GetMonsterAttackPointList : ActionTask
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<Transform>> AttackPointList;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<MonsterNav> MonsterNav;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x22561FC", Offset = "0x22561FC", VA = "0x22561FC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x2256368", Offset = "0x2256368", VA = "0x2256368")]
	public GetMonsterAttackPointList()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE528B0", Offset = "0xE528B0")]
public class GetMonsterRandomAttackPointList : ActionTask
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<Transform>> AttackPointList;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<Vector3>> AttackVector3List;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int MaxCount;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> Vector3List;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x2256548", Offset = "0x2256548", VA = "0x2256548", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x2256880", Offset = "0x2256880", VA = "0x2256880")]
	public List<Vector3> RandomList(List<Vector3> vector3List, int count)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x2256A1C", Offset = "0x2256A1C", VA = "0x2256A1C")]
	public GetMonsterRandomAttackPointList()
	{
	}
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE528E8", Offset = "0xE528E8")]
public class MonsterListPointAttack : ActionTask
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<Vector3>> AttackVector3List;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> pathMaxDis;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x27AD570", Offset = "0x27AD570", VA = "0x27AD570", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x27AD77C", Offset = "0x27AD77C", VA = "0x27AD77C")]
	private Vector3 RandomPoint(Vector3 center, float range)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x27AD7F8", Offset = "0x27AD7F8", VA = "0x27AD7F8")]
	public MonsterListPointAttack()
	{
	}
}
[Token(Token = "0x20000AE")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52920", Offset = "0xE52920")]
public class ButtleBomb : ActionTask
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public e_MonsterChange monsterChange;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool IsBool;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x27DD26C", Offset = "0x27DD26C", VA = "0x27DD26C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x27DD3E4", Offset = "0x27DD3E4", VA = "0x27DD3E4")]
	public ButtleBomb()
	{
	}
}
[Token(Token = "0x20000AF")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52958", Offset = "0xE52958")]
public class CheckNavFireHead : ConditionTask
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<BossDataController> BossDataController;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x2666C34", Offset = "0x2666C34", VA = "0x2666C34", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x2666D04", Offset = "0x2666D04", VA = "0x2666D04")]
	public CheckNavFireHead()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52990", Offset = "0xE52990")]
public class SetNavFireHead : ActionTask
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<BossDataController> BossDataController;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<bool> isFireHead;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x21572DC", Offset = "0x21572DC", VA = "0x21572DC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x21573EC", Offset = "0x21573EC", VA = "0x21573EC")]
	public SetNavFireHead()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE529C8", Offset = "0xE529C8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE529C8", Offset = "0xE529C8")]
public class MonsterAttack : ActionTask
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> damage;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x27A0EF4", Offset = "0x27A0EF4", VA = "0x27A0EF4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x27A1110", Offset = "0x27A1110", VA = "0x27A1110")]
	public MonsterAttack()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52A2C", Offset = "0xE52A2C")]
public class MonsterAttackDelay : ActionTask<Animator>
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DCD4", Offset = "0xE5DCD4")]
	public BBParameter<float> timePercent;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<string> stateName;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> timeout;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> damage;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float attackTimePoint;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Action update;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x27A1118", Offset = "0x27A1118", VA = "0x27A1118", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x27A1198", Offset = "0x27A1198", VA = "0x27A1198", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x27A11B4", Offset = "0x27A11B4", VA = "0x27A11B4")]
	public MonsterAttackDelay()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x27A1230", Offset = "0x27A1230", VA = "0x27A1230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ACE4", Offset = "0xE6ACE4")]
	private void <OnExecute>b__8_0()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x27A13F4", Offset = "0x27A13F4", VA = "0x27A13F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6ACF4", Offset = "0xE6ACF4")]
	private void <OnExecute>b__8_1()
	{
	}
}
[Token(Token = "0x20000B3")]
public class MonsterBulletManager
{
	[Serializable]
	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE52A64", Offset = "0xE52A64")]
	private sealed class <>c
	{
		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<MonsterBullet> <>9__2_0;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Transform> <>9__2_1;

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x205B954", Offset = "0x205B954", VA = "0x205B954")]
		public <>c()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x205B95C", Offset = "0x205B95C", VA = "0x205B95C")]
		internal void <ClientMonsterFire>b__2_0(MonsterBullet c)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x205B980", Offset = "0x205B980", VA = "0x205B980")]
		internal void <ClientMonsterFire>b__2_1(Transform child)
		{
		}
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x27A422C", Offset = "0x27A422C", VA = "0x27A422C")]
	public static void ServerMonsterFire(WUnit owner, Vector3 firePos, Quaternion fireRot, int bulletAssetID, WUnit target, Vector3 targetPos, int index)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x27A4368", Offset = "0x27A4368", VA = "0x27A4368")]
	public static void ServerMonsterFire(WUnit owner, Transform firePos, Vector3 firePosOffset, int bulletAssetID, WUnit target, Vector3 targetPos, Vector3 targetOffset, int index = 0)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x27A455C", Offset = "0x27A455C", VA = "0x27A455C")]
	public static void ClientMonsterFire(int ownerID, Vector3 firePos, Quaternion fireRot, int bulletAssetID, int targetID, Vector3 targetPos, int index)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x27A4CE4", Offset = "0x27A4CE4", VA = "0x27A4CE4")]
	public MonsterBulletManager()
	{
	}
}
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52A74", Offset = "0xE52A74")]
public class MonsterSuicide : ActionTask
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> Owner;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x2655DF4", Offset = "0x2655DF4", VA = "0x2655DF4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x2655EA8", Offset = "0x2655EA8", VA = "0x2655EA8")]
	public MonsterSuicide()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52AAC", Offset = "0xE52AAC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52AAC", Offset = "0xE52AAC")]
public class SetAimLineStatus : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE5DCEC", Offset = "0xE5DCEC")]
	[BlackboardOnly]
	public bool AimLineStatus;

	[Token(Token = "0x170000B5")]
	protected override string info
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x2153F18", Offset = "0x2153F18", VA = "0x2153F18", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x2153F78", Offset = "0x2153F78", VA = "0x2153F78", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x2153FE4", Offset = "0x2153FE4", VA = "0x2153FE4")]
	public SetAimLineStatus()
	{
	}
}
[Token(Token = "0x20000B7")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52B10", Offset = "0xE52B10")]
public class SetMonsterVisual : ActionTask
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<bool> isVisual;

	[Token(Token = "0x170000B6")]
	protected override string info
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x215707C", Offset = "0x215707C", VA = "0x215707C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x2157100", Offset = "0x2157100", VA = "0x2157100", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x21572D4", Offset = "0x21572D4", VA = "0x21572D4")]
	public SetMonsterVisual()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52B48", Offset = "0xE52B48")]
public class GetMonsterSummonIdList : ActionTask
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<List<int>> SummonIdList;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x2256AA8", Offset = "0x2256AA8", VA = "0x2256AA8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x2256BA0", Offset = "0x2256BA0", VA = "0x2256BA0")]
	public GetMonsterSummonIdList()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52B80", Offset = "0xE52B80")]
public class SummonMonster : ActionTask
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<int> waveIndex;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioEvent audioEvent;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool isGenerator;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int gearID;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x225A2C4", Offset = "0x225A2C4", VA = "0x225A2C4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x225A660", Offset = "0x225A660", VA = "0x225A660")]
	public SummonMonster()
	{
	}
}
[Token(Token = "0x20000BA")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52BB8", Offset = "0xE52BB8")]
public class SummonMonsterWaveNum : ActionTask
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<int> result;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x225A668", Offset = "0x225A668", VA = "0x225A668", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x225A670", Offset = "0x225A670", VA = "0x225A670")]
	public SummonMonsterWaveNum()
	{
	}
}
[Token(Token = "0x20000BB")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52BF0", Offset = "0xE52BF0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52BF0", Offset = "0xE52BF0")]
public class SyncBullet : ActionTask
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> index;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isTarget;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x22615E8", Offset = "0x22615E8", VA = "0x22615E8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x22618E0", Offset = "0x22618E0", VA = "0x22618E0")]
	public SyncBullet()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52C54", Offset = "0xE52C54")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52C54", Offset = "0xE52C54")]
public class SyncBulletN : ActionTask
{
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<List<Transform>> targetList;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x2261C3C", Offset = "0x2261C3C", VA = "0x2261C3C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x2261E68", Offset = "0x2261E68", VA = "0x2261E68")]
	public SyncBulletN()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52CB8", Offset = "0xE52CB8")]
public class ClearBullet : ActionTask
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x2668C74", Offset = "0x2668C74", VA = "0x2668C74", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x2668DBC", Offset = "0x2668DBC", VA = "0x2668DBC")]
	public ClearBullet()
	{
	}
}
[Token(Token = "0x20000BE")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52CF0", Offset = "0xE52CF0")]
public class ClearBulletList : ActionTask
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<FirePoint>> firePosList;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x2668DC4", Offset = "0x2668DC4", VA = "0x2668DC4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x2668FEC", Offset = "0x2668FEC", VA = "0x2668FEC")]
	public ClearBulletList()
	{
	}
}
[Token(Token = "0x20000BF")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52D28", Offset = "0xE52D28")]
public class SyncClearBulletList : ActionTask
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<FirePoint>> firePosList;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x22620D0", Offset = "0x22620D0", VA = "0x22620D0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x22623F8", Offset = "0x22623F8", VA = "0x22623F8")]
	public SyncClearBulletList()
	{
	}
}
[Token(Token = "0x20000C0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52D60", Offset = "0xE52D60")]
public class SyncBulletList : ActionTask
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<GameObject>> firePosList;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x22618E8", Offset = "0x22618E8", VA = "0x22618E8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x2261C34", Offset = "0x2261C34", VA = "0x2261C34")]
	public SyncBulletList()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52D98", Offset = "0xE52D98")]
public class SyncBulletVector3List : ActionTask
{
	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<Vector3>> firePosList;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x2261E70", Offset = "0x2261E70", VA = "0x2261E70", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x22620C8", Offset = "0x22620C8", VA = "0x22620C8")]
	public SyncBulletVector3List()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52DD0", Offset = "0xE52DD0")]
public class MonsterAttackStatus : ActionTask
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<bool> IsAttack;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Weapon_Melee> weaponMelee;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x27A1648", Offset = "0x27A1648", VA = "0x27A1648", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x27A17F0", Offset = "0x27A17F0", VA = "0x27A17F0")]
	public MonsterAttackStatus()
	{
	}
}
[Token(Token = "0x20000C3")]
internal struct ActionTaskDeltaTime
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float oldElapsedTime;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1FB3C90", Offset = "0x1FB3C90", VA = "0x1FB3C90")]
	public void InitDeltaTime(float elapsedTime)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1FB3C98", Offset = "0x1FB3C98", VA = "0x1FB3C98")]
	public float GetDeltaTime(float elapsedTime)
	{
		return default(float);
	}
}
[Token(Token = "0x20000C4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52E08", Offset = "0xE52E08")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52E08", Offset = "0xE52E08")]
public class MoveToPosition : ActionTask<Transform>
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> speed;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float moveTime;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float curTime;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 originPos;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float percent;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 targetPos;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float deltaTime;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float oldElapsedTime;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Timeline timeline;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float elapsedTimeline;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x265DC9C", Offset = "0x265DC9C", VA = "0x265DC9C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x265DE48", Offset = "0x265DE48", VA = "0x265DE48", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x265DFF8", Offset = "0x265DFF8", VA = "0x265DFF8")]
	public MoveToPosition()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52E6C", Offset = "0xE52E6C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52E6C", Offset = "0xE52E6C")]
public class MoveToPositionTime : ActionTask<Transform>
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> speed;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> moveTime;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x265E28C", Offset = "0x265E28C", VA = "0x265E28C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x265E3AC", Offset = "0x265E3AC", VA = "0x265E3AC")]
	public MoveToPositionTime()
	{
	}
}
[Token(Token = "0x20000C6")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52ED0", Offset = "0xE52ED0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52ED0", Offset = "0xE52ED0")]
public class JumpVertical : ActionTask<Transform>
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> speed;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float moveTime;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float curTime;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 originPos;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float percent;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 targetPos;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float deltaTime;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float oldElapsedTime;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x20B5404", Offset = "0x20B5404", VA = "0x20B5404", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x20B5570", Offset = "0x20B5570", VA = "0x20B5570", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x20B56D0", Offset = "0x20B56D0", VA = "0x20B56D0")]
	public JumpVertical()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE52F34", Offset = "0xE52F34")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52F34", Offset = "0xE52F34")]
public class MoveToPositionSpeed : ActionTask<Transform>
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> baseSpeed;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> baseMoveTime;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> outputSpeed;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x265E044", Offset = "0x265E044", VA = "0x265E044", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x265E210", Offset = "0x265E210", VA = "0x265E210")]
	public MoveToPositionSpeed()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52F98", Offset = "0xE52F98")]
public class AniMoveToPosition : ActionTask<Transform>
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float aniTime;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float curTime;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 originPos;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float percent;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 targetPos;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float deltaTime;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float oldElapsedTime;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Timeline timeline;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float elapsedTimeline;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x212CAB8", Offset = "0x212CAB8", VA = "0x212CAB8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x212CBE0", Offset = "0x212CBE0", VA = "0x212CBE0", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x212CD7C", Offset = "0x212CD7C", VA = "0x212CD7C")]
	public AniMoveToPosition()
	{
	}
}
[Token(Token = "0x20000C9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE52FD0", Offset = "0xE52FD0")]
public class PlayAnimator : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<int> layerIndex;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE5DD44", Offset = "0xE5DD44")]
	public BBParameter<string> stateName;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isUseTransitTime;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DD54", Offset = "0xE5DD54")]
	public float transitTime;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool waitUntilFinish;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private AnimatorStateInfo stateInfo;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool played;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float elapsedTimeline;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float time;

	[Token(Token = "0x170000B7")]
	protected override string info
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x230CE64", Offset = "0x230CE64", VA = "0x230CE64", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x230CEE8", Offset = "0x230CEE8", VA = "0x230CEE8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x230D03C", Offset = "0x230D03C", VA = "0x230D03C", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x230D1F0", Offset = "0x230D1F0", VA = "0x230D1F0")]
	public PlayAnimator()
	{
	}
}
[Token(Token = "0x20000CA")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53008", Offset = "0xE53008")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53008", Offset = "0xE53008")]
public class RemoveBBParam : ActionTask
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<string> varName;

	[Token(Token = "0x170000B8")]
	protected override string info
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x2720920", Offset = "0x2720920", VA = "0x2720920", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x27209B4", Offset = "0x27209B4", VA = "0x27209B4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x2720A3C", Offset = "0x2720A3C", VA = "0x2720A3C")]
	public RemoveBBParam()
	{
	}
}
[Token(Token = "0x20000CB")]
public enum ParticleOp
{
	[Token(Token = "0x40004B3")]
	Play,
	[Token(Token = "0x40004B4")]
	Stop,
	[Token(Token = "0x40004B5")]
	Pause
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5306C", Offset = "0xE5306C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5306C", Offset = "0xE5306C")]
public class RunParticles : ActionTask
{
	[Serializable]
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE530D0", Offset = "0xE530D0")]
	private sealed class <>c
	{
		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Transform> <>9__2_0;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Transform> <>9__2_1;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Transform> <>9__2_2;

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x2060E54", Offset = "0x2060E54", VA = "0x2060E54")]
		public <>c()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x2060E5C", Offset = "0x2060E5C", VA = "0x2060E5C")]
		internal void <OnExecute>b__2_0(Transform child)
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x2060F10", Offset = "0x2060F10", VA = "0x2060F10")]
		internal void <OnExecute>b__2_1(Transform child)
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x2060FC4", Offset = "0x2060FC4", VA = "0x2060FC4")]
		internal void <OnExecute>b__2_2(Transform child)
		{
		}
	}

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> effectRoot;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<ParticleOp> operation;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x24BCBD0", Offset = "0x24BCBD0", VA = "0x24BCBD0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x24BCF54", Offset = "0x24BCF54", VA = "0x24BCF54")]
	public RunParticles()
	{
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE530E0", Offset = "0xE530E0")]
public class SetVector3Part : ActionTask
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> srcVec;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> valueVec;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool changeX;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool changeY;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool changeZ;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Vector3> resultVec;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x2157BD0", Offset = "0x2157BD0", VA = "0x2157BD0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x2157CCC", Offset = "0x2157CCC", VA = "0x2157CCC")]
	public SetVector3Part()
	{
	}
}
[Token(Token = "0x20000CF")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53118", Offset = "0xE53118")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53118", Offset = "0xE53118")]
public class CheckAim : ConditionTask
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x2665120", Offset = "0x2665120", VA = "0x2665120", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x2665298", Offset = "0x2665298", VA = "0x2665298")]
	public CheckAim()
	{
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5317C", Offset = "0xE5317C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5317C", Offset = "0xE5317C")]
public class LookTarget_AimIK : ActionTask
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<string> aimAimation;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> r_aimSuccessTime;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x24D9564", Offset = "0x24D9564", VA = "0x24D9564", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x24D9890", Offset = "0x24D9890", VA = "0x24D9890")]
	public LookTarget_AimIK()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE531E0", Offset = "0xE531E0")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE531E0", Offset = "0xE531E0")]
public class UnlookTarget_AimIK : ActionTask
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x2371DC4", Offset = "0x2371DC4", VA = "0x2371DC4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x2371FEC", Offset = "0x2371FEC", VA = "0x2371FEC")]
	public UnlookTarget_AimIK()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53244", Offset = "0xE53244")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53244", Offset = "0xE53244")]
public class UpdateTarget_AimIK : ActionTask
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x2371FF4", Offset = "0x2371FF4", VA = "0x2371FF4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x23721A0", Offset = "0x23721A0", VA = "0x23721A0")]
	public UpdateTarget_AimIK()
	{
	}
}
[Token(Token = "0x20000D3")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE532A8", Offset = "0xE532A8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE532A8", Offset = "0xE532A8")]
public class FindNearGroupTargetUnit : ActionTask<Transform>
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isUseMonsterAimTarget;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x24F9174", Offset = "0x24F9174", VA = "0x24F9174", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x24F95F8", Offset = "0x24F95F8", VA = "0x24F95F8")]
	public FindNearGroupTargetUnit()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5330C", Offset = "0xE5330C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5330C", Offset = "0xE5330C")]
public class FindNearGroupTargetUnitAndInRoom : ActionTask<Transform>
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x24F964C", Offset = "0x24F964C", VA = "0x24F964C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x24F997C", Offset = "0x24F997C", VA = "0x24F997C")]
	private WUnit FindClosestInRoomTarget(List<WUnit>.Enumerator enumerator, WUnit attacker)
	{
		return null;
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x24F9AAC", Offset = "0x24F9AAC", VA = "0x24F9AAC")]
	public FindNearGroupTargetUnitAndInRoom()
	{
	}
}
[Token(Token = "0x20000D5")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53370", Offset = "0xE53370")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53370", Offset = "0xE53370")]
public class FindNearGroupUnitAimPoint : ActionTask<Transform>
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isUseMonsterAimTarget;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x24F9AF8", Offset = "0x24F9AF8", VA = "0x24F9AF8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x24F9FEC", Offset = "0x24F9FEC", VA = "0x24F9FEC")]
	public FindNearGroupUnitAimPoint()
	{
	}
}
[Token(Token = "0x20000D6")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE533D4", Offset = "0xE533D4")]
public class GetTargetUnitPos : ActionTask
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x251EE08", Offset = "0x251EE08", VA = "0x251EE08", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x251EF20", Offset = "0x251EF20", VA = "0x251EF20")]
	public GetTargetUnitPos()
	{
	}
}
[Token(Token = "0x20000D7")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5340C", Offset = "0xE5340C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5340C", Offset = "0xE5340C")]
public class FindRandomGroupTargetUnit : ActionTask<Transform>
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<e_type_role> targetRoleType;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isUseMonsterAimTarget;

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x24FA998", Offset = "0x24FA998", VA = "0x24FA998", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x24FAE38", Offset = "0x24FAE38", VA = "0x24FAE38")]
	public FindRandomGroupTargetUnit()
	{
	}
}
[Token(Token = "0x20000D8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53470", Offset = "0xE53470")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53470", Offset = "0xE53470")]
public class FindRandomGroupUnitAimPoint : ActionTask<Transform>
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<e_type_role> targetRoleType;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isUseMonsterAimTarget;

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x24FAEBC", Offset = "0x24FAEBC", VA = "0x24FAEBC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x24FB328", Offset = "0x24FB328", VA = "0x24FB328")]
	public FindRandomGroupUnitAimPoint()
	{
	}
}
[Token(Token = "0x20000D9")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE534D4", Offset = "0xE534D4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE534D4", Offset = "0xE534D4")]
public class FindRandomHostileGroup : ActionTask<Transform>
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<e_group_type> hostileGroup;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x24FB3AC", Offset = "0x24FB3AC", VA = "0x24FB3AC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x24FB560", Offset = "0x24FB560", VA = "0x24FB560")]
	public FindRandomHostileGroup()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53538", Offset = "0xE53538")]
public class GetLaserGroup : ActionTask
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<List<LaserRunningTrack>> laserTrackList;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<LaserPointData>> LaserPoints;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<int>> FirePointIDList;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> laserCount;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> index;

	[Token(Token = "0x170000B9")]
	protected override string info
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x2255AC0", Offset = "0x2255AC0", VA = "0x2255AC0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x2255BA0", Offset = "0x2255BA0", VA = "0x2255BA0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x2255FA4", Offset = "0x2255FA4", VA = "0x2255FA4")]
	public GetLaserGroup()
	{
	}
}
[Token(Token = "0x20000DB")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53570", Offset = "0xE53570")]
public class GetFirePoint : ActionTask
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<GameObject>> FirePointList;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> FirePos;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int index;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x225577C", Offset = "0x225577C", VA = "0x225577C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x22558FC", Offset = "0x22558FC", VA = "0x22558FC")]
	public GetFirePoint()
	{
	}
}
[Token(Token = "0x20000DC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE535A8", Offset = "0xE535A8")]
public class LaserStepRotateion : ActionTask<Transform>
{
	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<LaserPointData>> laserPoints;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float angularSpeed;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rotAngle;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int index;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion targetRot;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rotTime;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float runTime;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion curRot;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion tarRot;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float percent;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Timeline timeline;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float elapsedTimeline;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x20BBC40", Offset = "0x20BBC40", VA = "0x20BBC40", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x20BBFFC", Offset = "0x20BBFFC", VA = "0x20BBFFC", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x20BBD8C", Offset = "0x20BBD8C", VA = "0x20BBD8C")]
	private void GetLaserData()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x20BC138", Offset = "0x20BC138", VA = "0x20BC138")]
	public LaserStepRotateion()
	{
	}
}
[Token(Token = "0x20000DD")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE535E0", Offset = "0xE535E0")]
public class LaserStepRotate : ActionTask
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<LaserPointData>> laserPoints;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> RotateObj;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float angularSpeed;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float rotAngle;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int index;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion targetRot;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotTime;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float runTime;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion curRot;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion tarRot;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float percent;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Timeline timeline;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float elapsedTimeline;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x20BB6D4", Offset = "0x20BB6D4", VA = "0x20BB6D4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x20BBAF8", Offset = "0x20BBAF8", VA = "0x20BBAF8", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x20BB880", Offset = "0x20BB880", VA = "0x20BB880")]
	private void GetLaserData()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x20BBC38", Offset = "0x20BBC38", VA = "0x20BBC38")]
	public LaserStepRotate()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53618", Offset = "0xE53618")]
public class CheckMonsterFirePointID : ConditionTask
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<int> ID;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<int>> LaserPointIDLists;

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x2666264", Offset = "0x2666264", VA = "0x2666264", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x266637C", Offset = "0x266637C", VA = "0x266637C")]
	public CheckMonsterFirePointID()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53650", Offset = "0xE53650")]
public class GetPointInRange : ActionTask
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> forwardValue;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> rightValue;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> upValue;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> resultPos;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x225775C", Offset = "0x225775C", VA = "0x225775C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x2257954", Offset = "0x2257954", VA = "0x2257954")]
	public GetPointInRange()
	{
	}
}
[Token(Token = "0x20000E0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53688", Offset = "0xE53688")]
public class GetRandomPointInTra : ActionTask
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> sourceTra;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> saveasPos;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x2257E9C", Offset = "0x2257E9C", VA = "0x2257E9C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x2257F70", Offset = "0x2257F70", VA = "0x2257F70")]
	public GetRandomPointInTra()
	{
	}
}
[Token(Token = "0x20000E1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE536C0", Offset = "0xE536C0")]
public class GetPointInRangeVec : ActionTask
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> offsetVec;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> resultPos;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x225795C", Offset = "0x225795C", VA = "0x225795C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x2257B54", Offset = "0x2257B54", VA = "0x2257B54")]
	public GetPointInRangeVec()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE536F8", Offset = "0xE536F8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE536F8", Offset = "0xE536F8")]
public class GetUnitByHurtDefine : ActionTask<Transform>
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<GameObject> unitObj;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x251F414", Offset = "0x251F414", VA = "0x251F414", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x251F600", Offset = "0x251F600", VA = "0x251F600")]
	public GetUnitByHurtDefine()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5375C", Offset = "0xE5375C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5375C", Offset = "0xE5375C")]
public class LookAimTarget : ActionTask
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<GameObject> aimTarget;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> minHeight;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> maxHeight;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> minWidth;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> maxWidth;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x24D90EC", Offset = "0x24D90EC", VA = "0x24D90EC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x24D93C0", Offset = "0x24D93C0", VA = "0x24D93C0")]
	public LookAimTarget()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE537C0", Offset = "0xE537C0")]
public class MonsterAround : ActionTask
{
	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> TargetUnit;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> OwnerUnit;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> MonsterAroundCount;

	[Token(Token = "0x170000BA")]
	protected override string info
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x27A09E0", Offset = "0x27A09E0", VA = "0x27A09E0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x27A0A24", Offset = "0x27A0A24", VA = "0x27A0A24", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x27A0C80", Offset = "0x27A0C80", VA = "0x27A0C80")]
	public MonsterAround()
	{
	}
}
[Token(Token = "0x20000E5")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE537F8", Offset = "0xE537F8")]
public class MonsterAroundExit : ActionTask
{
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> TargetUnit;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> OwnerUnit;

	[Token(Token = "0x170000BB")]
	protected override string info
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x27A0C88", Offset = "0x27A0C88", VA = "0x27A0C88", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x27A0CCC", Offset = "0x27A0CCC", VA = "0x27A0CCC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x27A0EEC", Offset = "0x27A0EEC", VA = "0x27A0EEC")]
	public MonsterAroundExit()
	{
	}
}
[Token(Token = "0x20000E6")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53830", Offset = "0xE53830")]
public class CheckMonsterAround : ConditionTask
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<WUnit> TargetUnit;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CompareMethod checkType;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> MaxAroundCount;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> MaxDis;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> MinDis;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool IsCountAchieved;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool IsDisAchieved;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int MonsterCount;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> monsterAroundList;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dis;

	[Token(Token = "0x170000BC")]
	protected override string info
	{
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x2665928", Offset = "0x2665928", VA = "0x2665928", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x2665BB0", Offset = "0x2665BB0", VA = "0x2665BB0", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x2665FDC", Offset = "0x2665FDC", VA = "0x2665FDC")]
	public CheckMonsterAround()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53868", Offset = "0xE53868")]
public class GetMonsterCount : ActionTask
{
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<e_type_monster> MonsterType;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<int> MonsterCount;

	[Token(Token = "0x170000BD")]
	protected override string info
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x2256370", Offset = "0x2256370", VA = "0x2256370", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x22563B4", Offset = "0x22563B4", VA = "0x22563B4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x2256540", Offset = "0x2256540", VA = "0x2256540")]
	public GetMonsterCount()
	{
	}
}
[Token(Token = "0x20000E8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE538A0", Offset = "0xE538A0")]
public class CheckMonsterIsMaxCount : ConditionTask
{
	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x26667E0", Offset = "0x26667E0", VA = "0x26667E0", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x2666860", Offset = "0x2666860", VA = "0x2666860")]
	public CheckMonsterIsMaxCount()
	{
	}
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE538D8", Offset = "0xE538D8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE538D8", Offset = "0xE538D8")]
public class NPCFire : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> duration;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timer;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Timeline timeline;

	[Token(Token = "0x170000BE")]
	protected override string info
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x265F9D0", Offset = "0x265F9D0", VA = "0x265F9D0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x265FA98", Offset = "0x265FA98", VA = "0x265FA98", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x265FB84", Offset = "0x265FB84", VA = "0x265FB84", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x265FD04", Offset = "0x265FD04", VA = "0x265FD04")]
	public NPCFire()
	{
	}
}
[Token(Token = "0x20000EA")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5393C", Offset = "0xE5393C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5393C", Offset = "0xE5393C")]
public class NPCFireCeaselessly : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x265FD50", Offset = "0x265FD50", VA = "0x265FD50", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x265FDBC", Offset = "0x265FDBC", VA = "0x265FDBC")]
	public NPCFireCeaselessly()
	{
	}
}
[Token(Token = "0x20000EB")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE539A0", Offset = "0xE539A0")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE539A0", Offset = "0xE539A0")]
public class NPCFireStop : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x265FEC0", Offset = "0x265FEC0", VA = "0x265FEC0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x265FF2C", Offset = "0x265FF2C", VA = "0x265FF2C")]
	public NPCFireStop()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53A04", Offset = "0xE53A04")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53A04", Offset = "0xE53A04")]
public class UnityPause : ActionTask
{
	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x2371D50", Offset = "0x2371D50", VA = "0x2371D50", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x2371DBC", Offset = "0x2371DBC", VA = "0x2371DBC")]
	public UnityPause()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53A68", Offset = "0xE53A68")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53A68", Offset = "0xE53A68")]
public class NPCFireNow : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x265FE08", Offset = "0x265FE08", VA = "0x265FE08", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x265FE74", Offset = "0x265FE74", VA = "0x265FE74")]
	public NPCFireNow()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53ACC", Offset = "0xE53ACC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53ACC", Offset = "0xE53ACC")]
public class NavMeshPriorityDistribution : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<int> minPriority;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<int> maxPriority;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x265FF78", Offset = "0x265FF78", VA = "0x265FF78", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x26600F4", Offset = "0x26600F4", VA = "0x26600F4")]
	public NavMeshPriorityDistribution()
	{
	}
}
[Token(Token = "0x20000EF")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53B30", Offset = "0xE53B30")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53B30", Offset = "0xE53B30")]
public class UnLookAimTarget : ActionTask
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x2369AB4", Offset = "0x2369AB4", VA = "0x2369AB4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x2369C0C", Offset = "0x2369C0C", VA = "0x2369C0C")]
	public UnLookAimTarget()
	{
	}
}
[Token(Token = "0x20000F0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53B94", Offset = "0xE53B94")]
public class SurroundToTarget : ActionTask<Transform>
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsSuroundPosition;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x225B7D0", Offset = "0x225B7D0", VA = "0x225B7D0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x225BAA4", Offset = "0x225BAA4", VA = "0x225BAA4")]
	public SurroundToTarget()
	{
	}
}
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53BCC", Offset = "0xE53BCC")]
public class TeleportToPosition : ActionTask<Transform>
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 TargetPos;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x2AB13A4", Offset = "0x2AB13A4", VA = "0x2AB13A4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x2AB14B0", Offset = "0x2AB14B0", VA = "0x2AB14B0")]
	public TeleportToPosition()
	{
	}
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53C04", Offset = "0xE53C04")]
public class CheckAIBlock : ConditionTask<NavMeshAgent>
{
	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x26650CC", Offset = "0x26650CC", VA = "0x26650CC", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x26650D4", Offset = "0x26650D4", VA = "0x26650D4")]
	public CheckAIBlock()
	{
	}
}
[Token(Token = "0x20000F3")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53C3C", Offset = "0xE53C3C")]
public class CheckMonsterCurHP : ConditionTask
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CompareMethod checkType;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> targetValuePer;

	[Token(Token = "0x170000BF")]
	protected override string info
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x2666060", Offset = "0x2666060", VA = "0x2666060", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x266612C", Offset = "0x266612C", VA = "0x266612C", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x266625C", Offset = "0x266625C", VA = "0x266625C")]
	public CheckMonsterCurHP()
	{
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53C74", Offset = "0xE53C74")]
public class CheckMonsterStrategyCount : ConditionTask
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<e_type_monster> monsterType;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<string> BBVarName;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> BBVarValue;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> targetValue;

	[Token(Token = "0x170000C0")]
	protected override string info
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x2666868", Offset = "0x2666868", VA = "0x2666868", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x2666ABC", Offset = "0x2666ABC", VA = "0x2666ABC", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x2666C2C", Offset = "0x2666C2C", VA = "0x2666C2C")]
	public CheckMonsterStrategyCount()
	{
	}
}
[Token(Token = "0x20000F5")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53CAC", Offset = "0xE53CAC")]
public class CheckPointInCubic : ConditionTask
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Vector3> point;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> cubicTransform;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x26673B8", Offset = "0x26673B8", VA = "0x26673B8", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x26675B4", Offset = "0x26675B4", VA = "0x26675B4")]
	public CheckPointInCubic()
	{
	}
}
[Token(Token = "0x20000F6")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53CE4", Offset = "0xE53CE4")]
public class CheckTest : ConditionTask
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public new BBParameter<string> name;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x26675C4", Offset = "0x26675C4", VA = "0x26675C4", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x26675CC", Offset = "0x26675CC", VA = "0x26675CC")]
	public CheckTest()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53D1C", Offset = "0xE53D1C")]
public class CheckUnitHP : ConditionTask
{
	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CompareMethod checkType;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DFDC", Offset = "0xE5DFDC")]
	public BBParameter<float> percent;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE5DFF4", Offset = "0xE5DFF4")]
	public float differenceThreshold;

	[Token(Token = "0x170000C1")]
	protected override string info
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x26675D4", Offset = "0x26675D4", VA = "0x26675D4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x266765C", Offset = "0x266765C", VA = "0x266765C", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x2667770", Offset = "0x2667770", VA = "0x2667770")]
	public CheckUnitHP()
	{
	}
}
[Token(Token = "0x20000F8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53D54", Offset = "0xE53D54")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE53D54", Offset = "0xE53D54")]
public class CheckUnitHPValue : ConditionTask
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CompareMethod checkType;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> targetHPValue;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x2667784", Offset = "0x2667784", VA = "0x2667784", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x266784C", Offset = "0x266784C", VA = "0x266784C")]
	public CheckUnitHPValue()
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE53DB8", Offset = "0xE53DB8")]
public class CheckUnitNull : ConditionTask
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x170000C2")]
	protected override string info
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x2667854", Offset = "0x2667854", VA = "0x2667854", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x26678B0", Offset = "0x26678B0", VA = "0x26678B0", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x2667910", Offset = "0x2667910", VA = "0x2667910")]
	public CheckUnitNull()
	{
	}
}
[Token(Token = "0x20000FA")]
public interface IEnvAudio
{
	[Token(Token = "0x60003F6")]
	void PlayAudio();

	[Token(Token = "0x60003F7")]
	void StopAudio();
}
[Token(Token = "0x20000FB")]
public class EnvAudio : MonoBehaviour, IEnvAudio
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioEvent envAudioEvent;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isUseObstruction;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WwiseDefine audioObj;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x24F264C", Offset = "0x24F264C", VA = "0x24F264C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x24F26D4", Offset = "0x24F26D4", VA = "0x24F26D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x24F2650", Offset = "0x24F2650", VA = "0x24F2650")]
	private void Init()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x24F26D8", Offset = "0x24F26D8", VA = "0x24F26D8")]
	private void UnInit()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x24F2988", Offset = "0x24F2988", VA = "0x24F2988", Slot = "4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x24F2A54", Offset = "0x24F2A54", VA = "0x24F2A54", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x24F2AF0", Offset = "0x24F2AF0", VA = "0x24F2AF0")]
	public EnvAudio()
	{
	}
}
[Token(Token = "0x20000FC")]
public class EnvAudioManager : Singleton<EnvAudioManager>
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HashSet<IEnvAudio> gearList;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E030", Offset = "0xE5E030")]
	private bool <isStart>k__BackingField;

	[Token(Token = "0x170000C3")]
	public bool isStart
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x24F2AF8", Offset = "0x24F2AF8", VA = "0x24F2AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD04", Offset = "0xE6AD04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x24F2B00", Offset = "0x24F2B00", VA = "0x24F2B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD14", Offset = "0xE6AD14")]
		private set
		{
		}
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x24F275C", Offset = "0x24F275C", VA = "0x24F275C")]
	public void RegisterEnvAudio(IEnvAudio audio)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x24F287C", Offset = "0x24F287C", VA = "0x24F287C")]
	public void UnRegisterEnvAudio(IEnvAudio audio)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x24F2B0C", Offset = "0x24F2B0C", VA = "0x24F2B0C")]
	public void SetAllReset()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x24F2CB4", Offset = "0x24F2CB4", VA = "0x24F2CB4")]
	public void SetAllStart()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x24F2E5C", Offset = "0x24F2E5C", VA = "0x24F2E5C")]
	public EnvAudioManager()
	{
	}
}
[Token(Token = "0x20000FD")]
public class RoomEnvAudios : MonoBehaviour, IEnvAudio
{
	[Serializable]
	[Token(Token = "0x20000FE")]
	public class RoomEnvAudioCell
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int roomId;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent audioEvent;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchInfoData switchInfoData;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioEvent bgmEvent;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E098", Offset = "0xE5E098")]
		public StateInfoData bgmEvent_n_state;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E0D0", Offset = "0xE5E0D0")]
		public StateInfoData bgmEvent_f_state;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E108", Offset = "0xE5E108")]
		public StateInfoData bgmEvent_f_end_state;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioEvent audioStopEvent;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public RTPCEvent rtpcEvent;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float rtpcValue;

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x2060960", Offset = "0x2060960", VA = "0x2060960")]
		public RoomEnvAudioCell()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	public enum RoomEnvType
	{
		[Token(Token = "0x4000568")]
		None,
		[Token(Token = "0x4000569")]
		Type_1,
		[Token(Token = "0x400056A")]
		Type_2,
		[Token(Token = "0x400056B")]
		Type_3
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E040", Offset = "0xE5E040")]
	public StateInfoData bgmEvent_Die_state;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioEvent DieEvent;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RoomEnvAudioCell[] roomEnvAudioCells;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int defaultRoomId;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WwiseDefine envObj;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WwiseDefine bgmObj;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomEnvAudioCell curCell;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RoomEnvType curType;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int curTypeRoomId;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isDie;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E088", Offset = "0xE5E088")]
	private static RoomEnvAudios <Instance>k__BackingField;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine guidTipUICoroutine;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float uiDelay;

	[Token(Token = "0x170000C4")]
	public static RoomEnvAudios Instance
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x24B3AB0", Offset = "0x24B3AB0", VA = "0x24B3AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD24", Offset = "0xE6AD24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x24B3AFC", Offset = "0x24B3AFC", VA = "0x24B3AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD34", Offset = "0xE6AD34")]
		private set
		{
		}
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x24B3B50", Offset = "0x24B3B50", VA = "0x24B3B50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x24B3BA4", Offset = "0x24B3BA4", VA = "0x24B3BA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x24B3EFC", Offset = "0x24B3EFC", VA = "0x24B3EFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x24B438C", Offset = "0x24B438C", VA = "0x24B438C")]
	private void OnEnterRoom(GMessage evt)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x24B4434", Offset = "0x24B4434", VA = "0x24B4434")]
	private void OnEnterRoom(int roomId)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x24B484C", Offset = "0x24B484C", VA = "0x24B484C")]
	private void OnSwitchFightState(int i)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x24B48A0", Offset = "0x24B48A0", VA = "0x24B48A0")]
	private void OnRoomPass(int roomId)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x24B48B4", Offset = "0x24B48B4", VA = "0x24B48B4")]
	public void OnDie()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x24B4468", Offset = "0x24B4468", VA = "0x24B4468")]
	public void DOEnvAudio(int roomId)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x24B45F0", Offset = "0x24B45F0", VA = "0x24B45F0")]
	public void SwitchBGM(RoomEnvType roomEnvType)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x24B4C5C", Offset = "0x24B4C5C", VA = "0x24B4C5C")]
	public void PlayBGM()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x24B4DC8", Offset = "0x24B4DC8", VA = "0x24B4DC8")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x24B4AD0", Offset = "0x24B4AD0", VA = "0x24B4AD0")]
	public void PlayEnvAudio()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x24B49E4", Offset = "0x24B49E4", VA = "0x24B49E4")]
	public void StopEnvAudio()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x24B4EB4", Offset = "0x24B4EB4", VA = "0x24B4EB4", Slot = "4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x24B4264", Offset = "0x24B4264", VA = "0x24B4264", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x24B4FC0", Offset = "0x24B4FC0", VA = "0x24B4FC0")]
	public RoomEnvAudios()
	{
	}
}
[Token(Token = "0x2000100")]
public class CameraMoveEffect : MonoBehaviour
{
	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_MoveMaterial;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mUseMoveMaterial;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x2442120", Offset = "0x2442120", VA = "0x2442120")]
	public void MoveEffectFadeOutIn(bool isShow, float size, float opacity)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x2442254", Offset = "0x2442254", VA = "0x2442254")]
	public void SetAdaptRate(Vector4 vect4)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x2442334", Offset = "0x2442334", VA = "0x2442334")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x244242C", Offset = "0x244242C", VA = "0x244242C")]
	public CameraMoveEffect()
	{
	}
}
[Token(Token = "0x2000101")]
public enum eCameraMoveEffectSettingType
{
	[Token(Token = "0x400056F")]
	FixPoint,
	[Token(Token = "0x4000570")]
	CamBackPointByHeightAndDis,
	[Token(Token = "0x4000571")]
	CamBackPointByAngleAndDis
}
[Token(Token = "0x2000102")]
public class SyncTwoPointTransform
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform FromTran;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform ToTran;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 Offset;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool IsStart;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool mIsSynPosition;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool mIsSynRotation;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x2262400", Offset = "0x2262400", VA = "0x2262400")]
	public void Start(Transform fromTrn, Transform toTrn, bool synPos, bool synRot, [Optional] Vector3 Offset)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x2262484", Offset = "0x2262484", VA = "0x2262484")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x2262490", Offset = "0x2262490", VA = "0x2262490")]
	public void Excude()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x22625C0", Offset = "0x22625C0", VA = "0x22625C0")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x22625C8", Offset = "0x22625C8", VA = "0x22625C8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x2262600", Offset = "0x2262600", VA = "0x2262600")]
	public SyncTwoPointTransform()
	{
	}
}
[Token(Token = "0x2000103")]
public class CameraMoveEffectManager : Singleton<CameraMoveEffectManager>
{
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, TransferMovieShot> MoveDic;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TransferMovieShot CurTrnMovieShot;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CameraMoveEffect mCameraMoveEffect;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mIsRunning;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mTmpMoveToObj;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject mMoveToObj;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject mBackObj;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mBeginFade;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action mStartAct;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<float> mExcudeAct;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action mMoveToFinishAct;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action mFinishAct;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SyncTwoPointTransform mSynTran;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ShowFade;

	[Token(Token = "0x170000C5")]
	public bool IsRunning
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x244369C", Offset = "0x244369C", VA = "0x244369C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x2442434", Offset = "0x2442434", VA = "0x2442434")]
	public void Init()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x24425BC", Offset = "0x24425BC", VA = "0x24425BC")]
	public void Move(eCameraMoveEffectSettingType type, string moveName, [Optional] Vector2 setVec, bool needAutoMoveBack = false, float waitTime = 0f)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x24431BC", Offset = "0x24431BC", VA = "0x24431BC")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x2443254", Offset = "0x2443254", VA = "0x2443254")]
	public void MoveBack(Vector3 backPos, Quaternion backRot)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x24433F0", Offset = "0x24433F0", VA = "0x24433F0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x24429C0", Offset = "0x24429C0", VA = "0x24429C0")]
	private void DoStop()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x24435E8", Offset = "0x24435E8", VA = "0x24435E8")]
	public void Update()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x24436A4", Offset = "0x24436A4", VA = "0x24436A4")]
	public void UnInit()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x24436A8", Offset = "0x24436A8", VA = "0x24436A8")]
	public void AddMSPoint(string key, TransferMovieShot point)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x24437FC", Offset = "0x24437FC", VA = "0x24437FC")]
	public void DelMSPoint(TransferMovieShot point)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x2442E60", Offset = "0x2442E60", VA = "0x2442E60")]
	private void DoRun(GameObject affectObj, bool needMoveBack, float waitTime)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x2443AC0", Offset = "0x2443AC0", VA = "0x2443AC0")]
	private void SetFollowPoint(GameObject affectObj)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x2443BE8", Offset = "0x2443BE8", VA = "0x2443BE8")]
	private void DoMoveStartAction()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x2443D4C", Offset = "0x2443D4C", VA = "0x2443D4C")]
	private void DoMoveExcudeAction(float r)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x2443DFC", Offset = "0x2443DFC", VA = "0x2443DFC")]
	private void DoMoveToFinishAction()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x2443E90", Offset = "0x2443E90", VA = "0x2443E90")]
	private void DoMoveStopAction()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x2443428", Offset = "0x2443428", VA = "0x2443428")]
	private void RevertStatus()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x2443C90", Offset = "0x2443C90", VA = "0x2443C90")]
	private void SetMoveEffectFade(bool isShow, float size, float opacity)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x2442A60", Offset = "0x2442A60", VA = "0x2442A60")]
	private GameObject GetMoveToObj()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x24439F8", Offset = "0x24439F8", VA = "0x24439F8")]
	private GameObject GetBackObj()
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x2442B28", Offset = "0x2442B28", VA = "0x2442B28")]
	private void SetCamBackPos(eCameraMoveEffectSettingType type, Vector2 setVec, GameObject target, GameObject effectObj)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x2443370", Offset = "0x2443370", VA = "0x2443370")]
	public bool IsVRInput()
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x2443F30", Offset = "0x2443F30", VA = "0x2443F30")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x24428C0", Offset = "0x24428C0", VA = "0x24428C0")]
	public GameObject GetMoveAffectObj()
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x2444094", Offset = "0x2444094", VA = "0x2444094")]
	public CameraMoveEffectManager()
	{
	}
}
[Token(Token = "0x2000104")]
public class CameraMoveTest : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MoveName;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eCameraMoveEffectSettingType UseType;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool NeedMoveBack;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WaitTime;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Height;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DisH;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Angle;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DisA;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x2444174", Offset = "0x2444174", VA = "0x2444174")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x24441F0", Offset = "0x24441F0", VA = "0x24441F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x24441F4", Offset = "0x24441F4", VA = "0x24441F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x24441F8", Offset = "0x24441F8", VA = "0x24441F8")]
	public CameraMoveTest()
	{
	}
}
[Token(Token = "0x2000105")]
public class TransferMovieShot : MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MovieShotName;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseObjRotation;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve InCurve;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve OutCurve;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve OutFadeCurve;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject MoveToObj;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject AffectObj;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject BackObj;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mNeedMoveBack;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float WaitTime;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action DoStartAction;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<float> DoExcudeAction;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action DoMoveToFinishAction;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action DoStopAction;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool mIsStart;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool mIsMoveFinish;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool mIsMoveBack;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion mSourceRotation;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 mSourcePosition;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float mAddDelate;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool mIsFixRotation;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fixAngle;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x2AB96D8", Offset = "0x2AB96D8", VA = "0x2AB96D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x2AB9764", Offset = "0x2AB9764", VA = "0x2AB9764")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x2AB97EC", Offset = "0x2AB97EC", VA = "0x2AB97EC")]
	public void SetMoveObj(GameObject moveToObj, GameObject affectObj, GameObject backObj)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x2AB983C", Offset = "0x2AB983C", VA = "0x2AB983C")]
	public void SetInfo(bool needMoveBack, float waitTime)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x2AB9868", Offset = "0x2AB9868", VA = "0x2AB9868")]
	public void SetCallBack(Action startAction, Action<float> excudeAction, Action moveToFinishAction, Action stopAction)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x2AB98CC", Offset = "0x2AB98CC", VA = "0x2AB98CC")]
	private void ReSet()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x2AB98E8", Offset = "0x2AB98E8", VA = "0x2AB98E8")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x2AB9AA4", Offset = "0x2AB9AA4", VA = "0x2AB9AA4")]
	public void Excude(float dlt)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x2ABA564", Offset = "0x2ABA564", VA = "0x2ABA564")]
	public bool MoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x2ABA5B0", Offset = "0x2ABA5B0", VA = "0x2ABA5B0")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x2ABA398", Offset = "0x2ABA398", VA = "0x2ABA398")]
	private float HoldDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x2ABA418", Offset = "0x2ABA418", VA = "0x2ABA418")]
	private void SetSlerpTrn(Quaternion destinationRot, Vector3 destinationPos, float ratio)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x2ABA528", Offset = "0x2ABA528", VA = "0x2ABA528")]
	private void Finish()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x2ABA5B4", Offset = "0x2ABA5B4", VA = "0x2ABA5B4")]
	public TransferMovieShot()
	{
	}
}
[Token(Token = "0x2000106")]
public class CameraEffectHandling : MonoBehaviour
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Tween eyeBlur;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float preBlurValue;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float curBlurValue;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x243E55C", Offset = "0x243E55C", VA = "0x243E55C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x243E564", Offset = "0x243E564", VA = "0x243E564")]
	public void SetEyeBlur(float value, float time = 0f)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x243E568", Offset = "0x243E568", VA = "0x243E568")]
	public void ResetEyeBlur()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x243E56C", Offset = "0x243E56C", VA = "0x243E56C")]
	public CameraEffectHandling()
	{
	}
}
[Token(Token = "0x2000107")]
public class CameraEffectTools : Singleton<CameraEffectTools>
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CameraEffectHandling effectHandling;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EyeliyHandling eyeHandling;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine DelayStart;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x243E574", Offset = "0x243E574", VA = "0x243E574")]
	public void SetEyeBlur(float value, float time)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x243E578", Offset = "0x243E578", VA = "0x243E578")]
	public void ToBlack(float value, float time, Action endAction)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x243E638", Offset = "0x243E638", VA = "0x243E638")]
	public void StopEyeBlur()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x243E63C", Offset = "0x243E63C", VA = "0x243E63C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x243E7D4", Offset = "0x243E7D4", VA = "0x243E7D4")]
	public void AreasWarningInit()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x243E8C4", Offset = "0x243E8C4", VA = "0x243E8C4")]
	public void StartAreasWarningEyeBlur(Vector3 targetPos)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x243E8C8", Offset = "0x243E8C8", VA = "0x243E8C8")]
	public void DelayStartAreasWarningEyeBlur(Vector3 targetPos, float delayTime)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x243E7D8", Offset = "0x243E7D8", VA = "0x243E7D8")]
	public void StopAreasWarningEyeBlur()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x243E7DC", Offset = "0x243E7DC", VA = "0x243E7DC")]
	public void ToEyelib(bool isFade, float time, Action endAction, float delty = 0.1f)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x243E8CC", Offset = "0x243E8CC", VA = "0x243E8CC")]
	public CameraEffectTools()
	{
	}
}
[Token(Token = "0x2000108")]
public class EyeliyHandling : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53DF0", Offset = "0xE53DF0")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action endAction;

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x20F6C34", Offset = "0x20F6C34", VA = "0x20F6C34")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x20F6C3C", Offset = "0x20F6C3C", VA = "0x20F6C3C")]
		internal void <EyeliyFade>b__0()
		{
		}
	}

	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E00", Offset = "0xE53E00")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action endAction;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x20F6C90", Offset = "0x20F6C90", VA = "0x20F6C90")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x20F6C98", Offset = "0x20F6C98", VA = "0x20F6C98")]
		internal void <GrayFade>b__0()
		{
		}
	}

	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E10", Offset = "0xE53E10")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action endAction;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x20F6CE8", Offset = "0x20F6CE8", VA = "0x20F6CE8")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x20F6CF0", Offset = "0x20F6CF0", VA = "0x20F6CF0")]
		internal void <BlackFade>b__0()
		{
		}
	}

	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E20", Offset = "0xE53E20")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action endAction;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x20F6D40", Offset = "0x20F6D40", VA = "0x20F6D40")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x20F6D48", Offset = "0x20F6D48", VA = "0x20F6D48")]
		internal void <BlackFade>b__0()
		{
		}
	}

	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E30", Offset = "0xE53E30")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fov_t;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action endAction;

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x20F6D98", Offset = "0x20F6D98", VA = "0x20F6D98")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x20F6DA0", Offset = "0x20F6DA0", VA = "0x20F6DA0")]
		internal float <FovFade_Mode_1>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x20F6DA8", Offset = "0x20F6DA8", VA = "0x20F6DA8")]
		internal void <FovFade_Mode_1>b__1(float value)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x20F6DB0", Offset = "0x20F6DB0", VA = "0x20F6DB0")]
		internal void <FovFade_Mode_1>b__2()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x20F6E40", Offset = "0x20F6E40", VA = "0x20F6E40")]
		internal void <FovFade_Mode_1>b__3()
		{
		}
	}

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ScriptableRendererFeature> srf_list_all;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string shader_id_BlinkAmount;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string shader_id_GrayscalePower;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string shader_id_TintColor;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve ac_fovMode_1;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float time_fovMode_1;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BlinkEffect mainCameraVolume;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine cr_fade;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener eyeliyFade;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener grayFade;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener blackFade;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TweenerCore<float, float, FloatOptions> fovFade_1;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x24F704C", Offset = "0x24F704C", VA = "0x24F704C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x24F76E0", Offset = "0x24F76E0", VA = "0x24F76E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x24F765C", Offset = "0x24F765C", VA = "0x24F765C")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x24F7818", Offset = "0x24F7818", VA = "0x24F7818")]
	private void CheckOne()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x24F76E4", Offset = "0x24F76E4", VA = "0x24F76E4")]
	private void SetActive(bool state)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x24F78A4", Offset = "0x24F78A4", VA = "0x24F78A4")]
	public void EyeliyFade(bool isFade, float delay, float time, Action endAction)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x24F79D4", Offset = "0x24F79D4", VA = "0x24F79D4")]
	public void GrayFade(bool isFadeIn, float time, Action endAction)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x24F7B48", Offset = "0x24F7B48", VA = "0x24F7B48")]
	public void BlackFade(bool isFadeIn, float time, Action endAction)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x24F7CBC", Offset = "0x24F7CBC", VA = "0x24F7CBC")]
	public void BlackFade(float value, float time, Action endAction)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x24F7E24", Offset = "0x24F7E24", VA = "0x24F7E24")]
	public void FovFade_Mode_1(Action endAction)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x24F80B8", Offset = "0x24F80B8", VA = "0x24F80B8")]
	public EyeliyHandling()
	{
	}
}
[Token(Token = "0x200010E")]
public enum AssetExtension
{
	[Token(Token = "0x40005C4")]
	none,
	[Token(Token = "0x40005C5")]
	meta,
	[Token(Token = "0x40005C6")]
	prefab,
	[Token(Token = "0x40005C7")]
	asset,
	[Token(Token = "0x40005C8")]
	bytes,
	[Token(Token = "0x40005C9")]
	txt,
	[Token(Token = "0x40005CA")]
	xml,
	[Token(Token = "0x40005CB")]
	anim,
	[Token(Token = "0x40005CC")]
	controller,
	[Token(Token = "0x40005CD")]
	mat,
	[Token(Token = "0x40005CE")]
	otf,
	[Token(Token = "0x40005CF")]
	ttf,
	[Token(Token = "0x40005D0")]
	shader,
	[Token(Token = "0x40005D1")]
	fbx,
	[Token(Token = "0x40005D2")]
	unity,
	[Token(Token = "0x40005D3")]
	png,
	[Token(Token = "0x40005D4")]
	tga,
	[Token(Token = "0x40005D5")]
	jpg,
	[Token(Token = "0x40005D6")]
	jpeg,
	[Token(Token = "0x40005D7")]
	exr,
	[Token(Token = "0x40005D8")]
	ogg,
	[Token(Token = "0x40005D9")]
	mp3,
	[Token(Token = "0x40005DA")]
	wav
}
[Token(Token = "0x200010F")]
public class AssetFileInfo
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AssetsRoot;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E150", Offset = "0xE5E150")]
	private string <OriginPath>k__BackingField;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FileInfo mFileInfo;

	[Token(Token = "0x170000C6")]
	public string OriginPath
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x21343FC", Offset = "0x21343FC", VA = "0x21343FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD44", Offset = "0xE6AD44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x2134404", Offset = "0x2134404", VA = "0x2134404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AD54", Offset = "0xE6AD54")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public bool IsDirectoryExists
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x213440C", Offset = "0x213440C", VA = "0x213440C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C8")]
	public bool IsFileExists
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x2134418", Offset = "0x2134418", VA = "0x2134418")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	public bool IsMeta
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x2134438", Offset = "0x2134438", VA = "0x2134438")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CA")]
	public bool IsResourcesAsset
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x2134508", Offset = "0x2134508", VA = "0x2134508")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CB")]
	public bool IsDynamicAsset
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x2134644", Offset = "0x2134644", VA = "0x2134644")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CC")]
	public bool IsGUIDTrash
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x2134700", Offset = "0x2134700", VA = "0x2134700")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CD")]
	public int AssetID
	{
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x2134680", Offset = "0x2134680", VA = "0x2134680")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CE")]
	public string Extension
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0x213449C", Offset = "0x213449C", VA = "0x213449C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public string DotExtension
	{
		[Token(Token = "0x6000480")]
		[Address(RVA = "0x2134818", Offset = "0x2134818", VA = "0x2134818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public AssetExtension AssetExtension
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x2134834", Offset = "0x2134834", VA = "0x2134834")]
		get
		{
			return default(AssetExtension);
		}
	}

	[Token(Token = "0x170000D1")]
	public string FileName
	{
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x21349D8", Offset = "0x21349D8", VA = "0x21349D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public string FileNameWithoutExtension
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0x2134754", Offset = "0x2134754", VA = "0x2134754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public string Notes
	{
		[Token(Token = "0x6000484")]
		[Address(RVA = "0x21349F8", Offset = "0x21349F8", VA = "0x21349F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public string FullDirectoryName
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x2134570", Offset = "0x2134570", VA = "0x2134570")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public string ResourceDirectory
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x2134A84", Offset = "0x2134A84", VA = "0x2134A84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D6")]
	public string ResourcePath
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0x2134B1C", Offset = "0x2134B1C", VA = "0x2134B1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D7")]
	public string SigleBundleName
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x2134BD0", Offset = "0x2134BD0", VA = "0x2134BD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	public string MultiBundleName
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0x2134C84", Offset = "0x2134C84", VA = "0x2134C84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x2134D30", Offset = "0x2134D30", VA = "0x2134D30")]
	public AssetFileInfo(string iPath)
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class AssetInfo
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] mAssetExtensions;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string mNameWithotExtension;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int mAssetID;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string mGUID;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string mBundleName;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string mResourceDir;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AssetExtension mExtension;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string mName;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string mProjectPath;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mResourcePath;

	[Token(Token = "0x170000D9")]
	public int AssetID
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0x2134F20", Offset = "0x2134F20", VA = "0x2134F20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DA")]
	public string GUID
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x2134F28", Offset = "0x2134F28", VA = "0x2134F28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DB")]
	public string Name
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x2134F30", Offset = "0x2134F30", VA = "0x2134F30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DC")]
	public string NameWithoutExtension
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x213512C", Offset = "0x213512C", VA = "0x213512C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DD")]
	public string Extension
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x2134FD0", Offset = "0x2134FD0", VA = "0x2134FD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DE")]
	public string BundleName
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x2135134", Offset = "0x2135134", VA = "0x2135134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public string ProjectPath
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x213513C", Offset = "0x213513C", VA = "0x213513C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E0")]
	public string ResourcePath
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x2135228", Offset = "0x2135228", VA = "0x2135228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public string ResourceDir
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x21352C8", Offset = "0x21352C8", VA = "0x21352C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x21352D0", Offset = "0x21352D0", VA = "0x21352D0")]
	public AssetInfo(int iAssetID, string iGUID, string iNameWithotExtension, string iBundleName, string iResourceDir, AssetExtension iExtension = AssetExtension.none)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x21353FC", Offset = "0x21353FC", VA = "0x21353FC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000111")]
public class AssetManager : Singleton<AssetManager>
{
	[Token(Token = "0x2000112")]
	public delegate void ObjectCallback(UnityEngine.Object obj, bool isOld);

	[Token(Token = "0x2000113")]
	public delegate bool IsObjectOldFunc();

	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E40", Offset = "0xE53E40")]
	private sealed class <LoadWorker>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetManager <>4__this;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int assetID;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectCallback iCallBack;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IsObjectOldFunc func;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsInstantiate;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResourceRequest <request>5__2;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private long <startTicks>5__3;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x20F127C", Offset = "0x20F127C", VA = "0x20F127C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x20F12C4", Offset = "0x20F12C4", VA = "0x20F12C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x20F09FC", Offset = "0x20F09FC", VA = "0x20F09FC")]
		[DebuggerHidden]
		public <LoadWorker>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x20F0A28", Offset = "0x20F0A28", VA = "0x20F0A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x20F0A2C", Offset = "0x20F0A2C", VA = "0x20F0A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x20F1284", Offset = "0x20F1284", VA = "0x20F1284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E50", Offset = "0xE53E50")]
	private sealed class <InstantiateWorker>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetManager <>4__this;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject obj;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<GameObject> cb;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x20F09AC", Offset = "0x20F09AC", VA = "0x20F09AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0x20F09F4", Offset = "0x20F09F4", VA = "0x20F09F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x20F08C8", Offset = "0x20F08C8", VA = "0x20F08C8")]
		[DebuggerHidden]
		public <InstantiateWorker>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x20F08F4", Offset = "0x20F08F4", VA = "0x20F08F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x20F08F8", Offset = "0x20F08F8", VA = "0x20F08F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x20F09B4", Offset = "0x20F09B4", VA = "0x20F09B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, UnityEngine.Object> objectPool;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x21356A0", Offset = "0x21356A0", VA = "0x21356A0")]
	public void LoadLevelAsync(string iAssetName)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x213570C", Offset = "0x213570C", VA = "0x213570C")]
	private void LoadLevelAsync(int iID)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x2135704", Offset = "0x2135704", VA = "0x2135704")]
	private int GetAssetIDWithName(string iAssetName)
	{
		return default(int);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x2135710", Offset = "0x2135710", VA = "0x2135710")]
	private void ClearPool()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x2135764", Offset = "0x2135764", VA = "0x2135764")]
	public UnityEngine.Object GetObjectInPool(int assetID)
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x21357E0", Offset = "0x21357E0", VA = "0x21357E0")]
	private void AddObjectToPool(int assetID, UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x213590C", Offset = "0x213590C", VA = "0x213590C")]
	public void DoCleanWhenStateChange()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x2135910", Offset = "0x2135910", VA = "0x2135910")]
	public void ClearCacheData()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x2135918", Offset = "0x2135918", VA = "0x2135918")]
	public static byte[] LoadFileData(string filename, bool isPrintError = true)
	{
		return null;
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x2135920", Offset = "0x2135920", VA = "0x2135920")]
	private static byte[] LoadFileDataFromResource(string filename, bool isPrintError)
	{
		return null;
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x2135B0C", Offset = "0x2135B0C", VA = "0x2135B0C")]
	public void LoadObjectSync(int iAssetID, ObjectCallback iCallBack, IsObjectOldFunc func, bool isPrintError = true)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x2132D38", Offset = "0x2132D38", VA = "0x2132D38")]
	public UnityEngine.Object LoadObject(int iAssetID, bool isPrintError = true)
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x2135F2C", Offset = "0x2135F2C", VA = "0x2135F2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6AD64", Offset = "0xE6AD64")]
	private IEnumerator LoadWorker(int assetID, string path, ObjectCallback iCallBack, IsObjectOldFunc func, bool IsInstantiate)
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x212DE90", Offset = "0x212DE90", VA = "0x212DE90")]
	public void DestroyGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x21342D0", Offset = "0x21342D0", VA = "0x21342D0")]
	public void InstantiateGameObjectAsync(GameObject obj, Action<GameObject> cb)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x213600C", Offset = "0x213600C", VA = "0x213600C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6ADC4", Offset = "0xE6ADC4")]
	private IEnumerator InstantiateWorker(GameObject obj, Action<GameObject> cb)
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x21360B4", Offset = "0x21360B4", VA = "0x21360B4")]
	public GameObject InstantiateGameObject(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x2133598", Offset = "0x2133598", VA = "0x2133598")]
	public GameObject InstantiateGameObject(GameObject obj, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x2136280", Offset = "0x2136280", VA = "0x2136280")]
	public int GetAssetIDByObject(UnityEngine.Object obj)
	{
		return default(int);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x2136544", Offset = "0x2136544", VA = "0x2136544")]
	public AssetManager()
	{
	}
}
[Token(Token = "0x2000116")]
public enum AssetPrefix
{
	[Token(Token = "0x40005F9")]
	Hero = 11,
	[Token(Token = "0x40005FA")]
	Monster = 12,
	[Token(Token = "0x40005FB")]
	SceneObject = 21,
	[Token(Token = "0x40005FC")]
	BossMap = 22,
	[Token(Token = "0x40005FD")]
	NormalMap = 23,
	[Token(Token = "0x40005FE")]
	TownMap = 24,
	[Token(Token = "0x40005FF")]
	Font = 31,
	[Token(Token = "0x4000600")]
	SpriteAltas = 32,
	[Token(Token = "0x4000601")]
	UserInterface = 33,
	[Token(Token = "0x4000602")]
	Icon = 41,
	[Token(Token = "0x4000603")]
	VisualEffectUI = 51,
	[Token(Token = "0x4000604")]
	VisualEffectBattle = 52,
	[Token(Token = "0x4000605")]
	BackgroundMusic = 61,
	[Token(Token = "0x4000606")]
	Voice = 62,
	[Token(Token = "0x4000607")]
	SoundEffectGeneral = 63,
	[Token(Token = "0x4000608")]
	SoundEffectUI = 64,
	[Token(Token = "0x4000609")]
	SoundEffectBattle = 65
}
[Token(Token = "0x2000117")]
public class AssetTable : Singleton<AssetTable>
{
	[Token(Token = "0x400060A")]
	private const string RESOURCE_PATH = "Assets/Resources/";

	[Token(Token = "0x400060B")]
	private const string RESOURCE_ASSETS_PATH = "Assets/Resources/Assets/";

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool mIsRebuilding;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<IAssetTableProvider> mReadonlyProviders;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IAssetTableProvider> mProviders;

	[Token(Token = "0x170000E6")]
	public static bool HasAnyProvider
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x28F6D08", Offset = "0x28F6D08", VA = "0x28F6D08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x28F6DE4", Offset = "0x28F6DE4", VA = "0x28F6DE4")]
	public static void RegisterReadonlyProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x28F6F80", Offset = "0x28F6F80", VA = "0x28F6F80")]
	public static void RegisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x28F711C", Offset = "0x28F711C", VA = "0x28F711C")]
	public static void UnregisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x28F72EC", Offset = "0x28F72EC", VA = "0x28F72EC")]
	public static bool IsRegisterProvider(IAssetTableProvider iProvider)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x28F73D4", Offset = "0x28F73D4", VA = "0x28F73D4")]
	public static AssetInfo AssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x28F7628", Offset = "0x28F7628", VA = "0x28F7628")]
	public static void Reload()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x28F6E68", Offset = "0x28F6E68", VA = "0x28F6E68")]
	private void InternalRegisterReadonlyProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x28F7004", Offset = "0x28F7004", VA = "0x28F7004")]
	private void InternalRegisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x28F71A0", Offset = "0x28F71A0", VA = "0x28F71A0")]
	private void InternalUnregisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x28F7370", Offset = "0x28F7370", VA = "0x28F7370")]
	private bool InternalIsRegisterProvider(IAssetTableProvider iProvider)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x28F7458", Offset = "0x28F7458", VA = "0x28F7458")]
	private AssetInfo InternalAssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x28F76A4", Offset = "0x28F76A4", VA = "0x28F76A4")]
	private void InternalReload()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x28F7870", Offset = "0x28F7870", VA = "0x28F7870")]
	public AssetTable()
	{
	}
}
[Token(Token = "0x2000118")]
public class AssetTableModify
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E1C0", Offset = "0xE5E1C0")]
	private AssetTableModifyType <ModifyType>k__BackingField;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E1D0", Offset = "0xE5E1D0")]
	private string <PathA>k__BackingField;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E1E0", Offset = "0xE5E1E0")]
	private string <PathB>k__BackingField;

	[Token(Token = "0x170000E7")]
	public AssetTableModifyType ModifyType
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x28F7970", Offset = "0x28F7970", VA = "0x28F7970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AEC4", Offset = "0xE6AEC4")]
		get
		{
			return default(AssetTableModifyType);
		}
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x28F7978", Offset = "0x28F7978", VA = "0x28F7978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AED4", Offset = "0xE6AED4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public string PathA
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x28F7980", Offset = "0x28F7980", VA = "0x28F7980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AEE4", Offset = "0xE6AEE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x28F7988", Offset = "0x28F7988", VA = "0x28F7988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AEF4", Offset = "0xE6AEF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public string PathB
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x28F7990", Offset = "0x28F7990", VA = "0x28F7990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF04", Offset = "0xE6AF04")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x28F7998", Offset = "0x28F7998", VA = "0x28F7998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF14", Offset = "0xE6AF14")]
		private set
		{
		}
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x28F79A0", Offset = "0x28F79A0", VA = "0x28F79A0")]
	public AssetTableModify(AssetTableModifyType iModifyType, string iPathA, string iPathB)
	{
	}
}
[Token(Token = "0x2000119")]
public enum AssetTableModifyType
{
	[Token(Token = "0x4000613")]
	Import,
	[Token(Token = "0x4000614")]
	Delete,
	[Token(Token = "0x4000615")]
	Update
}
[Token(Token = "0x200011A")]
public class AssetTableXMLProvider : IAssetTableProvider
{
	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53E60", Offset = "0xE53E60")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iAssetID;

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x20F13F4", Offset = "0x20F13F4", VA = "0x20F13F4")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x20F13FC", Offset = "0x20F13FC", VA = "0x20F13FC")]
		internal bool <AssetInfoByAssetID>b__0(XMLNode item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000616")]
	private const string ASSET_TABLE_RES_PATH = "General/AssetTable.xml";

	[Token(Token = "0x4000617")]
	private const string TAG_ASSET_TABLE = "AssetTable";

	[Token(Token = "0x4000618")]
	private const string TAG_ASSET_INFO = "AssetInfo";

	[Token(Token = "0x4000619")]
	private const string TAG_ASSET_ID = "AID";

	[Token(Token = "0x400061A")]
	private const string TAG_NAME_WITHOUT_EXT = "NWE";

	[Token(Token = "0x400061B")]
	private const string TAG_GUID = "GID";

	[Token(Token = "0x400061C")]
	private const string TAG_BUNDLE_NAME = "BDN";

	[Token(Token = "0x400061D")]
	private const string TAG_RESOURCE_PATH = "RPA";

	[Token(Token = "0x400061E")]
	private const string TAG_EXTENSION = "EXT";

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E1F0", Offset = "0xE5E1F0")]
	private static AssetTableXMLProvider <Instance>k__BackingField;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string mResourcePath;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XMLNode[] mAssetInfos;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, AssetInfo> mAssetTableCache;

	[Token(Token = "0x170000EA")]
	public static AssetTableXMLProvider Instance
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x28F79F8", Offset = "0x28F79F8", VA = "0x28F79F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF24", Offset = "0xE6AF24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x28F7A44", Offset = "0x28F7A44", VA = "0x28F7A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF34", Offset = "0xE6AF34")]
		private set
		{
		}
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x28F7A98", Offset = "0x28F7A98", VA = "0x28F7A98")]
	public static void Init()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x28F7BD0", Offset = "0x28F7BD0", VA = "0x28F7BD0")]
	public AssetTableXMLProvider(string iResourcePath)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x28F8144", Offset = "0x28F8144", VA = "0x28F8144", Slot = "4")]
	public AssetInfo AssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x28F8608", Offset = "0x28F8608", VA = "0x28F8608", Slot = "5")]
	public int CountOfAssetInfo()
	{
		return default(int);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x28F8654", Offset = "0x28F8654", VA = "0x28F8654")]
	public AssetInfo[] AssetInfosByAssetIDRange(int iMinAssetID, int iMaxAssetID)
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x28F86A8", Offset = "0x28F86A8", VA = "0x28F86A8")]
	public AssetInfo[] AssetInfosByKeywords(string iKeyword)
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x28F86FC", Offset = "0x28F86FC", VA = "0x28F86FC")]
	public bool AddAssetInfo(AssetInfo iAssetInfo, bool iRebuilding = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x28F8750", Offset = "0x28F8750", VA = "0x28F8750")]
	public void UpdateAssetInfo(AssetInfo iNewAssetInfo, AssetInfo iOriginAssetInfo)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x28F87A4", Offset = "0x28F87A4", VA = "0x28F87A4")]
	public void DeleteAssetInfo(AssetInfo iAssetInfo)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x28F87F8", Offset = "0x28F87F8", VA = "0x28F87F8")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x28F884C", Offset = "0x28F884C", VA = "0x28F884C")]
	public void DelaySave(int iCount = 1)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x28F88A0", Offset = "0x28F88A0", VA = "0x28F88A0")]
	public void Save()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x28F7C78", Offset = "0x28F7C78", VA = "0x28F7C78", Slot = "6")]
	public void Reload()
	{
	}
}
[Token(Token = "0x200011C")]
public class Despawn : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DespawnDelay;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action destoryCallback;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x24E7FE8", Offset = "0x24E7FE8", VA = "0x24E7FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x24E7FEC", Offset = "0x24E7FEC", VA = "0x24E7FEC")]
	public void DespawnInit2(float _delay)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x24E8010", Offset = "0x24E8010", VA = "0x24E8010")]
	public void DespawnInit()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x24E8018", Offset = "0x24E8018", VA = "0x24E8018")]
	public void Init()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x24E8000", Offset = "0x24E8000", VA = "0x24E8000")]
	public void Init(float _delay, [Optional] Action destoryCB)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x24E8020", Offset = "0x24E8020", VA = "0x24E8020")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x24E8118", Offset = "0x24E8118", VA = "0x24E8118")]
	public Despawn()
	{
	}
}
[Token(Token = "0x200011D")]
public interface IAssetTableProvider
{
	[Token(Token = "0x60004ED")]
	AssetInfo AssetInfoByAssetID(int iAssetID);

	[Token(Token = "0x60004EE")]
	int CountOfAssetInfo();

	[Token(Token = "0x60004EF")]
	void Reload();
}
[Token(Token = "0x200011E")]
public class ReadFileManager
{
	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x271A4E8", Offset = "0x271A4E8", VA = "0x271A4E8")]
	public static byte[] LoadFileFromStreamAssets(string filename)
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x271A82C", Offset = "0x271A82C", VA = "0x271A82C")]
	public static string[] GetFileList(string folderName)
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x271A96C", Offset = "0x271A96C", VA = "0x271A96C")]
	public static bool FileExist(string folderName, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x271AD30", Offset = "0x271AD30", VA = "0x271AD30")]
	public static void InitOBBFile()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x271AEC0", Offset = "0x271AEC0", VA = "0x271AEC0")]
	private static int GetVersionCode()
	{
		return default(int);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x271ABE4", Offset = "0x271ABE4", VA = "0x271ABE4")]
	private static bool OBBFileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x271A6EC", Offset = "0x271A6EC", VA = "0x271A6EC")]
	public static byte[] LoadFileFromOBB(string filename)
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x271B360", Offset = "0x271B360", VA = "0x271B360")]
	public ReadFileManager()
	{
	}
}
[Token(Token = "0x200011F")]
public class AttributeHelper : Singleton<AttributeHelper>
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly UnOrderMultiMap<Type, Type> types;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x28F9A64", Offset = "0x28F9A64", VA = "0x28F9A64")]
	public AttributeHelper()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x28F9CC4", Offset = "0x28F9CC4", VA = "0x28F9CC4")]
	public List<Type> GetTypes(Type systemAttributeType)
	{
		return null;
	}
}
[Token(Token = "0x2000120")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE53E70", Offset = "0xE53E70")]
public class BaseAttribute : Attribute
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E200", Offset = "0xE5E200")]
	private readonly Type <AttributeType>k__BackingField;

	[Token(Token = "0x170000EB")]
	public Type AttributeType
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x290107C", Offset = "0x290107C", VA = "0x290107C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF44", Offset = "0xE6AF44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x2901084", Offset = "0x2901084", VA = "0x2901084")]
	public BaseAttribute()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE53EA8", Offset = "0xE53EA8")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE53EA8", Offset = "0xE53EA8")]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53F18", Offset = "0xE53F18")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AkGameObj <>4__this;

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x20EBAAC", Offset = "0x20EBAAC", VA = "0x20EBAAC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x20EBAB4", Offset = "0x20EBAB4", VA = "0x20EBAB4")]
		internal void <PostEvent>b__0(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
		{
		}
	}

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int eventPlayingNum;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasSetttingValue;

	[Token(Token = "0x400062B")]
	private const float destroyDelay = 2f;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isCamera;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AkCallbackManager.EventCallback akCallBack;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isEnvironmentAware;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider m_Collider;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isRegistered;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[HideInInspector]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4000638")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[HideInInspector]
	private int listenerMask;

	[Token(Token = "0x170000EC")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x23DBB0C", Offset = "0x23DBB0C", VA = "0x23DBB0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000ED")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x23DBB28", Offset = "0x23DBB28", VA = "0x23DBB28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x23DF528", Offset = "0x23DF528", VA = "0x23DF528")]
	private void PlayEndAction()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x23DF538", Offset = "0x23DF538", VA = "0x23DF538")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x23DF5EC", Offset = "0x23DF5EC", VA = "0x23DF5EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x23DF5F0", Offset = "0x23DF5F0", VA = "0x23DF5F0")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x23DF5FC", Offset = "0x23DF5FC", VA = "0x23DF5FC")]
	public void PostEvent(string eventName)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x23DF6A8", Offset = "0x23DF6A8", VA = "0x23DF6A8")]
	public void PostEvent(string eventName, AkCallbackManager.EventCallback callback, [Optional] object cookie)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x23DF8F0", Offset = "0x23DF8F0", VA = "0x23DF8F0")]
	public void PostEvent(string eventName, Action callback)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x23DF9F8", Offset = "0x23DF9F8", VA = "0x23DF9F8")]
	public void Stop(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x23DFAAC", Offset = "0x23DFAAC", VA = "0x23DFAAC")]
	public void Pause(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x23DFABC", Offset = "0x23DFABC", VA = "0x23DFABC")]
	public void Resume(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x23DFA08", Offset = "0x23DFA08", VA = "0x23DFA08")]
	public void ExecuteAction(string eventName, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x23DFBA8", Offset = "0x23DFBA8", VA = "0x23DFBA8")]
	public void SetSwitch(string switchGroup, string switchState)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x23DFCFC", Offset = "0x23DFCFC", VA = "0x23DFCFC")]
	public void SetRTPCValue(string name, float value)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x23DFE60", Offset = "0x23DFE60", VA = "0x23DFE60")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x23DFFD0", Offset = "0x23DFFD0", VA = "0x23DFFD0")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x23DF8E0", Offset = "0x23DF8E0", VA = "0x23DF8E0")]
	private void VerifyPlayingID(string eventName, uint playingId)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x23DFBA4", Offset = "0x23DFBA4", VA = "0x23DFBA4")]
	protected void Verify(AKRESULT result)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x23E00EC", Offset = "0x23E00EC", VA = "0x23E00EC")]
	public void ResetDefaultListeners()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x23E0354", Offset = "0x23E0354", VA = "0x23E0354")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x23E0374", Offset = "0x23E0374", VA = "0x23E0374")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x23E0394", Offset = "0x23E0394", VA = "0x23E0394")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x23E0510", Offset = "0x23E0510", VA = "0x23E0510")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x23E07DC", Offset = "0x23E07DC", VA = "0x23E07DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x23E0E30", Offset = "0x23E0E30", VA = "0x23E0E30")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x23E0E34", Offset = "0x23E0E34", VA = "0x23E0E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x23E0E48", Offset = "0x23E0E48", VA = "0x23E0E48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x23E10C4", Offset = "0x23E10C4", VA = "0x23E10C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x23E1144", Offset = "0x23E1144", VA = "0x23E1144", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x23E11E0", Offset = "0x23E11E0", VA = "0x23E11E0", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x23E1204", Offset = "0x23E1204", VA = "0x23E1204", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x23E1228", Offset = "0x23E1228", VA = "0x23E1228")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x23E1240", Offset = "0x23E1240", VA = "0x23E1240")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x23E14A0", Offset = "0x23E14A0", VA = "0x23E14A0")]
	public AkGameObj()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x23E15A4", Offset = "0x23E15A4", VA = "0x23E15A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF54", Offset = "0xE6AF54")]
	private void <PostEvent>b__10_0(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}
}
[Token(Token = "0x2000123")]
internal class AudioManager : Singleton<AudioManager>
{
	[Token(Token = "0x400063C")]
	private const int commonAudioSourceAssetId = 64000001;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isEnable;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool wwiseInit;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<IAudioDefine> defineList;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, IAudioDefine> wwiseDefineList;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, string> wwiseRTPCDictionary;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<int, string> audioEventNameDic;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, string> e_SwitchGroupEventDic;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, string> e_SwitchEventDic;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, string> e_StateGroupEventDic;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, string> e_StateEventDic;

	[Token(Token = "0x170000EE")]
	public bool IsEnable
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x28FD204", Offset = "0x28FD204", VA = "0x28FD204")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x28FD20C", Offset = "0x28FD20C", VA = "0x28FD20C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public bool WwiseInit
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x28FD620", Offset = "0x28FD620", VA = "0x28FD620")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x28FD628", Offset = "0x28FD628", VA = "0x28FD628")]
		set
		{
		}
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x28F8E60", Offset = "0x28F8E60", VA = "0x28F8E60")]
	public WwiseDefine Play(AudioEvent audioEvent, GameObject wwiseObject, Action action, bool needDestroy, SwitchInfoData switchInfoData, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x28FD9A4", Offset = "0x28FD9A4", VA = "0x28FD9A4")]
	public WwiseDefine Play(AudioEvent audioEvent, Vector3 pos, Quaternion rot, Action action, bool needDestroy, SwitchInfoData switchInfoData, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x28FBCC0", Offset = "0x28FBCC0", VA = "0x28FBCC0")]
	public void Stop(WwiseDefine wwiseObject, bool isDestoryObj = true)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x28FE134", Offset = "0x28FE134", VA = "0x28FE134")]
	public void Pause(AudioEvent audioEvent, GameObject wwiseObject)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x28FE294", Offset = "0x28FE294", VA = "0x28FE294")]
	public void Resume(AudioEvent audioEvent, GameObject wwiseObject)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x28FE3F8", Offset = "0x28FE3F8", VA = "0x28FE3F8")]
	public void PauseAll()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x28FE590", Offset = "0x28FE590", VA = "0x28FE590")]
	public void ResumeAll()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x28FD3FC", Offset = "0x28FD3FC", VA = "0x28FD3FC")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x28FD634", Offset = "0x28FD634", VA = "0x28FD634")]
	private WwiseDefine SetWwiseDefine(AudioEvent audioEvent, SwitchInfoData switchInfoData, GameObject eventRoot, Action action, bool needDestroy, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x28FE728", Offset = "0x28FE728", VA = "0x28FE728")]
	public void SetRTPCValue(RTPCEvent rTPCEvent, float value)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x28FE8E8", Offset = "0x28FE8E8", VA = "0x28FE8E8")]
	public void SetRTPCValue(RTPCEvent rTPCEvent, float value, WwiseDefine wwiseDefine)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x28FEB4C", Offset = "0x28FEB4C", VA = "0x28FEB4C")]
	public float GetRTPCValue(RTPCEvent rTPCEvent, GameObject obj)
	{
		return default(float);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x28FED28", Offset = "0x28FED28", VA = "0x28FED28")]
	public void SetSwitch(e_SwitchGroupEvent switchGroupEvent, e_SwitchEvent switchEvent, WwiseDefine wwiseDefine)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x28FF078", Offset = "0x28FF078", VA = "0x28FF078")]
	public void SetState(e_StateGroupEvent stateGroupEvent, e_StateEvent stateEvent)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x28FF320", Offset = "0x28FF320", VA = "0x28FF320")]
	public void SendToHWServer(int assetid, Vector3 pos, float volume)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x28FF324", Offset = "0x28FF324", VA = "0x28FF324")]
	public void AddAudioDefine(IAudioDefine define)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x28FF3C4", Offset = "0x28FF3C4", VA = "0x28FF3C4")]
	public void RemoveAudioDefine(IAudioDefine define)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x28FD260", Offset = "0x28FD260", VA = "0x28FD260")]
	public void SetAllAudioDefine(bool isEnable)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x28FF464", Offset = "0x28FF464", VA = "0x28FF464")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000124")]
public interface IAudioDefine
{
	[Token(Token = "0x6000539")]
	void Init(params object[] args);

	[Token(Token = "0x600053A")]
	void Play();

	[Token(Token = "0x600053B")]
	void Stop();

	[Token(Token = "0x600053C")]
	void Pause();

	[Token(Token = "0x600053D")]
	void Resume();

	[Token(Token = "0x600053E")]
	void SetEnable(bool isEnable);
}
[Token(Token = "0x2000125")]
public struct AudioStruct
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject wwiseRoot;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int priority;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x28FF660", Offset = "0x28FF660", VA = "0x28FF660")]
	public AudioStruct(GameObject _wwiseRoot, AudioEvent _audioEvent, int _priority)
	{
	}
}
[Serializable]
[Token(Token = "0x2000126")]
public class SwitchInfoData
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_SwitchGroupEvent groupType;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_SwitchEvent switchType;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x22615E0", Offset = "0x22615E0", VA = "0x22615E0")]
	public SwitchInfoData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000127")]
public class StateInfoData
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_StateGroupEvent groupType;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_StateEvent stateType;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x2166098", Offset = "0x2166098", VA = "0x2166098")]
	public StateInfoData()
	{
	}
}
[Token(Token = "0x2000128")]
public enum AudioEvent
{
	[Token(Token = "0x400064F")]
	Unknown = 0,
	[Token(Token = "0x4000650")]
	AMB_Switch = 1000,
	[Token(Token = "0x4000651")]
	AMB_Stop = 1001,
	[Token(Token = "0x4000652")]
	Burn_Loop = 1002,
	[Token(Token = "0x4000653")]
	Eagle_Loop = 1003,
	[Token(Token = "0x4000654")]
	Lamp_Loop = 1004,
	[Token(Token = "0x4000655")]
	Wood_Destruction = 1005,
	[Token(Token = "0x4000656")]
	Wood_Install = 1006,
	[Token(Token = "0x4000657")]
	Bullet_Hit_Material_Switch = 2000,
	[Token(Token = "0x4000658")]
	Ammo_Hit_Switch = 2001,
	[Token(Token = "0x4000659")]
	Ammo_Hit_Switch_Stop = 2002,
	[Token(Token = "0x400065A")]
	Gun_Shoot_Switch = 3000,
	[Token(Token = "0x400065B")]
	Gun_Reload_Switch = 3001,
	[Token(Token = "0x400065C")]
	Gun_No_Bullet_Switch = 3002,
	[Token(Token = "0x400065D")]
	Gun_Grab_Switch = 3003,
	[Token(Token = "0x400065E")]
	Gun_Charge_Switch = 3004,
	[Token(Token = "0x400065F")]
	Gun_Shoot_Switch_Stop = 3005,
	[Token(Token = "0x4000660")]
	Gun_Idle_Switch_Stop = 3006,
	[Token(Token = "0x4000661")]
	Gun_Idle_Switch = 3007,
	[Token(Token = "0x4000662")]
	Gun_Reload_MT_Eject = 3008,
	[Token(Token = "0x4000663")]
	Gun_Reload_MT_Insert = 3009,
	[Token(Token = "0x4000664")]
	Gun_Gatlin_Single_Shoot = 10601,
	[Token(Token = "0x4000665")]
	Music_All = 6000,
	[Token(Token = "0x4000666")]
	Amb_All = 6010,
	[Token(Token = "0x4000667")]
	Roguelite_Guide_Voice_01 = 7000,
	[Token(Token = "0x4000668")]
	Voice_Over_02 = 7001,
	[Token(Token = "0x4000669")]
	Voice_Over_04 = 7002,
	[Token(Token = "0x400066A")]
	Roguelite_Guide_Voice_04 = 7007,
	[Token(Token = "0x400066B")]
	Roguelite_Guide_Voice_05 = 7008,
	[Token(Token = "0x400066C")]
	Roguelite_Guide_Voice_06 = 7009,
	[Token(Token = "0x400066D")]
	Roguelite_Guide_Voice_07 = 7011,
	[Token(Token = "0x400066E")]
	Roguelite_Guide_Voice_02 = 7015,
	[Token(Token = "0x400066F")]
	Roguelite_Guide_Voice_03 = 7016,
	[Token(Token = "0x4000670")]
	Roguelite_Guide_Voice_08 = 7020,
	[Token(Token = "0x4000671")]
	Roguelite_Guide_Voice_09 = 7021,
	[Token(Token = "0x4000672")]
	Roguelite_Guide_Voice_10 = 7022,
	[Token(Token = "0x4000673")]
	UI_Heal = 7503,
	[Token(Token = "0x4000674")]
	Mummy1_Idle1_Loop = 7701,
	[Token(Token = "0x4000675")]
	Mummy1_Idle2_Loop = 7702,
	[Token(Token = "0x4000676")]
	Mummy1_Idle3_Loop = 7703,
	[Token(Token = "0x4000677")]
	Mummy1_Stand_Up = 7704,
	[Token(Token = "0x4000678")]
	Mummy1_Rage = 7705,
	[Token(Token = "0x4000679")]
	Mummy1_Footstep = 7706,
	[Token(Token = "0x400067A")]
	Mummy1_Attack1 = 7707,
	[Token(Token = "0x400067B")]
	Mummy1_Attack2 = 7708,
	[Token(Token = "0x400067C")]
	Mummy1_Attack3 = 7709,
	[Token(Token = "0x400067D")]
	Mummy1_Attack4 = 7710,
	[Token(Token = "0x400067E")]
	Mummy1_Attack5 = 7711,
	[Token(Token = "0x400067F")]
	Mummy1_Attack6 = 7712,
	[Token(Token = "0x4000680")]
	Mummy1_Attack7 = 7713,
	[Token(Token = "0x4000681")]
	Mummy1_Get_Hit_Vo = 7714,
	[Token(Token = "0x4000682")]
	Mummy1_Death1 = 7715,
	[Token(Token = "0x4000683")]
	Mummy1_Death2 = 7716,
	[Token(Token = "0x4000684")]
	Mummy1_Death3 = 7717,
	[Token(Token = "0x4000685")]
	Mummy1_Death4 = 7718,
	[Token(Token = "0x4000686")]
	Mummy2_Idle_Loop_Vo = 7719,
	[Token(Token = "0x4000687")]
	Mummy2_Rage = 7720,
	[Token(Token = "0x4000688")]
	Mummy2_Footstep = 7721,
	[Token(Token = "0x4000689")]
	Mummy2_Attack1 = 7722,
	[Token(Token = "0x400068A")]
	Mummy2_Attack2 = 7723,
	[Token(Token = "0x400068B")]
	Mummy2_Get_Hit1_Vo = 7724,
	[Token(Token = "0x400068C")]
	Mummy2_Get_Hit2_Vo = 7725,
	[Token(Token = "0x400068D")]
	Scorpion_Idle1_Loop = 7726,
	[Token(Token = "0x400068E")]
	Scorpion_Idle2_Loop = 7727,
	[Token(Token = "0x400068F")]
	Scorpion_Stand = 7728,
	[Token(Token = "0x4000690")]
	Scorpion_Footstep1 = 7729,
	[Token(Token = "0x4000691")]
	Scorpion_Footstep2 = 7731,
	[Token(Token = "0x4000692")]
	Scorpion_Sand_Move_Loop = 7733,
	[Token(Token = "0x4000693")]
	Scorpion_Sand_Move_Loop_Stop = 7734,
	[Token(Token = "0x4000694")]
	Scorpion_In_Sand1 = 7735,
	[Token(Token = "0x4000695")]
	Scorpion_Out_Sand1 = 7736,
	[Token(Token = "0x4000696")]
	Scorpion_Attack1 = 7737,
	[Token(Token = "0x4000697")]
	Scorpion_Attack2 = 7738,
	[Token(Token = "0x4000698")]
	Scorpion_Attack3 = 7739,
	[Token(Token = "0x4000699")]
	Scorpion_Get_Hit1 = 7740,
	[Token(Token = "0x400069A")]
	Scorpion_Death1 = 7741,
	[Token(Token = "0x400069B")]
	Scorpion_Death2 = 7742,
	[Token(Token = "0x400069C")]
	Mummy3_Idle_Loop = 7743,
	[Token(Token = "0x400069D")]
	Mummy3_Roar = 7744,
	[Token(Token = "0x400069E")]
	Mummy3_Show1_Up = 7745,
	[Token(Token = "0x400069F")]
	Mummy3_Show2_Up = 7746,
	[Token(Token = "0x40006A0")]
	Mummy3_Footstep = 7747,
	[Token(Token = "0x40006A1")]
	Mummy3_Attack1 = 7748,
	[Token(Token = "0x40006A2")]
	Mummy3_Attack2 = 7749,
	[Token(Token = "0x40006A3")]
	Mummy3_Attack3 = 7750,
	[Token(Token = "0x40006A4")]
	Mummy3_Get_Hit1_Vo = 7751,
	[Token(Token = "0x40006A5")]
	Mummy3_Death6 = 7752,
	[Token(Token = "0x40006A6")]
	Scarab_Crawl_Loop = 7753,
	[Token(Token = "0x40006A7")]
	Scarab_Crawl_Loop_Stop = 7754,
	[Token(Token = "0x40006A8")]
	Scarab_Fly_Loop = 7755,
	[Token(Token = "0x40006A9")]
	Scarab_Fly_Loop_Stop = 7756,
	[Token(Token = "0x40006AA")]
	Mummy3_Skill1_Warning = 7757,
	[Token(Token = "0x40006AB")]
	Mummy3_Skill1_Warning_Stop = 7758,
	[Token(Token = "0x40006AC")]
	Mummy3_Skill1_Motion = 7759,
	[Token(Token = "0x40006AD")]
	Mummy3_Skill1_Sand = 7760,
	[Token(Token = "0x40006AE")]
	Mummy3_Skill2_Charge = 7761,
	[Token(Token = "0x40006AF")]
	Mummy3_Skill2_Charge_Stop = 7762,
	[Token(Token = "0x40006B0")]
	Mummy3_Skill2_Motion = 7763,
	[Token(Token = "0x40006B1")]
	Mummy3_Skill2_Sandstorm = 7764,
	[Token(Token = "0x40006B2")]
	Mummy2_Death = 7770,
	[Token(Token = "0x40006B3")]
	Blood_Spray = 7771,
	[Token(Token = "0x40006B4")]
	Monster_Birth_Magic = 7772,
	[Token(Token = "0x40006B5")]
	Tomb_Guard_Showup1 = 7780,
	[Token(Token = "0x40006B6")]
	Tomb_Guard_Showup2 = 7781,
	[Token(Token = "0x40006B7")]
	Tomb_Guard_Run = 7782,
	[Token(Token = "0x40006B8")]
	Tomb_Guard_Dig = 7783,
	[Token(Token = "0x40006B9")]
	Tomb_Guard_Eat = 7784,
	[Token(Token = "0x40006BA")]
	Tomb_Guard_Buff_Vo = 7785,
	[Token(Token = "0x40006BB")]
	Tomb_Guard_Attack1 = 7786,
	[Token(Token = "0x40006BC")]
	Tomb_Guard_Attack2 = 7787,
	[Token(Token = "0x40006BD")]
	Tomb_Guard_Attack3 = 7788,
	[Token(Token = "0x40006BE")]
	Head_Burst = 7789,
	[Token(Token = "0x40006BF")]
	Anubisservant_Disappear = 7790,
	[Token(Token = "0x40006C0")]
	Anubisservant_Appear = 7791,
	[Token(Token = "0x40006C1")]
	Anubisservant_Throwspear = 7792,
	[Token(Token = "0x40006C2")]
	Anubisservant_Hit = 7793,
	[Token(Token = "0x40006C3")]
	Anubisservant_Death = 7794,
	[Token(Token = "0x40006C4")]
	Pharaoh_Standup = 7800,
	[Token(Token = "0x40006C5")]
	Pharaoh_Walk1 = 7801,
	[Token(Token = "0x40006C6")]
	Pharaoh_Helmet_Broken = 7802,
	[Token(Token = "0x40006C7")]
	Pharaoh_Attack3 = 7803,
	[Token(Token = "0x40006C8")]
	Pharaoh_Crash = 7804,
	[Token(Token = "0x40006C9")]
	Pharaoh_Hit = 7805,
	[Token(Token = "0x40006CA")]
	Pharaoh_Death1 = 7806,
	[Token(Token = "0x40006CB")]
	Pharaoh_Death2 = 7807,
	[Token(Token = "0x40006CC")]
	Wall_Destruction = 8000,
	[Token(Token = "0x40006CD")]
	Sand_Drop_Loop = 8001,
	[Token(Token = "0x40006CE")]
	Sand_Drop_Loop_Stop = 8002,
	[Token(Token = "0x40006CF")]
	Stone_Door1_Open = 8003,
	[Token(Token = "0x40006D0")]
	Stone_Door2_Open = 8004,
	[Token(Token = "0x40006D1")]
	Stone_Door3_Open = 8005,
	[Token(Token = "0x40006D2")]
	Lift_Machine_Open = 8006,
	[Token(Token = "0x40006D3")]
	Lift_Wood_Run = 8007,
	[Token(Token = "0x40006D4")]
	Lift_Stone_Run = 8008,
	[Token(Token = "0x40006D5")]
	Triangle_Loop = 8009,
	[Token(Token = "0x40006D6")]
	Triangle_Pass_Barrier = 8010,
	[Token(Token = "0x40006D7")]
	Triangle_Platform_Shine = 8011,
	[Token(Token = "0x40006D8")]
	Stone_Button = 8012,
	[Token(Token = "0x40006D9")]
	Coffin_Open = 8013,
	[Token(Token = "0x40006DA")]
	Stone_Ball_Popup = 8014,
	[Token(Token = "0x40006DB")]
	Stone_Ball_Impact = 8015,
	[Token(Token = "0x40006DC")]
	Stone_Ball_Broken = 8016,
	[Token(Token = "0x40006DD")]
	Gear_Switch_Loop = 8017,
	[Token(Token = "0x40006DE")]
	Gear_Switch_Stop = 8018,
	[Token(Token = "0x40006DF")]
	Buy_Fail = 8019,
	[Token(Token = "0x40006E0")]
	Ship_Sand_Move_Loop = 8020,
	[Token(Token = "0x40006E1")]
	Ship_Sand_Move_Stop = 8021,
	[Token(Token = "0x40006E2")]
	Room_Collapsed_L = 8022,
	[Token(Token = "0x40006E3")]
	Room_Collapsed_R = 8023,
	[Token(Token = "0x40006E4")]
	Lift_Stone_Escalator_Run_Loop = 8024,
	[Token(Token = "0x40006E5")]
	Lift_Stone_Escalator_Run_Stop = 8025,
	[Token(Token = "0x40006E6")]
	Grab_Coin = 8026,
	[Token(Token = "0x40006E7")]
	Metal_Box_Open = 8027,
	[Token(Token = "0x40006E8")]
	Wood_Box_Open = 8028,
	[Token(Token = "0x40006E9")]
	Triangle_Gear_Embed = 8029,
	[Token(Token = "0x40006EA")]
	Crystal_Laser_loop = 8030,
	[Token(Token = "0x40006EB")]
	Crystal_Explosion = 8031,
	[Token(Token = "0x40006EC")]
	Wall_Gear_Move_Loop = 8032,
	[Token(Token = "0x40006ED")]
	Wall_Gear_Stop = 8033,
	[Token(Token = "0x40006EE")]
	Energy_Get = 8034,
	[Token(Token = "0x40006EF")]
	Transfer_Sand_Loop = 8035,
	[Token(Token = "0x40006F0")]
	Transfer_Sand_Loop_Stop = 8036,
	[Token(Token = "0x40006F1")]
	Belt_Put_In = 8037,
	[Token(Token = "0x40006F2")]
	Belt_Put_Out = 8038,
	[Token(Token = "0x40006F3")]
	Ammo_Box_Open = 8039,
	[Token(Token = "0x40006F4")]
	Ammo_Fly_In = 8040,
	[Token(Token = "0x40006F5")]
	Weapon_Random_Change = 8041,
	[Token(Token = "0x40006F6")]
	SFX_Artifact_Appear_01 = 8042,
	[Token(Token = "0x40006F7")]
	SFX_Spiketrap_Up_01 = 8043,
	[Token(Token = "0x40006F8")]
	SFX_Artifactbox_Open_01 = 8044,
	[Token(Token = "0x40006F9")]
	SFX_SlotMachine_01 = 8045,
	[Token(Token = "0x40006FA")]
	SFX_Firetrap_01 = 8046,
	[Token(Token = "0x40006FB")]
	Heart_Beat_Low_HP = 8118,
	[Token(Token = "0x40006FC")]
	Major_Voice_Hurt = 8119,
	[Token(Token = "0x40006FD")]
	Player_Move_Open_Loop = 8120,
	[Token(Token = "0x40006FE")]
	Player_Move_Line_Stop = 8121,
	[Token(Token = "0x40006FF")]
	Time_Control_Launch = 8122,
	[Token(Token = "0x4000700")]
	Time_Control_Loop = 8123,
	[Token(Token = "0x4000701")]
	Time_Control_Over_On_321 = 8124,
	[Token(Token = "0x4000702")]
	Time_Control_Over = 8125,
	[Token(Token = "0x4000703")]
	Pharaoh_JumpAtk_01 = 8130,
	[Token(Token = "0x4000704")]
	Pharaoh_Walk2 = 8131,
	[Token(Token = "0x4000705")]
	Pharaoh_Show2_Up = 8132,
	[Token(Token = "0x4000706")]
	Pharaoh_Roar_01 = 8133,
	[Token(Token = "0x4000707")]
	SFX_Button_01 = 8200,
	[Token(Token = "0x4000708")]
	SFX_Button_02 = 8201
}
[Token(Token = "0x2000129")]
public enum RTPCEvent
{
	[Token(Token = "0x400070A")]
	Unknown = 0,
	[Token(Token = "0x400070B")]
	Room = 1,
	[Token(Token = "0x400070C")]
	Gatlin_Blend_RTPC = 2,
	[Token(Token = "0x400070D")]
	Sfx_Volume_RTPC = 100,
	[Token(Token = "0x400070E")]
	Music_Volume_RTPC = 101,
	[Token(Token = "0x400070F")]
	Voice_Volume_RTPC = 102,
	[Token(Token = "0x4000710")]
	Audio_Volume_RTPC = 103,
	[Token(Token = "0x4000711")]
	Reverb_Parameter_RTPC = 104
}
[Token(Token = "0x200012A")]
public enum e_SwitchGroupEvent
{
	[Token(Token = "0x4000713")]
	Unknown,
	[Token(Token = "0x4000714")]
	Bullet_Hit_Material_Switch,
	[Token(Token = "0x4000715")]
	Gun_Switch,
	[Token(Token = "0x4000716")]
	AMB_Switch_Group,
	[Token(Token = "0x4000717")]
	Ammo_Hit_Switch
}
[Token(Token = "0x200012B")]
public enum e_SwitchEvent
{
	[Token(Token = "0x4000719")]
	Unknown = 0,
	[Token(Token = "0x400071A")]
	Cement = 1000,
	[Token(Token = "0x400071B")]
	Sand = 1001,
	[Token(Token = "0x400071C")]
	Wood = 1002,
	[Token(Token = "0x400071D")]
	Metal = 1003,
	[Token(Token = "0x400071E")]
	Meat = 1007,
	[Token(Token = "0x400071F")]
	Helmet_Blood = 1008,
	[Token(Token = "0x4000720")]
	Headshot = 1010,
	[Token(Token = "0x4000721")]
	Pistol = 2000,
	[Token(Token = "0x4000722")]
	Submachine_Gun = 2001,
	[Token(Token = "0x4000723")]
	Gatlin = 2002,
	[Token(Token = "0x4000724")]
	Shotgun = 2003,
	[Token(Token = "0x4000725")]
	Plasma_Gun = 2004,
	[Token(Token = "0x4000726")]
	Needle_Gun = 2005,
	[Token(Token = "0x4000727")]
	Flamethrower = 2006,
	[Token(Token = "0x4000728")]
	Fuel_Gun = 2007,
	[Token(Token = "0x4000729")]
	Laser_Gun = 2008,
	[Token(Token = "0x400072A")]
	RPG = 2009,
	[Token(Token = "0x400072B")]
	Crossbow = 2010,
	[Token(Token = "0x400072C")]
	EMP = 2011,
	[Token(Token = "0x400072D")]
	Pistol_DE = 2012,
	[Token(Token = "0x400072E")]
	AMB_Inside = 3001,
	[Token(Token = "0x400072F")]
	AMB_Outside = 3002,
	[Token(Token = "0x4000730")]
	Ready = 3010,
	[Token(Token = "0x4000731")]
	Round01 = 3011,
	[Token(Token = "0x4000732")]
	Round02 = 3012,
	[Token(Token = "0x4000733")]
	Round03 = 3013,
	[Token(Token = "0x4000734")]
	Round04 = 3014,
	[Token(Token = "0x4000735")]
	Round05 = 3015,
	[Token(Token = "0x4000736")]
	Round06 = 3016,
	[Token(Token = "0x4000737")]
	Round11 = 3017,
	[Token(Token = "0x4000738")]
	Round12 = 3018,
	[Token(Token = "0x4000739")]
	Round14 = 3019,
	[Token(Token = "0x400073A")]
	Crossbow_Hit = 4001,
	[Token(Token = "0x400073B")]
	Crossbow_Hit_Explode = 4002,
	[Token(Token = "0x400073C")]
	EMP_Hit_Explode = 4003,
	[Token(Token = "0x400073D")]
	EMP_Hit_Electricity_Loop = 4004,
	[Token(Token = "0x400073E")]
	Flamethrower_Hit_Burn_Loop = 4005,
	[Token(Token = "0x400073F")]
	Laser_Hit = 4006,
	[Token(Token = "0x4000740")]
	Plasma_Hit = 4007,
	[Token(Token = "0x4000741")]
	RPG_Hit_Explode = 4008,
	[Token(Token = "0x4000742")]
	Fuel_Hit_Burn = 4009
}
[Token(Token = "0x200012C")]
public enum e_StateGroupEvent : uint
{
	[Token(Token = "0x4000744")]
	Unknown = 0u,
	[Token(Token = "0x4000745")]
	Music_State_Group = 1000u,
	[Token(Token = "0x4000746")]
	Time_Breaking_State_Group = 2000u,
	[Token(Token = "0x4000747")]
	Low_Pass_State_Group = 3000u
}
[Token(Token = "0x200012D")]
public enum e_StateEvent : uint
{
	[Token(Token = "0x4000749")]
	Unknown = 0u,
	[Token(Token = "0x400074A")]
	Ready_Room = 1001u,
	[Token(Token = "0x400074B")]
	Explore1 = 1002u,
	[Token(Token = "0x400074C")]
	Combat1 = 1003u,
	[Token(Token = "0x400074D")]
	Explore2 = 1004u,
	[Token(Token = "0x400074E")]
	Combat2 = 1005u,
	[Token(Token = "0x400074F")]
	Explore3 = 1007u,
	[Token(Token = "0x4000750")]
	Combat3 = 1008u,
	[Token(Token = "0x4000751")]
	Explore4 = 1009u,
	[Token(Token = "0x4000752")]
	Combat4 = 1010u,
	[Token(Token = "0x4000753")]
	Explore5 = 1011u,
	[Token(Token = "0x4000754")]
	Combat5 = 1012u,
	[Token(Token = "0x4000755")]
	Explore6 = 1013u,
	[Token(Token = "0x4000756")]
	Combat6 = 1014u,
	[Token(Token = "0x4000757")]
	Explore11 = 1030u,
	[Token(Token = "0x4000758")]
	Combat11 = 1031u,
	[Token(Token = "0x4000759")]
	Explore12 = 1032u,
	[Token(Token = "0x400075A")]
	Combat12 = 1033u,
	[Token(Token = "0x400075B")]
	Explore14 = 1034u,
	[Token(Token = "0x400075C")]
	Combat14 = 1035u,
	[Token(Token = "0x400075D")]
	Death = 1020u,
	[Token(Token = "0x400075E")]
	Boss = 1021u,
	[Token(Token = "0x400075F")]
	Boss_Death = 1022u,
	[Token(Token = "0x4000760")]
	Count = 1023u,
	[Token(Token = "0x4000761")]
	Open = 2000u,
	[Token(Token = "0x4000762")]
	Off = 2001u
}
[Token(Token = "0x200012E")]
internal class SoundManager : Singleton<SoundManager>
{
	[Token(Token = "0x200012F")]
	public enum BankType
	{
		[Token(Token = "0x4000767")]
		Global,
		[Token(Token = "0x4000768")]
		Lobby,
		[Token(Token = "0x4000769")]
		Battle,
		[Token(Token = "0x400076A")]
		LevelMusic
	}

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isPrepared;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string>[] m_loadedBanks;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_soundRoot;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x2162F10", Offset = "0x2162F10", VA = "0x2162F10")]
	public void Init()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x21631D8", Offset = "0x21631D8", VA = "0x21631D8")]
	public void LoadBank(string bankName, BankType bankType)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x2163304", Offset = "0x2163304", VA = "0x2163304")]
	public uint PostEvent(string eventName, [Optional] GameObject srcGameObject)
	{
		return default(uint);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x2163464", Offset = "0x2163464", VA = "0x2163464")]
	public void Prepare()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x21634F0", Offset = "0x21634F0", VA = "0x21634F0")]
	public void UnLoadBank(string bankName, BankType bankType)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x21635D0", Offset = "0x21635D0", VA = "0x21635D0")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x2000130")]
public enum AudioType
{
	[Token(Token = "0x400076C")]
	Start = 1,
	[Token(Token = "0x400076D")]
	Stop
}
[Token(Token = "0x2000131")]
public class WwiseDefine : MonoBehaviour, IAudioDefine
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wwiseRoot;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkGameObj akGameObj;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action action;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string audioEventName;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool objNeedDestroy;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isUseObstruction;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchInfoData switchInfoData;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioType audioType;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AkCallbackManager.EventCallback ec;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AutoDestroy auto;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x2B5DF38", Offset = "0x2B5DF38", VA = "0x2B5DF38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x2B5DFB8", Offset = "0x2B5DFB8", VA = "0x2B5DFB8", Slot = "4")]
	public void Init(params object[] args)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x2B5E70C", Offset = "0x2B5E70C", VA = "0x2B5E70C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x2B5E794", Offset = "0x2B5E794", VA = "0x2B5E794")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x2B5E830", Offset = "0x2B5E830", VA = "0x2B5E830", Slot = "5")]
	public void Play()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x2B5EBE8", Offset = "0x2B5EBE8", VA = "0x2B5EBE8")]
	private void OnAkCallback(object o1, AkCallbackType o2, object o3)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x2B5EFC8", Offset = "0x2B5EFC8", VA = "0x2B5EFC8", Slot = "6")]
	public void Stop()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x2B5F410", Offset = "0x2B5F410", VA = "0x2B5F410", Slot = "7")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x2B5F4B4", Offset = "0x2B5F4B4", VA = "0x2B5F4B4", Slot = "8")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x2B5E824", Offset = "0x2B5E824", VA = "0x2B5E824", Slot = "9")]
	public void SetEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x2B5F558", Offset = "0x2B5F558", VA = "0x2B5F558")]
	public WwiseDefine()
	{
	}
}
[Token(Token = "0x2000132")]
public class WwiseInit : MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E2A0", Offset = "0xE5E2A0")]
	private static WwiseInit <Instance>k__BackingField;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E2B0", Offset = "0xE5E2B0")]
	private string language;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E2FC", Offset = "0xE5E2FC")]
	private bool engineLogging;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E348", Offset = "0xE5E348")]
	[SerializeField]
	public List<string> contentPath;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<string> voContentPath;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkInitializer akInitializer;

	[Token(Token = "0x170000F0")]
	public static WwiseInit Instance
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x2B5F630", Offset = "0x2B5F630", VA = "0x2B5F630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF64", Offset = "0xE6AF64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x2B5F67C", Offset = "0x2B5F67C", VA = "0x2B5F67C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF74", Offset = "0xE6AF74")]
		private set
		{
		}
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x2B5F6D0", Offset = "0x2B5F6D0", VA = "0x2B5F6D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x2B5F958", Offset = "0x2B5F958", VA = "0x2B5F958")]
	public void LoadLanguageVoBank()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x2B60374", Offset = "0x2B60374", VA = "0x2B60374")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x2B60530", Offset = "0x2B60530", VA = "0x2B60530")]
	public WwiseInit()
	{
	}
}
[Token(Token = "0x2000133")]
public class WwiseObstruction : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53F28", Offset = "0xE53F28")]
	private sealed class <>c
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__16_0;

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x2067DE0", Offset = "0x2067DE0", VA = "0x2067DE0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x2067DE8", Offset = "0x2067DE8", VA = "0x2067DE8")]
		internal int <ObstructionProcessing>b__16_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkAudioListener> akAudioListeners;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isStart;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MaxDis;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ObstructionValue;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask layerMask;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float refreshInterval;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float timer;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x2B606C4", Offset = "0x2B606C4", VA = "0x2B606C4")]
	public void WwiseObstructionDoStart()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x2B5E570", Offset = "0x2B5E570", VA = "0x2B5E570")]
	public void DoStart()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x2B60D44", Offset = "0x2B60D44", VA = "0x2B60D44")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x2B60D50", Offset = "0x2B60D50", VA = "0x2B60D50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x2B60D5C", Offset = "0x2B60D5C", VA = "0x2B60D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x2B606C8", Offset = "0x2B606C8", VA = "0x2B606C8")]
	private void ObstructionProcessing()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x2B60DB4", Offset = "0x2B60DB4", VA = "0x2B60DB4")]
	public WwiseObstruction()
	{
	}
}
[Token(Token = "0x2000135")]
public class Wwise_SetRTPC : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPCEvent RTPC_Event;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RTPC_Value;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x2B61018", Offset = "0x2B61018", VA = "0x2B61018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x2B610A4", Offset = "0x2B610A4", VA = "0x2B610A4")]
	public Wwise_SetRTPC()
	{
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE53F38", Offset = "0xE53F38")]
public class BuffAttribute : BaseAttribute
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E3C4", Offset = "0xE5E3C4")]
	private short <BuffTypeId>k__BackingField;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E3D4", Offset = "0xE5E3D4")]
	private Type <BuffType>k__BackingField;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E3E4", Offset = "0xE5E3E4")]
	private Type <BuffDataType>k__BackingField;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E3F4", Offset = "0xE5E3F4")]
	private bool <IsMultiple>k__BackingField;

	[Token(Token = "0x170000F1")]
	public short BuffTypeId
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x27CD1AC", Offset = "0x27CD1AC", VA = "0x27CD1AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF84", Offset = "0xE6AF84")]
		get
		{
			return default(short);
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x27CD1B4", Offset = "0x27CD1B4", VA = "0x27CD1B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AF94", Offset = "0xE6AF94")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public Type BuffType
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x27CD1BC", Offset = "0x27CD1BC", VA = "0x27CD1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AFA4", Offset = "0xE6AFA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x27CD1C4", Offset = "0x27CD1C4", VA = "0x27CD1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AFB4", Offset = "0xE6AFB4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public Type BuffDataType
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x27CD1CC", Offset = "0x27CD1CC", VA = "0x27CD1CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AFC4", Offset = "0xE6AFC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x27CD1D4", Offset = "0x27CD1D4", VA = "0x27CD1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AFD4", Offset = "0xE6AFD4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public bool IsMultiple
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x27CD1DC", Offset = "0x27CD1DC", VA = "0x27CD1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AFE4", Offset = "0xE6AFE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x27CD1E4", Offset = "0x27CD1E4", VA = "0x27CD1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6AFF4", Offset = "0xE6AFF4")]
		private set
		{
		}
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x27CD1F0", Offset = "0x27CD1F0", VA = "0x27CD1F0")]
	public BuffAttribute(short typeId, Type buffType, [Optional] Type buffDataType, bool isMultiple = false)
	{
	}
}
[Token(Token = "0x2000137")]
public class BuffBase<T> : IBuff where T : IBuffData
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E404", Offset = "0xE5E404")]
	private int <BuffId>k__BackingField;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E414", Offset = "0xE5E414")]
	private short <BuffType>k__BackingField;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E424", Offset = "0xE5E424")]
	private T <Data>k__BackingField;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E434", Offset = "0xE5E434")]
	private bool <IsCanDestory>k__BackingField;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E444", Offset = "0xE5E444")]
	private int <AttackerId>k__BackingField;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E454", Offset = "0xE5E454")]
	private int <HurterId>k__BackingField;

	[Token(Token = "0x170000F5")]
	public int BuffId
	{
		[Token(Token = "0x600056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B004", Offset = "0xE6B004")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B014", Offset = "0xE6B014")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public short BuffType
	{
		[Token(Token = "0x6000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B024", Offset = "0xE6B024")]
		get
		{
			return default(short);
		}
		[Token(Token = "0x6000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B034", Offset = "0xE6B034")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public bool IsMultiple
	{
		[Token(Token = "0x6000573")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F8")]
	public T Data
	{
		[Token(Token = "0x6000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B044", Offset = "0xE6B044")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B054", Offset = "0xE6B054")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public bool IsCanDestory
	{
		[Token(Token = "0x6000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B064", Offset = "0xE6B064")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B074", Offset = "0xE6B074")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public int AttackerId
	{
		[Token(Token = "0x6000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B084", Offset = "0xE6B084")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B094", Offset = "0xE6B094")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public int HurterId
	{
		[Token(Token = "0x600057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B0A4", Offset = "0xE6B0A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B0B4", Offset = "0xE6B0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x600057C")]
	public BuffBase(int id, short type, IBuffData buffData)
	{
	}

	[Token(Token = "0x600057D")]
	public void Init(int attackerId, int hurterId, string dataJson)
	{
	}

	[Token(Token = "0x600057E")]
	public void SetData(string dataJson)
	{
	}

	[Token(Token = "0x600057F")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000580")]
	public virtual void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000581")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000582")]
	public int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6000583")]
	public short GetBuffType()
	{
		return default(short);
	}

	[Token(Token = "0x6000584")]
	public bool GetIsCanDestory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	public bool GetIsMultiple()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000138")]
public class BuffFactory : Singleton<BuffFactory>
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<short, BuffAttribute> buffTypeDic;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x27CD260", Offset = "0x27CD260", VA = "0x27CD260")]
	public BuffFactory()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x27CD5E4", Offset = "0x27CD5E4", VA = "0x27CD5E4")]
	public IBuff Create(int buffId, short bufftype)
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x27CD858", Offset = "0x27CD858", VA = "0x27CD858")]
	public bool IsMultiple(short BuffType)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000139")]
public interface IBuff
{
	[Token(Token = "0x6000589")]
	void Init(int attackerId, int hurterId, string dataJson);

	[Token(Token = "0x600058A")]
	void Start();

	[Token(Token = "0x600058B")]
	void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x600058C")]
	void Stop();

	[Token(Token = "0x600058D")]
	void SetData(string dataJson);

	[Token(Token = "0x600058E")]
	int GetId();

	[Token(Token = "0x600058F")]
	short GetBuffType();

	[Token(Token = "0x6000590")]
	bool GetIsCanDestory();

	[Token(Token = "0x6000591")]
	bool GetIsMultiple();
}
[Token(Token = "0x200013A")]
public interface IBuffData
{
	[Token(Token = "0x6000592")]
	string Serialize();

	[Token(Token = "0x6000593")]
	void Deserialize(string json);
}
[Token(Token = "0x200013B")]
public class CoroutineManager : Singleton<CoroutineManager>
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HashSet<ICoroutineControl> catchCells;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x21BF51C", Offset = "0x21BF51C", VA = "0x21BF51C")]
	public UnityCoroutineControl CreateUnityCoroutineControl(string name)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x21BF614", Offset = "0x21BF614", VA = "0x21BF614")]
	private void CloseCoroutineControl(ICoroutineControl cell)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x21BF728", Offset = "0x21BF728", VA = "0x21BF728")]
	public void CloseAll()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x21BF830", Offset = "0x21BF830", VA = "0x21BF830")]
	public CoroutineManager()
	{
	}
}
[Token(Token = "0x200013C")]
public interface ICoroutineControl
{
	[Token(Token = "0x6000598")]
	void StopAll();

	[Token(Token = "0x6000599")]
	void Close();

	[Token(Token = "0x600059A")]
	void Stop(ICoroutineControlCell cell);
}
[Token(Token = "0x200013D")]
public interface ICoroutineControlCell
{
	[Token(Token = "0x600059B")]
	void Stop();
}
[Token(Token = "0x200013E")]
public class UnityCoroutineControl : MonoBehaviour, ICoroutineControl
{
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53F70", Offset = "0xE53F70")]
	private sealed class <_Delay>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0x20647A8", Offset = "0x20647A8", VA = "0x20647A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x20647F0", Offset = "0x20647F0", VA = "0x20647F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x20646BC", Offset = "0x20646BC", VA = "0x20646BC")]
		[DebuggerHidden]
		public <_Delay>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x20646E8", Offset = "0x20646E8", VA = "0x20646E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x20646EC", Offset = "0x20646EC", VA = "0x20646EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x20647B0", Offset = "0x20647B0", VA = "0x20647B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53F80", Offset = "0xE53F80")]
	private sealed class <_Loop>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x2064C40", Offset = "0x2064C40", VA = "0x2064C40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x2064C88", Offset = "0x2064C88", VA = "0x2064C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x2064B38", Offset = "0x2064B38", VA = "0x2064B38")]
		[DebuggerHidden]
		public <_Loop>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x2064B64", Offset = "0x2064B64", VA = "0x2064B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x2064B68", Offset = "0x2064B68", VA = "0x2064B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x2064C48", Offset = "0x2064C48", VA = "0x2064C48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53F90", Offset = "0xE53F90")]
	private sealed class <_Loop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x2064DA4", Offset = "0x2064DA4", VA = "0x2064DA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x2064DEC", Offset = "0x2064DEC", VA = "0x2064DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x2064C90", Offset = "0x2064C90", VA = "0x2064C90")]
		[DebuggerHidden]
		public <_Loop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x2064CBC", Offset = "0x2064CBC", VA = "0x2064CBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x2064CC0", Offset = "0x2064CC0", VA = "0x2064CC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x2064DAC", Offset = "0x2064DAC", VA = "0x2064DAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53FA0", Offset = "0xE53FA0")]
	private sealed class <_Loop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x2064EE4", Offset = "0x2064EE4", VA = "0x2064EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x2064F2C", Offset = "0x2064F2C", VA = "0x2064F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x2064DF4", Offset = "0x2064DF4", VA = "0x2064DF4")]
		[DebuggerHidden]
		public <_Loop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x2064E20", Offset = "0x2064E20", VA = "0x2064E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x2064E24", Offset = "0x2064E24", VA = "0x2064E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x2064EEC", Offset = "0x2064EEC", VA = "0x2064EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53FB0", Offset = "0xE53FB0")]
	private sealed class <_Frame>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> func;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x2064AE8", Offset = "0x2064AE8", VA = "0x2064AE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0x2064B30", Offset = "0x2064B30", VA = "0x2064B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x2064A18", Offset = "0x2064A18", VA = "0x2064A18")]
		[DebuggerHidden]
		public <_Frame>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x2064A44", Offset = "0x2064A44", VA = "0x2064A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x2064A48", Offset = "0x2064A48", VA = "0x2064A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x2064AF0", Offset = "0x2064AF0", VA = "0x2064AF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53FC0", Offset = "0xE53FC0")]
	private sealed class <_Frame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x20649C8", Offset = "0x20649C8", VA = "0x20649C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x2064A10", Offset = "0x2064A10", VA = "0x2064A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x2064924", Offset = "0x2064924", VA = "0x2064924")]
		[DebuggerHidden]
		public <_Frame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x2064950", Offset = "0x2064950", VA = "0x2064950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x2064954", Offset = "0x2064954", VA = "0x2064954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x20649D0", Offset = "0x20649D0", VA = "0x20649D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53FD0", Offset = "0xE53FD0")]
	private sealed class <_EndOfFrame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0x20648D4", Offset = "0x20648D4", VA = "0x20648D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x206491C", Offset = "0x206491C", VA = "0x206491C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x20647F8", Offset = "0x20647F8", VA = "0x20647F8")]
		[DebuggerHidden]
		public <_EndOfFrame>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x2064824", Offset = "0x2064824", VA = "0x2064824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x2064828", Offset = "0x2064828", VA = "0x2064828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x20648DC", Offset = "0x20648DC", VA = "0x20648DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x2370A2C", Offset = "0x2370A2C", VA = "0x2370A2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B0C4", Offset = "0xE6B0C4")]
	private static IEnumerator _Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x2370AB4", Offset = "0x2370AB4", VA = "0x2370AB4")]
	public ICoroutineControlCell Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x2370C84", Offset = "0x2370C84", VA = "0x2370C84")]
	public ICoroutineControlCell Delay(float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x2370CB4", Offset = "0x2370CB4", VA = "0x2370CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B124", Offset = "0xE6B124")]
	private static IEnumerator _Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x2370D3C", Offset = "0x2370D3C", VA = "0x2370D3C")]
	public ICoroutineControlCell Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x2370DE4", Offset = "0x2370DE4", VA = "0x2370DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B184", Offset = "0xE6B184")]
	private static IEnumerator _Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x2370E70", Offset = "0x2370E70", VA = "0x2370E70")]
	public ICoroutineControlCell Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x2370F20", Offset = "0x2370F20", VA = "0x2370F20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B1E4", Offset = "0xE6B1E4")]
	private static IEnumerator _Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x2370FA8", Offset = "0x2370FA8", VA = "0x2370FA8")]
	public ICoroutineControlCell Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x2371050", Offset = "0x2371050", VA = "0x2371050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B244", Offset = "0xE6B244")]
	private static IEnumerator _Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x23710C8", Offset = "0x23710C8", VA = "0x23710C8")]
	public ICoroutineControlCell Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x2371160", Offset = "0x2371160", VA = "0x2371160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B2A4", Offset = "0xE6B2A4")]
	private static IEnumerator _Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x23711D8", Offset = "0x23711D8", VA = "0x23711D8")]
	public ICoroutineControlCell Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x2371270", Offset = "0x2371270", VA = "0x2371270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B304", Offset = "0xE6B304")]
	private static IEnumerator _EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x23712E8", Offset = "0x23712E8", VA = "0x23712E8")]
	public ICoroutineControlCell EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x2371380", Offset = "0x2371380", VA = "0x2371380", Slot = "4")]
	public void StopAll()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x2371388", Offset = "0x2371388", VA = "0x2371388", Slot = "5")]
	public void Close()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x237140C", Offset = "0x237140C", VA = "0x237140C", Slot = "6")]
	public void Stop(ICoroutineControlCell cell)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x23714B4", Offset = "0x23714B4", VA = "0x23714B4")]
	public UnityCoroutineControl()
	{
	}
}
[Token(Token = "0x2000146")]
public class UnityCoroutineControlCell : ICoroutineControlCell
{
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MonoBehaviour root;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine coroutine;

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x2370B7C", Offset = "0x2370B7C", VA = "0x2370B7C")]
	public void Init(MonoBehaviour _root, Coroutine _coroutine)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x23714BC", Offset = "0x23714BC", VA = "0x23714BC", Slot = "4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x2370B74", Offset = "0x2370B74", VA = "0x2370B74")]
	public UnityCoroutineControlCell()
	{
	}
}
[Token(Token = "0x2000147")]
public static class EventDefine
{
}
[Token(Token = "0x2000148")]
public class EventManager
{
	[Token(Token = "0x2000149")]
	public delegate void EventDelegate(params object[] args);

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventManager _instance;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<EventEntity>> eventHash;

	[Token(Token = "0x1700010A")]
	public static EventManager Instance
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x24F3944", Offset = "0x24F3944", VA = "0x24F3944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x24F3A48", Offset = "0x24F3A48", VA = "0x24F3A48")]
	public void AddEventListener(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x24F3C98", Offset = "0x24F3C98", VA = "0x24F3C98")]
	public void RemoveEventListener(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x24F3D54", Offset = "0x24F3D54", VA = "0x24F3D54")]
	public void NotifyEvent(int eventId, params object[] args)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x24F3A4C", Offset = "0x24F3A4C", VA = "0x24F3A4C")]
	private void AddEventListenerImpl(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x24F3C9C", Offset = "0x24F3C9C", VA = "0x24F3C9C")]
	private void RemoveEventListenerImpl(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x24F3E68", Offset = "0x24F3E68", VA = "0x24F3E68")]
	private bool IsHasEventDelegate(List<EventEntity> eventlist, EventDelegate eventFunc)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x24F3F20", Offset = "0x24F3F20", VA = "0x24F3F20")]
	private bool RemoveEventDelegate(int eventId, List<EventEntity> eventlist, EventDelegate eventFunc)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x24F39C4", Offset = "0x24F39C4", VA = "0x24F39C4")]
	public EventManager()
	{
	}
}
[Token(Token = "0x200014A")]
public class EventEntity
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventManager.EventDelegate func;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x24F3550", Offset = "0x24F3550", VA = "0x24F3550")]
	public EventEntity(EventManager.EventDelegate func)
	{
	}
}
[Token(Token = "0x200014B")]
public enum RoomType
{
	[Token(Token = "0x40007BA")]
	NoviceGuideRoom,
	[Token(Token = "0x40007BB")]
	BattleRoom,
	[Token(Token = "0x40007BC")]
	PreparedRoom,
	[Token(Token = "0x40007BD")]
	CampRoom
}
[Token(Token = "0x200014C")]
public enum RoleRoomStatus
{
	[Token(Token = "0x40007BF")]
	Enter,
	[Token(Token = "0x40007C0")]
	Pass,
	[Token(Token = "0x40007C1")]
	Exit
}
[Token(Token = "0x200014D")]
public enum e_LockSign_Net_Status
{
	[Token(Token = "0x40007C3")]
	None = 0,
	[Token(Token = "0x40007C4")]
	GuidSignActive = 100,
	[Token(Token = "0x40007C5")]
	GuidSignInactive = 101,
	[Token(Token = "0x40007C6")]
	GuidSignProgressActive = 102,
	[Token(Token = "0x40007C7")]
	GuidSignProgressInactive = 103,
	[Token(Token = "0x40007C8")]
	GuidUIInactive = 104,
	[Token(Token = "0x40007C9")]
	GuidSignFinish = 105,
	[Token(Token = "0x40007CA")]
	CommonTempTipActive = 250,
	[Token(Token = "0x40007CB")]
	CommonTempTipInactive = 251
}
[Token(Token = "0x200014E")]
public enum e_Teleporter_Net_Status
{
	[Token(Token = "0x40007CD")]
	None = 0,
	[Token(Token = "0x40007CE")]
	TeleporterActive = 100,
	[Token(Token = "0x40007CF")]
	TeleporterInactive = 101
}
[Token(Token = "0x200014F")]
public enum GotoPreparedRoomType
{
	[Token(Token = "0x40007D1")]
	NoviceGuide,
	[Token(Token = "0x40007D2")]
	GameReady,
	[Token(Token = "0x40007D3")]
	Die,
	[Token(Token = "0x40007D4")]
	GameEnd,
	[Token(Token = "0x40007D5")]
	Demo
}
[Token(Token = "0x2000150")]
public enum e_RoomCharacterDeath_Type
{
	[Token(Token = "0x40007D7")]
	Nomal,
	[Token(Token = "0x40007D8")]
	Laster,
	[Token(Token = "0x40007D9")]
	SingleBridge,
	[Token(Token = "0x40007DA")]
	CameraDetect
}
[Token(Token = "0x2000151")]
public class GameRoomSystem : Singleton<GameRoomSystem>
{
	[Serializable]
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53FE0", Offset = "0xE53FE0")]
	private sealed class <>c
	{
		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<MainTeleporterManager.RoomData> <>9__39_0;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<WUnit> <>9__97_0;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<WUnit> <>9__101_0;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<MainTeleporterManager.RoomData> <>9__113_0;

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x20F7918", Offset = "0x20F7918", VA = "0x20F7918")]
		public <>c()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x20F7920", Offset = "0x20F7920", VA = "0x20F7920")]
		internal bool <Init>b__39_0(MainTeleporterManager.RoomData a)
		{
			return default(bool);
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x20F7940", Offset = "0x20F7940", VA = "0x20F7940")]
		internal void <SuccessSyncRoomSceneEnter>b__97_0(WUnit owner)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x20F79B4", Offset = "0x20F79B4", VA = "0x20F79B4")]
		internal void <SuccessSafeRoomEnter>b__101_0(WUnit owner)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x20F7A8C", Offset = "0x20F7A8C", VA = "0x20F7A8C")]
		internal bool <SetNoviceGuidePlayerPos>b__113_0(MainTeleporterManager.RoomData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE53FF0", Offset = "0xE53FF0")]
	private sealed class <>c__DisplayClass61_0
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int GotoRoom;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterMono characterMono;

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x20F7DD4", Offset = "0x20F7DD4", VA = "0x20F7DD4")]
		public <>c__DisplayClass61_0()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x20F7DDC", Offset = "0x20F7DDC", VA = "0x20F7DDC")]
		internal bool <SetPlayerPos>b__0(MainTeleporterManager.RoomData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54000", Offset = "0xE54000")]
	private sealed class <>c__DisplayClass61_1
	{
		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomCell BronArea;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass61_0 CS$<>8__locals1;

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x20F7E00", Offset = "0x20F7E00", VA = "0x20F7E00")]
		public <>c__DisplayClass61_1()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x20F7E08", Offset = "0x20F7E08", VA = "0x20F7E08")]
		internal void <SetPlayerPos>b__1()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54010", Offset = "0xE54010")]
	private sealed class <>c__DisplayClass63_0
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SwitchId;

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x20F7E50", Offset = "0x20F7E50", VA = "0x20F7E50")]
		public <>c__DisplayClass63_0()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x20F7E58", Offset = "0x20F7E58", VA = "0x20F7E58")]
		internal bool <PlayerConvey>b__0(ObjectManager.ConveySwitchTrans a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54020", Offset = "0xE54020")]
	private sealed class <>c__DisplayClass66_0
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameRoomSystem <>4__this;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit owner;

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x20F7E7C", Offset = "0x20F7E7C", VA = "0x20F7E7C")]
		public <>c__DisplayClass66_0()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x20F7E84", Offset = "0x20F7E84", VA = "0x20F7E84")]
		internal void <GotoPrepareRoom>b__0()
		{
		}
	}

	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54030", Offset = "0xE54030")]
	private sealed class <>c__DisplayClass87_0
	{
		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nextRoomID;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> list;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameRoomSystem <>4__this;

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x20F8180", Offset = "0x20F8180", VA = "0x20F8180")]
		public <>c__DisplayClass87_0()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x20F8188", Offset = "0x20F8188", VA = "0x20F8188")]
		internal bool <SendGotoCurrentBattleRoom>b__0(MainTeleporterManager.RoomData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x20F81AC", Offset = "0x20F81AC", VA = "0x20F81AC")]
		internal void <SendGotoCurrentBattleRoom>b__1(WUnit u)
		{
		}
	}

	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54040", Offset = "0xE54040")]
	private sealed class <>c__DisplayClass96_0
	{
		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int uId;

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x20F835C", Offset = "0x20F835C", VA = "0x20F835C")]
		public <>c__DisplayClass96_0()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x20F8364", Offset = "0x20F8364", VA = "0x20F8364")]
		internal bool <SetSyncRoomSceneEnter>b__0(int a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54050", Offset = "0xE54050")]
	private sealed class <>c__DisplayClass114_0
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameRoomSystem <>4__this;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit owner;

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x20F7AAC", Offset = "0x20F7AAC", VA = "0x20F7AAC")]
		public <>c__DisplayClass114_0()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x20F7AB4", Offset = "0x20F7AB4", VA = "0x20F7AB4")]
		internal void <NoviceGuideGotoPrepareRoom>b__0()
		{
		}
	}

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool GameSuccess;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float GameModeHeighOffset;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E464", Offset = "0xE5E464")]
	private int <BossRoomId>k__BackingField;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsGeneratorEnd;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int SwicthTotalCount;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int SwicthCount;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E474", Offset = "0xE5E474")]
	private int <CurGameProgress>k__BackingField;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int selectRoomId;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int BronAreaID;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int defulatCameraMask;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelGeneratorBak CurLevelGeneratorBak;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isStart;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MainTeleporterManager teleporterManager;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MainTeleporterManager.RoomData SafeRoomData;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int curRoomId;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int lastRoomID;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RoomType roomType;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public RoleRoomStatus roomStatus;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SceneCell SceneCell;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isEnterRoomSceneSuccess;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly List<int> enterRoomSceneUnitList;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int enterRoomSceneUnitNumber;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isDemoEnd;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PostureUi PostureUI;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<int, List<InfoWeight>> SwitchInfoRandomDic;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<GameObject, WwiseDefine> SwitchPortaDic;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> ClearanceRoomList;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dictionary<int, int> PlayerGotoRandomAreaDic;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isPullTheLevernish;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool isTrigger;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action StartSafeRoomMovePlatform;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform PlayerTrn;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE5E484", Offset = "0xE5E484")]
	private (Vector3, Quaternion, Vector3) nextTrns;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Func<bool> KillCurrentEnemysCheck;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Func<bool> KillBossCheck;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Func<bool> SpawnMonsterCheck;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Action EnterMonsterPause;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Action OnStartRoomGear;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Action OnStopRoomGear;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Action OnAllRollBack;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Action<int> OnAllPass;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Action<int> OnKillCurrentEnemys;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Action<int> PassMonsterPause;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Action<int> OnAllEnter;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Action<int, int, Vector3, Quaternion, List<int>, bool, bool> Map_Incubation;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Action Incubation_doorIcon;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Action<int, int, int, Vector3> Incubation_GearIcon;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Action<int, string> StoreyAction;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Action<bool> SafeRoomStatus;

	[Token(Token = "0x1700010B")]
	public int BossRoomId
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x2247384", Offset = "0x2247384", VA = "0x2247384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B594", Offset = "0xE6B594")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x224738C", Offset = "0x224738C", VA = "0x224738C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5A4", Offset = "0xE6B5A4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public int CurNewRoomId
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x2247394", Offset = "0x2247394", VA = "0x2247394")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010D")]
	public RoomType RoomType
	{
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x224739C", Offset = "0x224739C", VA = "0x224739C")]
		get
		{
			return default(RoomType);
		}
	}

	[Token(Token = "0x1700010E")]
	public int CurGameProgress
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x22473B8", Offset = "0x22473B8", VA = "0x22473B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5B4", Offset = "0xE6B5B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x22473C0", Offset = "0x22473C0", VA = "0x22473C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5C4", Offset = "0xE6B5C4")]
		private set
		{
		}
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x22473A4", Offset = "0x22473A4", VA = "0x22473A4")]
	public bool IsWinRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x2246120", Offset = "0x2246120", VA = "0x2246120")]
	public void Init()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x2247454", Offset = "0x2247454", VA = "0x2247454")]
	public void Start()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x22476FC", Offset = "0x22476FC", VA = "0x22476FC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x2245074", Offset = "0x2245074", VA = "0x2245074")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x2248B50", Offset = "0x2248B50", VA = "0x2248B50")]
	public void MoveFinish()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x2248A60", Offset = "0x2248A60", VA = "0x2248A60")]
	private void UpdateCheckTrigger()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x2248EF4", Offset = "0x2248EF4", VA = "0x2248EF4")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x22492E0", Offset = "0x22492E0", VA = "0x22492E0")]
	public void RoomEnter(int rId)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x224939C", Offset = "0x224939C", VA = "0x224939C")]
	public void RoomPass()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x22493A8", Offset = "0x22493A8", VA = "0x22493A8")]
	public void RoomExit(int rId)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x2249304", Offset = "0x2249304", VA = "0x2249304")]
	public void SetRoom(int id)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x2247D24", Offset = "0x2247D24", VA = "0x2247D24")]
	public void ResetStatus()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x22495B8", Offset = "0x22495B8", VA = "0x22495B8")]
	public void SetPlayerTrnData(Transform playerTrn, List<Transform> teleporterTrns)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x2249AA8", Offset = "0x2249AA8", VA = "0x2249AA8")]
	public void SetPlayerInitTrn(Transform playerTrn)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x2249CB8", Offset = "0x2249CB8", VA = "0x2249CB8")]
	public Transform GetPlayerInitTrn()
	{
		return null;
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x2249E04", Offset = "0x2249E04", VA = "0x2249E04")]
	public void SetTeleporterTrn(List<Transform> teleporterTrns)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x2249A38", Offset = "0x2249A38", VA = "0x2249A38")]
	private void SetTans(Transform transform, Transform TargetTransform)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x2248054", Offset = "0x2248054", VA = "0x2248054")]
	private void SetPlayerPos(int GotoRoom)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x224A128", Offset = "0x224A128", VA = "0x224A128")]
	private void SetDiePlayerPos()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x224A3D0", Offset = "0x224A3D0", VA = "0x224A3D0")]
	public void PlayerConvey(WUnit unit, int SwitchId)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x224A690", Offset = "0x224A690", VA = "0x224A690")]
	public void MainTeleporterTR()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x224A864", Offset = "0x224A864", VA = "0x224A864")]
	private void StartPrepareRoom()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x224AA64", Offset = "0x224AA64", VA = "0x224AA64")]
	private void GotoPrepareRoom()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x224B220", Offset = "0x224B220", VA = "0x224B220")]
	private void GotoCampRoom()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x224B37C", Offset = "0x224B37C", VA = "0x224B37C")]
	private void GotoBattleRoom()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x224B744", Offset = "0x224B744", VA = "0x224B744")]
	private void GotoSelectBattleRoom()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x2248920", Offset = "0x2248920", VA = "0x2248920")]
	private void RoomLoading()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x224B750", Offset = "0x224B750", VA = "0x224B750")]
	public void SetSceneCell(SceneCell cell)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x224BB00", Offset = "0x224BB00", VA = "0x224BB00")]
	public void RemoveSceneCell()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x224BB0C", Offset = "0x224BB0C", VA = "0x224BB0C")]
	public void SetSwitchController(SwitchController controller)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x224BBB0", Offset = "0x224BBB0", VA = "0x224BBB0")]
	public void CheckSwicthStuat()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x224BE68", Offset = "0x224BE68", VA = "0x224BE68")]
	public void GeneratorEnd(int TotalCount)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x22473C8", Offset = "0x22473C8", VA = "0x22473C8")]
	public void SetSceneCellEnter()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x224A9D8", Offset = "0x224A9D8", VA = "0x224A9D8")]
	public void SetSceneCellStart()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x224948C", Offset = "0x224948C", VA = "0x224948C")]
	public void SetSceneCellExit()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x224BE88", Offset = "0x224BE88", VA = "0x224BE88")]
	public SwitchController GetCurRoomSwitch(int SwitchID)
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x224BF30", Offset = "0x224BF30", VA = "0x224BF30")]
	public SwitchController GetCurRoomClearanceSwitch()
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x224BFC8", Offset = "0x224BFC8", VA = "0x224BFC8")]
	public List<SwitchController> GetSwitchControllers(e_SwitchType switchType)
	{
		return null;
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x224C070", Offset = "0x224C070", VA = "0x224C070")]
	public SwitchController GetFirstSwitchController(e_SwitchType switchType)
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x224C118", Offset = "0x224C118", VA = "0x224C118")]
	public List<int> GetClearanceRoomList()
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x224C1A0", Offset = "0x224C1A0", VA = "0x224C1A0")]
	public void SetClearanceRoomList(int RoomId)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x224C240", Offset = "0x224C240", VA = "0x224C240")]
	public void SetGeneratorCell(RoomCell roomCell)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x224A00C", Offset = "0x224A00C", VA = "0x224A00C")]
	public RoomCell GetGeneratorCell(int gearID)
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x2248B90", Offset = "0x2248B90", VA = "0x2248B90")]
	public void SendGotoCurrentBattleRoom(int nextRoomID)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x2248E70", Offset = "0x2248E70", VA = "0x2248E70")]
	public void SendGotoCamp()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x2248F2C", Offset = "0x2248F2C", VA = "0x2248F2C")]
	public void SendGameSuccess()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x224A914", Offset = "0x224A914", VA = "0x224A914")]
	public void SetRoomEnter(int roomId)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x224C3F0", Offset = "0x224C3F0", VA = "0x224C3F0")]
	public void SetRoomPass()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x2249518", Offset = "0x2249518", VA = "0x2249518")]
	public void SetRoomExit(int roomId)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x224C534", Offset = "0x224C534", VA = "0x224C534")]
	public void SetGameSuccess()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x224C560", Offset = "0x224C560", VA = "0x224C560")]
	public void SyncSignStatus(int SwichID, e_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x224B0B4", Offset = "0x224B0B4", VA = "0x224B0B4")]
	private void StartSyncRoomSceneEnter()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x224C838", Offset = "0x224C838", VA = "0x224C838")]
	public void SetSyncRoomSceneEnter(int uId)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x224CA78", Offset = "0x224CA78", VA = "0x224CA78")]
	public void SuccessSyncRoomSceneEnter()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x224BBD8", Offset = "0x224BBD8", VA = "0x224BBD8")]
	public void LoadLevelGeneratorEnd()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x224D8EC", Offset = "0x224D8EC", VA = "0x224D8EC")]
	public void PortalOpen()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x224CE54", Offset = "0x224CE54", VA = "0x224CE54")]
	private void SuccessBattleRoomEnter()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x224D154", Offset = "0x224D154", VA = "0x224D154")]
	private void SuccessSafeRoomEnter()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x224D7F4", Offset = "0x224D7F4", VA = "0x224D7F4")]
	private void SuccessCampRoomEnter()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x224C354", Offset = "0x224C354", VA = "0x224C354")]
	private void SendRoomStatus(RoomType e_roomType, int roomId, int roomStatus)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x2248FBC", Offset = "0x2248FBC", VA = "0x2248FBC")]
	public void SendGotoPreparedRoomStatus(int backType, float dirX = 0f, float dirZ = 0f)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x224DB8C", Offset = "0x224DB8C", VA = "0x224DB8C")]
	public void SyncRoomStatus(RoomType e_roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x224762C", Offset = "0x224762C", VA = "0x224762C")]
	public void GotoSelectRoom()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x224CD78", Offset = "0x224CD78", VA = "0x224CD78")]
	public void EnterRoom(int roomID)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x224E68C", Offset = "0x224E68C", VA = "0x224E68C")]
	public void NetPassCurrentRoom()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x224E814", Offset = "0x224E814", VA = "0x224E814")]
	public List<InfoWeight> GetSwitchInfoRandomData(int SwicthID)
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x224EA78", Offset = "0x224EA78", VA = "0x224EA78")]
	public void SetSwitchInfoRandomData(int SwicthID, List<InfoWeight> data)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x224E644", Offset = "0x224E644", VA = "0x224E644")]
	private void StartNoviceGuide()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x224EBC8", Offset = "0x224EBC8", VA = "0x224EBC8")]
	private void NoviceGuideGotoSafeRoomPlayerPos()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x224EFBC", Offset = "0x224EFBC", VA = "0x224EFBC")]
	private void SetNoviceGuidePlayerPos()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x224E08C", Offset = "0x224E08C", VA = "0x224E08C")]
	private void NoviceGuideGotoPrepareRoom()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x224AF10", Offset = "0x224AF10", VA = "0x224AF10")]
	private void SetPostureStatus(bool isShow)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x224F424", Offset = "0x224F424", VA = "0x224F424")]
	private void PostureDown(bool isDown)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x224F4DC", Offset = "0x224F4DC", VA = "0x224F4DC")]
	public bool GetCurRoomClearanceStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x224C42C", Offset = "0x224C42C", VA = "0x224C42C")]
	public void SetCurRoomClearanceStatus()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x224E3E0", Offset = "0x224E3E0", VA = "0x224E3E0")]
	private void IncreasedDifficulty()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x224F55C", Offset = "0x224F55C", VA = "0x224F55C")]
	public GameRoomSystem()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x224F744", Offset = "0x224F744", VA = "0x224F744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5D4", Offset = "0xE6B5D4")]
	private void <Stop>b__41_0()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x224F7F8", Offset = "0x224F7F8", VA = "0x224F7F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5E4", Offset = "0xE6B5E4")]
	private bool <SetPlayerTrnData>b__56_0(MainTeleporterManager.RoomData a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x224F81C", Offset = "0x224F81C", VA = "0x224F81C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B5F4", Offset = "0xE6B5F4")]
	private bool <SetPlayerInitTrn>b__57_0(MainTeleporterManager.RoomData a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x224F840", Offset = "0x224F840", VA = "0x224F840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B604", Offset = "0xE6B604")]
	private bool <GetPlayerInitTrn>b__58_0(MainTeleporterManager.RoomData a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x224F864", Offset = "0x224F864", VA = "0x224F864")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B614", Offset = "0xE6B614")]
	private bool <SetTeleporterTrn>b__59_0(MainTeleporterManager.RoomData a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x224F888", Offset = "0x224F888", VA = "0x224F888")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B624", Offset = "0xE6B624")]
	private bool <MainTeleporterTR>b__64_0(MainTeleporterManager.RoomData a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x224F8AC", Offset = "0x224F8AC", VA = "0x224F8AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B634", Offset = "0xE6B634")]
	private void <GotoCampRoom>b__67_0()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x224FB9C", Offset = "0x224FB9C", VA = "0x224FB9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B644", Offset = "0xE6B644")]
	private void <GotoBattleRoom>b__68_0()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x224FEDC", Offset = "0x224FEDC", VA = "0x224FEDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B654", Offset = "0xE6B654")]
	private bool <NoviceGuideGotoSafeRoomPlayerPos>b__112_0(MainTeleporterManager.RoomData a)
	{
		return default(bool);
	}
}
[Token(Token = "0x200015A")]
public class ModelCell : MonoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> doors;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> Areas;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x279D208", Offset = "0x279D208", VA = "0x279D208")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x279D550", Offset = "0x279D550", VA = "0x279D550")]
	public ModelCell()
	{
	}
}
[Token(Token = "0x200015B")]
public class RoomCollector : MonoBehaviour
{
	[Token(Token = "0x600065E")]
	[Address(RVA = "0x24B3AA8", Offset = "0x24B3AA8", VA = "0x24B3AA8")]
	public RoomCollector()
	{
	}
}
[Token(Token = "0x200015C")]
public class SceneCell : MonoBehaviour
{
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54060", Offset = "0xE54060")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ID;

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x20610A4", Offset = "0x20610A4", VA = "0x20610A4")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x20610AC", Offset = "0x20610AC", VA = "0x20610AC")]
		internal bool <GetSwitchController>b__0(SwitchController a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54070", Offset = "0xE54070")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_SwitchType switchType;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x20610D0", Offset = "0x20610D0", VA = "0x20610D0")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x20610D8", Offset = "0x20610D8", VA = "0x20610D8")]
		internal bool <GetFirstSwitchController>b__0(SwitchController a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54080", Offset = "0xE54080")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_SwitchType switchType;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x2061078", Offset = "0x2061078", VA = "0x2061078")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x2061080", Offset = "0x2061080", VA = "0x2061080")]
		internal bool <GetSwitchController>b__0(SwitchController a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SwitchController> switchControllers;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> GearRootList;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x24BD2F0", Offset = "0x24BD2F0", VA = "0x24BD2F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x24BD3F8", Offset = "0x24BD3F8", VA = "0x24BD3F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x24BD4A0", Offset = "0x24BD4A0", VA = "0x24BD4A0")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x24BD5CC", Offset = "0x24BD5CC", VA = "0x24BD5CC")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x24BD6F8", Offset = "0x24BD6F8", VA = "0x24BD6F8")]
	public void OnStart()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x24BD824", Offset = "0x24BD824", VA = "0x24BD824")]
	public SwitchController GetSwitchController(int ID)
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x24BD938", Offset = "0x24BD938", VA = "0x24BD938")]
	public void SetSwitchController(SwitchController controller)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x24BDAA0", Offset = "0x24BDAA0", VA = "0x24BDAA0")]
	public SwitchController GetFirstSwitchController(e_SwitchType switchType)
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x24BDBB4", Offset = "0x24BDBB4", VA = "0x24BDBB4")]
	public List<SwitchController> GetSwitchController(e_SwitchType switchType)
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x24BD380", Offset = "0x24BD380", VA = "0x24BD380")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x24BDCC8", Offset = "0x24BDCC8", VA = "0x24BDCC8")]
	public SceneCell()
	{
	}
}
[Token(Token = "0x2000160")]
public class AcquireBoxGear : BaseGear
{
	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54090", Offset = "0xE54090")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AcquireBoxGear <>4__this;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int i;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x20E8100", Offset = "0x20E8100", VA = "0x20E8100")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x20E8108", Offset = "0x20E8108", VA = "0x20E8108")]
		internal void <WeaponGenerator>b__0()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x20E82D8", Offset = "0x20E82D8", VA = "0x20E82D8")]
		internal void <WeaponGenerator>b__1()
		{
		}
	}

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E54C", Offset = "0xE5E54C")]
	public GameObject SignPrefab;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E584", Offset = "0xE5E584")]
	public float ProgressTime;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E5BC", Offset = "0xE5E5BC")]
	public Transform LockSignRoot;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E5F4", Offset = "0xE5E5F4")]
	public GameObject LightCross;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E62C", Offset = "0xE5E62C")]
	public Transform functionTrns;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E664", Offset = "0xE5E664")]
	public Animator BoxAnimator;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string BoxAnim;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float openBoxTime;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E69C", Offset = "0xE5E69C")]
	public Animator WeaponAnimator;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string WeaponAnim;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float RandomTime_Wp;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E6D4", Offset = "0xE5E6D4")]
	public GameObject WeaponNameText;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E70C", Offset = "0xE5E70C")]
	public AudioEvent Box_Open;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Exhibition;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5E744", Offset = "0xE5E744")]
	private e_weapon_type <weaponType>k__BackingField;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject WeaponModel;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isLightCross;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject hatchWeapon;

	[Token(Token = "0x1700010F")]
	public Transform FunctionTrns
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1FB2660", Offset = "0x1FB2660", VA = "0x1FB2660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000110")]
	public e_weapon_type weaponType
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1FB26F4", Offset = "0x1FB26F4", VA = "0x1FB26F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B674", Offset = "0xE6B674")]
		get
		{
			return default(e_weapon_type);
		}
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1FB26EC", Offset = "0x1FB26EC", VA = "0x1FB26EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B664", Offset = "0xE6B664")]
		private set
		{
		}
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1FB26FC", Offset = "0x1FB26FC", VA = "0x1FB26FC", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1FB2704", Offset = "0x1FB2704", VA = "0x1FB2704", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1FB27A0", Offset = "0x1FB27A0", VA = "0x1FB27A0", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1FB295C", Offset = "0x1FB295C", VA = "0x1FB295C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1FB2AB4", Offset = "0x1FB2AB4", VA = "0x1FB2AB4")]
	public void InstanceWeaponModel()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1FB28AC", Offset = "0x1FB28AC", VA = "0x1FB28AC")]
	private void WeaponUI(bool isActive)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1FB27D4", Offset = "0x1FB27D4", VA = "0x1FB27D4")]
	public void DestroyWeaponModel()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1FB2C0C", Offset = "0x1FB2C0C", VA = "0x1FB2C0C", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1FB2FD8", Offset = "0x1FB2FD8", VA = "0x1FB2FD8")]
	private void WeaponGenerator(int i)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1FB3210", Offset = "0x1FB3210", VA = "0x1FB3210")]
	public AcquireBoxGear()
	{
	}
}
[Token(Token = "0x2000162")]
public abstract class BaseGear : MonoBehaviour, IGear
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Id;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected e_group_type groupType;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AreaGear;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool workInTheGame;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onGearInit;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent onGearStart;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent onGearStop;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected bool isStart;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool isEnable;

	[Token(Token = "0x17000111")]
	public e_group_type GroupType
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x29010D0", Offset = "0x29010D0", VA = "0x29010D0")]
		get
		{
			return default(e_group_type);
		}
	}

	[Token(Token = "0x17000112")]
	protected bool IsStart
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x29010D8", Offset = "0x29010D8", VA = "0x29010D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x29010E0", Offset = "0x29010E0", VA = "0x29010E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000113")]
	protected bool IsEnable
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x29010EC", Offset = "0x29010EC", VA = "0x29010EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x29010F4", Offset = "0x29010F4", VA = "0x29010F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public bool WorkInTheGame
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x2901100", Offset = "0x2901100", VA = "0x2901100")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x2901108", Offset = "0x2901108", VA = "0x2901108")]
		private set
		{
		}
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x2901114", Offset = "0x2901114", VA = "0x2901114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x2901124", Offset = "0x2901124", VA = "0x2901124")]
	private void Init()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x29011D4", Offset = "0x29011D4", VA = "0x29011D4", Slot = "13")]
	public virtual void AreaGearInit()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x290128C", Offset = "0x290128C", VA = "0x290128C")]
	private void UnInit()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x2901318", Offset = "0x2901318", VA = "0x2901318", Slot = "14")]
	public virtual void GearInit()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x28F899C", Offset = "0x28F899C", VA = "0x28F899C", Slot = "15")]
	public virtual void GearStart()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x28F89EC", Offset = "0x28F89EC", VA = "0x28F89EC", Slot = "16")]
	public virtual void GearStop()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x2901320", Offset = "0x2901320", VA = "0x2901320", Slot = "17")]
	public virtual void GearReset()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x2901324", Offset = "0x2901324", VA = "0x2901324", Slot = "18")]
	public virtual void GearEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x28F9798", Offset = "0x28F9798", VA = "0x28F9798", Slot = "19")]
	public virtual void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x2901330", Offset = "0x2901330", VA = "0x2901330", Slot = "20")]
	public virtual void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x2901344", Offset = "0x2901344", VA = "0x2901344", Slot = "11")]
	public bool IsGearStart()
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x290134C", Offset = "0x290134C", VA = "0x290134C", Slot = "12")]
	public bool IsGearEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x2901354", Offset = "0x2901354", VA = "0x2901354", Slot = "21")]
	public virtual void SetRoomStatus()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x28F99A4", Offset = "0x28F99A4", VA = "0x28F99A4")]
	protected BaseGear()
	{
	}
}
[Token(Token = "0x2000163")]
public abstract class BaseHurtGear : BaseGear
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected UnityEvent onGearBroken;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected int hp;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected bool isSameGroupDamage;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _damage;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isBroken;

	[Token(Token = "0x17000115")]
	public bool IsSameGroupDamage
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x2901828", Offset = "0x2901828", VA = "0x2901828")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000116")]
	public int Damage
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x2901830", Offset = "0x2901830", VA = "0x2901830")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x2901838", Offset = "0x2901838", VA = "0x2901838")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	protected bool IsBroken
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x2901840", Offset = "0x2901840", VA = "0x2901840")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x2901848", Offset = "0x2901848", VA = "0x2901848")]
		private set
		{
		}
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x2901854", Offset = "0x2901854", VA = "0x2901854", Slot = "22")]
	public virtual void GearHurt(e_group_type ackGroupType, int damage, Vector3 atkDir)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x2901A28", Offset = "0x2901A28", VA = "0x2901A28", Slot = "23")]
	public virtual void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x2901A34", Offset = "0x2901A34", VA = "0x2901A34", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x2901AB0", Offset = "0x2901AB0", VA = "0x2901AB0", Slot = "20")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int hp, out int maxHp)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x2901AE4", Offset = "0x2901AE4", VA = "0x2901AE4", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x2901AF4", Offset = "0x2901AF4", VA = "0x2901AF4", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x2901AF8", Offset = "0x2901AF8", VA = "0x2901AF8", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x2901B04", Offset = "0x2901B04", VA = "0x2901B04")]
	protected BaseHurtGear()
	{
	}
}
[Token(Token = "0x2000164")]
public class CrystalLaserGear : BaseGear, HitExploder
{
	[Token(Token = "0x2000165")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE540A0", Offset = "0xE540A0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CrystalLaserGear <>4__this;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit unit;

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x20F4790", Offset = "0x20F4790", VA = "0x20F4790")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x20F4798", Offset = "0x20F4798", VA = "0x20F4798")]
		internal void <Update>b__0()
		{
		}
	}

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float DamageInterval;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform LaserTransform;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float LaserLength;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem ParticleSystem;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator animator;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider Collider;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit hit;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float ParticleStartSizeY;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, Coroutine> isSetTime;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HashSet<int> entryList;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioEvent LaserLoopAudio;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WwiseDefine LaserLoopDefine;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent LaserDestroyAudio;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x21C079C", Offset = "0x21C079C", VA = "0x21C079C", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x21C09E8", Offset = "0x21C09E8", VA = "0x21C09E8", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x21C0AC0", Offset = "0x21C0AC0", VA = "0x21C0AC0", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x21C0CDC", Offset = "0x21C0CDC", VA = "0x21C0CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x21C1234", Offset = "0x21C1234", VA = "0x21C1234", Slot = "22")]
	public void Strike(Vector3 hitPos, Vector3 hitDir, int bulletForce)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x21C12E8", Offset = "0x21C12E8", VA = "0x21C12E8", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x21C15F4", Offset = "0x21C15F4", VA = "0x21C15F4")]
	public CrystalLaserGear()
	{
	}
}
[Token(Token = "0x2000166")]
public enum MvoeNormal
{
	[Token(Token = "0x4000858")]
	MoveX,
	[Token(Token = "0x4000859")]
	MoveY,
	[Token(Token = "0x400085A")]
	MoveZ
}
[Token(Token = "0x2000167")]
public class ExtrusionWallGear : BaseGear, HitExploder
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E7E4", Offset = "0xE5E7E4")]
	public float StartTime;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E81C", Offset = "0xE5E81C")]
	public Transform ExtrusionWallGearTrn;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E854", Offset = "0xE5E854")]
	public float Length_Forward;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E88C", Offset = "0xE5E88C")]
	public float Length_Reverse;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E8C4", Offset = "0xE5E8C4")]
	public float time;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E8FC", Offset = "0xE5E8FC")]
	public float time2;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E934", Offset = "0xE5E934")]
	public float Stoptime;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener tweener;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int ToandFro;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, bool> isSetHurtTime;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MvoeNormal mvoeNormal;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool RunAllTime;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool isSpineHurt;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool isStartExtrusionWall;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x24F6808", Offset = "0x24F6808", VA = "0x24F6808", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x24F6870", Offset = "0x24F6870", VA = "0x24F6870")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x24F6958", Offset = "0x24F6958", VA = "0x24F6958", Slot = "22")]
	public void Strike(Vector3 hitPos, Vector3 hitDir, int bulletForce)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x24F6A6C", Offset = "0x24F6A6C", VA = "0x24F6A6C")]
	public Tweener Move_Normal(float _Length, float _time)
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x24F6AA0", Offset = "0x24F6AA0", VA = "0x24F6AA0")]
	private void DOMoveGear()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x24F6D44", Offset = "0x24F6D44", VA = "0x24F6D44", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x24F6EE4", Offset = "0x24F6EE4", VA = "0x24F6EE4")]
	public ExtrusionWallGear()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x24F6F70", Offset = "0x24F6F70", VA = "0x24F6F70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B684", Offset = "0xE6B684")]
	private void <Update>b__16_0()
	{
	}
}
[Token(Token = "0x2000168")]
public enum GaneFireEnum
{
	[Token(Token = "0x400086B")]
	G_Fire,
	[Token(Token = "0x400086C")]
	G_pause,
	[Token(Token = "0x400086D")]
	G_Stop
}
[Token(Token = "0x2000169")]
public class GaneFireGear : BaseGear
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem GearFlameProjector;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E96C", Offset = "0xE5E96C")]
	public int GearfireTime;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E9A4", Offset = "0xE5E9A4")]
	public int GearfireStartTime;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5E9DC", Offset = "0xE5E9DC")]
	public int GearfireStopTime;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float nowTime;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GaneFireEnum fire;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider col;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject AudioTr;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x22536AC", Offset = "0x22536AC", VA = "0x22536AC", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x2253820", Offset = "0x2253820", VA = "0x2253820", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x2253AD8", Offset = "0x2253AD8", VA = "0x2253AD8", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x2253BFC", Offset = "0x2253BFC", VA = "0x2253BFC")]
	public void Hurt_Effect()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x2253C7C", Offset = "0x2253C7C", VA = "0x2253C7C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x2253D44", Offset = "0x2253D44", VA = "0x2253D44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x2253E70", Offset = "0x2253E70", VA = "0x2253E70")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x2253D48", Offset = "0x2253D48", VA = "0x2253D48")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x2253A28", Offset = "0x2253A28", VA = "0x2253A28")]
	public void GearfireEvent()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x2253E74", Offset = "0x2253E74", VA = "0x2253E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x2253F40", Offset = "0x2253F40", VA = "0x2253F40")]
	public GaneFireGear()
	{
	}
}
[Token(Token = "0x200016A")]
public class GearManager : Singleton<GearManager>
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HashSet<IGear> gearList;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<e_group_type, Dictionary<int, IGear>> gearDic;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x2253F50", Offset = "0x2253F50", VA = "0x2253F50")]
	public void RegisterGear(e_group_type group, int id, IGear gear)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x225439C", Offset = "0x225439C", VA = "0x225439C")]
	public void UnRegisterGear(e_group_type group, int id, IGear gear)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x2254658", Offset = "0x2254658", VA = "0x2254658")]
	public void SetAllReset()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x2254B88", Offset = "0x2254B88", VA = "0x2254B88")]
	public void SetAllStart()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x2254B8C", Offset = "0x2254B8C", VA = "0x2254B8C")]
	public void HandleGearStatus(e_group_type group, int id, e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x2254D9C", Offset = "0x2254D9C", VA = "0x2254D9C")]
	public IGear GetGear(e_group_type group, int id)
	{
		return null;
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x2254F98", Offset = "0x2254F98", VA = "0x2254F98")]
	public void SyncGearStateToClient(int sessionId, e_group_type group, int id)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x22550F0", Offset = "0x22550F0", VA = "0x22550F0")]
	public GearManager()
	{
	}
}
[Token(Token = "0x200016B")]
public interface HitExploder
{
	[Token(Token = "0x60006C7")]
	void Strike(Vector3 hitPos, Vector3 hitDir, int bulletForce);
}
[Token(Token = "0x200016C")]
public class HitTarget : MonoBehaviour, HitExploder
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string aniname;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchInfoData SwitchInfoData;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioEvent HitAudio;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x2528DCC", Offset = "0x2528DCC", VA = "0x2528DCC", Slot = "4")]
	public void Strike(Vector3 hitPos, Vector3 hitDir, int bulletForce)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x2528E9C", Offset = "0x2528E9C", VA = "0x2528E9C")]
	public HitTarget()
	{
	}
}
[Token(Token = "0x200016D")]
public enum e_GearHandleStatus_type
{
	[Token(Token = "0x400087D")]
	None = 0,
	[Token(Token = "0x400087E")]
	Hurt = 1,
	[Token(Token = "0x400087F")]
	Die = 2,
	[Token(Token = "0x4000880")]
	status1 = 100,
	[Token(Token = "0x4000881")]
	status2 = 101,
	[Token(Token = "0x4000882")]
	status3 = 102
}
[Token(Token = "0x200016E")]
public interface IGear
{
	[Token(Token = "0x60006CA")]
	void GearInit();

	[Token(Token = "0x60006CB")]
	void GearStart();

	[Token(Token = "0x60006CC")]
	void GearStop();

	[Token(Token = "0x60006CD")]
	void GearEnable(bool isEnable);

	[Token(Token = "0x60006CE")]
	void GearReset();

	[Token(Token = "0x60006CF")]
	void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion quaternion, params object[] prms);

	[Token(Token = "0x60006D0")]
	void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2);

	[Token(Token = "0x60006D1")]
	bool IsGearStart();

	[Token(Token = "0x60006D2")]
	bool IsGearEnable();
}
[Token(Token = "0x200016F")]
public class RelicsBoxGear : BaseGear
{
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE540B0", Offset = "0xE540B0")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRHandinteractor XRHandinteractor;

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x2060214", Offset = "0x2060214", VA = "0x2060214")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x206021C", Offset = "0x206021C", VA = "0x206021C")]
		internal bool <Relics_Acquisition01>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE540C0", Offset = "0xE540C0")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRHandinteractor XRHandinteractor;

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x206024C", Offset = "0x206024C", VA = "0x206024C")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x2060254", Offset = "0x2060254", VA = "0x2060254")]
		internal bool <Relics_Acquisition02>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EA14", Offset = "0xE5EA14")]
	public Transform functionTrns01;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EA4C", Offset = "0xE5EA4C")]
	public Transform functionTrns02;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EA84", Offset = "0xE5EA84")]
	public Animator BoxAnimator;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string BoxAnim;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EABC", Offset = "0xE5EABC")]
	public AudioEvent Box_Open;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EAF4", Offset = "0xE5EAF4")]
	public GameObject SignPrefab;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EB2C", Offset = "0xE5EB2C")]
	public float ProgressTime;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EB64", Offset = "0xE5EB64")]
	public Transform LockSignRoot01;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EB9C", Offset = "0xE5EB9C")]
	public Transform LockSignRoot02;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RoomSwitchLockSign LockSign01;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RoomSwitchLockSign LockSign02;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject relicsModel01;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject relicsModel02;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private e_RelicsType relicsType01;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private e_RelicsType relicsType02;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private XRBaseInteractable Interactable01;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private XRBaseInteractable Interactable02;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer[] renderers01;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Renderer[] renderers02;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int areaid;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<InfoWeight> RandomSwitchdata;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isFinish;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int DataID;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Camera can;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x271CD24", Offset = "0x271CD24", VA = "0x271CD24", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x271CD2C", Offset = "0x271CD2C", VA = "0x271CD2C", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x271CD34", Offset = "0x271CD34", VA = "0x271CD34", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x271D0D0", Offset = "0x271D0D0", VA = "0x271D0D0")]
	public void InstanceRelicsModel()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x271D8EC", Offset = "0x271D8EC", VA = "0x271D8EC")]
	private void SetRenderer01(float dissolve, bool isDotween)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x271D9CC", Offset = "0x271D9CC", VA = "0x271D9CC")]
	private void SetRenderer02(float dissolve, bool isDotween)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x271CE88", Offset = "0x271CE88", VA = "0x271CE88")]
	public void DestroyModel()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x271DAAC", Offset = "0x271DAAC", VA = "0x271DAAC")]
	private void DestroyModel(bool isPick01)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x271DEAC", Offset = "0x271DEAC", VA = "0x271DEAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x271E0F8", Offset = "0x271E0F8", VA = "0x271E0F8")]
	private void InitGuidSign()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x271CE00", Offset = "0x271CE00", VA = "0x271CE00")]
	public void ShowSign01(bool isShow)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x271E52C", Offset = "0x271E52C", VA = "0x271E52C")]
	public void ShowSignProgress01(bool isShow)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x271E574", Offset = "0x271E574", VA = "0x271E574")]
	public void DoBeginSignCallBack01()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x271E57C", Offset = "0x271E57C", VA = "0x271E57C")]
	public void DoBreakSignCallBack01()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x271E584", Offset = "0x271E584", VA = "0x271E584")]
	public void FinishCallBack01()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x271CE44", Offset = "0x271CE44", VA = "0x271CE44")]
	public void ShowSign02(bool isShow)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x271EA10", Offset = "0x271EA10", VA = "0x271EA10")]
	public void ShowSignProgress02(bool isShow)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x271EA58", Offset = "0x271EA58", VA = "0x271EA58")]
	public void DoBeginSignCallBack02()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x271EA60", Offset = "0x271EA60", VA = "0x271EA60")]
	public void DoBreakSignCallBack02()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x271EA68", Offset = "0x271EA68", VA = "0x271EA68")]
	public void FinishCallBack02()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x271DF4C", Offset = "0x271DF4C", VA = "0x271DF4C")]
	private void DoUpdateLockSign()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x271EC40", Offset = "0x271EC40", VA = "0x271EC40")]
	public void Relics_Acquisition01(XRBaseInteractor XRBaseInteractor)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x271EFE8", Offset = "0x271EFE8", VA = "0x271EFE8")]
	public void Relics_Acquisition02(XRBaseInteractor XRBaseInteractor)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x271EEA8", Offset = "0x271EEA8", VA = "0x271EEA8")]
	private void LogoutInteractable()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x271D758", Offset = "0x271D758", VA = "0x271D758")]
	public void Activate_Coll(bool isEnabled)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x271F250", Offset = "0x271F250", VA = "0x271F250", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x271F330", Offset = "0x271F330", VA = "0x271F330")]
	private void RelicsGenerator()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x271F520", Offset = "0x271F520", VA = "0x271F520")]
	public void GetRandomRelicsType()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x271FC20", Offset = "0x271FC20", VA = "0x271FC20")]
	public RelicsBoxGear()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x271FC28", Offset = "0x271FC28", VA = "0x271FC28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B694", Offset = "0xE6B694")]
	private void <DestroyModel>b__31_0()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x271FCB0", Offset = "0x271FCB0", VA = "0x271FCB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B6A4", Offset = "0xE6B6A4")]
	private void <DestroyModel>b__31_1()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x271FDB8", Offset = "0x271FDB8", VA = "0x271FDB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B6B4", Offset = "0xE6B6B4")]
	private void <DestroyModel>b__31_4()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x271FE40", Offset = "0x271FE40", VA = "0x271FE40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B6C4", Offset = "0xE6B6C4")]
	private void <DestroyModel>b__31_2()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x271FEC8", Offset = "0x271FEC8", VA = "0x271FEC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B6D4", Offset = "0xE6B6D4")]
	private void <DestroyModel>b__31_3()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x271FFD0", Offset = "0x271FFD0", VA = "0x271FFD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B6E4", Offset = "0xE6B6E4")]
	private void <DestroyModel>b__31_5()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x2720058", Offset = "0x2720058", VA = "0x2720058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B6F4", Offset = "0xE6B6F4")]
	private bool <GetRandomRelicsType>b__51_0(InfoWeight a)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x272007C", Offset = "0x272007C", VA = "0x272007C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B704", Offset = "0xE6B704")]
	private bool <GetRandomRelicsType>b__51_1(InfoWeight a)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000172")]
public class StoneGear : BaseGear, HitExploder
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator exploderAmi;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string amiStr;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isLoop;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float LoadingTime;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 InitV3;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion InitQuaternion;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Rigidbody rig;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EBD4", Offset = "0xE5EBD4")]
	public int isStartTime;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int RunTime;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EC0C", Offset = "0xE5EC0C")]
	public Vector3 StoneDir;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EC44", Offset = "0xE5EC44")]
	public float velocity;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Collider SphereCollider;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int Durability;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int IintDurability;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioEvent Stone_Ball_Popup;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioEvent Stone_Ball_Impact;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioEvent Stone_Ball_Broken;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x2258E64", Offset = "0x2258E64", VA = "0x2258E64", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x2258F4C", Offset = "0x2258F4C", VA = "0x2258F4C", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x2258F5C", Offset = "0x2258F5C", VA = "0x2258F5C", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x2259008", Offset = "0x2259008", VA = "0x2259008", Slot = "22")]
	public void Strike(Vector3 hitPos, Vector3 hitDir, int bulletForce)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x2259144", Offset = "0x2259144", VA = "0x2259144", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x2259810", Offset = "0x2259810", VA = "0x2259810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x2259A04", Offset = "0x2259A04", VA = "0x2259A04")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x2259E84", Offset = "0x2259E84", VA = "0x2259E84")]
	public StoneGear()
	{
	}
}
[Token(Token = "0x2000173")]
public class StoreGear : BaseGear
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject HatchInteraction;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform HatchPos;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject ModelInteraction;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int integralValue;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ImageUI;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image DelayTime_Image;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EC8C", Offset = "0xE5EC8C")]
	public TextMeshPro EnergyUI;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x2259E8C", Offset = "0x2259E8C", VA = "0x2259E8C", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x2259FDC", Offset = "0x2259FDC", VA = "0x2259FDC")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x225A00C", Offset = "0x225A00C", VA = "0x225A00C")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x225A03C", Offset = "0x225A03C", VA = "0x225A03C")]
	public void InstanceWeaponModel(int ID)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x225A298", Offset = "0x225A298", VA = "0x225A298", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x225A2AC", Offset = "0x225A2AC", VA = "0x225A2AC")]
	public StoreGear()
	{
	}
}
[Token(Token = "0x2000174")]
public class LanguageManager : Singleton<LanguageManager>
{
	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<e_type_language> OnLanguageChange;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<e_type_language, Dictionary<int, string>> languageDic;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, string> curLanguageDic;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private e_type_language curLanguageType;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x20BA164", Offset = "0x20BA164", VA = "0x20BA164")]
	public void Register(e_type_language type, int id, string str)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x20BA38C", Offset = "0x20BA38C", VA = "0x20BA38C")]
	public void Clear()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x20BA3F4", Offset = "0x20BA3F4", VA = "0x20BA3F4")]
	public void SwitchLanguage(e_type_language type)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x20BA5C4", Offset = "0x20BA5C4", VA = "0x20BA5C4")]
	public string GetText(int id)
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x20BA778", Offset = "0x20BA778", VA = "0x20BA778")]
	public string GetLanguageText(e_type_language type, int id)
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x20BA92C", Offset = "0x20BA92C", VA = "0x20BA92C")]
	public e_type_language GetLanguage()
	{
		return default(e_type_language);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x20BA934", Offset = "0x20BA934", VA = "0x20BA934")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x2000175")]
public class UILanguageImage : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000176")]
	public class TextureHotSwitchCell
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image Image;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x206419C", Offset = "0x206419C", VA = "0x206419C")]
		public TextureHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE540D0", Offset = "0xE540D0")]
	private sealed class <SetText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILanguageImage <>4__this;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image image;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071B")]
			[Address(RVA = "0x206414C", Offset = "0x206414C", VA = "0x206414C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x2064194", Offset = "0x2064194", VA = "0x2064194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x2063DF8", Offset = "0x2063DF8", VA = "0x2063DF8")]
		[DebuggerHidden]
		public <SetText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x2063E24", Offset = "0x2063E24", VA = "0x2063E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x2063E28", Offset = "0x2063E28", VA = "0x2063E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x2064154", Offset = "0x2064154", VA = "0x2064154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMipMap;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public TextureHotSwitchCell[] cells;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x2368038", Offset = "0x2368038", VA = "0x2368038")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x2368330", Offset = "0x2368330", VA = "0x2368330")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x236845C", Offset = "0x236845C", VA = "0x236845C")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x23681BC", Offset = "0x23681BC", VA = "0x23681BC")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x2368460", Offset = "0x2368460", VA = "0x2368460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B714", Offset = "0xE6B714")]
	private IEnumerator SetText(Image image, string path)
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x2368508", Offset = "0x2368508", VA = "0x2368508")]
	public UILanguageImage()
	{
	}
}
[Token(Token = "0x2000178")]
public class UILanguageObjectTest : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000179")]
	public class ObjHotSwitchCell
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj_ch;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj_us;

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x20641A4", Offset = "0x20641A4", VA = "0x20641A4")]
		public ObjHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ObjHotSwitchCell cell;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x2368518", Offset = "0x2368518", VA = "0x2368518")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x2368718", Offset = "0x2368718", VA = "0x2368718")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x2368844", Offset = "0x2368844", VA = "0x2368844")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x236869C", Offset = "0x236869C", VA = "0x236869C")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x2368854", Offset = "0x2368854", VA = "0x2368854")]
	public UILanguageObjectTest()
	{
	}
}
[Token(Token = "0x200017A")]
public class UILanguageRawImage : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200017B")]
	public class TextureHotSwitchCell
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RawImage Image;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x20644E0", Offset = "0x20644E0", VA = "0x20644E0")]
		public TextureHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE540E0", Offset = "0xE540E0")]
	private sealed class <SetText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILanguageRawImage <>4__this;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage image;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x2064490", Offset = "0x2064490", VA = "0x2064490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x20644D8", Offset = "0x20644D8", VA = "0x20644D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x20641AC", Offset = "0x20641AC", VA = "0x20641AC")]
		[DebuggerHidden]
		public <SetText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x20641D8", Offset = "0x20641D8", VA = "0x20641D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x20641DC", Offset = "0x20641DC", VA = "0x20641DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x2064498", Offset = "0x2064498", VA = "0x2064498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMipMap;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public TextureHotSwitchCell[] cells;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x236885C", Offset = "0x236885C", VA = "0x236885C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x2368B54", Offset = "0x2368B54", VA = "0x2368B54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x2368C80", Offset = "0x2368C80", VA = "0x2368C80")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x23689E0", Offset = "0x23689E0", VA = "0x23689E0")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x2368C84", Offset = "0x2368C84", VA = "0x2368C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B7C4", Offset = "0xE6B7C4")]
	private IEnumerator SetText(RawImage image, string path)
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x2368D2C", Offset = "0x2368D2C", VA = "0x2368D2C")]
	public UILanguageRawImage()
	{
	}
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE540F0", Offset = "0xE540F0")]
public class UILanguageText : MonoBehaviour
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text t;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int textId;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x2368D3C", Offset = "0x2368D3C", VA = "0x2368D3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x2368D40", Offset = "0x2368D40", VA = "0x2368D40")]
	private void Init()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x2368D9C", Offset = "0x2368D9C", VA = "0x2368D9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x2368F78", Offset = "0x2368F78", VA = "0x2368F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x23690A4", Offset = "0x23690A4", VA = "0x23690A4")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x2368ED0", Offset = "0x2368ED0", VA = "0x2368ED0")]
	private void SetText()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x23690A8", Offset = "0x23690A8", VA = "0x23690A8")]
	public UILanguageText()
	{
	}
}
[Token(Token = "0x200017E")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54150", Offset = "0xE54150")]
public class LightProbeAnchoPositionOverrider : MonoBehaviour
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _BakePosition;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> m_Renderers;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _PrefabTranform;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _LightprobeAnchor;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5ECF4", Offset = "0xE5ECF4")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int AreaID;

	[Token(Token = "0x1700011C")]
	public WUnit Owner
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x24CB838", Offset = "0x24CB838", VA = "0x24CB838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B874", Offset = "0xE6B874")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x24CB840", Offset = "0x24CB840", VA = "0x24CB840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B884", Offset = "0xE6B884")]
		private set
		{
		}
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x24CB848", Offset = "0x24CB848", VA = "0x24CB848")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x24CB9F0", Offset = "0x24CB9F0", VA = "0x24CB9F0")]
	public void DoDestroy(WUnit unit)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x24CB9FC", Offset = "0x24CB9FC", VA = "0x24CB9FC")]
	public void DoDie()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x24CBAF0", Offset = "0x24CBAF0", VA = "0x24CBAF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x24CBCBC", Offset = "0x24CBCBC", VA = "0x24CBCBC")]
	public LightProbeAnchoPositionOverrider()
	{
	}
}
[Token(Token = "0x200017F")]
[ExecuteInEditMode]
public class PrefabLightmapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000180")]
	private struct RendererInfo
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lightmapIndex;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 lightmapOffsetScale;
	}

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RendererInfo[] m_RendererInfo;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D[] m_LightmapsColor;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture2D[] m_lightmapsDir;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D[] m_lightmapsDir02;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public LightProbes lightProbes;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 bakePos;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AreaModelData areaModelData;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x2710948", Offset = "0x2710948", VA = "0x2710948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x2710B74", Offset = "0x2710B74", VA = "0x2710B74")]
	private void ApplyLightmaps(RendererInfo[] rendererInfo, Texture2D[] lightmaps, Texture2D[] lightmaps2)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x2710FE0", Offset = "0x2710FE0", VA = "0x2710FE0")]
	private void ApplyRendererInfo(RendererInfo[] infos, int[] arrayOffsetIndex)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x27111CC", Offset = "0x27111CC", VA = "0x27111CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6B894", Offset = "0xE6B894")]
	public void SetLightmapsDir02()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x27113A0", Offset = "0x27113A0", VA = "0x27113A0")]
	public PrefabLightmapData()
	{
	}
}
[Token(Token = "0x2000181")]
public class LineControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE541C0", Offset = "0xE541C0")]
	private sealed class <>c
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__11_0;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x2059BE8", Offset = "0x2059BE8", VA = "0x2059BE8")]
		public <>c()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x2059BF0", Offset = "0x2059BF0", VA = "0x2059BF0")]
		internal int <Update>b__11_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem endPointEffect;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRLineRenderer lineRender;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 endPoint;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int controlPosIndex;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float endPointEffectOffset;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] temphits;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float refreshInterval;

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x24CC2DC", Offset = "0x24CC2DC", VA = "0x24CC2DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x24CC410", Offset = "0x24CC410", VA = "0x24CC410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x24CC9B4", Offset = "0x24CC9B4", VA = "0x24CC9B4")]
	public LineControl()
	{
	}
}
[Token(Token = "0x2000183")]
public class Logger
{
	[Token(Token = "0x40008F1")]
	private const int FilterTag_Default = 1;

	[Token(Token = "0x40008F2")]
	public const int FilterTag_Battle = 2;

	[Token(Token = "0x40008F3")]
	public const int FilterTag_State = 4;

	[Token(Token = "0x40008F4")]
	public const int FilterTag_AI = 8;

	[Token(Token = "0x40008F5")]
	public const int FilterTag_Net = 16;

	[Token(Token = "0x40008F6")]
	public const int FilterTag_Emitter = 32;

	[Token(Token = "0x1700011D")]
	public static bool IsDebug
	{
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x24D7F1C", Offset = "0x24D7F1C", VA = "0x24D7F1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x24D7F80", Offset = "0x24D7F80", VA = "0x24D7F80")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public static bool IsShowTimeMillis
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x24D7FEC", Offset = "0x24D7FEC", VA = "0x24D7FEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x24D8050", Offset = "0x24D8050", VA = "0x24D8050")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public static bool IsDevelopmentBuild
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x24D80BC", Offset = "0x24D80BC", VA = "0x24D80BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x24D7DDC", Offset = "0x24D7DDC", VA = "0x24D7DDC")]
	public static void InitLogConfig()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x24D7E70", Offset = "0x24D7E70", VA = "0x24D7E70")]
	public static void SetFilterTag(int tag, bool isActive)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x24D8118", Offset = "0x24D8118", VA = "0x24D8118")]
	public static void SetFilterTagState(int tagState)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x24D8180", Offset = "0x24D8180", VA = "0x24D8180")]
	public static string GetIntListStr(List<int> intArray)
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x24D82BC", Offset = "0x24D82BC", VA = "0x24D82BC")]
	public static string GetIntArrayStr(int[] intArray)
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x24D83EC", Offset = "0x24D83EC", VA = "0x24D83EC")]
	public static string GetByteArrayStr(byte[] byteArray)
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x24D8518", Offset = "0x24D8518", VA = "0x24D8518")]
	public static string GetStringArrayStr(string[] stringArray)
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x24D8624", Offset = "0x24D8624", VA = "0x24D8624")]
	public Logger()
	{
	}
}
[Token(Token = "0x2000184")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE541D0", Offset = "0xE541D0")]
public class MultiMap<T, K, V>
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<T, Dictionary<K, V>> dictionary;

	[Token(Token = "0x17000120")]
	public int Count
	{
		[Token(Token = "0x600075D")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000121")]
	public V Item
	{
		[Token(Token = "0x6000761")]
		get
		{
			return (V)null;
		}
	}

	[Token(Token = "0x17000122")]
	public Dictionary<K, V> Item
	{
		[Token(Token = "0x6000762")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000758")]
	public MultiMap()
	{
	}

	[Token(Token = "0x6000759")]
	public Dictionary<T, Dictionary<K, V>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	public void Add(T t, K k, V v)
	{
	}

	[Token(Token = "0x600075B")]
	public KeyValuePair<T, Dictionary<K, V>> First()
	{
		return default(KeyValuePair<T, Dictionary<K, V>>);
	}

	[Token(Token = "0x600075C")]
	public KeyValuePair<K, V> Last(T t)
	{
		return default(KeyValuePair<K, V>);
	}

	[Token(Token = "0x600075E")]
	private Dictionary<K, V> FetchList()
	{
		return null;
	}

	[Token(Token = "0x600075F")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000760")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000763")]
	public bool ContainsKey(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000764")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000765")]
	public void Clear()
	{
	}
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54208", Offset = "0xE54208")]
public class MonsterNav : MonoBehaviour
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, EffectDefine> effectDefines;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<AudioEvent, WwiseDefine> audioEvents;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioEvent loopAudioEvent;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> MonsterAttackPointList;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider MonsterDetectionCollider;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isExpand;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 EndScale;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startScale;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float ChangeTime;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x27AF528", Offset = "0x27AF528", VA = "0x27AF528")]
	public void Init(WUnit Owner)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x27AF6E4", Offset = "0x27AF6E4", VA = "0x27AF6E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x27AF87C", Offset = "0x27AF87C", VA = "0x27AF87C")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x27AFD7C", Offset = "0x27AFD7C", VA = "0x27AFD7C")]
	public void Expand()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x27AFDF0", Offset = "0x27AFDF0", VA = "0x27AFDF0")]
	public void CreateEffect(int EffectID, bool IsAutoDestroy = true, bool IsParent = true)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x27B00A8", Offset = "0x27B00A8", VA = "0x27B00A8")]
	public void ClearEffect(int EffectID)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x27B0200", Offset = "0x27B0200", VA = "0x27B0200")]
	public void CreateAudio(AudioEvent audioEvent, bool IsAutoDestroy = true)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x27B03E4", Offset = "0x27B03E4", VA = "0x27B03E4")]
	public void ClearAudio(AudioEvent audioEvent)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x27B0524", Offset = "0x27B0524", VA = "0x27B0524")]
	public void DoDie()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x27B07D0", Offset = "0x27B07D0", VA = "0x27B07D0")]
	public MonsterNav()
	{
	}
}
[Token(Token = "0x2000186")]
public class NavPoint : MonoBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5ED94", Offset = "0xE5ED94")]
	public MoveTargetType moveTargetType;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EDCC", Offset = "0xE5EDCC")]
	public IntervalActionType intervalActionType;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EE04", Offset = "0xE5EE04")]
	public float speed;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EE3C", Offset = "0xE5EE3C")]
	public int ShootTimes;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EE74", Offset = "0xE5EE74")]
	public float ShootDuration;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EEAC", Offset = "0xE5EEAC")]
	public float MoveShootIntervalTime;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EEE4", Offset = "0xE5EEE4")]
	public DOTweenPath DOTweenPath;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x2660140", Offset = "0x2660140", VA = "0x2660140")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x2660380", Offset = "0x2660380", VA = "0x2660380")]
	public NavPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000187")]
public class NavPointCell
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NavPoint nPoint;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE5EF1C", Offset = "0xE5EF1C")]
	private (Vector3, Quaternion) info;

	[Token(Token = "0x17000123")]
	public NavPoint NPoint
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x2660424", Offset = "0x2660424", VA = "0x2660424")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x266042C", Offset = "0x266042C", VA = "0x266042C")]
	public void Init(NavPoint point)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x2660544", Offset = "0x2660544", VA = "0x2660544")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x2660550", Offset = "0x2660550", VA = "0x2660550")]
	public void InitTrans()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x266065C", Offset = "0x266065C", VA = "0x266065C")]
	public Vector3 Position()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x26606FC", Offset = "0x26606FC", VA = "0x26606FC")]
	public Vector3 Rotation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x26607BC", Offset = "0x26607BC", VA = "0x26607BC")]
	public void SetPosition(Vector3 Pos)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x26608D0", Offset = "0x26608D0", VA = "0x26608D0")]
	public void SetRotation(Quaternion rot)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x26609EC", Offset = "0x26609EC", VA = "0x26609EC")]
	public void SetPosRot(Vector3 Pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x2660B54", Offset = "0x2660B54", VA = "0x2660B54")]
	public NavPointCell()
	{
	}
}
[Token(Token = "0x2000188")]
public class NavPointManager : Singleton<NavPointManager>
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<NavPointCell> navPointList;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavPointCell navPointCell;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, NavPointCell> NavPointDic;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Dictionary<int, NavPointCell>> AreaNavPointDic;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<NavPointCell>> MonsterPatrolPointDic;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<NavPointCell>> MonsterFightPointDic;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, bool> MonsterWarningDic;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, List<int>> MonsterShootTimesDic;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x264EBD4", Offset = "0x264EBD4", VA = "0x264EBD4")]
	public void SetAreaNavPoint(int areaid, List<NavPoint> navPointList)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x264CDBC", Offset = "0x264CDBC", VA = "0x264CDBC")]
	public void SetMonsterPatrolPoint(int areaid, int id, List<int> PatrolPointList)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x264D2A0", Offset = "0x264D2A0", VA = "0x264D2A0")]
	public void SetMonsterFightPoint(int areaid, int id, List<int> FightPointList)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x264D82C", Offset = "0x264D82C", VA = "0x264D82C")]
	public void SetMonsterShootTimes(int id, List<int> ShootTimesList)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x2660B5C", Offset = "0x2660B5C", VA = "0x2660B5C")]
	public List<NavPointCell> GetFightPointCells(int id)
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x2660BFC", Offset = "0x2660BFC", VA = "0x2660BFC")]
	public List<NavPointCell> GetAreaNavPointLists(int areaid)
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x2660E10", Offset = "0x2660E10", VA = "0x2660E10")]
	public List<NavPointCell> GetPatrolPointCells(int id)
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x2660EB0", Offset = "0x2660EB0", VA = "0x2660EB0")]
	public List<int> GetShootTimes(int id)
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x2660F2C", Offset = "0x2660F2C", VA = "0x2660F2C")]
	public void CleanNavPoint()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x264EA0C", Offset = "0x264EA0C", VA = "0x264EA0C")]
	public void CleanAllPoint()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x2661260", Offset = "0x2661260", VA = "0x2661260")]
	public void CleanPatrolPoint()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x26612B4", Offset = "0x26612B4", VA = "0x26612B4")]
	public void CleanFightPoint()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x2661308", Offset = "0x2661308", VA = "0x2661308")]
	public NavPointCell GetFightPointCell(int id, int index)
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x26614E4", Offset = "0x26614E4", VA = "0x26614E4")]
	public NavPointCell GetPatrolPointCell(int id, int index)
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x264D784", Offset = "0x264D784", VA = "0x264D784")]
	public void SetMonsterWarningDic(int id, bool isWarning)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x26616C0", Offset = "0x26616C0", VA = "0x26616C0")]
	public bool GetMonsterWarning(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x2661790", Offset = "0x2661790", VA = "0x2661790")]
	public void ClearNavPoint(int id)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x2661A40", Offset = "0x2661A40", VA = "0x2661A40")]
	public NavPointManager()
	{
	}
}
[Token(Token = "0x2000189")]
public abstract class IObjectRecycle : MonoBehaviour
{
	[Token(Token = "0x600078F")]
	public abstract void Recycle();

	[Token(Token = "0x6000790")]
	public abstract void Recover();

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x20ACC04", Offset = "0x20ACC04", VA = "0x20ACC04")]
	protected IObjectRecycle()
	{
	}
}
[Serializable]
[Token(Token = "0x200018A")]
public class ObjectPool
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pooledObject;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int initSize;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int id;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform parent;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<ObjectPoolCell> pool;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x2305298", Offset = "0x2305298", VA = "0x2305298")]
	public void Init(int _id, Transform _parent)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x23055F4", Offset = "0x23055F4", VA = "0x23055F4")]
	public GameObject GetObject()
	{
		return null;
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x23057AC", Offset = "0x23057AC", VA = "0x23057AC")]
	public void RecycleObject(ObjectPoolCell cell)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x23054FC", Offset = "0x23054FC", VA = "0x23054FC")]
	private ObjectPoolCell InstantiateOnePoolCell()
	{
		return null;
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x23059C8", Offset = "0x23059C8", VA = "0x23059C8")]
	public ObjectPool()
	{
	}
}
[Token(Token = "0x200018B")]
public class ObjectPoolCell : MonoBehaviour
{
	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int id;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool haveRecycling;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject catchGameObject;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform catchTransform;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IObjectRecycle CatchRecycleComponent;

	[Token(Token = "0x17000124")]
	public int Id
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x23059D8", Offset = "0x23059D8", VA = "0x23059D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x23059E0", Offset = "0x23059E0", VA = "0x23059E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public bool HaveRecycling
	{
		[Token(Token = "0x6000799")]
		[Address(RVA = "0x23059E8", Offset = "0x23059E8", VA = "0x23059E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x23059F0", Offset = "0x23059F0", VA = "0x23059F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public GameObject CatchGameObject
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x23059FC", Offset = "0x23059FC", VA = "0x23059FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x2305A04", Offset = "0x2305A04", VA = "0x2305A04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public Transform CatchTransform
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x2305A0C", Offset = "0x2305A0C", VA = "0x2305A0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x2305A14", Offset = "0x2305A14", VA = "0x2305A14")]
		private set
		{
		}
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x23058E0", Offset = "0x23058E0", VA = "0x23058E0")]
	public void Init(int _id)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x2305A1C", Offset = "0x2305A1C", VA = "0x2305A1C")]
	public void SetParent(Transform parent)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x2305718", Offset = "0x2305718", VA = "0x2305718")]
	public GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x2305820", Offset = "0x2305820", VA = "0x2305820")]
	public void Recycle(Transform parent)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x2305A64", Offset = "0x2305A64", VA = "0x2305A64")]
	public ObjectPoolCell()
	{
	}
}
[Token(Token = "0x200018C")]
public class ObjectPoolManager : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectPoolManager Instance;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ObjectPool> pools;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, ObjectPool> _pools;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, int> _prefabToPoolId;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x2305A74", Offset = "0x2305A74", VA = "0x2305A74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x2305BD4", Offset = "0x2305BD4", VA = "0x2305BD4")]
	public void Init()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x2305F74", Offset = "0x2305F74", VA = "0x2305F74")]
	public int RegisterObject(GameObject prefab, int initSize)
	{
		return default(int);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x23060D8", Offset = "0x23060D8", VA = "0x23060D8")]
	public int RegisterObject(ObjectPool objectPool)
	{
		return default(int);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x23062C0", Offset = "0x23062C0", VA = "0x23062C0")]
	public GameObject GetObjectPrefab(string id)
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x2306300", Offset = "0x2306300", VA = "0x2306300")]
	private GameObject GetObjectPrefab(int id)
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x23063A4", Offset = "0x23063A4", VA = "0x23063A4")]
	private GameObject GetObject(int id, [Optional] Vector3 position, [Optional] Quaternion rotation, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x23065BC", Offset = "0x23065BC", VA = "0x23065BC")]
	public GameObject GetObject(GameObject prefab, [Optional] Vector3 position, [Optional] Quaternion rotation, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x2306700", Offset = "0x2306700", VA = "0x2306700")]
	public void DestoryObject(GameObject obj)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x23068E8", Offset = "0x23068E8", VA = "0x23068E8")]
	private void RecycleObject(ObjectPoolCell cell)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x2306974", Offset = "0x2306974", VA = "0x2306974")]
	public ObjectPoolManager()
	{
	}
}
[Token(Token = "0x200018D")]
public abstract class ControlBase : MonoBehaviour, IGamePlay
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onPlayEvent;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onResetEvent;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bInitialized;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x21BF494", Offset = "0x21BF494", VA = "0x21BF494")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x21BF4D0", Offset = "0x21BF4D0", VA = "0x21BF4D0", Slot = "7")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x21BF4D4", Offset = "0x21BF4D4", VA = "0x21BF4D4", Slot = "8")]
	public virtual void Play(Action onExplosionComplete)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x21BF4F0", Offset = "0x21BF4F0", VA = "0x21BF4F0", Slot = "9")]
	public virtual void ToDefault()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x21BF50C", Offset = "0x21BF50C", VA = "0x21BF50C")]
	protected ControlBase()
	{
	}
}
[Token(Token = "0x200018E")]
public class EffectControl : ControlBase
{
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54268", Offset = "0xE54268")]
	private sealed class <DelayDissolve>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectControl <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x20F597C", Offset = "0x20F597C", VA = "0x20F597C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x20F59C4", Offset = "0x20F59C4", VA = "0x20F59C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x20F57A0", Offset = "0x20F57A0", VA = "0x20F57A0")]
		[DebuggerHidden]
		public <DelayDissolve>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x20F57CC", Offset = "0x20F57CC", VA = "0x20F57CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x20F57D0", Offset = "0x20F57D0", VA = "0x20F57D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x20F5984", Offset = "0x20F5984", VA = "0x20F5984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5EFB8", Offset = "0xE5EFB8")]
	[SerializeField]
	private GameObject effectRoot;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem[] childrenPS;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F004", Offset = "0xE5F004")]
	[SerializeField]
	private GameObject matRoot;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int childMeshCount;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] childrenRender;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string dissolveName;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string emissionName;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener dissolveTween;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener emissionTween;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float dissolveProgress;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float curEmission;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] initEmissions;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F050", Offset = "0xE5F050")]
	private float dissolveDelay;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float dissolveDuration;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent onDissolveComplete;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator co_dissolve;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x24EEB0C", Offset = "0x24EEB0C", VA = "0x24EEB0C", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x24EF2B4", Offset = "0x24EF2B4", VA = "0x24EF2B4", Slot = "9")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x24EEB34", Offset = "0x24EEB34", VA = "0x24EEB34")]
	private void InitParam()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x24EF314", Offset = "0x24EF314", VA = "0x24EF314")]
	public void StartParticleEffect()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x24EF380", Offset = "0x24EF380", VA = "0x24EF380")]
	public void StartDissolve()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x24EF448", Offset = "0x24EF448", VA = "0x24EF448")]
	public void StartEmissionOff()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x24EF3D0", Offset = "0x24EF3D0", VA = "0x24EF3D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B8CC", Offset = "0xE6B8CC")]
	private IEnumerator DelayDissolve()
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x24EF50C", Offset = "0x24EF50C", VA = "0x24EF50C")]
	private void SetMatProperty(string name, float amount)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x24EF5E8", Offset = "0x24EF5E8", VA = "0x24EF5E8")]
	public EffectControl()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x24EF674", Offset = "0x24EF674", VA = "0x24EF674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B92C", Offset = "0xE6B92C")]
	private float <InitParam>b__18_0()
	{
		return default(float);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x24EF67C", Offset = "0x24EF67C", VA = "0x24EF67C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B93C", Offset = "0xE6B93C")]
	private void <InitParam>b__18_1(float x)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x24EF684", Offset = "0x24EF684", VA = "0x24EF684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B94C", Offset = "0xE6B94C")]
	private float <InitParam>b__18_2()
	{
		return default(float);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x24EF68C", Offset = "0x24EF68C", VA = "0x24EF68C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B95C", Offset = "0xE6B95C")]
	private void <InitParam>b__18_3(float x)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x24EF694", Offset = "0x24EF694", VA = "0x24EF694")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B96C", Offset = "0xE6B96C")]
	private void <StartEmissionOff>b__21_0()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x24EF6A0", Offset = "0x24EF6A0", VA = "0x24EF6A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B97C", Offset = "0xE6B97C")]
	private void <DelayDissolve>b__22_0()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x24EF6AC", Offset = "0x24EF6AC", VA = "0x24EF6AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6B98C", Offset = "0xE6B98C")]
	private void <DelayDissolve>b__22_1()
	{
	}
}
[Token(Token = "0x2000190")]
public interface IGamePlay
{
	[Token(Token = "0x60007CA")]
	void Play(Action onExplosionComplete);

	[Token(Token = "0x60007CB")]
	void ToDefault();

	[Token(Token = "0x60007CC")]
	void Initialize();
}
[Token(Token = "0x2000191")]
public interface IPhysics
{
	[Token(Token = "0x60007CD")]
	void Play(Action onExplosionComplete);

	[Token(Token = "0x60007CE")]
	void ToDefault();

	[Token(Token = "0x60007CF")]
	void Initialize();
}
[Token(Token = "0x2000192")]
[ExecuteInEditMode]
public class PhysicalForce : MonoBehaviour
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F0AC", Offset = "0xE5F0AC")]
	private Transform forceCenter;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F0F8", Offset = "0xE5F0F8")]
	[SerializeField]
	private Vector3 forceOffset;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F144", Offset = "0xE5F144")]
	private float forceIntensity;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F190", Offset = "0xE5F190")]
	private float forceRadius;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 forcePos;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_Theta;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x230C100", Offset = "0x230C100", VA = "0x230C100")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x230C198", Offset = "0x230C198", VA = "0x230C198")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x230C1D8", Offset = "0x230C1D8", VA = "0x230C1D8")]
	public void SetExplosionForce(Rigidbody rig, float forceScale = 1f, ForceMode mode = ForceMode.Impulse)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x230C218", Offset = "0x230C218", VA = "0x230C218")]
	public void SetWindForce(Rigidbody rig, Vector3 force)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x230C234", Offset = "0x230C234", VA = "0x230C234")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x230C334", Offset = "0x230C334", VA = "0x230C334")]
	private void DrawCircle(Color m_Color, float radius, Vector3 pos)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x230C570", Offset = "0x230C570", VA = "0x230C570")]
	public PhysicalForce()
	{
	}
}
[Token(Token = "0x2000193")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE54288", Offset = "0xE54288")]
public abstract class PhysicsBase : MonoBehaviour, IGamePlay
{
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE542E8", Offset = "0xE542E8")]
	private sealed class <DelayPlay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsBase <>4__this;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x205E240", Offset = "0x205E240", VA = "0x205E240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x205E288", Offset = "0x205E288", VA = "0x205E288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x205E10C", Offset = "0x205E10C", VA = "0x205E10C")]
		[DebuggerHidden]
		public <DelayPlay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x205E138", Offset = "0x205E138", VA = "0x205E138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x205E13C", Offset = "0x205E13C", VA = "0x205E13C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x205E248", Offset = "0x205E248", VA = "0x205E248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE542F8", Offset = "0xE542F8")]
	private sealed class <DelayComplete>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsBase <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x205E0BC", Offset = "0x205E0BC", VA = "0x205E0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x205E104", Offset = "0x205E104", VA = "0x205E104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x205DFC4", Offset = "0x205DFC4", VA = "0x205DFC4")]
		[DebuggerHidden]
		public <DelayComplete>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x205DFF0", Offset = "0x205DFF0", VA = "0x205DFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x205DFF4", Offset = "0x205DFF4", VA = "0x205DFF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x205E0C4", Offset = "0x205E0C4", VA = "0x205E0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PhysicalForce mForce;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool bInitialized;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool bReadyPlay;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onPlayEvent;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onExplosionEvent;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onDefaultEvent;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onDelayCompleteEvent;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Action onEffectCompleteEvent;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F1DC", Offset = "0xE5F1DC")]
	protected float waitTimeForce;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F228", Offset = "0xE5F228")]
	protected float delayComplete;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected IEnumerator co_delayPlay;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected IEnumerator co_basePlay;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected IEnumerator co_delayComplete;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x230C7F4", Offset = "0x230C7F4", VA = "0x230C7F4", Slot = "7")]
	public virtual void Play(Action onAllComplete)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x230C878", Offset = "0x230C878", VA = "0x230C878")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x230C8B4", Offset = "0x230C8B4", VA = "0x230C8B4", Slot = "8")]
	public virtual void ToDefault()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x230C910", Offset = "0x230C910", VA = "0x230C910", Slot = "9")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x230CA5C", Offset = "0x230CA5C", VA = "0x230CA5C")]
	public void OnEffectComplete()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x230CA70", Offset = "0x230CA70", VA = "0x230CA70", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6B9EC", Offset = "0xE6B9EC")]
	protected virtual IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x230CAE8", Offset = "0x230CAE8", VA = "0x230CAE8", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BA4C", Offset = "0xE6BA4C")]
	protected virtual IEnumerator DelayComplete()
	{
		return null;
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x230CB60", Offset = "0x230CB60", VA = "0x230CB60")]
	protected PhysicsBase()
	{
	}
}
[Token(Token = "0x2000196")]
public class PropShock : PhysicsBase
{
	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54308", Offset = "0xE54308")]
	private sealed class <DelayPlay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropShock <>4__this;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x205EAAC", Offset = "0x205EAAC", VA = "0x205EAAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x205EAF4", Offset = "0x205EAF4", VA = "0x205EAF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x205E818", Offset = "0x205E818", VA = "0x205E818")]
		[DebuggerHidden]
		public <DelayPlay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x205E844", Offset = "0x205E844", VA = "0x205E844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x205E848", Offset = "0x205E848", VA = "0x205E848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x205EAB4", Offset = "0x205EAB4", VA = "0x205EAB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Joint[] joints;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int jointCount;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] anchors;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F274", Offset = "0xE5F274")]
	[SerializeField]
	private GameObject jointRoot;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rig;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F2C0", Offset = "0xE5F2C0")]
	[SerializeField]
	private float waitShock;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F30C", Offset = "0xE5F30C")]
	private float breakInterval;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x2711A44", Offset = "0x2711A44", VA = "0x2711A44", Slot = "7")]
	public override void Play(Action onShockComplete)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x2711B30", Offset = "0x2711B30", VA = "0x2711B30", Slot = "8")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x2711DFC", Offset = "0x2711DFC", VA = "0x2711DFC", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BB4C", Offset = "0xE6BB4C")]
	protected override IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x2711E74", Offset = "0x2711E74", VA = "0x2711E74", Slot = "9")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x27120B8", Offset = "0x27120B8", VA = "0x27120B8")]
	public PropShock()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x27120C0", Offset = "0x27120C0", VA = "0x27120C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BBAC", Offset = "0xE6BBAC")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000198")]
[ExecuteInEditMode]
public class ShatterExplode : PhysicsBase
{
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54328", Offset = "0xE54328")]
	private sealed class <DelayPlay>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShatterExplode <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x20616DC", Offset = "0x20616DC", VA = "0x20616DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x2061724", Offset = "0x2061724", VA = "0x2061724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x206158C", Offset = "0x206158C", VA = "0x206158C")]
		[DebuggerHidden]
		public <DelayPlay>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x20615B8", Offset = "0x20615B8", VA = "0x20615B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x20615BC", Offset = "0x20615BC", VA = "0x20615BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x20616E4", Offset = "0x20616E4", VA = "0x20616E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F358", Offset = "0xE5F358")]
	[SerializeField]
	private Transform shatterRoot;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F3A4", Offset = "0xE5F3A4")]
	[SerializeField]
	private bool useRandom;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 initShatterRootPos;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion initShatterRootRot;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject[] children;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody[] m_rigs;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] m_colliders;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int childCount;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] initPositions;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion[] initRots;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F3F0", Offset = "0xE5F3F0")]
	private bool alwaysShow;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tweener timeTween;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float progress;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x21595E8", Offset = "0x21595E8", VA = "0x21595E8", Slot = "7")]
	public override void Play(Action onExplodeComplete)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x2159840", Offset = "0x2159840", VA = "0x2159840", Slot = "8")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x21599B8", Offset = "0x21599B8", VA = "0x21599B8", Slot = "9")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x215A074", Offset = "0x215A074", VA = "0x215A074", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BC34", Offset = "0xE6BC34")]
	protected override IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x2159758", Offset = "0x2159758", VA = "0x2159758")]
	private void SetDynamicStatus(bool isActive)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x215969C", Offset = "0x215969C", VA = "0x215969C")]
	private void SetMeshStatus(bool isActive)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x215A0EC", Offset = "0x215A0EC", VA = "0x215A0EC")]
	public ShatterExplode()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x215A100", Offset = "0x215A100", VA = "0x215A100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BC94", Offset = "0xE6BC94")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x200019A")]
public class StatusControl : ControlBase
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Renderer[] renders;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody[] rigidbodys;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initPos;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion initRot;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x2258438", Offset = "0x2258438", VA = "0x2258438", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x22584A0", Offset = "0x22584A0", VA = "0x22584A0")]
	public void OnRenderStatus(bool bActive)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x225851C", Offset = "0x225851C", VA = "0x225851C")]
	public void OnDynamicStatus(bool bDynamic)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x22585F4", Offset = "0x22585F4", VA = "0x22585F4")]
	public void OnDefaultTran()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x225864C", Offset = "0x225864C", VA = "0x225864C")]
	public StatusControl()
	{
	}
}
[Token(Token = "0x200019B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE54338", Offset = "0xE54338")]
public class WindHandle : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54398", Offset = "0xE54398")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WindHandle <>4__this;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _bWindOn;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x2067BD4", Offset = "0x2067BD4", VA = "0x2067BD4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x2067BDC", Offset = "0x2067BDC", VA = "0x2067BDC")]
		internal Vector3 <SetWindState>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x2067BFC", Offset = "0x2067BFC", VA = "0x2067BFC")]
		internal void <SetWindState>b__1(Vector3 x)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x2067C1C", Offset = "0x2067C1C", VA = "0x2067C1C")]
		internal void <SetWindState>b__2()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x2067C40", Offset = "0x2067C40", VA = "0x2067C40")]
		internal void <SetWindState>b__3()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x2067C68", Offset = "0x2067C68", VA = "0x2067C68")]
		internal void <SetWindState>b__4()
		{
		}
	}

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F46C", Offset = "0xE5F46C")]
	private Transform rigidbodyRoot;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody[] childRigidbodys;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhysicalForce forceHandle;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F4B8", Offset = "0xE5F4B8")]
	public Vector3 windForce;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initForce;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool useRandomWind;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 disturbForce;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F500", Offset = "0xE5F500")]
	[SerializeField]
	private float distScale;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener easeWindTween;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 curProgress;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool bWindOn;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent fromLeftWindEvent;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent fromRightWindEvent;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x2B5BD50", Offset = "0x2B5BD50", VA = "0x2B5BD50")]
	private void Start()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x2B5BEB0", Offset = "0x2B5BEB0", VA = "0x2B5BEB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x2B5BFA0", Offset = "0x2B5BFA0", VA = "0x2B5BFA0")]
	public void SetWindState(bool _bWindOn)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x2B5C2D4", Offset = "0x2B5C2D4", VA = "0x2B5C2D4")]
	public void SetWindLeft()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x2B5C2EC", Offset = "0x2B5C2EC", VA = "0x2B5C2EC")]
	public void SetWindRight()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x2B5C304", Offset = "0x2B5C304", VA = "0x2B5C304")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x2B5C330", Offset = "0x2B5C330", VA = "0x2B5C330")]
	public WindHandle()
	{
	}
}
[Token(Token = "0x200019D")]
public class DelayAction : MonoBehaviour
{
	[Token(Token = "0x6000817")]
	[Address(RVA = "0x21CE03C", Offset = "0x21CE03C", VA = "0x21CE03C")]
	public void Run(float time, Action action)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x21CE044", Offset = "0x21CE044", VA = "0x21CE044")]
	public static DelayAction Run(GameObject target, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x21CE0CC", Offset = "0x21CE0CC", VA = "0x21CE0CC")]
	public DelayAction()
	{
	}
}
[Token(Token = "0x200019E")]
public class NonPhysicalPosition : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE543A8", Offset = "0xE543A8")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float percent;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform transf;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NonPhysicalPosition <>4__this;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action finAction;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 curPosition;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion curRotation;

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x205CE84", Offset = "0x205CE84", VA = "0x205CE84")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x205CE8C", Offset = "0x205CE8C", VA = "0x205CE8C")]
		internal bool <LerpReset>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Quaternion rotation;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool isRoot;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bodyPartID;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollPartData processData;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Rigidbody> applyParts;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine cr_reset;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x2304250", Offset = "0x2304250", VA = "0x2304250")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x2304330", Offset = "0x2304330", VA = "0x2304330")]
	public void LerpReset(Transform transf, float time, Action finAction)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x23044A0", Offset = "0x23044A0", VA = "0x23044A0")]
	public void ImmediateFinish(Transform transf, Action finAction)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x2304530", Offset = "0x2304530", VA = "0x2304530")]
	public NonPhysicalPosition()
	{
	}
}
[Token(Token = "0x20001A0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE543B8", Offset = "0xE543B8")]
public class RagdollPartData : ScriptableObject
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool partHitEnable;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool partDieEnable;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool partDieHitEnable;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x2713B80", Offset = "0x2713B80", VA = "0x2713B80")]
	public RagdollPartData()
	{
	}
}
[Token(Token = "0x20001A1")]
public class RagdollTester : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraController cameraController;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hitForce;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera MainCamera;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform BaseTransform;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE5F57C", Offset = "0xE5F57C")]
	public float StandUpInFootPoint;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Pelvis;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Aniname;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 PelvisToBase;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 PelvisLocalUp;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string colliderName;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RagdollTools ragdollTools;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x2713B98", Offset = "0x2713B98", VA = "0x2713B98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x2713DF8", Offset = "0x2713DF8", VA = "0x2713DF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x2713FDC", Offset = "0x2713FDC", VA = "0x2713FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x271401C", Offset = "0x271401C", VA = "0x271401C")]
	private void doHitReaction()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x2714018", Offset = "0x2714018", VA = "0x2714018")]
	private void doDieRagdoll()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x2714260", Offset = "0x2714260", VA = "0x2714260")]
	private void RayHitOld()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x27145A8", Offset = "0x27145A8", VA = "0x27145A8")]
	public Vector3 User_ComputeGetUpPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x2714644", Offset = "0x2714644", VA = "0x2714644")]
	public RagdollTester()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x2714654", Offset = "0x2714654", VA = "0x2714654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BD1C", Offset = "0xE6BD1C")]
	private void <RayHitOld>b__18_0()
	{
	}
}
[Token(Token = "0x20001A2")]
public class RagdollTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54418", Offset = "0xE54418")]
	private sealed class <>c
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<CharacterJoint> <>9__28_1;

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x205EB60", Offset = "0x205EB60", VA = "0x205EB60")]
		public <>c()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x205EB68", Offset = "0x205EB68", VA = "0x205EB68")]
		internal void <Init>b__28_1(CharacterJoint c)
		{
		}
	}

	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54428", Offset = "0xE54428")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isGravity;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x205EB88", Offset = "0x205EB88", VA = "0x205EB88")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x205EB90", Offset = "0x205EB90", VA = "0x205EB90")]
		internal void <EnableRagdoll>b__0(Rigidbody c)
		{
		}
	}

	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54438", Offset = "0xE54438")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollTools <>4__this;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int componentCounter;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__1;

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x205ECA0", Offset = "0x205ECA0", VA = "0x205ECA0")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x205ECA8", Offset = "0x205ECA8", VA = "0x205ECA8")]
		internal void <DisableRagdoll>b__0(Rigidbody c)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x205EE34", Offset = "0x205EE34", VA = "0x205EE34")]
		internal void <DisableRagdoll>b__1()
		{
		}
	}

	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54448", Offset = "0xE54448")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x205EF30", Offset = "0x205EF30", VA = "0x205EF30")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x205EF38", Offset = "0x205EF38", VA = "0x205EF38")]
		internal void <ApplyVelocity>b__0(Transform child)
		{
		}
	}

	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54458", Offset = "0xE54458")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rig;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NonPhysicalPosition npp;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 dir;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float hitFore;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RagdollTools <>4__this;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DelayAction DelayAction;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action cb;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__3;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__4;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x205F004", Offset = "0x205F004", VA = "0x205F004")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x205F00C", Offset = "0x205F00C", VA = "0x205F00C")]
		internal void <SwitchDiePart>b__0()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x205F0F0", Offset = "0x205F0F0", VA = "0x205F0F0")]
		internal void <SwitchDiePart>b__1()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x205F258", Offset = "0x205F258", VA = "0x205F258")]
		internal void <SwitchDiePart>b__3()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x205F2D8", Offset = "0x205F2D8", VA = "0x205F2D8")]
		internal void <SwitchDiePart>b__2()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x205F450", Offset = "0x205F450", VA = "0x205F450")]
		internal void <SwitchDiePart>b__4()
		{
		}
	}

	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54468", Offset = "0xE54468")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rig;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NonPhysicalPosition npp;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 dir;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float hitFore;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RagdollTools <>4__this;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DelayAction DelayAction;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action cb;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__3;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__4;

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x205F4D4", Offset = "0x205F4D4", VA = "0x205F4D4")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x205F4DC", Offset = "0x205F4DC", VA = "0x205F4DC")]
		internal void <SwitchHitDownPart>b__0()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x205F5C0", Offset = "0x205F5C0", VA = "0x205F5C0")]
		internal void <SwitchHitDownPart>b__1()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x205F710", Offset = "0x205F710", VA = "0x205F710")]
		internal void <SwitchHitDownPart>b__3()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x205F790", Offset = "0x205F790", VA = "0x205F790")]
		internal void <SwitchHitDownPart>b__2()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x205F8F0", Offset = "0x205F8F0", VA = "0x205F8F0")]
		internal void <SwitchHitDownPart>b__4()
		{
		}
	}

	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54478", Offset = "0xE54478")]
	private sealed class <>c__DisplayClass53_0
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RagdollTools <>4__this;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DelayAction DelayAction;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action cb;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__2;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__3;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x205F974", Offset = "0x205F974", VA = "0x205F974")]
		public <>c__DisplayClass53_0()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x205F97C", Offset = "0x205F97C", VA = "0x205F97C")]
		internal void <SwitchClearDie>b__0()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x205FAE4", Offset = "0x205FAE4", VA = "0x205FAE4")]
		internal void <SwitchClearDie>b__2()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x205FB64", Offset = "0x205FB64", VA = "0x205FB64")]
		internal void <SwitchClearDie>b__1()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x205FCDC", Offset = "0x205FCDC", VA = "0x205FCDC")]
		internal void <SwitchClearDie>b__3()
		{
		}
	}

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ragdollRoot;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator ani;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F594", Offset = "0xE5F594")]
	public bool isAutoReset;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F5CC", Offset = "0xE5F5CC")]
	public float dieResetTime;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F604", Offset = "0xE5F604")]
	public HitReaction hitReaction;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool isHitReaction;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float AddUpInterval;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F64C", Offset = "0xE5F64C")]
	public int HitAniForce;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F684", Offset = "0xE5F684")]
	public List<Renderer> DieRender;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float InitDissolveScale;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float DieDissolveScale;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ChangeTime;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool StartAddForce;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[HideInInspector]
	public bool TriggerHitAni;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int AddUpForce;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public e_BodyParts HitBodyParts;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public e_BodyDirection HitBodyDir;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Rigidbody> rigbodys;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<NonPhysicalPosition> posRecordes;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isRagdoll;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private AnimatorUpdateMode aniUpdateMode;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float hitLastForceTimer;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WUnit owner;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x271480C", Offset = "0x271480C", VA = "0x271480C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x2714B54", Offset = "0x2714B54", VA = "0x2714B54")]
	private void Start()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x2714B58", Offset = "0x2714B58", VA = "0x2714B58")]
	private void Update()
	{
	}

	[Token(Token = "0x600082D")]
	private void MapList<T>(List<T> items, Action<T> action)
	{
	}

	[Token(Token = "0x600082E")]
	private void MapArray<T>(T[] items, Action<T> action)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x2714830", Offset = "0x2714830", VA = "0x2714830")]
	private void InitParts()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x27149A4", Offset = "0x27149A4", VA = "0x27149A4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x2714BF0", Offset = "0x2714BF0", VA = "0x2714BF0")]
	public void EnableRagdoll(Action action, bool isGravity, List<Rigidbody> rigs)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x2714E90", Offset = "0x2714E90", VA = "0x2714E90")]
	public void EnableRagdoll(Action action, bool isGravity)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x2714E9C", Offset = "0x2714E9C", VA = "0x2714E9C")]
	public void EnableRagdoll(Action action)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x2714EA8", Offset = "0x2714EA8", VA = "0x2714EA8")]
	public void DisableRagdoll(float time, Action action, List<Rigidbody> rigs)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x27151DC", Offset = "0x27151DC", VA = "0x27151DC")]
	public void DisableRagdoll(float time, Action action)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x27151E4", Offset = "0x27151E4", VA = "0x27151E4")]
	public void DisableRagdoll(float time)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x27151F0", Offset = "0x27151F0", VA = "0x27151F0")]
	public void DoDie(Action action)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x2715230", Offset = "0x2715230", VA = "0x2715230")]
	public void Reset(Action action)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x27153B8", Offset = "0x27153B8", VA = "0x27153B8")]
	public void DoInit(WUnit unit)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x2715280", Offset = "0x2715280", VA = "0x2715280")]
	public void ResetDieRender()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x27153F0", Offset = "0x27153F0", VA = "0x27153F0")]
	public void BronInitRender()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x271555C", Offset = "0x271555C", VA = "0x271555C")]
	public void MeshChange(bool isBron = false)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x2715564", Offset = "0x2715564", VA = "0x2715564")]
	public void MeshRenderChange(bool IsShow)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x271572C", Offset = "0x271572C", VA = "0x271572C")]
	public void ClearMeshChange()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x2715890", Offset = "0x2715890", VA = "0x2715890")]
	public void ApplyVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x27159C0", Offset = "0x27159C0", VA = "0x27159C0")]
	public Rigidbody GetRigbodyByID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x2715BAC", Offset = "0x2715BAC", VA = "0x2715BAC")]
	public int GetRandamBodyPartId()
	{
		return default(int);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x2715C48", Offset = "0x2715C48", VA = "0x2715C48")]
	private NonPhysicalPosition GetPosRecByID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x2715D8C", Offset = "0x2715D8C", VA = "0x2715D8C")]
	public void DieHit(int ragdollId, Vector3 dir, float hitForce, Action cb)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x2715F44", Offset = "0x2715F44", VA = "0x2715F44")]
	public void DieHit(int ragdollId, Vector3 dir, float hitForce)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x271616C", Offset = "0x271616C", VA = "0x271616C")]
	private void DieHit(NonPhysicalPosition npp, Rigidbody rig, Vector3 dir, float hitForce)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x2716198", Offset = "0x2716198", VA = "0x2716198")]
	public void SwitchDiePart(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, Action cb)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x2716584", Offset = "0x2716584", VA = "0x2716584")]
	public void SwitchHitDownPart(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, Action cb)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x2716970", Offset = "0x2716970", VA = "0x2716970")]
	public void SwitchClearDie(Action cb)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x2716AD8", Offset = "0x2716AD8", VA = "0x2716AD8")]
	public void SwitchPartsHit(int ragdollId, Vector3 dir, int foreValue, e_BodyParts bodyParts, [Optional] Action cb)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x2714160", Offset = "0x2714160", VA = "0x2714160")]
	public void Hit(Collider collider, Vector3 force, Vector3 point)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x271459C", Offset = "0x271459C", VA = "0x271459C")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, [Optional] Action cb)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x2716F10", Offset = "0x2716F10", VA = "0x2716F10")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, [Optional] Action cb)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x2714BA4", Offset = "0x2714BA4", VA = "0x2714BA4")]
	private void CheckHitDeadTime()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x27150FC", Offset = "0x27150FC", VA = "0x27150FC")]
	private void EnableIK()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x2714DB0", Offset = "0x2714DB0", VA = "0x2714DB0")]
	private void DisableIK()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x2716F18", Offset = "0x2716F18", VA = "0x2716F18")]
	private void SetIKWeight(float weight)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x2717018", Offset = "0x2717018", VA = "0x2717018")]
	public RagdollTools()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x2717040", Offset = "0x2717040", VA = "0x2717040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BD2C", Offset = "0xE6BD2C")]
	private void <InitParts>b__27_0(Transform child)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x271716C", Offset = "0x271716C", VA = "0x271716C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BD3C", Offset = "0xE6BD3C")]
	private void <Init>b__28_0(Rigidbody c)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x2717230", Offset = "0x2717230", VA = "0x2717230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BD4C", Offset = "0xE6BD4C")]
	private void <ClearMeshChange>b__43_0()
	{
	}
}
[Token(Token = "0x20001AA")]
public class RandomApplyForce : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54488", Offset = "0xE54488")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 force;

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x205FD60", Offset = "0x205FD60", VA = "0x205FD60")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x205FD68", Offset = "0x205FD68", VA = "0x205FD68")]
		internal void <ApplyForce>b__0(Rigidbody rig)
		{
		}
	}

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 forceVec;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x2717D00", Offset = "0x2717D00", VA = "0x2717D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x2717D04", Offset = "0x2717D04", VA = "0x2717D04")]
	public void ApplyForce(Vector3 force)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x2717E1C", Offset = "0x2717E1C", VA = "0x2717E1C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x2717E20", Offset = "0x2717E20", VA = "0x2717E20")]
	public RandomApplyForce()
	{
	}
}
[Token(Token = "0x20001AC")]
public class Velocity : MonoBehaviour
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float checkTime;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 oldPos;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr_v;

	[Token(Token = "0x17000132")]
	public Vector3 v
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x297446C", Offset = "0x297446C", VA = "0x297446C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x297448C", Offset = "0x297448C", VA = "0x297448C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x2974568", Offset = "0x2974568", VA = "0x2974568")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x297457C", Offset = "0x297457C", VA = "0x297457C")]
	public Velocity()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x2974590", Offset = "0x2974590", VA = "0x2974590")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6BD5C", Offset = "0xE6BD5C")]
	private void <OnEnable>b__6_0()
	{
	}
}
[Token(Token = "0x20001AD")]
public class RoomCharacterDeathBase
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_RoomCharacterDeath_Type DeathType;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IsOwnerDeath;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool IsShowUI;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowUITime;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DeathSay;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsStart;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RunningTime;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeBeginTime;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeEndTime;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Action FinishCallBack;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x24B11D0", Offset = "0x24B11D0", VA = "0x24B11D0")]
	public void SetFinishCallBack(Action callBack)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x24B11D8", Offset = "0x24B11D8", VA = "0x24B11D8", Slot = "4")]
	public virtual void Start([Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x24B13C4", Offset = "0x24B13C4", VA = "0x24B13C4")]
	private void BeginTimeDelay()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x24B13D0", Offset = "0x24B13D0", VA = "0x24B13D0", Slot = "5")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x24B13D4", Offset = "0x24B13D4", VA = "0x24B13D4")]
	protected void DoEnd()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x24B147C", Offset = "0x24B147C", VA = "0x24B147C", Slot = "6")]
	protected virtual void End()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x24B151C", Offset = "0x24B151C", VA = "0x24B151C", Slot = "7")]
	protected virtual void DoShowUIUpdate(float time)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x24B164C", Offset = "0x24B164C", VA = "0x24B164C")]
	private void EndFade()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x24B16F4", Offset = "0x24B16F4", VA = "0x24B16F4", Slot = "8")]
	protected virtual void DoShowUI()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x24B1770", Offset = "0x24B1770", VA = "0x24B1770", Slot = "9")]
	public virtual void DoUpdate(float time)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x24B1788", Offset = "0x24B1788", VA = "0x24B1788", Slot = "10")]
	public virtual void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x24B178C", Offset = "0x24B178C", VA = "0x24B178C")]
	public RoomCharacterDeathBase()
	{
	}
}
[Token(Token = "0x20001AE")]
public class RoomCharacterDeathManager : Singleton<RoomCharacterDeathManager>
{
	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curRoomId;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_RoomCharacterDeath_Type DeathType;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsDeathProcess;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool IsOwnerDeath;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool isUISkyBoxActive;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoomCharacterDeathBase DeathData;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterDeathUI characterUI;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int characterDeathUILayer;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int preLayer;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action startAct;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action rollBackAct;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action finishAct;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x24B179C", Offset = "0x24B179C", VA = "0x24B179C")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x24B1834", Offset = "0x24B1834", VA = "0x24B1834")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x24B1844", Offset = "0x24B1844", VA = "0x24B1844")]
	public void DoStart()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x24B1858", Offset = "0x24B1858", VA = "0x24B1858")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x24B18AC", Offset = "0x24B18AC", VA = "0x24B18AC")]
	public void RoomCharacterDeath(e_RoomCharacterDeath_Type deathType, int uId, Vector3 dir)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x24B1E18", Offset = "0x24B1E18", VA = "0x24B1E18")]
	public void SetCallbackAct(Action start, Action rollback, Action finish)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x24B1518", Offset = "0x24B1518", VA = "0x24B1518")]
	public void SetCharacterDeathUI(bool isActive)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x24B1E68", Offset = "0x24B1E68", VA = "0x24B1E68")]
	private void SetCharacterDeathUILayer(bool isSet)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x24B1DE4", Offset = "0x24B1DE4", VA = "0x24B1DE4")]
	private void SetDeathTypeData(e_RoomCharacterDeath_Type deathType, string deathName)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x24B23F4", Offset = "0x24B23F4", VA = "0x24B23F4")]
	private void DeathFinish()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x24B13B0", Offset = "0x24B13B0", VA = "0x24B13B0")]
	public void CharacterRollBack()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x24B25B0", Offset = "0x24B25B0", VA = "0x24B25B0")]
	public void SetUISkyBox(bool isActive)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x24B2770", Offset = "0x24B2770", VA = "0x24B2770")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x24B27C8", Offset = "0x24B27C8", VA = "0x24B27C8")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x24B1D3C", Offset = "0x24B1D3C", VA = "0x24B1D3C")]
	private WUnit GetOwnerUnit()
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x24B1FC4", Offset = "0x24B1FC4", VA = "0x24B1FC4")]
	private RoomCharacterDeathBase GetDeathDataByType(string deathName)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x24B28B4", Offset = "0x24B28B4", VA = "0x24B28B4")]
	public RoomCharacterDeathManager()
	{
	}
}
[Token(Token = "0x20001AF")]
public class RoomCharacterDropOutDeath : RoomCharacterDeathBase
{
	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMotion;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MotionTime;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDropOutBack;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 dropPrePos;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion dropPreRot;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 dropPreCamLocalPos;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion dropPreCamLocalRot;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 dropPreCamPos;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion dropPreCamRot;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 dropPlayerDir;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float dropTotalTime;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float dropAcceleration;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float dropTime;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 tmpPos;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float dropFadeBeginTime;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float dropFadeInTime;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float dropFadeOutTime;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isFadeIn;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x24B2958", Offset = "0x24B2958", VA = "0x24B2958", Slot = "4")]
	public override void Start([Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x24B2A60", Offset = "0x24B2A60", VA = "0x24B2A60", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x24B2B94", Offset = "0x24B2B94", VA = "0x24B2B94")]
	protected void DoMotionUpdate(float time)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x24B2A5C", Offset = "0x24B2A5C", VA = "0x24B2A5C")]
	protected void DoMotion()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x24B300C", Offset = "0x24B300C", VA = "0x24B300C", Slot = "9")]
	public override void DoUpdate(float time)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x24B3030", Offset = "0x24B3030", VA = "0x24B3030", Slot = "10")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x24B33A0", Offset = "0x24B33A0", VA = "0x24B33A0")]
	private GameObject GetPlayerObj()
	{
		return null;
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x24B355C", Offset = "0x24B355C", VA = "0x24B355C")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x24B370C", Offset = "0x24B370C", VA = "0x24B370C")]
	public void SetVrAffectCam(bool isActive)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x24B384C", Offset = "0x24B384C", VA = "0x24B384C")]
	public void SetWeaponActive(bool isActive)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x24B3928", Offset = "0x24B3928", VA = "0x24B3928")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x24B2DF0", Offset = "0x24B2DF0", VA = "0x24B2DF0")]
	public void DoDropOutBack()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x24B2A90", Offset = "0x24B2A90", VA = "0x24B2A90")]
	private void DropOutBackEnd()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x24B2CF8", Offset = "0x24B2CF8", VA = "0x24B2CF8")]
	private void DropOutBackUpdate()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x24B3048", Offset = "0x24B3048", VA = "0x24B3048")]
	private void LockTransformLateUpdate()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x24B27F0", Offset = "0x24B27F0", VA = "0x24B27F0")]
	public RoomCharacterDropOutDeath()
	{
	}
}
[Token(Token = "0x20001B0")]
public class SkyBoxCollector : MonoBehaviour
{
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SkyBoxCollector Instance;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material preTmpMat;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> SkyBoxMaterials;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x2160934", Offset = "0x2160934", VA = "0x2160934")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x21609A0", Offset = "0x21609A0", VA = "0x21609A0")]
	public void ChangeSkyBoxById(int index)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x2160B1C", Offset = "0x2160B1C", VA = "0x2160B1C")]
	public void SavePreTmpSkyBox()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x2160B4C", Offset = "0x2160B4C", VA = "0x2160B4C")]
	public void ResetPreSkyBox()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x2160B58", Offset = "0x2160B58", VA = "0x2160B58")]
	public SkyBoxCollector()
	{
	}
}
[Token(Token = "0x20001B1")]
public class RoomGearManager : Singleton<RoomGearManager>
{
	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x24B7170", Offset = "0x24B7170", VA = "0x24B7170")]
	public void Enter()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x24B7304", Offset = "0x24B7304", VA = "0x24B7304")]
	public void Exit()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x24B7498", Offset = "0x24B7498", VA = "0x24B7498")]
	public void EnterStartGear()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x24B7C18", Offset = "0x24B7C18", VA = "0x24B7C18")]
	public void EnterStartRoomGear()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x24B7C1C", Offset = "0x24B7C1C", VA = "0x24B7C1C")]
	public void EnterStopGearAll()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x24B7CA0", Offset = "0x24B7CA0", VA = "0x24B7CA0")]
	public void EnterPassRoomGear()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x24B7CA4", Offset = "0x24B7CA4", VA = "0x24B7CA4")]
	public void EnterAllInRoomGear()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x24B7C20", Offset = "0x24B7C20", VA = "0x24B7C20")]
	public void EnterStopGear()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x24B7CB8", Offset = "0x24B7CB8", VA = "0x24B7CB8")]
	public void EnterGearEnable(bool isEnable)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x24B8330", Offset = "0x24B8330", VA = "0x24B8330")]
	public RoomGearManager()
	{
	}
}
[Token(Token = "0x20001B2")]
public enum MoveTargetType
{
	[Token(Token = "0x4000A0D")]
	NavmeshRun,
	[Token(Token = "0x4000A0E")]
	NavmeshWalk,
	[Token(Token = "0x4000A0F")]
	Move,
	[Token(Token = "0x4000A10")]
	JumpVertical
}
[Token(Token = "0x20001B3")]
public enum IntervalActionType
{
	[Token(Token = "0x4000A12")]
	None,
	[Token(Token = "0x4000A13")]
	Default,
	[Token(Token = "0x4000A14")]
	Act01,
	[Token(Token = "0x4000A15")]
	Act02,
	[Token(Token = "0x4000A16")]
	Act03
}
[Token(Token = "0x20001B4")]
public class RoomMonsterManager : Singleton<RoomMonsterManager>
{
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54498", Offset = "0xE54498")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsdeathDefine;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomMonsterManager <>4__this;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x2060C9C", Offset = "0x2060C9C", VA = "0x2060C9C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x2060CA4", Offset = "0x2060CA4", VA = "0x2060CA4")]
		internal void <CleanMonster>b__0()
		{
		}
	}

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curMonsterRoomId;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int specialRoomId;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool mIsActiveMonster;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool mIsSpawnMonster;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x24B8578", Offset = "0x24B8578", VA = "0x24B8578")]
	public void Enter()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x24B8870", Offset = "0x24B8870", VA = "0x24B8870")]
	public void Exit()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x24B8B64", Offset = "0x24B8B64", VA = "0x24B8B64")]
	public bool IsMonsterClean()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x24B8C3C", Offset = "0x24B8C3C", VA = "0x24B8C3C")]
	public bool IsSpawnMonster()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x24B8C44", Offset = "0x24B8C44", VA = "0x24B8C44")]
	public void SetSpawnMonsterStatus(bool isSpawn)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x24B8C50", Offset = "0x24B8C50", VA = "0x24B8C50")]
	public bool IsKillBossClean()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x24B8D94", Offset = "0x24B8D94", VA = "0x24B8D94")]
	public void SkipMonster()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x24B8DCC", Offset = "0x24B8DCC", VA = "0x24B8DCC")]
	private void CleanMonster(bool isNow = true, bool IsdeathDefine = false)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x24B912C", Offset = "0x24B912C", VA = "0x24B912C")]
	public bool IsActiveMonster()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x24B9134", Offset = "0x24B9134", VA = "0x24B9134")]
	public void AlertMonster(Vector3 center, float radius)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x24B9440", Offset = "0x24B9440", VA = "0x24B9440")]
	public void DoAlertMonsterActive()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x24B9444", Offset = "0x24B9444", VA = "0x24B9444")]
	public void EnterMonsterRoom(GMessage evt)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x24B953C", Offset = "0x24B953C", VA = "0x24B953C")]
	public void EnterMonsterPreSpawn(int roomId)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x24B98AC", Offset = "0x24B98AC", VA = "0x24B98AC")]
	public void EnterMonsterActive(int roomdID)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x24B9AAC", Offset = "0x24B9AAC", VA = "0x24B9AAC")]
	public void EnterMonsterPauseCallBack()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x24B9AD8", Offset = "0x24B9AD8", VA = "0x24B9AD8")]
	public void PassMonsterPause(int roomdID = 0)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x24B8FB0", Offset = "0x24B8FB0", VA = "0x24B8FB0")]
	public void EnterMonsterPause(int roomdID = 0)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x24B974C", Offset = "0x24B974C", VA = "0x24B974C")]
	public void EnterMonsterRestart()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x24B9B98", Offset = "0x24B9B98", VA = "0x24B9B98")]
	public RoomMonsterManager()
	{
	}
}
[Token(Token = "0x20001B6")]
public static class GameObjectExtensions
{
	[Token(Token = "0x60008CD")]
	public static T AddComponentOnce<T>(this GameObject self) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	public static void DestroyComponent<T>(this GameObject self) where T : Component
	{
	}

	[Token(Token = "0x60008CF")]
	public static void DestroyComponent<T>(this GameObject self, float t) where T : Component
	{
	}
}
[Token(Token = "0x20001B7")]
public static class MonoBehaviourExtensions
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE544C8", Offset = "0xE544C8")]
	private sealed class <_Delay>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x205AF18", Offset = "0x205AF18", VA = "0x205AF18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x205AF60", Offset = "0x205AF60", VA = "0x205AF60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x205AE2C", Offset = "0x205AE2C", VA = "0x205AE2C")]
		[DebuggerHidden]
		public <_Delay>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x205AE58", Offset = "0x205AE58", VA = "0x205AE58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x205AE5C", Offset = "0x205AE5C", VA = "0x205AE5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x205AF20", Offset = "0x205AF20", VA = "0x205AF20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE544D8", Offset = "0xE544D8")]
	private sealed class <_Delay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x205B060", Offset = "0x205B060", VA = "0x205B060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x205B0A8", Offset = "0x205B0A8", VA = "0x205B0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x205AF68", Offset = "0x205AF68", VA = "0x205AF68")]
		[DebuggerHidden]
		public <_Delay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x205AF94", Offset = "0x205AF94", VA = "0x205AF94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x205AF98", Offset = "0x205AF98", VA = "0x205AF98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x205B068", Offset = "0x205B068", VA = "0x205B068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE544E8", Offset = "0xE544E8")]
	private sealed class <_Loop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x205B4F8", Offset = "0x205B4F8", VA = "0x205B4F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x205B540", Offset = "0x205B540", VA = "0x205B540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x205B3F0", Offset = "0x205B3F0", VA = "0x205B3F0")]
		[DebuggerHidden]
		public <_Loop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x205B41C", Offset = "0x205B41C", VA = "0x205B41C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x205B420", Offset = "0x205B420", VA = "0x205B420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x205B500", Offset = "0x205B500", VA = "0x205B500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE544F8", Offset = "0xE544F8")]
	private sealed class <_Loop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x205B65C", Offset = "0x205B65C", VA = "0x205B65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x205B6A4", Offset = "0x205B6A4", VA = "0x205B6A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x205B548", Offset = "0x205B548", VA = "0x205B548")]
		[DebuggerHidden]
		public <_Loop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x205B574", Offset = "0x205B574", VA = "0x205B574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x205B578", Offset = "0x205B578", VA = "0x205B578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x205B664", Offset = "0x205B664", VA = "0x205B664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54508", Offset = "0xE54508")]
	private sealed class <_Loop>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x205B79C", Offset = "0x205B79C", VA = "0x205B79C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x205B7E4", Offset = "0x205B7E4", VA = "0x205B7E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x205B6AC", Offset = "0x205B6AC", VA = "0x205B6AC")]
		[DebuggerHidden]
		public <_Loop>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x205B6D8", Offset = "0x205B6D8", VA = "0x205B6D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x205B6DC", Offset = "0x205B6DC", VA = "0x205B6DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x205B7A4", Offset = "0x205B7A4", VA = "0x205B7A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54518", Offset = "0xE54518")]
	private sealed class <_Frame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> func;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x205B2AC", Offset = "0x205B2AC", VA = "0x205B2AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x205B2F4", Offset = "0x205B2F4", VA = "0x205B2F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x205B1DC", Offset = "0x205B1DC", VA = "0x205B1DC")]
		[DebuggerHidden]
		public <_Frame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x205B208", Offset = "0x205B208", VA = "0x205B208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x205B20C", Offset = "0x205B20C", VA = "0x205B20C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x205B2B4", Offset = "0x205B2B4", VA = "0x205B2B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54528", Offset = "0xE54528")]
	private sealed class <_Frame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x205B3A0", Offset = "0x205B3A0", VA = "0x205B3A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x205B3E8", Offset = "0x205B3E8", VA = "0x205B3E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x205B2FC", Offset = "0x205B2FC", VA = "0x205B2FC")]
		[DebuggerHidden]
		public <_Frame>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x205B328", Offset = "0x205B328", VA = "0x205B328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x205B32C", Offset = "0x205B32C", VA = "0x205B32C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x205B3A8", Offset = "0x205B3A8", VA = "0x205B3A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54538", Offset = "0xE54538")]
	private sealed class <_EndOfFrame>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x205B18C", Offset = "0x205B18C", VA = "0x205B18C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x205B1D4", Offset = "0x205B1D4", VA = "0x205B1D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x205B0B0", Offset = "0x205B0B0", VA = "0x205B0B0")]
		[DebuggerHidden]
		public <_EndOfFrame>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x205B0DC", Offset = "0x205B0DC", VA = "0x205B0DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x205B0E0", Offset = "0x205B0E0", VA = "0x205B0E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x205B194", Offset = "0x205B194", VA = "0x205B194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60008D0")]
	public static void MapAllComponent<T>(this MonoBehaviour self, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x279F0C8", Offset = "0x279F0C8", VA = "0x279F0C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BDAC", Offset = "0xE6BDAC")]
	private static IEnumerator _Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x279F150", Offset = "0x279F150", VA = "0x279F150")]
	public static Coroutine Delay(this MonoBehaviour self, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x279F1B4", Offset = "0x279F1B4", VA = "0x279F1B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BE1C", Offset = "0xE6BE1C")]
	private static IEnumerator _Delay(float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x279F240", Offset = "0x279F240", VA = "0x279F240")]
	public static Coroutine Delay(this MonoBehaviour self, float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x279F278", Offset = "0x279F278", VA = "0x279F278")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BE8C", Offset = "0xE6BE8C")]
	private static IEnumerator _Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x279F300", Offset = "0x279F300", VA = "0x279F300")]
	public static Coroutine Loop(this MonoBehaviour self, float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x279F338", Offset = "0x279F338", VA = "0x279F338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BEFC", Offset = "0xE6BEFC")]
	private static IEnumerator _Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x279F3C4", Offset = "0x279F3C4", VA = "0x279F3C4")]
	public static Coroutine Loop(this MonoBehaviour self, float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x279F3FC", Offset = "0x279F3FC", VA = "0x279F3FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BF6C", Offset = "0xE6BF6C")]
	private static IEnumerator _Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x279F484", Offset = "0x279F484", VA = "0x279F484")]
	public static Coroutine Loop(this MonoBehaviour self, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x279F4BC", Offset = "0x279F4BC", VA = "0x279F4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6BFDC", Offset = "0xE6BFDC")]
	private static IEnumerator _Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x279F534", Offset = "0x279F534", VA = "0x279F534")]
	public static Coroutine Frame(this MonoBehaviour self, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x279F56C", Offset = "0x279F56C", VA = "0x279F56C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6C04C", Offset = "0xE6C04C")]
	private static IEnumerator _Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x279F5E4", Offset = "0x279F5E4", VA = "0x279F5E4")]
	public static Coroutine Frame(this MonoBehaviour self, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x279F61C", Offset = "0x279F61C", VA = "0x279F61C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6C0BC", Offset = "0xE6C0BC")]
	private static IEnumerator _EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x279F694", Offset = "0x279F694", VA = "0x279F694")]
	public static Coroutine EndOfFrame(this MonoBehaviour self, Action action)
	{
		return null;
	}
}
[Token(Token = "0x20001C0")]
public static class TransformExtensions
{
	[Token(Token = "0x6000911")]
	public static void MapAllComponent<T>(this Transform self, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x6000912")]
	public static void RandInComponents<T>(this Transform self, Action<T> action) where T : Component
	{
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE54558", Offset = "0xE54558")]
public class UnOrderMultiMap<T, K>
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Dictionary<T, List<K>> dictionary;

	[Token(Token = "0x17000143")]
	public int Count
	{
		[Token(Token = "0x6000916")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000144")]
	public List<K> Item
	{
		[Token(Token = "0x600091B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000913")]
	public Dictionary<T, List<K>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000914")]
	public void Add(T t, K k)
	{
	}

	[Token(Token = "0x6000915")]
	public KeyValuePair<T, List<K>> First()
	{
		return default(KeyValuePair<T, List<K>>);
	}

	[Token(Token = "0x6000917")]
	private List<K> FetchList()
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000919")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x600091A")]
	public K[] GetAll(T t)
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	public K GetOne(T t)
	{
		return (K)null;
	}

	[Token(Token = "0x600091D")]
	public bool Contains(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x600091E")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x600091F")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000920")]
	public UnOrderMultiMap()
	{
	}
}
[Token(Token = "0x20001C2")]
public static class UtilityTool
{
	[Token(Token = "0x20001C3")]
	public class AgentClass<T1, T2>
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T1, T2> stateList;

		[Token(Token = "0x6000965")]
		public void Register(T1 type, T2 st)
		{
		}

		[Token(Token = "0x6000966")]
		public void UnRegister(T1 type)
		{
		}

		[Token(Token = "0x6000967")]
		public bool IsHasState(T1 nextType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		public T2 GetStateValue(T1 type)
		{
			return (T2)null;
		}

		[Token(Token = "0x6000969")]
		public AgentClass()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C4")]
	public class SerializationList<T>
	{
		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> target;

		[Token(Token = "0x600096A")]
		public List<T> ToList()
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		public SerializationList(List<T> target)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C5")]
	public class SerializationDictionary<TKey, TValue> : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> keys;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TValue> values;

		[NonSerialized]
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> target;

		[Token(Token = "0x600096C")]
		public Dictionary<TKey, TValue> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600096E")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600096F")]
		public SerializationDictionary()
		{
		}
	}

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, Dictionary<Type, Component>> CacheComponentDic;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, Dictionary<Type, Component>> CacheComponentInChildrenDic;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, Dictionary<Type, Component>> CacheComponentInParentDic;

	[Token(Token = "0x4000A42")]
	private const float ByteToM = 1E-06f;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool IsUnityPause;

	[Token(Token = "0x17000145")]
	public static bool isApplicationPlaying
	{
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2373F80", Offset = "0x2373F80", VA = "0x2373F80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x2372A2C", Offset = "0x2372A2C", VA = "0x2372A2C")]
	public static bool IsBit(int state, int flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x2372A38", Offset = "0x2372A38", VA = "0x2372A38")]
	public static void SetBit(ref int state, int flag, bool value)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x2372A54", Offset = "0x2372A54", VA = "0x2372A54")]
	public static bool IsByteBit(byte state, int flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x2372A64", Offset = "0x2372A64", VA = "0x2372A64")]
	public static void SetByteBit(ref byte state, int flag, bool value)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x2372A80", Offset = "0x2372A80", VA = "0x2372A80")]
	public static XMLNode SelectSingleNode(XMLNode xn, string url)
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x2372B48", Offset = "0x2372B48", VA = "0x2372B48")]
	public static XMLNodeList SelectArrayNode(XMLNode xn, string url)
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x2372C10", Offset = "0x2372C10", VA = "0x2372C10")]
	public static string Attribute(XMLNode node, string name)
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x2372C84", Offset = "0x2372C84", VA = "0x2372C84")]
	public static bool HasAttribute(XMLNode node, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x2372D0C", Offset = "0x2372D0C", VA = "0x2372D0C")]
	public static int GetIntAttribute(XMLNode node, string name, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x2372E18", Offset = "0x2372E18", VA = "0x2372E18")]
	public static float GetFloatAttribute(XMLNode node, string name, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x2372F2C", Offset = "0x2372F2C", VA = "0x2372F2C")]
	public static string GetStringAttribute(XMLNode node, string name, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x2372FC8", Offset = "0x2372FC8", VA = "0x2372FC8")]
	public static Vector3 GetVector3Attribute(XMLNode node, string name, [Optional] Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x2373160", Offset = "0x2373160", VA = "0x2373160")]
	public static string ToString(byte[] array)
	{
		return null;
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x23731E8", Offset = "0x23731E8", VA = "0x23731E8")]
	public static bool XML_WriteV3(XmlElement iXmlData, Vector3 iValue, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x2373374", Offset = "0x2373374", VA = "0x2373374")]
	public static int parseObjInt(object obj, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x237341C", Offset = "0x237341C", VA = "0x237341C")]
	public static byte parseByte(string text, byte defaultValue = 0)
	{
		return default(byte);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x2372DE0", Offset = "0x2372DE0", VA = "0x2372DE0")]
	public static int parseInt(string text, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x2372EF4", Offset = "0x2372EF4", VA = "0x2372EF4")]
	public static float parseFloat(string text, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x2373454", Offset = "0x2373454", VA = "0x2373454")]
	public static long parseLong(string text, long defaultValue = 0L)
	{
		return default(long);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x237348C", Offset = "0x237348C", VA = "0x237348C")]
	public static bool parseBool(string text, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x2373520", Offset = "0x2373520", VA = "0x2373520")]
	public static int ParticleSystemLength(GameObject transform)
	{
		return default(int);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x23736F4", Offset = "0x23736F4", VA = "0x23736F4")]
	public static Transform FindChild(Transform trans, string goName)
	{
		return null;
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x2373854", Offset = "0x2373854", VA = "0x2373854")]
	public static void PollingChild(Transform trans, Action<Transform> action, int deep = 5)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x2373958", Offset = "0x2373958", VA = "0x2373958")]
	public static void PollingChild(Transform trans, Action<Transform> action)
	{
	}

	[Token(Token = "0x6000939")]
	public static T FindWithTag<T>(string szTagNmae) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x2373A8C", Offset = "0x2373A8C", VA = "0x2373A8C")]
	public static void PollingChildWithDeep(Transform trans, Action<Transform> action, int deep = 5)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x2373B7C", Offset = "0x2373B7C", VA = "0x2373B7C")]
	public static Transform GetTransform(Transform iRoot, string iPath)
	{
		return null;
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x2373C8C", Offset = "0x2373C8C", VA = "0x2373C8C")]
	public static Transform GetTransformByName(Transform check, string name)
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x2373D5C", Offset = "0x2373D5C", VA = "0x2373D5C")]
	public static void GetTransformByWithTag(Transform target, string tagName, ref Transform obj)
	{
	}

	[Token(Token = "0x600093E")]
	public static T AddComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600093F")]
	public static T AddComponent<T>(Transform iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000940")]
	public static T GetComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	public static T GetComponent<T>(Transform iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000942")]
	public static T GetChildComponent<T>(GameObject iObject, string szFindName) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000943")]
	public static T GetComponentInChildren<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	public static T GetCacheComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	public static T AddCacheComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	public static T GetCacheComponentInChildren<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	public static T GetCacheComponentInParent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x2373F88", Offset = "0x2373F88", VA = "0x2373F88")]
	public static List<string> Net_GetIPv4()
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x237409C", Offset = "0x237409C", VA = "0x237409C")]
	public static bool isNullText(string text)
	{
		return default(bool);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x236DB58", Offset = "0x236DB58", VA = "0x236DB58")]
	public static bool SetIdentityPosition(GameObject gameObj)
	{
		return default(bool);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x2374120", Offset = "0x2374120", VA = "0x2374120")]
	public static bool SetIdentityPosition(GameObject gameObj, Transform parent)
	{
		return default(bool);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x2374284", Offset = "0x2374284", VA = "0x2374284")]
	public static Offset<Flat_Vector3> ConvertVector3ToFlat(FlatBufferBuilder builder, Vector3 value)
	{
		return default(Offset<Flat_Vector3>);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x2374364", Offset = "0x2374364", VA = "0x2374364")]
	public static Offset<Flat_Vector3> ConvertVector3ToFlat(FlatBufferBuilder builder, Flat_Vector3 value)
	{
		return default(Offset<Flat_Vector3>);
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x23744A4", Offset = "0x23744A4", VA = "0x23744A4")]
	public static Offset<Flat_Vector2> ConvertVector2ToFlat(FlatBufferBuilder builder, Vector2 value)
	{
		return default(Offset<Flat_Vector2>);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x2374584", Offset = "0x2374584", VA = "0x2374584")]
	public static Offset<Flat_Vector2> ConvertVector2ToFlat(FlatBufferBuilder builder, Flat_Vector2 value)
	{
		return default(Offset<Flat_Vector2>);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x23746AC", Offset = "0x23746AC", VA = "0x23746AC")]
	public static Offset<Flat_Quaternion> ConvertQuaternionToFlat(FlatBufferBuilder builder, Quaternion value)
	{
		return default(Offset<Flat_Quaternion>);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x237478C", Offset = "0x237478C", VA = "0x237478C")]
	public static Offset<Flat_Quaternion> ConvertQuaternionToFlat(FlatBufferBuilder builder, Flat_Quaternion value)
	{
		return default(Offset<Flat_Quaternion>);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x23748EC", Offset = "0x23748EC", VA = "0x23748EC")]
	public static Vector3 ConvertFlatToVector3(Flat_Vector3 value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x2374A1C", Offset = "0x2374A1C", VA = "0x2374A1C")]
	public static Vector2 ConvertFlatToVector2(Flat_Vector2 value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x2374B30", Offset = "0x2374B30", VA = "0x2374B30")]
	public static Quaternion ConvertFlatToQuaternion(Flat_Quaternion value)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x2374C84", Offset = "0x2374C84", VA = "0x2374C84")]
	public static void FreeMemory()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x2375224", Offset = "0x2375224", VA = "0x2375224")]
	public static void BeginSample(string _name)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x2375228", Offset = "0x2375228", VA = "0x2375228")]
	public static void EndSample()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x237522C", Offset = "0x237522C", VA = "0x237522C")]
	public static void SetTitleText(string titleName)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x2375230", Offset = "0x2375230", VA = "0x2375230")]
	public static void ClearRegistryConfig()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x2371DB8", Offset = "0x2371DB8", VA = "0x2371DB8")]
	public static void UnityPause()
	{
	}

	[Token(Token = "0x600095C")]
	public static void ReadConfig<T>(ref T t, string fileName, bool isShowTip = true, bool deleteFile = false)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x2375234", Offset = "0x2375234", VA = "0x2375234")]
	public static void AlterData(string content, string path)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x23753AC", Offset = "0x23753AC", VA = "0x23753AC")]
	public static bool CheckNaNOrInfinity(Vector3 vector3)
	{
		return default(bool);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x2375440", Offset = "0x2375440", VA = "0x2375440")]
	public static bool CheckNaNOrInfinity(Quaternion quaternion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x23754F8", Offset = "0x23754F8", VA = "0x23754F8")]
	public static void FixAudioLeak(WwiseDefine wwiseDefine, float autoDestory = 20f)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x23755F8", Offset = "0x23755F8", VA = "0x23755F8")]
	public static Quaternion GetLookAtRot(Transform originalObj, Transform targetObj)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x2375664", Offset = "0x2375664", VA = "0x2375664")]
	public static bool GetLIVStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x237566C", Offset = "0x237566C", VA = "0x237566C")]
	public static (Vector3, Quaternion) RotateAround(Vector3 center, Vector3 axis, float angle, Vector3 curPos, Quaternion curRot)
	{
		return default((Vector3, Quaternion));
	}
}
[Token(Token = "0x20001C6")]
public class VideoPlayerController : MonoBehaviour
{
	[Token(Token = "0x20001C7")]
	private enum VideoType
	{
		[Token(Token = "0x4000A60")]
		type_goodLogo,
		[Token(Token = "0x4000A61")]
		type_otherLogo,
		[Token(Token = "0x4000A62")]
		type_video,
		[Token(Token = "0x4000A63")]
		type_End
	}

	[Serializable]
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54590", Offset = "0xE54590")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<VideoPlayer> <>9__46_0;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<VideoPlayer> <>9__46_1;

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x2064F98", Offset = "0x2064F98", VA = "0x2064F98")]
		public <>c()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x2064FA0", Offset = "0x2064FA0", VA = "0x2064FA0")]
		internal void <.ctor>b__46_0(VideoPlayer <p0>)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x2064FA4", Offset = "0x2064FA4", VA = "0x2064FA4")]
		internal void <.ctor>b__46_1(VideoPlayer <p0>)
		{
		}
	}

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 InitPos;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoPlayer player_3d;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VideoPlayer player_2d;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform point_a;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform point_b;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float displayDis;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] playList;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material videoSkybox;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool IsVideoLogo;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LogoUI LogoUIPC;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LogoUI LogoUIVR;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, VideoPlayer> playersDict;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VideoType curVideoType;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public bool IsPlayVideo;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<VideoPlayer> OnStart;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action<VideoPlayer> OnEnd;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool Is2D;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool isA;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool fogState;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material skybox;

	[Token(Token = "0x17000146")]
	[HideInInspector]
	public bool IsExistLogo
	{
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x2974600", Offset = "0x2974600", VA = "0x2974600")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x2974680", Offset = "0x2974680", VA = "0x2974680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x29746F8", Offset = "0x29746F8", VA = "0x29746F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x29746FC", Offset = "0x29746FC", VA = "0x29746FC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x2974814", Offset = "0x2974814", VA = "0x2974814")]
	private void VideoPlayer_started(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x2974878", Offset = "0x2974878", VA = "0x2974878")]
	private void VideoPlayer_loopPointReached(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x29748DC", Offset = "0x29748DC", VA = "0x29748DC")]
	private void EndOneClip(VideoPlayer player)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x2974DE0", Offset = "0x2974DE0", VA = "0x2974DE0")]
	private Transform GetPlayPoint()
	{
		return null;
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x29749E8", Offset = "0x29749E8", VA = "0x29749E8")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x2974FD0", Offset = "0x2974FD0", VA = "0x2974FD0")]
	private void InitLogoVideo(e_type_language language)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x2975358", Offset = "0x2975358", VA = "0x2975358")]
	private void InitVideoLang(e_type_language language)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x2975B20", Offset = "0x2975B20", VA = "0x2975B20")]
	public void InitVideo(bool is2d = false)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x2975CC8", Offset = "0x2975CC8", VA = "0x2975CC8")]
	public void ReadyPlay()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x2975CCC", Offset = "0x2975CCC", VA = "0x2975CCC")]
	private void BeginPlay()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x2974C0C", Offset = "0x2974C0C", VA = "0x2974C0C")]
	private void _Stop()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x2975F34", Offset = "0x2975F34", VA = "0x2975F34")]
	public bool CanPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x2975F94", Offset = "0x2975F94", VA = "0x2975F94")]
	public void TriggerEnd()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x2975FEC", Offset = "0x2975FEC", VA = "0x2975FEC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6C3CC", Offset = "0xE6C3CC")]
	private void Play1()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x2976404", Offset = "0x2976404", VA = "0x2976404")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6C404", Offset = "0xE6C404")]
	private void Play2()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x2975FF8", Offset = "0x2975FF8", VA = "0x2975FF8")]
	public void Play(bool isPlayVideo, bool isA)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x2976410", Offset = "0x2976410", VA = "0x2976410")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6C43C", Offset = "0xE6C43C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x2976600", Offset = "0x2976600", VA = "0x2976600")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x297660C", Offset = "0x297660C", VA = "0x297660C")]
	public VideoPlayerController()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x29767E8", Offset = "0x29767E8", VA = "0x29767E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C474", Offset = "0xE6C474")]
	private void <Play>b__43_0()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x29767EC", Offset = "0x29767EC", VA = "0x29767EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C484", Offset = "0xE6C484")]
	private void <Play>b__43_1()
	{
	}
}
[Token(Token = "0x20001C9")]
public static class WTime
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly DateTime time197011;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float curDeltaTime;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int curMillisDeltaTime;

	[Token(Token = "0x17000147")]
	public static long SystemTimeTicks
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x2977168", Offset = "0x2977168", VA = "0x2977168")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000148")]
	public static float realtimeSinceStartup
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x29771DC", Offset = "0x29771DC", VA = "0x29771DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000149")]
	public static float unscaledTime
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x29771E4", Offset = "0x29771E4", VA = "0x29771E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014A")]
	public static float deltaTime
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x29771EC", Offset = "0x29771EC", VA = "0x29771EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014B")]
	public static int millisDeltaTime
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x2977250", Offset = "0x2977250", VA = "0x2977250")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700014C")]
	public static float unscaledDeltaTime
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0x2977358", Offset = "0x2977358", VA = "0x2977358")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014D")]
	public static float TimeScale
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x2977360", Offset = "0x2977360", VA = "0x2977360")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x2977368", Offset = "0x2977368", VA = "0x2977368")]
		set
		{
		}
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x2976F20", Offset = "0x2976F20", VA = "0x2976F20")]
	public static DateTime GetCovertServerDataTime(long serverTimeMillis, bool isClientTimeZone = false)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x29772B4", Offset = "0x29772B4", VA = "0x29772B4")]
	public static void SetDeltaTime(float deltaTime)
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE545A0", Offset = "0xE545A0")]
public class ComponentCacheAttribute : Attribute
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5F74C", Offset = "0xE5F74C")]
	private readonly Type <ComponentCacheType>k__BackingField;

	[Token(Token = "0x1700014E")]
	public Type ComponentCacheType
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x21BDC3C", Offset = "0x21BDC3C", VA = "0x21BDC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C494", Offset = "0xE6C494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x21BDC44", Offset = "0x21BDC44", VA = "0x21BDC44")]
	public ComponentCacheAttribute(Type type)
	{
	}
}
[Token(Token = "0x20001CB")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE545D8", Offset = "0xE545D8")]
public class SingletonComponentCacheAttribute : Attribute
{
	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5F75C", Offset = "0xE5F75C")]
	private readonly Type <ComponentCacheType>k__BackingField;

	[Token(Token = "0x1700014F")]
	public Type ComponentCacheType
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x216028C", Offset = "0x216028C", VA = "0x216028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C4A4", Offset = "0xE6C4A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x2160294", Offset = "0x2160294", VA = "0x2160294")]
	public SingletonComponentCacheAttribute(Type type)
	{
	}
}
[Token(Token = "0x20001CC")]
public class ComponentCacheTools : MonoBehaviour
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Type, List<Component>> ComponentsDic;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Type, Component> SingletonComponentDic;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, object[]> TypeToCustomAttributesDic;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x21BDC78", Offset = "0x21BDC78", VA = "0x21BDC78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x21BE070", Offset = "0x21BE070", VA = "0x21BE070")]
	private void AddToDic(Type type, Component component)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x21BE184", Offset = "0x21BE184", VA = "0x21BE184")]
	private void AddToSingletonDic(Type type, Component component)
	{
	}

	[Token(Token = "0x600099F")]
	public List<Component> GetCacheComponents<T>()
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x21BE2D8", Offset = "0x21BE2D8", VA = "0x21BE2D8")]
	public List<Component> GetCacheComponents(Type type)
	{
		return null;
	}

	[Token(Token = "0x60009A1")]
	public T GetCacheSingletonComponent<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x21BE354", Offset = "0x21BE354", VA = "0x21BE354")]
	public Component GetCacheSingletonComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	public bool PollingCacheComponent<T>(Action<T> returnCB, bool isReturnNull = true) where T : Component
	{
		return default(bool);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x21BE3D0", Offset = "0x21BE3D0", VA = "0x21BE3D0")]
	public ComponentCacheTools()
	{
	}
}
[Token(Token = "0x20001CD")]
public class DamageReactTools : Singleton<DamageReactTools>
{
	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x21C6140", Offset = "0x21C6140", VA = "0x21C6140")]
	public void AttackHead()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x21C619C", Offset = "0x21C619C", VA = "0x21C619C")]
	public void RollingStones()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x21C61F8", Offset = "0x21C61F8", VA = "0x21C61F8")]
	public void EncounterAttack(Vector3 _hitDir, Transform _transform)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x21C6328", Offset = "0x21C6328", VA = "0x21C6328")]
	public void PlayerWaring(Vector3 Point, Transform PlayerTrans)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x21C6474", Offset = "0x21C6474", VA = "0x21C6474")]
	public void EncounterAttack(EAttackDir eAttackDir)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x21C6478", Offset = "0x21C6478", VA = "0x21C6478")]
	public void Burn()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x21C647C", Offset = "0x21C647C", VA = "0x21C647C")]
	public void Poisoning()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x21C6480", Offset = "0x21C6480", VA = "0x21C6480")]
	public void SprayBlood()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x21C6484", Offset = "0x21C6484", VA = "0x21C6484")]
	public void ToDie()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x21C6488", Offset = "0x21C6488", VA = "0x21C6488")]
	public void BornToDie()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x21C648C", Offset = "0x21C648C", VA = "0x21C648C")]
	public void ScreenFadeOutIn(bool bOut, float duration, Action onFadeComplete)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x21C6490", Offset = "0x21C6490", VA = "0x21C6490")]
	public void ScreenFadeStop()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x21C6494", Offset = "0x21C6494", VA = "0x21C6494")]
	public void ShakeCamera(float strength, float shakeDuration)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x21C6498", Offset = "0x21C6498", VA = "0x21C6498")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x21C649C", Offset = "0x21C649C", VA = "0x21C649C")]
	public void Init()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x21C64A0", Offset = "0x21C64A0", VA = "0x21C64A0")]
	public DamageReactTools()
	{
	}
}
[Token(Token = "0x20001CE")]
public class EncounterAttackEffects : MonoBehaviour
{
	[Token(Token = "0x20001CF")]
	public enum EncounterAttackDir
	{
		[Token(Token = "0x4000A80")]
		none = 0,
		[Token(Token = "0x4000A81")]
		left = 1,
		[Token(Token = "0x4000A82")]
		right = 2,
		[Token(Token = "0x4000A83")]
		up = 3,
		[Token(Token = "0x4000A84")]
		down = 4,
		[Token(Token = "0x4000A85")]
		positiveLeft = 10,
		[Token(Token = "0x4000A86")]
		positiveRight = 11,
		[Token(Token = "0x4000A87")]
		Leftdown = 12,
		[Token(Token = "0x4000A88")]
		Rightdown = 13,
		[Token(Token = "0x4000A89")]
		RollingStones = 14,
		[Token(Token = "0x4000A8A")]
		head = 100
	}

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject up;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject down;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject left;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject right;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject head;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject positiveLeft;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject positiveRight;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Leftdown;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Rightdown;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject RollingStones;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject HitEffect;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool isHitTimeControl;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine coroutine;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EncounterAttackEffects Instance;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<GameObject> effects;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x24F1A30", Offset = "0x24F1A30", VA = "0x24F1A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x24F1A84", Offset = "0x24F1A84", VA = "0x24F1A84")]
	public void Play(EncounterAttackDir dir)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x24F228C", Offset = "0x24F228C", VA = "0x24F228C")]
	public void StopTimeControl()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x24F23D8", Offset = "0x24F23D8", VA = "0x24F23D8")]
	public EncounterAttackEffects()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x24F245C", Offset = "0x24F245C", VA = "0x24F245C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C4B4", Offset = "0xE6C4B4")]
	private void <Play>b__18_0()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x24F2564", Offset = "0x24F2564", VA = "0x24F2564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C4C4", Offset = "0xE6C4C4")]
	private void <Play>b__18_1()
	{
	}
}
[Token(Token = "0x20001D0")]
public class CSVHelper
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5F77C", Offset = "0xE5F77C")]
	private static readonly NumberFormatInfo <NumberFormatInfo>k__BackingField;

	[Token(Token = "0x4000A8C")]
	public const string PATH_NAME = "Table";

	[Token(Token = "0x17000150")]
	public static NumberFormatInfo NumberFormatInfo
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x27DFE24", Offset = "0x27DFE24", VA = "0x27DFE24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C4D4", Offset = "0xE6C4D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x27DD870", Offset = "0x27DD870", VA = "0x27DD870")]
	public static string Combine(string csv_name)
	{
		return null;
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x27DDC4C", Offset = "0x27DDC4C", VA = "0x27DDC4C")]
	public static byte[] GetBytes(string table_path)
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x27DDBE8", Offset = "0x27DDBE8", VA = "0x27DDBE8")]
	public static ulong GetKey(object key1)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x27DFE88", Offset = "0x27DFE88", VA = "0x27DFE88")]
	public static ulong GetKey(object key1, object key2)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x27DFFB8", Offset = "0x27DFFB8", VA = "0x27DFFB8")]
	public static ulong GetKey(object key1, object key2, object key3)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x27E0124", Offset = "0x27E0124", VA = "0x27E0124")]
	public static ulong GetKey(object key1, object key2, object key3, object key4)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x27E02CC", Offset = "0x27E02CC", VA = "0x27E02CC")]
	public static ulong GetKey(object key1, object key2, object key3, object key4, object key5)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x27E04B0", Offset = "0x27E04B0", VA = "0x27E04B0")]
	public CSVHelper()
	{
	}
}
[Token(Token = "0x20001D1")]
public class StoreItemData
{
	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int UnlockGold;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int BuyGold;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x225A2B4", Offset = "0x225A2B4", VA = "0x225A2B4")]
	public StoreItemData()
	{
	}
}
[Token(Token = "0x20001D2")]
public class BulletData
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_bullet_type bullet_Type;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BoxBullets;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int HeapBullets;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int BagBullets;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int BuyBullets;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int BuyGold;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int InitBullets;

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x27D1AEC", Offset = "0x27D1AEC", VA = "0x27D1AEC")]
	public BulletData()
	{
	}
}
[Token(Token = "0x20001D3")]
public class DataManager : Singleton<DataManager>
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, UnitAttribute> playerDataHash;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, List<int>> playerIntensityDataHash;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, UnitAttribute> monsterDataHash;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, UnitAttribute> npcDataHash;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, WeaponAttribute> weaponDataHash;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<int>> Attribute_levelnDataHash;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, List<InfoWeight>> RandomInfoWeightHash;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, List<LiveCameraConfigData>> LiveCameraStepConfigDataHash;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, LiveCameraConfigData> LiveCameraCommonConfigDataHash;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, SwitchData> SwichHash;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, StoreItemData> ItemBuyDataHash;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<int> InitUnlockItemHash;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<e_bullet_type, BulletData> BulletDataHash;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, string> SettingHash;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x21C835C", Offset = "0x21C835C", VA = "0x21C835C")]
	public void Init()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x21C9C68", Offset = "0x21C9C68", VA = "0x21C9C68")]
	public void InitPlayerAttribute()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x21CAFF4", Offset = "0x21CAFF4", VA = "0x21CAFF4")]
	public UnitAttribute GetPlayerAttribute(int playerTableId)
	{
		return null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x21CB090", Offset = "0x21CB090", VA = "0x21CB090")]
	public int GetPlayerIntensityHP(int playerTableId, e_GameDiffculty gameIntensity)
	{
		return default(int);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x21CB15C", Offset = "0x21CB15C", VA = "0x21CB15C")]
	public int GetInterruptdataHp(int TableId)
	{
		return default(int);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x21CA844", Offset = "0x21CA844", VA = "0x21CA844")]
	public void InitMonsterAttribute()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x21CB550", Offset = "0x21CB550", VA = "0x21CB550")]
	public UnitAttribute GetMonsterAttribute(int monsterTableId)
	{
		return null;
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x21CAB68", Offset = "0x21CAB68", VA = "0x21CAB68")]
	public void InitWeaponStoreData()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x21CB5EC", Offset = "0x21CB5EC", VA = "0x21CB5EC")]
	public StoreItemData GetStoreItemData(int id)
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x21CB688", Offset = "0x21CB688", VA = "0x21CB688")]
	public bool CheckItemIsUnlock(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x21CB6EC", Offset = "0x21CB6EC", VA = "0x21CB6EC")]
	public void SetItemUnlockStatu(int id)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x21CADB0", Offset = "0x21CADB0", VA = "0x21CADB0")]
	public void InitBulletStoreData()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x21CB78C", Offset = "0x21CB78C", VA = "0x21CB78C")]
	public BulletData GetBulletData(e_bullet_type bullet_Type)
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x21CA5B4", Offset = "0x21CA5B4", VA = "0x21CA5B4")]
	public void InitNpcAttribute()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x21CB828", Offset = "0x21CB828", VA = "0x21CB828")]
	public UnitAttribute GetNpcAttribute(int npcTableId)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x21CB8A4", Offset = "0x21CB8A4", VA = "0x21CB8A4")]
	public bool IsNPC(int TableId)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x21C9584", Offset = "0x21C9584", VA = "0x21C9584")]
	public void InitAttribute_level()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x21CB908", Offset = "0x21CB908", VA = "0x21CB908")]
	public List<int> GetAttribute_level(e_attributes_type attributes_type)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x21C92C8", Offset = "0x21C92C8", VA = "0x21C92C8")]
	public void InitWeaponAttribute()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x21CB9A4", Offset = "0x21CB9A4", VA = "0x21CB9A4")]
	public WeaponAttribute GetWeaponAttribute(e_weapon_type weaponType)
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x21C985C", Offset = "0x21C985C", VA = "0x21C985C")]
	public void InitRandomSwitchInfoAttribute()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x21CBA40", Offset = "0x21CBA40", VA = "0x21CBA40")]
	public List<InfoWeight> GetRandomSwitchAttribute(int ID)
	{
		return null;
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x21CBABC", Offset = "0x21CBABC", VA = "0x21CBABC")]
	public SwitchData GetSwitchData(int ID)
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x21C8D4C", Offset = "0x21C8D4C", VA = "0x21C8D4C")]
	private void InitTableSetting()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x21C8FE8", Offset = "0x21C8FE8", VA = "0x21C8FE8")]
	private void InitTableIntegral()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x21CBB38", Offset = "0x21CBB38", VA = "0x21CBB38")]
	public string GetSettingValue(e_setting_type key)
	{
		return null;
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x21CBB3C", Offset = "0x21CBB3C", VA = "0x21CBB3C")]
	public string GetSettingValue(int key)
	{
		return null;
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x21C1230", Offset = "0x21C1230", VA = "0x21C1230")]
	public int GetSettingValueInt(e_setting_type key)
	{
		return default(int);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x21CBC30", Offset = "0x21CBC30", VA = "0x21CBC30")]
	public int GetSettingValueInt(int key)
	{
		return default(int);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x21CBD30", Offset = "0x21CBD30", VA = "0x21CBD30")]
	public float GetSettingValueFloat(e_setting_type key)
	{
		return default(float);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x21CBD34", Offset = "0x21CBD34", VA = "0x21CBD34")]
	public float GetSettingValueFloat(int key)
	{
		return default(float);
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x21CBE34", Offset = "0x21CBE34", VA = "0x21CBE34")]
	public bool GetSettingValueBool(e_setting_type key)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x21CBE38", Offset = "0x21CBE38", VA = "0x21CBE38")]
	public bool GetSettingValueBool(int key)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x21CBF18", Offset = "0x21CBF18", VA = "0x21CBF18")]
	public bool GetSettingValueSplitInt(e_setting_type key, Action<int, int> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x21CBF1C", Offset = "0x21CBF1C", VA = "0x21CBF1C")]
	public bool GetSettingValueSplitInt(int key, Action<int, int> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x21CC1B8", Offset = "0x21CC1B8", VA = "0x21CC1B8")]
	public bool GetSettingValueSplitFloat(e_setting_type key, Action<int, float> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x21CC1BC", Offset = "0x21CC1BC", VA = "0x21CC1BC")]
	public bool GetSettingValueSplitFloat(int key, Action<int, float> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x21CA178", Offset = "0x21CA178", VA = "0x21CA178")]
	public void InitLiveCameraConfigData()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x21CC454", Offset = "0x21CC454", VA = "0x21CC454")]
	public List<LiveCameraConfigData> GetLiveCameraAttributeList(int step)
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x21CC548", Offset = "0x21CC548", VA = "0x21CC548")]
	public Dictionary<int, LiveCameraConfigData> GetCommonLiveCameraAttributeList()
	{
		return null;
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x21C9ED4", Offset = "0x21C9ED4", VA = "0x21C9ED4")]
	private void InitLanguage()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x21CB3C4", Offset = "0x21CB3C4", VA = "0x21CB3C4")]
	public List<int> StrChangeintList(string str)
	{
		return null;
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x21CC550", Offset = "0x21CC550", VA = "0x21CC550")]
	public DataManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D4")]
public class UnitAttribute
{
	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxHP;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int HpLimit;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> DiffcultyHPList;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public e_type_monster monsterType;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public e_type_npc npcType;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int modelId;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int Atk;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public e_weapon_type weaponType;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public e_weapon_group weaponGroup;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int hpRecoverInterval;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int hpRecoverValue;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> InterruptHPList;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int IntegralRatio;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<int> dropCountList;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<int> dropWeightList;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int LanguageID;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x2369C14", Offset = "0x2369C14", VA = "0x2369C14")]
	public UnitAttribute()
	{
	}
}
[Token(Token = "0x20001D5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE54610", Offset = "0xE54610")]
public class UnitAttributeSet : ScriptableObject
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnitAttribute[] PlayerAttributeList;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitAttribute[] MonsterAttributeList;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x2369C78", Offset = "0x2369C78", VA = "0x2369C78")]
	public UnitAttributeSet()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D6")]
public class WeaponAttribute
{
	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_weapon_type weaponType;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int modelId;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Atk;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int headPer;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int CriticalHitRate;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int bulletCount;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MagazineCount;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int Reload;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int fireInterval;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int scatterRadius;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int recoil;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int HitForce;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int HeadHitForce;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int KillForce;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int HeadShotForce;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x29867B4", Offset = "0x29867B4", VA = "0x29867B4")]
	public WeaponAttribute()
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE5467C", Offset = "0xE5467C")]
public class DecalOnSkinnedMesh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D8")]
	public class DecalMaskRenderTextureSettings
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphicsFormat textureFormat;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int size;

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x20F5604", Offset = "0x20F5604", VA = "0x20F5604")]
		public DecalMaskRenderTextureSettings()
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE546DC", Offset = "0xE546DC")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Decal> Decals;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Decal decal;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecalOnSkinnedMesh <>4__this;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x20F5510", Offset = "0x20F5510", VA = "0x20F5510")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x20F5518", Offset = "0x20F5518", VA = "0x20F5518")]
		internal void <SetDecal>b__0()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x20F55AC", Offset = "0x20F55AC", VA = "0x20F55AC")]
		internal bool <SetDecal>b__1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DecalPrefab;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MonsterDecalDataScale;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TerrainDecalDataScale;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material MonsterDecalMaterial;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_Material;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SkinnedMeshRenderer> Renderers;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DecalMaskRenderTextureSettings settings;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture decalMaskTexture;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string s_DecalMaskTextureName;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string s_DecalMaskShaderName;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int MaxDecals;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float DecalDesTime;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine coroutine;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x21CCD64", Offset = "0x21CCD64", VA = "0x21CCD64")]
	public void Init()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x21CD0B4", Offset = "0x21CD0B4", VA = "0x21CD0B4")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x21CCF8C", Offset = "0x21CCF8C", VA = "0x21CCF8C")]
	private void ClearMaskTexture(RenderTexture texture)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x21CD114", Offset = "0x21CD114", VA = "0x21CD114")]
	public void RenderDecalToMaskTexture(Decal decal)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x21CD52C", Offset = "0x21CD52C", VA = "0x21CD52C")]
	public void SetDecal(HitResultData hitData)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x21CDA84", Offset = "0x21CDA84", VA = "0x21CDA84")]
	public DecalOnSkinnedMesh()
	{
	}
}
[Token(Token = "0x20001DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE546EC", Offset = "0xE546EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE546EC", Offset = "0xE546EC")]
public class MossOnMesh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class MossMaskRenderTextureSettings
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphicsFormat textureFormat;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int size;

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x205CC18", Offset = "0x205CC18", VA = "0x205CC18")]
		public MossMaskRenderTextureSettings()
		{
		}
	}

	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54780", Offset = "0xE54780")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MossOnMesh <>4__this;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Decal decal;

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x205CBE0", Offset = "0x205CBE0", VA = "0x205CBE0")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x205CBE8", Offset = "0x205CBE8", VA = "0x205CBE8")]
		internal bool <SetDecal>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DecalData decalData;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TerrainDecalDataScale;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MossMaskRenderTextureSettings settings;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_NoiseMaterial;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture mossMaskTexture;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_Material;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer m_Renderer;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_SubMeshCount;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string s_MossMaskTextureName;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string s_MossNoiseShaderName;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string s_DecalMaskShaderName;

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x2657100", Offset = "0x2657100", VA = "0x2657100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x2657590", Offset = "0x2657590", VA = "0x2657590")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x265761C", Offset = "0x265761C", VA = "0x265761C")]
	public void SetDecal(Vector3 hitPos, Vector3 hitDir)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x265738C", Offset = "0x265738C", VA = "0x265738C")]
	public void RenderNoiseToMaskTexture()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x26577B8", Offset = "0x26577B8", VA = "0x26577B8")]
	public void RenderDecalToMaskTexture(Decal decal)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x2657AC0", Offset = "0x2657AC0", VA = "0x2657AC0")]
	public MossOnMesh()
	{
	}
}
[Token(Token = "0x20001DD")]
public abstract class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Collider[] tempHitCollider;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected WUnit attacker;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5F78C", Offset = "0xE5F78C")]
	private e_weapon_type <WeaponType>k__BackingField;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTransformCache;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mGameObjectCache;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_Attack_type type;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hitEffect;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dieEffect;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isBreakType;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool isTriggerHoleEffect;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool isTriggerMaterialEffect;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool isAOE;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float AOERadius;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int HitForce;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int HeadHitForce;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int KillForce;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int HeadShotForce;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int CriticalHitRate;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int headPer;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5F79C", Offset = "0xE5F79C")]
	private int <weaponId>k__BackingField;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private int bulletAttack;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GlobalClock clock;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LineRenderer lineRender;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<int> AOEHurtPlayIDList;

	[Token(Token = "0x17000151")]
	public WUnit Attacker
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x27CEF38", Offset = "0x27CEF38", VA = "0x27CEF38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public e_weapon_type WeaponType
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x27CEF40", Offset = "0x27CEF40", VA = "0x27CEF40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C4E4", Offset = "0xE6C4E4")]
		get
		{
			return default(e_weapon_type);
		}
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x27CEF48", Offset = "0x27CEF48", VA = "0x27CEF48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C4F4", Offset = "0xE6C4F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public Transform TransformCache
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x27CEF50", Offset = "0x27CEF50", VA = "0x27CEF50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000154")]
	public GameObject GameObjectCache
	{
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x27CEF58", Offset = "0x27CEF58", VA = "0x27CEF58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000155")]
	public int weaponId
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x27CEF60", Offset = "0x27CEF60", VA = "0x27CEF60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C504", Offset = "0xE6C504")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x27CEF68", Offset = "0x27CEF68", VA = "0x27CEF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C514", Offset = "0xE6C514")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public int HeadPer
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x27CEF70", Offset = "0x27CEF70", VA = "0x27CEF70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000157")]
	public int BulletAttack
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x27CEF78", Offset = "0x27CEF78", VA = "0x27CEF78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x27C863C", Offset = "0x27C863C", VA = "0x27C863C", Slot = "4")]
	public virtual void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x27CEF80", Offset = "0x27CEF80", VA = "0x27CEF80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x27CEFB0", Offset = "0x27CEFB0", VA = "0x27CEFB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x27CEFE0", Offset = "0x27CEFE0", VA = "0x27CEFE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x27CEFEC", Offset = "0x27CEFEC", VA = "0x27CEFEC", Slot = "5")]
	protected virtual void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x27CEFF0", Offset = "0x27CEFF0", VA = "0x27CEFF0", Slot = "6")]
	protected virtual void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x27CEFF4", Offset = "0x27CEFF4", VA = "0x27CEFF4", Slot = "7")]
	protected virtual void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x27CEFF8", Offset = "0x27CEFF8", VA = "0x27CEFF8", Slot = "8")]
	public virtual void DoDestroy(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x27CF02C", Offset = "0x27CF02C", VA = "0x27CF02C", Slot = "9")]
	public virtual void DoDestroy()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x27CF0B4", Offset = "0x27CF0B4", VA = "0x27CF0B4", Slot = "10")]
	protected virtual void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x27CF180", Offset = "0x27CF180", VA = "0x27CF180", Slot = "11")]
	protected virtual void ApplyDieEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x27CF24C", Offset = "0x27CF24C", VA = "0x27CF24C", Slot = "12")]
	protected virtual bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x27CFBB4", Offset = "0x27CFBB4", VA = "0x27CFBB4", Slot = "13")]
	protected virtual void AOEProcessing(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x27CFDF0", Offset = "0x27CFDF0", VA = "0x27CFDF0", Slot = "14")]
	protected virtual void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x27D0054", Offset = "0x27D0054", VA = "0x27D0054", Slot = "15")]
	protected virtual void AOEHitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x27D0064", Offset = "0x27D0064", VA = "0x27D0064", Slot = "16")]
	protected virtual void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x27D0108", Offset = "0x27D0108", VA = "0x27D0108")]
	protected Bullet()
	{
	}
}
[Token(Token = "0x20001DE")]
public class BulletAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public clipItem[] animators;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x27D07E8", Offset = "0x27D07E8", VA = "0x27D07E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x27D0860", Offset = "0x27D0860", VA = "0x27D0860")]
	public void ResetPlay()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x27D08E0", Offset = "0x27D08E0", VA = "0x27D08E0")]
	public BulletAnimationController()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public class clipItem
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Animator ani;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layer;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float beginTime;

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x20E71FC", Offset = "0x20E71FC", VA = "0x20E71FC")]
	public clipItem()
	{
	}
}
[Token(Token = "0x20001E0")]
public class BossBulletLaser : MonsterBullet
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float MaxDistance;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform Laser;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform LaserHead;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float DamageInterval;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioEvent FinishAudio;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float CheckSize;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private WwiseDefine finishSoundWwise;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float damageRunningTime;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject preHitGameObject;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float laserRunningDistance;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 headPositionOffset;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Coroutine delayAct;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject sourceGo;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject curhitObj;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material sectionMat;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 CurLaserPos;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float LaserTime;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float StartFristLaser;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float time;

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x27C92D4", Offset = "0x27C92D4", VA = "0x27C92D4", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x27C958C", Offset = "0x27C958C", VA = "0x27C958C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x27C95E0", Offset = "0x27C95E0", VA = "0x27C95E0", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x27C9D84", Offset = "0x27C9D84", VA = "0x27C9D84")]
	private void Slice(GameObject Source)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x27C940C", Offset = "0x27C940C", VA = "0x27C940C")]
	private void UpdateLaserPosition()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x27CA024", Offset = "0x27CA024", VA = "0x27CA024", Slot = "25")]
	public override void ManualDoDestroy()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x27CA198", Offset = "0x27CA198", VA = "0x27CA198")]
	private void DelayAniDestroy()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x27CA220", Offset = "0x27CA220", VA = "0x27CA220")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x27CA2D4", Offset = "0x27CA2D4", VA = "0x27CA2D4", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x27CA2DC", Offset = "0x27CA2DC", VA = "0x27CA2DC")]
	public BossBulletLaser()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x27CA350", Offset = "0x27CA350", VA = "0x27CA350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C524", Offset = "0xE6C524")]
	private void <ManualDoDestroy>b__26_0()
	{
	}
}
[Token(Token = "0x20001E1")]
public class FireKeepAttack : MonoBehaviour
{
	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x223E358", Offset = "0x223E358", VA = "0x223E358")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x223E35C", Offset = "0x223E35C", VA = "0x223E35C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x223E360", Offset = "0x223E360", VA = "0x223E360")]
	private void Run()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x223E364", Offset = "0x223E364", VA = "0x223E364")]
	public FireKeepAttack()
	{
	}
}
[Token(Token = "0x20001E2")]
public class KeepAttackBase : MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float interval;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeout;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isFirstHit;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit attacker;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WUnit target;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_Attack_type screenEffectType;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_HitEffect_type hitReactionType;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float curTime;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine cr_interval;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x20B571C", Offset = "0x20B571C", VA = "0x20B571C")]
	public void ResetTime()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x20B5724", Offset = "0x20B5724", VA = "0x20B5724")]
	public void Run()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x20B5978", Offset = "0x20B5978", VA = "0x20B5978")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x20B59F4", Offset = "0x20B59F4", VA = "0x20B59F4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x20B5A4C", Offset = "0x20B5A4C", VA = "0x20B5A4C")]
	public KeepAttackBase()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x20B5A5C", Offset = "0x20B5A5C", VA = "0x20B5A5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C534", Offset = "0xE6C534")]
	private void <Run>b__11_0()
	{
	}
}
[Token(Token = "0x20001E3")]
public class MonsterBullerEmitter1 : MonsterBulletEmitter
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isChild;

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x27A1E2C", Offset = "0x27A1E2C", VA = "0x27A1E2C", Slot = "4")]
	public override void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x27A1F7C", Offset = "0x27A1F7C", VA = "0x27A1F7C")]
	public MonsterBullerEmitter1()
	{
	}
}
[Token(Token = "0x20001E4")]
public class MonsterBullet : Bullet
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float lifeTime;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float bulletRadius;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float speed;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform target;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 targetPos;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float moveStep;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected float curTime;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3 oldPos;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 direction;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool IsHitDestroy;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x27A1F8C", Offset = "0x27A1F8C", VA = "0x27A1F8C", Slot = "17")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x27A1F90", Offset = "0x27A1F90", VA = "0x27A1F90", Slot = "18")]
	public virtual void ResetPosition()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x27A1FD0", Offset = "0x27A1FD0", VA = "0x27A1FD0", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x27A2040", Offset = "0x27A2040", VA = "0x27A2040", Slot = "19")]
	protected virtual void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x27A2044", Offset = "0x27A2044", VA = "0x27A2044", Slot = "20")]
	protected virtual void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x27A206C", Offset = "0x27A206C", VA = "0x27A206C", Slot = "21")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x27A21DC", Offset = "0x27A21DC", VA = "0x27A21DC", Slot = "22")]
	protected virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x27A22E0", Offset = "0x27A22E0", VA = "0x27A22E0", Slot = "23")]
	protected virtual void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x27A23C4", Offset = "0x27A23C4", VA = "0x27A23C4", Slot = "24")]
	protected virtual bool HitProcess(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x27A2BBC", Offset = "0x27A2BBC", VA = "0x27A2BBC", Slot = "25")]
	public virtual void ManualDoDestroy()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x27A2BC4", Offset = "0x27A2BC4", VA = "0x27A2BC4", Slot = "13")]
	protected override void AOEProcessing(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x27A2E00", Offset = "0x27A2E00", VA = "0x27A2E00")]
	public MonsterBullet()
	{
	}
}
[Token(Token = "0x20001E5")]
public class MonsterBulletBodyFire : MonsterBulletStay
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int damage;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x27A2E7C", Offset = "0x27A2E7C", VA = "0x27A2E7C", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x27A2F98", Offset = "0x27A2F98", VA = "0x27A2F98", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x27A2F9C", Offset = "0x27A2F9C", VA = "0x27A2F9C", Slot = "25")]
	public override void ManualDoDestroy()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x27A2FA4", Offset = "0x27A2FA4", VA = "0x27A2FA4")]
	public MonsterBulletBodyFire()
	{
	}
}
[Token(Token = "0x20001E6")]
public class MonsterBulletBoommanExplode : MonsterBulletStay
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool isKeepAttack;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int damage;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float interval;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float timeout;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x27A2FAC", Offset = "0x27A2FAC", VA = "0x27A2FAC", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x27A3058", Offset = "0x27A3058", VA = "0x27A3058", Slot = "15")]
	protected override void AOEHitSingleProcess(Vector3 hitPos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x27A3200", Offset = "0x27A3200", VA = "0x27A3200")]
	public MonsterBulletBoommanExplode()
	{
	}
}
[Token(Token = "0x20001E7")]
public class MonsterBulletEmitter : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firePos;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WUnit owner;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int bulletAssetID;

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x27A3204", Offset = "0x27A3204", VA = "0x27A3204")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x27A320C", Offset = "0x27A320C", VA = "0x27A320C")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x27A3210", Offset = "0x27A3210", VA = "0x27A3210", Slot = "4")]
	public virtual void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x27A1F84", Offset = "0x27A1F84", VA = "0x27A1F84")]
	public MonsterBulletEmitter()
	{
	}
}
[Token(Token = "0x20001E8")]
public class MonsterBulletEmitterN : MonsterBulletEmitter
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int bulletNum;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float posDistance;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float radius;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x27A3284", Offset = "0x27A3284", VA = "0x27A3284", Slot = "4")]
	public override void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x27A34B8", Offset = "0x27A34B8", VA = "0x27A34B8")]
	public MonsterBulletEmitterN()
	{
	}
}
[Token(Token = "0x20001E9")]
public class MonsterBulletFire : MonsterBullet
{
	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x27A34C8", Offset = "0x27A34C8", VA = "0x27A34C8", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x27A34CC", Offset = "0x27A34CC", VA = "0x27A34CC", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x27A34D0", Offset = "0x27A34D0", VA = "0x27A34D0", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x27A3638", Offset = "0x27A3638", VA = "0x27A3638")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x27A3640", Offset = "0x27A3640", VA = "0x27A3640")]
	public MonsterBulletFire()
	{
	}
}
[Token(Token = "0x20001EA")]
public class MonsterBulletGravity : MonsterBullet
{
	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Rigidbody rig;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform directionObject;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float directionCurTime;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float directionTime;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 forceDirection;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x27A3644", Offset = "0x27A3644", VA = "0x27A3644", Slot = "17")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x27A3648", Offset = "0x27A3648", VA = "0x27A3648")]
	private void MakeDirection(float time)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x27A36E4", Offset = "0x27A36E4", VA = "0x27A36E4", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x27A3770", Offset = "0x27A3770", VA = "0x27A3770", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x27A3774", Offset = "0x27A3774", VA = "0x27A3774", Slot = "7")]
	protected override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x27A37E4", Offset = "0x27A37E4", VA = "0x27A37E4", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x27A3820", Offset = "0x27A3820", VA = "0x27A3820", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x27A394C", Offset = "0x27A394C", VA = "0x27A394C")]
	public MonsterBulletGravity()
	{
	}
}
[Token(Token = "0x20001EB")]
public class MonsterBulletGroundPoison : MonsterBulletStay
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool isKeepAttack;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int damage;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float interval;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float timeout;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x27A395C", Offset = "0x27A395C", VA = "0x27A395C", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x27A3960", Offset = "0x27A3960", VA = "0x27A3960")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x27A3A1C", Offset = "0x27A3A1C", VA = "0x27A3A1C", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x27A3A40", Offset = "0x27A3A40", VA = "0x27A3A40", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x27A3CE4", Offset = "0x27A3CE4", VA = "0x27A3CE4")]
	public MonsterBulletGroundPoison()
	{
	}
}
[Token(Token = "0x20001EC")]
public class MonsterBulletHead : MonsterBullet
{
	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float highFactor;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GoSpline path;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float moveTime;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float percent;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x27A3CE8", Offset = "0x27A3CE8", VA = "0x27A3CE8")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x27A3ED8", Offset = "0x27A3ED8", VA = "0x27A3ED8", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x27A406C", Offset = "0x27A406C", VA = "0x27A406C", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x27A40A0", Offset = "0x27A40A0", VA = "0x27A40A0", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x27A4220", Offset = "0x27A4220", VA = "0x27A4220")]
	public MonsterBulletHead()
	{
	}
}
[Token(Token = "0x20001ED")]
public class MonsterBulletPoison : MonsterBulletStraight
{
	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int explodeBulletID;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x27A4CEC", Offset = "0x27A4CEC", VA = "0x27A4CEC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x27A4EB8", Offset = "0x27A4EB8", VA = "0x27A4EB8", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x27A5120", Offset = "0x27A5120", VA = "0x27A5120", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x27A5124", Offset = "0x27A5124", VA = "0x27A5124", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x27A4D14", Offset = "0x27A4D14", VA = "0x27A4D14")]
	private void CreateExplodeBullet()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x27A5128", Offset = "0x27A5128", VA = "0x27A5128")]
	public MonsterBulletPoison()
	{
	}
}
[Token(Token = "0x20001EE")]
public class MonsterBulletStay : MonsterBullet
{
	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x27A5130", Offset = "0x27A5130", VA = "0x27A5130", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x27A52C4", Offset = "0x27A52C4", VA = "0x27A52C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x27A5378", Offset = "0x27A5378", VA = "0x27A5378", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x27A2FA8", Offset = "0x27A2FA8", VA = "0x27A2FA8")]
	public MonsterBulletStay()
	{
	}
}
[Token(Token = "0x20001EF")]
public class MonsterBulletStraight : MonsterBullet
{
	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x27A5380", Offset = "0x27A5380", VA = "0x27A5380", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x27A512C", Offset = "0x27A512C", VA = "0x27A512C")]
	public MonsterBulletStraight()
	{
	}
}
[Token(Token = "0x20001F0")]
public class PoisonKeepAttack : KeepAttackBase
{
	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x2313A48", Offset = "0x2313A48", VA = "0x2313A48")]
	public PoisonKeepAttack()
	{
	}
}
[Token(Token = "0x20001F1")]
public class BulletContinueToDelay : Bullet
{
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54790", Offset = "0xE54790")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletContinueToDelay <>4__this;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hitTarget;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 hitPos;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 hitNormal;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x20F22E8", Offset = "0x20F22E8", VA = "0x20F22E8")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x20F22F0", Offset = "0x20F22F0", VA = "0x20F22F0")]
		internal void <DoDestroy>b__0()
		{
		}
	}

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool HitisFollow;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float delayDestroy;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F7BC", Offset = "0xE5F7BC")]
	protected bool isDelayDestroy;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isHealthPercentage;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float BleedingRatio;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool IsAOEDamageAttenuation;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int HurtdelayDoCount;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int HurtdelayDoStep;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool HurtisTrue;

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x27D14C8", Offset = "0x27D14C8", VA = "0x27D14C8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x27D14F4", Offset = "0x27D14F4", VA = "0x27D14F4", Slot = "8")]
	public override void DoDestroy(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x27D1678", Offset = "0x27D1678", VA = "0x27D1678", Slot = "14")]
	protected override void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x27D196C", Offset = "0x27D196C", VA = "0x27D196C")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x27D1970", Offset = "0x27D1970", VA = "0x27D1970", Slot = "16")]
	protected override void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x27D1980", Offset = "0x27D1980", VA = "0x27D1980", Slot = "17")]
	public virtual void damage(Vector3 hitPos, GameObject TargetObject, WUnit hitUnit, int bulletDamage)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x27D1A5C", Offset = "0x27D1A5C", VA = "0x27D1A5C")]
	public BulletContinueToDelay()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x27D1AE8", Offset = "0x27D1AE8", VA = "0x27D1AE8")]
	[DebuggerHidden]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C544", Offset = "0xE6C544")]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x20001F3")]
public class BulletEffect : Bullet
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 lastPos;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected Vector3 forward;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 curPos;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F808", Offset = "0xE5F808")]
	public float moveSpeed;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float miniShowDistance;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float effectDistance;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Vector3 vector3_o;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject effectRoot;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BulletAnimationController bac;

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x27D1AF4", Offset = "0x27D1AF4", VA = "0x27D1AF4", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x27D1C1C", Offset = "0x27D1C1C", VA = "0x27D1C1C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x27D1D90", Offset = "0x27D1D90", VA = "0x27D1D90")]
	private void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x27D1DC8", Offset = "0x27D1DC8", VA = "0x27D1DC8")]
	private void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x27D1DF0", Offset = "0x27D1DF0", VA = "0x27D1DF0", Slot = "17")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x27D1FA4", Offset = "0x27D1FA4", VA = "0x27D1FA4")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x27D21E8", Offset = "0x27D21E8", VA = "0x27D21E8")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x27D235C", Offset = "0x27D235C", VA = "0x27D235C", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x27D2620", Offset = "0x27D2620", VA = "0x27D2620")]
	public BulletEffect()
	{
	}
}
[Token(Token = "0x20001F4")]
public class BulletExplosive_crossbow : BulletGrenado
{
	[Serializable]
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE547A0", Offset = "0xE547A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__5_0;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x20F23FC", Offset = "0x20F23FC", VA = "0x20F23FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x20F2404", Offset = "0x20F2404", VA = "0x20F2404")]
		internal int <RayCheck>b__5_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F840", Offset = "0xE5F840")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F878", Offset = "0xE5F878")]
	public SwitchInfoData Hit_ExplodeAudioSwitch;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject ShootObject;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] HitColliderList;

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x27D26D8", Offset = "0x27D26D8", VA = "0x27D26D8", Slot = "18")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x27D2BB4", Offset = "0x27D2BB4", VA = "0x27D2BB4", Slot = "11")]
	protected override void ApplyDieEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x27D2DF8", Offset = "0x27D2DF8", VA = "0x27D2DF8", Slot = "20")]
	protected override bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x27D30E4", Offset = "0x27D30E4", VA = "0x27D30E4", Slot = "13")]
	protected override void AOEProcessing(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x27D3334", Offset = "0x27D3334", VA = "0x27D3334")]
	public BulletExplosive_crossbow()
	{
	}
}
[Token(Token = "0x20001F6")]
public class BulletFlameProjector : BulletContinueToDelay
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float Capsuleradius;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform TransformStart;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform TransformEnd;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F8B0", Offset = "0xE5F8B0")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent Ammo_HitShootAudio;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent Stop_Ammo_HitShootAudio;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WwiseDefine WwiseDefine;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine StopWwiseDefine;

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x27D3478", Offset = "0x27D3478", VA = "0x27D3478")]
	public void onTrrgerCapsuleCastAll()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x27D3770", Offset = "0x27D3770", VA = "0x27D3770")]
	public void StopWwiseDefineEvent()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x27D38CC", Offset = "0x27D38CC", VA = "0x27D38CC", Slot = "14")]
	protected override void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x27D3C98", Offset = "0x27D3C98", VA = "0x27D3C98", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x27D3CC4", Offset = "0x27D3CC4", VA = "0x27D3CC4", Slot = "16")]
	protected override void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x27D3CD4", Offset = "0x27D3CD4", VA = "0x27D3CD4", Slot = "17")]
	public override void damage(Vector3 hitPos, GameObject TargetObject, WUnit hitUnit, int bulletDamage)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x27D3EB8", Offset = "0x27D3EB8", VA = "0x27D3EB8")]
	public BulletFlameProjector()
	{
	}
}
[Token(Token = "0x20001F7")]
public class BulletGrenado : BulletContinueToDelay
{
	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject effectRoot;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float delayDisplay;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine coroutine;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected bool isMove;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F8E8", Offset = "0xE5F8E8")]
	public float g;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F920", Offset = "0xE5F920")]
	public float speed;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected Vector3 lastPos;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 forward;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected Vector3 curPos;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool switchGspeed;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float verticalSpeed;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float gravitationalSpeed;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float angle;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float time;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempRaHits;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x27D3EC8", Offset = "0x27D3EC8", VA = "0x27D3EC8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x27D4038", Offset = "0x27D4038", VA = "0x27D4038", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x27D4110", Offset = "0x27D4110", VA = "0x27D4110", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x27D40E8", Offset = "0x27D40E8", VA = "0x27D40E8")]
	public void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x27D40AC", Offset = "0x27D40AC", VA = "0x27D40AC")]
	public void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x27D4158", Offset = "0x27D4158", VA = "0x27D4158", Slot = "18")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x27D4314", Offset = "0x27D4314", VA = "0x27D4314", Slot = "19")]
	protected virtual void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x27D4598", Offset = "0x27D4598", VA = "0x27D4598", Slot = "20")]
	protected virtual bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x27D3394", Offset = "0x27D3394", VA = "0x27D3394")]
	public BulletGrenado()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x27D4888", Offset = "0x27D4888", VA = "0x27D4888")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C57C", Offset = "0xE6C57C")]
	private void <DoInit>b__14_0()
	{
	}
}
[Token(Token = "0x20001F8")]
public class BulletLaser_postol : BulletStraight
{
	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F958", Offset = "0xE5F958")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x27D4F0C", Offset = "0x27D4F0C", VA = "0x27D4F0C", Slot = "17")]
	protected override void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x27D53E8", Offset = "0x27D53E8", VA = "0x27D53E8")]
	public BulletLaser_postol()
	{
	}
}
[Token(Token = "0x20001F9")]
public class BulletNPC : Bullet
{
	[Serializable]
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE547B0", Offset = "0xE547B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__19_0;

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x20F24AC", Offset = "0x20F24AC", VA = "0x20F24AC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x20F24B4", Offset = "0x20F24B4", VA = "0x20F24B4")]
		internal int <RayCheck>b__19_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lastPos;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 forward;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 curPos;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5F990", Offset = "0xE5F990")]
	public float moveSpeed;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float rotateSpeed;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float miniShowDistance;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float effectDistance;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 vector3_o;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject effectRoot;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BulletAnimationController bac;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject BulletMdl;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isMove;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x27D5F18", Offset = "0x27D5F18", VA = "0x27D5F18", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x27D6040", Offset = "0x27D6040", VA = "0x27D6040", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x27D67AC", Offset = "0x27D67AC", VA = "0x27D67AC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x27D61AC", Offset = "0x27D61AC", VA = "0x27D61AC")]
	private void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x27D61E4", Offset = "0x27D61E4", VA = "0x27D61E4")]
	private void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x27D62D0", Offset = "0x27D62D0", VA = "0x27D62D0")]
	private void RayCheck()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x27D6924", Offset = "0x27D6924", VA = "0x27D6924")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x27D67B0", Offset = "0x27D67B0", VA = "0x27D67B0")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x27D6B68", Offset = "0x27D6B68", VA = "0x27D6B68")]
	public BulletNPC()
	{
	}
}
[Token(Token = "0x20001FB")]
public class BulletNapalmBomb : BulletGrenado
{
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE547C0", Offset = "0xE547C0")]
	private sealed class <SpawnLineParticles>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletNapalmBomb <>4__this;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x20F2B18", Offset = "0x20F2B18", VA = "0x20F2B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x20F2B60", Offset = "0x20F2B60", VA = "0x20F2B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x20F29F0", Offset = "0x20F29F0", VA = "0x20F29F0")]
		[DebuggerHidden]
		public <SpawnLineParticles>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x20F2A1C", Offset = "0x20F2A1C", VA = "0x20F2A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x20F2A20", Offset = "0x20F2A20", VA = "0x20F2A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x20F2B20", Offset = "0x20F2B20", VA = "0x20F2B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE547D0", Offset = "0xE547D0")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletNapalmBomb <>4__this;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int i;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__0;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x20F24F8", Offset = "0x20F24F8", VA = "0x20F24F8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x20F2500", Offset = "0x20F2500", VA = "0x20F2500")]
		internal void <StartBurn>b__0()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE547E0", Offset = "0xE547E0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletNapalmBomb <>4__this;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 hitPos;

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x20F2968", Offset = "0x20F2968", VA = "0x20F2968")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x20F2970", Offset = "0x20F2970", VA = "0x20F2970")]
		internal void <HitProcessing>b__0()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x20F29B0", Offset = "0x20F29B0", VA = "0x20F29B0")]
		internal void <HitProcessing>b__1()
		{
		}
	}

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] HitColliderList;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int BurningRange;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int BurmHzFrequency;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private LineRenderer laser;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform laserScalePivot;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 targetPoint;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Ray r;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private RaycastHit hit;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FA08", Offset = "0xE5FA08")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private BleedBuffData Buffdata;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x27D6CF4", Offset = "0x27D6CF4", VA = "0x27D6CF4", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x27D7090", Offset = "0x27D7090", VA = "0x27D7090")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6C58C", Offset = "0xE6C58C")]
	private IEnumerator SpawnLineParticles()
	{
		return null;
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x27D7108", Offset = "0x27D7108", VA = "0x27D7108", Slot = "10")]
	protected override void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x27D7300", Offset = "0x27D7300", VA = "0x27D7300", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x27D7350", Offset = "0x27D7350", VA = "0x27D7350")]
	private void StartBurn()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x27D7480", Offset = "0x27D7480", VA = "0x27D7480", Slot = "20")]
	protected override bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x27D7604", Offset = "0x27D7604", VA = "0x27D7604", Slot = "17")]
	public override void damage(Vector3 hitPos, GameObject TargetObject, WUnit hitUnit, int bulletDamage)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x27D77A8", Offset = "0x27D77A8", VA = "0x27D77A8", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x27D81E0", Offset = "0x27D81E0", VA = "0x27D81E0")]
	public BulletNapalmBomb()
	{
	}
}
[Token(Token = "0x20001FF")]
public class BulletPistol : BulletEffect
{
	[Serializable]
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE547F0", Offset = "0xE547F0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__9_0;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x20F2BCC", Offset = "0x20F2BCC", VA = "0x20F2BCC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x20F2BD4", Offset = "0x20F2BD4", VA = "0x20F2BD4")]
		internal int <RayCheck>b__9_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54800", Offset = "0xE54800")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletPistol <>4__this;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hitTarget;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 hitPos;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 hitNormal;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x20F2C18", Offset = "0x20F2C18", VA = "0x20F2C18")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x20F2C20", Offset = "0x20F2C20", VA = "0x20F2C20")]
		internal void <HitProcessing>b__0()
		{
		}
	}

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float delayDestroytime;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject bulletModel;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool IsHit;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x27D8318", Offset = "0x27D8318", VA = "0x27D8318", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x27D833C", Offset = "0x27D833C", VA = "0x27D833C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x27D834C", Offset = "0x27D834C", VA = "0x27D834C", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x27D8394", Offset = "0x27D8394", VA = "0x27D8394", Slot = "17")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x27D8874", Offset = "0x27D8874", VA = "0x27D8874")]
	protected bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x27D89E8", Offset = "0x27D89E8", VA = "0x27D89E8", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x27D8D74", Offset = "0x27D8D74", VA = "0x27D8D74")]
	public BulletPistol()
	{
	}
}
[Token(Token = "0x2000202")]
public class BulletPlasma_pistol : BulletStraight
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FA40", Offset = "0xE5FA40")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x27D8E48", Offset = "0x27D8E48", VA = "0x27D8E48", Slot = "10")]
	protected override void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x27D90E4", Offset = "0x27D90E4", VA = "0x27D90E4")]
	public BulletPlasma_pistol()
	{
	}
}
[Token(Token = "0x2000203")]
public class BulletPulse_gun : BulletStraight
{
	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FA78", Offset = "0xE5FA78")]
	public SwitchInfoData Hit_ExplodeAudioSwitch;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FAB0", Offset = "0xE5FAB0")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x27D90E8", Offset = "0x27D90E8", VA = "0x27D90E8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x27D946C", Offset = "0x27D946C", VA = "0x27D946C", Slot = "11")]
	protected override void ApplyDieEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x27D9538", Offset = "0x27D9538", VA = "0x27D9538")]
	public BulletPulse_gun()
	{
	}
}
[Token(Token = "0x2000204")]
public class BulletSpitPoison : MonsterBullet
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 lastPos;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 forward;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 curPos;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float velocity;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Collider Collider;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float MoveTime;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float BIGSpeed;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float movetime;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float DamageInterval;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float IntervalTime;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool IsDamage;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector3 EndVector3;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 initVector3;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x27D9978", Offset = "0x27D9978", VA = "0x27D9978")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x27D99B8", Offset = "0x27D99B8", VA = "0x27D99B8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x27D9A98", Offset = "0x27D9A98", VA = "0x27D9A98", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x27D9ACC", Offset = "0x27D9ACC", VA = "0x27D9ACC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x27D9AD0", Offset = "0x27D9AD0", VA = "0x27D9AD0", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x27D9BA0", Offset = "0x27D9BA0", VA = "0x27D9BA0", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x27D9BA4", Offset = "0x27D9BA4", VA = "0x27D9BA4", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x27D9BA8", Offset = "0x27D9BA8", VA = "0x27D9BA8", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x27D9CF8", Offset = "0x27D9CF8", VA = "0x27D9CF8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x27D9BAC", Offset = "0x27D9BAC", VA = "0x27D9BAC")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x27D9CFC", Offset = "0x27D9CFC", VA = "0x27D9CFC")]
	public BulletSpitPoison()
	{
	}
}
[Token(Token = "0x2000205")]
public class BulletStraight : Bullet
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float velocity;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject effectRoot;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float delayDisplay;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Vector3 lastPos;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 forward;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Vector3 curPos;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine coroutine;

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x27D9310", Offset = "0x27D9310", VA = "0x27D9310", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x27D9D6C", Offset = "0x27D9D6C", VA = "0x27D9D6C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x27D9FE8", Offset = "0x27D9FE8", VA = "0x27D9FE8", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x27D9DC8", Offset = "0x27D9DC8", VA = "0x27D9DC8")]
	public void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x27D9E04", Offset = "0x27D9E04", VA = "0x27D9E04")]
	public void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x27D9E2C", Offset = "0x27D9E2C", VA = "0x27D9E2C")]
	public void RayCheck()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x27DA030", Offset = "0x27DA030", VA = "0x27DA030", Slot = "17")]
	protected virtual void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x27D5274", Offset = "0x27D5274", VA = "0x27D5274")]
	protected bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x27D53EC", Offset = "0x27D53EC", VA = "0x27D53EC")]
	public BulletStraight()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x27DA274", Offset = "0x27DA274", VA = "0x27DA274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C63C", Offset = "0xE6C63C")]
	private void <DoInit>b__7_0()
	{
	}
}
[Token(Token = "0x2000206")]
public class BulletTrack : Bullet
{
	[Serializable]
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54810", Offset = "0xE54810")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__26_0;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x20F2CE0", Offset = "0x20F2CE0", VA = "0x20F2CE0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x20F2CE8", Offset = "0x20F2CE8", VA = "0x20F2CE8")]
		internal int <RayCheck>b__26_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float velocity;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject effectRoot;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float delayDisplay;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool isMove;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FAE8", Offset = "0xE5FAE8")]
	public float radius;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float Radiu;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FB20", Offset = "0xE5FB20")]
	public float MaximumRoataionSpeed;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FB58", Offset = "0xE5FB58")]
	public float AcceleratedVeocity;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FB90", Offset = "0xE5FB90")]
	public float MaximumVelocity;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FBC8", Offset = "0xE5FBC8")]
	public float AccelerationPeriod;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private HurtDefine TargetHurtDefine;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FC00", Offset = "0xE5FC00")]
	public float CurrentVelocity;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FC38", Offset = "0xE5FC38")]
	public float lifeTime;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool StartGetTarget;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FC70", Offset = "0xE5FC70")]
	public SwitchInfoData HitAudioSwitch;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] RAyColliderList;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x27DA294", Offset = "0x27DA294", VA = "0x27DA294", Slot = "10")]
	protected override void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x27DA48C", Offset = "0x27DA48C", VA = "0x27DA48C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x27DA640", Offset = "0x27DA640", VA = "0x27DA640")]
	public void GetTarget(float T)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x27DA87C", Offset = "0x27DA87C", VA = "0x27DA87C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x27DA8C4", Offset = "0x27DA8C4", VA = "0x27DA8C4", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x27DA90C", Offset = "0x27DA90C", VA = "0x27DA90C", Slot = "17")]
	protected virtual void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x27DAC50", Offset = "0x27DAC50", VA = "0x27DAC50", Slot = "18")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x27DB244", Offset = "0x27DB244", VA = "0x27DB244", Slot = "13")]
	protected override void AOEProcessing(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x27DB0F8", Offset = "0x27DB0F8", VA = "0x27DB0F8")]
	protected bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x27DB494", Offset = "0x27DB494", VA = "0x27DB494")]
	public BulletTrack()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x27DB648", Offset = "0x27DB648", VA = "0x27DB648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C64C", Offset = "0xE6C64C")]
	private void <DoInit>b__19_0()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x27DB668", Offset = "0x27DB668", VA = "0x27DB668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C65C", Offset = "0xE6C65C")]
	private void <DoInit>b__19_1()
	{
	}
}
[Token(Token = "0x2000208")]
public class BulletWarningBomb : MonsterBullet
{
	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject WarningEffect;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject boomEffect;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioEvent Grenades_Bomb;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public AudioEvent WarningAudio;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioEvent BombStop;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private WwiseDefine warningWwiseDefine;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine coroutine;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private EffectDefine warningEffectDefine;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private EffectDefine boomEffectDefine;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isTrigger;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x27DB670", Offset = "0x27DB670", VA = "0x27DB670", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x27DB9E8", Offset = "0x27DB9E8", VA = "0x27DB9E8")]
	private void BombChange(int id, bool isBomb)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x27DB7B8", Offset = "0x27DB7B8", VA = "0x27DB7B8")]
	private void Warning()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x27DBA18", Offset = "0x27DBA18", VA = "0x27DBA18")]
	public void DoBomb()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x27DBFE0", Offset = "0x27DBFE0", VA = "0x27DBFE0", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x27DBDE8", Offset = "0x27DBDE8", VA = "0x27DBDE8")]
	public void BombInterrupt()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x27DBFE4", Offset = "0x27DBFE4", VA = "0x27DBFE4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x27DC034", Offset = "0x27DC034", VA = "0x27DC034", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x27DC03C", Offset = "0x27DC03C", VA = "0x27DC03C", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x27DC280", Offset = "0x27DC280", VA = "0x27DC280")]
	public BulletWarningBomb()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x27DC288", Offset = "0x27DC288", VA = "0x27DC288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C66C", Offset = "0xE6C66C")]
	private void <DoBomb>b__13_0()
	{
	}
}
[Token(Token = "0x2000209")]
public class Bullet_Needlegun : Bullet
{
	[Serializable]
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54820", Offset = "0xE54820")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__23_0;

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x20F2D90", Offset = "0x20F2D90", VA = "0x20F2D90")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x20F2D98", Offset = "0x20F2D98", VA = "0x20F2D98")]
		internal int <RayCheck>b__23_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject effectRoot;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float delayDisplay;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool isMove;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float speed;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float elapsedTime;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5FCA8", Offset = "0xE5FCA8")]
	private Vector3 <targetPosition>k__BackingField;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float MaximumRoataionSpeed;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FCB8", Offset = "0xE5FCB8")]
	public float CurrentVelocity;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FCF0", Offset = "0xE5FCF0")]
	public float MaximumVelocity;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FD28", Offset = "0xE5FD28")]
	public float AcceleratedVeocity;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FD60", Offset = "0xE5FD60")]
	public int RayLength;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool hitInfolethf;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x1700015A")]
	public Vector3 targetPosition
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x27DC294", Offset = "0x27DC294", VA = "0x27DC294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C67C", Offset = "0xE6C67C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x27DC2A0", Offset = "0x27DC2A0", VA = "0x27DC2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C68C", Offset = "0xE6C68C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x27DC2AC", Offset = "0x27DC2AC", VA = "0x27DC2AC", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x27DC788", Offset = "0x27DC788", VA = "0x27DC788", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x27DC7E0", Offset = "0x27DC7E0", VA = "0x27DC7E0", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x27DC828", Offset = "0x27DC828", VA = "0x27DC828", Slot = "17")]
	protected virtual void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x27DCAF4", Offset = "0x27DCAF4", VA = "0x27DCAF4", Slot = "18")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x27DCF90", Offset = "0x27DCF90", VA = "0x27DCF90", Slot = "19")]
	protected virtual bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x27DD0DC", Offset = "0x27DD0DC", VA = "0x27DD0DC")]
	public Bullet_Needlegun()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x27DD24C", Offset = "0x27DD24C", VA = "0x27DD24C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C69C", Offset = "0xE6C69C")]
	private void <DoInit>b__17_0()
	{
	}
}
[Token(Token = "0x200020B")]
public class SpecialBullet : BulletGrenado
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private TimeCtrlEffect timeCtrlEffect;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x2164044", Offset = "0x2164044", VA = "0x2164044", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x216413C", Offset = "0x216413C", VA = "0x216413C", Slot = "20")]
	protected override bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x21642D0", Offset = "0x21642D0", VA = "0x21642D0")]
	public SpecialBullet()
	{
	}
}
[Token(Token = "0x200020C")]
public class EmitterManager : Singleton<EmitterManager>
{
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54830", Offset = "0xE54830")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Bullet> cb;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parent;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rot;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WUnit attacker;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Weapon weapon;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x20F5F38", Offset = "0x20F5F38", VA = "0x20F5F38")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x20F5F40", Offset = "0x20F5F40", VA = "0x20F5F40")]
		internal void <CreateEmitterAsync>b__0(GameObject obj)
		{
		}
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x24F1234", Offset = "0x24F1234", VA = "0x24F1234")]
	public Bullet CreateEmitter(WUnit attacker, int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x24F1448", Offset = "0x24F1448", VA = "0x24F1448")]
	public Bullet CreateEmitter(WUnit attacker, Weapon weapon, GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x24F1720", Offset = "0x24F1720", VA = "0x24F1720")]
	public void CreateEmitterAsync(WUnit attacker, Weapon weapon, GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<Bullet> cb)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x24F19A8", Offset = "0x24F19A8", VA = "0x24F19A8")]
	public EmitterManager()
	{
	}
}
[Token(Token = "0x200020E")]
public class FloatingBase : MonoBehaviour
{
	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x2240F00", Offset = "0x2240F00", VA = "0x2240F00", Slot = "4")]
	public virtual void Init(Vector3 ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x2240F04", Offset = "0x2240F04", VA = "0x2240F04", Slot = "5")]
	public virtual void SetInfo(int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x2240F08", Offset = "0x2240F08", VA = "0x2240F08", Slot = "6")]
	public virtual void Floating(int value)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x2240F0C", Offset = "0x2240F0C", VA = "0x2240F0C", Slot = "7")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x2240F10", Offset = "0x2240F10", VA = "0x2240F10")]
	public FloatingBase()
	{
	}
}
[Token(Token = "0x200020F")]
public class FloatingDamage : FloatingBase
{
	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Txt;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform MoveTxt;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RotTxt;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 OwnerTrn;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform LookAtTrn;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FD98", Offset = "0xE5FD98")]
	public float Time;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FDD0", Offset = "0xE5FDD0")]
	public float BeginH;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FE08", Offset = "0xE5FE08")]
	public float MiddleH;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FE40", Offset = "0xE5FE40")]
	public float CubeL;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FE78", Offset = "0xE5FE78")]
	public float CubeW;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FEB0", Offset = "0xE5FEB0")]
	public float CubeH;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FEE8", Offset = "0xE5FEE8")]
	public float CubeR;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FF20", Offset = "0xE5FF20")]
	public float downBL;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FF58", Offset = "0xE5FF58")]
	public float downBW;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FF90", Offset = "0xE5FF90")]
	public float downEL;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE5FFC8", Offset = "0xE5FFC8")]
	public float downEW;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60000", Offset = "0xE60000")]
	public float ScaleBRatio;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60038", Offset = "0xE60038")]
	public float ScaleMRatio;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60070", Offset = "0xE60070")]
	public float ScaleERatio;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE600A8", Offset = "0xE600A8")]
	public int MinFontSize;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE600E0", Offset = "0xE600E0")]
	public int MaxFontSize;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60118", Offset = "0xE60118")]
	public int ExtraMinFontSize;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60150", Offset = "0xE60150")]
	public int ExtraMaxFontSize;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 bPoint;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 sPoint;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 tPoint;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 pForward;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 pRight;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 pUp;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int extraState;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int inputMinDamage;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int inputMaxDamage;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Tween mMoveTn;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Tween mGradientTn;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Tween mScaleTn;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color moneyColor;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, string> expStrDic;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x2240F18", Offset = "0x2240F18", VA = "0x2240F18", Slot = "4")]
	public override void Init(Vector3 ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x224102C", Offset = "0x224102C", VA = "0x224102C", Slot = "5")]
	public override void SetInfo(int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x2241038", Offset = "0x2241038", VA = "0x2241038")]
	public static string GetExpStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x2241164", Offset = "0x2241164", VA = "0x2241164", Slot = "6")]
	public override void Floating(int value)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x2241A54", Offset = "0x2241A54", VA = "0x2241A54")]
	private void WaypointChange(int index)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x2241894", Offset = "0x2241894", VA = "0x2241894")]
	private void Finish()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x22417FC", Offset = "0x22417FC", VA = "0x22417FC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x2241C44", Offset = "0x2241C44", VA = "0x2241C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x2241920", Offset = "0x2241920", VA = "0x2241920")]
	private int GetTextSize(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x2241CE4", Offset = "0x2241CE4", VA = "0x2241CE4", Slot = "7")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x2241CF0", Offset = "0x2241CF0", VA = "0x2241CF0")]
	public FloatingDamage()
	{
	}
}
[Token(Token = "0x2000210")]
public class FloatingEffectManager : Singleton<FloatingEffectManager>
{
	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<FloatingBase> collectList;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<FloatingBase> recycleList;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isEnter;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isStart;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject floatingPrefab;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform floatingRoot;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int preNumber;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x2241E50", Offset = "0x2241E50", VA = "0x2241E50")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x2241FB8", Offset = "0x2241FB8", VA = "0x2241FB8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x2241FBC", Offset = "0x2241FBC", VA = "0x2241FBC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x2241FC8", Offset = "0x2241FC8", VA = "0x2241FC8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x2241FD0", Offset = "0x2241FD0", VA = "0x2241FD0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x22420D4", Offset = "0x22420D4", VA = "0x22420D4")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x22422A0", Offset = "0x22422A0", VA = "0x22422A0")]
	public void Floating(Transform ownerTrn, Transform lookAtTrn, Vector3 forward, int value, int extraState, int minDg, int maxDg, Vector3 Hitpos)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x22424F0", Offset = "0x22424F0", VA = "0x22424F0")]
	public FloatingBase UseFloating(Vector3 Hitpos, Transform lookAtTrn, Vector3 forward)
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x2241B64", Offset = "0x2241B64", VA = "0x2241B64")]
	public void Remove(FloatingBase floating)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x2241FD4", Offset = "0x2241FD4", VA = "0x2241FD4")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x22420DC", Offset = "0x22420DC", VA = "0x22420DC")]
	public void DestroyAll()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x2241F04", Offset = "0x2241F04", VA = "0x2241F04")]
	private void PreFloating()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x224267C", Offset = "0x224267C", VA = "0x224267C")]
	private FloatingBase GetFloating()
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x22427FC", Offset = "0x22427FC", VA = "0x22427FC")]
	private FloatingBase ProduceFloating()
	{
		return null;
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x2242718", Offset = "0x2242718", VA = "0x2242718")]
	private bool RecycleFloating(FloatingBase floating)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x22429B4", Offset = "0x22429B4", VA = "0x22429B4")]
	public FloatingEffectManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000211")]
public class AimIKConfig
{
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isRight;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IKSolver.Bone[] iKSolverAimBones_Right;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLeft;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IKSolver.Bone[] iKSolverAimBones_Left;

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x1FB3CAC", Offset = "0x1FB3CAC", VA = "0x1FB3CAC")]
	public AimIKConfig()
	{
	}
}
[Token(Token = "0x2000212")]
public class AimIKInfo : MonoBehaviour
{
	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AimIKConfig ikConfig;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1FB3CBC", Offset = "0x1FB3CBC", VA = "0x1FB3CBC")]
	public AimIKInfo()
	{
	}
}
[Token(Token = "0x2000213")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54840", Offset = "0xE54840")]
public class AimIKTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000214")]
	public class AnimationConfig
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string aniName;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startTime;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float updateWeightTime;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x20E845C", Offset = "0x20E845C", VA = "0x20E845C")]
		public AnimationConfig()
		{
		}
	}

	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE548A0", Offset = "0xE548A0")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AimIKTools <>4__this;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationConfig c;

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x20E83FC", Offset = "0x20E83FC", VA = "0x20E83FC")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x20E8404", Offset = "0x20E8404", VA = "0x20E8404")]
		internal void <StartAim>b__0(long l)
		{
		}
	}

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AimIK aimIk;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookAtIK lookAtIk;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimTransform;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AimIKInfo aimIKInfo;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AimIKConfig aimIKConfig;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool updateWeight;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float updateTargetWeight;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float updateWeightTime;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float curUpdateWeightTime;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine startAimCoroution;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject target;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60198", Offset = "0xE60198")]
	private Vector3 <targetPos>k__BackingField;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE601A8", Offset = "0xE601A8")]
	private bool <isStartAim>k__BackingField;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE601B8", Offset = "0xE601B8")]
	private WUnit <owner>k__BackingField;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AnimationConfig[] animationConfigs;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AnimationConfig defaultAnimationConfig;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE601E8", Offset = "0xE601E8")]
	private bool <isRightAimBone>k__BackingField;

	[Token(Token = "0x1700015B")]
	public Vector3 targetPos
	{
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1FB3CC4", Offset = "0x1FB3CC4", VA = "0x1FB3CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C6AC", Offset = "0xE6C6AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1FB3CD0", Offset = "0x1FB3CD0", VA = "0x1FB3CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C6BC", Offset = "0xE6C6BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public bool isStartAim
	{
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1FB3CDC", Offset = "0x1FB3CDC", VA = "0x1FB3CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C6CC", Offset = "0xE6C6CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1FB3CE4", Offset = "0x1FB3CE4", VA = "0x1FB3CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C6DC", Offset = "0xE6C6DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public WUnit owner
	{
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1FB3CF0", Offset = "0x1FB3CF0", VA = "0x1FB3CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C6EC", Offset = "0xE6C6EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1FB3CF8", Offset = "0x1FB3CF8", VA = "0x1FB3CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C6FC", Offset = "0xE6C6FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public bool isRightAimBone
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1FB3D00", Offset = "0x1FB3D00", VA = "0x1FB3D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C70C", Offset = "0xE6C70C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1FB3D08", Offset = "0x1FB3D08", VA = "0x1FB3D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C71C", Offset = "0xE6C71C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x1FB3D14", Offset = "0x1FB3D14", VA = "0x1FB3D14")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x1FB3ED0", Offset = "0x1FB3ED0", VA = "0x1FB3ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1FB40D0", Offset = "0x1FB40D0", VA = "0x1FB40D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x1FB3F28", Offset = "0x1FB3F28", VA = "0x1FB3F28")]
	private void UpdateWeight()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x1FB4180", Offset = "0x1FB4180", VA = "0x1FB4180")]
	public AnimationConfig GetConfig(string aniState)
	{
		return null;
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1FB3E2C", Offset = "0x1FB3E2C", VA = "0x1FB3E2C")]
	public void InitAimTransform()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1FB422C", Offset = "0x1FB422C", VA = "0x1FB422C")]
	public void ResetAimTransform()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1FB4258", Offset = "0x1FB4258", VA = "0x1FB4258")]
	public float StartAimHost(string _aniState, Vector3 _targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1FB427C", Offset = "0x1FB427C", VA = "0x1FB427C")]
	public float StartAim(string _aniState, Vector3 _targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1FB4750", Offset = "0x1FB4750", VA = "0x1FB4750")]
	public void SwitchBones(bool isRight = true)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1FB47E0", Offset = "0x1FB47E0", VA = "0x1FB47E0")]
	public bool IsExistRightAimBone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1FB4800", Offset = "0x1FB4800", VA = "0x1FB4800")]
	public bool IsExistLeftAimBone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1FB4820", Offset = "0x1FB4820", VA = "0x1FB4820")]
	public void UpdateAimPos(Vector3 _targetPos)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1FB4834", Offset = "0x1FB4834", VA = "0x1FB4834")]
	public void StopAimHost()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1FB4594", Offset = "0x1FB4594", VA = "0x1FB4594")]
	public void StopAim()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1FB4838", Offset = "0x1FB4838", VA = "0x1FB4838")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x1FB48F4", Offset = "0x1FB48F4", VA = "0x1FB48F4")]
	public AimIKTools()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE548B0", Offset = "0xE548B0")]
public class InteractConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000217")]
	public class WunitEvent : UnityEvent<WUnit>
	{
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x2057B7C", Offset = "0x2057B7C", VA = "0x2057B7C")]
		public WunitEvent()
		{
		}
	}

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLocal;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInit;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject CollectorPrefab;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CollectorRoot;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected WunitEvent InitAction;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected WunitEvent DestroyAction;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CartridgeBag cartridgeBag;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x20B0CC8", Offset = "0x20B0CC8", VA = "0x20B0CC8")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x20B0D48", Offset = "0x20B0D48", VA = "0x20B0D48")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x20B0DA8", Offset = "0x20B0DA8", VA = "0x20B0DA8")]
	public InteractConfigMono()
	{
	}
}
[Token(Token = "0x2000218")]
public class WeaponSlot : MonoBehaviour
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public XRBaseInteractable weaponInteractable;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TargetingInteractable TargetingInteractable;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isR;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x2B51348", Offset = "0x2B51348", VA = "0x2B51348")]
	public void Init(WUnit WUnit)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x2B51450", Offset = "0x2B51450", VA = "0x2B51450")]
	public void SetWeaponNull()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x2B515F8", Offset = "0x2B515F8", VA = "0x2B515F8")]
	public void TakeOut()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x2B516A8", Offset = "0x2B516A8", VA = "0x2B516A8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x2B517B0", Offset = "0x2B517B0", VA = "0x2B517B0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x2B51C54", Offset = "0x2B51C54", VA = "0x2B51C54")]
	public WeaponSlot()
	{
	}
}
[Token(Token = "0x2000219")]
public class Battle
{
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54910", Offset = "0xE54910")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Battle <>4__this;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x20F16A4", Offset = "0x20F16A4", VA = "0x20F16A4")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x20F16AC", Offset = "0x20F16AC", VA = "0x20F16AC")]
		internal void <ClearUnitsByRoleType>b__0()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x20F16D0", Offset = "0x20F16D0", VA = "0x20F16D0")]
		internal void <ClearUnitsByRoleType>b__1()
		{
		}
	}

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BattleData battleData;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<WUnit> allBattleUnitList;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, WUnit> allBattleUnitHash;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<WUnit>> allGroupBattleUnitHash;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<WUnit>> GearMonsterBattleUnitHash;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<WUnit> monsterBattleUnitList;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<WUnit> npcBattleUnitList;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<WUnit> playerBattleUnitList;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected WUnit controlUnit;

	[Token(Token = "0x1700015F")]
	public BattleData Data
	{
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x2901FFC", Offset = "0x2901FFC", VA = "0x2901FFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public WUnit ControlUnit
	{
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x2902004", Offset = "0x2902004", VA = "0x2902004")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x290200C", Offset = "0x290200C", VA = "0x290200C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public int AllPlayerCount
	{
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x290204C", Offset = "0x290204C", VA = "0x290204C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x2902014", Offset = "0x2902014", VA = "0x2902014")]
	public void ClearControlUnit()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x2902098", Offset = "0x2902098", VA = "0x2902098")]
	public void SetControlUnit(WUnit unit)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x29020A0", Offset = "0x29020A0", VA = "0x29020A0")]
	public static Battle CreateBattle(BattleData battleData)
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x29020FC", Offset = "0x29020FC", VA = "0x29020FC")]
	private Battle(BattleData _battleData)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x2902330", Offset = "0x2902330", VA = "0x2902330")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x2902468", Offset = "0x2902468", VA = "0x2902468")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x2902560", Offset = "0x2902560", VA = "0x2902560")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x2902658", Offset = "0x2902658", VA = "0x2902658")]
	public void DoExit()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x29026D8", Offset = "0x29026D8", VA = "0x29026D8")]
	public void AddUnit(WUnit unit)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x2902A3C", Offset = "0x2902A3C", VA = "0x2902A3C")]
	public bool RemoveUnit(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x2902D24", Offset = "0x2902D24", VA = "0x2902D24")]
	public WUnit GetUnitById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x2902D98", Offset = "0x2902D98", VA = "0x2902D98")]
	public int GetUnitCountByRoleType(e_type_role roleType)
	{
		return default(int);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x2902ED8", Offset = "0x2902ED8", VA = "0x2902ED8")]
	public int GetAliveUnitCountByRoleType(e_type_role roleType)
	{
		return default(int);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x2903070", Offset = "0x2903070", VA = "0x2903070")]
	public int GetAliveMonsterCountByRoleType(bool noBoss = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x2903148", Offset = "0x2903148", VA = "0x2903148")]
	public int GetAliveMonsterUnitCount(e_type_monster e_Type_Monster)
	{
		return default(int);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x290321C", Offset = "0x290321C", VA = "0x290321C")]
	public bool IsLocalPlayer(int unitId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x2903260", Offset = "0x2903260", VA = "0x2903260")]
	public bool IsLocalPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x2903288", Offset = "0x2903288", VA = "0x2903288")]
	public bool IsAIPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x2903324", Offset = "0x2903324", VA = "0x2903324")]
	public bool IsPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x290329C", Offset = "0x290329C", VA = "0x290329C")]
	public bool IsAIPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x29033AC", Offset = "0x29033AC", VA = "0x29033AC")]
	public bool IsRealityPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x2903434", Offset = "0x2903434", VA = "0x2903434")]
	public bool IsNpc(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x29034BC", Offset = "0x29034BC", VA = "0x29034BC")]
	public bool IsMonster(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x2903544", Offset = "0x2903544", VA = "0x2903544")]
	public bool IsLocalPlayerGroup(int unitId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x29035A4", Offset = "0x29035A4", VA = "0x29035A4")]
	public bool IsLocalPlayerGroup(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x29035F0", Offset = "0x29035F0", VA = "0x29035F0")]
	public bool IsLocalPlayerGroup(e_group_type gType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x2903610", Offset = "0x2903610", VA = "0x2903610")]
	public e_group_type GetLocalPlayerGroup()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x2903628", Offset = "0x2903628", VA = "0x2903628")]
	public List<WUnit> GetUnitListByRoleType(e_type_role roleType, bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x2903760", Offset = "0x2903760", VA = "0x2903760")]
	public List<WUnit> GetUnitListByCamp(WUnit unit, e_type_camp campType, bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x2903A64", Offset = "0x2903A64", VA = "0x2903A64")]
	public List<WUnit>.Enumerator GetAllWUnitEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x2903AE0", Offset = "0x2903AE0", VA = "0x2903AE0")]
	public List<WUnit>.Enumerator GetMonsterEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x2903B5C", Offset = "0x2903B5C", VA = "0x2903B5C")]
	public List<WUnit>.Enumerator GetNPCEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x2903BD8", Offset = "0x2903BD8", VA = "0x2903BD8")]
	public List<WUnit>.Enumerator GetPlayerEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x2903C54", Offset = "0x2903C54", VA = "0x2903C54")]
	public bool TryGetGroupListEnumerator(e_group_type gType, out List<WUnit>.Enumerator enumerator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x2903C58", Offset = "0x2903C58", VA = "0x2903C58")]
	public bool TryGetGroupListEnumerator(int gType, out List<WUnit>.Enumerator enumerator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x2903D30", Offset = "0x2903D30", VA = "0x2903D30")]
	public int GetGroupUnitCount(e_group_type gType)
	{
		return default(int);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x2903D34", Offset = "0x2903D34", VA = "0x2903D34")]
	public int GetGroupUnitCount(int gType)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x2903DC8", Offset = "0x2903DC8", VA = "0x2903DC8")]
	public List<WUnit> GetAllPlayers(bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x2903DD4", Offset = "0x2903DD4", VA = "0x2903DD4")]
	public List<WUnit> GetAllNPC(bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x2903DE0", Offset = "0x2903DE0", VA = "0x2903DE0")]
	public int GetMonsterStrategyCount(e_type_monster monsterType, string BBVarName, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x2903F5C", Offset = "0x2903F5C", VA = "0x2903F5C")]
	public int GetMonsterCount(e_type_monster monsterType)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x290409C", Offset = "0x290409C", VA = "0x290409C")]
	public int GetGearMonsterCount(int gearid)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x2904228", Offset = "0x2904228", VA = "0x2904228")]
	public int GetExceptMonsterCount(e_type_monster monsterType)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x2904368", Offset = "0x2904368", VA = "0x2904368")]
	public List<WUnit> GetMonsterList(int monsterid)
	{
		return null;
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x29044B0", Offset = "0x29044B0", VA = "0x29044B0")]
	public int GetMonsterCount(int monsterid)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x290458C", Offset = "0x290458C", VA = "0x290458C")]
	public bool CheckPlayerMinDis(Vector3 point, float minDis)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x2904720", Offset = "0x2904720", VA = "0x2904720")]
	public bool CheckPlayerFristMinDis(Vector3 point, float minDis, out WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x29048E0", Offset = "0x29048E0", VA = "0x29048E0")]
	public WUnit GetPlayerCurrent(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x2904A70", Offset = "0x2904A70", VA = "0x2904A70")]
	public void ClearUnitsByRoleType(e_type_role roleType, bool includeDie = false, bool IsdeathDefine = true)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x2905158", Offset = "0x2905158", VA = "0x2905158")]
	public bool CheckAllUnitDieByRoleType(e_type_role roleType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x2905228", Offset = "0x2905228", VA = "0x2905228")]
	public WUnit GetUnitBySite(int site)
	{
		return null;
	}
}
[Token(Token = "0x200021B")]
public class BattleManager
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Battle battle;

	[Token(Token = "0x17000162")]
	public Battle ownerBattle
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x2905494", Offset = "0x2905494", VA = "0x2905494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x290549C", Offset = "0x290549C", VA = "0x290549C")]
	public BattleManager(Battle _battle)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x29054A4", Offset = "0x29054A4", VA = "0x29054A4")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x29054A8", Offset = "0x29054A8", VA = "0x29054A8")]
	public void DoExit()
	{
	}
}
[Token(Token = "0x200021C")]
public class BattleMono : MonoBehaviour
{
	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x29054AC", Offset = "0x29054AC", VA = "0x29054AC")]
	public BattleMono()
	{
	}
}
[Token(Token = "0x200021D")]
public class BattleState : IState
{
	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x2905670", Offset = "0x2905670", VA = "0x2905670", Slot = "4")]
	public void DoInit(object param)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x290581C", Offset = "0x290581C", VA = "0x290581C", Slot = "7")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x2905924", Offset = "0x2905924", VA = "0x2905924", Slot = "5")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x2905AE0", Offset = "0x2905AE0", VA = "0x2905AE0", Slot = "6")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x2905BE8", Offset = "0x2905BE8", VA = "0x2905BE8", Slot = "12")]
	public bool DoExit(StateManager.StateDefine nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x2905E40", Offset = "0x2905E40", VA = "0x2905E40", Slot = "8")]
	public void DoGUI()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x2905E44", Offset = "0x2905E44", VA = "0x2905E44", Slot = "9")]
	public void DoLoad()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x2905E48", Offset = "0x2905E48", VA = "0x2905E48", Slot = "10")]
	public void DoStart(StateManager.StateDefine preType)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x2905E4C", Offset = "0x2905E4C", VA = "0x2905E4C", Slot = "13")]
	public void DoUpdateLoad()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x2905E50", Offset = "0x2905E50", VA = "0x2905E50", Slot = "14")]
	public void DoUpdateInTransEnd()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x2905E54", Offset = "0x2905E54", VA = "0x2905E54", Slot = "11")]
	public void DoTransformStartOver(StateManager.StateDefine preType)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x2905E58", Offset = "0x2905E58", VA = "0x2905E58")]
	public BattleState()
	{
	}
}
[Token(Token = "0x200021E")]
public class BattleUtils
{
	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rd;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, string> timerStrDic;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, string> numStrDic;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x2906188", Offset = "0x2906188", VA = "0x2906188")]
	public static e_group_type GetGroupId(WUnit actor)
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x290399C", Offset = "0x290399C", VA = "0x290399C")]
	public static bool IsSameGroup(WUnit actor1, WUnit actor2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x290619C", Offset = "0x290619C", VA = "0x290619C")]
	public static int Random(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x29061A4", Offset = "0x29061A4", VA = "0x29061A4")]
	public static float RandomFloat(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x29061AC", Offset = "0x29061AC", VA = "0x29061AC")]
	public static float RandomUnitFloat()
	{
		return default(float);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x29061B4", Offset = "0x29061B4", VA = "0x29061B4")]
	public static Vector2 RandomInsideUnitCircle()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x29061BC", Offset = "0x29061BC", VA = "0x29061BC")]
	public static Vector3 RandomInsideUnitSphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x29061C4", Offset = "0x29061C4", VA = "0x29061C4")]
	public static Vector3 RandomOnUnitSphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x29061CC", Offset = "0x29061CC", VA = "0x29061CC")]
	public static int RandomInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x2906240", Offset = "0x2906240", VA = "0x2906240")]
	public static int Rand(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x29062CC", Offset = "0x29062CC", VA = "0x29062CC")]
	public static float Rand(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x29063A4", Offset = "0x29063A4", VA = "0x29063A4")]
	public static float Rand01()
	{
		return default(float);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x2906404", Offset = "0x2906404", VA = "0x2906404")]
	public static Vector3 RandSphereDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC9")]
	public static T GetRandom<T>(T[] array)
	{
		return (T)null;
	}

	[Token(Token = "0x6000BCA")]
	public static T GetRandom<T>(List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x29064F0", Offset = "0x29064F0", VA = "0x29064F0")]
	public static WUnit FindRandomTarget(List<WUnit> target_list)
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x29065B0", Offset = "0x29065B0", VA = "0x29065B0")]
	public static WUnit FindClosestTarget(List<WUnit>.Enumerator enumerator, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x29066CC", Offset = "0x29066CC", VA = "0x29066CC")]
	public static WUnit FindNPCClosestTarget(List<WUnit>.Enumerator enumerator, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x2906800", Offset = "0x2906800", VA = "0x2906800")]
	public static WUnit FindClosestTarget_New(List<WUnit>.Enumerator enumerator, Vector3 refPos, [Optional] WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x2906920", Offset = "0x2906920", VA = "0x2906920")]
	public static WUnit FindRandomTarget(List<WUnit>.Enumerator enumerator, int count)
	{
		return null;
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x29069FC", Offset = "0x29069FC", VA = "0x29069FC")]
	public static WUnit FindClosestTarget(List<WUnit> units, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x2906B04", Offset = "0x2906B04", VA = "0x2906B04")]
	public static WUnit FindInGameRandomPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x2906C70", Offset = "0x2906C70", VA = "0x2906C70")]
	public static WUnit FindInGameNearPlayer(Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x2906E2C", Offset = "0x2906E2C", VA = "0x2906E2C")]
	private List<WUnit> FindRangeTargets(List<WUnit> units, Vector3 refPos, float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x2906FAC", Offset = "0x2906FAC", VA = "0x2906FAC")]
	public static Vector3 GetAttackDir(WUnit attacker, WUnit hurter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x29070AC", Offset = "0x29070AC", VA = "0x29070AC")]
	public static void PollingUnit(IList<int> list, bool isReturnNull, Action<int, WUnit> rAction)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x29072E4", Offset = "0x29072E4", VA = "0x29072E4")]
	public static void PollingUnit(IList<WUnit> list, bool isReturnNull, Action<WUnit> rAction)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x290748C", Offset = "0x290748C", VA = "0x290748C")]
	public static void PollingUnit(List<WUnit>.Enumerator enumerator, bool isReturnNull, Action<WUnit> rAction)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x29075D8", Offset = "0x29075D8", VA = "0x29075D8")]
	public static void PollingUnitFunc(List<WUnit>.Enumerator enumerator, bool isReturnNull, Func<WUnit, bool> rAction)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x2906060", Offset = "0x2906060", VA = "0x2906060")]
	public static string GetTimeStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x290771C", Offset = "0x290771C", VA = "0x290771C")]
	public static string GetNumStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x2907828", Offset = "0x2907828", VA = "0x2907828")]
	public BattleUtils()
	{
	}
}
[Token(Token = "0x200021F")]
public class BlockWall : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	public struct BlockProperty
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int _hp;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float RepairTime;
	}

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BlockProperty property;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool WeaponIn;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> Acitive;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GreenWall;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isDestroy;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider IntoWeapon;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x29085F0", Offset = "0x29085F0", VA = "0x29085F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x2908618", Offset = "0x2908618", VA = "0x2908618")]
	public void BlockDamaged(int AttackValue)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x2908634", Offset = "0x2908634", VA = "0x2908634")]
	private void CheckDestroy()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x2908648", Offset = "0x2908648", VA = "0x2908648")]
	private void DestroyResult()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x29087CC", Offset = "0x29087CC", VA = "0x29087CC")]
	private void RepairResult()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x2908958", Offset = "0x2908958", VA = "0x2908958")]
	private bool Repairing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x2908970", Offset = "0x2908970", VA = "0x2908970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x2908604", Offset = "0x2908604", VA = "0x2908604")]
	private void resetProperty()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x29089D4", Offset = "0x29089D4", VA = "0x29089D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x2908AA4", Offset = "0x2908AA4", VA = "0x2908AA4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x2908B90", Offset = "0x2908B90", VA = "0x2908B90")]
	public BlockWall()
	{
	}
}
[Token(Token = "0x2000221")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54920", Offset = "0xE54920")]
public class SetAttackMove : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public bool MoveActive;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int index;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float MoveSpeed;

	[Token(Token = "0x17000163")]
	protected override string info
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x215433C", Offset = "0x215433C", VA = "0x215433C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x215444C", Offset = "0x215444C", VA = "0x215444C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x21544C8", Offset = "0x21544C8", VA = "0x21544C8")]
	private void SetNavSwitch(bool isOpen)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x2154560", Offset = "0x2154560", VA = "0x2154560")]
	public SetAttackMove()
	{
	}
}
[Token(Token = "0x2000222")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54958", Offset = "0xE54958")]
public class CheckBlockWarm : ConditionTask
{
	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<DiscoverBoard> DiscoverBoard;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<bool> IsTriggerBlock;

	[Token(Token = "0x17000164")]
	protected override string info
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x26652A0", Offset = "0x26652A0", VA = "0x26652A0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x2665380", Offset = "0x2665380", VA = "0x2665380", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x2665514", Offset = "0x2665514", VA = "0x2665514")]
	public CheckBlockWarm()
	{
	}
}
[Token(Token = "0x2000223")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54990", Offset = "0xE54990")]
public class SetDiscoverBoardTarget : ActionTask
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	public BBParameter<WUnit> Target;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[BlackboardOnly]
	public BBParameter<GameObject> TargetObject;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<DiscoverBoard> DiscoverBoard;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<bool> IsTriggerBlock;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x2155C78", Offset = "0x2155C78", VA = "0x2155C78", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x2155F10", Offset = "0x2155F10", VA = "0x2155F10")]
	public SetDiscoverBoardTarget()
	{
	}
}
[Token(Token = "0x2000224")]
public class DiscoverBoard : MonoBehaviour
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HurtDefine Board;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWarm;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x24EA188", Offset = "0x24EA188", VA = "0x24EA188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x24EA1B8", Offset = "0x24EA1B8", VA = "0x24EA1B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x24EA1E8", Offset = "0x24EA1E8", VA = "0x24EA1E8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x24EA458", Offset = "0x24EA458", VA = "0x24EA458")]
	public DiscoverBoard()
	{
	}
}
[Token(Token = "0x2000225")]
public class BleedBuffData : IBuffData
{
	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int delayStartTime;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int delayDoCount;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayDoStep;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x29084CC", Offset = "0x29084CC", VA = "0x29084CC", Slot = "5")]
	public void Deserialize(string json)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x290857C", Offset = "0x290857C", VA = "0x290857C", Slot = "4")]
	public string Serialize()
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x29085E0", Offset = "0x29085E0", VA = "0x29085E0")]
	public BleedBuffData()
	{
	}
}
[Token(Token = "0x2000226")]
[AttributeAttribute(Name = "BuffAttribute", RVA = "0xE549C8", Offset = "0xE549C8")]
public class BleedBuff_Burn : BleedBuff
{
	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x29085E8", Offset = "0x29085E8", VA = "0x29085E8")]
	public BleedBuff_Burn(int id, short type, IBuffData buffData)
	{
	}
}
[Token(Token = "0x2000227")]
[AttributeAttribute(Name = "BuffAttribute", RVA = "0xE54A58", Offset = "0xE54A58")]
public class BleedBuff_General : BleedBuff
{
	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x29085EC", Offset = "0x29085EC", VA = "0x29085EC")]
	public BleedBuff_General(int id, short type, IBuffData buffData)
	{
	}
}
[Token(Token = "0x2000228")]
public class BleedBuff : BuffBase<BleedBuffData>
{
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54AE8", Offset = "0xE54AE8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuffResReferenceCollector.BuffEffectRoot root;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform temp;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Transform> <>9__0;

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x20F16F4", Offset = "0x20F16F4", VA = "0x20F16F4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x20F16FC", Offset = "0x20F16FC", VA = "0x20F16FC")]
		internal void <Start>b__0(Transform t)
		{
		}
	}

	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54AF8", Offset = "0xE54AF8")]
	private sealed class <DoHurt>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BleedBuff <>4__this;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WUnit <unit>5__3;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WUnit <unit_ack>5__4;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x20F1AC8", Offset = "0x20F1AC8", VA = "0x20F1AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x20F1B10", Offset = "0x20F1B10", VA = "0x20F1B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x20F17C8", Offset = "0x20F17C8", VA = "0x20F17C8")]
		[DebuggerHidden]
		public <DoHurt>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x20F17F4", Offset = "0x20F17F4", VA = "0x20F17F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x20F17F8", Offset = "0x20F17F8", VA = "0x20F17F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x20F1AD0", Offset = "0x20F1AD0", VA = "0x20F1AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54B08", Offset = "0xE54B08")]
	private sealed class <DoWait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BleedBuff <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x20F1C40", Offset = "0x20F1C40", VA = "0x20F1C40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x20F1C88", Offset = "0x20F1C88", VA = "0x20F1C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x20F1B18", Offset = "0x20F1B18", VA = "0x20F1B18")]
		[DebuggerHidden]
		public <DoWait>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x20F1B44", Offset = "0x20F1B44", VA = "0x20F1B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x20F1B48", Offset = "0x20F1B48", VA = "0x20F1B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x20F1C48", Offset = "0x20F1C48", VA = "0x20F1C48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine coroutine;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject effect;

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x2907BF4", Offset = "0x2907BF4", VA = "0x2907BF4")]
	public BleedBuff(int id, short type, IBuffData buffData)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x2907C68", Offset = "0x2907C68", VA = "0x2907C68", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x2908268", Offset = "0x2908268", VA = "0x2908268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6C72C", Offset = "0xE6C72C")]
	private IEnumerator DoHurt()
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x29082E0", Offset = "0x29082E0", VA = "0x29082E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6C78C", Offset = "0xE6C78C")]
	private IEnumerator DoWait()
	{
		return null;
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x2908358", Offset = "0x2908358", VA = "0x2908358", Slot = "15")]
	public override void Stop()
	{
	}
}
[Token(Token = "0x200022C")]
public static class BuffManager
{
	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static sbyte BUFF_STATE_ADD;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static sbyte BUFF_STATE_REMOVE;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static sbyte BUFF_STATE_UPDATE;

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x27CD8D4", Offset = "0x27CD8D4", VA = "0x27CD8D4")]
	public static int CreateBuffByServer(BuffTypeEnum buffTypeEnum, int attachId, int attackerId, IBuffData data)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x27CDC18", Offset = "0x27CDC18", VA = "0x27CDC18")]
	public static void UpdateBuffByServer(int buffId, int buffAttachId, IBuffData data)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x27CDDA4", Offset = "0x27CDDA4", VA = "0x27CDDA4")]
	public static void RemoveBuffByServer(int attachId, int buffId)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x27CDA44", Offset = "0x27CDA44", VA = "0x27CDA44")]
	public static void CreateBuff(BuffTypeEnum buffTypeEnum, int buffId, int attackerId, int hurterId, string buffdata)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x27CDCB0", Offset = "0x27CDCB0", VA = "0x27CDCB0")]
	public static void UpdateBuff(int buffId, int buffAttachId, string dataJson)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x27CDE14", Offset = "0x27CDE14", VA = "0x27CDE14")]
	public static void RemoveBuff(int buffId, int buffAttachId)
	{
	}
}
[Token(Token = "0x200022D")]
public class BuffResReferenceCollector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200022E")]
	public class ReferenceCollectorCell
	{
		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string key;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEngine.Object value;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<BuffEffectRoot> roots;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x20F225C", Offset = "0x20F225C", VA = "0x20F225C")]
		public ReferenceCollectorCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200022F")]
	public class BuffEffectRoot
	{
		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string root;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 pos_offset;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Vector3 rot_offset;

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x20F20E8", Offset = "0x20F20E8", VA = "0x20F20E8")]
		public BuffEffectRoot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000230")]
	public class ReferenceCollector
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public BuffTypeEnum buffType;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ReferenceCollectorCell> cells;

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x20F20F0", Offset = "0x20F20F0", VA = "0x20F20F0")]
		public ReferenceCollectorCell GetRC(string key)
		{
			return null;
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x20F21D8", Offset = "0x20F21D8", VA = "0x20F21D8")]
		public ReferenceCollector()
		{
		}
	}

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60278", Offset = "0xE60278")]
	private static BuffResReferenceCollector <Instance>k__BackingField;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<ReferenceCollector> referenceCollectors;

	[Token(Token = "0x17000169")]
	public static BuffResReferenceCollector Instance
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x27CDF64", Offset = "0x27CDF64", VA = "0x27CDF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C88C", Offset = "0xE6C88C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x27CDFB0", Offset = "0x27CDFB0", VA = "0x27CDFB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C89C", Offset = "0xE6C89C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x27CE004", Offset = "0x27CE004", VA = "0x27CE004")]
	public ReferenceCollector GetRC(BuffTypeEnum buffType)
	{
		return null;
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x27CE0E4", Offset = "0x27CE0E4", VA = "0x27CE0E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x27CE138", Offset = "0x27CE138", VA = "0x27CE138")]
	public BuffResReferenceCollector()
	{
	}
}
[Token(Token = "0x2000231")]
public enum BuffTypeEnum : short
{
	[Token(Token = "0x4000CA0")]
	BUFF_NONE,
	[Token(Token = "0x4000CA1")]
	BUFF_BLEED_BURN,
	[Token(Token = "0x4000CA2")]
	BUFF_BLEED_GENERAL
}
[Token(Token = "0x2000232")]
public class BornInteractable : MonoBehaviour
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60318", Offset = "0xE60318")]
	public List<Renderer> BornRender;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InitDissolveScale;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BornDissolveScale;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ChangeTime;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x27C8098", Offset = "0x27C8098", VA = "0x27C8098")]
	public void BronInitRender()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x27C82A0", Offset = "0x27C82A0", VA = "0x27C82A0")]
	public BornInteractable()
	{
	}
}
[Token(Token = "0x2000233")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54B18", Offset = "0xE54B18")]
public class BossDataController : MonoBehaviour
{
	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform FireTran01;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform FireTran02;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DamageMax;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60350", Offset = "0xE60350")]
	private float <Damage>k__BackingField;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60360", Offset = "0xE60360")]
	public List<int> SummonMonsterAreaIDList;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60398", Offset = "0xE60398")]
	public List<int> SummonFireballAreaIDList;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isFireHead;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE603D0", Offset = "0xE603D0")]
	private bool <IsFireHead>k__BackingField;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE603E0", Offset = "0xE603E0")]
	private (Vector3, Quaternion) defaultTrans01;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE6047C", Offset = "0xE6047C")]
	private (Vector3, Quaternion) defaultTrans02;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tweener tween01;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Tweener tween02;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WUnit Boss;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RagdollTools ragdollTools;

	[Token(Token = "0x1700016A")]
	public float Damage
	{
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x27CA608", Offset = "0x27CA608", VA = "0x27CA608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C8AC", Offset = "0xE6C8AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x27CA610", Offset = "0x27CA610", VA = "0x27CA610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C8BC", Offset = "0xE6C8BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public bool IsFireHead
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x27CA618", Offset = "0x27CA618", VA = "0x27CA618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C8CC", Offset = "0xE6C8CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x27CA620", Offset = "0x27CA620", VA = "0x27CA620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C8DC", Offset = "0xE6C8DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x27CA62C", Offset = "0x27CA62C", VA = "0x27CA62C")]
	public void Init(WUnit monster)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x27CA7EC", Offset = "0x27CA7EC", VA = "0x27CA7EC")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x27CAAA8", Offset = "0x27CAAA8", VA = "0x27CAAA8")]
	public void MonsterShow()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x27CAAF4", Offset = "0x27CAAF4", VA = "0x27CAAF4")]
	public void FirePointTurn()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x27CACF8", Offset = "0x27CACF8", VA = "0x27CACF8")]
	public void SetFireHead(bool isHead)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x27CAD04", Offset = "0x27CAD04", VA = "0x27CAD04")]
	public void AddFireHead(int damage)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x27CAD38", Offset = "0x27CAD38", VA = "0x27CAD38")]
	public BossDataController()
	{
	}
}
[Token(Token = "0x2000234")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54B78", Offset = "0xE54B78")]
public class IKConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000235")]
	public class IKConfig
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weapon_Group;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject IKRoot;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HeadAnchor;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverVR.Spine HeadSolver;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LeftHandAnchor;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverVR.Arm LeftHandSolver;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RightHandAnchor;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKSolverVR.Arm RightHandSolver;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x28449D8", Offset = "0x28449D8", VA = "0x28449D8")]
		public IKConfig()
		{
		}
	}

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRIK ik;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPoser leftHandPoser;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandPoser rightHandPoser;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private IKConfig[] iKConfigs;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IKConfig curIKConfig;

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x20AC990", Offset = "0x20AC990", VA = "0x20AC990")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x20AC85C", Offset = "0x20AC85C", VA = "0x20AC85C")]
	public void InitIK(e_weapon_group weapon_Group)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x20ACA78", Offset = "0x20ACA78", VA = "0x20ACA78")]
	private void SetIKSolver()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x20AC0E0", Offset = "0x20AC0E0", VA = "0x20AC0E0")]
	public void UpdateHMD(Vector3 vrCameraPos)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x20AC530", Offset = "0x20AC530", VA = "0x20AC530")]
	public void UpdateHand_L(Vector3 leftHandPos, Quaternion leftHandRot)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x20AC650", Offset = "0x20AC650", VA = "0x20AC650")]
	public void UpdateHand_R(Vector3 rightHandPos, Quaternion rightHandRot)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x20ACBFC", Offset = "0x20ACBFC", VA = "0x20ACBFC")]
	public IKConfigMono()
	{
	}
}
[Token(Token = "0x2000236")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54BD8", Offset = "0xE54BD8")]
public class MonsterBirth : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54C38", Offset = "0xE54C38")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonsterBirth <>4__this;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit monster;

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x205B8C4", Offset = "0x205B8C4", VA = "0x205B8C4")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x205B8CC", Offset = "0x205B8CC", VA = "0x205B8CC")]
		internal void <Init>b__0()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54C48", Offset = "0xE54C48")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit monster;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonsterBirth <>4__this;

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x205B7EC", Offset = "0x205B7EC", VA = "0x205B7EC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x205B7F4", Offset = "0x205B7F4", VA = "0x205B7F4")]
		internal void <Birth>b__0()
		{
		}
	}

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject birthEffect;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 Offset;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsShowRenderMeshChange;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MonsterShowTime;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsBirthDelay;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float BirthDelayTime;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject effect;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RagdollTools ragdollTools;

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x27A17F8", Offset = "0x27A17F8", VA = "0x27A17F8")]
	public void Init(WUnit monster)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x27A19C4", Offset = "0x27A19C4", VA = "0x27A19C4")]
	private void Birth(WUnit monster)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x27A1D08", Offset = "0x27A1D08", VA = "0x27A1D08")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x27A1DE4", Offset = "0x27A1DE4", VA = "0x27A1DE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x27A1ABC", Offset = "0x27A1ABC", VA = "0x27A1ABC")]
	public void BirthEffect(bool isParent = false, bool isAudio = true)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x27A1D0C", Offset = "0x27A1D0C", VA = "0x27A1D0C")]
	private void DetroyBirthEffect()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x27A1DE8", Offset = "0x27A1DE8", VA = "0x27A1DE8")]
	public MonsterBirth()
	{
	}
}
[Token(Token = "0x2000239")]
public class OtherPlayerMainController : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NameHUDObj;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UIRoot;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnitNormalNameHUD NameHUD;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string preName;

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x2309090", Offset = "0x2309090", VA = "0x2309090")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x23092C8", Offset = "0x23092C8", VA = "0x23092C8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x23090C0", Offset = "0x23090C0", VA = "0x23090C0")]
	private void InitUIView()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x23092D0", Offset = "0x23092D0", VA = "0x23092D0")]
	public void SetUIView(bool isShow)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x2309378", Offset = "0x2309378", VA = "0x2309378")]
	private void SetUIViewDir()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x2309588", Offset = "0x2309588", VA = "0x2309588")]
	public void SetShowNameText(bool isShow)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x2309630", Offset = "0x2309630", VA = "0x2309630")]
	private void UpdateSetName()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x230987C", Offset = "0x230987C", VA = "0x230987C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x23098AC", Offset = "0x23098AC", VA = "0x23098AC")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x23098D0", Offset = "0x23098D0", VA = "0x23098D0")]
	public OtherPlayerMainController()
	{
	}
}
[Token(Token = "0x200023A")]
public class PlayerDeadRagdollTools : MonoBehaviour
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modleObj;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader deadShader;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader liveShader;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string opacityShaderProperty;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RendererConfigMono rendererConfigMono;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cloneModleObj;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock prop;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int opacityID;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RendererConfigMono weaponRendererConfigMono;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RendererConfigMono weaponRendererConfigMono2;

	[Token(Token = "0x4000CE0")]
	private const float OPACITY_0 = 1f;

	[Token(Token = "0x4000CE1")]
	private const float OPACITY_1 = 0.5f;

	[Token(Token = "0x4000CE2")]
	private const float OPACITY_2 = 0f;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, Transform> childNodeDic;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60528", Offset = "0xE60528")]
	private bool <IsDie>k__BackingField;

	[Token(Token = "0x1700016C")]
	public bool IsDie
	{
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x23113DC", Offset = "0x23113DC", VA = "0x23113DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C8EC", Offset = "0xE6C8EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x23113E4", Offset = "0x23113E4", VA = "0x23113E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C8FC", Offset = "0xE6C8FC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x23113F0", Offset = "0x23113F0", VA = "0x23113F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x2309D68", Offset = "0x2309D68", VA = "0x2309D68")]
	public void Init(WUnit unit, GameObject weaponObj_r, [Optional] GameObject weaponObj_l)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x23115DC", Offset = "0x23115DC", VA = "0x23115DC")]
	private void InitModelInfo()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x2311830", Offset = "0x2311830", VA = "0x2311830")]
	private void InitWeaponInfo(GameObject obj_0, GameObject obj_1)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x230A6B0", Offset = "0x230A6B0", VA = "0x230A6B0")]
	public void Dead(int ragdollId, Vector3 dir, float hitForce, bool isSameCamp)
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x230AB74", Offset = "0x230AB74", VA = "0x230AB74")]
	public void Restore()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x2311C38", Offset = "0x2311C38", VA = "0x2311C38")]
	private void RecursiveCloneTransform(Transform target)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x2311AA8", Offset = "0x2311AA8", VA = "0x2311AA8")]
	private void SetOpacityProperty(Renderer[] renderers, float value, Shader shader)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x2311DA0", Offset = "0x2311DA0", VA = "0x2311DA0")]
	public PlayerDeadRagdollTools()
	{
	}
}
[Token(Token = "0x200023B")]
public class PlayerDeadTester : MonoBehaviour
{
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraController cameraController;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandTarget;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandTarget;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hitForce;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delay;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollTools ragdollTools;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject weapon;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string colliderName;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IKConfigMono iKConfigMono;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerDeadRagdollTools deadTools;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine coroutine;

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x2311DFC", Offset = "0x2311DFC", VA = "0x2311DFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x2312128", Offset = "0x2312128", VA = "0x2312128")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x23122B4", Offset = "0x23122B4", VA = "0x23122B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x231245C", Offset = "0x231245C", VA = "0x231245C")]
	private void RayHit(bool isSameCamp)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x23127AC", Offset = "0x23127AC", VA = "0x23127AC")]
	public PlayerDeadTester()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x23127C0", Offset = "0x23127C0", VA = "0x23127C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C90C", Offset = "0xE6C90C")]
	private void <RayHit>b__15_0()
	{
	}
}
[Token(Token = "0x200023C")]
public class PlayerModelDefine : MonoBehaviour
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_Player_Style style;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x23127F8", Offset = "0x23127F8", VA = "0x23127F8")]
	public PlayerModelDefine()
	{
	}
}
[Token(Token = "0x200023D")]
public class RendererConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200023E")]
	public class RendererConfig
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader[] shaders;

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x206034C", Offset = "0x206034C", VA = "0x206034C")]
		public RendererConfig()
		{
		}
	}

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] modleRenderers;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RendererConfig[] rendererConfigs;

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x2720AD4", Offset = "0x2720AD4", VA = "0x2720AD4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x2720BD4", Offset = "0x2720BD4", VA = "0x2720BD4")]
	public RendererConfigMono()
	{
	}
}
[Token(Token = "0x200023F")]
public class ReviveHPEffect : MonoBehaviour
{
	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject localReviveEffect;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject otherReviveEffect;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WUnit owner;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject effect;

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x272174C", Offset = "0x272174C", VA = "0x272174C")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x2721754", Offset = "0x2721754", VA = "0x2721754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x272182C", Offset = "0x272182C", VA = "0x272182C")]
	public void PlayReviveEffect()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x2721AF0", Offset = "0x2721AF0", VA = "0x2721AF0")]
	public ReviveHPEffect()
	{
	}
}
[Token(Token = "0x2000240")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54C58", Offset = "0xE54C58")]
public class UnitConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000241")]
	public class WunitEvent : UnityEvent<WUnit>
	{
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x2064664", Offset = "0x2064664", VA = "0x2064664")]
		public WunitEvent()
		{
		}
	}

	[Token(Token = "0x2000242")]
	private struct WeaponPivotCell
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public e_weapon_type type;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject pivot;
	}

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modelObject;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterMono characterBehaviour;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReviveHPEffect reviveHPEffect;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<WeaponPivotCell> weaponPivotList;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Renderer> RenderObjectList;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected WunitEvent InitAction;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected WunitEvent DestroyAction;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60578", Offset = "0xE60578")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MonsterAimTarget;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<int> MonsterAroundList;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x1700016D")]
	public WUnit Owner
	{
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x2369C80", Offset = "0x2369C80", VA = "0x2369C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C91C", Offset = "0xE6C91C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x2369C88", Offset = "0x2369C88", VA = "0x2369C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6C92C", Offset = "0xE6C92C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x2369C90", Offset = "0x2369C90", VA = "0x2369C90")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x2369DCC", Offset = "0x2369DCC", VA = "0x2369DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x236A27C", Offset = "0x236A27C", VA = "0x236A27C")]
	public GameObject GetWeaponPivotByType(e_weapon_type type)
	{
		return null;
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x236A460", Offset = "0x236A460", VA = "0x236A460")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x236A4C0", Offset = "0x236A4C0", VA = "0x236A4C0")]
	public UnitConfigMono()
	{
	}
}
[Token(Token = "0x2000243")]
public class UnityDefine
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Layer_Default;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int Layer_Bullet;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int Layer_Terrain;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int Layer_HurtCharacter;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int Layer_PlayerHurtCharacter;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int Layer_PhysicsItem;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int Layer_Video;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int Layer_GameEnd;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int Layer_UI;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int Layer_Weapon;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Layer_WeaponInteraction;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Layer_Interactable_Coll;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int Layer_Interactor;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int Layer_Interactable_Ray;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int Layer_Wall;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int Layer_MoveBorder;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int Layer_NoDisplay;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int BulletHitLayerMask;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int BulletHitLayerMask_Player;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int PlayerBulletAOEHitLayerMask;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int MonsterBulletAOEHitLayerMask;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int GearCheckLayerMask;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int CollisionLayerMask;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int WeaponLineHitLayerMask;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int PlayerVideoMask;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int GameStartLayerMask;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int GameEndLayerMask;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static int MonsterDetection;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int Layer_SceneEvent;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static int Layer_Gear;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int Layer_Arsenal;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static int Layer_ModelArea;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int ModelArea;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int Layer_BattleRoomFloor;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int Layer_BattleRoomSign;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int Layer_Character;

	[Token(Token = "0x4000D2D")]
	public const string Tag_Player = "Player";

	[Token(Token = "0x4000D2E")]
	public const string Tag_Monster = "Monster";

	[Token(Token = "0x4000D2F")]
	public const string Tag_Cement = "Cement";

	[Token(Token = "0x4000D30")]
	public const string Tag_Wood = "Wood";

	[Token(Token = "0x4000D31")]
	public const string Tag_Metal = "Metal";

	[Token(Token = "0x4000D32")]
	public const string Tag_Sandbag = "Sandbag";

	[Token(Token = "0x4000D33")]
	public const string Tag_TimeCtrl = "TimeCtrl";

	[Token(Token = "0x4000D34")]
	public const string Tag_Headshot = "Headshot";

	[Token(Token = "0x4000D35")]
	public const string Tag_Meat = "Meat";

	[Token(Token = "0x4000D36")]
	public const string Tag_Floor = "MotionFloor";

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int[] NavMeshAreaMask;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int Walkable;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int NotWalkable;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static int Jump;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x23715B0", Offset = "0x23715B0", VA = "0x23715B0")]
	public static int GetRoomIndexToArea(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x237167C", Offset = "0x237167C", VA = "0x237167C")]
	public static int GetRoomIndexToAreaMask(int area, bool includeWalk = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x2371710", Offset = "0x2371710", VA = "0x2371710")]
	public static int GetDefulatAreaMask()
	{
		return default(int);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x2371790", Offset = "0x2371790", VA = "0x2371790")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x2371C8C", Offset = "0x2371C8C", VA = "0x2371C8C")]
	public UnityDefine()
	{
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54CB8", Offset = "0xE54CB8")]
public class WeaponPivot : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000245")]
	private struct WeaponPivotCell
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public e_weapon_type type;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject pivot;
	}

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<WeaponPivotCell> weaponPivotList;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x29889D0", Offset = "0x29889D0", VA = "0x29889D0")]
	public GameObject GetWeaponPivotByType(e_weapon_type type)
	{
		return null;
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x2988BB4", Offset = "0x2988BB4", VA = "0x2988BB4")]
	public WeaponPivot()
	{
	}
}
[Token(Token = "0x2000246")]
public class PreFightCutSceneManager : Singleton<PreFightCutSceneManager>
{
	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool IsDownAddering;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool IsFirstOnlyFinish;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 realPlayerPosition;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 setPlayerPosition;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 beginPlayerPosition;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion downDir;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MoveSpeed;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float MoveSpeedGDown;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float RunningMoveSpeed;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isDropOutBack;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 dropPrePos;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion dropPreRot;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 dropPreCamLocalPos;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion dropPreCamLocalRot;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 dropPreCamPos;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion dropPreCamRot;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 dropPlayerDir;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 tmpPos;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float dropFadeBeginDis;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float dropFadeInTime;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float dropFadeOutTime;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isFadeIn;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool isFadeInFin;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool IsDownAdderFinish;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float DownLen;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine timeDelayDownCort;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioEvent BeginAudio;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine BeginObj;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x270F4EC", Offset = "0x270F4EC", VA = "0x270F4EC")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x270F6C8", Offset = "0x270F6C8", VA = "0x270F6C8")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x270F74C", Offset = "0x270F74C", VA = "0x270F74C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x270F6D0", Offset = "0x270F6D0", VA = "0x270F6D0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x270F994", Offset = "0x270F994", VA = "0x270F994")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x270FA9C", Offset = "0x270FA9C", VA = "0x270FA9C")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x270FD14", Offset = "0x270FD14", VA = "0x270FD14")]
	private void SetOtherPlayerVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x270FEBC", Offset = "0x270FEBC", VA = "0x270FEBC")]
	private void CharTeleporter(int id)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x270F7D4", Offset = "0x270F7D4", VA = "0x270F7D4")]
	private void SetSound(bool active)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x270FEE4", Offset = "0x270FEE4", VA = "0x270FEE4")]
	private void BeginDownAdderFinish()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x2710640", Offset = "0x2710640", VA = "0x2710640")]
	private void DownAdder()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x271064C", Offset = "0x271064C", VA = "0x271064C")]
	private void DownAdderDown()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x2710714", Offset = "0x2710714", VA = "0x2710714")]
	private void DownAdderEnd()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x270F9B4", Offset = "0x270F9B4", VA = "0x270F9B4")]
	private void DownAdderUpdate()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x27107DC", Offset = "0x27107DC", VA = "0x27107DC")]
	private void DropFadeInFinish()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x270FAC4", Offset = "0x270FAC4", VA = "0x270FAC4")]
	private void DownAdderLateUpdate()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x27101BC", Offset = "0x27101BC", VA = "0x27101BC")]
	private GameObject GetPlayerObj()
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x2710378", Offset = "0x2710378", VA = "0x2710378")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x2710528", Offset = "0x2710528", VA = "0x2710528")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x271071C", Offset = "0x271071C", VA = "0x271071C")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x27107E8", Offset = "0x27107E8", VA = "0x27107E8")]
	public PreFightCutSceneManager()
	{
	}
}
[Token(Token = "0x2000247")]
public class DieOutConfig : MonoBehaviour
{
	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MonsterDataController bossMainController;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool IsOpen;

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x24E9A90", Offset = "0x24E9A90", VA = "0x24E9A90")]
	public void Init(MonsterDataController BossMainController)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x24E9AA0", Offset = "0x24E9AA0", VA = "0x24E9AA0")]
	public void DieOut()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x24E9B94", Offset = "0x24E9B94", VA = "0x24E9B94")]
	public void HitShell()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x24E9C70", Offset = "0x24E9C70", VA = "0x24E9C70")]
	public DieOutConfig()
	{
	}
}
[Token(Token = "0x2000248")]
public class DropItem : MonoBehaviour
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ItemType;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int displayName;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int type;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int id;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnitNormalNameHUD Hud;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject effect;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject effect_flash;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject effect_delete;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public XROffsetGrabbable XROffsetGrabbable;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInit;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isActive;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float DelayActiveTime;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayActiveRunningTime;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float DelayDestoryTime;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float delayDestoryRunningTime;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float DelayFlashTime;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float delayDestoryingRunningTime;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isDelayDesotying;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isDelayDesoty;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE605B8", Offset = "0xE605B8")]
	public bool IsFly;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float CheckDis;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float moveTime;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float middlePointAdd;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timer;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 fromPoint;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 middlePoint;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 endPoint;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WUnit unit;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isMove;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float RayTime;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SwitchInfoData audioSwitch;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent GetGoldAudio;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject hand_R;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject hand_L;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine WwiseDefine;

	[Token(Token = "0x1700016E")]
	public bool IsActive
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x24EB4E0", Offset = "0x24EB4E0", VA = "0x24EB4E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016F")]
	public bool IsCanTrigger
	{
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x24EB4E8", Offset = "0x24EB4E8", VA = "0x24EB4E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x24EB518", Offset = "0x24EB518", VA = "0x24EB518", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x24EB6C8", Offset = "0x24EB6C8", VA = "0x24EB6C8", Slot = "5")]
	public virtual void Activate()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x24EB828", Offset = "0x24EB828", VA = "0x24EB828")]
	public void Shake_Hand(XRBaseInteractor xR)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x24EB900", Offset = "0x24EB900", VA = "0x24EB900", Slot = "6")]
	public virtual void Deactivate()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x24EBA48", Offset = "0x24EBA48", VA = "0x24EBA48", Slot = "7")]
	public virtual void Trigger(int uid)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x24EBD4C", Offset = "0x24EBD4C", VA = "0x24EBD4C", Slot = "8")]
	public virtual void DoDestroy()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x24EBEA0", Offset = "0x24EBEA0", VA = "0x24EBEA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x24EBF38", Offset = "0x24EBF38", VA = "0x24EBF38")]
	private void DelayActiveUpdate()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x24EC610", Offset = "0x24EC610", VA = "0x24EC610")]
	private void DelayDestoryUpdate()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x24EC788", Offset = "0x24EC788", VA = "0x24EC788")]
	private void DelayDestoryingUpdate()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x24EC070", Offset = "0x24EC070", VA = "0x24EC070")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x24EC8E8", Offset = "0x24EC8E8", VA = "0x24EC8E8")]
	public void BackToThePlayer()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x24ECB4C", Offset = "0x24ECB4C", VA = "0x24ECB4C")]
	public void PickUp()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x24ECC1C", Offset = "0x24ECC1C", VA = "0x24ECC1C")]
	public void ShowHand(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x24ECDC0", Offset = "0x24ECDC0", VA = "0x24ECDC0")]
	public void HideHand(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x24EBB84", Offset = "0x24EBB84", VA = "0x24EBB84")]
	private void MoveToTarget(int uid)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x24EC47C", Offset = "0x24EC47C", VA = "0x24EC47C")]
	private void DoMove()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x24ECF5C", Offset = "0x24ECF5C", VA = "0x24ECF5C")]
	public Vector3 GetCurvePoint(Vector3 point0, Vector3 point1, Vector3 point2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x24EC314", Offset = "0x24EC314", VA = "0x24EC314")]
	private void GetOwnerDis()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x24ED020", Offset = "0x24ED020", VA = "0x24ED020")]
	public DropItem()
	{
	}
}
[Token(Token = "0x2000249")]
public class DropInfo
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int type;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int count;

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x24EB4D8", Offset = "0x24EB4D8", VA = "0x24EB4D8")]
	public DropInfo()
	{
	}
}
[Token(Token = "0x200024A")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54D18", Offset = "0xE54D18")]
public class DropItemUnitConfig : MonoBehaviour
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE605F0", Offset = "0xE605F0")]
	public Vector3 FragmentDropOffset;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60628", Offset = "0xE60628")]
	public Vector3 ItemDropOffset;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> dropTypeList;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> dropRatioList;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<int> dropCountInfos;

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x24ED050", Offset = "0x24ED050", VA = "0x24ED050")]
	public void DoInit(List<int> DropTypeList, List<int> DropRatioList, List<int> dropCountList, List<int> dropWeightList)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x24ED1C4", Offset = "0x24ED1C4", VA = "0x24ED1C4")]
	public void DropItem()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x24ED69C", Offset = "0x24ED69C", VA = "0x24ED69C")]
	public DropItemUnitConfig()
	{
	}
}
[Token(Token = "0x200024B")]
public class ObjectManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200024C")]
	public class TipFristState
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_GuideTip_Type e_GuideTip;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsFrist;

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x205D130", Offset = "0x205D130", VA = "0x205D130")]
		public TipFristState()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200024D")]
	public class ConveySwitchTrans
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SwitchID;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isEnter;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConveyTran;

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x205D128", Offset = "0x205D128", VA = "0x205D128")]
		public ConveySwitchTrans()
		{
		}
	}

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<DropItem> DropItemRes;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Weapon> AcqureWeapon;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> ModelWeapon;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<TipFristState> TipFristStates;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GuideController> guideControllerList;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ConveySwitchTrans> conveySwitchTransList;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60660", Offset = "0xE60660")]
	public List<Transform> BossAttackLeftPointList;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Transform> BossAttackRightPointList;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<Decal> Decals;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static Action<int, bool> WarningBomb;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static Action<int, bool> WarningSand;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ObjectManager _instance;

	[Token(Token = "0x17000170")]
	public static ObjectManager Instance
	{
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x2304F00", Offset = "0x2304F00", VA = "0x2304F00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x2304F4C", Offset = "0x2304F4C", VA = "0x2304F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x2304FA0", Offset = "0x2304FA0", VA = "0x2304FA0")]
	public void SetMonsterBomb(int unitid, bool IsBomb)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x2305030", Offset = "0x2305030", VA = "0x2305030")]
	public void SetMonsterSand(int unitid, bool IsBomb)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x23050C0", Offset = "0x23050C0", VA = "0x23050C0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x2305214", Offset = "0x2305214", VA = "0x2305214")]
	public ObjectManager()
	{
	}
}
[Token(Token = "0x200024E")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54D78", Offset = "0xE54D78")]
public class AnimationDefine : MonoBehaviour
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationDefineEventCallBack animationEventCallBack;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject audioSource;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationEventData[] defines;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<UnityEngine.Object> resList;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Transform> boneDic;

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x212CEF4", Offset = "0x212CEF4", VA = "0x212CEF4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x212DC54", Offset = "0x212DC54", VA = "0x212DC54")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x212D218", Offset = "0x212D218", VA = "0x212D218")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x212D9B4", Offset = "0x212D9B4", VA = "0x212D9B4")]
	private void InitEvent()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x212D7DC", Offset = "0x212D7DC", VA = "0x212D7DC")]
	private void InitBoneDic()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x212E430", Offset = "0x212E430", VA = "0x212E430")]
	private Transform GetBoneByPath(string path)
	{
		return null;
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x212E518", Offset = "0x212E518", VA = "0x212E518")]
	private void OnAnimationCB(AnimationEventData.EventData cell)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x212E8EC", Offset = "0x212E8EC", VA = "0x212E8EC")]
	public AnimationDefine()
	{
	}
}
[Token(Token = "0x200024F")]
public class AnimationDefineEventCallBack : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	private class timeCell
	{
		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationEventData.EventData vfx;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x20F04D0", Offset = "0x20F04D0", VA = "0x20F04D0")]
		public void Init(AnimationEventData.EventData _vfx, float _time)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x20F0498", Offset = "0x20F0498", VA = "0x20F0498")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x20F0458", Offset = "0x20F0458", VA = "0x20F0458")]
		public timeCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54DD8", Offset = "0xE54DD8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<timeCell> <>9__11_0;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<timeCell> <>9__11_1;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<AnimationEventData.EventData> <>9__17_0;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<AnimationEventData.EventData> <>9__18_0;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x20F03F8", Offset = "0x20F03F8", VA = "0x20F03F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x20F0400", Offset = "0x20F0400", VA = "0x20F0400")]
		internal timeCell <Init>b__11_0()
		{
			return null;
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x20F0460", Offset = "0x20F0460", VA = "0x20F0460")]
		internal void <Init>b__11_1(timeCell cell)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x20F04C8", Offset = "0x20F04C8", VA = "0x20F04C8")]
		internal void <UnRegisterAllAnimationEffectCB>b__17_0(AnimationEventData.EventData <p0>)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x20F04CC", Offset = "0x20F04CC", VA = "0x20F04CC")]
		internal void <.ctor>b__18_0(AnimationEventData.EventData <p0>)
		{
		}
	}

	[Token(Token = "0x4000DA1")]
	private const string OnAnimationEffectEventName = "OnAnimationEvent";

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<AnimationEventData.EventData> animationEffectEventCB;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, List<AnimationEventData.EventData>> animationDefineVFXCellDic;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastAni;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string curAni;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HashSet<AnimationEventData.EventData> lastEventData;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ANI_EVEVT_START_TIME;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CacheUtils.ObjectPool<timeCell> timecellPool;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<timeCell> timerList;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x212D2B0", Offset = "0x212D2B0", VA = "0x212D2B0")]
	public void Init(Animator _animator)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x212E244", Offset = "0x212E244", VA = "0x212E244")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x212EB2C", Offset = "0x212EB2C", VA = "0x212EB2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x212EC4C", Offset = "0x212EC4C", VA = "0x212EC4C")]
	private void OnAnimationEvent(string aniName)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x212E9C0", Offset = "0x212E9C0", VA = "0x212E9C0")]
	private void UpdateAnimationEvent(float deltaTime)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x212E2F0", Offset = "0x212E2F0", VA = "0x212E2F0")]
	public void RegisterAnimationEffectCB(AnimationEventData.EventData cell)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x212E020", Offset = "0x212E020", VA = "0x212E020")]
	public void UnRegisterAllAnimationEffectCB()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x212EFB4", Offset = "0x212EFB4", VA = "0x212EFB4")]
	public AnimationDefineEventCallBack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000252")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE54DE8", Offset = "0xE54DE8")]
public class AnimationEventData : ScriptableObject
{
	[Token(Token = "0x2000253")]
	public enum Type
	{
		[Token(Token = "0x4000DB5")]
		Effect,
		[Token(Token = "0x4000DB6")]
		Audio
	}

	[Serializable]
	[Token(Token = "0x2000254")]
	public class EventData
	{
		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int aniFrame;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isLoop;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string aniName;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string boneNode;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 offsetPos;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 offsetRot;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.Object prefabs;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isEnableLifeTime;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lifeTime;

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x20F0508", Offset = "0x20F0508", VA = "0x20F0508")]
		public EventData()
		{
		}
	}

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventData> defineCells;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int modelId;

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x212F1F8", Offset = "0x212F1F8", VA = "0x212F1F8")]
	public AnimationEventData()
	{
	}
}
[Token(Token = "0x2000255")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DespawnDelay;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnable;

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x28FFB38", Offset = "0x28FFB38", VA = "0x28FFB38")]
	public void AutoDestroyInit(float _delay)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x28FFB4C", Offset = "0x28FFB4C", VA = "0x28FFB4C")]
	public void Init(float _delay)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x28FFB60", Offset = "0x28FFB60", VA = "0x28FFB60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x28FFC34", Offset = "0x28FFC34", VA = "0x28FFC34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x28FFC3C", Offset = "0x28FFC3C", VA = "0x28FFC3C")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x2000256")]
public class BuildingsEffectProxy : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000257")]
	public struct BuildingsEffectProxyCell
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tag;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchInfoData switchEvent;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] effects;
	}

	[Serializable]
	[Token(Token = "0x2000258")]
	public class WeaponEffectProxyCell
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type e_Weapon_Type;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingsEffectProxyCell[] effectCells;

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x20F22E0", Offset = "0x20F22E0", VA = "0x20F22E0")]
		public WeaponEffectProxyCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000259")]
	public struct DecalProxyCell
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BuildingsEffectProxy _Instance;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WeaponEffectProxyCell> effectCells2;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public QuadDecalPool bulletHoleEffect;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Dictionary<string, BuildingsEffectProxyCell>> effectCellDic2;

	[Token(Token = "0x17000171")]
	public static BuildingsEffectProxy Instance
	{
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x27CE1BC", Offset = "0x27CE1BC", VA = "0x27CE1BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x27CE208", Offset = "0x27CE208", VA = "0x27CE208")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x27CE25C", Offset = "0x27CE25C", VA = "0x27CE25C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x27CE438", Offset = "0x27CE438", VA = "0x27CE438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x27CE76C", Offset = "0x27CE76C", VA = "0x27CE76C")]
	public void ShowHitEffect(e_weapon_type weapon_Type, GameObject _hitObj, Vector3 _hitPos, Vector3 _hitNormal, bool _isShowHole = false)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x27CEBA8", Offset = "0x27CEBA8", VA = "0x27CEBA8")]
	private void PlayAudio(AudioEvent audioEvent, Vector3 _hitPos, SwitchInfoData switchEvent)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x27CEA34", Offset = "0x27CEA34", VA = "0x27CEA34")]
	private void ShowMaterialEffect(GameObject[] _hitEffects, GameObject _hitObj, Vector3 _hitPos, Quaternion _hitRot)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x27CECE8", Offset = "0x27CECE8", VA = "0x27CECE8")]
	private EffectDefine ShowMaterialEffect(GameObject _hitEffect, GameObject _hitObj, Vector3 _hitPos, Quaternion _hitRot)
	{
		return null;
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x27CEE68", Offset = "0x27CEE68", VA = "0x27CEE68")]
	public BuildingsEffectProxy()
	{
	}
}
[Token(Token = "0x200025A")]
public class BulletScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x200025B")]
	public enum EAxis
	{
		[Token(Token = "0x4000DE1")]
		X,
		[Token(Token = "0x4000DE2")]
		Y,
		[Token(Token = "0x4000DE3")]
		Z
	}

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EAxis MoveAxis;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float BulletLength;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float BulletStretchFrame;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BulletStrinkFrame;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float BulletKeepFrame;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BulletScaleFactor;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mBulletStretchTime;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float mBulletStrinkTime;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mBulletKeepTime;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mStretchSpeed;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mStrinkSpeed;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mCurrentLength;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mTime;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float mCurrentScale;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 mFront;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x27D953C", Offset = "0x27D953C", VA = "0x27D953C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x27D96B4", Offset = "0x27D96B4", VA = "0x27D96B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x27D9900", Offset = "0x27D9900", VA = "0x27D9900")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x27D96BC", Offset = "0x27D96BC", VA = "0x27D96BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x27D9928", Offset = "0x27D9928", VA = "0x27D9928")]
	public BulletScaleAnimation()
	{
	}
}
[Token(Token = "0x200025C")]
public class EffectDefine : MonoBehaviour
{
	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x24EF6C0", Offset = "0x24EF6C0", VA = "0x24EF6C0")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x24EF6C4", Offset = "0x24EF6C4", VA = "0x24EF6C4")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x24EF6C8", Offset = "0x24EF6C8", VA = "0x24EF6C8")]
	public EffectDefine()
	{
	}
}
[Token(Token = "0x200025D")]
public class AlphaTimeLine : MaterialPropTimeLine
{
	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Begin;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float End;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mCurve;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color RGB;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int TintColorCode;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int TintColorArrayCode;

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x212BB78", Offset = "0x212BB78", VA = "0x212BB78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x212BC24", Offset = "0x212BC24", VA = "0x212BC24", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x212BCD0", Offset = "0x212BCD0", VA = "0x212BCD0")]
	public AlphaTimeLine()
	{
	}
}
[Token(Token = "0x200025E")]
public class MaterialProp : MonoBehaviour
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer mRend;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mMatProp;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x279B048", Offset = "0x279B048", VA = "0x279B048")]
	public void Init(Renderer rend)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x279B0C8", Offset = "0x279B0C8", VA = "0x279B0C8")]
	public MaterialPropertyBlock GetMatProp()
	{
		return null;
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x279B0D0", Offset = "0x279B0D0", VA = "0x279B0D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x279B164", Offset = "0x279B164", VA = "0x279B164")]
	public MaterialProp()
	{
	}
}
[Token(Token = "0x200025F")]
public class MaterialPropTimeLine : TimeLineBase
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialProp mMatProp;

	[Token(Token = "0x17000172")]
	protected MaterialPropertyBlock MatPropBlock
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x279B27C", Offset = "0x279B27C", VA = "0x279B27C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x279B16C", Offset = "0x279B16C", VA = "0x279B16C")]
	public void CreateMaterialProperty(Renderer rend)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x279B308", Offset = "0x279B308", VA = "0x279B308")]
	public MaterialPropTimeLine()
	{
	}
}
[Token(Token = "0x2000260")]
public class RotateTimeLine : TimeLineBase
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 mEndVector3;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 mStartVector3;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mXAnimationCurve;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve mYAnimationCurve;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve mZAnimationCurve;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool mXAngle;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool mYAngle;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool mZAngle;

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x24BBA7C", Offset = "0x24BBA7C", VA = "0x24BBA7C", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x24BBCC0", Offset = "0x24BBCC0", VA = "0x24BBCC0")]
	public RotateTimeLine()
	{
	}
}
[Token(Token = "0x2000261")]
public class ScaleTimeLine : MonoBehaviour
{
	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve XAsixScale;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve YAsixScale;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ZAsixScale;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve ALLAsixScale;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ScaleAll;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool Loop;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DelayTime;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScaleTime;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Scales;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mTime;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 mCurScale;

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x24BCF6C", Offset = "0x24BCF6C", VA = "0x24BCF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x24BCFA8", Offset = "0x24BCFA8", VA = "0x24BCFA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x24BCFF8", Offset = "0x24BCFF8", VA = "0x24BCFF8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x24BCFFC", Offset = "0x24BCFFC", VA = "0x24BCFFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x24BD1E4", Offset = "0x24BD1E4", VA = "0x24BD1E4")]
	public ScaleTimeLine()
	{
	}
}
[Token(Token = "0x2000262")]
public class SpriteTimeLine : MaterialPropTimeLine
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string UVParameterName;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float TileX;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float TileY;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mUVCurve;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool RandomEndSprite;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int UVParameterID;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float EndSpriteNum;

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x21656D0", Offset = "0x21656D0", VA = "0x21656D0")]
	private void OnReStart()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x2165718", Offset = "0x2165718", VA = "0x2165718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x216586C", Offset = "0x216586C", VA = "0x216586C", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x2165960", Offset = "0x2165960", VA = "0x2165960")]
	public SpriteTimeLine()
	{
	}
}
[Token(Token = "0x2000263")]
public class TimeLineBase : MonoBehaviour
{
	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Action mReStartCallback;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Loop;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool LoopIgnoreDelayTime;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DelayTime;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScaleTime;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LoopSecondStartTime;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float mTime;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsRotate;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool IsStop;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x2AB7800", Offset = "0x2AB7800", VA = "0x2AB7800", Slot = "4")]
	public virtual void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x2AB7804", Offset = "0x2AB7804", VA = "0x2AB7804", Slot = "5")]
	public virtual void OnMonoEnable()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x2AB780C", Offset = "0x2AB780C", VA = "0x2AB780C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x2AB7850", Offset = "0x2AB7850", VA = "0x2AB7850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x2AB7964", Offset = "0x2AB7964", VA = "0x2AB7964")]
	public TimeLineBase()
	{
	}
}
[Token(Token = "0x2000264")]
public class TransformTimeLine : TimeLineBase
{
	[Token(Token = "0x2000265")]
	public enum TranType
	{
		[Token(Token = "0x4000E1C")]
		TRAN_SCALE,
		[Token(Token = "0x4000E1D")]
		TRAN_POS
	}

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TranType mTranType;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve XAsixScale;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve YAsixScale;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve ZAsixScale;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve ALLAsixScale;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool ScaleAll;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RandomEnd;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 Begin;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 End;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 ReStartEnd;

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x2ABAE7C", Offset = "0x2ABAE7C", VA = "0x2ABAE7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x2ABAF5C", Offset = "0x2ABAF5C", VA = "0x2ABAF5C")]
	private void OnReStart()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x2ABB03C", Offset = "0x2ABB03C", VA = "0x2ABB03C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x2ABB048", Offset = "0x2ABB048", VA = "0x2ABB048", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x2ABB244", Offset = "0x2ABB244", VA = "0x2ABB244")]
	public void StopLoop()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x2ABB2B4", Offset = "0x2ABB2B4", VA = "0x2ABB2B4")]
	public void StartLoop()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x2ABB380", Offset = "0x2ABB380", VA = "0x2ABB380")]
	public TransformTimeLine()
	{
	}
}
[Token(Token = "0x2000266")]
public class UVAnimTimeLine : SpriteTimeLine
{
	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float SpeedU;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float SpeedV;

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x23690C4", Offset = "0x23690C4", VA = "0x23690C4", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x2369194", Offset = "0x2369194", VA = "0x2369194")]
	public UVAnimTimeLine()
	{
	}
}
[Token(Token = "0x2000267")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x24F80CC", Offset = "0x24F80CC", VA = "0x24F80CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x24F80FC", Offset = "0x24F80FC", VA = "0x24F80FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x24F81B0", Offset = "0x24F81B0", VA = "0x24F81B0")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x2000268")]
public class RunParticle : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54E54", Offset = "0xE54E54")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ParticleSystem> <>9__0_0;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<ParticleSystem> <>9__1_0;

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x2060DB0", Offset = "0x2060DB0", VA = "0x2060DB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x2060DB8", Offset = "0x2060DB8", VA = "0x2060DB8")]
		internal void <OnEnable>b__0_0(ParticleSystem p)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x2060DD4", Offset = "0x2060DD4", VA = "0x2060DD4")]
		internal void <OnDisable>b__1_0(ParticleSystem p)
		{
		}
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x24BC988", Offset = "0x24BC988", VA = "0x24BC988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x24BCAA8", Offset = "0x24BCAA8", VA = "0x24BCAA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x24BCBC8", Offset = "0x24BCBC8", VA = "0x24BCBC8")]
	public RunParticle()
	{
	}
}
[Token(Token = "0x200026A")]
public class TransparentScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowFrame;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float KeepFrame;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HideFrame;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mShowTime;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float mKeepTime;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mHideTime;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTime;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mMaterial;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int TintColorCode;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color mCurrentMaterialColor;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mAlpha;

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x2ABB4A4", Offset = "0x2ABB4A4", VA = "0x2ABB4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x2ABB598", Offset = "0x2ABB598", VA = "0x2ABB598")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x2ABB5C8", Offset = "0x2ABB5C8", VA = "0x2ABB5C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x2ABB5B0", Offset = "0x2ABB5B0", VA = "0x2ABB5B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x2ABB678", Offset = "0x2ABB678", VA = "0x2ABB678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x2ABB740", Offset = "0x2ABB740", VA = "0x2ABB740")]
	public TransparentScaleAnimation()
	{
	}
}
[Token(Token = "0x200026B")]
public class UVOffsetAnimation : MonoBehaviour
{
	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float XSpeed;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float YSpeed;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float xOffset;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float yOffset;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mainMaterial;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTime;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initSucceed;

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x236919C", Offset = "0x236919C", VA = "0x236919C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x2369288", Offset = "0x2369288", VA = "0x2369288")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x2369370", Offset = "0x2369370", VA = "0x2369370")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x23692DC", Offset = "0x23692DC", VA = "0x23692DC")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x2369420", Offset = "0x2369420", VA = "0x2369420")]
	public UVOffsetAnimation()
	{
	}
}
[Token(Token = "0x200026C")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54E64", Offset = "0xE54E64")]
	private sealed class <UpdateCorutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x17000173")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x2064614", Offset = "0x2064614", VA = "0x2064614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x206465C", Offset = "0x206465C", VA = "0x206465C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x20644E8", Offset = "0x20644E8", VA = "0x20644E8")]
		[DebuggerHidden]
		public <UpdateCorutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x2064514", Offset = "0x2064514", VA = "0x2064514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x2064518", Offset = "0x2064518", VA = "0x2064518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x206461C", Offset = "0x206461C", VA = "0x206461C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInizialised;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int index;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int allCount;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float deltaFps;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isVisible;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x2369438", Offset = "0x2369438", VA = "0x2369438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x23694B0", Offset = "0x23694B0", VA = "0x23694B0")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x23696F4", Offset = "0x23696F4", VA = "0x23696F4")]
	private void Play()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x2369800", Offset = "0x2369800", VA = "0x2369800")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x236982C", Offset = "0x236982C", VA = "0x236982C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x2369864", Offset = "0x2369864", VA = "0x2369864")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x2369788", Offset = "0x2369788", VA = "0x2369788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6C93C", Offset = "0xE6C93C")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x23698C4", Offset = "0x23698C4", VA = "0x23698C4")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x23699D4", Offset = "0x23699D4", VA = "0x23699D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x2369A94", Offset = "0x2369A94", VA = "0x2369A94")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x200026E")]
public class ExploderConfig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54E74", Offset = "0xE54E74")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ExploderObject.OnExplosion <>9__9_0;

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x20F6538", Offset = "0x20F6538", VA = "0x20F6538")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x20F6540", Offset = "0x20F6540", VA = "0x20F6540")]
		internal void <Expolder>b__9_0(float time, ExploderObject.ExplosionState state)
		{
		}
	}

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] explodeParts;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int targetFragments;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fragmentsForceRadius;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Force;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool IsOpen;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent ExploderEvent;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] tempFragmentColliders;

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x24F42F4", Offset = "0x24F42F4", VA = "0x24F42F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x24F4300", Offset = "0x24F4300", VA = "0x24F4300")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x24F430C", Offset = "0x24F430C", VA = "0x24F430C")]
	public void Expolder(Vector3 point, Vector3 dir, float force, DeactivateOptions deactivateOptions, FadeoutOptions fadeoutOptions, float fadeoutValue, [Optional] Action action)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x24F473C", Offset = "0x24F473C", VA = "0x24F473C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6C9EC", Offset = "0xE6C9EC")]
	public void Set()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x24F47B0", Offset = "0x24F47B0", VA = "0x24F47B0")]
	public ExploderConfig()
	{
	}
}
[Token(Token = "0x2000270")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE54E84", Offset = "0xE54E84")]
public class ExploderTools : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE54EE4", Offset = "0xE54EE4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderConfig exploderConfig;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dir;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float force;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExploderTools <>4__this;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x20F6644", Offset = "0x20F6644", VA = "0x20F6644")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x20F664C", Offset = "0x20F664C", VA = "0x20F664C")]
		internal void <Exploder>b__0()
		{
		}
	}

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ExploderConfig> exploderConfigs;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> parts;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public DeactivateOptions deactivateOptions;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FadeoutOptions FadeoutOptions;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float brokenDelay;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine coroutine;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isOpen;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60708", Offset = "0xE60708")]
	public Transform ExploderDataTrn;

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x24F4EC4", Offset = "0x24F4EC4", VA = "0x24F4EC4")]
	public void Exploder(ExploderConfig exploderConfig, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x24E9E2C", Offset = "0x24E9E2C", VA = "0x24E9E2C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x24F5500", Offset = "0x24F5500", VA = "0x24F5500")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CA24", Offset = "0xE6CA24")]
	public void SetExploder()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x24F5618", Offset = "0x24F5618", VA = "0x24F5618")]
	public ExploderTools()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x24F5648", Offset = "0x24F5648", VA = "0x24F5648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CA5C", Offset = "0xE6CA5C")]
	private void <SetExploder>b__11_0(Transform child)
	{
	}
}
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE54EF4", Offset = "0xE54EF4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54EF4", Offset = "0xE54EF4")]
public class BossBomb : ActionTask<Transform>
{
	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> target;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool rightFire;

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x27C8324", Offset = "0x27C8324", VA = "0x27C8324", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x27C8574", Offset = "0x27C8574", VA = "0x27C8574")]
	public BossBomb()
	{
	}
}
[Token(Token = "0x2000273")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54F58", Offset = "0xE54F58")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE54F58", Offset = "0xE54F58")]
public class BossChildMainInit : ActionTask<MonsterDataController>
{
	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<List<LaserRunningTrack>> LaserRunningTrackList;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Timeline timeline;

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x27CA354", Offset = "0x27CA354", VA = "0x27CA354", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x27CA4B8", Offset = "0x27CA4B8", VA = "0x27CA4B8")]
	private void InitLaserPointData()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x27CA5B4", Offset = "0x27CA5B4", VA = "0x27CA5B4")]
	public void GetFirePointTRS()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x27CA3D8", Offset = "0x27CA3D8", VA = "0x27CA3D8")]
	private void InitFromBossSetting()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x27CA5B8", Offset = "0x27CA5B8", VA = "0x27CA5B8")]
	private void InitBossShaderData()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x27CA5BC", Offset = "0x27CA5BC", VA = "0x27CA5BC")]
	public BossChildMainInit()
	{
	}
}
[Token(Token = "0x2000274")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54FBC", Offset = "0xE54FBC")]
public class BossGatlinBlendRTPC : ActionTask
{
	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE60740", Offset = "0xE60740")]
	public BBParameter<bool> startShot;

	[Token(Token = "0x17000175")]
	protected override string info
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x27CAD40", Offset = "0x27CAD40", VA = "0x27CAD40", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x27CADB0", Offset = "0x27CADB0", VA = "0x27CADB0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x27CAF34", Offset = "0x27CAF34", VA = "0x27CAF34")]
	public BossGatlinBlendRTPC()
	{
	}
}
[Token(Token = "0x2000275")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE54FF4", Offset = "0xE54FF4")]
public class BossLookAt : ActionTask
{
	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE60750", Offset = "0xE60750")]
	public BBParameter<Transform> looker;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<GameObject> lookTarget;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool repeat;

	[Token(Token = "0x17000176")]
	protected override string info
	{
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x27CAF3C", Offset = "0x27CAF3C", VA = "0x27CAF3C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x27CAFAC", Offset = "0x27CAFAC", VA = "0x27CAFAC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x27CB0BC", Offset = "0x27CB0BC", VA = "0x27CB0BC", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x27CAFB0", Offset = "0x27CAFB0", VA = "0x27CAFB0")]
	private void DoLook()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x27CB0C0", Offset = "0x27CB0C0", VA = "0x27CB0C0")]
	public BossLookAt()
	{
	}
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5502C", Offset = "0xE5502C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5502C", Offset = "0xE5502C")]
public class BossMove : ActionTask<Transform>
{
	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> moveSpeed;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float centorOffset;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve curve;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Animator animator;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 targetPoint;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float moveTime;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 mStart;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 mEnd;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 centor;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 worldDir;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 inertialDir;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x27CB0C8", Offset = "0x27CB0C8", VA = "0x27CB0C8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x27CB284", Offset = "0x27CB284", VA = "0x27CB284")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x27CB308", Offset = "0x27CB308", VA = "0x27CB308")]
	private void SetMoveParam()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x27CB474", Offset = "0x27CB474", VA = "0x27CB474", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x27CB708", Offset = "0x27CB708", VA = "0x27CB708")]
	public BossMove()
	{
	}
}
[Token(Token = "0x2000277")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE55090", Offset = "0xE55090")]
public class BossShaderChange : ActionTask<MonsterDataController>
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BossMainDone bossMainDone;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> maxTime;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> ShowTime;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isShowShell;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x27CB754", Offset = "0x27CB754", VA = "0x27CB754", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x27CBA50", Offset = "0x27CBA50", VA = "0x27CBA50")]
	public BossShaderChange()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x27CBA9C", Offset = "0x27CBA9C", VA = "0x27CBA9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CA6C", Offset = "0xE6CA6C")]
	private void <OnExecute>b__5_0()
	{
	}
}
[Token(Token = "0x2000278")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE550C8", Offset = "0xE550C8")]
public class BossShellDrop : ActionTask<MonsterDataController>
{
	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> interval;

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x27CBAA4", Offset = "0x27CBAA4", VA = "0x27CBAA4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x27CBC44", Offset = "0x27CBC44", VA = "0x27CBC44")]
	public BossShellDrop()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE55100", Offset = "0xE55100")]
public class BossShieldActive : ActionTask<MonsterDataController>
{
	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x27CBC90", Offset = "0x27CBC90", VA = "0x27CBC90", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x27CBCF8", Offset = "0x27CBCF8", VA = "0x27CBCF8")]
	public BossShieldActive()
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE55138", Offset = "0xE55138")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE55138", Offset = "0xE55138")]
public class FindNearPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<List<Transform>> sourceTraList;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float ignoreDistance;

	[Token(Token = "0x17000177")]
	protected override string info
	{
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x24FA22C", Offset = "0x24FA22C", VA = "0x24FA22C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x24FA27C", Offset = "0x24FA27C", VA = "0x24FA27C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x24FA4FC", Offset = "0x24FA4FC", VA = "0x24FA4FC")]
	public FindNearPoint()
	{
	}
}
[Token(Token = "0x200027B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5519C", Offset = "0xE5519C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5519C", Offset = "0xE5519C")]
public class GetElementInList<T> : ActionTask
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE60760", Offset = "0xE60760")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<T> saveAs;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool delElement;

	[Token(Token = "0x17000178")]
	protected override string info
	{
		[Token(Token = "0x6000D54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D55")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D56")]
	public GetElementInList()
	{
	}
}
[Token(Token = "0x200027C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE55200", Offset = "0xE55200")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE55200", Offset = "0xE55200")]
public class GetElementsInList<T> : ActionTask
{
	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE60770", Offset = "0xE60770")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x17000179")]
	protected override string info
	{
		[Token(Token = "0x6000D57")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D58")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D59")]
	protected void GetRangeElements(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x6000D5A")]
	public GetElementsInList()
	{
	}
}
[Token(Token = "0x200027D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE55264", Offset = "0xE55264")]
public class SetBossAgentAngleSpeed : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE60780", Offset = "0xE60780")]
	public BBParameter<float> angleSpeed;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Timeline timeline;

	[Token(Token = "0x1700017A")]
	protected override string info
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x2154708", Offset = "0x2154708", VA = "0x2154708", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x2154778", Offset = "0x2154778", VA = "0x2154778", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x2154910", Offset = "0x2154910", VA = "0x2154910")]
	public SetBossAgentAngleSpeed()
	{
	}
}
[Token(Token = "0x200027E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE5529C", Offset = "0xE5529C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE5529C", Offset = "0xE5529C")]
public class SetBossStrafeMoveParame : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool move;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator animator;

	[Token(Token = "0x1700017B")]
	protected override string info
	{
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x215534C", Offset = "0x215534C", VA = "0x215534C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x21553AC", Offset = "0x21553AC", VA = "0x21553AC", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x2155444", Offset = "0x2155444", VA = "0x2155444")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x2155554", Offset = "0x2155554", VA = "0x2155554")]
	public SetBossStrafeMoveParame()
	{
	}
}
[Token(Token = "0x200027F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE55300", Offset = "0xE55300")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xE55300", Offset = "0xE55300")]
public class SetBossStrafeMoveAction : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float keepDistance;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator animator;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 worldDir;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 inertialDir;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int index;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 stageTarget;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x2154B08", Offset = "0x2154B08", VA = "0x2154B08", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x2154EB8", Offset = "0x2154EB8", VA = "0x2154EB8")]
	private void SetMove()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x21551D8", Offset = "0x21551D8", VA = "0x21551D8", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x2154F68", Offset = "0x2154F68", VA = "0x2154F68")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x21552F4", Offset = "0x21552F4", VA = "0x21552F4")]
	public SetBossStrafeMoveAction()
	{
	}
}
[Token(Token = "0x2000280")]
public class BossBulletC4 : MonsterBullet
{
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55364", Offset = "0xE55364")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimatorStateInfo stateinfo;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BossBulletC4 <>4__this;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Func<Animator, float> <>9__1;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x20F1D0C", Offset = "0x20F1D0C", VA = "0x20F1D0C")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x20F1D14", Offset = "0x20F1D14", VA = "0x20F1D14")]
		internal void <OnMotionEnd>b__0(long l)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x20F1FAC", Offset = "0x20F1FAC", VA = "0x20F1FAC")]
		internal float <OnMotionEnd>b__1(Animator animator)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55374", Offset = "0xE55374")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, bool> <>9__19_2;

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x20F1CF4", Offset = "0x20F1CF4", VA = "0x20F1CF4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x20F1CFC", Offset = "0x20F1CFC", VA = "0x20F1CFC")]
		internal bool <OnMotionEnd>b__19_2(float f)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float highFactor;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string aniName;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject warnPrefab;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioEvent Grenades_Boss_Drop;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GoSpline path;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float moveTime;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 mTargetPos;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Animator ani;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float percent;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private IDisposable updateDisposable;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject warnObject;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private WwiseDefine c4BlendAudioObj;

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x27C85C0", Offset = "0x27C85C0", VA = "0x27C85C0", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x27C8860", Offset = "0x27C8860", VA = "0x27C8860", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x27C8950", Offset = "0x27C8950", VA = "0x27C8950")]
	protected GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x27C8BD0", Offset = "0x27C8BD0", VA = "0x27C8BD0", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x27C8BD4", Offset = "0x27C8BD4", VA = "0x27C8BD4")]
	protected void DoUpdate()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x27C8CA8", Offset = "0x27C8CA8", VA = "0x27C8CA8")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x27C90C8", Offset = "0x27C90C8", VA = "0x27C90C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x27C9118", Offset = "0x27C9118", VA = "0x27C9118")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x27C91E4", Offset = "0x27C91E4", VA = "0x27C91E4")]
	public BossBulletC4()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x27C91F4", Offset = "0x27C91F4", VA = "0x27C91F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CA7C", Offset = "0xE6CA7C")]
	private void <ResetPosition>b__15_0(Unit unit)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x27C91F8", Offset = "0x27C91F8", VA = "0x27C91F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CA8C", Offset = "0xE6CA8C")]
	private void <OnMotionEnd>b__19_3(float f)
	{
	}
}
[Token(Token = "0x2000283")]
public class BulletBomb : MonsterBullet
{
	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float highFactor;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioEvent Grenades_Bomb;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SwitchInfoData NoTimeAudioSwitch;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SwitchInfoData Time_BreakingAudioSwitch;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SwitchInfoData AudioSwitch;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GoSpline path;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float moveTime;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float percent;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private IDisposable updateDisposable;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject warnObject;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private WwiseDefine c4BlendAudioObj;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float maxDistance;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 forward;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 curPos;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private RaycastHit hit;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Coroutine coroutine;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool isTarget;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool isMove;

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x27D08E8", Offset = "0x27D08E8", VA = "0x27D08E8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x27D0974", Offset = "0x27D0974", VA = "0x27D0974", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x27D0978", Offset = "0x27D0978", VA = "0x27D0978", Slot = "5")]
	protected override void DoUpdate(float time)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x27D0B0C", Offset = "0x27D0B0C", VA = "0x27D0B0C", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x27D0E00", Offset = "0x27D0E00", VA = "0x27D0E00")]
	private Vector3 randPos(Vector3 Pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x27D0C28", Offset = "0x27D0C28", VA = "0x27D0C28")]
	protected GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x27D0A74", Offset = "0x27D0A74", VA = "0x27D0A74")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x27D0EAC", Offset = "0x27D0EAC", VA = "0x27D0EAC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x27D0EFC", Offset = "0x27D0EFC", VA = "0x27D0EFC")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x27D0FC8", Offset = "0x27D0FC8", VA = "0x27D0FC8", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x27D1174", Offset = "0x27D1174", VA = "0x27D1174", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x27D1300", Offset = "0x27D1300", VA = "0x27D1300", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x27D1308", Offset = "0x27D1308", VA = "0x27D1308")]
	public BulletBomb()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x27D1364", Offset = "0x27D1364", VA = "0x27D1364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CA9C", Offset = "0xE6CA9C")]
	private void <OnMotionEnd>b__26_0()
	{
	}
}
[Token(Token = "0x2000284")]
public enum BossMainDone
{
	[Token(Token = "0x4000EC2")]
	Default,
	[Token(Token = "0x4000EC3")]
	Born,
	[Token(Token = "0x4000EC4")]
	Summon,
	[Token(Token = "0x4000EC5")]
	Laser,
	[Token(Token = "0x4000EC6")]
	Die
}
[Token(Token = "0x2000285")]
public enum BossMainToDo
{
	[Token(Token = "0x4000EC8")]
	Born,
	[Token(Token = "0x4000EC9")]
	Summon,
	[Token(Token = "0x4000ECA")]
	Laser
}
[Token(Token = "0x2000286")]
public enum BossModel
{
	[Token(Token = "0x4000ECC")]
	Shell = 1,
	[Token(Token = "0x4000ECD")]
	Core
}
[Serializable]
[Token(Token = "0x2000287")]
public class ModelData
{
	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BossModel e_BossModel;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer Renderer;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<RenderData> renderDatas;

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x279F0C0", Offset = "0x279F0C0", VA = "0x279F0C0")]
	public ModelData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000288")]
public class RenderData
{
	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BossMainDone bossMainDone;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE60790", Offset = "0xE60790")]
	public float AniSpeed;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE607A8", Offset = "0xE607A8")]
	public float NormalPush;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float NormalPushChangeTime;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE607C0", Offset = "0xE607C0")]
	public float ShrinkFactor;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ShrinkFactorChangeTime;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 Tiling;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TilingChangeTime;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 Offset;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float OffsetChangeTime;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE607D8", Offset = "0xE607D8")]
	public float OutlineOpacity;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float OutlineOpacityChangeTime;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color OutlineColor;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float OutlineColorChangeTime;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE607F4", Offset = "0xE607F4")]
	public float IntensityMult;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float IntensityMultChangeTime;

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x2720A44", Offset = "0x2720A44", VA = "0x2720A44")]
	public RenderData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000289")]
public class LaserPointData
{
	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject laserPoint;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float laserSpeed;

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x20BB534", Offset = "0x20BB534", VA = "0x20BB534")]
	public LaserPointData()
	{
	}
}
[Serializable]
[Token(Token = "0x200028A")]
public class LaserRunningTrack
{
	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> FirePointIDList;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LaserPointData> laserPoints;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x20BB53C", Offset = "0x20BB53C", VA = "0x20BB53C")]
	public LaserRunningTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200028B")]
public class FirePoint
{
	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject firePoint;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x223E36C", Offset = "0x223E36C", VA = "0x223E36C")]
	public FirePoint()
	{
	}
}
[Serializable]
[Token(Token = "0x200028C")]
public class ShieldShaderChange
{
	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer Shield;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DefaultDissolve;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Dissolve;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DissolveTime;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DefaultWpoStrength;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float WpoStrength;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float StartWpoStrengthTime;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float EndWpoStrengthTime;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve StartWpoStrengthCurve;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve EndWpoStrengthCurve;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x215A2F4", Offset = "0x215A2F4", VA = "0x215A2F4")]
	public ShieldShaderChange()
	{
	}
}
[Serializable]
[Token(Token = "0x200028D")]
public class CoreShaderChange
{
	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer Core;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DefaultWpoMax;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float WpoMax;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DefaultFlashSpeed;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FlashSpeed;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WpoMaxTime;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color DefaultEmissColor;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color EmissColor;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float EmissColorTime;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float DefaultPower;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float Power;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float PowerTime;

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x21BF514", Offset = "0x21BF514", VA = "0x21BF514")]
	public CoreShaderChange()
	{
	}
}
[Token(Token = "0x200028E")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55384", Offset = "0xE55384")]
public class MonsterDataController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE553E4", Offset = "0xE553E4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ModelData> <>9__16_0;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<RenderData> <>9__16_1;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<ModelData> <>9__37_0;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<MonsterBullet> <>9__43_0;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<EffectDefine> <>9__43_1;

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x205BA9C", Offset = "0x205BA9C", VA = "0x205BA9C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x205BAA4", Offset = "0x205BAA4", VA = "0x205BAA4")]
		internal bool <InitBoss>b__16_0(ModelData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x205BAC4", Offset = "0x205BAC4", VA = "0x205BAC4")]
		internal bool <InitBoss>b__16_1(RenderData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x205BAE4", Offset = "0x205BAE4", VA = "0x205BAE4")]
		internal bool <BOSSStatus>b__37_0(ModelData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x205BB04", Offset = "0x205BB04", VA = "0x205BB04")]
		internal void <ClearBullets>b__43_0(MonsterBullet c)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x205BB28", Offset = "0x205BB28", VA = "0x205BB28")]
		internal void <ClearBullets>b__43_1(EffectDefine a)
		{
		}
	}

	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE553F4", Offset = "0xE553F4")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonsterDataController <>4__this;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action action;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x205BBC8", Offset = "0x205BBC8", VA = "0x205BBC8")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x205BBD0", Offset = "0x205BBD0", VA = "0x205BBD0")]
		internal void <DropShell>b__1()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55404", Offset = "0xE55404")]
	private sealed class <>c__DisplayClass20_1
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody[] rigs;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x205BC20", Offset = "0x205BC20", VA = "0x205BC20")]
		public <>c__DisplayClass20_1()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x205BC28", Offset = "0x205BC28", VA = "0x205BC28")]
		internal void <DropShell>b__0()
		{
		}
	}

	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55414", Offset = "0xE55414")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x205BCC0", Offset = "0x205BCC0", VA = "0x205BCC0")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x205BCC8", Offset = "0x205BCC8", VA = "0x205BCC8")]
		internal bool <HitShell>b__0(ShieldShaderChange a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55424", Offset = "0xE55424")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShieldShaderChange shieldShaderChange;

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x205BCEC", Offset = "0x205BCEC", VA = "0x205BCEC")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x205BCF4", Offset = "0x205BCF4", VA = "0x205BCF4")]
		internal bool <DieShell>b__0(ShieldShaderChange a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x205BD18", Offset = "0x205BD18", VA = "0x205BD18")]
		internal void <DieShell>b__1()
		{
		}
	}

	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55434", Offset = "0xE55434")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShieldShaderChange shieldShaderChange;

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x205BD50", Offset = "0x205BD50", VA = "0x205BD50")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x205BD58", Offset = "0x205BD58", VA = "0x205BD58")]
		internal void <AllDieShell>b__0()
		{
		}
	}

	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55444", Offset = "0xE55444")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossMainDone bossMainDone;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shell;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isShowShell;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonsterDataController <>4__this;

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x205BD90", Offset = "0x205BD90", VA = "0x205BD90")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x205BD98", Offset = "0x205BD98", VA = "0x205BD98")]
		internal bool <BOSSStatus>b__1(RenderData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x205BDBC", Offset = "0x205BDBC", VA = "0x205BDBC")]
		internal void <BOSSStatus>b__2()
		{
		}
	}

	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55454", Offset = "0xE55454")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossMainDone bossMainDone;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shell;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isShowShell;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonsterDataController <>4__this;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Predicate<RenderData> <>9__0;

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x205BEF4", Offset = "0x205BEF4", VA = "0x205BEF4")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x205BEFC", Offset = "0x205BEFC", VA = "0x205BEFC")]
		internal bool <Change>b__0(RenderData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x205BF20", Offset = "0x205BF20", VA = "0x205BF20")]
		internal void <Change>b__1()
		{
		}
	}

	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55464", Offset = "0xE55464")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossModel model;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BossMainDone bossMainDone;

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x205BFE0", Offset = "0x205BFE0", VA = "0x205BFE0")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x205BFE8", Offset = "0x205BFE8", VA = "0x205BFE8")]
		internal bool <modelChange>b__0(ModelData a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x205C00C", Offset = "0x205C00C", VA = "0x205C00C")]
		internal bool <modelChange>b__1(RenderData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55474", Offset = "0xE55474")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossMainDone bossMainDone;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<RenderData> <>9__0;

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x205C030", Offset = "0x205C030", VA = "0x205C030")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x205C038", Offset = "0x205C038", VA = "0x205C038")]
		internal bool <StateChange>b__0(RenderData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6080C", Offset = "0xE6080C")]
	public List<ModelData> modelDatas;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ShieldShaderChange> shieldShaderChanges;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CoreShaderChange CoreShaderChange;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60844", Offset = "0xE60844")]
	public List<LaserRunningTrack> LaserRunningTrackList;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6087C", Offset = "0xE6087C")]
	public List<FirePoint> FirePointList;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Exploder_Shield;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Inner_Shell;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Inner_ShellChildTrn01;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Inner_ShellChildTrn02;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject CoreShield;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WUnit owner;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Blackboard bb;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WwiseDefine BOSSbgm;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioEvent audioEvent;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DG.Tweening.Sequence Dropsequence;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Tweener RotaTween01;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Tweener RotaTween02;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tweener tweener01;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Tweener tweener02;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine HitCoreCoroutine;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject CoreEffect;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float delaytime;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Tweener> tweeners;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x27A54C0", Offset = "0x27A54C0", VA = "0x27A54C0")]
	public void BTInit()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x27A555C", Offset = "0x27A555C", VA = "0x27A555C")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x27A5564", Offset = "0x27A5564", VA = "0x27A5564")]
	public void InitBoss()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x27A653C", Offset = "0x27A653C", VA = "0x27A653C")]
	public void InitShield()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x27A66E4", Offset = "0x27A66E4", VA = "0x27A66E4")]
	private void InitRig(Rigidbody rig)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x27A6764", Offset = "0x27A6764", VA = "0x27A6764")]
	public void DropShell(float interval, [Optional] Action action)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x27A6C5C", Offset = "0x27A6C5C", VA = "0x27A6C5C")]
	public void BOSSSheilState()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x27A5F50", Offset = "0x27A5F50", VA = "0x27A5F50")]
	public void InitInnerShell()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x27A6DAC", Offset = "0x27A6DAC", VA = "0x27A6DAC")]
	public void RotationInner_Shell()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x27A6F00", Offset = "0x27A6F00", VA = "0x27A6F00")]
	public void HitShell(int id)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x27A71E0", Offset = "0x27A71E0", VA = "0x27A71E0")]
	public void DieShell(int id)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x27A7458", Offset = "0x27A7458", VA = "0x27A7458")]
	public void AllDieShell()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x27A62CC", Offset = "0x27A62CC", VA = "0x27A62CC")]
	public void InitCore()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x27A773C", Offset = "0x27A773C", VA = "0x27A773C")]
	public void HitCore()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x27A78F0", Offset = "0x27A78F0", VA = "0x27A78F0")]
	public void DieCore()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x27A7A74", Offset = "0x27A7A74", VA = "0x27A7A74")]
	public void BOSSStatus(BossMainDone bossMainDone, bool isShowShell, float showTime)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x27A7E98", Offset = "0x27A7E98", VA = "0x27A7E98")]
	public void Change(BossMainDone bossMainDone, bool isShowShell, float showTime)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x27A82A4", Offset = "0x27A82A4", VA = "0x27A82A4")]
	public void modelChange(BossModel model, BossMainDone bossMainDone, bool isDotween = true)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x27A84F8", Offset = "0x27A84F8", VA = "0x27A84F8")]
	public void StateChange(BossMainDone bossMainDone, bool isDotween = true)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x27A5A74", Offset = "0x27A5A74", VA = "0x27A5A74")]
	public void RenderChange(MeshRenderer mesh, RenderData renderData, bool isDotween = true)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x27A8948", Offset = "0x27A8948", VA = "0x27A8948")]
	public void ClearBullets()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x27A7DAC", Offset = "0x27A7DAC", VA = "0x27A7DAC")]
	public void AudioPlay(BossMainDone bossMainDone)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x27A8F60", Offset = "0x27A8F60", VA = "0x27A8F60")]
	public MonsterDataController()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x27A8F68", Offset = "0x27A8F68", VA = "0x27A8F68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CAAC", Offset = "0xE6CAAC")]
	private void <InitShield>b__17_0(Transform child)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x27A9014", Offset = "0x27A9014", VA = "0x27A9014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CABC", Offset = "0xE6CABC")]
	private void <HitCore>b__33_0()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x27A90D4", Offset = "0x27A90D4", VA = "0x27A90D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CACC", Offset = "0xE6CACC")]
	private void <DieCore>b__36_0()
	{
	}
}
[Token(Token = "0x2000299")]
public class MonsterStraightBullet : MonsterBullet
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject TargetWarningeFffect;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private EffectDefine TargetWarningeEffectDefine;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 lastPos;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 forward;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 curPos;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float minDis;

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x2655A38", Offset = "0x2655A38", VA = "0x2655A38", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x2655A40", Offset = "0x2655A40", VA = "0x2655A40", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x2655AE0", Offset = "0x2655AE0", VA = "0x2655AE0")]
	public void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x2655B1C", Offset = "0x2655B1C", VA = "0x2655B1C")]
	public void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x2655B48", Offset = "0x2655B48", VA = "0x2655B48", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x2655BB4", Offset = "0x2655BB4", VA = "0x2655BB4")]
	protected void CheckTargetDis()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x2655C20", Offset = "0x2655C20", VA = "0x2655C20", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x2655D90", Offset = "0x2655D90", VA = "0x2655D90", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x2655D94", Offset = "0x2655D94", VA = "0x2655D94", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x2655D98", Offset = "0x2655D98", VA = "0x2655D98", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x2655D9C", Offset = "0x2655D9C", VA = "0x2655D9C")]
	public MonsterStraightBullet()
	{
	}
}
[Token(Token = "0x200029A")]
public class MonstersExplode : MonsterBullet
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioEvent Grenades_Bomb;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SwitchInfoData AudioSwitch;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float delayDestory;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine coroutine;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private WUnit owner;

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x2656C7C", Offset = "0x2656C7C", VA = "0x2656C7C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x2656CB8", Offset = "0x2656CB8", VA = "0x2656CB8")]
	protected void Bomb()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x2656FAC", Offset = "0x2656FAC", VA = "0x2656FAC")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x2657078", Offset = "0x2657078", VA = "0x2657078")]
	public MonstersExplode()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x2657088", Offset = "0x2657088", VA = "0x2657088")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CADC", Offset = "0xE6CADC")]
	private void <Bomb>b__7_0()
	{
	}
}
[Token(Token = "0x200029B")]
public class RandomDeathAni : MonoBehaviour, IDeathDefine
{
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55484", Offset = "0xE55484")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RandomDeathAni <>4__this;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action endAction;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x205FD8C", Offset = "0x205FD8C", VA = "0x205FD8C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x205FD94", Offset = "0x205FD94", VA = "0x205FD94")]
		internal void <TriggerDeathDefine>b__1()
		{
		}
	}

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55494", Offset = "0xE55494")]
	private sealed class <>c__DisplayClass10_1
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nub;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass10_0 CS$<>8__locals1;

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x205FDD8", Offset = "0x205FDD8", VA = "0x205FDD8")]
		public <>c__DisplayClass10_1()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x205FDE0", Offset = "0x205FDE0", VA = "0x205FDE0")]
		internal bool <TriggerDeathDefine>b__0(AnimationClip a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] deathName;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isCommitSuicide;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE608B4", Offset = "0xE608B4")]
	public bool IsDieChange;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool IsEmbeddedAnimation;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Renderer> DieRender;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float InitDissolveScale;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DieDissolveScale;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ChangeTime;

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x2717F94", Offset = "0x2717F94", VA = "0x2717F94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x2717F9C", Offset = "0x2717F9C", VA = "0x2717F9C", Slot = "6")]
	public virtual void TriggerDeathDefine(Action endAction)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x27182DC", Offset = "0x27182DC", VA = "0x27182DC")]
	public void DieChange()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x27183A0", Offset = "0x27183A0", VA = "0x27183A0")]
	public void ResetDieRender()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x2718468", Offset = "0x2718468", VA = "0x2718468", Slot = "7")]
	public virtual void SetDeathStaut(bool IsCommitSuicide)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x2718474", Offset = "0x2718474", VA = "0x2718474")]
	public RandomDeathAni()
	{
	}
}
[Token(Token = "0x200029E")]
public class WarningBullet : MonsterBullet
{
	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float velocity;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject effectRoot;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float delayDisplay;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 lastPos;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 forward;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 curPos;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 initPos;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine coroutine;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject warningEffect;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject moveEffect;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private EffectDefine warningEffectDefine;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private EffectDefine moveEffectDefine;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool isMove;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int maxDis;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isTrigger;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public AudioEvent Grenades_Bomb;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioEvent WarningAudio;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public AudioEvent BombStop;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private WwiseDefine warningWwiseDefine;

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x2979AD0", Offset = "0x2979AD0", VA = "0x2979AD0", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x2979E70", Offset = "0x2979E70", VA = "0x2979E70")]
	private void SandChange(int id, bool isBomb)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x2979C40", Offset = "0x2979C40", VA = "0x2979C40")]
	private void Warning()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x2979EA8", Offset = "0x2979EA8", VA = "0x2979EA8")]
	public void DoMove()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x297A1F8", Offset = "0x297A1F8", VA = "0x297A1F8")]
	public void MoveInterrupt()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x297A3F0", Offset = "0x297A3F0", VA = "0x297A3F0", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x297A534", Offset = "0x297A534", VA = "0x297A534", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x297A4C8", Offset = "0x297A4C8", VA = "0x297A4C8")]
	public void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x297A508", Offset = "0x297A508", VA = "0x297A508")]
	public void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x297A7A4", Offset = "0x297A7A4", VA = "0x297A7A4", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x297A7A8", Offset = "0x297A7A8", VA = "0x297A7A8", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x297A7AC", Offset = "0x297A7AC", VA = "0x297A7AC", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x297A7B0", Offset = "0x297A7B0", VA = "0x297A7B0")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x297A894", Offset = "0x297A894", VA = "0x297A894", Slot = "24")]
	protected override bool HitProcess(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x297B0C4", Offset = "0x297B0C4", VA = "0x297B0C4")]
	public WarningBullet()
	{
	}
}
[Token(Token = "0x200029F")]
public enum RoleStandOnType
{
	[Token(Token = "0x4000F5E")]
	None,
	[Token(Token = "0x4000F5F")]
	BattleRoom,
	[Token(Token = "0x4000F60")]
	PreparedRoom
}
[Token(Token = "0x20002A0")]
public class CharacterMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE554A4", Offset = "0xE554A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__30_0;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<GuideController> <>9__40_1;

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x20F4330", Offset = "0x20F4330", VA = "0x20F4330")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x20F4338", Offset = "0x20F4338", VA = "0x20F4338")]
		internal int <OnHitJob>b__30_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x20F437C", Offset = "0x20F437C", VA = "0x20F437C")]
		internal bool <InitGuide>b__40_1(GuideController a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE554B4", Offset = "0xE554B4")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterMono <>4__this;

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x20F439C", Offset = "0x20F439C", VA = "0x20F439C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x20F43A4", Offset = "0x20F43A4", VA = "0x20F43A4")]
		internal void <InitGuide>b__0()
		{
		}
	}

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE608EC", Offset = "0xE608EC")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool canTeleport;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnRollBack;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnTeleporter;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool areaLimited;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform GuideTranf;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float forwardOffset;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int areaID;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform transfer;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 cameraRigOriginalPos;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly ReactiveProperty<Collider> hitCol;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6091C", Offset = "0xE6091C")]
	private float <PlayerHight>k__BackingField;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] raycastHits;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 FloorHitPoint;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string storey;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float startHitPoint;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float Checkdis;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float LeaveAreaTime;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float time;

	[Token(Token = "0x1700017C")]
	public WUnit Owner
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x2662C20", Offset = "0x2662C20", VA = "0x2662C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CAEC", Offset = "0xE6CAEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x2662C28", Offset = "0x2662C28", VA = "0x2662C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CAFC", Offset = "0xE6CAFC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public float PlayerHight
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x2662C30", Offset = "0x2662C30", VA = "0x2662C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB0C", Offset = "0xE6CB0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x2662C38", Offset = "0x2662C38", VA = "0x2662C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB1C", Offset = "0xE6CB1C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public string Storey
	{
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x2662F64", Offset = "0x2662F64", VA = "0x2662F64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x2662F5C", Offset = "0x2662F5C", VA = "0x2662F5C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x2662C40", Offset = "0x2662C40", VA = "0x2662C40")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x2662DB0", Offset = "0x2662DB0", VA = "0x2662DB0")]
	public void SetCameraRigOriginal()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x2662E44", Offset = "0x2662E44", VA = "0x2662E44")]
	private void SafeArea()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x2662F6C", Offset = "0x2662F6C", VA = "0x2662F6C")]
	private void CheckOnArea()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x2663168", Offset = "0x2663168", VA = "0x2663168")]
	protected void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x2663944", Offset = "0x2663944", VA = "0x2663944")]
	private void CheckLeaveArea()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x2663D9C", Offset = "0x2663D9C", VA = "0x2663D9C")]
	public void NetTeleport(bool inversion, Transform curPlayerTrns, [Optional] Transform LastPlayerTrns)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x2663E88", Offset = "0x2663E88", VA = "0x2663E88")]
	public void DoRollBack(Transform curPlayerTrns)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x2663C44", Offset = "0x2663C44", VA = "0x2663C44")]
	private void GenerateTeleportRequest(Vector3 pos)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x266405C", Offset = "0x266405C", VA = "0x266405C")]
	public void DoTeleporter(Transform LastPlayerTrns, Transform curPlayerTrns)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x2664890", Offset = "0x2664890", VA = "0x2664890")]
	public void DoLookTransf(Transform transform)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x26648F4", Offset = "0x26648F4", VA = "0x26648F4")]
	public void InitGuide(Transform transform)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x26645E8", Offset = "0x26645E8", VA = "0x26645E8")]
	public void SetTransferPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x266422C", Offset = "0x266422C", VA = "0x266422C")]
	public void SetTransfer(Transform Transf)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x26649D0", Offset = "0x26649D0", VA = "0x26649D0")]
	public Vector3 GetTransferPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x26645B0", Offset = "0x26645B0", VA = "0x26645B0")]
	public static Vector3 TransformPosition(Vector3 inputPos, Transform inverseTra, Transform tra)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x26649EC", Offset = "0x26649EC", VA = "0x26649EC")]
	public CharacterMono()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x2664B88", Offset = "0x2664B88", VA = "0x2664B88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB2C", Offset = "0xE6CB2C")]
	private void <Init>b__21_0(Unit unit1)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x2664D00", Offset = "0x2664D00", VA = "0x2664D00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB3C", Offset = "0xE6CB3C")]
	private void <SafeArea>b__23_0(Collider collider1)
	{
	}
}
[Token(Token = "0x20002A3")]
public class MainTeleporter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE554C4", Offset = "0xE554C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__12_0;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Collider, bool> <>9__12_2;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Collider, bool> <>9__12_4;

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x205A594", Offset = "0x205A594", VA = "0x205A594")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x205A59C", Offset = "0x205A59C", VA = "0x205A59C")]
		internal bool <DoStart>b__12_0(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x205A634", Offset = "0x205A634", VA = "0x205A634")]
		internal bool <DoStart>b__12_2(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x205A6CC", Offset = "0x205A6CC", VA = "0x205A6CC")]
		internal bool <DoStart>b__12_4(Collider collider)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected CharacterMono Character;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkView;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float viewToTeleporter;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform VisibleRoot;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int PlayerID;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, CharacterMono> CharacterList;

	[Token(Token = "0x1700017F")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE70474", Offset = "0xE70474")]
	public (Vector3, Quaternion, Vector3) TRS
	{
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x24DC938", Offset = "0x24DC938", VA = "0x24DC938")]
		get
		{
			return default((Vector3, Quaternion, Vector3));
		}
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x24DCA54", Offset = "0x24DCA54", VA = "0x24DCA54")]
		[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE700AC", Offset = "0xE700AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x24DBDD8", Offset = "0x24DBDD8", VA = "0x24DBDD8")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x24DBE28", Offset = "0x24DBE28", VA = "0x24DBE28", Slot = "4")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x24DBEDC", Offset = "0x24DBEDC", VA = "0x24DBEDC")]
	public bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x24DBEE8", Offset = "0x24DBEE8", VA = "0x24DBEE8")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x24DBF94", Offset = "0x24DBF94", VA = "0x24DBF94", Slot = "5")]
	protected virtual void NetCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x24DC2D0", Offset = "0x24DC2D0", VA = "0x24DC2D0")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x24DC43C", Offset = "0x24DC43C", VA = "0x24DC43C")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x24DC930", Offset = "0x24DC930", VA = "0x24DC930")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x24DBDE0", Offset = "0x24DBDE0", VA = "0x24DBDE0")]
	public void Toggle(bool state)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x24DCAD0", Offset = "0x24DCAD0", VA = "0x24DCAD0")]
	public MainTeleporter()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x24DCAE8", Offset = "0x24DCAE8", VA = "0x24DCAE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB4C", Offset = "0xE6CB4C")]
	private void <DoStart>b__12_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x24DCAF8", Offset = "0x24DCAF8", VA = "0x24DCAF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB5C", Offset = "0xE6CB5C")]
	private void <DoStart>b__12_3(Collider collider1)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x24DCB08", Offset = "0x24DCB08", VA = "0x24DCB08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB6C", Offset = "0xE6CB6C")]
	private void <DoStart>b__12_5(Collider collider1)
	{
	}
}
[Token(Token = "0x20002A5")]
public class MainTeleporterManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class RoomData
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ID;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerTrns;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> RandomPlayerTrnsList;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> TeleporterTrns;

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x205A940", Offset = "0x205A940", VA = "0x205A940")]
		public RoomData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE554D4", Offset = "0xE554D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<MainTeleporter> <>9__18_0;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<MainTeleporter> <>9__19_0;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<MainTeleporter> <>9__20_0;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__23_0;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x205A7C8", Offset = "0x205A7C8", VA = "0x205A7C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x205A7D0", Offset = "0x205A7D0", VA = "0x205A7D0")]
		internal void <DoInit>b__18_0(MainTeleporter a)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x205A7EC", Offset = "0x205A7EC", VA = "0x205A7EC")]
		internal void <DoStart>b__19_0(MainTeleporter a)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x205A808", Offset = "0x205A808", VA = "0x205A808")]
		internal void <DoReset>b__20_0(MainTeleporter a)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x205A824", Offset = "0x205A824", VA = "0x205A824")]
		internal void <StartTeleporters>b__23_0()
		{
		}
	}

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform DiePlayerTrns;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<RoomData> RoomDatas;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<int, CharacterMono> recordCharacterList;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6093C", Offset = "0xE6093C")]
	public List<MainTeleporter> TotalTeleporterList;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MainTeleporter> TeleporterList;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<int, int> PlayerStationIDList;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<int, int> DefaultPlayerStationDic;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60974", Offset = "0xE60974")]
	private int <PlayerCount>k__BackingField;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MainTeleporterManager _instance;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isGuidTipStart;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float time;

	[Token(Token = "0x17000180")]
	public int PlayerCount
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x24DCB18", Offset = "0x24DCB18", VA = "0x24DCB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB7C", Offset = "0xE6CB7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x24DCB20", Offset = "0x24DCB20", VA = "0x24DCB20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB8C", Offset = "0xE6CB8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public static MainTeleporterManager Instance
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x24DCB28", Offset = "0x24DCB28", VA = "0x24DCB28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x24DCB74", Offset = "0x24DCB74", VA = "0x24DCB74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x24DCBC8", Offset = "0x24DCBC8", VA = "0x24DCBC8")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x24DCCF4", Offset = "0x24DCCF4", VA = "0x24DCCF4")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x24DD118", Offset = "0x24DD118", VA = "0x24DD118")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x24DD244", Offset = "0x24DD244", VA = "0x24DD244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x24DD410", Offset = "0x24DD410", VA = "0x24DD410")]
	public void SetStateFinish()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x24DCE30", Offset = "0x24DCE30", VA = "0x24DCE30")]
	public void StartTeleporters()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x24DD7C4", Offset = "0x24DD7C4", VA = "0x24DD7C4")]
	public void SetTeleporterTrn(List<Transform> TeleporterTRs)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x24DD4A0", Offset = "0x24DD4A0", VA = "0x24DD4A0")]
	public void SetTeleporterState(bool isActive, int index = -1)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x24DDA38", Offset = "0x24DDA38", VA = "0x24DDA38")]
	public bool AllCheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x24DDA9C", Offset = "0x24DDA9C", VA = "0x24DDA9C")]
	public int GetFirstRecordWunitId()
	{
		return default(int);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x24DDB30", Offset = "0x24DDB30", VA = "0x24DDB30")]
	public void SetPlayerStationID()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x24DDC18", Offset = "0x24DDC18", VA = "0x24DDC18")]
	public int GetPlayerStationID(int ID)
	{
		return default(int);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x24DDD80", Offset = "0x24DDD80", VA = "0x24DDD80")]
	public void SyncTeleporterStatus(int index, e_Teleporter_Net_Status status)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x24DDDB0", Offset = "0x24DDDB0", VA = "0x24DDDB0")]
	public MainTeleporterManager()
	{
	}
}
[Token(Token = "0x20002A8")]
public class MotionFloor : MonoBehaviour
{
	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int GearID;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Floor;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WwiseDefine Triangle_Loop;

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x2657FFC", Offset = "0x2657FFC", VA = "0x2657FFC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x2658000", Offset = "0x2658000", VA = "0x2658000")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x26582C4", Offset = "0x26582C4", VA = "0x26582C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x2658588", Offset = "0x2658588", VA = "0x2658588")]
	private void OnGearRoomMotion(int id, Vector3 pos)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x26585F0", Offset = "0x26585F0", VA = "0x26585F0")]
	public void OnGearState(int id, bool isMove)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x2658808", Offset = "0x2658808", VA = "0x2658808")]
	public MotionFloor()
	{
	}
}
[Token(Token = "0x20002A9")]
public class RoomSwitchLockSign : MonoBehaviour
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Root;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystemRenderer Renderer;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ProgressTime;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool mIsProgressing;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mProgressRunningTime;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool mIsProgressFinish;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool IsPlay;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<SignTrigger> entryList;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action FinishCallBack;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action BeginSignCallBack;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action BreakSignCallBack;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Func<bool> OnCheckSignCon;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WwiseDefine AudioProgressObj;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int propertyID;

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x24BAACC", Offset = "0x24BAACC", VA = "0x24BAACC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x24BABF0", Offset = "0x24BABF0", VA = "0x24BABF0")]
	public void SetShow(bool isActive)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x24BADE0", Offset = "0x24BADE0", VA = "0x24BADE0")]
	public void SetRootShow(bool isActive)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x24BAB80", Offset = "0x24BAB80", VA = "0x24BAB80")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x24BAE00", Offset = "0x24BAE00", VA = "0x24BAE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x24BAED0", Offset = "0x24BAED0", VA = "0x24BAED0")]
	public void SetProgressUI(bool isActive)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x24BAE10", Offset = "0x24BAE10", VA = "0x24BAE10")]
	private void UpdateProgress()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x24BB0B8", Offset = "0x24BB0B8", VA = "0x24BB0B8")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x24BB144", Offset = "0x24BB144", VA = "0x24BB144")]
	public bool IsDoorLockSignOk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x24BB094", Offset = "0x24BB094", VA = "0x24BB094")]
	private void DoorLockSignActionEnd()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x24BB164", Offset = "0x24BB164", VA = "0x24BB164")]
	private void BeginDoorLockSign()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x24BB178", Offset = "0x24BB178", VA = "0x24BB178")]
	private void BreakDoorLockSign()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x24BAF74", Offset = "0x24BAF74", VA = "0x24BAF74")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x24BAC40", Offset = "0x24BAC40", VA = "0x24BAC40")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x24BB18C", Offset = "0x24BB18C", VA = "0x24BB18C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x24BB3BC", Offset = "0x24BB3BC", VA = "0x24BB3BC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x24BB478", Offset = "0x24BB478", VA = "0x24BB478")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x24BB248", Offset = "0x24BB248", VA = "0x24BB248")]
	private void TriggerIn(GameObject col)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x24BB680", Offset = "0x24BB680", VA = "0x24BB680")]
	private bool CheckTeleporter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x24BB534", Offset = "0x24BB534", VA = "0x24BB534")]
	private void TriggerOut(GameObject col)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x24BB6D4", Offset = "0x24BB6D4", VA = "0x24BB6D4")]
	public WUnit GetFirstSignTriggerOwner()
	{
		return null;
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x24BB7E8", Offset = "0x24BB7E8", VA = "0x24BB7E8")]
	public SignTrigger GetFirstSignTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x24BB8BC", Offset = "0x24BB8BC", VA = "0x24BB8BC")]
	public SignTrigger GetFirstTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x24BB990", Offset = "0x24BB990", VA = "0x24BB990")]
	public RoomSwitchLockSign()
	{
	}
}
[Token(Token = "0x20002AA")]
public class SignTrigger : MonoBehaviour
{
	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly string Press;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string LayDown;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isR;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60984", Offset = "0xE60984")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDelayGet;

	[Token(Token = "0x17000182")]
	public WUnit Owner
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x215E23C", Offset = "0x215E23C", VA = "0x215E23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CB9C", Offset = "0xE6CB9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x215E244", Offset = "0x215E244", VA = "0x215E244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CBAC", Offset = "0xE6CBAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public bool IsHandAni
	{
		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x215E24C", Offset = "0x215E24C", VA = "0x215E24C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000184")]
	public bool TriggerSwicth_Weapon
	{
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x215E2B8", Offset = "0x215E2B8", VA = "0x215E2B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x215E2C0", Offset = "0x215E2C0", VA = "0x215E2C0")]
	public void VRHand_Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x215E2C8", Offset = "0x215E2C8", VA = "0x215E2C8")]
	public void Hand_Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x215E6A8", Offset = "0x215E6A8", VA = "0x215E6A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x215EA44", Offset = "0x215EA44", VA = "0x215EA44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x215EA48", Offset = "0x215EA48", VA = "0x215EA48")]
	public void PressEvent()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x215EADC", Offset = "0x215EADC", VA = "0x215EADC")]
	public void LayDownEvent()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x215EB70", Offset = "0x215EB70", VA = "0x215EB70")]
	public SignTrigger()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x215EBF0", Offset = "0x215EBF0", VA = "0x215EBF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CBBC", Offset = "0xE6CBBC")]
	private void <OnTriggerEnter>b__15_0()
	{
	}
}
[Token(Token = "0x20002AB")]
public class SimulateXRtrigger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class _Event : UnityEvent<bool>
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x206173C", Offset = "0x206173C", VA = "0x206173C")]
		public _Event()
		{
		}
	}

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public _Event Enter;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public _Event Exit;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool IsTouchOff;

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x215EC08", Offset = "0x215EC08", VA = "0x215EC08")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x215EC10", Offset = "0x215EC10", VA = "0x215EC10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x215ED8C", Offset = "0x215ED8C", VA = "0x215ED8C")]
	public SimulateXRtrigger()
	{
	}
}
[Token(Token = "0x20002AD")]
public class Teleporter : MonoBehaviour
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autoSetRot;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool checkView;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool autoAdjustRot;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float viewToTeleporter;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool passed;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_MaxDistance;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_HitDetect;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 m_Dir;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit m_Hit;

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x2AB14FC", Offset = "0x2AB14FC", VA = "0x2AB14FC", Slot = "4")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x2AB1504", Offset = "0x2AB1504", VA = "0x2AB1504", Slot = "5")]
	protected virtual void SetState(bool state)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x2AB1538", Offset = "0x2AB1538", VA = "0x2AB1538", Slot = "6")]
	public virtual void SetStateFinish()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x2AB15A8", Offset = "0x2AB15A8", VA = "0x2AB15A8", Slot = "7")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x2AB16D8", Offset = "0x2AB16D8", VA = "0x2AB16D8", Slot = "8")]
	public virtual bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x2AB17C0", Offset = "0x2AB17C0", VA = "0x2AB17C0", Slot = "9")]
	protected virtual void ServerCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x2AB190C", Offset = "0x2AB190C", VA = "0x2AB190C")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x2AB1A78", Offset = "0x2AB1A78", VA = "0x2AB1A78")]
	private void OnKillCurrentEnemys()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x2AB1CEC", Offset = "0x2AB1CEC", VA = "0x2AB1CEC")]
	public void OnLoad()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x2AB1CF0", Offset = "0x2AB1CF0", VA = "0x2AB1CF0")]
	public Teleporter()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x2AB1D8C", Offset = "0x2AB1D8C", VA = "0x2AB1D8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CBCC", Offset = "0xE6CBCC")]
	private bool <OnKillCurrentEnemys>b__18_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x2AB1E40", Offset = "0x2AB1E40", VA = "0x2AB1E40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CBDC", Offset = "0xE6CBDC")]
	private void <OnKillCurrentEnemys>b__18_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x2AB1E50", Offset = "0x2AB1E50", VA = "0x2AB1E50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CBEC", Offset = "0xE6CBEC")]
	private bool <OnKillCurrentEnemys>b__18_2(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x2AB1F04", Offset = "0x2AB1F04", VA = "0x2AB1F04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CBFC", Offset = "0xE6CBFC")]
	private void <OnKillCurrentEnemys>b__18_3(Collider collider1)
	{
	}
}
[Token(Token = "0x20002AE")]
public class KeyboardInput : MonoBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TestPlayerMove Player;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x20B5B8C", Offset = "0x20B5B8C", VA = "0x20B5B8C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x20B5DD0", Offset = "0x20B5DD0", VA = "0x20B5DD0")]
	public KeyboardInput()
	{
	}
}
[Token(Token = "0x20002AF")]
public enum ClientBattleMessageType
{
	[Token(Token = "0x4000FC0")]
	EnterRoom = 1001,
	[Token(Token = "0x4000FC1")]
	GearRoomMotion = 2001
}
[Token(Token = "0x20002B0")]
public enum ServerBattleMessageType
{
	[Token(Token = "0x4000FC3")]
	BossGatlinBlendRTPC = 3001
}
[Token(Token = "0x20002B1")]
public delegate void EventListenerDelegate(GMessage evt);
[Token(Token = "0x20002B2")]
public class GDispatcher : Singleton<GDispatcher>, IDispatcher
{
	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, EventListenerDelegate> events;

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x2243ACC", Offset = "0x2243ACC", VA = "0x2243ACC", Slot = "4")]
	public void AddListener(int type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x2243C10", Offset = "0x2243C10", VA = "0x2243C10", Slot = "5")]
	public void RemoveListener(int type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x2243D3C", Offset = "0x2243D3C", VA = "0x2243D3C", Slot = "8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x2243D90", Offset = "0x2243D90", VA = "0x2243D90", Slot = "6")]
	public void SendMessage(GMessage evt)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x2244040", Offset = "0x2244040", VA = "0x2244040", Slot = "7")]
	public void SendMessage(int type, params object[] param)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x2244370", Offset = "0x2244370", VA = "0x2244370")]
	public void AddListener(ServerBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x2244374", Offset = "0x2244374", VA = "0x2244374")]
	public void RemoveListener(ServerBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x2244378", Offset = "0x2244378", VA = "0x2244378")]
	public void SendMessage(ServerBattleMessageType type, params object[] param)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x224437C", Offset = "0x224437C", VA = "0x224437C")]
	public void AddListener(ClientBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x2244380", Offset = "0x2244380", VA = "0x2244380")]
	public void RemoveListener(ClientBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x2244384", Offset = "0x2244384", VA = "0x2244384")]
	public void SendMessage(ClientBattleMessageType type, params object[] param)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x2244388", Offset = "0x2244388", VA = "0x2244388")]
	public GDispatcher()
	{
	}
}
[Token(Token = "0x20002B3")]
public class GMessage : IMessage
{
	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60994", Offset = "0xE60994")]
	private int <Type>k__BackingField;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE609A4", Offset = "0xE609A4")]
	private object[] <Params>k__BackingField;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE609B4", Offset = "0xE609B4")]
	private object <Sender>k__BackingField;

	[Token(Token = "0x17000185")]
	public int Type
	{
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x224444C", Offset = "0x224444C", VA = "0x224444C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC0C", Offset = "0xE6CC0C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x2244454", Offset = "0x2244454", VA = "0x2244454", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC1C", Offset = "0xE6CC1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public object[] Params
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x224445C", Offset = "0x224445C", VA = "0x224445C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC2C", Offset = "0xE6CC2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x2244464", Offset = "0x2244464", VA = "0x2244464", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC3C", Offset = "0xE6CC3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public object Sender
	{
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x224446C", Offset = "0x224446C", VA = "0x224446C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC4C", Offset = "0xE6CC4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x2244474", Offset = "0x2244474", VA = "0x2244474", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC5C", Offset = "0xE6CC5C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x224447C", Offset = "0x224447C", VA = "0x224447C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x224481C", Offset = "0x224481C", VA = "0x224481C")]
	public GMessage Clone()
	{
		return null;
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x2244960", Offset = "0x2244960", VA = "0x2244960")]
	public GMessage(int type)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x224432C", Offset = "0x224432C", VA = "0x224432C")]
	public GMessage(int type, params object[] param)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x2244908", Offset = "0x2244908", VA = "0x2244908")]
	public GMessage(int type, object sender, params object[] param)
	{
	}
}
[Token(Token = "0x20002B4")]
public interface IDispatcher
{
	[Token(Token = "0x6000E93")]
	void AddListener(int type, EventListenerDelegate listener);

	[Token(Token = "0x6000E94")]
	void RemoveListener(int type, EventListenerDelegate listener);

	[Token(Token = "0x6000E95")]
	void SendMessage(GMessage evt);

	[Token(Token = "0x6000E96")]
	void SendMessage(int type, params object[] param);

	[Token(Token = "0x6000E97")]
	void Clear();
}
[Token(Token = "0x20002B5")]
public interface IMessage
{
	[Token(Token = "0x17000188")]
	int Type
	{
		[Token(Token = "0x6000E98")]
		get;
		[Token(Token = "0x6000E99")]
		set;
	}

	[Token(Token = "0x17000189")]
	object Sender
	{
		[Token(Token = "0x6000E9A")]
		get;
		[Token(Token = "0x6000E9B")]
		set;
	}

	[Token(Token = "0x1700018A")]
	object[] Params
	{
		[Token(Token = "0x6000E9C")]
		get;
		[Token(Token = "0x6000E9D")]
		set;
	}

	[Token(Token = "0x6000E9E")]
	new string ToString();
}
[Token(Token = "0x20002B6")]
public class TestPlayerMove : MonoBehaviour
{
	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mianCam;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE609C4", Offset = "0xE609C4")]
	public float MoveSpeed;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeed;

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x2AB4DF0", Offset = "0x2AB4DF0", VA = "0x2AB4DF0")]
	public void Move(Vector3 dir, bool isforward)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x2AB4EB0", Offset = "0x2AB4EB0", VA = "0x2AB4EB0")]
	public void Rotate(bool isleft)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x2AB4F48", Offset = "0x2AB4F48", VA = "0x2AB4F48")]
	public void PlayerRotate(float x, float y)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x2AB5000", Offset = "0x2AB5000", VA = "0x2AB5000")]
	public TestPlayerMove()
	{
	}
}
[Token(Token = "0x20002B7")]
public enum PlayerCountDiffculty
{
	[Token(Token = "0x4000FCC")]
	Diff_1Player = 1,
	[Token(Token = "0x4000FCD")]
	Diff_2Player,
	[Token(Token = "0x4000FCE")]
	Diff_3Player,
	[Token(Token = "0x4000FCF")]
	Diff_4Player
}
[Token(Token = "0x20002B8")]
public enum e_type_camp
{
	[Token(Token = "0x4000FD1")]
	Enemy,
	[Token(Token = "0x4000FD2")]
	Teammate,
	[Token(Token = "0x4000FD3")]
	Self,
	[Token(Token = "0x4000FD4")]
	All
}
[Token(Token = "0x20002B9")]
public enum e_Player_Style
{
	[Token(Token = "0x4000FD6")]
	Default,
	[Token(Token = "0x4000FD7")]
	Man01,
	[Token(Token = "0x4000FD8")]
	Man02,
	[Token(Token = "0x4000FD9")]
	Women01,
	[Token(Token = "0x4000FDA")]
	Women02
}
[Token(Token = "0x20002BA")]
public enum WeaponTypeGroup
{
	[Token(Token = "0x4000FDC")]
	None,
	[Token(Token = "0x4000FDD")]
	SpecialWeapons,
	[Token(Token = "0x4000FDE")]
	conventionalWeapons
}
[Token(Token = "0x20002BB")]
public enum WeaponSupplyType
{
	[Token(Token = "0x4000FE0")]
	Bullet9_mm = 1,
	[Token(Token = "0x4000FE1")]
	Bullet765e_mm,
	[Token(Token = "0x4000FE2")]
	Bullet18_mm
}
[Token(Token = "0x20002BC")]
public enum e_weapon_group
{
	[Token(Token = "0x4000FE4")]
	NONE = 0,
	[Token(Token = "0x4000FE5")]
	Pistol = 1,
	[Token(Token = "0x4000FE6")]
	Micro_gatling = 5,
	[Token(Token = "0x4000FE7")]
	Continuous_RPG = 6,
	[Token(Token = "0x4000FE8")]
	FlameProjector = 7,
	[Token(Token = "0x4000FE9")]
	Fuel_gun = 8,
	[Token(Token = "0x4000FEA")]
	Machine_pistol = 9,
	[Token(Token = "0x4000FEB")]
	Shotgun = 10,
	[Token(Token = "0x4000FEC")]
	Plasma_pistol = 11,
	[Token(Token = "0x4000FED")]
	Needle_gun = 12,
	[Token(Token = "0x4000FEE")]
	Laser_pistol = 13,
	[Token(Token = "0x4000FEF")]
	Explosive_crossbow = 14,
	[Token(Token = "0x4000FF0")]
	Pulse_gun = 15,
	[Token(Token = "0x4000FF1")]
	Hand = 16,
	[Token(Token = "0x4000FF2")]
	Revolver = 17
}
[Token(Token = "0x20002BD")]
public enum e_weapon_type
{
	[Token(Token = "0x4000FF4")]
	NONE = 0,
	[Token(Token = "0x4000FF5")]
	PISTOL = 1,
	[Token(Token = "0x4000FF6")]
	Gatling = 5,
	[Token(Token = "0x4000FF7")]
	Continuous_RPG = 6,
	[Token(Token = "0x4000FF8")]
	FlameProjector = 7,
	[Token(Token = "0x4000FF9")]
	Fuel_gun = 8,
	[Token(Token = "0x4000FFA")]
	Machine_pistol = 9,
	[Token(Token = "0x4000FFB")]
	Shotgun = 10,
	[Token(Token = "0x4000FFC")]
	Plasma_pistol = 11,
	[Token(Token = "0x4000FFD")]
	Needle_gun = 12,
	[Token(Token = "0x4000FFE")]
	Laser_pistol = 13,
	[Token(Token = "0x4000FFF")]
	Explosive_crossbow = 14,
	[Token(Token = "0x4001000")]
	Pulse_gun = 15,
	[Token(Token = "0x4001001")]
	Hand = 16,
	[Token(Token = "0x4001002")]
	Revolver = 17
}
[Token(Token = "0x20002BE")]
public enum e_bullet_type
{
	[Token(Token = "0x4001004")]
	None = 0,
	[Token(Token = "0x4001005")]
	B_9 = 100,
	[Token(Token = "0x4001006")]
	B_765 = 101,
	[Token(Token = "0x4001007")]
	B_18 = 102,
	[Token(Token = "0x4001008")]
	Fuel = 103,
	[Token(Token = "0x4001009")]
	Energy = 104
}
[Token(Token = "0x20002BF")]
public enum e_attributes_type
{
	[Token(Token = "0x400100B")]
	None,
	[Token(Token = "0x400100C")]
	BulletDamage,
	[Token(Token = "0x400100D")]
	MagazineCapacity,
	[Token(Token = "0x400100E")]
	BlindSideShot,
	[Token(Token = "0x400100F")]
	CarryingAmmunition,
	[Token(Token = "0x4001010")]
	ChangeAmmunitionTechnique,
	[Token(Token = "0x4001011")]
	viability
}
[Token(Token = "0x20002C0")]
public enum e_Shop_Type
{
	[Token(Token = "0x4001013")]
	Workbench,
	[Token(Token = "0x4001014")]
	WeaponShop,
	[Token(Token = "0x4001015")]
	BulletShop,
	[Token(Token = "0x4001016")]
	Equipment,
	[Token(Token = "0x4001017")]
	Attributes
}
[Token(Token = "0x20002C1")]
public enum ModelClothes_type
{
	[Token(Token = "0x4001019")]
	None,
	[Token(Token = "0x400101A")]
	HeadWear,
	[Token(Token = "0x400101B")]
	HandRing,
	[Token(Token = "0x400101C")]
	Necklace,
	[Token(Token = "0x400101D")]
	Eardrop,
	[Token(Token = "0x400101E")]
	Ring
}
[Token(Token = "0x20002C2")]
[Flags]
public enum e_Attack_type
{
	[Token(Token = "0x4001020")]
	None = 0,
	[Token(Token = "0x4001021")]
	Normal = 1,
	[Token(Token = "0x4001022")]
	Burning = 2,
	[Token(Token = "0x4001023")]
	Poison = 4,
	[Token(Token = "0x4001024")]
	FixedBackGroundNormal = 8
}
[Token(Token = "0x20002C3")]
[Flags]
public enum e_HitEffect_type
{
	[Token(Token = "0x4001026")]
	Normal = 1,
	[Token(Token = "0x4001027")]
	Ragdoll = 2,
	[Token(Token = "0x4001028")]
	Broken = 4
}
[Token(Token = "0x20002C4")]
public enum e_type_monster
{
	[Token(Token = "0x400102A")]
	None = 0,
	[Token(Token = "0x400102B")]
	Normal = 1,
	[Token(Token = "0x400102C")]
	NotRootMotion = 10,
	[Token(Token = "0x400102D")]
	MonsterSummon = 20,
	[Token(Token = "0x400102E")]
	Boss = 100
}
[Token(Token = "0x20002C5")]
public enum e_type_npc
{
	[Token(Token = "0x4001030")]
	None = 0,
	[Token(Token = "0x4001031")]
	Normal = 10,
	[Token(Token = "0x4001032")]
	Protective = 100
}
[Token(Token = "0x20002C6")]
public enum e_type_role
{
	[Token(Token = "0x4001034")]
	NONE,
	[Token(Token = "0x4001035")]
	HERO,
	[Token(Token = "0x4001036")]
	MONSTER,
	[Token(Token = "0x4001037")]
	NPC
}
[Token(Token = "0x20002C7")]
public enum e_group_type
{
	[Token(Token = "0x4001039")]
	None = -1,
	[Token(Token = "0x400103A")]
	Unit_Group_Player_A = 0,
	[Token(Token = "0x400103B")]
	Unit_Group_Player_B = 1,
	[Token(Token = "0x400103C")]
	Unit_Group_Monster = 100
}
[Token(Token = "0x20002C8")]
public enum e_GameStatusType
{
	[Token(Token = "0x400103E")]
	NONE,
	[Token(Token = "0x400103F")]
	Ready,
	[Token(Token = "0x4001040")]
	FightStart,
	[Token(Token = "0x4001041")]
	FightStop,
	[Token(Token = "0x4001042")]
	StartVideo,
	[Token(Token = "0x4001043")]
	StopVideo,
	[Token(Token = "0x4001044")]
	ControlFire
}
[Token(Token = "0x20002C9")]
public enum e_IntegralType
{
	[Token(Token = "0x4001046")]
	Add,
	[Token(Token = "0x4001047")]
	Reduce,
	[Token(Token = "0x4001048")]
	Reset,
	[Token(Token = "0x4001049")]
	DeathSettlement,
	[Token(Token = "0x400104A")]
	InsufficientQuantity,
	[Token(Token = "0x400104B")]
	SameWeapon
}
[Token(Token = "0x20002CA")]
public enum e_EnergyType
{
	[Token(Token = "0x400104D")]
	Add,
	[Token(Token = "0x400104E")]
	Reduce,
	[Token(Token = "0x400104F")]
	Reset,
	[Token(Token = "0x4001050")]
	InsufficientQuantity
}
[Token(Token = "0x20002CB")]
public enum e_CurrencyType
{
	[Token(Token = "0x4001052")]
	All,
	[Token(Token = "0x4001053")]
	Integral,
	[Token(Token = "0x4001054")]
	Energy
}
[Token(Token = "0x20002CC")]
public enum e_CutScenesType
{
	[Token(Token = "0x4001056")]
	NONE,
	[Token(Token = "0x4001057")]
	FightStart,
	[Token(Token = "0x4001058")]
	Unlock_One,
	[Token(Token = "0x4001059")]
	Unlock_Two,
	[Token(Token = "0x400105A")]
	FightEnd_Win,
	[Token(Token = "0x400105B")]
	FightEnd_Fail,
	[Token(Token = "0x400105C")]
	Player_Death_One,
	[Token(Token = "0x400105D")]
	Player_Death_Two,
	[Token(Token = "0x400105E")]
	Player_Death_Three,
	[Token(Token = "0x400105F")]
	Player_Death_Four,
	[Token(Token = "0x4001060")]
	Doctor_Remind_One
}
[Token(Token = "0x20002CD")]
public enum e_setting_type
{
	[Token(Token = "0x4001062")]
	None = 0,
	[Token(Token = "0x4001063")]
	MaxMonsterCount = 3,
	[Token(Token = "0x4001064")]
	GameProgressCoefficient = 9,
	[Token(Token = "0x4001065")]
	FailScoreCoefficient = 10,
	[Token(Token = "0x4001066")]
	RewardResourcesCoefficient = 12,
	[Token(Token = "0x4001067")]
	GameScoreRanges = 13,
	[Token(Token = "0x4001068")]
	AreaLimited = 14,
	[Token(Token = "0x4001069")]
	BossBattleEndDelayTime = 21,
	[Token(Token = "0x400106A")]
	MaxDecals = 30,
	[Token(Token = "0x400106B")]
	DecalDesTime = 31,
	[Token(Token = "0x400106C")]
	MaxDieRagdoll = 32,
	[Token(Token = "0x400106D")]
	FlamingAreasDamage = 100,
	[Token(Token = "0x400106E")]
	FlamingAreasDamageFrequency = 101,
	[Token(Token = "0x400106F")]
	StoneGearDamage = 102,
	[Token(Token = "0x4001070")]
	LaserGearDamage = 103,
	[Token(Token = "0x4001071")]
	SpineGearDamage = 104,
	[Token(Token = "0x4001072")]
	StoneGearDurability = 105,
	[Token(Token = "0x4001073")]
	Slotmachine_9mm = 107,
	[Token(Token = "0x4001074")]
	Slotmachine_18mm = 108,
	[Token(Token = "0x4001075")]
	Slotmachine_765mm = 109,
	[Token(Token = "0x4001076")]
	SlotmachineConsume = 110,
	[Token(Token = "0x4001077")]
	PlayerMaxHp = 106,
	[Token(Token = "0x4001078")]
	DefaultIntegral = 1000
}
[Token(Token = "0x20002CE")]
public enum EffectStatus
{
	[Token(Token = "0x400107A")]
	None = 0,
	[Token(Token = "0x400107B")]
	SwitchRandomWeapon = 1,
	[Token(Token = "0x400107C")]
	GameIntensity = 2,
	[Token(Token = "0x400107D")]
	PassCurrentRoom = 3,
	[Token(Token = "0x400107E")]
	AudioEffect = 5,
	[Token(Token = "0x400107F")]
	MonsterChange = 6,
	[Token(Token = "0x4001080")]
	ReviveHP = 7,
	[Token(Token = "0x4001081")]
	RoomLockSignStatus = 8,
	[Token(Token = "0x4001082")]
	GuidStepStatus = 9,
	[Token(Token = "0x4001083")]
	ClearMonster = 10,
	[Token(Token = "0x4001084")]
	Calibration = 11,
	[Token(Token = "0x4001085")]
	TeleporterStatus = 12,
	[Token(Token = "0x4001086")]
	SetLevel = 16,
	[Token(Token = "0x4001087")]
	TimerAudio_4 = 17,
	[Token(Token = "0x4001088")]
	PlayerWarning = 18,
	[Token(Token = "0x4001089")]
	GeneratorEnd = 19,
	[Token(Token = "0x400108A")]
	PlayerConvey = 20
}
[Token(Token = "0x20002CF")]
public enum e_MonsterChange
{
	[Token(Token = "0x400108C")]
	Bomb = 1,
	[Token(Token = "0x400108D")]
	Sand,
	[Token(Token = "0x400108E")]
	FireLeft,
	[Token(Token = "0x400108F")]
	SetFireHead,
	[Token(Token = "0x4001090")]
	Expand
}
[Token(Token = "0x20002D0")]
public enum VRInputType
{
	[Token(Token = "0x4001092")]
	HTC
}
[Token(Token = "0x20002D1")]
public static class GameConfig
{
	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, e_type_language> languageList;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x224498C", Offset = "0x224498C", VA = "0x224498C")]
	public static string ToLanguage(string languageName, out e_type_language languageType)
	{
		return null;
	}
}
[Token(Token = "0x20002D2")]
public enum e_type_language
{
	[Token(Token = "0x4001095")]
	None = -1,
	[Token(Token = "0x4001096")]
	Chinese,
	[Token(Token = "0x4001097")]
	English_US,
	[Token(Token = "0x4001098")]
	Korean,
	[Token(Token = "0x4001099")]
	Japanese,
	[Token(Token = "0x400109A")]
	Chinese_TW,
	[Token(Token = "0x400109B")]
	Vietnamese,
	[Token(Token = "0x400109C")]
	Thai,
	[Token(Token = "0x400109D")]
	Indonesian,
	[Token(Token = "0x400109E")]
	German,
	[Token(Token = "0x400109F")]
	French,
	[Token(Token = "0x40010A0")]
	Russian,
	[Token(Token = "0x40010A1")]
	Portuguese,
	[Token(Token = "0x40010A2")]
	Spanish,
	[Token(Token = "0x40010A3")]
	Italian,
	[Token(Token = "0x40010A4")]
	Polish,
	[Token(Token = "0x40010A5")]
	Turkish,
	[Token(Token = "0x40010A6")]
	Dutch,
	[Token(Token = "0x40010A7")]
	Arabic
}
[Token(Token = "0x20002D3")]
public enum e_hardware_type
{
	[Token(Token = "0x40010A9")]
	Default,
	[Token(Token = "0x40010AA")]
	L_Haptics,
	[Token(Token = "0x40010AB")]
	L_Shield,
	[Token(Token = "0x40010AC")]
	R_Knt,
	[Token(Token = "0x40010AD")]
	L_HapticsAndR_Knt,
	[Token(Token = "0x40010AE")]
	L_ShieldAndR_Knt
}
[Token(Token = "0x20002D4")]
public enum e_weapon_hardware_type
{
	[Token(Token = "0x40010B0")]
	Default,
	[Token(Token = "0x40010B1")]
	KNT,
	[Token(Token = "0x40010B2")]
	Haptics,
	[Token(Token = "0x40010B3")]
	Shield
}
[Token(Token = "0x20002D5")]
public enum GameModeType
{
	[Token(Token = "0x40010B5")]
	LargeSpace = 1,
	[Token(Token = "0x40010B6")]
	Room,
	[Token(Token = "0x40010B7")]
	VRBox
}
[Token(Token = "0x20002D6")]
public enum e_Server_Type
{
	[Token(Token = "0x40010B9")]
	None,
	[Token(Token = "0x40010BA")]
	Host,
	[Token(Token = "0x40010BB")]
	Server
}
[Token(Token = "0x20002D7")]
public enum e_GameDiffculty
{
	[Token(Token = "0x40010BD")]
	Easy = 1,
	[Token(Token = "0x40010BE")]
	Common,
	[Token(Token = "0x40010BF")]
	Difficulty,
	[Token(Token = "0x40010C0")]
	Nightmare
}
[Token(Token = "0x20002D8")]
public enum e_type_btnState
{
	[Token(Token = "0x40010C2")]
	None,
	[Token(Token = "0x40010C3")]
	Down,
	[Token(Token = "0x40010C4")]
	Up,
	[Token(Token = "0x40010C5")]
	Downing
}
[Token(Token = "0x20002D9")]
public enum e_type_btn
{
	[Token(Token = "0x40010C7")]
	LPrimaryBtn,
	[Token(Token = "0x40010C8")]
	LSecondaryBtn,
	[Token(Token = "0x40010C9")]
	LGripBtn,
	[Token(Token = "0x40010CA")]
	LTriggerBtn,
	[Token(Token = "0x40010CB")]
	LMenuBtn,
	[Token(Token = "0x40010CC")]
	RPrimaryBtn,
	[Token(Token = "0x40010CD")]
	RSecondaryBtn,
	[Token(Token = "0x40010CE")]
	RGripBtn,
	[Token(Token = "0x40010CF")]
	RTriggerBtn,
	[Token(Token = "0x40010D0")]
	RMenuBtn
}
[Token(Token = "0x20002DA")]
public enum e_type_vrMode
{
	[Token(Token = "0x40010D2")]
	openxr,
	[Token(Token = "0x40010D3")]
	oculus,
	[Token(Token = "0x40010D4")]
	pico,
	[Token(Token = "0x40010D5")]
	yvr,
	[Token(Token = "0x40010D6")]
	sky
}
[Token(Token = "0x20002DB")]
public class GameWorld : Singleton<GameWorld>
{
	[Serializable]
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55504", Offset = "0xE55504")]
	private sealed class <>c
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__39_0;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<WUnit> <>9__40_0;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__41_0;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<WUnit> <>9__45_0;

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x284362C", Offset = "0x284362C", VA = "0x284362C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x2843634", Offset = "0x2843634", VA = "0x2843634")]
		internal void <BattleReady>b__39_0(WUnit unit)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x2843648", Offset = "0x2843648", VA = "0x2843648")]
		internal void <BattleStart>b__40_0(WUnit unit)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x2843720", Offset = "0x2843720", VA = "0x2843720")]
		internal void <BattleEnd>b__41_0()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x2843920", Offset = "0x2843920", VA = "0x2843920")]
		internal void <ReviveAllPlayer>b__45_0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55514", Offset = "0xE55514")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool state;

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x2843988", Offset = "0x2843988", VA = "0x2843988")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x2843990", Offset = "0x2843990", VA = "0x2843990")]
		internal void <SetNoHurtStateAllUnit>b__0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE609FC", Offset = "0xE609FC")]
	private static bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool gRunning;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int gCounter;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int gFixedCounter;

	[Token(Token = "0x40010DB")]
	public const int UPDATE_FRAME = 5;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static RoomStateAgent.eRoomState roomState;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Battle battle;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static BattleManager battleManager;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static BattleData battleData;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static NetworkStatusHandle GlobalNetworkStatus;

	[Token(Token = "0x1700018B")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x225015C", Offset = "0x225015C", VA = "0x225015C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC6C", Offset = "0xE6CC6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x22501C0", Offset = "0x22501C0", VA = "0x22501C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CC7C", Offset = "0xE6CC7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public static bool IsLogin
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x225022C", Offset = "0x225022C", VA = "0x225022C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x225029C", Offset = "0x225029C", VA = "0x225029C")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public static bool GameStartStatus
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x2250314", Offset = "0x2250314", VA = "0x2250314")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018E")]
	public static RoomStateAgent.eRoomState CurrentGameRoomState
	{
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x2250418", Offset = "0x2250418", VA = "0x2250418")]
		get
		{
			return default(RoomStateAgent.eRoomState);
		}
		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x225047C", Offset = "0x225047C", VA = "0x225047C")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public static bool IsServer
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x22489E0", Offset = "0x22489E0", VA = "0x22489E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public static e_Server_Type ServerType
	{
		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x22504E4", Offset = "0x22504E4", VA = "0x22504E4")]
		get
		{
			return default(e_Server_Type);
		}
	}

	[Token(Token = "0x17000191")]
	public static bool IsLive
	{
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x22493C8", Offset = "0x22493C8", VA = "0x22493C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000192")]
	public static bool IsOnlyServer
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x2250564", Offset = "0x2250564", VA = "0x2250564")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000193")]
	public static string Version
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x22505F0", Offset = "0x22505F0", VA = "0x22505F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public static string GameName
	{
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x2250670", Offset = "0x2250670", VA = "0x2250670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public static Battle GlobalBattle
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x22506F0", Offset = "0x22506F0", VA = "0x22506F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public static BattleManager GlobalBattleManager
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x2250754", Offset = "0x2250754", VA = "0x2250754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x22507B8", Offset = "0x22507B8", VA = "0x22507B8")]
	public static BattleData GetBattleData()
	{
		return null;
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x225081C", Offset = "0x225081C", VA = "0x225081C")]
	public static void SetBattleData(BattleData _battleData)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x2250888", Offset = "0x2250888", VA = "0x2250888")]
	public static void SetBattleInstance(Battle _battle, BattleManager _battleManager)
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x2250914", Offset = "0x2250914", VA = "0x2250914")]
	public static void BattleReady()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x2251D48", Offset = "0x2251D48", VA = "0x2251D48")]
	public static void BattleStart()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x225241C", Offset = "0x225241C", VA = "0x225241C")]
	public static void BattleEnd()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x2252C9C", Offset = "0x2252C9C", VA = "0x2252C9C")]
	public static void StartVideo(bool status)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x2252F90", Offset = "0x2252F90", VA = "0x2252F90")]
	public static void StopVideo()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x2251974", Offset = "0x2251974", VA = "0x2251974")]
	public static void SetNoHurtStateAllUnit(bool state)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x2251B24", Offset = "0x2251B24", VA = "0x2251B24")]
	private static void ReviveAllPlayer()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x225326C", Offset = "0x225326C", VA = "0x225326C")]
	public static void RevivePlayer(WUnit unit, bool isPlayReviveAudio = false)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x22535CC", Offset = "0x22535CC", VA = "0x22535CC")]
	public GameWorld()
	{
	}
}
[Token(Token = "0x20002DE")]
public enum e_TipShowType
{
	[Token(Token = "0x40010E8")]
	Normal,
	[Token(Token = "0x40010E9")]
	Reuse,
	[Token(Token = "0x40010EA")]
	AutoHide,
	[Token(Token = "0x40010EB")]
	Awake
}
[Token(Token = "0x20002DF")]
public class GuideController : MonoBehaviour
{
	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int GuideTipID;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60A0C", Offset = "0xE60A0C")]
	public e_GuideTip_Type guideTip_Type;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60A44", Offset = "0xE60A44")]
	public e_TipShowType TipShowType;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CHGuidePrefab;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject USGuidePrefab;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60A7C", Offset = "0xE60A7C")]
	public Transform GuideTrans;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60AB4", Offset = "0xE60AB4")]
	public float TriggerDis;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float aniDelayTime;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject GuideTip;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isCheckDis;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool IsStart;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine AutoHideCoroutine;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine HideCoroutine;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject GuidePrefab;

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x2523C0C", Offset = "0x2523C0C", VA = "0x2523C0C")]
	public void DoInit(int id, Transform trans)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x2523F58", Offset = "0x2523F58", VA = "0x2523F58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x25244EC", Offset = "0x25244EC", VA = "0x25244EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x25240B4", Offset = "0x25240B4", VA = "0x25240B4")]
	public void DoShow()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x25245D4", Offset = "0x25245D4", VA = "0x25245D4")]
	public void DoHide()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x252476C", Offset = "0x252476C", VA = "0x252476C")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x2524854", Offset = "0x2524854", VA = "0x2524854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x2524EF8", Offset = "0x2524EF8", VA = "0x2524EF8")]
	public void SetGuideColState(bool isStart, int guideID)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x2524F10", Offset = "0x2524F10", VA = "0x2524F10")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CC8C", Offset = "0xE6CC8C")]
	private void RandomID()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x2524F40", Offset = "0x2524F40", VA = "0x2524F40")]
	public GuideController()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x2524F54", Offset = "0x2524F54", VA = "0x2524F54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CCC4", Offset = "0xE6CCC4")]
	private void <DoShow>b__18_0()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x2525084", Offset = "0x2525084", VA = "0x2525084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CCD4", Offset = "0xE6CCD4")]
	private void <DoShow>b__18_1()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x25250A4", Offset = "0x25250A4", VA = "0x25250A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CCE4", Offset = "0xE6CCE4")]
	private void <DoHide>b__19_0()
	{
	}
}
[Token(Token = "0x20002E0")]
public class GuideHandleController : MonoBehaviour
{
	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReload;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isAni;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float time;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 TargetPos;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 InitPos;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string reloadName;

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x25251C8", Offset = "0x25251C8", VA = "0x25251C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x25251D0", Offset = "0x25251D0", VA = "0x25251D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x25251D8", Offset = "0x25251D8", VA = "0x25251D8")]
	public void NeedReload(Vector3 pos, string aniName)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x25252A4", Offset = "0x25252A4", VA = "0x25252A4")]
	public void ResetReload()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x25252F4", Offset = "0x25252F4", VA = "0x25252F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x2525560", Offset = "0x2525560", VA = "0x2525560")]
	public GuideHandleController()
	{
	}
}
[Token(Token = "0x20002E1")]
public enum e_GuideStepStatus
{
	[Token(Token = "0x4001103")]
	Stop,
	[Token(Token = "0x4001104")]
	Start,
	[Token(Token = "0x4001105")]
	GuidEnd
}
[Token(Token = "0x20002E2")]
public enum e_GuideTip_Type
{
	[Token(Token = "0x4001107")]
	PickupWeapon,
	[Token(Token = "0x4001108")]
	Shot,
	[Token(Token = "0x4001109")]
	NeedReload,
	[Token(Token = "0x400110A")]
	ComeHere,
	[Token(Token = "0x400110B")]
	PullTheLever,
	[Token(Token = "0x400110C")]
	PurchaseWeapons,
	[Token(Token = "0x400110D")]
	OpenDoor,
	[Token(Token = "0x400110E")]
	OpenBox,
	[Token(Token = "0x400110F")]
	BuyWeapon,
	[Token(Token = "0x4001110")]
	ReplenishAmmo,
	[Token(Token = "0x4001111")]
	HelpTeammater,
	[Token(Token = "0x4001112")]
	TeamHasNotAssembled,
	[Token(Token = "0x4001113")]
	ReturnGameArea,
	[Token(Token = "0x4001114")]
	NeedTriangle,
	[Token(Token = "0x4001115")]
	Traptriggered,
	[Token(Token = "0x4001116")]
	InsufficientEnergy,
	[Token(Token = "0x4001117")]
	InsufficientIntegral,
	[Token(Token = "0x4001118")]
	Recoil,
	[Token(Token = "0x4001119")]
	DoorStatus,
	[Token(Token = "0x400111A")]
	Die,
	[Token(Token = "0x400111B")]
	DemoEnd,
	[Token(Token = "0x400111C")]
	ConsultMap,
	[Token(Token = "0x400111D")]
	Workbench,
	[Token(Token = "0x400111E")]
	EnergyExchange,
	[Token(Token = "0x400111F")]
	NotOpen,
	[Token(Token = "0x4001120")]
	Attribute,
	[Token(Token = "0x4001121")]
	GrabByHand,
	[Token(Token = "0x4001122")]
	IncreasedDifficulty,
	[Token(Token = "0x4001123")]
	MaxDifficulty,
	[Token(Token = "0x4001124")]
	Clearance
}
[Serializable]
[Token(Token = "0x20002E3")]
public class GuideTipModelInfo
{
	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_GuideTip_Type guideTip_Type;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transform;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AniName;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x2526C7C", Offset = "0x2526C7C", VA = "0x2526C7C")]
	public GuideTipModelInfo()
	{
	}
}
[Token(Token = "0x20002E4")]
public class GuideManager : Singleton<GuideManager>
{
	[Token(Token = "0x20002E5")]
	public class GuidTip
	{
		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsLoop;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Time;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioEvent aEvent;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float RunningTime;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isAudioFinish;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 playAudioPos;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WwiseDefine audioObj;

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x2843C84", Offset = "0x2843C84", VA = "0x2843C84")]
		public void Start(Vector3 pos)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x2843E04", Offset = "0x2843E04", VA = "0x2843E04")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x2843EF0", Offset = "0x2843EF0", VA = "0x2843EF0")]
		public void AudioFinish()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x2843C90", Offset = "0x2843C90", VA = "0x2843C90")]
		private void DoStart(Vector3 pos)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x2843EFC", Offset = "0x2843EFC", VA = "0x2843EFC")]
		public void Update(float dltTime)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x2843F30", Offset = "0x2843F30", VA = "0x2843F30")]
		public GuidTip()
		{
		}
	}

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool FirstLogin;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private e_GuideStepStatus GuidStepStatus;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRBaseInteractable dialInteractable;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchController SafeRoomSwitch;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GuidTip curGuidTip;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<e_GuideTip_Type, Dictionary<int, GuideController>> GuideTipDic;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<e_GuideTip_Type, bool> GuideTipStateDic;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<e_GuideTip_Type, bool> GuideTipFristStateDic;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, GuideController> guideDic;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject guideModelHand;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator ModelHandAnimator;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GuideTipModelInfo> guideTipModelInfos;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GuideHandleController guideHandleController;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<e_GuideTip_Type, bool> GuideState;

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x2525568", Offset = "0x2525568", VA = "0x2525568")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x25255B8", Offset = "0x25255B8", VA = "0x25255B8")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x2525610", Offset = "0x2525610", VA = "0x2525610")]
	public void Start()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x25255DC", Offset = "0x25255DC", VA = "0x25255DC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x2525620", Offset = "0x2525620", VA = "0x2525620")]
	private void DoStart()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x2525B20", Offset = "0x2525B20", VA = "0x2525B20")]
	private void DoStop()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x2526010", Offset = "0x2526010", VA = "0x2526010")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x2526054", Offset = "0x2526054", VA = "0x2526054")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x25261B8", Offset = "0x25261B8", VA = "0x25261B8")]
	private void SendGuidStepStatus(e_GuideStepStatus stepStatus)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x252640C", Offset = "0x252640C", VA = "0x252640C")]
	public void SyncGuidStepStatus(e_GuideStepStatus stepStatus)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x2525B28", Offset = "0x2525B28", VA = "0x2525B28")]
	public void ShowGuidTip(e_GuideTip_Type type)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x2525A38", Offset = "0x2525A38", VA = "0x2525A38")]
	private void DesGuideModelHand()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x252652C", Offset = "0x252652C", VA = "0x252652C")]
	private void HandGuideTip(e_GuideTip_Type guideTip_Type)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x2525574", Offset = "0x2525574", VA = "0x2525574")]
	public void StopGuidTip()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x2523D48", Offset = "0x2523D48", VA = "0x2523D48")]
	public void InitGuideTipInfo(e_GuideTip_Type tip_Type, GuideController guide)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x2526694", Offset = "0x2526694", VA = "0x2526694")]
	public void ClearGuideTip()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x2524A4C", Offset = "0x2524A4C", VA = "0x2524A4C")]
	public void SetGuidesTipState(e_GuideTip_Type tip_Type, bool isStart, int guideTipID = -1)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x2526530", Offset = "0x2526530", VA = "0x2526530")]
	public void SetGuideTipFristState(e_GuideTip_Type tip_Type, bool isFrist)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x2526720", Offset = "0x2526720", VA = "0x2526720")]
	public bool CheckGuideTipState(e_GuideTip_Type tip_Type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x25267A0", Offset = "0x25267A0", VA = "0x25267A0")]
	public bool CheckGuideTipFristState(e_GuideTip_Type tip_Type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x25268F0", Offset = "0x25268F0", VA = "0x25268F0")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x2526B34", Offset = "0x2526B34", VA = "0x2526B34")]
	public GuideManager()
	{
	}
}
[Token(Token = "0x20002E6")]
public class LiveManager : Singleton<LiveManager>
{
	[Serializable]
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55524", Offset = "0xE55524")]
	private sealed class <>c
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> <>9__0_1;

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x2059C98", Offset = "0x2059C98", VA = "0x2059C98")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x2059CA0", Offset = "0x2059CA0", VA = "0x2059CA0")]
		internal void <Init>b__0_1(int id)
		{
		}
	}

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WUnit PlayerUnit;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ILiveCameraDataCell cameraControl;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool setFirstPersonCamera;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform handLeftModel;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform handRightModel;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator handAni_l;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator handAni_r;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerDeadRagdollTools ragdollTools;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isDie;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> preMashLayerList;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int changeSetMaskLayer;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int preSetMaskLayer;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EffectDefine momentumEffect;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EffectDefine momentumAddEffect;

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x24D23B8", Offset = "0x24D23B8", VA = "0x24D23B8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x24D2E7C", Offset = "0x24D2E7C", VA = "0x24D2E7C")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x24D2F58", Offset = "0x24D2F58", VA = "0x24D2F58")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x24D33D0", Offset = "0x24D33D0", VA = "0x24D33D0")]
	private void playerStyleChange()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x24D3504", Offset = "0x24D3504", VA = "0x24D3504")]
	private void UnPlayerStyleChange()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x24D3630", Offset = "0x24D3630", VA = "0x24D3630")]
	private void playerStylePreChange()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x24D3764", Offset = "0x24D3764", VA = "0x24D3764")]
	private void UnPlayerStylePreChange()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x24D3890", Offset = "0x24D3890", VA = "0x24D3890")]
	private void OnPlayerLayer(WUnit player)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x24D3A68", Offset = "0x24D3A68", VA = "0x24D3A68")]
	private void OnPrePlayerLayer(WUnit player)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x24D3B14", Offset = "0x24D3B14", VA = "0x24D3B14")]
	private void FirstPersonMode_Start(int site, ILiveCameraDataCell control)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x24D393C", Offset = "0x24D393C", VA = "0x24D393C")]
	private void SetPlayerRenderActive(WUnit player, bool isActive)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x24D3DB4", Offset = "0x24D3DB4", VA = "0x24D3DB4")]
	private void FirstPersonMode_State()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x24D3DB8", Offset = "0x24D3DB8", VA = "0x24D3DB8")]
	private void FirstPersonMode_StateClear()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x24D2E80", Offset = "0x24D2E80", VA = "0x24D2E80")]
	private void FirstPersonMode_Clear()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x24D3ECC", Offset = "0x24D3ECC", VA = "0x24D3ECC")]
	private void FirstPersonMode_Hit(WUnit attacker, WUnit hurter, HitResultData data)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x24D3E1C", Offset = "0x24D3E1C", VA = "0x24D3E1C")]
	private void FirstPersonMode_HitClear()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x24D4108", Offset = "0x24D4108", VA = "0x24D4108")]
	private void FirstPersonMode_Die(int playerId)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x24D4128", Offset = "0x24D4128", VA = "0x24D4128")]
	private void FirstPersonMode_DieClear(WUnit unit)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x24D3EB4", Offset = "0x24D3EB4", VA = "0x24D3EB4")]
	private void FirstPersonMode_DieClear()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x24D414C", Offset = "0x24D414C", VA = "0x24D414C")]
	public void FirstPersonMode_ReviveUI(int playerId)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x24D2F5C", Offset = "0x24D2F5C", VA = "0x24D2F5C")]
	private void FirstPersonMode_Update()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x24D3D7C", Offset = "0x24D3D7C", VA = "0x24D3D7C")]
	public void SetCurPlayerWeaponActive(bool isActive)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x24D416C", Offset = "0x24D416C", VA = "0x24D416C")]
	public LiveManager()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x24D4284", Offset = "0x24D4284", VA = "0x24D4284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CCF4", Offset = "0xE6CCF4")]
	private void <Init>b__0_2(e_LiveCamera_Model_Type type, int site, LiveCameraConfigData data, ILiveCameraDataCell control)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x24D4350", Offset = "0x24D4350", VA = "0x24D4350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CD04", Offset = "0xE6CD04")]
	private void <Init>b__0_3(e_LiveCamera_Model_Type type, int site, LiveCameraConfigData data)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x24D4354", Offset = "0x24D4354", VA = "0x24D4354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CD14", Offset = "0xE6CD14")]
	private void <Init>b__0_0(e_type_role type, WUnit attacker, WUnit hurter, HitResultData r)
	{
	}
}
[Token(Token = "0x20002E8")]
public class RoomStateAgent
{
	[Token(Token = "0x20002E9")]
	public enum eRoomState
	{
		[Token(Token = "0x4001154")]
		None,
		[Token(Token = "0x4001155")]
		Ready,
		[Token(Token = "0x4001156")]
		Movie,
		[Token(Token = "0x4001157")]
		Fighting,
		[Token(Token = "0x4001158")]
		FightEnd,
		[Token(Token = "0x4001159")]
		FightStart
	}

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RoomBaseState activeState;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private eRoomState activeStateType;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<eRoomState, RoomBaseState> stateList;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private eRoomState preStateType;

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x24BA3C0", Offset = "0x24BA3C0", VA = "0x24BA3C0")]
	public eRoomState STPreStateType()
	{
		return default(eRoomState);
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x24BA3C8", Offset = "0x24BA3C8", VA = "0x24BA3C8")]
	public void Init(Battle battle, ServerBattleRoom battleRoom)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x24BA738", Offset = "0x24BA738", VA = "0x24BA738")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x24BA750", Offset = "0x24BA750", VA = "0x24BA750")]
	public void DoFixUpdate(float fixDeltaTime)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x24BA768", Offset = "0x24BA768", VA = "0x24BA768")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x24BA780", Offset = "0x24BA780", VA = "0x24BA780")]
	private void DoStateExit()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x24BA7C0", Offset = "0x24BA7C0", VA = "0x24BA7C0")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x24BA6A4", Offset = "0x24BA6A4", VA = "0x24BA6A4")]
	private void Register(eRoomState type, RoomBaseState st)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x24BA7D8", Offset = "0x24BA7D8", VA = "0x24BA7D8")]
	private void UnRegister(eRoomState type)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x24BA7A8", Offset = "0x24BA7A8", VA = "0x24BA7A8")]
	public eRoomState GetStateType()
	{
		return default(eRoomState);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x24BA8C8", Offset = "0x24BA8C8", VA = "0x24BA8C8")]
	private RoomBaseState GetState()
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x24BA8D0", Offset = "0x24BA8D0", VA = "0x24BA8D0")]
	private RoomBaseState GetStateByType(eRoomState type)
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x24BA950", Offset = "0x24BA950", VA = "0x24BA950")]
	private void SetActiveState(eRoomState nextType)
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x24BA864", Offset = "0x24BA864", VA = "0x24BA864")]
	private bool IsHasState(eRoomState nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x24BA9DC", Offset = "0x24BA9DC", VA = "0x24BA9DC")]
	public void ChangeRoomState(eRoomState _nextState)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x24BAA48", Offset = "0x24BAA48", VA = "0x24BAA48")]
	public RoomStateAgent()
	{
	}
}
[Token(Token = "0x20002EA")]
public class ServerBattleManager : Singleton<ServerBattleManager>
{
	[Token(Token = "0x400115A")]
	private const int SPAWN_START_PLAYER_ID = 1;

	[Token(Token = "0x400115B")]
	private const int SPAWN_START_AI_PLAYER_ID = 100;

	[Token(Token = "0x400115C")]
	private const int SPAWN_START_MONSTER_ID = 1000000;

	[Token(Token = "0x400115D")]
	private const int SPAWN_START_NPC_ID = 2000000;

	[Token(Token = "0x400115E")]
	private const int SPAWN_START_BUFF_ID = 3000000;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int playerId;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int aiPlayerId;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int monsterId;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int npcId;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int buffId;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ServerBattleRoom _battleRoom;

	[Token(Token = "0x17000197")]
	public ServerBattleRoom BattleRoom
	{
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x24C1674", Offset = "0x24C1674", VA = "0x24C1674")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x24C145C", Offset = "0x24C145C", VA = "0x24C145C")]
	public int GetSpawnPlayerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x24C1518", Offset = "0x24C1518", VA = "0x24C1518")]
	public int GetSpawnAIPlayerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x24C15D4", Offset = "0x24C15D4", VA = "0x24C15D4")]
	public int GetSpawnMonsterID()
	{
		return default(int);
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x24C15E8", Offset = "0x24C15E8", VA = "0x24C15E8")]
	public int GetSpawnNpcID()
	{
		return default(int);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x24C15FC", Offset = "0x24C15FC", VA = "0x24C15FC")]
	public int GetSpawnBuffID()
	{
		return default(int);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x24B6C88", Offset = "0x24B6C88", VA = "0x24B6C88")]
	public void ResetObjectID()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x24C1610", Offset = "0x24C1610", VA = "0x24C1610")]
	public bool IsPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x24C1620", Offset = "0x24C1620", VA = "0x24C1620")]
	public bool IsRealityPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x24C1630", Offset = "0x24C1630", VA = "0x24C1630")]
	public bool IsAIPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x24C1640", Offset = "0x24C1640", VA = "0x24C1640")]
	public bool IsMonster(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x24C1660", Offset = "0x24C1660", VA = "0x24C1660")]
	public bool IsNpc(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x24C167C", Offset = "0x24C167C", VA = "0x24C167C")]
	public void CreateBattleRoom(Battle battle)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x24C193C", Offset = "0x24C193C", VA = "0x24C193C")]
	private void DoRoomInit()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x24C1A38", Offset = "0x24C1A38", VA = "0x24C1A38")]
	public void DoRoomExit()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x24C1B4C", Offset = "0x24C1B4C", VA = "0x24C1B4C")]
	public void DoRoomUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x24C1B94", Offset = "0x24C1B94", VA = "0x24C1B94")]
	public void DoRoomFixedUpdate()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x24C1C00", Offset = "0x24C1C00", VA = "0x24C1C00")]
	public void DoRoomLateUpdate()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x24C1C48", Offset = "0x24C1C48", VA = "0x24C1C48")]
	public ServerBattleManager()
	{
	}
}
[Token(Token = "0x20002EB")]
public class ServerBattleRoom
{
	[Token(Token = "0x20002EC")]
	public class PlayerReviveData
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float reviveTimer;

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x20610FC", Offset = "0x20610FC", VA = "0x20610FC")]
		public PlayerReviveData(WUnit _unit, float _reviveTimer)
		{
		}
	}

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Battle battle;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoomStateAgent roomStateAgent;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayerReviveData> playerResurgenceTimer;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_group_type winGroup;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public PlayerCountDiffculty playerCountDiffculty;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<WUnit> joinGamePlayerList;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<HostServer.UnitTransform> tempUnitTransformList;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HostServer.UpdateAimIKInfoCell> tempUpdateAimIKInfoCellList;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isPlayVideo;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isEnd;

	[Token(Token = "0x17000198")]
	public bool isStartFight
	{
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x24C1CD8", Offset = "0x24C1CD8", VA = "0x24C1CD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x24C1760", Offset = "0x24C1760", VA = "0x24C1760")]
	public ServerBattleRoom(Battle _battle)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x24C194C", Offset = "0x24C194C", VA = "0x24C194C")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x24C1B74", Offset = "0x24C1B74", VA = "0x24C1B74")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x24C1BE0", Offset = "0x24C1BE0", VA = "0x24C1BE0")]
	public void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x24C1C28", Offset = "0x24C1C28", VA = "0x24C1C28")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x24C1A6C", Offset = "0x24C1A6C", VA = "0x24C1A6C")]
	public void DoExit()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x24B54B0", Offset = "0x24B54B0", VA = "0x24B54B0")]
	public void ChangeRoomState(RoomStateAgent.eRoomState nextState)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x24C1D0C", Offset = "0x24C1D0C", VA = "0x24C1D0C")]
	public RoomStateAgent.eRoomState GetCurRoomState()
	{
		return default(RoomStateAgent.eRoomState);
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x24C1D2C", Offset = "0x24C1D2C", VA = "0x24C1D2C")]
	public void OnStartOrStopGame(bool playVideo)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x24C1E00", Offset = "0x24C1E00", VA = "0x24C1E00")]
	private void Instance_GameStatusEvent(bool videoStatus)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x24C1E08", Offset = "0x24C1E08", VA = "0x24C1E08")]
	private void Instance_skinCutScenes()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x24C1EF0", Offset = "0x24C1EF0", VA = "0x24C1EF0")]
	private void Instance_startOrStopGame()
	{
	}
}
[Token(Token = "0x20002ED")]
public class ServerHitManager
{
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55534", Offset = "0xE55534")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit hurter;

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x2061144", Offset = "0x2061144", VA = "0x2061144")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x206114C", Offset = "0x206114C", VA = "0x206114C")]
		internal void <ProcessingHitDamageNotify_Npc>b__0()
		{
		}
	}

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<e_type_role, WUnit, WUnit, HitResultData> hitMessage;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<e_type_role, WUnit, WUnit, HitResultData> hitPreMessage;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<WUnit, WUnit, int, int> damageProxy;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<e_HitEffect_type> tempTypes;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Array typeValues;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x24C1EF8", Offset = "0x24C1EF8", VA = "0x24C1EF8")]
	public static bool BulletHit(Bullet bullet, Vector3 hitPos, GameObject targetObject, int bulletDamage = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x24C2FC0", Offset = "0x24C2FC0", VA = "0x24C2FC0")]
	public static bool BulletHitSceneExploder(WUnit owner, Vector3 hitPos, Vector3 hitDir, int bulletForce, GameObject targetObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x24C30C8", Offset = "0x24C30C8", VA = "0x24C30C8")]
	public static bool BulletHitExploder(Vector3 hitPos, Vector3 hitDir, int bulletForce, GameObject targetObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x24C329C", Offset = "0x24C329C", VA = "0x24C329C")]
	public static bool BulletHitExploderTool(Vector3 hitPos, Vector3 hitDir, int bulletForce, GameObject targetObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x24C34E8", Offset = "0x24C34E8", VA = "0x24C34E8")]
	public static bool BulletHitMoss(Vector3 hitPos, Vector3 hitNormal, GameObject targetObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x24C291C", Offset = "0x24C291C", VA = "0x24C291C")]
	private static bool CheckCanProcessingAttacks(WUnit attacker, WUnit hueter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x24C3678", Offset = "0x24C3678", VA = "0x24C3678")]
	public static bool MonsterSuicide(WUnit suicide)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x24C3B24", Offset = "0x24C3B24", VA = "0x24C3B24")]
	public static bool UnitHurt(WUnit attacker, WUnit hurter, int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x24C4020", Offset = "0x24C4020", VA = "0x24C4020")]
	public static bool GearHurt(WUnit attacker, WUnit target, int damage, Vector3 hitPos, Vector3 dir, e_Attack_type atkType = e_Attack_type.Normal, e_HitEffect_type effectType = e_HitEffect_type.Normal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x24C4220", Offset = "0x24C4220", VA = "0x24C4220")]
	public static bool MonsterAttack(WUnit attacker, WUnit target, int damage, Vector3 hitPos, Vector3 dir, e_Attack_type atkType = e_Attack_type.Normal, e_HitEffect_type effectType = e_HitEffect_type.Normal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x24C4450", Offset = "0x24C4450", VA = "0x24C4450")]
	public static bool MeleeMonsterAttack(WUnit attacker, HurtDefine define, int damage, Vector3 hitPos, Vector3 dir, e_Attack_type atkType = e_Attack_type.Normal, e_HitEffect_type effectType = e_HitEffect_type.Normal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x24C4748", Offset = "0x24C4748", VA = "0x24C4748")]
	public static void ProcessingHitDamageNotify_Monster(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x24C5930", Offset = "0x24C5930", VA = "0x24C5930")]
	public static void ProcessingHitDamageNotify_Hero(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x24C608C", Offset = "0x24C608C", VA = "0x24C608C")]
	public static void ProcessingHitDamageNotify_Npc(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x24C5588", Offset = "0x24C5588", VA = "0x24C5588")]
	public static void HitHeroFloating(WUnit hurter, WUnit attacker, HitResultData hitData, int Integral, bool isGold = true)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x24C64B8", Offset = "0x24C64B8", VA = "0x24C64B8")]
	public static void HandleS2CHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x24C2B2C", Offset = "0x24C2B2C", VA = "0x24C2B2C")]
	public static void HandleC2SHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x24C67D0", Offset = "0x24C67D0", VA = "0x24C67D0")]
	private static bool GetEnumToOne(e_HitEffect_type type, out e_HitEffect_type doType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x24C6080", Offset = "0x24C6080", VA = "0x24C6080")]
	public static bool CheckAttackType(e_Attack_type source, e_Attack_type checkValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x24C5924", Offset = "0x24C5924", VA = "0x24C5924")]
	private static bool CheckHitEffectType(e_HitEffect_type source, e_HitEffect_type checkValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x24C2A4C", Offset = "0x24C2A4C", VA = "0x24C2A4C")]
	private static bool CheckGroupDamage(WUnit attacker, WUnit hurter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x24C6B84", Offset = "0x24C6B84", VA = "0x24C6B84")]
	public ServerHitManager()
	{
	}
}
[Token(Token = "0x20002EF")]
public class AreaSpawnInfo
{
	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monsterId;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int time;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int areaId;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int triggerPointId;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int triggerDis;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> pointIdList;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int spawnCount;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int wave;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int suicideDelayTime;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsWarning;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int SpawnLoop;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int SpawnLoopCount;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> PatrolPointList;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> FightPointList;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<int> ShootTimesList;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<int> DropTypeList;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<int> DropRatioList;

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x21343E4", Offset = "0x21343E4", VA = "0x21343E4")]
	public AreaSpawnInfo()
	{
	}
}
[Token(Token = "0x20002F0")]
public class AreaWaveInfoData
{
	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int wave;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AreaSpawnInfo areaInfo;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x21343EC", Offset = "0x21343EC", VA = "0x21343EC")]
	public AreaWaveInfoData()
	{
	}
}
[Token(Token = "0x20002F1")]
public class AreaInfoData
{
	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int time;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int GearID;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isGearSpawn;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int TriggerDis;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsTrigger;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform TriggerTrn;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int spawnDataIndex;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isFin;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool isAreaPos;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Quaternion rotation;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<int, List<AreaSpawnInfo>> areaWave;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int areaWaveIndex;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<AreaSpawnInfo> curWaveInfoList;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float areaWaveBeginTime;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<AreaSpawnInfo> spanwDataList;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> SpawnLoopList;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, List<int>> SpawnLoopDic;

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x2131EF4", Offset = "0x2131EF4", VA = "0x2131EF4")]
	public AreaInfoData(int areaId, List<AreaSpawnInfo> spawnData)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x213224C", Offset = "0x213224C", VA = "0x213224C")]
	public AreaSpawnInfo GetSpawnData()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x21322B8", Offset = "0x21322B8", VA = "0x21322B8")]
	public int GetLoopCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x2132324", Offset = "0x2132324", VA = "0x2132324")]
	public bool IsFirstWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x2132334", Offset = "0x2132334", VA = "0x2132334")]
	public bool IsEndWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x2132398", Offset = "0x2132398", VA = "0x2132398")]
	public void ChangeNextWave()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x2132554", Offset = "0x2132554", VA = "0x2132554")]
	public bool IsWaveSpawnFin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x21325B0", Offset = "0x21325B0", VA = "0x21325B0")]
	public bool IsWaveSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x21325C0", Offset = "0x21325C0", VA = "0x21325C0")]
	public bool IsSpawnFin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x213266C", Offset = "0x213266C", VA = "0x213266C")]
	public void AreaInit()
	{
	}
}
[Token(Token = "0x20002F2")]
public class AreaInfo : MonoBehaviour
{
	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> spawnPointRoots;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int time;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int spawnDataIndex;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isSpawnFin;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent enterEvent;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<NavPoint> AreaNavPointList;

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x2131EC4", Offset = "0x2131EC4", VA = "0x2131EC4")]
	public void ResetArea()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x2131ED0", Offset = "0x2131ED0", VA = "0x2131ED0")]
	public void EnterEventHandle()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x2131EEC", Offset = "0x2131EEC", VA = "0x2131EEC")]
	public AreaInfo()
	{
	}
}
[Token(Token = "0x20002F3")]
public class HideMeshRenderer : MonoBehaviour
{
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55544", Offset = "0xE55544")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool state;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x2844370", Offset = "0x2844370", VA = "0x2844370")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x2844378", Offset = "0x2844378", VA = "0x2844378")]
		internal void <init>b__0(Transform child)
		{
		}
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x252818C", Offset = "0x252818C", VA = "0x252818C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x2528194", Offset = "0x2528194", VA = "0x2528194")]
	public void init(bool state)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x25282AC", Offset = "0x25282AC", VA = "0x25282AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CD24", Offset = "0xE6CD24")]
	public void SetDisplay0()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x25282B4", Offset = "0x25282B4", VA = "0x25282B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CD5C", Offset = "0xE6CD5C")]
	public void SetDisplay1()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x25282BC", Offset = "0x25282BC", VA = "0x25282BC")]
	public HideMeshRenderer()
	{
	}
}
[Token(Token = "0x20002F5")]
public struct SpawnInfo
{
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int time;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int pointId;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int monsterId;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int spawnCount;
}
[Token(Token = "0x20002F6")]
public struct SpawnSummonInfo
{
	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int time;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int pointId;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int monsterId;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int spawnCount;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int spawnTime;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int spawnParentsId;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 spawnPos;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion spawnRot;
}
[Token(Token = "0x20002F7")]
public class MonsterSpawnManager : Singleton<MonsterSpawnManager>
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55554", Offset = "0xE55554")]
	private sealed class <>c__DisplayClass71_0
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int realArea;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x205CB88", Offset = "0x205CB88", VA = "0x205CB88")]
		public <>c__DisplayClass71_0()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x205CB90", Offset = "0x205CB90", VA = "0x205CB90")]
		internal bool <GetAreaInfoData>b__0(AreaInfoData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55564", Offset = "0xE55564")]
	private sealed class <>c__DisplayClass72_0
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int realArea;

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x205CBB4", Offset = "0x205CBB4", VA = "0x205CBB4")]
		public <>c__DisplayClass72_0()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x205CBBC", Offset = "0x205CBBC", VA = "0x205CBBC")]
		internal bool <IsAreaSpawnFin>b__0(AreaInfoData a)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55574", Offset = "0xE55574")]
	private sealed class <>c
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<AreaSpawnInfo> <>9__88_0;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<AreaSpawnInfo> <>9__88_1;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<AreaSpawnInfo> <>9__88_2;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<AreaSpawnInfo> <>9__89_0;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<AreaSpawnInfo> <>9__90_0;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x205CAB8", Offset = "0x205CAB8", VA = "0x205CAB8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x205CAC0", Offset = "0x205CAC0", VA = "0x205CAC0")]
		internal int <InitMonsterSummonSpawnData>b__88_0(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x205CAE8", Offset = "0x205CAE8", VA = "0x205CAE8")]
		internal int <InitMonsterSummonSpawnData>b__88_1(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x205CB10", Offset = "0x205CB10", VA = "0x205CB10")]
		internal int <InitMonsterSummonSpawnData>b__88_2(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x205CB38", Offset = "0x205CB38", VA = "0x205CB38")]
		internal int <InitAreaSpawnData>b__89_0(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x205CB60", Offset = "0x205CB60", VA = "0x205CB60")]
		internal int <InitGearSummonSpawnData>b__90_0(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isSpawnInit;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool spawnStart;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool spawnSummonStart;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int serverTotalCount;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60B3C", Offset = "0xE60B3C")]
	private bool <IsChangeIntensity>k__BackingField;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60B4C", Offset = "0xE60B4C")]
	private int <MaxSpawnAreaId>k__BackingField;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60B5C", Offset = "0xE60B5C")]
	private int <MinSpawnAreaId>k__BackingField;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60B6C", Offset = "0xE60B6C")]
	private int <CurSpawnAreaId>k__BackingField;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AreaInfoData> curArea;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AreaInfoData> finArea;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<PlayerCountDiffculty, Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>>> countDiffGearSortSummonSpawnDic;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> GearSortSummonSpawnDic;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<PlayerCountDiffculty, Dictionary<int, List<AreaSpawnInfo>>> countDiffAreaSpawnDic;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, List<AreaSpawnInfo>> AreaSpawnDic;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<e_GameDiffculty, Dictionary<PlayerCountDiffculty, Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>>>> difficultGearSortSummonSpawnDic;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<e_GameDiffculty, Dictionary<PlayerCountDiffculty, Dictionary<int, List<AreaSpawnInfo>>>> difficultAreaSpawnDic;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> areaSortSummonSpawnDic;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<PlayerCountDiffculty, Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>>> difficultAreaSortSummonSpawnDic;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<HostServer.MonsterSpawnInfo> tempMonsterSpawnList;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<HostServer.MonsterSpawnInfo> tempNPCSpawnList;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int oldTime;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int curTime;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int areaOldTime;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int areaCurTime;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, int> summonDic;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int summonAreaId;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, AreaInfo> areaInfoList;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, Dictionary<int, Transform>> areaPointList;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<int, AreaInfo> gearAreaInfoList;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<int, Dictionary<int, Transform>> gearAreaPointList;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int areaSortListIndex;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int pointId;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform transf;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Action<int> AreaChangeFirstWaveCallback;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int maxCount;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int clientTotalCount;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform monsterRoot;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform npcRoot;

	[Token(Token = "0x17000199")]
	public bool IsChangeIntensity
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2649FF0", Offset = "0x2649FF0", VA = "0x2649FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CD94", Offset = "0xE6CD94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2649FF8", Offset = "0x2649FF8", VA = "0x2649FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CDA4", Offset = "0xE6CDA4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public int MaxSpawnAreaId
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x264A004", Offset = "0x264A004", VA = "0x264A004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CDB4", Offset = "0xE6CDB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x264A00C", Offset = "0x264A00C", VA = "0x264A00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CDC4", Offset = "0xE6CDC4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public int MinSpawnAreaId
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x264A014", Offset = "0x264A014", VA = "0x264A014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CDD4", Offset = "0xE6CDD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x264A01C", Offset = "0x264A01C", VA = "0x264A01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CDE4", Offset = "0xE6CDE4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public int CurSpawnAreaId
	{
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x264A024", Offset = "0x264A024", VA = "0x264A024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CDF4", Offset = "0xE6CDF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x264A02C", Offset = "0x264A02C", VA = "0x264A02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CE04", Offset = "0xE6CE04")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public int ServerTotalCount
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x264C22C", Offset = "0x264C22C", VA = "0x264C22C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x264C234", Offset = "0x264C234", VA = "0x264C234")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public int ClientTotalCount
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x264F4E8", Offset = "0x264F4E8", VA = "0x264F4E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x264F4F0", Offset = "0x264F4F0", VA = "0x264F4F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public Transform MonsterRoot
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x2654768", Offset = "0x2654768", VA = "0x2654768")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A0")]
	public Transform NpcRoot
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x26548A4", Offset = "0x26548A4", VA = "0x26548A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x264A034", Offset = "0x264A034", VA = "0x264A034")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x264AC48", Offset = "0x264AC48", VA = "0x264AC48")]
	public void DoServerReset()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x264AD68", Offset = "0x264AD68", VA = "0x264AD68")]
	public void DoStart(PlayerCountDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x264B2C4", Offset = "0x264B2C4", VA = "0x264B2C4")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x264B370", Offset = "0x264B370", VA = "0x264B370")]
	public void DoPause()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x264B3F4", Offset = "0x264B3F4", VA = "0x264B3F4")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x264B474", Offset = "0x264B474", VA = "0x264B474")]
	public void DoUpdate(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x264C23C", Offset = "0x264C23C", VA = "0x264C23C")]
	public bool CheckSpawnStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x264C244", Offset = "0x264C244", VA = "0x264C244")]
	private bool CheckMonsterIsClean(int gearID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x264C308", Offset = "0x264C308", VA = "0x264C308")]
	public bool CheckMonsterIsMaxCount()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x264B54C", Offset = "0x264B54C", VA = "0x264B54C")]
	private void DoSpawn(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x264B180", Offset = "0x264B180", VA = "0x264B180")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x264CC88", Offset = "0x264CC88", VA = "0x264CC88")]
	private void ResetAreaTimer()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x264C8EC", Offset = "0x264C8EC", VA = "0x264C8EC")]
	public void AddAreaSpawnMonsterList(AreaSpawnInfo areaSpawnData, int areaId, Vector3 spawnPos, Quaternion spawnRot, SpawnPointInfo spawnData)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x264C490", Offset = "0x264C490", VA = "0x264C490")]
	public void AddGearSpawnMonsterList(AreaSpawnInfo areaSpawnData, int gearId, int triggerid, Vector3 spawnPos, Quaternion spawnRot, SpawnPointInfo spawnData)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x264BF8C", Offset = "0x264BF8C", VA = "0x264BF8C")]
	public void ProcessorSpawnMonsterNet()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x264E3C4", Offset = "0x264E3C4", VA = "0x264E3C4")]
	public int AreaGetMonsterSummonMaxCry(WUnit unit)
	{
		return default(int);
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x264E410", Offset = "0x264E410", VA = "0x264E410")]
	public int AreaGetMonsterSummonMaxCry(int tableId)
	{
		return default(int);
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x264E4DC", Offset = "0x264E4DC", VA = "0x264E4DC")]
	public List<int> GetMonsterSummonID(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x264E77C", Offset = "0x264E77C", VA = "0x264E77C")]
	public void AreaMonsterTriggerSummon(WUnit unit, int summonArea, bool isGenerator, int gearID)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x264EE64", Offset = "0x264EE64", VA = "0x264EE64")]
	public void AreaGearTriggerSummon(int gearID)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x264F22C", Offset = "0x264F22C", VA = "0x264F22C")]
	public AreaInfoData GetAreaInfoData(int summonArea)
	{
		return null;
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x264F354", Offset = "0x264F354", VA = "0x264F354")]
	public bool IsAreaSpawnFin(int summonArea)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x264F490", Offset = "0x264F490", VA = "0x264F490")]
	public bool IsCurAreaClear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x264F4F8", Offset = "0x264F4F8", VA = "0x264F4F8")]
	public void DoClientReset()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x264C82C", Offset = "0x264C82C", VA = "0x264C82C")]
	public Transform GetAreaSpawnPoint(int areaID, int pointID)
	{
		return null;
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x264C3D0", Offset = "0x264C3D0", VA = "0x264C3D0")]
	public Transform GetGearAreaSpawnPoint(int areaID, int pointID)
	{
		return null;
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x264F500", Offset = "0x264F500", VA = "0x264F500")]
	public int[] GetAreaSpawnPointIds(int areaID)
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x264F61C", Offset = "0x264F61C", VA = "0x264F61C")]
	public void ChangeSpawnArea(int areaId)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x264F740", Offset = "0x264F740", VA = "0x264F740")]
	private void EnterArea(AreaInfo area)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x264EAF4", Offset = "0x264EAF4", VA = "0x264EAF4")]
	private AreaInfo GetAreaInfData(int areaId)
	{
		return null;
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x264EA78", Offset = "0x264EA78", VA = "0x264EA78")]
	private AreaInfo GetGearAreaInfData(int areaId)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x264EB70", Offset = "0x264EB70", VA = "0x264EB70")]
	private void SetEnterArea(AreaInfoData areaData)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x264F888", Offset = "0x264F888", VA = "0x264F888")]
	public void InitSpawnList()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x2652250", Offset = "0x2652250", VA = "0x2652250")]
	private void InitMonsterSummonSpawnData()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x264F8B4", Offset = "0x264F8B4", VA = "0x264F8B4")]
	private void InitAreaSpawnData()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x2650BB8", Offset = "0x2650BB8", VA = "0x2650BB8")]
	private void InitGearSummonSpawnData()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x264A118", Offset = "0x264A118", VA = "0x264A118")]
	private void InitAreaSpawnPoint(Transform areaRoot)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x2653E5C", Offset = "0x2653E5C", VA = "0x2653E5C")]
	public void ClearGearAreaData()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x2653ED4", Offset = "0x2653ED4", VA = "0x2653ED4")]
	public void SetGearAreaSpawnPoint(int areaId, AreaInfo info)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x26549E0", Offset = "0x26549E0", VA = "0x26549E0")]
	public void ServerSpawnMonserBullet(int monsterId, Vector3 pos, Quaternion rot, Transform traget, bool rightFire)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x264D9E8", Offset = "0x264D9E8", VA = "0x264D9E8")]
	public void ServerSpawnMonser(int objId, int monsterId, int areaId, SpawnPointInfo spawnData, List<int> DropTypeList, List<int> DropRatioList, Vector3 pos, Quaternion rot, int suicideDelayTime = -1)
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x2654FDC", Offset = "0x2654FDC", VA = "0x2654FDC")]
	public void SpawnMonster(int objId, int monsterId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x264DF78", Offset = "0x264DF78", VA = "0x264DF78")]
	public void ServerSpawnNPC(int objId, int npcId, int groupId, int areaId, SpawnPointInfo spawnData, Vector3 pos, Quaternion rot, int suicideDelayTime = -1)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x26553C4", Offset = "0x26553C4", VA = "0x26553C4")]
	public void SpawnNPC(int objId, int npcId, int groupId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x2653594", Offset = "0x2653594", VA = "0x2653594")]
	public List<int> StrChangeintList(string str)
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x2653990", Offset = "0x2653990", VA = "0x2653990")]
	private Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> MergeDictionary(Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> First, Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> Second)
	{
		return null;
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x2653720", Offset = "0x2653720", VA = "0x2653720")]
	private Dictionary<int, List<AreaSpawnInfo>> MergeDictionaryTwo(Dictionary<int, List<AreaSpawnInfo>> First, Dictionary<int, List<AreaSpawnInfo>> Second)
	{
		return null;
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x2655740", Offset = "0x2655740", VA = "0x2655740")]
	public MonsterSpawnManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FB")]
public class MoveItem
{
	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MoveTargetType moveType;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransf;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x2659A8C", Offset = "0x2659A8C", VA = "0x2659A8C")]
	public MoveItem()
	{
	}
}
[Token(Token = "0x20002FC")]
public class SpawnPointInfo : MonoBehaviour
{
	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MoveItem> moveDatas;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DisStr;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string TotalStr;

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x2163648", Offset = "0x2163648", VA = "0x2163648")]
	public MoveItem GetMoveDdata(int index)
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x2163898", Offset = "0x2163898", VA = "0x2163898")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CE14", Offset = "0xE6CE14")]
	private void distance()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x2163BB0", Offset = "0x2163BB0", VA = "0x2163BB0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CE4C", Offset = "0xE6CE4C")]
	private void SetDefault()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x2163CE4", Offset = "0x2163CE4", VA = "0x2163CE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6CE84", Offset = "0xE6CE84")]
	private void SetTargetTransf()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x2163DFC", Offset = "0x2163DFC", VA = "0x2163DFC")]
	public void LogStr(GameObject target)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x216403C", Offset = "0x216403C", VA = "0x216403C")]
	public SpawnPointInfo()
	{
	}
}
[Token(Token = "0x20002FD")]
public abstract class RoomBaseState
{
	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Battle battle;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ServerBattleRoom battleRoom;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected UnityCoroutineControl battleRoomCoroutine;

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x2722214", Offset = "0x2722214", VA = "0x2722214")]
	public RoomBaseState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000FC8")]
	public abstract void DoInit();

	[Token(Token = "0x6000FC9")]
	public abstract void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x6000FCA")]
	public abstract void DoFixedUpdate(float fixedDeltaTime);

	[Token(Token = "0x6000FCB")]
	public abstract void DoLateUpdate();

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x2722278", Offset = "0x2722278", VA = "0x2722278", Slot = "8")]
	public virtual void DoExit()
	{
	}
}
[Token(Token = "0x20002FE")]
public class RoomFightEndState : RoomBaseState
{
	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x24B5054", Offset = "0x24B5054", VA = "0x24B5054")]
	public RoomFightEndState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x24B505C", Offset = "0x24B505C", VA = "0x24B505C", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x24B5318", Offset = "0x24B5318", VA = "0x24B5318", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x24B531C", Offset = "0x24B531C", VA = "0x24B531C", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x24B5320", Offset = "0x24B5320", VA = "0x24B5320", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x24B5324", Offset = "0x24B5324", VA = "0x24B5324", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x24B52B4", Offset = "0x24B52B4", VA = "0x24B52B4")]
	private void ProcessingFightingEnd()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x24B5158", Offset = "0x24B5158", VA = "0x24B5158")]
	private void ProcessingPlayerReviveEnd()
	{
	}
}
[Token(Token = "0x20002FF")]
public class RoomFightStartState : RoomBaseState
{
	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x24B5380", Offset = "0x24B5380", VA = "0x24B5380")]
	public RoomFightStartState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x24B5388", Offset = "0x24B5388", VA = "0x24B5388", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x24B554C", Offset = "0x24B554C", VA = "0x24B554C", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x24B5550", Offset = "0x24B5550", VA = "0x24B5550", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x24B5554", Offset = "0x24B5554", VA = "0x24B5554", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x24B5558", Offset = "0x24B5558", VA = "0x24B5558", Slot = "8")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x2000300")]
public class RoomFightingState : RoomBaseState
{
	[Serializable]
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55584", Offset = "0xE55584")]
	private sealed class <>c
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__17_0;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x2060AC0", Offset = "0x2060AC0", VA = "0x2060AC0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x2060AC8", Offset = "0x2060AC8", VA = "0x2060AC8")]
		internal void <ProcessingGameStatus>b__17_0()
		{
		}
	}

	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55594", Offset = "0xE55594")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomFightingState <>4__this;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit unit;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2060B54", Offset = "0x2060B54", VA = "0x2060B54")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x2060B5C", Offset = "0x2060B5C", VA = "0x2060B5C")]
		internal void <OnPlayerDeadCB>b__0()
		{
		}
	}

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int updateDelayFrame;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int updateFrameTimer;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSpawnBoss;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isPlayTimerAudio_1;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isPlayTimerAudio_2;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool isPlayTimerAudio_3;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isPlayTimerAudio_4;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> reviveRoomIds;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int reviveHp;

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x24B555C", Offset = "0x24B555C", VA = "0x24B555C")]
	public RoomFightingState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x24B5610", Offset = "0x24B5610", VA = "0x24B5610", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x24B5C60", Offset = "0x24B5C60", VA = "0x24B5C60", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x24B5DA0", Offset = "0x24B5DA0", VA = "0x24B5DA0", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x24B5DA4", Offset = "0x24B5DA4", VA = "0x24B5DA4", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x24B6190", Offset = "0x24B6190", VA = "0x24B6190", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x24B6574", Offset = "0x24B6574", VA = "0x24B6574")]
	private void ProcessingMonsterTransformSync()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x24B5BB8", Offset = "0x24B5BB8", VA = "0x24B5BB8")]
	private void ProcessingSpawnStart()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x24B61C4", Offset = "0x24B61C4", VA = "0x24B61C4")]
	private void ProcessingSpawnEnd()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x24B5D18", Offset = "0x24B5D18", VA = "0x24B5D18")]
	private void ProcessingSpawn(int deltaTime)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x24B5DC8", Offset = "0x24B5DC8", VA = "0x24B5DC8")]
	private void ProcessingGameStatus()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x24B5C58", Offset = "0x24B5C58", VA = "0x24B5C58")]
	private void ProcessingStatisticalStart()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x24B64E0", Offset = "0x24B64E0", VA = "0x24B64E0")]
	private void ProcessingStatisticalEnd()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x24B5710", Offset = "0x24B5710", VA = "0x24B5710")]
	private void ProcessingJoinGamePlayer()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x24B6C98", Offset = "0x24B6C98", VA = "0x24B6C98")]
	private void OnPlayerDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x24B7008", Offset = "0x24B7008", VA = "0x24B7008")]
	private bool CheckAllJoinDiePlayerDie()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x24B630C", Offset = "0x24B630C", VA = "0x24B630C")]
	private void ProcessingPlayerStatueEnd()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x24B5C5C", Offset = "0x24B5C5C", VA = "0x24B5C5C")]
	private void ProcessingRoomPassStart()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x24B6570", Offset = "0x24B6570", VA = "0x24B6570")]
	private void ProcessingRoomPassEnd()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x24B7168", Offset = "0x24B7168", VA = "0x24B7168")]
	private void OnCharRollBack()
	{
	}
}
[Token(Token = "0x2000303")]
public class RoomMovieState : RoomBaseState
{
	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x24B9C18", Offset = "0x24B9C18", VA = "0x24B9C18")]
	public RoomMovieState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x24B9C20", Offset = "0x24B9C20", VA = "0x24B9C20", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x24B9F20", Offset = "0x24B9F20", VA = "0x24B9F20", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x24B9FB4", Offset = "0x24B9FB4", VA = "0x24B9FB4", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x24B9FB8", Offset = "0x24B9FB8", VA = "0x24B9FB8", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x24B9FBC", Offset = "0x24B9FBC", VA = "0x24B9FBC", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x24BA328", Offset = "0x24BA328", VA = "0x24BA328")]
	private void OnVideoPlayerStart(VideoPlayer videoPlayer)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x24BA32C", Offset = "0x24BA32C", VA = "0x24BA32C")]
	private void OnVideoPlayerEnd(VideoPlayer videoPlayer)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x24B9C24", Offset = "0x24B9C24", VA = "0x24B9C24")]
	private void ProcessingPlayVideoStart()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x24BA060", Offset = "0x24BA060", VA = "0x24BA060")]
	private void ProcessingPlayVideoEnd()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x24BA340", Offset = "0x24BA340", VA = "0x24BA340")]
	private void ProcessingPlayWwiseStart()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x24B9FE0", Offset = "0x24B9FE0", VA = "0x24B9FE0")]
	private void ProcessingPlayWwiseEnd()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x24B9F24", Offset = "0x24B9F24", VA = "0x24B9F24")]
	private void ProcessingPlayWwise(float deltaTime)
	{
	}
}
[Token(Token = "0x2000304")]
public class RoomReadyState : RoomBaseState
{
	[Token(Token = "0x6001001")]
	[Address(RVA = "0x24BA344", Offset = "0x24BA344", VA = "0x24BA344")]
	public RoomReadyState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x24BA34C", Offset = "0x24BA34C", VA = "0x24BA34C", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x24BA3B0", Offset = "0x24BA3B0", VA = "0x24BA3B0", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x24BA3B4", Offset = "0x24BA3B4", VA = "0x24BA3B4", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x24BA3B8", Offset = "0x24BA3B8", VA = "0x24BA3B8", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x24BA3BC", Offset = "0x24BA3BC", VA = "0x24BA3BC", Slot = "8")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x2000305")]
public class WwiseAmbientEffectManager : Singleton<WwiseAmbientEffectManager>
{
	[Token(Token = "0x2000306")]
	private class PlayInfo
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int time;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int timer;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int monsterid;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int point;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int eventID;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x2067D74", Offset = "0x2067D74", VA = "0x2067D74")]
		public PlayInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE555A4", Offset = "0xE555A4")]
	private sealed class <>c
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<PlayInfo> <>9__12_0;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<PlayInfo> <>9__13_0;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<PlayInfo> <>9__22_0;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x2067CF4", Offset = "0x2067CF4", VA = "0x2067CF4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x2067CFC", Offset = "0x2067CFC", VA = "0x2067CFC")]
		internal int <DoStartVideo>b__12_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x2067D24", Offset = "0x2067D24", VA = "0x2067D24")]
		internal int <setMonsterId>b__13_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x2067D4C", Offset = "0x2067D4C", VA = "0x2067D4C")]
		internal int <InitSortPlayList>b__22_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float timer;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int tiner_int;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int playOffset;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool spawnStart;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, List<PlayInfo>> sortPlayList;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlayInfo> spawnAudioList;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<PlayerCountDiffculty, Dictionary<int, List<PlayInfo>>> sortSpawnDic;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<PlayInfo>> sortVideoList;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, int> passMonsterId;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, Transform> playTransHash;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<PlayerCountDiffculty, int> sortBossSummonMaxIdDic;

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x2B5C3C8", Offset = "0x2B5C3C8", VA = "0x2B5C3C8")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x2B5C448", Offset = "0x2B5C448", VA = "0x2B5C448")]
	public void DoStart(PlayerCountDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x2B5C83C", Offset = "0x2B5C83C", VA = "0x2B5C83C")]
	public void DoStartVideo(int videoIndex)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x2B5C4FC", Offset = "0x2B5C4FC", VA = "0x2B5C4FC")]
	public void setMonsterId(int monsterId)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x2B5CB24", Offset = "0x2B5CB24", VA = "0x2B5CB24")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x2B5CB2C", Offset = "0x2B5CB2C", VA = "0x2B5CB2C")]
	public void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x2B5CE98", Offset = "0x2B5CE98", VA = "0x2B5CE98")]
	public void Init()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x2B5D7D4", Offset = "0x2B5D7D4", VA = "0x2B5D7D4")]
	public string GetVarName(Expression<Func<string, int>> exp)
	{
		return null;
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x2B5CF00", Offset = "0x2B5CF00", VA = "0x2B5CF00")]
	private void InitPlayTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x2B5D86C", Offset = "0x2B5D86C", VA = "0x2B5D86C")]
	public Transform GetPlayPoint(int point)
	{
		return null;
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x2B5D258", Offset = "0x2B5D258", VA = "0x2B5D258")]
	private void InitSortPlayList()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x2B5CC5C", Offset = "0x2B5CC5C", VA = "0x2B5CC5C")]
	public void PlayAmbientEffect_Net(int eventId, int point)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x2B5D980", Offset = "0x2B5D980", VA = "0x2B5D980")]
	public void PlayAmbientEffect(int eventId, int point)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x2B5DCA8", Offset = "0x2B5DCA8", VA = "0x2B5DCA8")]
	public WwiseAmbientEffectManager()
	{
	}
}
[Token(Token = "0x2000308")]
public class AcquireWeaponManager : Singleton<AcquireWeaponManager>
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE555B4", Offset = "0xE555B4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type AcquireWeaponType;

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x20E83D0", Offset = "0x20E83D0", VA = "0x20E83D0")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x20E83D8", Offset = "0x20E83D8", VA = "0x20E83D8")]
		internal bool <AcquireWeaponBox>b__0(Weapon a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioEvent Gun_Grab;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SwitchInfoData Gun_Switch;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x1FB36CC", Offset = "0x1FB36CC", VA = "0x1FB36CC")]
	public GameObject AcquireWeaponBox(int ID, e_weapon_type AcquireWeaponType, Vector3 V3)
	{
		return null;
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x1FB3BD8", Offset = "0x1FB3BD8", VA = "0x1FB3BD8")]
	public AcquireWeaponManager()
	{
	}
}
[Token(Token = "0x200030A")]
public class CameraManager : Singleton<CameraManager>
{
	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera mMainCamera;

	[Token(Token = "0x170001A1")]
	public Camera MainCamera
	{
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x243F9C8", Offset = "0x243F9C8", VA = "0x243F9C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001020")]
		[Address(RVA = "0x243F9D0", Offset = "0x243F9D0", VA = "0x243F9D0")]
		set
		{
		}
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x243FA70", Offset = "0x243FA70", VA = "0x243FA70")]
	public void SetGameEndLayer()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x243FBFC", Offset = "0x243FBFC", VA = "0x243FBFC")]
	public void SetGameStartLayer()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x243FD88", Offset = "0x243FD88", VA = "0x243FD88")]
	public void SetCameraTarget(GameObject obj)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x243FEC0", Offset = "0x243FEC0", VA = "0x243FEC0")]
	public void SetVideoLayer()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x244004C", Offset = "0x244004C", VA = "0x244004C")]
	public CameraManager()
	{
	}
}
[Token(Token = "0x200030B")]
public class DropManager : Singleton<DropManager>
{
	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, DropItem> dropTypeItems;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, DropItem> dropItems;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInit;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isStart;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int orignalId;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<int> lockItem;

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x24ED6F4", Offset = "0x24ED6F4", VA = "0x24ED6F4")]
	public void Init()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x24ED8D8", Offset = "0x24ED8D8", VA = "0x24ED8D8")]
	public void Start()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x24ED96C", Offset = "0x24ED96C", VA = "0x24ED96C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x24ED974", Offset = "0x24ED974", VA = "0x24ED974")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x24ED56C", Offset = "0x24ED56C", VA = "0x24ED56C")]
	public void NetProduceDropItem(int itemType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x24EC840", Offset = "0x24EC840", VA = "0x24EC840")]
	public void NetDestroyDropItem(int id)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x24EDB78", Offset = "0x24EDB78", VA = "0x24EDB78")]
	public void NetTriggerDropItem(int id, int uid)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x24EDD04", Offset = "0x24EDD04", VA = "0x24EDD04")]
	public bool TryLockDropItem(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x24EDDDC", Offset = "0x24EDDDC", VA = "0x24EDDDC")]
	public int GetDropItemType(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x24EDE64", Offset = "0x24EDE64", VA = "0x24EDE64")]
	public bool IsActiveDropItem(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x24EDEF4", Offset = "0x24EDEF4", VA = "0x24EDEF4")]
	public void ProduceDropItem(int itemType, int itemId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x24EE058", Offset = "0x24EE058", VA = "0x24EE058")]
	public void DestroyDropItem(int id)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x24EE18C", Offset = "0x24EE18C", VA = "0x24EE18C")]
	public void TriggerDropItem(int id, int uid)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x24ED97C", Offset = "0x24ED97C", VA = "0x24ED97C")]
	public void CleanAllDropItem()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x24EDEF8", Offset = "0x24EDEF8", VA = "0x24EDEF8")]
	public void DoProduceDropItem(int itemType, int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x24EE2CC", Offset = "0x24EE2CC", VA = "0x24EE2CC")]
	private DropItem ProduceLogic(int itemType, int id, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x24EDB64", Offset = "0x24EDB64", VA = "0x24EDB64")]
	private int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x24EE5DC", Offset = "0x24EE5DC", VA = "0x24EE5DC")]
	public DropManager()
	{
	}
}
[Token(Token = "0x200030C")]
public static class EffectManager
{
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE555C4", Offset = "0xE555C4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rot;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform parent;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<EffectDefine> cb;

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x20F5B38", Offset = "0x20F5B38", VA = "0x20F5B38")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x20F5B40", Offset = "0x20F5B40", VA = "0x20F5B40")]
		internal void <CreateEffectAsync>b__0(GameObject go)
		{
		}
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x24EF894", Offset = "0x24EF894", VA = "0x24EF894")]
	public static EffectDefine CreateEffect(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x24EFAA8", Offset = "0x24EFAA8", VA = "0x24EFAA8")]
	public static EffectDefine CreateEffect(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x24EFDA4", Offset = "0x24EFDA4", VA = "0x24EFDA4")]
	public static void CreateEffectAsync(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<EffectDefine> cb)
	{
	}
}
[Token(Token = "0x200030E")]
public class GameManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200030F")]
	public class WeaponGroupConfig
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weaponGroup;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon leftWeapon;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon rightWeapon;

		[Token(Token = "0x170001A6")]
		public e_weapon_type rightWeaponType
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x20F7844", Offset = "0x20F7844", VA = "0x20F7844")]
			get
			{
				return default(e_weapon_type);
			}
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x20F78A4", Offset = "0x20F78A4", VA = "0x20F78A4")]
		public WeaponGroupConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000310")]
	public class WeaponTypeConfig
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type WeaponType;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon Weapon;

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x20F78AC", Offset = "0x20F78AC", VA = "0x20F78AC")]
		public WeaponTypeConfig()
		{
		}
	}

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int sceneBuildIndex;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject vrMgrComponent;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera firstPersonCameraComponent;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] playerObjs;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] otherPlayerObjs;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private WeaponTypeConfig[] WeaponTypes;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public Transform areaSpawnRoot;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform cameraRigGroupPoints;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public Transform ambientEffectRoot;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public VideoPlayerController video;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60C1C", Offset = "0xE60C1C")]
	private GameObject <timeLineRoot>k__BackingField;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CameraEffectConfigRoot;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject recordCamera;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60C2C", Offset = "0xE60C2C")]
	[SerializeField]
	public StatiscalUI StatisticalUI;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public StatiscalUI StatisticalUI2;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public Screen_schedule player_hp;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public ManualSellectView mSellectView;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public LiveShowView mLiveView;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public MapIncubation MiniMap_PC;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	public MapIncubation MiniMap_VR;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject floating;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform floatingRoot;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject loadingUI;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject loadingUIPC;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ShopUI ShopUI;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AttributesUI AttributesUI;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PostureUi PostureUI;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public WaitingforDeathUIView WaitingforDeath;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager _instance;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60CD8", Offset = "0xE60CD8")]
	public bool isSelectRoom;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int SelectRoomId;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Dictionary<e_group_type, Transform> CameraRigPointDic;

	[Token(Token = "0x170001A2")]
	public GameObject VRMgrComponent
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x2244DDC", Offset = "0x2244DDC", VA = "0x2244DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public Camera FirstPersonCameraComponent
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x2244DE4", Offset = "0x2244DE4", VA = "0x2244DE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A4")]
	public GameObject timeLineRoot
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x2244DEC", Offset = "0x2244DEC", VA = "0x2244DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CEBC", Offset = "0xE6CEBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001040")]
		[Address(RVA = "0x2244DF4", Offset = "0x2244DF4", VA = "0x2244DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CECC", Offset = "0xE6CECC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public static GameManager Instance
	{
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x2244DFC", Offset = "0x2244DFC", VA = "0x2244DFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x2244E48", Offset = "0x2244E48", VA = "0x2244E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x2244E9C", Offset = "0x2244E9C", VA = "0x2244E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x22450F8", Offset = "0x22450F8", VA = "0x22450F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x224522C", Offset = "0x224522C", VA = "0x224522C")]
	public void Init()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x2245B44", Offset = "0x2245B44", VA = "0x2245B44")]
	public UnitAttribute GetPlayerAttribute(e_Player_Style playerStyle)
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x2245BD4", Offset = "0x2245BD4", VA = "0x2245BD4")]
	public UnitAttribute GetMonsterAttribute(int monsterTableId)
	{
		return null;
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x2245C5C", Offset = "0x2245C5C", VA = "0x2245C5C")]
	public UnitAttribute GetNpcAttribute(int npcTableId)
	{
		return null;
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x2245900", Offset = "0x2245900", VA = "0x2245900")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x2245CE4", Offset = "0x2245CE4", VA = "0x2245CE4")]
	private void SceneLoadedEnd()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x2246484", Offset = "0x2246484", VA = "0x2246484")]
	private void InitCutScenes()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x2246594", Offset = "0x2246594", VA = "0x2246594")]
	public void SetCutScenesActive(bool activeState)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x2246638", Offset = "0x2246638", VA = "0x2246638")]
	public bool GetCutScenesActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x22466CC", Offset = "0x22466CC", VA = "0x22466CC")]
	public GameObject GetOtherPlayerByType(e_Player_Style playerType)
	{
		return null;
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x2246958", Offset = "0x2246958", VA = "0x2246958")]
	public GameObject GetLocalPlayerByType(e_Player_Style playerType)
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x2246BE4", Offset = "0x2246BE4", VA = "0x2246BE4")]
	public Weapon GetWeapon(e_weapon_type weapon_Type)
	{
		return null;
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x22455F0", Offset = "0x22455F0", VA = "0x22455F0")]
	public void InitCameraRigGroupPoints()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x2245A80", Offset = "0x2245A80", VA = "0x2245A80")]
	public Transform GetCameraRigGroupPoint(e_group_type groupType)
	{
		return null;
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x2246ECC", Offset = "0x2246ECC", VA = "0x2246ECC")]
	public void InitDissonanceVoice()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x2246ED0", Offset = "0x2246ED0", VA = "0x2246ED0")]
	public bool IsLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x2246F80", Offset = "0x2246F80", VA = "0x2246F80")]
	public GameManager()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x2247004", Offset = "0x2247004", VA = "0x2247004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CEDC", Offset = "0xE6CEDC")]
	private void <LoadScene>b__49_0()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x2247148", Offset = "0x2247148", VA = "0x2247148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CEEC", Offset = "0xE6CEEC")]
	private void <LoadScene>b__49_1()
	{
	}
}
[Token(Token = "0x2000311")]
public enum e_sceneType
{
	[Token(Token = "0x4001242")]
	SafeRoom,
	[Token(Token = "0x4001243")]
	NoviceGuide,
	[Token(Token = "0x4001244")]
	Camp
}
[Token(Token = "0x2000312")]
public class GameSceneManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000313")]
	public class GameStepSceneConfig
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int StepIndex;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sceneBuildIndex;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int configBuildIndex;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material skyBox;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x28435B0", Offset = "0x28435B0", VA = "0x28435B0")]
		public GameStepSceneConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000314")]
	public class GameSceneConfig
	{
		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE555D4", Offset = "0xE555D4")]
		private sealed class <StartLoadStepScene>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] scenes;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async0>5__2;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001083")]
				[Address(RVA = "0x320F328", Offset = "0x320F328", VA = "0x320F328", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001085")]
				[Address(RVA = "0x320F370", Offset = "0x320F370", VA = "0x320F370", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001080")]
			[Address(RVA = "0x320EFC4", Offset = "0x320EFC4", VA = "0x320EFC4")]
			[DebuggerHidden]
			public <StartLoadStepScene>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001081")]
			[Address(RVA = "0x320EFF0", Offset = "0x320EFF0", VA = "0x320EFF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0x320EFF4", Offset = "0x320EFF4", VA = "0x320EFF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0x320F330", Offset = "0x320F330", VA = "0x320F330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE555E4", Offset = "0xE555E4")]
		private sealed class <StartUnLoadStepScene>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] scenes;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Scene <clearObject>5__2;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async0>5__3;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001089")]
				[Address(RVA = "0x320F9C0", Offset = "0x320F9C0", VA = "0x320F9C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600108B")]
				[Address(RVA = "0x320FA08", Offset = "0x320FA08", VA = "0x320FA08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0x320F638", Offset = "0x320F638", VA = "0x320F638")]
			[DebuggerHidden]
			public <StartUnLoadStepScene>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0x320F664", Offset = "0x320F664", VA = "0x320F664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001088")]
			[Address(RVA = "0x320F668", Offset = "0x320F668", VA = "0x320F668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600108A")]
			[Address(RVA = "0x320F9C8", Offset = "0x320F9C8", VA = "0x320F9C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE555F4", Offset = "0xE555F4")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int step;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action loadEnd;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLoadEndActive;

			[Token(Token = "0x600108C")]
			[Address(RVA = "0x320EAE0", Offset = "0x320EAE0", VA = "0x320EAE0")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600108D")]
			[Address(RVA = "0x320EAE8", Offset = "0x320EAE8", VA = "0x320EAE8")]
			internal void <ChangeLoadStepScene>b__0()
			{
			}
		}

		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55604", Offset = "0xE55604")]
		private sealed class <StartLoad>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isLoadingUI;

			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] scenes;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001091")]
				[Address(RVA = "0x320EF74", Offset = "0x320EF74", VA = "0x320EF74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0x320EFBC", Offset = "0x320EFBC", VA = "0x320EFBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0x320EC80", Offset = "0x320EC80", VA = "0x320EC80")]
			[DebuggerHidden]
			public <StartLoad>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x600108F")]
			[Address(RVA = "0x320ECAC", Offset = "0x320ECAC", VA = "0x320ECAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0x320ECB0", Offset = "0x320ECB0", VA = "0x320ECB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0x320EF7C", Offset = "0x320EF7C", VA = "0x320EF7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55614", Offset = "0xE55614")]
		private sealed class <IEnumerator>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isShow;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001097")]
				[Address(RVA = "0x320EC30", Offset = "0x320EC30", VA = "0x320EC30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001099")]
				[Address(RVA = "0x320EC78", Offset = "0x320EC78", VA = "0x320EC78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0x320EB14", Offset = "0x320EB14", VA = "0x320EB14")]
			[DebuggerHidden]
			public <IEnumerator>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0x320EB40", Offset = "0x320EB40", VA = "0x320EB40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001096")]
			[Address(RVA = "0x320EB44", Offset = "0x320EB44", VA = "0x320EB44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001098")]
			[Address(RVA = "0x320EC38", Offset = "0x320EC38", VA = "0x320EC38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55624", Offset = "0xE55624")]
		private sealed class <StartUnLoad>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action unLoadFinish;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__3;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109D")]
				[Address(RVA = "0x320F5E8", Offset = "0x320F5E8", VA = "0x320F5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600109F")]
				[Address(RVA = "0x320F630", Offset = "0x320F630", VA = "0x320F630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x320F378", Offset = "0x320F378", VA = "0x320F378")]
			[DebuggerHidden]
			public <StartUnLoad>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x320F3A4", Offset = "0x320F3A4", VA = "0x320F3A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x320F3A8", Offset = "0x320F3A8", VA = "0x320F3A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0x320F5F0", Offset = "0x320F5F0", VA = "0x320F5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SafeRoomSceneIndex;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SafeRoomConfigSceneIndex;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material skyBox;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int NoviceGuideSceneBuildIndex;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int NoviceGuideConfigBuildIndex;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material noviceGuideSkyBox;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int CampSceneBuildIndex;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int CampConfigBuildIndex;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material CampSkyBox;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action loadSceneEndCallBack;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<GameStepSceneConfig> stepSceneConfigList;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameStepSceneConfig curStepSceneConfig;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action loadGameStepSceneEndCallBack;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action unLoadGameStepSceneEndCallBack;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int loadActiveSceneIndex;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60D60", Offset = "0xE60D60")]
		private bool <IsStepSceneLoading>k__BackingField;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material stepSkyBox;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine Coroutine_StartLoadStepScene;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private WaitForSeconds wait;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine Coroutine_StartUnLoadStepScene;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine Coroutine_StartLoad;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine coroutine;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine Coroutine_StartUnLoad;

		[Token(Token = "0x170001A8")]
		public bool IsStepSceneLoading
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x20F8374", Offset = "0x20F8374", VA = "0x20F8374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CF1C", Offset = "0xE6CF1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x20F837C", Offset = "0x20F837C", VA = "0x20F837C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CF2C", Offset = "0xE6CF2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public List<GameStepSceneConfig> StepSceneConfigList
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x20F8388", Offset = "0x20F8388", VA = "0x20F8388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x20F8390", Offset = "0x20F8390", VA = "0x20F8390")]
		public void Init()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x20F8394", Offset = "0x20F8394", VA = "0x20F8394")]
		public void SceneActive(int sceneBuildIndex)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x20F84A0", Offset = "0x20F84A0", VA = "0x20F84A0")]
		public void SceneActive_NoviceGuide()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x20F7DA4", Offset = "0x20F7DA4", VA = "0x20F7DA4")]
		public void SceneActive_SafeRoom()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x20F84D0", Offset = "0x20F84D0", VA = "0x20F84D0")]
		public void SceneActive_Camp()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x20F8500", Offset = "0x20F8500", VA = "0x20F8500")]
		public void SceneActive_Step(int step)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x20F85DC", Offset = "0x20F85DC", VA = "0x20F85DC")]
		public GameStepSceneConfig GetStepSceneConfig(int step)
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x20F868C", Offset = "0x20F868C", VA = "0x20F868C")]
		public void LoadGameStepScene(int step, Action loadEnd, bool isLoadEndActive = false)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x20F8C78", Offset = "0x20F8C78", VA = "0x20F8C78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6CF3C", Offset = "0xE6CF3C")]
		private IEnumerator StartLoadStepScene(params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x20F8D0C", Offset = "0x20F8D0C", VA = "0x20F8D0C")]
		private void StopLoadStepScene()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x20F8E3C", Offset = "0x20F8E3C", VA = "0x20F8E3C")]
		public void UnLoadGameStepScene(Action unLoadEnd)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x20F8F98", Offset = "0x20F8F98", VA = "0x20F8F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6CF9C", Offset = "0xE6CF9C")]
		private IEnumerator StartUnLoadStepScene(params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x20F902C", Offset = "0x20F902C", VA = "0x20F902C")]
		public void ChangeLoadStepScene(int step, Action loadEnd, bool isLoadEndActive = false)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x20F9218", Offset = "0x20F9218", VA = "0x20F9218")]
		private void GameStepSceneLoadedEnd(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x20F92B0", Offset = "0x20F92B0", VA = "0x20F92B0")]
		public void Load(Action endCallBack, e_sceneType sceneType, bool isLoadingUI = true)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x20F94F0", Offset = "0x20F94F0", VA = "0x20F94F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6CFFC", Offset = "0xE6CFFC")]
		private IEnumerator StartLoad(bool isLoadingUI, params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x20F9590", Offset = "0x20F9590", VA = "0x20F9590")]
		private void StopLoad()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x20F89D4", Offset = "0x20F89D4", VA = "0x20F89D4")]
		public void SetLoadingMask(bool isShow)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x20F9614", Offset = "0x20F9614", VA = "0x20F9614")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6D05C", Offset = "0xE6D05C")]
		private IEnumerator IEnumerator(bool isShow)
		{
			return null;
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x20F9684", Offset = "0x20F9684", VA = "0x20F9684")]
		public void Unload([Optional] Action unLoadFinish)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x20F9714", Offset = "0x20F9714", VA = "0x20F9714")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6D0BC", Offset = "0xE6D0BC")]
		private IEnumerator StartUnLoad(Action unLoadFinish)
		{
			return null;
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x20F946C", Offset = "0x20F946C", VA = "0x20F946C")]
		private void StopUnLoad()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x20F97A8", Offset = "0x20F97A8", VA = "0x20F97A8")]
		public GameSceneConfig()
		{
		}
	}

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSceneManager Instance;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameSceneConfig curSceneCofig;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60D10", Offset = "0xE60D10")]
	private bool <IsLoadingMeshShow>k__BackingField;

	[Token(Token = "0x170001A7")]
	public bool IsLoadingMeshShow
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x224FF6C", Offset = "0x224FF6C", VA = "0x224FF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CEFC", Offset = "0xE6CEFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600105D")]
		[Address(RVA = "0x224FF74", Offset = "0x224FF74", VA = "0x224FF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6CF0C", Offset = "0xE6CF0C")]
		private set
		{
		}
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x224FF00", Offset = "0x224FF00", VA = "0x224FF00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x22458C0", Offset = "0x22458C0", VA = "0x22458C0")]
	public void InitScene()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x2247128", Offset = "0x2247128", VA = "0x2247128")]
	public void LoadScene([Optional] Action endCallBack, e_sceneType sceneType = e_sceneType.SafeRoom, bool isLoadingUI = true)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x224FF80", Offset = "0x224FF80", VA = "0x224FF80")]
	public void UnLoadScene()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x224FF98", Offset = "0x224FF98", VA = "0x224FF98")]
	public GameStepSceneConfig GetCurConfigStepScene(int sceneStepIndex)
	{
		return null;
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x224FFAC", Offset = "0x224FFAC", VA = "0x224FFAC")]
	public bool IsStepSceneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x224FFCC", Offset = "0x224FFCC", VA = "0x224FFCC")]
	public GameSceneManager()
	{
	}
}
[Token(Token = "0x200031B")]
public class InputManager : Singleton<InputManager>
{
	[Serializable]
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55634", Offset = "0xE55634")]
	private sealed class <>c
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__37_0;

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x2057B50", Offset = "0x2057B50", VA = "0x2057B50")]
		public <>c()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x2057B58", Offset = "0x2057B58", VA = "0x2057B58")]
		internal void <ProcessPCInput>b__37_0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private InputDevice LHandDevice;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<bool> OnLHandPressPrimaryBtn;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<bool> OnLHandPressSecondBtn;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<bool> OnLHandPressTriggerBtn;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<bool> OnLHandPressGripBtn;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<bool> OnLHandPressMenuBtn;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action OnLHandPressGripBtnDowning;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<float> OnLHandPressGripBtnDowningStay;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<Vector2> OnLHandPressThumbstick;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputDevice RHandDevice;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<bool> OnRHandPressPrimaryBtn;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<bool> OnRHandPressSecondBtn;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<bool> OnRHandPressTriggerBtn;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<bool> OnRHandPressGripBtn;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<bool> OnRHandPressMenuBtn;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action OnRHandPressGripBtnDowning;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action<float> OnRHandPressGripBtnDowningStay;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<Vector2> OnRHandPressThumbstick;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool bGamePause;

	[Token(Token = "0x400129B")]
	private const string ButtonKeyName = "Fire1";

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float timer;

	[Token(Token = "0x400129D")]
	private const float LONG_PRESS_TIME = 0.5f;

	[Token(Token = "0x400129E")]
	private const float Discarded_TIME = 0.2f;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<int, bool> mBtnLastStateDict;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Dictionary<int, e_type_btnState> mBtnStateDict;

	[Token(Token = "0x14000009")]
	public event Action startOrStopGame
	{
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x20AE8E8", Offset = "0x20AE8E8", VA = "0x20AE8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D2AC", Offset = "0xE6D2AC")]
		add
		{
		}
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x20AE988", Offset = "0x20AE988", VA = "0x20AE988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D2BC", Offset = "0xE6D2BC")]
		remove
		{
		}
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x20AEA28", Offset = "0x20AEA28", VA = "0x20AEA28")]
	public void StartGameEvent()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x20AEA3C", Offset = "0x20AEA3C", VA = "0x20AEA3C")]
	private void GameEffectDebug()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x20AEA60", Offset = "0x20AEA60", VA = "0x20AEA60")]
	public void DoInit()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x20AEA8C", Offset = "0x20AEA8C", VA = "0x20AEA8C")]
	private void InitInputDevices(InputDeviceCharacteristics deviceCharacteristics)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x20AEB68", Offset = "0x20AEB68", VA = "0x20AEB68")]
	public e_type_btnState GetBtnState(e_type_btn btn)
	{
		return default(e_type_btnState);
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x20AEC74", Offset = "0x20AEC74", VA = "0x20AEC74")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x20AEC98", Offset = "0x20AEC98", VA = "0x20AEC98")]
	private void ProcessVRInput()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x20AECBC", Offset = "0x20AECBC", VA = "0x20AECBC")]
	private void ProcessLHandInput()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x20AF424", Offset = "0x20AF424", VA = "0x20AF424")]
	private void ProcessRHandInput()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x20AFB8C", Offset = "0x20AFB8C", VA = "0x20AFB8C")]
	private void ProcessPCInput()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x20B08F8", Offset = "0x20B08F8", VA = "0x20B08F8")]
	public void SendHapticImpulse(bool isRight, float amplitude, float duration = 1f)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x20B09E4", Offset = "0x20B09E4", VA = "0x20B09E4")]
	public void StopHaptics(bool isRight)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x20B0A00", Offset = "0x20B0A00", VA = "0x20B0A00")]
	public InputManager()
	{
	}
}
[Token(Token = "0x200031D")]
public class ModelClothesManager : MonoBehaviour
{
	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRHalidomIntercator HeadWear;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<XRHalidomIntercator> RingList;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<XRHalidomIntercator> Bracelet;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FollowVRController RightVRController;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FollowVRController LeftVRController;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<XRHalidomIntercator, XRBaseInteractable> HolySlotDictionary;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isShow;

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x279D558", Offset = "0x279D558", VA = "0x279D558")]
	public void Init_Id(WUnit wUnit)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x279DB9C", Offset = "0x279DB9C", VA = "0x279DB9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x279E428", Offset = "0x279E428", VA = "0x279E428")]
	public void SafeRoomInteractStatus(bool IsShow)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x279E05C", Offset = "0x279E05C", VA = "0x279E05C")]
	public void DestroyInteractable()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x279EE20", Offset = "0x279EE20", VA = "0x279EE20")]
	public void ReplaceFashion(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x279EEB0", Offset = "0x279EEB0", VA = "0x279EEB0")]
	public void Slough(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x279EF40", Offset = "0x279EF40", VA = "0x279EF40")]
	public void F_Track_Tf(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x279EFBC", Offset = "0x279EFBC", VA = "0x279EFBC")]
	public void T_Track_Tf(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x279F03C", Offset = "0x279F03C", VA = "0x279F03C")]
	public ModelClothesManager()
	{
	}
}
[Token(Token = "0x200031E")]
public class ObjectCacheManager : Singleton<ObjectCacheManager>
{
	[Serializable]
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55644", Offset = "0xE55644")]
	private sealed class <>c
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<HitResultData> <>9__2_0;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<HitResultData> <>9__2_1;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<UnitResultData> <>9__2_2;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<UnitResultData> <>9__2_3;

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x205D038", Offset = "0x205D038", VA = "0x205D038")]
		public <>c()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x205D040", Offset = "0x205D040", VA = "0x205D040")]
		internal HitResultData <.ctor>b__2_0()
		{
			return null;
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x205D098", Offset = "0x205D098", VA = "0x205D098")]
		internal void <.ctor>b__2_1(HitResultData data)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x205D0B4", Offset = "0x205D0B4", VA = "0x205D0B4")]
		internal UnitResultData <.ctor>b__2_2()
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x205D10C", Offset = "0x205D10C", VA = "0x205D10C")]
		internal void <.ctor>b__2_3(UnitResultData data)
		{
		}
	}

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CacheUtils.ObjectPool<HitResultData> HitResultDataPool;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CacheUtils.ObjectPool<UnitResultData> UnitResultDataPool;

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x2304ADC", Offset = "0x2304ADC", VA = "0x2304ADC")]
	public ObjectCacheManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000320")]
public class SaveData
{
	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxProgress;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int NumberVisitsChamber;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaxKill;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PistolStruckDown;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MachineStruckDown;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int ShotgunStruckDown;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Kill_Mummy_Skin_Big_02;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Kill_Pharaoh_Shadow;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int Kill_Anubis;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MaxPlayDie;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int CurEnergy;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int MaxGold;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int MaxEnergy;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int gameTime;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isNoviceGuide;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isStanding;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool isTranslationLeft;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool isTranslationRight;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isTranslationMask;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool isSmoothRotation;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Language;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int BulletDamageGrade;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int MagazineCapacityGrade;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int BlindSideShotGrade;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int CarryingAmmunitionGrade;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int ChangeAmmunitionTechniqueGrade;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int viabilityGrade;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int GameDiffculty;

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x24BCF5C", Offset = "0x24BCF5C", VA = "0x24BCF5C")]
	public SaveData()
	{
	}
}
[Token(Token = "0x2000321")]
public class PlayerCurrencyDataManager : Singleton<PlayerCurrencyDataManager>
{
	[Token(Token = "0x2000322")]
	public class IntegralData
	{
		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TotalIncentiveIntegral;

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x205E810", Offset = "0x205E810", VA = "0x205E810")]
		public IntegralData()
		{
		}
	}

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public SaveData saveData;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string DataPath;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, IntegralData> UnitIntegralData;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int InitIntergral;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action IntegralAction;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action EnergyAction;

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x230E6AC", Offset = "0x230E6AC", VA = "0x230E6AC")]
	public void Init()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x230ED54", Offset = "0x230ED54", VA = "0x230ED54")]
	public void LoadGameData()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x230E7A8", Offset = "0x230E7A8", VA = "0x230E7A8")]
	public void InitCharacterData()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x230F3C8", Offset = "0x230F3C8", VA = "0x230F3C8")]
	public void Energy_Record(int _Energy)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x230F3E4", Offset = "0x230F3E4", VA = "0x230F3E4")]
	public void RecordPurpose()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x230F4F8", Offset = "0x230F4F8", VA = "0x230F4F8")]
	public bool IsNoviceGuide()
	{
		return default(bool);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x230F518", Offset = "0x230F518", VA = "0x230F518")]
	public void ThroughNoviceGuide()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x230F528", Offset = "0x230F528", VA = "0x230F528")]
	public void MaxPlayDie()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x230F5E8", Offset = "0x230F5E8", VA = "0x230F5E8")]
	public void MaxPurpose(int roomID)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x230FB34", Offset = "0x230FB34", VA = "0x230FB34")]
	public void UnlockArea(int AreaID)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x230FD58", Offset = "0x230FD58", VA = "0x230FD58")]
	public void HitMonster_WeaponType(int hurterId, e_weapon_type WeaponType)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x23101E4", Offset = "0x23101E4", VA = "0x23101E4")]
	public void RecordSetting(bool GameHeightState, bool isTranslationLeft, bool isTranslationRight, bool isTranslationMask, bool isSmoothRotation, string _Language)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x231026C", Offset = "0x231026C", VA = "0x231026C")]
	public void SaveGameDiffculty(int GameDiffculty)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x2310288", Offset = "0x2310288", VA = "0x2310288")]
	public void RecordMaxEnergy(int curEnergy)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x23102B0", Offset = "0x23102B0", VA = "0x23102B0")]
	public void AnewWeapon()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x2310324", Offset = "0x2310324", VA = "0x2310324")]
	public void RecordMaxGold(int curGold)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x231034C", Offset = "0x231034C", VA = "0x231034C")]
	public void CurrencyChange(WUnit unit, int currency, e_CurrencyType currencyType, sbyte type, int valueA)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x230F328", Offset = "0x230F328", VA = "0x230F328")]
	public string ToJson(object obj)
	{
		return null;
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x230E6D0", Offset = "0x230E6D0", VA = "0x230E6D0")]
	public void IntegralInit()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x2310598", Offset = "0x2310598", VA = "0x2310598")]
	public void IntegralChange(WUnit unit, int Integral, e_IntegralType type, int valueA)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x2310998", Offset = "0x2310998", VA = "0x2310998")]
	private void Reset(int Intergral, WUnit unit)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x23107B8", Offset = "0x23107B8", VA = "0x23107B8")]
	private void Add(WUnit unit, int Integral)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x2310954", Offset = "0x2310954", VA = "0x2310954")]
	private void Reduce(WUnit unit, int Integral)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x23109C8", Offset = "0x23109C8", VA = "0x23109C8")]
	private void DeathSettlement(WUnit unit)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x2310BDC", Offset = "0x2310BDC", VA = "0x2310BDC")]
	public void SwitchTip(WUnit unit, AudioEvent audio)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x2310AD0", Offset = "0x2310AD0", VA = "0x2310AD0")]
	private void IntegralInsufficient(WUnit unit, int valueA)
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x2310C88", Offset = "0x2310C88", VA = "0x2310C88")]
	public int GetTotalIncentiveIntegral(int unitID)
	{
		return default(int);
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x2310D10", Offset = "0x2310D10", VA = "0x2310D10")]
	public void EnergyInit()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x2310418", Offset = "0x2310418", VA = "0x2310418")]
	public void EnergyChange(WUnit unit, int Energy, e_EnergyType type, int valueA)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x2310E28", Offset = "0x2310E28", VA = "0x2310E28")]
	private void EnergyReset(int Energy, WUnit unit)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x2310D14", Offset = "0x2310D14", VA = "0x2310D14")]
	private void EnergyAdd(WUnit unit, int Energy)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x2310DE4", Offset = "0x2310DE4", VA = "0x2310DE4")]
	private void EnergyReduce(WUnit unit, int Energy)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x2310E4C", Offset = "0x2310E4C", VA = "0x2310E4C")]
	private void EnergyInsufficient(WUnit unit, int valueA)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x2310F58", Offset = "0x2310F58", VA = "0x2310F58")]
	public PlayerCurrencyDataManager()
	{
	}
}
[Token(Token = "0x2000323")]
internal class RaycastJobManager : MonoSingleton<global::RaycastJobManager>
{
	[Token(Token = "0x2000324")]
	public struct RayData
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResultsDelegate cb;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RaycastCommand raycastCommand;

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x205FF00", Offset = "0x205FF00", VA = "0x205FF00")]
		public RaycastCommand GetCommand()
		{
			return default(RaycastCommand);
		}
	}

	[Token(Token = "0x2000325")]
	public delegate void ResultsDelegate(int index, int length);

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<RayData> rayDatas;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int hitTotle;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private JobHandle handle;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x2719620", Offset = "0x2719620", VA = "0x2719620")]
	public void Add(Vector3 origin, Vector3 direction, float distance, int maxHits, int layerMask, ResultsDelegate cb)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x271978C", Offset = "0x271978C", VA = "0x271978C")]
	public RaycastHit GetResult(int index)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x27197D0", Offset = "0x27197D0", VA = "0x27197D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x2719B00", Offset = "0x2719B00", VA = "0x2719B00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x2719BC8", Offset = "0x2719BC8", VA = "0x2719BC8")]
	public RaycastJobManager()
	{
	}
}
[Token(Token = "0x2000326")]
public enum e_RelicsType
{
	[Token(Token = "0x40012DC")]
	NONE = 0,
	[Token(Token = "0x40012DD")]
	unimportant = 1000,
	[Token(Token = "0x40012DE")]
	sherbet_Power = 1001,
	[Token(Token = "0x40012DF")]
	earth_Power = 1002,
	[Token(Token = "0x40012E0")]
	flame_Power = 1003,
	[Token(Token = "0x40012E1")]
	life_Power = 1004,
	[Token(Token = "0x40012E2")]
	elementIncrease = 1005,
	[Token(Token = "0x40012E3")]
	skilledHunter = 1006,
	[Token(Token = "0x40012E4")]
	bulletRecovery = 1007,
	[Token(Token = "0x40012E5")]
	deadlyMoment = 1008
}
[Serializable]
[Token(Token = "0x2000327")]
public class RelicsInfo
{
	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_RelicsType RelicsType;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite RelicsSprite;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RelicsPrefab;

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x272080C", Offset = "0x272080C", VA = "0x272080C")]
	public RelicsInfo()
	{
	}
}
[Token(Token = "0x2000328")]
public class RelicsFunctionManager : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55654", Offset = "0xE55654")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_RelicsType relicsType;

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x2060284", Offset = "0x2060284", VA = "0x2060284")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x206028C", Offset = "0x206028C", VA = "0x206028C")]
		internal bool <GetRelicsPrefab>b__0(RelicsInfo a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55664", Offset = "0xE55664")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RelicsFunctionManager <>4__this;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public e_RelicsType relicsType;

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x20602B0", Offset = "0x20602B0", VA = "0x20602B0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x20602B8", Offset = "0x20602B8", VA = "0x20602B8")]
		internal void <EnterCD>b__0()
		{
		}
	}

	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55674", Offset = "0xE55674")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_RelicsType relicsType;

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x2060318", Offset = "0x2060318", VA = "0x2060318")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x2060320", Offset = "0x2060320", VA = "0x2060320")]
		internal bool <SetRelics>b__0(RelicsInfo a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<e_RelicsType> RelicsEnterCD;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<e_RelicsType> localPlayerRelicsDatas;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<e_RelicsType> localPlayerDebuffRelicsDatas;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RelicsScreenUI relicsScreenUI;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<RelicsInfo> relicsInfos;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RelicsFunctionManager _instance;

	[Token(Token = "0x170001B4")]
	public static RelicsFunctionManager Instance
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x27200A0", Offset = "0x27200A0", VA = "0x27200A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x27200EC", Offset = "0x27200EC", VA = "0x27200EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x2720148", Offset = "0x2720148", VA = "0x2720148")]
	public void ResetRelics()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x271D538", Offset = "0x271D538", VA = "0x271D538")]
	public GameObject GetRelicsPrefab(e_RelicsType relicsType)
	{
		return null;
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x271E75C", Offset = "0x271E75C", VA = "0x271E75C")]
	public bool CheckRelicsExist(e_RelicsType relicsType)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x2720264", Offset = "0x2720264", VA = "0x2720264")]
	public void EnterCD(e_RelicsType relicsType)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x27203A0", Offset = "0x27203A0", VA = "0x27203A0")]
	public List<e_RelicsType> GetDebuffRelicsDatas()
	{
		return null;
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x271E7EC", Offset = "0x271E7EC", VA = "0x271E7EC")]
	public void SetRelics(e_RelicsType relicsType)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x2720738", Offset = "0x2720738", VA = "0x2720738")]
	public RelicsFunctionManager()
	{
	}
}
[Token(Token = "0x200032C")]
public class SettingManager : Singleton<SettingManager>
{
	[Token(Token = "0x200032D")]
	[SerializeField]
	public class PlayerInfo
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public IPEndPoint ipInfo;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public e_group_type playerGroup;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public e_Player_Style playeType;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public e_weapon_group playerWeapon;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public int site;

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x20613A8", Offset = "0x20613A8", VA = "0x20613A8")]
		public PlayerInfo()
		{
		}
	}

	[Token(Token = "0x200032E")]
	public class hardwareStruct
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int vr_type;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hw_type;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int button_type;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int weapon_type;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos_offset_l;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rot_offset_l;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 pos_offset_r;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 rot_offset_r;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string fire_l;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string fire_r;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x20613B0", Offset = "0x20613B0", VA = "0x20613B0")]
		public (Vector3, Vector3) GetDataByDir(bool isRight)
		{
			return default((Vector3, Vector3));
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x2061434", Offset = "0x2061434", VA = "0x2061434")]
		public hardwareStruct()
		{
		}
	}

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string GameVersion;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlatformVersion;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string GameName;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool debug;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isShowFPS;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public e_Server_Type ServerType;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NetType NetType;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public e_type_vrMode curVRMode;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useVRInput;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerIP;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string ClientIP;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int ClientPort;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] ClientIPs;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int[] ClientPorts;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool IsServer;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool IsOffline;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<string, PlayerInfo> initPlayerInfoDic;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 CameraRigPosOffset;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 CameraRigRotOffset;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int Port;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string platformIP;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int platformReceivePort;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int platformSendPort;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int hardware_type;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int vr_hmd_type;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 VRRot_Offset;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 VRPos_Offset;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<hardwareStruct> hardwareStructs;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private hardwareStruct def_hardwareStruct;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ushort shakeValue_min;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public ushort shakeValue_max;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public e_type_language language;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool IsEnableGroupDamage;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int CheckOpenVRRuntimeNum;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 FixEulerAngleOffset;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool isLive;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	public bool isRecordCamera;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
	public bool isEnableVoice;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameModeType gameMode;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool IsLite;

	[Token(Token = "0x400131C")]
	public const int GAME_SETTING_BACKUP0 = 1;

	[Token(Token = "0x400131D")]
	public const int GAME_SETTING_BACKUP1 = 2;

	[Token(Token = "0x400131E")]
	public const int GAME_SETTING_BACKUP2 = 4;

	[Token(Token = "0x400131F")]
	public const int GAME_SETTING_BACKUP3 = 8;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int gameSetting;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool IsPlayLogo;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public e_GameDiffculty GameDiffculty;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public PlayerCountDiffculty playerCountDiffculty;

	[Token(Token = "0x170001B5")]
	public string GameTitle
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x2157F58", Offset = "0x2157F58", VA = "0x2157F58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x2157FAC", Offset = "0x2157FAC", VA = "0x2157FAC")]
	public hardwareStruct GetHardwareStruct(int vr_type, int hw_type, int weapon_type)
	{
		return null;
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x2158080", Offset = "0x2158080", VA = "0x2158080")]
	private bool CheckHardwareStruct(int vr_type, int hw_type, int weapon_type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x215815C", Offset = "0x215815C", VA = "0x215815C")]
	public hardwareStruct GetCurHardwareStruct(int weapon_type)
	{
		return null;
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x215816C", Offset = "0x215816C", VA = "0x215816C")]
	public void SetCurVRMode(e_type_vrMode type_VrMode)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x2158174", Offset = "0x2158174", VA = "0x2158174")]
	public void Init()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x21588F0", Offset = "0x21588F0", VA = "0x21588F0")]
	private string LoadSetupFile()
	{
		return null;
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x2158178", Offset = "0x2158178", VA = "0x2158178")]
	private bool LoadSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x2158ADC", Offset = "0x2158ADC", VA = "0x2158ADC")]
	public PlayerInfo GetPlayerInfoByIP(string ip)
	{
		return null;
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x2158C80", Offset = "0x2158C80", VA = "0x2158C80")]
	public static string GetPlatformIP()
	{
		return null;
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x2159030", Offset = "0x2159030", VA = "0x2159030")]
	public SettingManager()
	{
	}
}
[Token(Token = "0x200032F")]
public class StatisticalManager : Singleton<StatisticalManager>
{
	[Token(Token = "0x2000330")]
	private enum e_StatisticalType
	{
		[Token(Token = "0x400133E")]
		ShotgunStruckDown,
		[Token(Token = "0x400133F")]
		MachineStruckDown,
		[Token(Token = "0x4001340")]
		PistolStruckDown,
		[Token(Token = "0x4001341")]
		HitMonster,
		[Token(Token = "0x4001342")]
		HitMonsterHead,
		[Token(Token = "0x4001343")]
		KillMonster,
		[Token(Token = "0x4001344")]
		KillMonsterHead,
		[Token(Token = "0x4001345")]
		PlayerDeath,
		[Token(Token = "0x4001346")]
		PlayerAttack,
		[Token(Token = "0x4001347")]
		PlayerFail
	}

	[Token(Token = "0x2000331")]
	private struct StatisticalCell
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int playerId;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public e_StatisticalType type;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object arg1;
	}

	[Serializable]
	[Token(Token = "0x2000332")]
	public class StatisticalResultData
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gold;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxKill;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxKillHead;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxHit;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxHitHead;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxAtk;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxDie;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxFail;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int scoreIndex;

		[Token(Token = "0x170001B9")]
		public int HitRate
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x2062EBC", Offset = "0x2062EBC", VA = "0x2062EBC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BA")]
		public int KillHeadRate
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x2062F18", Offset = "0x2062F18", VA = "0x2062F18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x2062F68", Offset = "0x2062F68", VA = "0x2062F68")]
		public void Clear()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x2062F80", Offset = "0x2062F80", VA = "0x2062F80")]
		public StatisticalResultData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000333")]
	public class StatisticalResults
	{
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int winGroupId;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int gameTime;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<StatisticalResultData> Results;

		[Token(Token = "0x170001BB")]
		public int GameTime
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x2063164", Offset = "0x2063164", VA = "0x2063164")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BC")]
		public int TotleScore
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x2062BFC", Offset = "0x2062BFC", VA = "0x2062BFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BD")]
		public float TotleLineFail
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x206316C", Offset = "0x206316C", VA = "0x206316C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x2062F90", Offset = "0x2062F90", VA = "0x2062F90")]
		public StatisticalResultData GetScoreById(int playerId)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x2063174", Offset = "0x2063174", VA = "0x2063174")]
		public string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x2063214", Offset = "0x2063214", VA = "0x2063214")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x20632B4", Offset = "0x20632B4", VA = "0x20632B4")]
		public static StatisticalResults ToResults(string str)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x20633A0", Offset = "0x20633A0", VA = "0x20633A0")]
		public StatisticalResults()
		{
		}
	}

	[Token(Token = "0x2000334")]
	private struct ScoreRange
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;
	}

	[Serializable]
	[Token(Token = "0x2000335")]
	public class PlatformStatistical
	{
		[Serializable]
		[Token(Token = "0x2000336")]
		public class PlayerData
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int pos;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int gold;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int total_kill;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int total_die;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int total_killhead;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int hitRate;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int killHeadRate;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int estimate;

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x320FA10", Offset = "0x320FA10", VA = "0x320FA10")]
			public PlayerData()
			{
			}
		}

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gameIntensity;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int result;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gameTime;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int curProgress;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxProgress;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerData[] playerData;

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x2062EB4", Offset = "0x2062EB4", VA = "0x2062EB4")]
		public PlatformStatistical()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55694", Offset = "0xE55694")]
	private sealed class <>c
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<StatisticalResultData> <>9__42_0;

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x2062E58", Offset = "0x2062E58", VA = "0x2062E58")]
		public <>c()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x2062E60", Offset = "0x2062E60", VA = "0x2062E60")]
		internal int <Calculate>b__42_0(StatisticalResultData x, StatisticalResultData y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<StatisticalCell>> statisticalCellDic;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, StatisticalResultData> statisticalResultsDic;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60E00", Offset = "0xE60E00")]
	private StatisticalResults <statisticalResults>k__BackingField;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60E10", Offset = "0xE60E10")]
	private bool <IsStart>k__BackingField;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stopwatch gameTimer;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60E20", Offset = "0xE60E20")]
	private int <GameTimer>k__BackingField;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action StatisticalUpdate;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ScoreRange> scoreRanges;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isNeedCalculate;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlatformStatistical platformStatistical;

	[Token(Token = "0x170001B6")]
	public StatisticalResults statisticalResults
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x2167E54", Offset = "0x2167E54", VA = "0x2167E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D2CC", Offset = "0xE6D2CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x2167E5C", Offset = "0x2167E5C", VA = "0x2167E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D2DC", Offset = "0xE6D2DC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public bool IsStart
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0x2167E64", Offset = "0x2167E64", VA = "0x2167E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D2EC", Offset = "0xE6D2EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001111")]
		[Address(RVA = "0x2167E6C", Offset = "0x2167E6C", VA = "0x2167E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D2FC", Offset = "0xE6D2FC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public int GameTimer
	{
		[Token(Token = "0x6001112")]
		[Address(RVA = "0x2167E78", Offset = "0x2167E78", VA = "0x2167E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D30C", Offset = "0xE6D30C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001113")]
		[Address(RVA = "0x2167E80", Offset = "0x2167E80", VA = "0x2167E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D31C", Offset = "0xE6D31C")]
		set
		{
		}
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x2167E88", Offset = "0x2167E88", VA = "0x2167E88")]
	public void TimerStop()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x2167F4C", Offset = "0x2167F4C", VA = "0x2167F4C")]
	public void TimerResume()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x2168020", Offset = "0x2168020", VA = "0x2168020")]
	public void SetStatisticalResults(string json)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x2168144", Offset = "0x2168144", VA = "0x2168144")]
	public void Init()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x2168474", Offset = "0x2168474", VA = "0x2168474")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x2168524", Offset = "0x2168524", VA = "0x2168524")]
	public void StartStatistical()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x216853C", Offset = "0x216853C", VA = "0x216853C")]
	public void UpdateStatistical()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x2169240", Offset = "0x2169240", VA = "0x2169240")]
	public void EndStatistical()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x2169888", Offset = "0x2169888", VA = "0x2169888")]
	public string GetPlatformStatistical()
	{
		return null;
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x2169894", Offset = "0x2169894", VA = "0x2169894")]
	private void AddToDic(StatisticalCell cell)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x21699D8", Offset = "0x21699D8", VA = "0x21699D8")]
	public void InitPlayer(int playerId)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x2169B1C", Offset = "0x2169B1C", VA = "0x2169B1C")]
	public void RecordGameStatus(int winGroupId)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x2169B5C", Offset = "0x2169B5C", VA = "0x2169B5C")]
	public void RecordPlayerFire(int playerId)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x2169B78", Offset = "0x2169B78", VA = "0x2169B78")]
	public void RecordPlayerFail(int playerId)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x2169B98", Offset = "0x2169B98", VA = "0x2169B98")]
	public void RecordPlayerDeath(int playerId)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x2169BD4", Offset = "0x2169BD4", VA = "0x2169BD4")]
	public void RecordHitMonster(int playerId, bool isHead)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x2169C34", Offset = "0x2169C34", VA = "0x2169C34")]
	public void RecordKillMonster(int playerId, bool isHead)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x2168698", Offset = "0x2168698", VA = "0x2168698")]
	public void Calculate()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x2169D50", Offset = "0x2169D50", VA = "0x2169D50")]
	private void OnHitPreMessage(e_type_role role, WUnit attacker, WUnit hurter, HitResultData hitData)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x2169C98", Offset = "0x2169C98", VA = "0x2169C98")]
	private int GetScoreRangeIndex(int score)
	{
		return default(int);
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x2169F10", Offset = "0x2169F10", VA = "0x2169F10")]
	public StatisticalManager()
	{
	}
}
[Token(Token = "0x2000338")]
public enum UnitResultDataType
{
	[Token(Token = "0x400136C")]
	None,
	[Token(Token = "0x400136D")]
	HP,
	[Token(Token = "0x400136E")]
	Magnification,
	[Token(Token = "0x400136F")]
	Integral,
	[Token(Token = "0x4001370")]
	Energy,
	[Token(Token = "0x4001371")]
	BulletDamage,
	[Token(Token = "0x4001372")]
	MagazineCapacity,
	[Token(Token = "0x4001373")]
	BlindSideShot,
	[Token(Token = "0x4001374")]
	CarryingAmmunition,
	[Token(Token = "0x4001375")]
	ChangeAmmunitionTechnique,
	[Token(Token = "0x4001376")]
	viability
}
[Token(Token = "0x2000339")]
public enum UnitResultDataValueType
{
	[Token(Token = "0x4001378")]
	NONE,
	[Token(Token = "0x4001379")]
	INT
}
[Token(Token = "0x200033A")]
public class UnitDataSyncManager : Singleton<UnitDataSyncManager>
{
	[Token(Token = "0x200033B")]
	public struct tempData
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UnitResultDataType type;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnitResultDataValueType valueType;

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x20646B0", Offset = "0x20646B0", VA = "0x20646B0")]
		public tempData(int objId, UnitResultDataType type, UnitResultDataValueType valueType)
		{
		}
	}

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<tempData> tempUnitDataList;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UnitResultData> tempUnitDataList2;

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x236A590", Offset = "0x236A590", VA = "0x236A590")]
	public void AddUnitDataSync_Int(int objId, UnitResultDataType type)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x236A62C", Offset = "0x236A62C", VA = "0x236A62C")]
	public void ProcessingUnitData_Send()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x236A8B8", Offset = "0x236A8B8", VA = "0x236A8B8")]
	private UnitResultData ProcessingUnitData(tempData tempData)
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x236AB38", Offset = "0x236AB38", VA = "0x236AB38")]
	public void ProcessingUnitData_Sync(UnitData unitData)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x236B094", Offset = "0x236B094", VA = "0x236B094")]
	public UnitDataSyncManager()
	{
	}
}
[Token(Token = "0x200033C")]
public class UnitManager : Singleton<UnitManager>
{
	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<int, int> WeaponChange;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<WUnit> PlayerStylePreChange;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<WUnit> PlayerStyleChange;

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x236B4B8", Offset = "0x236B4B8", VA = "0x236B4B8")]
	public void ChangePlayerStyle(WUnit unit, e_Player_Style newPlayerStyle)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x236C28C", Offset = "0x236C28C", VA = "0x236C28C")]
	public void ChangeAcquisitionWeapon(WUnit unit, int WeaponInteractableid, bool isRight)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x236D3E4", Offset = "0x236D3E4", VA = "0x236D3E4")]
	public void ChangePlayerGroup(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x236D558", Offset = "0x236D558", VA = "0x236D558")]
	private void LocalSiwtchAreaStand(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x236D604", Offset = "0x236D604", VA = "0x236D604")]
	private void OtherSiwtchAreaStand(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x236D86C", Offset = "0x236D86C", VA = "0x236D86C")]
	public WUnit CreateLocalPlayerUnit(int id, e_group_type groupId, e_Player_Style playerStyle, e_weapon_group weaponType)
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x236B8A0", Offset = "0x236B8A0", VA = "0x236B8A0")]
	public WUnit CreateLocalPlayerUnit(WUnit unit, e_Player_Style playerStyle, e_weapon_group weaponType, bool isInit = true)
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x236C448", Offset = "0x236C448", VA = "0x236C448")]
	public void TryCreateLocalPlayerWeapon(WUnit unit, int WeaponInteractableid, bool isR)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x236DC94", Offset = "0x236DC94", VA = "0x236DC94")]
	public void TryCreateLocalPlayerWeapon(WUnit unit, e_weapon_type weapon_Type, bool isRight)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x236E674", Offset = "0x236E674", VA = "0x236E674")]
	public WUnit CreateOtherPlayer(int id, e_group_type groupId, e_Player_Style playerStyle, e_weapon_group weaponType)
	{
		return null;
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x236BDCC", Offset = "0x236BDCC", VA = "0x236BDCC")]
	public WUnit CreateOtherPlayer(WUnit unit, e_Player_Style playerStyle, e_weapon_group weaponType, bool isInit = true)
	{
		return null;
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x236CF8C", Offset = "0x236CF8C", VA = "0x236CF8C")]
	public void TryCreateOtherPlayerWeapon(WUnit unit, int WeaponInteractableid, bool isR)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x236E890", Offset = "0x236E890", VA = "0x236E890")]
	public WUnit CreateNPCUnit(int objId, int tableId, e_group_type groupType)
	{
		return null;
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x236F4D8", Offset = "0x236F4D8", VA = "0x236F4D8")]
	public void TryCreateOtherPlayerWeapon(WUnit unit, e_weapon_type weapon_Type, bool isRight)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x236F09C", Offset = "0x236F09C", VA = "0x236F09C")]
	public void TryCreateNPCWeapon(WUnit unit, e_weapon_type WeaponType)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x236F9AC", Offset = "0x236F9AC", VA = "0x236F9AC")]
	public WUnit CreateMonsterUnit(int objId, int tableId)
	{
		return null;
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x236FF5C", Offset = "0x236FF5C", VA = "0x236FF5C")]
	public void CreateBirthEffect(Vector3 pos, Quaternion rot, Transform parent, int assetid, float delaytime, Action action)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x236DA88", Offset = "0x236DA88", VA = "0x236DA88")]
	private void InitPlayerNumeric(WUnit unit)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x236EFCC", Offset = "0x236EFCC", VA = "0x236EFCC")]
	private void InitNoPlayerNumeric(WUnit unit)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x23700CC", Offset = "0x23700CC", VA = "0x23700CC")]
	private void SetSyncHP_BOSS(WUnit unit)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x23701B0", Offset = "0x23701B0", VA = "0x23701B0")]
	public UnitManager()
	{
	}
}
[Token(Token = "0x200033D")]
public class BoundaryFlagEffect : MonoBehaviour
{
	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform posFlag;

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x27CBD44", Offset = "0x27CBD44", VA = "0x27CBD44")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x27CBE04", Offset = "0x27CBE04", VA = "0x27CBE04")]
	public void SetActive(bool state)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x27CBEB4", Offset = "0x27CBEB4", VA = "0x27CBEB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x27CC0D4", Offset = "0x27CC0D4", VA = "0x27CC0D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x27CC0D8", Offset = "0x27CC0D8", VA = "0x27CC0D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x27CC0DC", Offset = "0x27CC0DC", VA = "0x27CC0DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x27CBEB8", Offset = "0x27CBEB8", VA = "0x27CBEB8")]
	private void Follow()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x27CC0E0", Offset = "0x27CC0E0", VA = "0x27CC0E0")]
	public BoundaryFlagEffect()
	{
	}
}
[Token(Token = "0x200033E")]
public class BoundaryUI : BaseUI
{
	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject overlay_1;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject overlay2_1;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject overlay_2;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject overlay2_2;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoundaryFlagEffect flag;

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x27CC0E8", Offset = "0x27CC0E8", VA = "0x27CC0E8", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x27CC22C", Offset = "0x27CC22C", VA = "0x27CC22C")]
	public BoundaryUI()
	{
	}
}
[Token(Token = "0x200033F")]
public class CheckBorderHeightTag : MonoBehaviour
{
	[Token(Token = "0x600115F")]
	[Address(RVA = "0x266551C", Offset = "0x266551C", VA = "0x266551C")]
	public CheckBorderHeightTag()
	{
	}
}
[Token(Token = "0x2000340")]
public class CheckVR : MonoBehaviour
{
	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEnableVRDevices;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnEnablePCDevices;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x2667918", Offset = "0x2667918", VA = "0x2667918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x2667958", Offset = "0x2667958", VA = "0x2667958")]
	public CheckVR()
	{
	}
}
[Token(Token = "0x2000341")]
public class DeathAnimation : MonoBehaviour, IDeathDefine
{
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE556A4", Offset = "0xE556A4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action endAction;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeathAnimation <>4__this;

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x20F5470", Offset = "0x20F5470", VA = "0x20F5470")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x20F5478", Offset = "0x20F5478", VA = "0x20F5478")]
		internal void <TriggerDeathDefine>b__0()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x20F548C", Offset = "0x20F548C", VA = "0x20F548C")]
		internal bool <TriggerDeathDefine>b__1(AnimationClip a)
		{
			return default(bool);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x20F54CC", Offset = "0x20F54CC", VA = "0x20F54CC")]
		internal void <TriggerDeathDefine>b__2()
		{
		}
	}

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Animator animationControll;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string aniStateName;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float aniDelay;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isCommitSuicide;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60E90", Offset = "0xE60E90")]
	public bool IsDieChange;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool IsEmbeddedAnimation;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Renderer> DieRender;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DieDissolveScale;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ChangeTime;

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x21CC994", Offset = "0x21CC994", VA = "0x21CC994")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x21CC99C", Offset = "0x21CC99C", VA = "0x21CC99C", Slot = "6")]
	public virtual void TriggerDeathDefine(Action endAction)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x21CCC8C", Offset = "0x21CCC8C", VA = "0x21CCC8C", Slot = "7")]
	public virtual void SetDeathStaut(bool IsCommitSuicide)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x21CCC98", Offset = "0x21CCC98", VA = "0x21CCC98")]
	public void DieChange()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x21CCD5C", Offset = "0x21CCD5C", VA = "0x21CCD5C")]
	public DeathAnimation()
	{
	}
}
[Token(Token = "0x2000343")]
public class DieRecycleObject : IObjectRecycle
{
	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ComponentCacheTools cache;

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x24E9C80", Offset = "0x24E9C80", VA = "0x24E9C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x24E9CDC", Offset = "0x24E9CDC", VA = "0x24E9CDC", Slot = "4")]
	public override void Recycle()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x24EA17C", Offset = "0x24EA17C", VA = "0x24EA17C", Slot = "5")]
	public override void Recover()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x24EA180", Offset = "0x24EA180", VA = "0x24EA180")]
	public DieRecycleObject()
	{
	}
}
[Token(Token = "0x2000344")]
public class FirstPersonShootController : MonoBehaviour
{
	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform weaponNode;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform weaponNode2;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cameraNode;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float moveSpeed;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendSpeed;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveBlend;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE60EC8", Offset = "0xE60EC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE60EC8", Offset = "0xE60EC8")]
	public float aimVerticalLimit;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE60F20", Offset = "0xE60F20")]
	public float maxViewAngle;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerMoveRange playerMoveLimit;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CharacterMono character;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Lhand;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Rhand;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 aimRandom;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 aimVel;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float aimWeight;

	[Token(Token = "0x170001BE")]
	private static Vector3 inputVector
	{
		[Token(Token = "0x600116F")]
		[Address(RVA = "0x223E374", Offset = "0x223E374", VA = "0x223E374")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BF")]
	private static Vector3 inputVectorRaw
	{
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x223E3F8", Offset = "0x223E3F8", VA = "0x223E3F8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x223E47C", Offset = "0x223E47C", VA = "0x223E47C")]
	private void AnimationMove(Vector3 moveInput, bool isMoving)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x223E638", Offset = "0x223E638", VA = "0x223E638")]
	private void Move()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x223E8F4", Offset = "0x223E8F4", VA = "0x223E8F4")]
	private void RotateWeapon(float horAdd, float vertAdd)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x223EBB4", Offset = "0x223EBB4", VA = "0x223EBB4")]
	public void RotateCharacter(Vector3 forward, float maxAngle, [Optional] Transform fix)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x223EE38", Offset = "0x223EE38", VA = "0x223EE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x223EF30", Offset = "0x223EF30", VA = "0x223EF30")]
	private void Update()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x223EF9C", Offset = "0x223EF9C", VA = "0x223EF9C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x223F060", Offset = "0x223F060", VA = "0x223F060")]
	public FirstPersonShootController()
	{
	}
}
[Token(Token = "0x2000345")]
public enum e_BodyParts
{
	[Token(Token = "0x40013A7")]
	NONE,
	[Token(Token = "0x40013A8")]
	Head,
	[Token(Token = "0x40013A9")]
	Body,
	[Token(Token = "0x40013AA")]
	LeftArm,
	[Token(Token = "0x40013AB")]
	RightArm,
	[Token(Token = "0x40013AC")]
	LeftLeg,
	[Token(Token = "0x40013AD")]
	RightLeg
}
[Token(Token = "0x2000346")]
public enum e_BodyDirection
{
	[Token(Token = "0x40013AF")]
	Default,
	[Token(Token = "0x40013B0")]
	LeftForward,
	[Token(Token = "0x40013B1")]
	LeftBack,
	[Token(Token = "0x40013B2")]
	RightForward,
	[Token(Token = "0x40013B3")]
	RightBack
}
[Token(Token = "0x2000347")]
[AttributeAttribute(Name = "ComponentCacheAttribute", RVA = "0xE556B4", Offset = "0xE556B4")]
public class HurtDefine : MonoBehaviour
{
	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit _owner;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchInfoData HitSwitchInfo;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent HitAudioEvent;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchInfoData DieSwitchInfo;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent DieAudioEvent;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchInfoData HeadHitSwitchInfo;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioEvent HeadHitAudioEvent;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwitchInfoData HeadDieSwitchInfo;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioEvent HeadDieAudioEvent;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider partCollider;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] HitEffect;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] HitEffectAdd;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent HitAction;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] DieEffect;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] DieEffectAdd;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float DieDelay;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public e_BodyParts bodyParts;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60F58", Offset = "0xE60F58")]
	public bool IsAnimatedLimb;

	[Token(Token = "0x170001C0")]
	public WUnit Owner
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x2534D70", Offset = "0x2534D70", VA = "0x2534D70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x2534C50", Offset = "0x2534C50", VA = "0x2534C50")]
	public void Awake()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x2534D68", Offset = "0x2534D68", VA = "0x2534D68")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x2534D78", Offset = "0x2534D78", VA = "0x2534D78")]
	public void SetPartColliderStatus(bool status)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x2534E34", Offset = "0x2534E34", VA = "0x2534E34")]
	public void ShowHitEffect(Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x25350B4", Offset = "0x25350B4", VA = "0x25350B4")]
	public void ShowHitAduio(Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x2535238", Offset = "0x2535238", VA = "0x2535238")]
	public void ShowDieEffect(Vector3 lookPoint, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x253550C", Offset = "0x253550C", VA = "0x253550C")]
	public void ShowDieAudio(Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x2535654", Offset = "0x2535654", VA = "0x2535654")]
	public void SyncPlayerHp(int currentHp)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x2535658", Offset = "0x2535658", VA = "0x2535658")]
	public void PlayReviveAudio()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x253565C", Offset = "0x253565C", VA = "0x253565C")]
	public HurtDefine()
	{
	}
}
[Token(Token = "0x2000348")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55714", Offset = "0xE55714")]
public class OtherMonsterNetSyncController : MonoBehaviour
{
	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpSpeed;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 Pos;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion Rot;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AimIKTools aimIKTools;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<bool> AnimatorSetBoolAction;

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x23085AC", Offset = "0x23085AC", VA = "0x23085AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x23085B0", Offset = "0x23085B0", VA = "0x23085B0")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x2308674", Offset = "0x2308674", VA = "0x2308674")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x230873C", Offset = "0x230873C", VA = "0x230873C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x23088E0", Offset = "0x23088E0", VA = "0x23088E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x2308978", Offset = "0x2308978", VA = "0x2308978")]
	public void SyncTransform(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x230898C", Offset = "0x230898C", VA = "0x230898C")]
	public void SyncAnimator(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x2308A4C", Offset = "0x2308A4C", VA = "0x2308A4C")]
	public void SyncAniParameter(int b, bool c, string e, float f, string h, float i)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x2308BE0", Offset = "0x2308BE0", VA = "0x2308BE0")]
	public void StartAim(string ainState, Vector3 targetPos)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x2308E00", Offset = "0x2308E00", VA = "0x2308E00")]
	public void StopAim()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x2308F18", Offset = "0x2308F18", VA = "0x2308F18")]
	public void SyncAimPos(Vector3 targetPos)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x2308D3C", Offset = "0x2308D3C", VA = "0x2308D3C")]
	public void SyncAimLineStatus(bool Status)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x2309054", Offset = "0x2309054", VA = "0x2309054")]
	public OtherMonsterNetSyncController()
	{
	}
}
[Token(Token = "0x2000349")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55774", Offset = "0xE55774")]
public class OtherPlayerNetSyncController : MonoBehaviour
{
	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IKAgent ikAgent;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WeaponAgent weaponAgent;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator otherAnimator;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerDeadRagdollTools deadTools;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool InversePlayerForword;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 gunPosition_r;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion gunRotate_r;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 gunForword_r;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 gunPosition_l;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion gunRotate_l;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 gunForword_l;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 prePosition;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float movingTimer;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float startMoveBase;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float movingTime;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float blandScale;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 currentBland;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float smoothSpeed;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float teleportDis;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 selfPosition;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion selfRotate;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float modelHight;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float playerHight;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 VRHeadPosition;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion VRHeadRotate;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 VRHeadPosition_raw;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion VRHeadRotate_raw;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isStaticMove;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float staticSpeed;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform StaticTrn;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isNetGlobalSync;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 realPos;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool miss;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public XRControllerCollector ControllerCollector;

	[Token(Token = "0x170001C1")]
	public Vector3 VRHeadPos
	{
		[Token(Token = "0x6001191")]
		[Address(RVA = "0x2309934", Offset = "0x2309934", VA = "0x2309934")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C2")]
	public Quaternion VRHeadRot
	{
		[Token(Token = "0x6001192")]
		[Address(RVA = "0x2309AB8", Offset = "0x2309AB8", VA = "0x2309AB8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170001C3")]
	public Vector3 VRHeadPos_Raw
	{
		[Token(Token = "0x6001193")]
		[Address(RVA = "0x2309AC4", Offset = "0x2309AC4", VA = "0x2309AC4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C4")]
	public Quaternion VRHeadRot_Raw
	{
		[Token(Token = "0x6001194")]
		[Address(RVA = "0x2309B04", Offset = "0x2309B04", VA = "0x2309B04")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170001C5")]
	public bool IsStaticMove
	{
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x2309B18", Offset = "0x2309B18", VA = "0x2309B18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001196")]
		[Address(RVA = "0x2309B20", Offset = "0x2309B20", VA = "0x2309B20")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public bool IsNetGlobalSync
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x2309B38", Offset = "0x2309B38", VA = "0x2309B38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x2309B2C", Offset = "0x2309B2C", VA = "0x2309B2C")]
		set
		{
		}
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x2309B40", Offset = "0x2309B40", VA = "0x2309B40")]
	private void Start()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x2309BC8", Offset = "0x2309BC8", VA = "0x2309BC8")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x2309DB8", Offset = "0x2309DB8", VA = "0x2309DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x230A378", Offset = "0x230A378", VA = "0x230A378")]
	private void CheckMoving(Animator iAnimator)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x230A17C", Offset = "0x230A17C", VA = "0x230A17C")]
	private void UpdatePlayerData()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x230A5BC", Offset = "0x230A5BC", VA = "0x230A5BC")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, bool isSameCamp)
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x230AAD4", Offset = "0x230AAD4", VA = "0x230AAD4")]
	public void Alive()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x2309970", Offset = "0x2309970", VA = "0x2309970")]
	private bool CheckRealPosition(Vector3 pos, out Vector3 realPos, out bool miss)
	{
		return default(bool);
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x230AD18", Offset = "0x230AD18", VA = "0x230AD18")]
	public void SyncGun_R(Vector3 pos, Quaternion rotate, Vector3 forward)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x230ADD0", Offset = "0x230ADD0", VA = "0x230ADD0")]
	public void SyncGun_L(Vector3 pos, Quaternion rotate, Vector3 forward)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x230AF38", Offset = "0x230AF38", VA = "0x230AF38")]
	public void SyncPlayer(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x230B000", Offset = "0x230B000", VA = "0x230B000")]
	public void SyncVRHead(Vector3 pos, Quaternion rotate, Vector3 pos_raw, Quaternion rotate_raw)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x230B030", Offset = "0x230B030", VA = "0x230B030")]
	public void SyncHand(Vector3 lhPos, Quaternion lhRot, Vector3 rhPos, Quaternion rhRot)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x230B13C", Offset = "0x230B13C", VA = "0x230B13C")]
	public void SyncHandAni(bool isLeft, string ani, float transition, int layer)
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x230B210", Offset = "0x230B210", VA = "0x230B210")]
	public void SyncPressTrigger(bool isLeft, int pressedType, bool isPressed)
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x230B2D0", Offset = "0x230B2D0", VA = "0x230B2D0")]
	public OtherPlayerNetSyncController()
	{
	}
}
[Token(Token = "0x200034A")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE557D4", Offset = "0xE557D4")]
public class ServerMonsterNetSyncController : MonoBehaviour
{
	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WUnit owner;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavMeshAgent navAgent;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<bool> AnimatorSetBoolAction;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<string> AnimatorTriggerAction;

	[Token(Token = "0x170001C7")]
	public float animatorSpeed
	{
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x24C6D24", Offset = "0x24C6D24", VA = "0x24C6D24")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x24C6C18", Offset = "0x24C6C18", VA = "0x24C6C18")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x24C6C1C", Offset = "0x24C6C1C", VA = "0x24C6C1C")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x24C6C80", Offset = "0x24C6C80", VA = "0x24C6C80")]
	public void SetAnimatorRootMotion(bool isRoot)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x24C6D40", Offset = "0x24C6D40", VA = "0x24C6D40")]
	public AnimatorStateInfo GetCurrentAnimatorStateInfo(int layerIndex)
	{
		return default(AnimatorStateInfo);
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x24C6D90", Offset = "0x24C6D90", VA = "0x24C6D90")]
	public void CrossFade(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x24C6E34", Offset = "0x24C6E34", VA = "0x24C6E34")]
	public void SyncAniParameter(int b, bool c, string e, float f, string h, float i)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x24C6FC8", Offset = "0x24C6FC8", VA = "0x24C6FC8")]
	public void GetTransformInfo(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x24C7034", Offset = "0x24C7034", VA = "0x24C7034")]
	public void FireStart()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x24C7078", Offset = "0x24C7078", VA = "0x24C7078")]
	public void Fire()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x24C71A4", Offset = "0x24C71A4", VA = "0x24C71A4")]
	public void FireEnd()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x24C71E8", Offset = "0x24C71E8", VA = "0x24C71E8")]
	public void SetNavMeshAreaMask(int roomIndex)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x24C72CC", Offset = "0x24C72CC", VA = "0x24C72CC")]
	public void SetAimLineStatus(bool Status)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x24C7308", Offset = "0x24C7308", VA = "0x24C7308")]
	public void SendAnimator(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x24C73D0", Offset = "0x24C73D0", VA = "0x24C73D0")]
	public ServerMonsterNetSyncController()
	{
	}
}
[Token(Token = "0x200034B")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55834", Offset = "0xE55834")]
public class ServerPlayerNetSyncController : MonoBehaviour
{
	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE60FA0", Offset = "0xE60FA0")]
	private WUnit <owner>k__BackingField;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float modelHeight;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 prePosition;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float movingTimer;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float startMoveBase;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float movingTime;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blandScale;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentBland;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 selfPosition;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion selfRotate;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 VRHeadPosition;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion VRHeadRotate;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float playerHight;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float minHeight;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform HeightTrans;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform HeightRoot;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public XRControllerCollector ControllerCollector;

	[Token(Token = "0x170001C8")]
	public WUnit owner
	{
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x24C73D8", Offset = "0x24C73D8", VA = "0x24C73D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D32C", Offset = "0xE6D32C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x24C73E0", Offset = "0x24C73E0", VA = "0x24C73E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D33C", Offset = "0xE6D33C")]
		private set
		{
		}
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x24C73E8", Offset = "0x24C73E8", VA = "0x24C73E8")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x24C75B8", Offset = "0x24C75B8", VA = "0x24C75B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x24C7688", Offset = "0x24C7688", VA = "0x24C7688")]
	private void UpdateHight()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x24C77E0", Offset = "0x24C77E0", VA = "0x24C77E0")]
	public void GetHandPosAndRot(out Vector3 lhPos, out Quaternion lhRot, out Vector3 rhPos, out Quaternion rhRot)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x24C77FC", Offset = "0x24C77FC", VA = "0x24C77FC")]
	public void SyncPlayer(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x24C7810", Offset = "0x24C7810", VA = "0x24C7810")]
	public void SyncVRHead(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x24C7824", Offset = "0x24C7824", VA = "0x24C7824")]
	public ServerPlayerNetSyncController()
	{
	}
}
[Token(Token = "0x200034C")]
public class ShowFPS : MonoBehaviour
{
	[Token(Token = "0x4001407")]
	private const float FrameInternal = 0.5f;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mFramer;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastFrame;

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x215DE5C", Offset = "0x215DE5C", VA = "0x215DE5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x215DE84", Offset = "0x215DE84", VA = "0x215DE84")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x215E010", Offset = "0x215E010", VA = "0x215E010")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x215E08C", Offset = "0x215E08C", VA = "0x215E08C")]
	public ShowFPS()
	{
	}
}
[Token(Token = "0x200034D")]
public class ShowFPSHMD : MonoBehaviour
{
	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShowFPS fpsC;

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x215E094", Offset = "0x215E094", VA = "0x215E094")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x215E134", Offset = "0x215E134", VA = "0x215E134")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x215E234", Offset = "0x215E234", VA = "0x215E234")]
	public ShowFPSHMD()
	{
	}
}
[Token(Token = "0x200034E")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55894", Offset = "0xE55894")]
public class MonsterHitTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200034F")]
	public class LimbInfo
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bodyPartId;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject defaultLimb;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject defaultLimb02;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject defaultLimbJoint;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject animatedLimb;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject animatedLimb02;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject animatedLimbJoint;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x205CA3C", Offset = "0x205CA3C", VA = "0x205CA3C")]
		public LimbInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000350")]
	public class SiteInjury
	{
		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bodyPartId;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public e_BodyParts bodyParts;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public e_BodyDirection bodyDirection;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent AudioEvent;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> MincedMeats;

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x205CA44", Offset = "0x205CA44", VA = "0x205CA44")]
		public SiteInjury()
		{
		}
	}

	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE558F4", Offset = "0xE558F4")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action cb;

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x205CA20", Offset = "0x205CA20", VA = "0x205CA20")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x205CA28", Offset = "0x205CA28", VA = "0x205CA28")]
		internal void <DoClearDie>b__0()
		{
		}
	}

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model_n;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject model_d;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60FC0", Offset = "0xE60FC0")]
	public bool IsDoubleModel;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RagdollTools rt_n;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RagdollTools rt_d;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollTools c_rt;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isExpolder;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LimbInfo> limbInfos;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SiteInjury> siteInjuries;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject HitInjurieEffect;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioEvent DieAudioEvent;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isDie;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WUnit Owner;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, LimbInfo> limbInfoDic;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, Dictionary<e_BodyDirection, SiteInjury>> SiteInjuryDic;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<e_BodyParts, List<GameObject>> DieSiteInjuryDic;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int MaxDieRagdoll;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, Transform> childNodeDic;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE60FF8", Offset = "0xE60FF8")]
	public List<Renderer> renderers;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material sherbetMaterial;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material earthMaterial;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material flameMaterial;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool IsRelicsRender;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Material[]> monsterMaterialList;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private e_RelicsType relicsType;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float relicsTime;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float CDTime;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float delayStep;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int Damage;

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x27AA5F4", Offset = "0x27AA5F4", VA = "0x27AA5F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x27AA784", Offset = "0x27AA784", VA = "0x27AA784")]
	public void DoInit(WUnit unit)
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x27AA7DC", Offset = "0x27AA7DC", VA = "0x27AA7DC")]
	private void RagdollToolInit()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x27AA8F0", Offset = "0x27AA8F0", VA = "0x27AA8F0")]
	private void LimbInit()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x27AABB4", Offset = "0x27AABB4", VA = "0x27AABB4")]
	private void SiteInit()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x27AB1C0", Offset = "0x27AB1C0", VA = "0x27AB1C0")]
	private void RecursiveCloneTransform(Transform target)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x27AB328", Offset = "0x27AB328", VA = "0x27AB328")]
	public void DoHit(WUnit owner, HitResultData hitData)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x27AB94C", Offset = "0x27AB94C", VA = "0x27AB94C")]
	public void DoDie(HitResultData hitData)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x27AC3EC", Offset = "0x27AC3EC", VA = "0x27AC3EC")]
	public void DoClearDie(Action cb)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x27AC5A4", Offset = "0x27AC5A4", VA = "0x27AC5A4")]
	public RagdollTools GetRagdollTools()
	{
		return null;
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x27AC5D0", Offset = "0x27AC5D0", VA = "0x27AC5D0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6D34C", Offset = "0xE6D34C")]
	private void SetSiteInjuriesBodPartid()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x27AC6F4", Offset = "0x27AC6F4", VA = "0x27AC6F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6D384", Offset = "0xE6D384")]
	private void SetlimbInfosBodPartid()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x27AB014", Offset = "0x27AB014", VA = "0x27AB014")]
	public void ResetRelics()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x27AC928", Offset = "0x27AC928", VA = "0x27AC928")]
	public void Update()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x27AB7B4", Offset = "0x27AB7B4", VA = "0x27AB7B4")]
	public void RelicsFunctionEffect(HitResultData hitData)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x27ACD7C", Offset = "0x27ACD7C", VA = "0x27ACD7C")]
	public void SetSherbetState()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x27ACE24", Offset = "0x27ACE24", VA = "0x27ACE24")]
	public void SetEarthState()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x27ACF34", Offset = "0x27ACF34", VA = "0x27ACF34")]
	public void SetFlameState(int attackerid)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x27ACFC4", Offset = "0x27ACFC4", VA = "0x27ACFC4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6D3BC", Offset = "0xE6D3BC")]
	public void SetSherbetEffect()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x27AD138", Offset = "0x27AD138", VA = "0x27AD138")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6D3F4", Offset = "0xE6D3F4")]
	public void SetEarthEffect()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x27AD2AC", Offset = "0x27AD2AC", VA = "0x27AD2AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6D42C", Offset = "0xE6D42C")]
	public void SetFlameEffect()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x27ACC20", Offset = "0x27ACC20", VA = "0x27ACC20")]
	public void ResetRelicsEffect()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x27AC84C", Offset = "0x27AC84C", VA = "0x27AC84C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6D464", Offset = "0xE6D464")]
	public void ResetMonsterReander()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x27AD420", Offset = "0x27AD420", VA = "0x27AD420")]
	public MonsterHitTools()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x27AD4B8", Offset = "0x27AD4B8", VA = "0x27AD4B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D49C", Offset = "0xE6D49C")]
	private void <DoDie>b__33_0()
	{
	}
}
[Token(Token = "0x2000352")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55904", Offset = "0xE55904")]
public class UnitDelayTimeSuicide : MonoBehaviour
{
	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayTime;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isInit;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool isStart;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float runningDelayTime;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float runningTime;

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x236B1B0", Offset = "0x236B1B0", VA = "0x236B1B0")]
	public void Init()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x236B2D0", Offset = "0x236B2D0", VA = "0x236B2D0")]
	public void DoStart(int inputDelayTime = -1)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x236B38C", Offset = "0x236B38C", VA = "0x236B38C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x236B394", Offset = "0x236B394", VA = "0x236B394")]
	private void Update()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x236B3AC", Offset = "0x236B3AC", VA = "0x236B3AC")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x236B4A8", Offset = "0x236B4A8", VA = "0x236B4A8")]
	public UnitDelayTimeSuicide()
	{
	}
}
[Token(Token = "0x2000353")]
public class MonsterFlashLight : MonoBehaviour
{
	[Token(Token = "0x2000354")]
	public enum MonsterLightEventType
	{
		[Token(Token = "0x400144F")]
		Enter,
		[Token(Token = "0x4001450")]
		Stay,
		[Token(Token = "0x4001451")]
		Exit
	}

	[Token(Token = "0x2000355")]
	public struct RayData
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 direction;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x205C8C0", Offset = "0x205C8C0", VA = "0x205C8C0")]
		public RayData(Vector3 dir, float range, Vector3 pos)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x205C8EC", Offset = "0x205C8EC", VA = "0x205C8EC")]
		public RayData(float x, float y, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
		{
		}
	}

	[Token(Token = "0x2000356")]
	public class HitInfoList : List<RaycastHit>
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x205C05C", Offset = "0x205C05C", VA = "0x205C05C")]
		public HitInfoList()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x205C0D4", Offset = "0x205C0D4", VA = "0x205C0D4")]
		public HitInfoList(HitInfoList copy)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x205C2AC", Offset = "0x205C2AC", VA = "0x205C2AC")]
		public bool AddElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x205C620", Offset = "0x205C620", VA = "0x205C620")]
		public bool RemoveElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x205C6D8", Offset = "0x205C6D8", VA = "0x205C6D8")]
		public HitInfoList GetSubList(HitInfoList another)
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x205C374", Offset = "0x205C374", VA = "0x205C374")]
		public bool ExistElement(RaycastHit info, out RaycastHit result)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dampSpeed;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rangeOffset;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useMultipleRay;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE61030", Offset = "0xE61030")]
	public float sectionOfMultipleRay;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light flshLight;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxLightDistance;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HitInfoList InfoList;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RayData> rayDatas;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] xP;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] yP;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitInfoList Infolist2;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<MonsterFlashLight, RaycastHit, MonsterLightEventType> EventHandler;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distance;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JobHandle handle;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isDrawLine;

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x27A937C", Offset = "0x27A937C", VA = "0x27A937C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x27A93F4", Offset = "0x27A93F4", VA = "0x27A93F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x27A9A78", Offset = "0x27A9A78", VA = "0x27A9A78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x27A9B24", Offset = "0x27A9B24", VA = "0x27A9B24")]
	public void Switch(bool switchOn)
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x27A9418", Offset = "0x27A9418", VA = "0x27A9418")]
	private void ControlLightRange()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x27A95F4", Offset = "0x27A95F4", VA = "0x27A95F4")]
	private void DetectObject()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x27A9CA4", Offset = "0x27A9CA4", VA = "0x27A9CA4")]
	private void HandleEvent(HitInfoList current, int operate)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x27A9B44", Offset = "0x27A9B44", VA = "0x27A9B44")]
	private void UpdateRayDatas(float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x27AA16C", Offset = "0x27AA16C", VA = "0x27AA16C")]
	private void GetFullCircleRay(ref List<RayData> list, int[] xParams, int[] yParams, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x27AA29C", Offset = "0x27AA29C", VA = "0x27AA29C")]
	private void GetQuarterCircleRay(ref List<RayData> list, int xParam, int yParam, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x27AA444", Offset = "0x27AA444", VA = "0x27AA444")]
	public MonsterFlashLight()
	{
	}
}
[Token(Token = "0x2000357")]
public class MonsterWarning : MonoBehaviour
{
	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWarningActive;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ViewFieldRadius;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6106C", Offset = "0xE6106C")]
	public float ViewFieldAngle;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float AlertRadius;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WarnningRadius;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Start;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WarningTime;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsShowEditor;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> WarningActiveAct;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioEvent warningSoundAudio;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine warningSoundObj;

	[Token(Token = "0x170001C9")]
	public bool IsWarningActive
	{
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x2655EC0", Offset = "0x2655EC0", VA = "0x2655EC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x2655EC8", Offset = "0x2655EC8", VA = "0x2655EC8")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x26560E4", Offset = "0x26560E4", VA = "0x26560E4")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x26560D8", Offset = "0x26560D8", VA = "0x26560D8")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x26562CC", Offset = "0x26562CC", VA = "0x26562CC")]
	private bool CaculateAlert(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x26563E0", Offset = "0x26563E0", VA = "0x26563E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x26564B4", Offset = "0x26564B4", VA = "0x26564B4")]
	private void CheckAlert()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x26560CC", Offset = "0x26560CC", VA = "0x26560CC")]
	public void ResetActiveAlert()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x26566A0", Offset = "0x26566A0", VA = "0x26566A0")]
	private void ActiveAlertSelfAndOther()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x2656880", Offset = "0x2656880", VA = "0x2656880")]
	public void ActiveAlert()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x26566A4", Offset = "0x26566A4", VA = "0x26566A4")]
	private void SetSound(bool isSet)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x2656970", Offset = "0x2656970", VA = "0x2656970")]
	public void SetWarningActive(bool WarningActive)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x2656A5C", Offset = "0x2656A5C", VA = "0x2656A5C")]
	public bool CheckPlayerInRoom(WUnit Owner)
	{
		return default(bool);
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x2656B04", Offset = "0x2656B04", VA = "0x2656B04")]
	public void WeaponDoFire(WUnit unit)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x2656C30", Offset = "0x2656C30", VA = "0x2656C30")]
	private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x2656C60", Offset = "0x2656C60", VA = "0x2656C60")]
	public MonsterWarning()
	{
	}
}
[Token(Token = "0x2000358")]
public class BattleData
{
	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isStart;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _isLocalBattle;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool _isSingle;

	[Token(Token = "0x170001CA")]
	public bool isStart
	{
		[Token(Token = "0x600120E")]
		[Address(RVA = "0x29053E0", Offset = "0x29053E0", VA = "0x29053E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600120F")]
		[Address(RVA = "0x29053E8", Offset = "0x29053E8", VA = "0x29053E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public bool isLocalBattle
	{
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x29053F4", Offset = "0x29053F4", VA = "0x29053F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x29053FC", Offset = "0x29053FC", VA = "0x29053FC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public bool isSingle
	{
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x2905408", Offset = "0x2905408", VA = "0x2905408")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001213")]
		[Address(RVA = "0x2905410", Offset = "0x2905410", VA = "0x2905410")]
		private set
		{
		}
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x290541C", Offset = "0x290541C", VA = "0x290541C")]
	public static BattleData CreateBattleData()
	{
		return null;
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x290548C", Offset = "0x290548C", VA = "0x290548C")]
	public BattleData()
	{
	}
}
[Token(Token = "0x2000359")]
public class BattleResultData
{
	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long roomId;

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x2905660", Offset = "0x2905660", VA = "0x2905660")]
	public BattleResultData()
	{
	}
}
[Token(Token = "0x200035A")]
public class BattleRoomData
{
	[Token(Token = "0x6001217")]
	[Address(RVA = "0x2905668", Offset = "0x2905668", VA = "0x2905668")]
	public BattleRoomData()
	{
	}
}
[Token(Token = "0x200035B")]
public class HitResultData
{
	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int attackerId;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hurterId;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int curHP;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hitPoint;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 hitDir;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int healValue;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_Attack_type atkType;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int weaponId;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public e_HitEffect_type atkEffectType;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool hitHead;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool criticalStrike;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public e_BodyParts bodyParts;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int interruptedBodyId;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int interruptedBodyStatus;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int interruptedBodyHp;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int bodyPartId;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitForce;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int killForce;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int status;

	[Token(Token = "0x400147A")]
	private const int status_Hit = 1;

	[Token(Token = "0x400147B")]
	private const int status_Die = 2;

	[Token(Token = "0x400147C")]
	private const int status_BodyPartBreak = 4;

	[Token(Token = "0x400147D")]
	private const int status_BodyPartInterrupt = 8;

	[Token(Token = "0x170001CD")]
	public bool isHit
	{
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x25282C4", Offset = "0x25282C4", VA = "0x25282C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x2528330", Offset = "0x2528330", VA = "0x2528330")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public bool isDie
	{
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x25283AC", Offset = "0x25283AC", VA = "0x25283AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x2528418", Offset = "0x2528418", VA = "0x2528418")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public bool isBodyPartBreak
	{
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x2528494", Offset = "0x2528494", VA = "0x2528494")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x2528500", Offset = "0x2528500", VA = "0x2528500")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public bool isBodyPartInterrupt
	{
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x252857C", Offset = "0x252857C", VA = "0x252857C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x25285E8", Offset = "0x25285E8", VA = "0x25285E8")]
		set
		{
		}
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x2528664", Offset = "0x2528664", VA = "0x2528664")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x25286D0", Offset = "0x25286D0", VA = "0x25286D0")]
	public static void DestoryHitResultData(HitResultData hitData)
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x2528774", Offset = "0x2528774", VA = "0x2528774")]
	public static HitResultData CreateHitResultData()
	{
		return null;
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x2528810", Offset = "0x2528810", VA = "0x2528810")]
	public static HitResultData CreateHitResultData(S2CHitDamage data)
	{
		return null;
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x2528AC4", Offset = "0x2528AC4", VA = "0x2528AC4")]
	public static HitResultData CreateHitResultData(C2SHitDamage data)
	{
		return null;
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x2528DA8", Offset = "0x2528DA8", VA = "0x2528DA8")]
	public HitResultData()
	{
	}
}
[Token(Token = "0x200035C")]
public class LobbyOperationResultData
{
	[Token(Token = "0x400147E")]
	public const int operation_PlayerStyle = 1;

	[Token(Token = "0x400147F")]
	public const int operation_WeaponType = 2;

	[Token(Token = "0x4001480")]
	public const int operation_JoinGame = 4;

	[Token(Token = "0x4001481")]
	public const int operation_GroupType = 8;

	[Token(Token = "0x4001482")]
	private const int operation_Controller = 16;

	[Token(Token = "0x4001483")]
	public const int operation_AcquisitionWeaponTypeRight = 32;

	[Token(Token = "0x4001484")]
	public const int operation_AcquisitionWeaponTypeLeft = 64;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int OperationType;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int OperationValue;

	[Token(Token = "0x170001D1")]
	public bool isPlayerStyle
	{
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x24D7084", Offset = "0x24D7084", VA = "0x24D7084")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x24D70F0", Offset = "0x24D70F0", VA = "0x24D70F0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public bool isWeaponType
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x24D716C", Offset = "0x24D716C", VA = "0x24D716C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x24D71D8", Offset = "0x24D71D8", VA = "0x24D71D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public bool isAcquisitionWeaponTypeRight
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x24D7254", Offset = "0x24D7254", VA = "0x24D7254")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x24D72C0", Offset = "0x24D72C0", VA = "0x24D72C0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public bool isAcquisitionWeaponTypeLeft
	{
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x24D733C", Offset = "0x24D733C", VA = "0x24D733C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x24D73A8", Offset = "0x24D73A8", VA = "0x24D73A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public bool isJoinGame
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x24D7424", Offset = "0x24D7424", VA = "0x24D7424")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x24D7490", Offset = "0x24D7490", VA = "0x24D7490")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public bool isGroupType
	{
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x24D750C", Offset = "0x24D750C", VA = "0x24D750C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x24D7578", Offset = "0x24D7578", VA = "0x24D7578")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public bool isController
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x24D75F4", Offset = "0x24D75F4", VA = "0x24D75F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x24D7660", Offset = "0x24D7660", VA = "0x24D7660")]
		set
		{
		}
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x24D76DC", Offset = "0x24D76DC", VA = "0x24D76DC")]
	public e_Player_Style GetOperationPlayerStyle()
	{
		return default(e_Player_Style);
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x24D7770", Offset = "0x24D7770", VA = "0x24D7770")]
	public bool IsRightWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x24D7810", Offset = "0x24D7810", VA = "0x24D7810")]
	public e_weapon_group GetOperationWeaponType()
	{
		return default(e_weapon_group);
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x24D78A4", Offset = "0x24D78A4", VA = "0x24D78A4")]
	public int GetOperationAcquisitionWeaponType()
	{
		return default(int);
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x24D78AC", Offset = "0x24D78AC", VA = "0x24D78AC")]
	public e_weapon_group GetOperationAcquisitionWeaponGroup()
	{
		return default(e_weapon_group);
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x24D7940", Offset = "0x24D7940", VA = "0x24D7940")]
	public bool GetOperationJoinGameStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x24D7A10", Offset = "0x24D7A10", VA = "0x24D7A10")]
	public e_group_type GetOperationGroupType()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x24D7AA4", Offset = "0x24D7AA4", VA = "0x24D7AA4")]
	public static LobbyOperationResultData CreateResultData(S2CLobbyOperationNotify data)
	{
		return null;
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x24D7B30", Offset = "0x24D7B30", VA = "0x24D7B30")]
	public LobbyOperationResultData()
	{
	}
}
[Token(Token = "0x200035D")]
public class UnitResultData
{
	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int objId;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnitResultDataType operationType;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int operationValue_Int;

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x236AD88", Offset = "0x236AD88", VA = "0x236AD88")]
	public int GetHP()
	{
		return default(int);
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x236AE8C", Offset = "0x236AE8C", VA = "0x236AE8C")]
	public int GetIntegral()
	{
		return default(int);
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x236AF90", Offset = "0x236AF90", VA = "0x236AF90")]
	public int GetEnergy()
	{
		return default(int);
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x2370504", Offset = "0x2370504", VA = "0x2370504")]
	public int GetBulletDamage()
	{
		return default(int);
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x2370608", Offset = "0x2370608", VA = "0x2370608")]
	public int GetMagazineCapacity()
	{
		return default(int);
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x237070C", Offset = "0x237070C", VA = "0x237070C")]
	public int GetBlindSideShot()
	{
		return default(int);
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x2370810", Offset = "0x2370810", VA = "0x2370810")]
	public int GetCarryingAmmunition()
	{
		return default(int);
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x2370914", Offset = "0x2370914", VA = "0x2370914")]
	public int GetChangeAmmunitionTechnique()
	{
		return default(int);
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x2370A18", Offset = "0x2370A18", VA = "0x2370A18")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x236AA9C", Offset = "0x236AA9C", VA = "0x236AA9C")]
	public static UnitResultData CreateResultData()
	{
		return null;
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x236A9F8", Offset = "0x236A9F8", VA = "0x236A9F8")]
	public static void DestoryResultData(UnitResultData data)
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x236AD20", Offset = "0x236AD20", VA = "0x236AD20")]
	public static UnitResultData CreateResultData(UnitData data)
	{
		return null;
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x2370A24", Offset = "0x2370A24", VA = "0x2370A24")]
	public UnitResultData()
	{
	}
}
[Token(Token = "0x200035E")]
public class MsgHandler : Singleton<MsgHandler>
{
	[Serializable]
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55964", Offset = "0xE55964")]
	private sealed class <>c
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BytesPackage, BytesPackage> <>9__7_0;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<BytesPackage, BytesPackage> <>9__7_1;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x205CE60", Offset = "0x205CE60", VA = "0x205CE60")]
		public <>c()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x205CE68", Offset = "0x205CE68", VA = "0x205CE68")]
		internal BytesPackage <Init>b__7_0(BytesPackage input)
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x205CE78", Offset = "0x205CE78", VA = "0x205CE78")]
		internal BytesPackage <Init>b__7_1(BytesPackage input)
		{
			return null;
		}
	}

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IMessageHandle mClientHandle;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IMessageHandle mHostHandle;

	[Token(Token = "0x400148C")]
	private const float RECONNTION_INTERVAL = 1f;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61088", Offset = "0xE61088")]
	private bool <isInit>k__BackingField;

	[Token(Token = "0x170001D8")]
	public bool isInit
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0x265E3F8", Offset = "0x265E3F8", VA = "0x265E3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D4AC", Offset = "0xE6D4AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600124B")]
		[Address(RVA = "0x265E400", Offset = "0x265E400", VA = "0x265E400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D4BC", Offset = "0xE6D4BC")]
		set
		{
		}
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x265E40C", Offset = "0x265E40C", VA = "0x265E40C")]
	public void Init()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x265F500", Offset = "0x265F500", VA = "0x265F500")]
	public void UnInit()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x265F7A4", Offset = "0x265F7A4", VA = "0x265F7A4")]
	public void Update()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x265F958", Offset = "0x265F958", VA = "0x265F958")]
	public MsgHandler()
	{
	}
}
[Token(Token = "0x2000360")]
public class ClientHandleMessage : IMessageHandle
{
	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, dReceiveMessageHandle> mProtocalDic;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] iconBytes;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iconBytesTempIndex;

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x266BC70", Offset = "0x266BC70", VA = "0x266BC70")]
	public ClientHandleMessage()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x266CADC", Offset = "0x266CADC", VA = "0x266CADC", Slot = "4")]
	public void Process(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x266CC00", Offset = "0x266CC00", VA = "0x266CC00")]
	public ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x266CC54", Offset = "0x266CC54", VA = "0x266CC54")]
	private void HandleConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x266D454", Offset = "0x266D454", VA = "0x266D454")]
	private void HandlePlayerEnterNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x266DC14", Offset = "0x266DC14", VA = "0x266DC14")]
	private void HandleDisConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x266DF54", Offset = "0x266DF54", VA = "0x266DF54")]
	private void HandlePlayerQuitNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x266E214", Offset = "0x266E214", VA = "0x266E214")]
	private void HandleSyncPlayerGlobalInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x266E8DC", Offset = "0x266E8DC", VA = "0x266E8DC")]
	private void HandlePlayerReviveNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x266EAF4", Offset = "0x266EAF4", VA = "0x266EAF4")]
	private void HandleUnitDataNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x266EC60", Offset = "0x266EC60", VA = "0x266EC60")]
	private void HandleFireBulletTrigger(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x266EDF8", Offset = "0x266EDF8", VA = "0x266EDF8")]
	private void HandleFireBulletCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x266F0CC", Offset = "0x266F0CC", VA = "0x266F0CC")]
	private void HandleReloadMagazineNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x266F228", Offset = "0x266F228", VA = "0x266F228")]
	private void HandleReloadBullet(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x266F3C0", Offset = "0x266F3C0", VA = "0x266F3C0")]
	private void HandleNpcCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x266F7F0", Offset = "0x266F7F0", VA = "0x266F7F0")]
	private void HandleNpcSingleCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x266FB2C", Offset = "0x266FB2C", VA = "0x266FB2C")]
	private void HandleMonsterCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x266FF54", Offset = "0x266FF54", VA = "0x266FF54")]
	private void HandleMonsterAnimationSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x2670198", Offset = "0x2670198", VA = "0x2670198")]
	private void HandleMonsterAniParameterSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x2670544", Offset = "0x2670544", VA = "0x2670544")]
	private void HandleUnitInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x267099C", Offset = "0x267099C", VA = "0x267099C")]
	private void HandleMonsterBulletCretateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x2670C44", Offset = "0x2670C44", VA = "0x2670C44")]
	private void HandleMonsterInterruptStateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x2670DFC", Offset = "0x2670DFC", VA = "0x2670DFC")]
	private void HandleHitDamage(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x2670E80", Offset = "0x2670E80", VA = "0x2670E80")]
	private void HandleCutScenesNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x267103C", Offset = "0x267103C", VA = "0x267103C")]
	private void HandleBattleStatisticalResultsNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x2671160", Offset = "0x2671160", VA = "0x2671160")]
	private void HandleLobbyGameStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x26717E0", Offset = "0x26717E0", VA = "0x26717E0")]
	private void HandleLobbyOperationNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x26729B0", Offset = "0x26729B0", VA = "0x26729B0")]
	private void HandleLobbyPlayerNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x2672D20", Offset = "0x2672D20", VA = "0x2672D20")]
	private void HandleLobbyPlayerIconNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x2673614", Offset = "0x2673614", VA = "0x2673614")]
	private void HandleLobbyTeamNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x267379C", Offset = "0x267379C", VA = "0x267379C")]
	private void HandlePlayAmbientEffectNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x2673870", Offset = "0x2673870", VA = "0x2673870")]
	private void HandleGameRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x2673A40", Offset = "0x2673A40", VA = "0x2673A40")]
	private void HandleSetLiveStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x2673B40", Offset = "0x2673B40", VA = "0x2673B40")]
	private void HandleGearStatusInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x2673E04", Offset = "0x2673E04", VA = "0x2673E04")]
	private void HandleEffectStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x2674D60", Offset = "0x2674D60", VA = "0x2674D60")]
	private void HandleRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x2674EAC", Offset = "0x2674EAC", VA = "0x2674EAC")]
	private void HandleSyncAimIKInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x26750DC", Offset = "0x26750DC", VA = "0x26750DC")]
	private void HandleSyncUpdateAimIKInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x2675350", Offset = "0x2675350", VA = "0x2675350")]
	private void HandleProduceDropItemNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x267555C", Offset = "0x267555C", VA = "0x267555C")]
	private void HandleTriggerDropItem(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x2675630", Offset = "0x2675630", VA = "0x2675630")]
	private void HandleDestoryDropItemNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x26756F0", Offset = "0x26756F0", VA = "0x26756F0")]
	private void HandleShowTimeCtrlEffect(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x26758F4", Offset = "0x26758F4", VA = "0x26758F4")]
	private void HandleTimeCtrlEnable(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x2675B4C", Offset = "0x2675B4C", VA = "0x2675B4C")]
	private void HandleAudioPlay(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x2675D74", Offset = "0x2675D74", VA = "0x2675D74")]
	private void HandleCurrencyotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x2675F1C", Offset = "0x2675F1C", VA = "0x2675F1C")]
	private void HandleEnterRoomStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x2675F9C", Offset = "0x2675F9C", VA = "0x2675F9C")]
	private void HandleAreaCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x2677DB0", Offset = "0x2677DB0", VA = "0x2677DB0")]
	private void HandleInteractStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x2678294", Offset = "0x2678294", VA = "0x2678294")]
	private void HandleInteractPhysicalInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x26786A4", Offset = "0x26786A4", VA = "0x26786A4")]
	private void HandleWeaponBulletCountNotify(VRNetLib.MessagePackage package)
	{
	}
}
[Token(Token = "0x2000361")]
public class ClientSendMessage
{
	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FlatBufferBuilder mBuilder;

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x26787CC", Offset = "0x26787CC", VA = "0x26787CC")]
	private static void Send(NetMessageType.CmdCode cmdType, object data, bool isReliable = true)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x267886C", Offset = "0x267886C", VA = "0x267886C")]
	public static void SendConnectToHost()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x2678DE4", Offset = "0x2678DE4", VA = "0x2678DE4")]
	public static void SendDisConnectToHost()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x2678F18", Offset = "0x2678F18", VA = "0x2678F18")]
	public static void SendSyncPlayerGlobalInfo(bool IsSyncLocal, bool isSyncPlayer, Vector3 playerPos, Quaternion playerRotate, bool isSyncGun_L, Vector3 GunPos_L, Quaternion GunRotate_L, Vector3 GunForward_L, bool isSyncGun_R, Vector3 GunPos_R, Quaternion GunRotate_R, Vector3 GunForward_R, bool isSyncHead, Vector3 VRHeadPos, Quaternion VRHeadRotate, Vector3 VRHeadPos_Raw, Quaternion VRHeadRotate_Raw)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x2679728", Offset = "0x2679728", VA = "0x2679728")]
	public static void SendC2SFireBulletTrigger(int objId, int weaponId, bool isEffectBullet)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x2679854", Offset = "0x2679854", VA = "0x2679854")]
	public static void SendC2SFireBulletCreate(int objId, int weaponId, Vector3 pos, Quaternion rotate, bool isEffectBullet = false)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x2679A3C", Offset = "0x2679A3C", VA = "0x2679A3C")]
	public static void SendC2SReloadBullet(int objId, int weaponId, bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x2679B68", Offset = "0x2679B68", VA = "0x2679B68")]
	public static void SendC2SRightWeaponBullet(int objId, int MagazineCount, int CurBulletCount)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x2679C94", Offset = "0x2679C94", VA = "0x2679C94")]
	public static void SendC2SPlayerRevive(int playerObjId)
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x2679D78", Offset = "0x2679D78", VA = "0x2679D78")]
	public static void SendC2SFireHitDamage(HitResultData hitData)
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x267A008", Offset = "0x267A008", VA = "0x267A008")]
	public static void SendLiveState(int ownerId, bool state)
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x267A0FC", Offset = "0x267A0FC", VA = "0x267A0FC")]
	public static void SendReqSyncGearStatusInfo(e_group_type group, int id)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x267A214", Offset = "0x267A214", VA = "0x267A214")]
	public static void SendC2SShowTimeCtrlEffect(int objId)
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x267A394", Offset = "0x267A394", VA = "0x267A394")]
	public static void SendC2SSTimeCtrlEnable(int objId, int weaponId, Vector3 pos, bool isEnable)
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x2678D64", Offset = "0x2678D64", VA = "0x2678D64")]
	private static FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x267A530", Offset = "0x267A530", VA = "0x267A530")]
	public static void SendTriggreDropItemNotify(int itemId, int unitId)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x267A5F8", Offset = "0x267A5F8", VA = "0x267A5F8")]
	public static void SendC2SWeaponChange(int unitId, int weaponID, bool isRight)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x267A6D4", Offset = "0x267A6D4", VA = "0x267A6D4")]
	public static void SendC2SAudioPlay(int AudioEvent, Vector3 Pos, Quaternion Rot, bool NeedDestroy = true, bool IsUseObstruction = true)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x267A848", Offset = "0x267A848", VA = "0x267A848")]
	public static void SendC2SNPCSingleCreateNotify(HostServer.MonsterSpawnInfo npcData)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x267A980", Offset = "0x267A980", VA = "0x267A980")]
	public static void SendC2SEnterRoomSceneStatus(int uId)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x267AA2C", Offset = "0x267AA2C", VA = "0x267AA2C")]
	public static void SendC2SInteractStatus(int interactorId, int interactableId, int statusType, int status)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x267AB24", Offset = "0x267AB24", VA = "0x267AB24")]
	public ClientSendMessage()
	{
	}
}
[Token(Token = "0x2000362")]
public class ClientServer : Singleton<ClientServer>
{
	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, PlayerData> playerIdHash;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, TeamData> teamInfo;

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x21B9A68", Offset = "0x21B9A68", VA = "0x21B9A68")]
	public void RegisterPlayerData(PlayerData data)
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x21B9C04", Offset = "0x21B9C04", VA = "0x21B9C04")]
	public void UnRegisterPlayerData(int playerId)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x21B9C88", Offset = "0x21B9C88", VA = "0x21B9C88")]
	public void UnRegisterAllPlayerData()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x21B9BA0", Offset = "0x21B9BA0", VA = "0x21B9BA0")]
	public bool CheckPlayerData(int playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x21B9CDC", Offset = "0x21B9CDC", VA = "0x21B9CDC")]
	public PlayerData GetPlayerData(int playerId)
	{
		return null;
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x21B9D50", Offset = "0x21B9D50", VA = "0x21B9D50")]
	public PlayerData GetPlayerDataBySite(int site)
	{
		return null;
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x21B9E98", Offset = "0x21B9E98", VA = "0x21B9E98")]
	public List<PlayerData> GetAllJoinData()
	{
		return null;
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x21BA06C", Offset = "0x21BA06C", VA = "0x21BA06C")]
	public void SetTeamInfo(int teamId, string teamName)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x21BA160", Offset = "0x21BA160", VA = "0x21BA160")]
	public string GetTeamName(e_group_type group_Type)
	{
		return null;
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x21BA420", Offset = "0x21BA420", VA = "0x21BA420")]
	public string GetTeamName(int playerId)
	{
		return null;
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x21BA2E4", Offset = "0x21BA2E4", VA = "0x21BA2E4")]
	public string GetTeamName(int teamId, e_group_type group_Type)
	{
		return null;
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x21BA610", Offset = "0x21BA610", VA = "0x21BA610")]
	public bool HaveLoginPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x21BA758", Offset = "0x21BA758", VA = "0x21BA758")]
	public ClientServer()
	{
	}
}
[Token(Token = "0x2000363")]
public class FlatbuffersUtils : IProtocolUtils
{
	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61098", Offset = "0xE61098")]
	private readonly ByteBuffer <ByteBuffer>k__BackingField;

	[Token(Token = "0x170001D9")]
	public ByteBuffer ByteBuffer
	{
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x2240D9C", Offset = "0x2240D9C", VA = "0x2240D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D4CC", Offset = "0xE6D4CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x2240DA4", Offset = "0x2240DA4", VA = "0x2240DA4", Slot = "4")]
	public BytesPackage Serialize(object protoData)
	{
		return null;
	}

	[Token(Token = "0x60012AC")]
	public T DeSerialize<T>(BytesPackage bytes)
	{
		return (T)null;
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x2240E8C", Offset = "0x2240E8C", VA = "0x2240E8C")]
	public FlatbuffersUtils()
	{
	}
}
[Token(Token = "0x2000364")]
public class NetMessageType
{
	[Token(Token = "0x2000365")]
	public enum CmdCode
	{
		[Token(Token = "0x4001499")]
		ConnectToHost = 1,
		[Token(Token = "0x400149A")]
		PlayerEnterNotify = 2,
		[Token(Token = "0x400149B")]
		DisconnectToHost = 3,
		[Token(Token = "0x400149C")]
		PlayerQuitNotify = 4,
		[Token(Token = "0x400149D")]
		GameRoomStatusNotify = 5,
		[Token(Token = "0x400149E")]
		SyncPlayerGlobalInfo = 8,
		[Token(Token = "0x400149F")]
		FrieBulletTrigger = 10,
		[Token(Token = "0x40014A0")]
		FireBulletCreate = 11,
		[Token(Token = "0x40014A1")]
		ReloadBullet = 13,
		[Token(Token = "0x40014A2")]
		UnitDataNotify = 19,
		[Token(Token = "0x40014A3")]
		MonsterCreateNotify = 20,
		[Token(Token = "0x40014A4")]
		MonsterAnimationSyncNotify = 21,
		[Token(Token = "0x40014A5")]
		UnitInfoSyncNotify = 22,
		[Token(Token = "0x40014A6")]
		HitDamage = 23,
		[Token(Token = "0x40014A7")]
		PlayerRevive = 24,
		[Token(Token = "0x40014A8")]
		CutScenesNotify = 25,
		[Token(Token = "0x40014A9")]
		MonsterBulletCretateNotify = 26,
		[Token(Token = "0x40014AA")]
		NpcCreateNotify = 28,
		[Token(Token = "0x40014AB")]
		EffectStatusNotify = 29,
		[Token(Token = "0x40014AC")]
		SyncAimIKInfoNotify = 30,
		[Token(Token = "0x40014AD")]
		SyncUpdateAimIKInfoNotify = 31,
		[Token(Token = "0x40014AE")]
		MonsterInterruptedStateNotify = 32,
		[Token(Token = "0x40014AF")]
		MonsterAniParameterNotify = 33,
		[Token(Token = "0x40014B0")]
		RoomStatusNotify = 35,
		[Token(Token = "0x40014B1")]
		RoleRoomStatusNotify = 36,
		[Token(Token = "0x40014B2")]
		TimeCtrlEffect = 37,
		[Token(Token = "0x40014B3")]
		TimeCtrlEnable = 38,
		[Token(Token = "0x40014B4")]
		ProduceDropItemNotify = 39,
		[Token(Token = "0x40014B5")]
		TriggerDropItem = 40,
		[Token(Token = "0x40014B6")]
		DestoryDropItemNotify = 41,
		[Token(Token = "0x40014B7")]
		C2SWeaponReset = 42,
		[Token(Token = "0x40014B8")]
		AudioPlayNotify = 43,
		[Token(Token = "0x40014B9")]
		CurrencyNotify = 44,
		[Token(Token = "0x40014BA")]
		NpcSingleCreateNotify = 45,
		[Token(Token = "0x40014BB")]
		WeaponBulletCountNotify = 46,
		[Token(Token = "0x40014BC")]
		InteractPhysicalInfo = 47,
		[Token(Token = "0x40014BD")]
		InteractStatus = 48,
		[Token(Token = "0x40014BE")]
		BattleStatisticalResultsNotify = 100,
		[Token(Token = "0x40014BF")]
		PlayAmbientEffectNotify = 101,
		[Token(Token = "0x40014C0")]
		LobbyOperationNotify = 1000,
		[Token(Token = "0x40014C1")]
		LobbyGameStatusNotify = 1001,
		[Token(Token = "0x40014C2")]
		LobbyPlayerNotify = 1002,
		[Token(Token = "0x40014C3")]
		LobbyPlayerIconNotify = 1004,
		[Token(Token = "0x40014C4")]
		LobbyTeamNotify = 1003,
		[Token(Token = "0x40014C5")]
		SetLiveStatus = 2000,
		[Token(Token = "0x40014C6")]
		GearStatusInfo = 2050,
		[Token(Token = "0x40014C7")]
		ReqSyncGearStatusInfo = 2051,
		[Token(Token = "0x40014C8")]
		PlayerTeleport = 3000,
		[Token(Token = "0x40014C9")]
		LoadBattleRoom = 3001,
		[Token(Token = "0x40014CA")]
		EnterRoomSceneStatus = 3500,
		[Token(Token = "0x40014CB")]
		AreaCreateNotify = 3600
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x2302330", Offset = "0x2302330", VA = "0x2302330")]
	public NetMessageType()
	{
	}
}
[Token(Token = "0x2000366")]
public class NetworkStatusHandle
{
	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float reconnectHostInterval;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float reconnectTimer;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isConnectHost;

	[Token(Token = "0x170001DA")]
	public bool isConnectHost
	{
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x2302338", Offset = "0x2302338", VA = "0x2302338")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x2302340", Offset = "0x2302340", VA = "0x2302340")]
		set
		{
		}
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x2302350", Offset = "0x2302350", VA = "0x2302350")]
	public void Init(float _interval)
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x2302360", Offset = "0x2302360", VA = "0x2302360")]
	private void ReconnectProcessor(float deltaTime)
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x23023F0", Offset = "0x23023F0", VA = "0x23023F0")]
	public void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x23023F4", Offset = "0x23023F4", VA = "0x23023F4")]
	public NetworkStatusHandle()
	{
	}
}
[Token(Token = "0x2000367")]
public class PlayerData
{
	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE610A8", Offset = "0xE610A8")]
	private int <SessionId>k__BackingField;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE610B8", Offset = "0xE610B8")]
	private int <PlayerId>k__BackingField;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE610C8", Offset = "0xE610C8")]
	private string <MechineName>k__BackingField;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE610D8", Offset = "0xE610D8")]
	private string <MechineId>k__BackingField;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE610E8", Offset = "0xE610E8")]
	private bool <JoinGameStatus>k__BackingField;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE610F8", Offset = "0xE610F8")]
	private e_group_type <GroupId>k__BackingField;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61108", Offset = "0xE61108")]
	private e_Player_Style <PlayerStyle>k__BackingField;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61118", Offset = "0xE61118")]
	private e_weapon_group <WeaponType>k__BackingField;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61128", Offset = "0xE61128")]
	private int <Site>k__BackingField;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61138", Offset = "0xE61138")]
	private bool <IsAI>k__BackingField;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61148", Offset = "0xE61148")]
	private bool <IsOnlyServer>k__BackingField;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61158", Offset = "0xE61158")]
	private bool <IsLive>k__BackingField;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61168", Offset = "0xE61168")]
	private string <LoginName>k__BackingField;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61178", Offset = "0xE61178")]
	private string <LoginIcon>k__BackingField;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61188", Offset = "0xE61188")]
	private bool <IsLoginSuccess>k__BackingField;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61198", Offset = "0xE61198")]
	private int <TeamId>k__BackingField;

	[Token(Token = "0x170001DB")]
	public int SessionId
	{
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2310FD0", Offset = "0x2310FD0", VA = "0x2310FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D4DC", Offset = "0xE6D4DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x2310FD8", Offset = "0x2310FD8", VA = "0x2310FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D4EC", Offset = "0xE6D4EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	public int PlayerId
	{
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x2310FE0", Offset = "0x2310FE0", VA = "0x2310FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D4FC", Offset = "0xE6D4FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x2310FE8", Offset = "0x2310FE8", VA = "0x2310FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D50C", Offset = "0xE6D50C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public string MechineName
	{
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x2310FF0", Offset = "0x2310FF0", VA = "0x2310FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D51C", Offset = "0xE6D51C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x2310FF8", Offset = "0x2310FF8", VA = "0x2310FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D52C", Offset = "0xE6D52C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public string MechineId
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x2311000", Offset = "0x2311000", VA = "0x2311000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D53C", Offset = "0xE6D53C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x2311008", Offset = "0x2311008", VA = "0x2311008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D54C", Offset = "0xE6D54C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public bool JoinGameStatus
	{
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x2311010", Offset = "0x2311010", VA = "0x2311010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D55C", Offset = "0xE6D55C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x2311018", Offset = "0x2311018", VA = "0x2311018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D56C", Offset = "0xE6D56C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public e_group_type GroupId
	{
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x2311024", Offset = "0x2311024", VA = "0x2311024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D57C", Offset = "0xE6D57C")]
		get
		{
			return default(e_group_type);
		}
		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x231102C", Offset = "0x231102C", VA = "0x231102C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D58C", Offset = "0xE6D58C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public e_Player_Style PlayerStyle
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x2311034", Offset = "0x2311034", VA = "0x2311034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D59C", Offset = "0xE6D59C")]
		get
		{
			return default(e_Player_Style);
		}
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x231103C", Offset = "0x231103C", VA = "0x231103C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D5AC", Offset = "0xE6D5AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public e_weapon_group WeaponType
	{
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x2311044", Offset = "0x2311044", VA = "0x2311044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D5BC", Offset = "0xE6D5BC")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x231104C", Offset = "0x231104C", VA = "0x231104C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D5CC", Offset = "0xE6D5CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public int Site
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2311054", Offset = "0x2311054", VA = "0x2311054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D5DC", Offset = "0xE6D5DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x231105C", Offset = "0x231105C", VA = "0x231105C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D5EC", Offset = "0xE6D5EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public bool IsAI
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x2311064", Offset = "0x2311064", VA = "0x2311064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D5FC", Offset = "0xE6D5FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x231106C", Offset = "0x231106C", VA = "0x231106C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D60C", Offset = "0xE6D60C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public bool IsOnlyServer
	{
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x2311078", Offset = "0x2311078", VA = "0x2311078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D61C", Offset = "0xE6D61C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x2311080", Offset = "0x2311080", VA = "0x2311080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D62C", Offset = "0xE6D62C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public bool IsLive
	{
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x231108C", Offset = "0x231108C", VA = "0x231108C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D63C", Offset = "0xE6D63C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x2311094", Offset = "0x2311094", VA = "0x2311094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D64C", Offset = "0xE6D64C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public string LoginName
	{
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x23110A0", Offset = "0x23110A0", VA = "0x23110A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D65C", Offset = "0xE6D65C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x23110A8", Offset = "0x23110A8", VA = "0x23110A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D66C", Offset = "0xE6D66C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public string LoginIcon
	{
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x23110B0", Offset = "0x23110B0", VA = "0x23110B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D67C", Offset = "0xE6D67C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x23110B8", Offset = "0x23110B8", VA = "0x23110B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D68C", Offset = "0xE6D68C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public bool IsLoginSuccess
	{
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x23110C0", Offset = "0x23110C0", VA = "0x23110C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D69C", Offset = "0xE6D69C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x23110C8", Offset = "0x23110C8", VA = "0x23110C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D6AC", Offset = "0xE6D6AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public string PlayerName
	{
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x2309794", Offset = "0x2309794", VA = "0x2309794")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EB")]
	public Sprite GetIcon
	{
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x23110D4", Offset = "0x23110D4", VA = "0x23110D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EC")]
	public int TeamId
	{
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x23111F0", Offset = "0x23111F0", VA = "0x23111F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D6BC", Offset = "0xE6D6BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x23111F8", Offset = "0x23111F8", VA = "0x23111F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D6CC", Offset = "0xE6D6CC")]
		private set
		{
		}
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x2311200", Offset = "0x2311200", VA = "0x2311200")]
	public PlayerData(int sessionid, int playerid, string mechinename, string mechineid, bool isJoinGame, e_group_type groupId, e_Player_Style style, e_weapon_group weapon, int site, bool isAI, bool isOnlyServer, bool isLive)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x23112D8", Offset = "0x23112D8", VA = "0x23112D8")]
	public void SetJoinStatus(bool status)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x23112E4", Offset = "0x23112E4", VA = "0x23112E4")]
	public void SetGroupId(e_group_type groupId)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x23112EC", Offset = "0x23112EC", VA = "0x23112EC")]
	public void SetPlayerStyle(e_Player_Style style)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x23112F4", Offset = "0x23112F4", VA = "0x23112F4")]
	public void SetWeaponGroup(e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x23112FC", Offset = "0x23112FC", VA = "0x23112FC")]
	public void SetLoginInfo(string name, string icon)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x2311358", Offset = "0x2311358", VA = "0x2311358")]
	public void SetLoginInfo_Name(string name)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x231139C", Offset = "0x231139C", VA = "0x231139C")]
	public void SetLoginInfo_Icon(string icon)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x23113A4", Offset = "0x23113A4", VA = "0x23113A4")]
	public void SetTeamId(int teamId)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x23113AC", Offset = "0x23113AC", VA = "0x23113AC")]
	public void SetNullLoginInfo()
	{
	}
}
[Token(Token = "0x2000368")]
public class TeamData
{
	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE611A8", Offset = "0xE611A8")]
	private int <TeamId>k__BackingField;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE611B8", Offset = "0xE611B8")]
	private string <Name>k__BackingField;

	[Token(Token = "0x170001ED")]
	public int TeamId
	{
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x2AB0EC4", Offset = "0x2AB0EC4", VA = "0x2AB0EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D6DC", Offset = "0xE6D6DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x2AB0ECC", Offset = "0x2AB0ECC", VA = "0x2AB0ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D6EC", Offset = "0xE6D6EC")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public string Name
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x2AB0ED4", Offset = "0x2AB0ED4", VA = "0x2AB0ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D6FC", Offset = "0xE6D6FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x2AB0EDC", Offset = "0x2AB0EDC", VA = "0x2AB0EDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D70C", Offset = "0xE6D70C")]
		set
		{
		}
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x2AB0EE4", Offset = "0x2AB0EE4", VA = "0x2AB0EE4")]
	public TeamData()
	{
	}
}
[Token(Token = "0x2000369")]
public class HostHandleMessage : IMessageHandle
{
	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] cullSessions;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlatBufferBuilder mBuilder;

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x2529428", Offset = "0x2529428", VA = "0x2529428", Slot = "4")]
	public void Process(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x252C6E0", Offset = "0x252C6E0", VA = "0x252C6E0")]
	private void SendTo(NetMessageType.CmdCode cmdType, int sessionId, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x252C790", Offset = "0x252C790", VA = "0x252C790")]
	private void SendToPlayer(NetMessageType.CmdCode cmdType, int playerId, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x252C8C4", Offset = "0x252C8C4", VA = "0x252C8C4")]
	private void Broadcast(NetMessageType.CmdCode cmdType, object data, int cullSessionId = 0, bool isReliable = false)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x252CA84", Offset = "0x252CA84", VA = "0x252CA84")]
	private void BroadcastAll(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x252CA90", Offset = "0x252CA90", VA = "0x252CA90")]
	private void BroadcastCullHost(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x252CA9C", Offset = "0x252CA9C", VA = "0x252CA9C")]
	public FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x252CAD0", Offset = "0x252CAD0", VA = "0x252CAD0")]
	public ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x2529724", Offset = "0x2529724", VA = "0x2529724")]
	private void ProcessConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x252A518", Offset = "0x252A518", VA = "0x252A518")]
	private void ProcessDisConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x252A688", Offset = "0x252A688", VA = "0x252A688")]
	private void ProcessSyncPlayerGlobalInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x252ACE0", Offset = "0x252ACE0", VA = "0x252ACE0")]
	private void ProcessFireBulletTrigger(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x252AE30", Offset = "0x252AE30", VA = "0x252AE30")]
	private void ProcessFireBulletCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x252B0C4", Offset = "0x252B0C4", VA = "0x252B0C4")]
	private void ProcessReloadBullet(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x252B258", Offset = "0x252B258", VA = "0x252B258")]
	private void ProcessHitDamage(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x252B3E4", Offset = "0x252B3E4", VA = "0x252B3E4")]
	private void ProcessPlayerRevive(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x252B520", Offset = "0x252B520", VA = "0x252B520")]
	private void ProcessSetLiveStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x252B69C", Offset = "0x252B69C", VA = "0x252B69C")]
	private void ProcessReqSyncGearStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x252B784", Offset = "0x252B784", VA = "0x252B784")]
	private void ProcessShowTimeCtrlEffect(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x252B91C", Offset = "0x252B91C", VA = "0x252B91C")]
	private void ProcessTimeCtrlEnable(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x252BBBC", Offset = "0x252BBBC", VA = "0x252BBBC")]
	private void ProcessTriggerDropItem(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x252BDFC", Offset = "0x252BDFC", VA = "0x252BDFC")]
	private void ProcessWeaponReset(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x252C53C", Offset = "0x252C53C", VA = "0x252C53C")]
	private void ProcessWeaponBulletCount(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x252BEF8", Offset = "0x252BEF8", VA = "0x252BEF8")]
	private void AudioPlay(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x252C0F0", Offset = "0x252C0F0", VA = "0x252C0F0")]
	private void NPCSingleCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x252C324", Offset = "0x252C324", VA = "0x252C324")]
	public void ProcessInteractStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x252C41C", Offset = "0x252C41C", VA = "0x252C41C")]
	private void EnterRoomSceneStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x252E248", Offset = "0x252E248", VA = "0x252E248")]
	public HostHandleMessage()
	{
	}
}
[Token(Token = "0x200036A")]
public class HostSendMessage
{
	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int splitStep;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, Offset<MonsterSpawnInfo>[]> tempMonsterCreateDic;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, Offset<NpcSpawnInfo>[]> tempNPCCreateDic;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<int, Offset<UnitTransform>[]> tempMonstersDic;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<int, Offset<UnitData>[]> tempDatasDic;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<int, Offset<UpdateAimIKInfoCell>[]> tempAimIKInfoCellsDic;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] cullSessions;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static FlatBufferBuilder mBuilder;

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x252E2EC", Offset = "0x252E2EC", VA = "0x252E2EC")]
	private static void SendTo(NetMessageType.CmdCode cmdType, int sessionId, object data, bool isSync = false)
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x252E39C", Offset = "0x252E39C", VA = "0x252E39C")]
	private static void Broadcast(NetMessageType.CmdCode cmdType, object data, int cullSessionId = 0, bool isReliable = false)
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x252E594", Offset = "0x252E594", VA = "0x252E594")]
	private static void BroadcastAll(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x252E610", Offset = "0x252E610", VA = "0x252E610")]
	private static void BroadcastCullHost(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x252E68C", Offset = "0x252E68C", VA = "0x252E68C")]
	private static FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x252E70C", Offset = "0x252E70C", VA = "0x252E70C")]
	private static ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x252E760", Offset = "0x252E760", VA = "0x252E760")]
	public static void BroadcastDisconnectToHost()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x252E80C", Offset = "0x252E80C", VA = "0x252E80C")]
	public static void BroadcastGameRoomStatusNotify(RoomStateAgent.eRoomState state)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x252EA24", Offset = "0x252EA24", VA = "0x252EA24")]
	public static void BroadcastMonsterCreateNotify(List<HostServer.MonsterSpawnInfo> monsterDatas)
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x252EE80", Offset = "0x252EE80", VA = "0x252EE80")]
	public static void BroadcastUnitInfoSyncNotify(List<HostServer.UnitTransform> list)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x252F2B0", Offset = "0x252F2B0", VA = "0x252F2B0")]
	public static void BroadcastMonsterAnimationSyncNotify(int objId, string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x252F37C", Offset = "0x252F37C", VA = "0x252F37C")]
	public static void BroadcastMonsterAniParameterSyncNotify(int objId, int index, bool isoving, float xValue, float yValue)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x252F440", Offset = "0x252F440", VA = "0x252F440")]
	public static void BroadcastMonsterBulletCretateNotify(int ownerID, Vector3 firePos, Quaternion fireRot, int bulletAssetID, int targetID, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x252F628", Offset = "0x252F628", VA = "0x252F628")]
	public static void BroadcastBulletMonsterCreateNotify(HostServer.MonsterSpawnInfo monsterData)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x252F848", Offset = "0x252F848", VA = "0x252F848")]
	public static void BroadcastMonsterInterruptStateNotify(int _unitId, int _interrtuptId, int _interrtuptState, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x252F9EC", Offset = "0x252F9EC", VA = "0x252F9EC")]
	public static void BroadcastHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x252DAE8", Offset = "0x252DAE8", VA = "0x252DAE8")]
	public static void BroadcastPlayerReviveNotify(int playerObjId)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x252FBFC", Offset = "0x252FBFC", VA = "0x252FBFC")]
	public static void BroadcastReloadMagazineNotify(int playerObjId)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x252FC00", Offset = "0x252FC00", VA = "0x252FC00")]
	public static void BroadcastUnitDataNotify(List<UnitResultData> list)
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x252FF80", Offset = "0x252FF80", VA = "0x252FF80")]
	public static void BroadcastCutScenesNotify(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x2530068", Offset = "0x2530068", VA = "0x2530068")]
	public static void BroadcastBattleStatisticalResults(string json)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x253010C", Offset = "0x253010C", VA = "0x253010C")]
	public static void BroadcastGameStatusNotify(e_GameStatusType gameStatus, bool status = false)
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x252DD34", Offset = "0x252DD34", VA = "0x252DD34")]
	public static void BroadcastLobbyOperationNotify(int playerObjId, LobbyOperationResultData operationData)
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x2530288", Offset = "0x2530288", VA = "0x2530288")]
	public static void BroadcastLobbyPlayerNotify(int playerId, int teamId, string name, string icon)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x2530664", Offset = "0x2530664", VA = "0x2530664")]
	public static void BroadcastLobbyTeamNotify(int teamId, string teamName)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x2530718", Offset = "0x2530718", VA = "0x2530718")]
	public static void BroadcastPlayAmbientEffectNotify(int eventId, int pointName)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x25307C0", Offset = "0x25307C0", VA = "0x25307C0")]
	public static void BroadcastNPCCreateNotify(List<HostServer.NpcSpawnInfo> npcDatas)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x2530A94", Offset = "0x2530A94", VA = "0x2530A94")]
	public static void BroadcastAGroupNPCCreateNotify(List<HostServer.MonsterSpawnInfo> npcDatas)
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x252E078", Offset = "0x252E078", VA = "0x252E078")]
	public static void BroadcastNPCSingleCreateNotify(HostServer.MonsterSpawnInfo npcData)
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x2530F00", Offset = "0x2530F00", VA = "0x2530F00")]
	public static void BroadcastGearStatusInfoSyncNotify(e_group_type group, int id, e_GearHandleStatus_type hStatusType, int prm1, int prm2, [Optional] Vector3 prmV1, [Optional] Quaternion rot, bool isCullHost = true)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x2531134", Offset = "0x2531134", VA = "0x2531134")]
	public static void SendToGearStatusInfoSync(int sessionId, e_group_type group, int id, e_GearHandleStatus_type hStatusType, int prm1, int prm2, [Optional] Vector3 prmV1)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x2525F4C", Offset = "0x2525F4C", VA = "0x2525F4C")]
	public static void BroadcastEffectStatusNotify(EffectStatus type, int playerId = -1, int value_i = 0, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x2526348", Offset = "0x2526348", VA = "0x2526348")]
	public static void BroadcastEffectStatusNotifyCullHost(EffectStatus type, int playerId = -1, int value_i = 0, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x25312C0", Offset = "0x25312C0", VA = "0x25312C0")]
	public static void BroadcastEffectStatusNotify(EffectStatus type, int playerId = -1, bool value_i = false, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x2531350", Offset = "0x2531350", VA = "0x2531350")]
	public static void BroadcastEffectStatusNotify_BackType(EffectStatus type, int playerId = -1, e_RoomCharacterDeath_Type backType = e_RoomCharacterDeath_Type.Nomal, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x25313E0", Offset = "0x25313E0", VA = "0x25313E0")]
	public static void BroadcastSyncAimIKInfoNotify(int objId, bool isStart, string aniState, Vector3 targetPos)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x253158C", Offset = "0x253158C", VA = "0x253158C")]
	public static void BroadcastUpdateAimIKInfoNotify(List<HostServer.UpdateAimIKInfoCell> list)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x252D66C", Offset = "0x252D66C", VA = "0x252D66C")]
	public static void BroadcastFireBulletTrigger(int objId, int weaponId, bool isEffectTrigger = false)
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x252D83C", Offset = "0x252D83C", VA = "0x252D83C")]
	public static void BroadcastFireBulletCreate(int objId, int weaponId, Vector3 pos, Quaternion rotate, bool isEffectBullet = false, int cullSession = -1)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x252DDDC", Offset = "0x252DDDC", VA = "0x252DDDC")]
	public static void BroadcastWeaponBulletCountNotify(int playerId, int MagazineCount, int CurBulletCount, bool isCullHost = false)
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x252DB7C", Offset = "0x252DB7C", VA = "0x252DB7C")]
	public static void BroadcastTimeCtrlEffect(int objId)
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x2531918", Offset = "0x2531918", VA = "0x2531918")]
	public static void BroadcastRoomStatusNotify(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6, bool isCullHost = false)
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x2532024", Offset = "0x2532024", VA = "0x2532024")]
	public static void BroadcastProduceDropItemNotify(int itemType, int itemId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x25321A8", Offset = "0x25321A8", VA = "0x25321A8")]
	public static void BroadcastDestoryDropItemNotify(int itemId)
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x252DEE0", Offset = "0x252DEE0", VA = "0x252DEE0")]
	public static void BroadcastAudioPlayItemNotify(int AudioEvent, Vector3 Pos, Quaternion Rot, bool NeedDestroy = true, bool IsUseObstruction = true)
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x2532254", Offset = "0x2532254", VA = "0x2532254")]
	public static void BroadcastTriggerDropItem(int DropId, int UnitId)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x252DC28", Offset = "0x252DC28", VA = "0x252DC28")]
	public static void BroadcastAllIntegralNotify(int unitId, int Integral, e_CurrencyType currencyType, sbyte Type, int valueA = -1)
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x25324D4", Offset = "0x25324D4", VA = "0x25324D4")]
	public static void BroadcastEnterRoomStatusNotifyCullHost()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x2532538", Offset = "0x2532538", VA = "0x2532538")]
	public static void BroadcastSingleCreatAreaNotify(int assetID, e_CreatType creatType, int ID, Vector3 Pos, Quaternion Rot, bool isCullHost = false)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x2532738", Offset = "0x2532738", VA = "0x2532738")]
	public static void BroadcastCreatAreasNotify(int assetID, e_CreatType creatType, List<CreatData> CreatDataList, bool isCullHost = false)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x2532A28", Offset = "0x2532A28", VA = "0x2532A28")]
	public static void BroadcastInteractStatusSyncNotify(int interactorId, int interactableId, int statusType, int status, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] XRInteractNormalInfo[] normalInfo, bool isCullHost = true)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x2532DF8", Offset = "0x2532DF8", VA = "0x2532DF8")]
	public static void BroadcastInteractPhysicalInfoSyncNotify(XRInteractRigidbodyInfo infos)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x25330D0", Offset = "0x25330D0", VA = "0x25330D0")]
	public HostSendMessage()
	{
	}
}
[Token(Token = "0x200036B")]
public class HostServer : Singleton<HostServer>
{
	[Token(Token = "0x200036C")]
	public struct MonsterSpawnInfo
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int databaseId;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int areaId;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int suicideDelayTime;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int spawnPoint;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 spawnPos;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion spawnRot;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpawnPointInfo spawnInfo;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<int> DropTypeList;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<int> DropRatioList;
	}

	[Token(Token = "0x200036D")]
	public struct NpcSpawnInfo
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int npcId;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int spawnPointId;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int groupId;
	}

	[Token(Token = "0x200036E")]
	public struct UnitTransform
	{
		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 pos;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion rot;
	}

	[Token(Token = "0x200036F")]
	public struct UpdateAimIKInfoCell
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 aimPos;
	}

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, PlayerData> playerSessionHash;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, PlayerData> playerIdHash;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, TeamData> teamInfo;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, int> sessionIdToPlayerIdHash;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HashSet<int> sessionHash;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> siteToPlayerIdHash;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE611C8", Offset = "0xE611C8")]
	private int[] <sessionArray>k__BackingField;

	[Token(Token = "0x170001EF")]
	public int[] sessionArray
	{
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x253332C", Offset = "0x253332C", VA = "0x253332C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D71C", Offset = "0xE6D71C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x2533334", Offset = "0x2533334", VA = "0x2533334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D72C", Offset = "0xE6D72C")]
		private set
		{
		}
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x253333C", Offset = "0x253333C", VA = "0x253333C")]
	public PlayerData[] GetPlayerDatas()
	{
		return null;
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x252CB24", Offset = "0x252CB24", VA = "0x252CB24")]
	public PlayerData GetPlayerDataBySessionId(int session, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x252D2C8", Offset = "0x252D2C8", VA = "0x252D2C8")]
	public PlayerData GetPlayerDataById(int id, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x252CC2C", Offset = "0x252CC2C", VA = "0x252CC2C")]
	public int SpawnPlayerID(int sessionId)
	{
		return default(int);
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x252CE60", Offset = "0x252CE60", VA = "0x252CE60")]
	public void RegisterPlayerSession(PlayerData data)
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x252D438", Offset = "0x252D438", VA = "0x252D438")]
	public void UnRegisterPlayerSession(int session)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x25333AC", Offset = "0x25333AC", VA = "0x25333AC")]
	private void AddPlayerSessionList(int session)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x253347C", Offset = "0x253347C", VA = "0x253347C")]
	private void RemovePlayerSessionList(int session)
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x253354C", Offset = "0x253354C", VA = "0x253354C")]
	private bool CheckPlayer(int playerid)
	{
		return default(bool);
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x25335B0", Offset = "0x25335B0", VA = "0x25335B0")]
	private PlayerData GetPlayerDataByPlayerId(int playerid, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x252D3D0", Offset = "0x252D3D0", VA = "0x252D3D0")]
	public bool GetPlayerInfoByID(int id, out SettingManager.PlayerInfo playerInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x25336B8", Offset = "0x25336B8", VA = "0x25336B8")]
	public bool GetPlayerInfoBySID(int sid, out SettingManager.PlayerInfo playerInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x252CD28", Offset = "0x252CD28", VA = "0x252CD28")]
	public bool GetCanjoinGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x25337F4", Offset = "0x25337F4", VA = "0x25337F4")]
	public e_group_type GetCanJoinGroup()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x25337FC", Offset = "0x25337FC", VA = "0x25337FC")]
	public int GetJoinPlayerCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x253392C", Offset = "0x253392C", VA = "0x253392C")]
	public string[] GetAllRegisterMechineId(bool isFilterClosed = false)
	{
		return null;
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x2533B48", Offset = "0x2533B48", VA = "0x2533B48")]
	public void SetJoinStatusByID(int playerId, bool status)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x2533CBC", Offset = "0x2533CBC", VA = "0x2533CBC")]
	public void SetWeaponGroup(int playerId, e_weapon_group type)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x2533D0C", Offset = "0x2533D0C", VA = "0x2533D0C")]
	public void SetWeaponType(int playerId, int type, bool IsRight)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x2533D6C", Offset = "0x2533D6C", VA = "0x2533D6C")]
	public void SetAcquisitionWeaponType(int playerId, int type, bool IsRight = true)
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x2533DCC", Offset = "0x2533DCC", VA = "0x2533DCC")]
	public void SetPlayerStyle(int playerId, e_Player_Style type)
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x2533E1C", Offset = "0x2533E1C", VA = "0x2533E1C")]
	public void SetGroupType(int playerId, e_group_type type)
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x2533E6C", Offset = "0x2533E6C", VA = "0x2533E6C")]
	public void SetTeamInfo(int teamId, string teamName)
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x2533FEC", Offset = "0x2533FEC", VA = "0x2533FEC")]
	public string GetTeamName(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x25341E0", Offset = "0x25341E0", VA = "0x25341E0")]
	public void SetLoginInfo(int playerId, int teamId, string name, string iconUrl)
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x2534308", Offset = "0x2534308", VA = "0x2534308")]
	public void SetAllLoginInfo()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x2533C14", Offset = "0x2533C14", VA = "0x2533C14")]
	public void LobbyOperationServer(int playerId, int OperationType, int OperationValue)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x2534594", Offset = "0x2534594", VA = "0x2534594")]
	public int GetSessionByIp(IPEndPoint ip)
	{
		return default(int);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x252CDBC", Offset = "0x252CDBC", VA = "0x252CDBC")]
	public bool IsCanFilterLocalServer(int sessionId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x252D088", Offset = "0x252D088", VA = "0x252D088")]
	public PlayerData[] GetPlayerDatas(bool filterLocalServer = false, bool filterlive = false)
	{
		return null;
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x253461C", Offset = "0x253461C", VA = "0x253461C")]
	public int GetPlayerIdBySite(int site, bool isLogError = true)
	{
		return default(int);
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x252C8A0", Offset = "0x252C8A0", VA = "0x252C8A0")]
	public int GetSessionByPlayer(int playerId)
	{
		return default(int);
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x2534724", Offset = "0x2534724", VA = "0x2534724")]
	public void SetDropWeaponType(int playerId, e_weapon_group type)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x2534760", Offset = "0x2534760", VA = "0x2534760")]
	public HostServer()
	{
	}
}
[Token(Token = "0x2000370")]
public class PlayerMoveRange : MonoBehaviour
{
	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerMoveRange pmr;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float offset;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float offsetMinX;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offsetMaxX;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform moveArea;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float minX;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float maxX;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float minZ;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float maxZ;

	[Token(Token = "0x170001F0")]
	public static PlayerMoveRange Instance
	{
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x2312800", Offset = "0x2312800", VA = "0x2312800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F1")]
	public float Offset
	{
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x231284C", Offset = "0x231284C", VA = "0x231284C")]
		set
		{
		}
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x2312864", Offset = "0x2312864", VA = "0x2312864")]
	private void Awake()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x231292C", Offset = "0x231292C", VA = "0x231292C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x2312B14", Offset = "0x2312B14", VA = "0x2312B14")]
	public Vector3 LimitPos(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x2312B40", Offset = "0x2312B40", VA = "0x2312B40")]
	public PlayerMoveRange()
	{
	}
}
[Serializable]
[Token(Token = "0x2000371")]
public class PlayerProtectDataItem
{
	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minTime;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int minPlayer;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minBlood;

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x2313384", Offset = "0x2313384", VA = "0x2313384")]
	public PlayerProtectDataItem()
	{
	}
}
[Token(Token = "0x2000372")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE55974", Offset = "0xE55974")]
public class PlayerProtectData : ScriptableObject
{
	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerProtectDataItem OnePlayer;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerProtectDataItem TwoPlayer;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerProtectDataItem ThreePlayer;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerProtectDataItem FourPlayer;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerProtectDataItem FivePlayer;

	[Token(Token = "0x170001F2")]
	public PlayerProtectDataItem[] items
	{
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x23131E8", Offset = "0x23131E8", VA = "0x23131E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x231337C", Offset = "0x231337C", VA = "0x231337C")]
	public PlayerProtectData()
	{
	}
}
[Token(Token = "0x2000373")]
public enum e_CreatType
{
	[Token(Token = "0x4001517")]
	DoorSwitch = 0,
	[Token(Token = "0x4001518")]
	ClearanceSwitch = 1,
	[Token(Token = "0x4001519")]
	Switchs = 2,
	[Token(Token = "0x400151A")]
	Obj = 7,
	[Token(Token = "0x400151B")]
	Objs = 8,
	[Token(Token = "0x400151C")]
	gear = 9,
	[Token(Token = "0x400151D")]
	DefaultArea = 101,
	[Token(Token = "0x400151E")]
	BronArea = 102,
	[Token(Token = "0x400151F")]
	EndArea = 103,
	[Token(Token = "0x4001520")]
	CompatibleEndArea = 104,
	[Token(Token = "0x4001521")]
	ChallengeArea = 105,
	[Token(Token = "0x4001522")]
	EndSection = 106
}
[Token(Token = "0x2000374")]
public class CreatData
{
	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int AreaID;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Storey;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 pos;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion rot;

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x21BFDB4", Offset = "0x21BFDB4", VA = "0x21BFDB4")]
	public CreatData()
	{
	}
}
[Token(Token = "0x2000375")]
public class AreaManager : Singleton<AreaManager>
{
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE559D4", Offset = "0xE559D4")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<RoomCell> cb;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parent;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rot;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x20F06F8", Offset = "0x20F06F8", VA = "0x20F06F8")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x20F0700", Offset = "0x20F0700", VA = "0x20F0700")]
		internal void <CreateAreaAsync>b__0(GameObject obj)
		{
		}
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x2132B28", Offset = "0x2132B28", VA = "0x2132B28")]
	public RoomCell CreateArea(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x2133014", Offset = "0x2133014", VA = "0x2133014")]
	public RoomCell CreateArea(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x2133284", Offset = "0x2133284", VA = "0x2133284")]
	public BaseGear CreateGear(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x21337BC", Offset = "0x21337BC", VA = "0x21337BC")]
	public GameObject CreateObject(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x2133A9C", Offset = "0x2133A9C", VA = "0x2133A9C")]
	public GameObject CreatePrefab(GameObject Prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x2133D34", Offset = "0x2133D34", VA = "0x2133D34")]
	public SwitchController CreateSwitch(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x2134080", Offset = "0x2134080", VA = "0x2134080")]
	public void CreateAreaAsync(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<RoomCell> cb)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x213435C", Offset = "0x213435C", VA = "0x213435C")]
	public AreaManager()
	{
	}
}
[Token(Token = "0x2000377")]
public class AreaModelData : MonoBehaviour
{
	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61218", Offset = "0xE61218")]
	public List<BaseGear> GearList;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61250", Offset = "0xE61250")]
	public List<GameObject> floors;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 bakePos;

	[Token(Token = "0x170001F3")]
	public Transform ModelRoot
	{
		[Token(Token = "0x6001370")]
		[Address(RVA = "0x21343D4", Offset = "0x21343D4", VA = "0x21343D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x21343DC", Offset = "0x21343DC", VA = "0x21343DC")]
	public AreaModelData()
	{
	}
}
[Token(Token = "0x2000378")]
public class LevelGeneratorBak : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000379")]
	public class InterfaceInfo
	{
		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InterfaceType interfaceType;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Door;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Wall;

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x20597B0", Offset = "0x20597B0", VA = "0x20597B0")]
		public InterfaceInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200037A")]
	public class ItemInfo
	{
		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ItemID;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ItemCount;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ItemPrefab;

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x20597B8", Offset = "0x20597B8", VA = "0x20597B8")]
		public ItemInfo()
		{
		}
	}

	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE559E4", Offset = "0xE559E4")]
	private sealed class <GenerateLevel>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelGeneratorBak <>4__this;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x2059760", Offset = "0x2059760", VA = "0x2059760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x20597A8", Offset = "0x20597A8", VA = "0x20597A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x2058B14", Offset = "0x2058B14", VA = "0x2058B14")]
		[DebuggerHidden]
		public <GenerateLevel>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x2058B40", Offset = "0x2058B40", VA = "0x2058B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x2058B44", Offset = "0x2058B44", VA = "0x2058B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x2059768", Offset = "0x2059768", VA = "0x2059768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE559F4", Offset = "0xE559F4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<InterfaceInfo> <>9__57_0;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<InterfaceInfo> <>9__57_1;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<InterfaceInfo> <>9__57_2;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x2058A74", Offset = "0x2058A74", VA = "0x2058A74")]
		public <>c()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x2058A7C", Offset = "0x2058A7C", VA = "0x2058A7C")]
		internal bool <LevelGenerateEnd>b__57_0(InterfaceInfo A)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x2058A9C", Offset = "0x2058A9C", VA = "0x2058A9C")]
		internal bool <LevelGenerateEnd>b__57_1(InterfaceInfo B)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x2058ABC", Offset = "0x2058ABC", VA = "0x2058ABC")]
		internal bool <LevelGenerateEnd>b__57_2(InterfaceInfo C)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55A04", Offset = "0xE55A04")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Interface currentJoint;

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x2058ADC", Offset = "0x2058ADC", VA = "0x2058ADC")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x2058AE4", Offset = "0x2058AE4", VA = "0x2058AE4")]
		internal bool <CreatAreaData>b__0(InterfaceInfo a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61288", Offset = "0xE61288")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61288", Offset = "0xE61288")]
	public int cellTotalNum;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE612E8", Offset = "0xE612E8")]
	public List<RoomCell> cellPrefabs;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61320", Offset = "0xE61320")]
	public List<RoomCell> BornPrefabs;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61358", Offset = "0xE61358")]
	public List<RoomCell> EndPrefabs;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61390", Offset = "0xE61390")]
	public RoomCell CompatiblePrefab;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE613C8", Offset = "0xE613C8")]
	public RoomCell ChallengePrefab;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61400", Offset = "0xE61400")]
	public RoomCell EndSectionPrefab;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61438", Offset = "0xE61438")]
	public Vector3 MinConflictCheckHalfBox;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61470", Offset = "0xE61470")]
	public List<ItemInfo> itemInfoList;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE614A8", Offset = "0xE614A8")]
	public int ClearanceID;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ClearanceTriangle;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ClearancePlatform;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE614E0", Offset = "0xE614E0")]
	public List<InterfaceInfo> interfaceInfoList;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61518", Offset = "0xE61518")]
	public SceneCell sceneCell;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LocalNavMeshBuilder NavMeshBuilder;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, List<int>> areaExistWunitDic;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int curOpenDoorArea;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, CurrencyGear> OpenDoorGear;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, CurrencyGear> CloseDoorGear;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<int> DoorSwichList;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isStart;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isShow;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int cellNum;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int EndNum;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<RoomCell> allCells;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RoomCell RoomCell;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Interface currentJoint;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<RoomCell> cells;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly List<RoomCell> confinedCells;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly List<RoomCell> AvailableCells;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly List<Interface> tempJoints;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly Dictionary<int, RoomCell> roomCells;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly Dictionary<int, List<CreatData>> ItemCreatDataDic;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Dictionary<int, RoomCell> GeneratorRoomCells;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform PlayerTrn;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Transform> TeleporterTrns;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<CreatData> creatDataList;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<Interface> interfaceList;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int swicthTotalCount;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool LimiterRemoval;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool IsTriggerChallenge;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	private bool isClearoom;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int bronAreaID;

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x20BC920", Offset = "0x20BC920", VA = "0x20BC920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x20BCD48", Offset = "0x20BCD48", VA = "0x20BCD48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x20BCA68", Offset = "0x20BCA68", VA = "0x20BCA68")]
	private void DoClear()
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x20BCF48", Offset = "0x20BCF48", VA = "0x20BCF48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x20BCBA4", Offset = "0x20BCBA4", VA = "0x20BCBA4")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x20BCF4C", Offset = "0x20BCF4C", VA = "0x20BCF4C")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x20BD0AC", Offset = "0x20BD0AC", VA = "0x20BD0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x20BD034", Offset = "0x20BD034", VA = "0x20BD034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6D73C", Offset = "0xE6D73C")]
	private IEnumerator GenerateLevel()
	{
		return null;
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x20BD3D4", Offset = "0x20BD3D4", VA = "0x20BD3D4")]
	public void GenerateBronArea()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x20BD8D4", Offset = "0x20BD8D4", VA = "0x20BD8D4")]
	public RoomCell GenerateArea()
	{
		return null;
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x20BDFC4", Offset = "0x20BDFC4", VA = "0x20BDFC4")]
	public RoomCell GenerateEndArea()
	{
		return null;
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x20BE2CC", Offset = "0x20BE2CC", VA = "0x20BE2CC")]
	public void GenerateClearanceGear(RoomCell cell, bool isCompatible)
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x20BE72C", Offset = "0x20BE72C", VA = "0x20BE72C")]
	public void LevelGenerateEnd()
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x20C0E38", Offset = "0x20C0E38", VA = "0x20C0E38")]
	public RoomCell GenerateSpecialArea()
	{
		return null;
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x20BFB58", Offset = "0x20BFB58", VA = "0x20BFB58")]
	private bool CheckMinConflict(Interface Interface)
	{
		return default(bool);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x20C1094", Offset = "0x20C1094", VA = "0x20C1094")]
	private float GetExpectedJointAngle(Interface currentJoint, Interface matchingJoint)
	{
		return default(float);
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x20C1154", Offset = "0x20C1154", VA = "0x20C1154")]
	public Vector3 RotationOffset(float angle, Vector3 curPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x20BFCB4", Offset = "0x20BFCB4", VA = "0x20BFCB4")]
	private bool CheckConflict(Interface Interface, RoomCell Cell, List<Interface> joints, out Interface join, bool isCheck = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x20BDEE4", Offset = "0x20BDEE4", VA = "0x20BDEE4")]
	private RoomCell GenerateMatchingCell(Dictionary<int, RoomCell> cellPrefabDic, Interface currentJoint, e_AreaGeneratorType areaGeneratorType)
	{
		return null;
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x20C11B4", Offset = "0x20C11B4", VA = "0x20C11B4")]
	private RoomCell GetMatchingCell(Dictionary<int, RoomCell> cellPrefabDic, Interface currentJoint, out Interface Joint)
	{
		return null;
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x20C0218", Offset = "0x20C0218", VA = "0x20C0218")]
	private RoomCell CreatAreaData(RoomCell matchingCell, Interface currentJoint, Interface Joint, e_AreaGeneratorType areaGeneratorType)
	{
		return null;
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x20C1770", Offset = "0x20C1770", VA = "0x20C1770")]
	private RoomCell Compatible()
	{
		return null;
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x20BD7B8", Offset = "0x20BD7B8", VA = "0x20BD7B8")]
	public void SetGeneratorCell(RoomCell roomCell)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x20C1DB8", Offset = "0x20C1DB8", VA = "0x20C1DB8")]
	public RoomCell GetGeneratorCell(int AreaID)
	{
		return null;
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x20C1EAC", Offset = "0x20C1EAC", VA = "0x20C1EAC")]
	public bool CheckExistWunitArea(int AreaID, int id)
	{
		return default(bool);
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x20C1F64", Offset = "0x20C1F64", VA = "0x20C1F64")]
	public void SetDoor(CurrencyGear currencyGear, bool isOpen)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x20C20C4", Offset = "0x20C20C4", VA = "0x20C20C4")]
	public CurrencyGear GetDoor(int id, bool isOpen)
	{
		return null;
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x20C2150", Offset = "0x20C2150", VA = "0x20C2150")]
	public bool CheckDoorStuat(int id, bool isOpen)
	{
		return default(bool);
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x20C21C4", Offset = "0x20C21C4", VA = "0x20C21C4")]
	public void AddExistWunitArea(int AreaID, int id, [Optional] Action action)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x20C24BC", Offset = "0x20C24BC", VA = "0x20C24BC")]
	public void RemoveExistWunitArea(int AreaID, int id, [Optional] Action action)
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x20C25FC", Offset = "0x20C25FC", VA = "0x20C25FC")]
	public void SetCurOpenArea(int areaid)
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x20C2358", Offset = "0x20C2358", VA = "0x20C2358")]
	public void SetAraeStatus(int AreaID, bool isShow, [Optional] Action action)
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x20C0C50", Offset = "0x20C0C50", VA = "0x20C0C50")]
	public void SetAllRoomCellHide()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x20C2728", Offset = "0x20C2728", VA = "0x20C2728")]
	public void UpdateNavmesh()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x20C27BC", Offset = "0x20C27BC", VA = "0x20C27BC")]
	public void BronAreaExportDoorFunction()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x20BD264", Offset = "0x20BD264", VA = "0x20BD264")]
	public void SetDoorSwichStatus(bool isClear)
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x20BD1AC", Offset = "0x20BD1AC", VA = "0x20BD1AC")]
	private bool CheckMonsterIsClean()
	{
		return default(bool);
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x20C2864", Offset = "0x20C2864", VA = "0x20C2864")]
	public LevelGeneratorBak()
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x20C2B20", Offset = "0x20C2B20", VA = "0x20C2B20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D79C", Offset = "0xE6D79C")]
	private void <SetCurOpenArea>b__75_0()
	{
	}
}
[Token(Token = "0x200037E")]
public enum OrientationType
{
	[Token(Token = "0x400156C")]
	Forward,
	[Token(Token = "0x400156D")]
	Right,
	[Token(Token = "0x400156E")]
	Back,
	[Token(Token = "0x400156F")]
	Left
}
[Token(Token = "0x200037F")]
public enum InterfaceType
{
	[Token(Token = "0x4001571")]
	InterfaceA,
	[Token(Token = "0x4001572")]
	InterfaceB,
	[Token(Token = "0x4001573")]
	InterfaceC
}
[Token(Token = "0x2000380")]
public enum e_AreaGeneratorType
{
	[Token(Token = "0x4001575")]
	Default,
	[Token(Token = "0x4001576")]
	Born,
	[Token(Token = "0x4001577")]
	End,
	[Token(Token = "0x4001578")]
	Compatible,
	[Token(Token = "0x4001579")]
	Challenge,
	[Token(Token = "0x400157A")]
	EndSection
}
[Serializable]
[Token(Token = "0x2000381")]
public class ItemTrns
{
	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaItemID;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Storey;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> ItemTrnsfList;

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x20B3628", Offset = "0x20B3628", VA = "0x20B3628")]
	public ItemTrns()
	{
	}
}
[Serializable]
[Token(Token = "0x2000382")]
public class GoldHeapTrns
{
	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int GoldHeapID;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> GoldHeapsTrn;

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x25200C8", Offset = "0x25200C8", VA = "0x25200C8")]
	public GoldHeapTrns()
	{
	}
}
[Serializable]
[Token(Token = "0x2000383")]
public class Interface
{
	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int InterfaceID;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OrientationType InitType;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterfaceType interfaceType;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform transform;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isUsed;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isConflict;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool isEntrance;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int ConnectionAreaID;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xE61550", Offset = "0xE61550")]
	private (Vector3, Vector3) trns;

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x20B160C", Offset = "0x20B160C", VA = "0x20B160C")]
	public void SetInterfaceTrns(Vector3 pos, float Angle)
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x20B1658", Offset = "0x20B1658", VA = "0x20B1658")]
	public (Vector3, Vector3) GetInterfaceTrns()
	{
		return default((Vector3, Vector3));
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x20B166C", Offset = "0x20B166C", VA = "0x20B166C")]
	public Interface()
	{
	}
}
[Token(Token = "0x2000384")]
public class RoomCell : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55A14", Offset = "0xE55A14")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject model;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x2060938", Offset = "0x2060938", VA = "0x2060938")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x2060940", Offset = "0x2060940", VA = "0x2060940")]
		internal void <SetModelStatus>b__0()
		{
		}
	}

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE615EC", Offset = "0xE615EC")]
	public int AreaID;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61624", Offset = "0xE61624")]
	public int Id;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6165C", Offset = "0xE6165C")]
	public e_AreaGeneratorType AreaType;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61694", Offset = "0xE61694")]
	public bool isBigMap;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE616CC", Offset = "0xE616CC")]
	public List<int> Storey;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61704", Offset = "0xE61704")]
	public bool IsExistElite;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Interface[] joints;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6173C", Offset = "0xE6173C")]
	public AreaInfo SpawnArea;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE61774", Offset = "0xE61774")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61774", Offset = "0xE61774")]
	public BoxCollider conflictCheckHalfBox;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE617D4", Offset = "0xE617D4")]
	public int MaxJointsCount;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6180C", Offset = "0xE6180C")]
	public Transform PlayerTrn;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61844", Offset = "0xE61844")]
	public List<ItemTrns> ItemDataList;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6187C", Offset = "0xE6187C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6187C", Offset = "0xE6187C")]
	public List<Transform> TeleporterTrns;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE618DC", Offset = "0xE618DC")]
	public Transform TriagnleTrn;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61914", Offset = "0xE61914")]
	public Transform PlatformTrn;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Collider> AreaColliders;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6194C", Offset = "0xE6194C")]
	public AreaModelData AreaModelData;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LevelGeneratorBak LevelGenerator;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> ConnectionList;

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x2722294", Offset = "0x2722294", VA = "0x2722294")]
	public void Init()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x272290C", Offset = "0x272290C", VA = "0x272290C")]
	private void InitStoreyList()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x272299C", Offset = "0x272299C", VA = "0x272299C")]
	public void AreaGeneratorEnd()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x2722F24", Offset = "0x2722F24", VA = "0x2722F24")]
	public void AreaOpen()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x27233E4", Offset = "0x27233E4", VA = "0x27233E4")]
	public void DnDestroy()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x2723560", Offset = "0x2723560", VA = "0x2723560")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x272361C", Offset = "0x272361C", VA = "0x272361C")]
	private void DoMonsterTriggerEnter(LightProbeAnchoPositionOverrider lightData)
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x27236F0", Offset = "0x27236F0", VA = "0x27236F0")]
	private void DoPlayerTriggerEnter(CharacterMono CharacterMono)
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x2723744", Offset = "0x2723744", VA = "0x2723744")]
	public int GetConnectEntranceArea()
	{
		return default(int);
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x2723834", Offset = "0x2723834", VA = "0x2723834")]
	public Transform GetConnectEntranceAreaTransf()
	{
		return null;
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x2722D10", Offset = "0x2722D10", VA = "0x2722D10")]
	public void SetFloorColl(bool isShow = true)
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x2723924", Offset = "0x2723924", VA = "0x2723924")]
	public void SetModelStatus(bool isShow, Action action)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x2723AF4", Offset = "0x2723AF4", VA = "0x2723AF4")]
	private void Door(bool isShow)
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x2723E1C", Offset = "0x2723E1C", VA = "0x2723E1C")]
	public void GetAvailableJoints(List<Interface> results)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x2723EF8", Offset = "0x2723EF8", VA = "0x2723EF8")]
	public void GetNotUsedJoints(List<Interface> results)
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x2723FCC", Offset = "0x2723FCC", VA = "0x2723FCC")]
	public void GetDoorJoints(List<int> results)
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x27240BC", Offset = "0x27240BC", VA = "0x27240BC")]
	public int GetAvailableJointsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x2724134", Offset = "0x2724134", VA = "0x2724134")]
	public int GetNoAvailableJointsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x27241A0", Offset = "0x27241A0", VA = "0x27241A0")]
	public int GetNoUsedJointsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x2724210", Offset = "0x2724210", VA = "0x2724210")]
	public Interface GetJoint(int InterfaceID)
	{
		return null;
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x2724278", Offset = "0x2724278", VA = "0x2724278")]
	public Interface GetFristUsedJoint()
	{
		return null;
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x27242DC", Offset = "0x27242DC", VA = "0x27242DC")]
	public bool CheckSameType(InterfaceType interfaceType, out List<Interface> interfaceList)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x272440C", Offset = "0x272440C", VA = "0x272440C")]
	public List<Interface> GetJoints(InterfaceType interfaceType)
	{
		return null;
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x272450C", Offset = "0x272450C", VA = "0x272450C")]
	public bool CheckAvailableJoint()
	{
		return default(bool);
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x2724528", Offset = "0x2724528", VA = "0x2724528")]
	public bool CheckUseJoint()
	{
		return default(bool);
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x2724594", Offset = "0x2724594", VA = "0x2724594")]
	public bool CheckAchieveMaxJointCount()
	{
		return default(bool);
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x2723258", Offset = "0x2723258", VA = "0x2723258")]
	public void SetExportAreaID(List<int> ExportAreaIDList)
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x27245C0", Offset = "0x27245C0", VA = "0x27245C0")]
	public RoomCell()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x2724678", Offset = "0x2724678", VA = "0x2724678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D7FC", Offset = "0xE6D7FC")]
	private bool <SetFloorColl>b__30_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000386")]
public class AreaLimitedTipUI : BaseUI
{
	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AreaLimitedTipUI Instance;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float downOffset;

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x21327E0", Offset = "0x21327E0", VA = "0x21327E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x2132844", Offset = "0x2132844", VA = "0x2132844")]
	private void Update()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x2132848", Offset = "0x2132848", VA = "0x2132848")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x2132B10", Offset = "0x2132B10", VA = "0x2132B10")]
	public AreaLimitedTipUI()
	{
	}
}
[Token(Token = "0x2000387")]
public class BaseHUDView : MonoBehaviour
{
	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Root;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool isShow;

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x29016B8", Offset = "0x29016B8", VA = "0x29016B8", Slot = "4")]
	public virtual void SetShow(bool isShow)
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x2901730", Offset = "0x2901730", VA = "0x2901730", Slot = "5")]
	public virtual bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x2901738", Offset = "0x2901738", VA = "0x2901738")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x2901810", Offset = "0x2901810", VA = "0x2901810", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x2901814", Offset = "0x2901814", VA = "0x2901814")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x2901820", Offset = "0x2901820", VA = "0x2901820")]
	public BaseHUDView()
	{
	}
}
[Token(Token = "0x2000388")]
public class BaseUI : MonoBehaviour
{
	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject mGo;

	[Token(Token = "0x170001F6")]
	public Transform CacheTransform
	{
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x2901E6C", Offset = "0x2901E6C", VA = "0x2901E6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F7")]
	public GameObject CacheGameObject
	{
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x2901E8C", Offset = "0x2901E8C", VA = "0x2901E8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x2901F2C", Offset = "0x2901F2C", VA = "0x2901F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x28FA610", Offset = "0x28FA610", VA = "0x28FA610", Slot = "4")]
	protected virtual void OnInit()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x28FB184", Offset = "0x28FB184", VA = "0x28FB184", Slot = "5")]
	protected virtual void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x28FB23C", Offset = "0x28FB23C", VA = "0x28FB23C", Slot = "6")]
	protected virtual void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x28FB77C", Offset = "0x28FB77C", VA = "0x28FB77C", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x2901F38", Offset = "0x2901F38", VA = "0x2901F38", Slot = "8")]
	public virtual void Show(params object[] param)
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x2901F80", Offset = "0x2901F80", VA = "0x2901F80", Slot = "9")]
	public virtual void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x2901FC8", Offset = "0x2901FC8", VA = "0x2901FC8")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x2901FD4", Offset = "0x2901FD4", VA = "0x2901FD4", Slot = "10")]
	public virtual bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x28FD0B0", Offset = "0x28FD0B0", VA = "0x28FD0B0")]
	public BaseUI()
	{
	}
}
[Token(Token = "0x2000389")]
public class BattleProgress : MonoBehaviour
{
	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text s;

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x29054B4", Offset = "0x29054B4", VA = "0x29054B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x2905658", Offset = "0x2905658", VA = "0x2905658")]
	public BattleProgress()
	{
	}
}
[Token(Token = "0x200038A")]
public class BattleTimer : MonoBehaviour
{
	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text min;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text second;

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x2905E60", Offset = "0x2905E60", VA = "0x2905E60")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x2905F08", Offset = "0x2905F08", VA = "0x2905F08")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x2906180", Offset = "0x2906180", VA = "0x2906180")]
	public BattleTimer()
	{
	}
}
[Token(Token = "0x200038B")]
public class CharacterDeathUI : BaseUI
{
	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image BgImg;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SayTxt;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] BgSps;

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x2444E84", Offset = "0x2444E84", VA = "0x2444E84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x2444E98", Offset = "0x2444E98", VA = "0x2444E98", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x2444EA0", Offset = "0x2444EA0", VA = "0x2444EA0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x244515C", Offset = "0x244515C", VA = "0x244515C", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x2445164", Offset = "0x2445164", VA = "0x2445164")]
	public void SetInfo(RoomCharacterDeathBase data)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x244523C", Offset = "0x244523C", VA = "0x244523C")]
	private Sprite GetBgSp(e_RoomCharacterDeath_Type deathType)
	{
		return null;
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x24452F0", Offset = "0x24452F0", VA = "0x24452F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x2444EC8", Offset = "0x2444EC8", VA = "0x2444EC8")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x24452F4", Offset = "0x24452F4", VA = "0x24452F4")]
	public CharacterDeathUI()
	{
	}
}
[Token(Token = "0x200038C")]
public class ClientUIGameStatusView : MonoBehaviour
{
	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject successfulObj;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject unsuccessfulObj;

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x21BA874", Offset = "0x21BA874", VA = "0x21BA874")]
	public void SetGameStatus(StatisticalManager.StatisticalResults results)
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x21BAAA8", Offset = "0x21BAAA8", VA = "0x21BAAA8")]
	public ClientUIGameStatusView()
	{
	}
}
[Token(Token = "0x200038D")]
public class ClientUIMyScoreView : MonoBehaviour
{
	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image levelImage;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] levelSprites;

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x21BAAB0", Offset = "0x21BAAB0", VA = "0x21BAAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x21BABE8", Offset = "0x21BABE8", VA = "0x21BABE8")]
	public void SetMyScore(StatisticalManager.StatisticalResultData resultsData)
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x21BAE28", Offset = "0x21BAE28", VA = "0x21BAE28")]
	public ClientUIMyScoreView()
	{
	}
}
[Token(Token = "0x200038E")]
public class ClientUITeamGridScoreItem : MonoBehaviour
{
	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text maxKillText;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hitRateText;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text maxTimeText;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text maxDieText;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject myFrame;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color color1;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color color2;

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x21BAE30", Offset = "0x21BAE30", VA = "0x21BAE30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x21BB024", Offset = "0x21BB024", VA = "0x21BB024")]
	public void Setinfo(StatisticalManager.StatisticalResultData data, bool isDisplayFrame = true)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x21BB2BC", Offset = "0x21BB2BC", VA = "0x21BB2BC")]
	public ClientUITeamGridScoreItem()
	{
	}
}
[Token(Token = "0x200038F")]
public class ClientUITeamGridScoreView : MonoBehaviour
{
	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClientUITeamGridScoreItem[] items;

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x21BB2C4", Offset = "0x21BB2C4", VA = "0x21BB2C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x21BB37C", Offset = "0x21BB37C", VA = "0x21BB37C")]
	public void SetTeamListInfo(StatisticalManager.StatisticalResults results, bool isDisplayFrame = true)
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x21BB4A8", Offset = "0x21BB4A8", VA = "0x21BB4A8")]
	public ClientUITeamGridScoreView()
	{
	}
}
[Token(Token = "0x2000390")]
public class ClientUIView : BaseUI
{
	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _root;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ClientUIGameStatusView _GameStatusView_A;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ClientUIGameStatusView _GameStatusView_B;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent winAudioEvent;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent failAudioEvent;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StatisticalManager.StatisticalResults results;

	[Token(Token = "0x170001F8")]
	public StatisticalManager.StatisticalResults Results
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x21BB4B0", Offset = "0x21BB4B0", VA = "0x21BB4B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x21BB4B8", Offset = "0x21BB4B8", VA = "0x21BB4B8")]
		private set
		{
		}
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x21BB4C0", Offset = "0x21BB4C0", VA = "0x21BB4C0", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x21BB4C8", Offset = "0x21BB4C8", VA = "0x21BB4C8", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x21BB6E8", Offset = "0x21BB6E8", VA = "0x21BB6E8", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x21BB7D8", Offset = "0x21BB7D8", VA = "0x21BB7D8", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x21BB7F4", Offset = "0x21BB7F4", VA = "0x21BB7F4")]
	public void SetStatisticalResults(StatisticalManager.StatisticalResults _results)
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x21BB518", Offset = "0x21BB518", VA = "0x21BB518")]
	private void RefreshUI()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x21BB8F4", Offset = "0x21BB8F4", VA = "0x21BB8F4")]
	private void Fade(GameObject go, float alpha, float duration)
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x21BB7D4", Offset = "0x21BB7D4", VA = "0x21BB7D4")]
	private void PlayAudio(bool isPlay, bool isWin)
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x21BBA64", Offset = "0x21BBA64", VA = "0x21BBA64")]
	public void OnCloseBtnClick()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x21BBB40", Offset = "0x21BBB40", VA = "0x21BBB40")]
	public ClientUIView()
	{
	}
}
[Token(Token = "0x2000391")]
public class FollowCamera : MonoBehaviour
{
	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displayDis;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dis;

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x2242AB8", Offset = "0x2242AB8", VA = "0x2242AB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x2242ABC", Offset = "0x2242ABC", VA = "0x2242ABC")]
	private void Follow()
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x2242D24", Offset = "0x2242D24", VA = "0x2242D24")]
	public FollowCamera()
	{
	}
}
[Token(Token = "0x2000392")]
public class GuidTipUI : BaseUI
{
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55A24", Offset = "0xE55A24")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GuidTipUI <>4__this;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int callIndex;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x2843B74", Offset = "0x2843B74", VA = "0x2843B74")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x2843B7C", Offset = "0x2843B7C", VA = "0x2843B7C")]
		internal void <DelayHide>b__0()
		{
		}
	}

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image BgImg;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SayTxt;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Font ChineseFont;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Font OtherFont;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isShow;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool doFadeing;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool isFadeIn;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float fadeTime;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeRunningTime;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color tmpCl;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE619F4", Offset = "0xE619F4")]
	private int <CallCount>k__BackingField;

	[Token(Token = "0x170001F9")]
	public int CallCount
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0x2523974", Offset = "0x2523974", VA = "0x2523974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D80C", Offset = "0xE6D80C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001412")]
		[Address(RVA = "0x252397C", Offset = "0x252397C", VA = "0x252397C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D81C", Offset = "0xE6D81C")]
		private set
		{
		}
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x25232D0", Offset = "0x25232D0", VA = "0x25232D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x25232E4", Offset = "0x25232E4", VA = "0x25232E4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x25232EC", Offset = "0x25232EC", VA = "0x25232EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x2523418", Offset = "0x2523418", VA = "0x2523418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x2523544", Offset = "0x2523544", VA = "0x2523544")]
	private void OnLanguageChange(e_type_language language)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x2523588", Offset = "0x2523588", VA = "0x2523588", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x2523968", Offset = "0x2523968", VA = "0x2523968", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x2523984", Offset = "0x2523984", VA = "0x2523984", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x25239CC", Offset = "0x25239CC", VA = "0x25239CC")]
	public void SetInfo(string say)
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x25235E0", Offset = "0x25235E0", VA = "0x25235E0")]
	private void SetFadeIn()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x25239B8", Offset = "0x25239B8", VA = "0x25239B8")]
	private void SetFadeOut()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x2523A10", Offset = "0x2523A10", VA = "0x2523A10")]
	private void FadeOutEnd()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x2523A3C", Offset = "0x2523A3C", VA = "0x2523A3C")]
	private void DoFading()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x25235F0", Offset = "0x25235F0", VA = "0x25235F0")]
	private void SetFadeValue(float v)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x2523ADC", Offset = "0x2523ADC", VA = "0x2523ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x25236D4", Offset = "0x25236D4", VA = "0x25236D4")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x2523B14", Offset = "0x2523B14", VA = "0x2523B14")]
	public void DelayHide(float time, int callIndex)
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x2523BF4", Offset = "0x2523BF4", VA = "0x2523BF4")]
	public GuidTipUI()
	{
	}
}
[Token(Token = "0x2000394")]
public class LevelViewUI : BaseUI
{
	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LevelViewUIObject;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> LevelLists;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float displayDis;

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x24CAF5C", Offset = "0x24CAF5C", VA = "0x24CAF5C", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x24CAF60", Offset = "0x24CAF60", VA = "0x24CAF60")]
	public void ResetView()
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x24CB07C", Offset = "0x24CB07C", VA = "0x24CB07C", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x24CB5F4", Offset = "0x24CB5F4", VA = "0x24CB5F4")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x24CB808", Offset = "0x24CB808", VA = "0x24CB808", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x24CB828", Offset = "0x24CB828", VA = "0x24CB828")]
	public LevelViewUI()
	{
	}
}
[Token(Token = "0x2000395")]
public class LoadingTextures : MonoBehaviour
{
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55A34", Offset = "0xE55A34")]
	private sealed class <GetResources>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingTextures <>4__this;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <stopwatch>5__2;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__4;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DownloadHandlerTexture <downloadTexture>5__5;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x205A118", Offset = "0x205A118", VA = "0x205A118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x205A160", Offset = "0x205A160", VA = "0x205A160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x2059D30", Offset = "0x2059D30", VA = "0x2059D30")]
		[DebuggerHidden]
		public <GetResources>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x2059D5C", Offset = "0x2059D5C", VA = "0x2059D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x2059D60", Offset = "0x2059D60", VA = "0x2059D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x205A120", Offset = "0x205A120", VA = "0x205A120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private e_type_language language;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture> textures;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string loadImagePath;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE61A04", Offset = "0xE61A04")]
	private static LoadingTextures <Instance>k__BackingField;

	[Token(Token = "0x170001FA")]
	public static LoadingTextures Instance
	{
		[Token(Token = "0x6001426")]
		[Address(RVA = "0x24D69B0", Offset = "0x24D69B0", VA = "0x24D69B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D82C", Offset = "0xE6D82C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001427")]
		[Address(RVA = "0x24D69FC", Offset = "0x24D69FC", VA = "0x24D69FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D83C", Offset = "0xE6D83C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x24D6A50", Offset = "0x24D6A50", VA = "0x24D6A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x24D6AA4", Offset = "0x24D6AA4", VA = "0x24D6AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x24D6D84", Offset = "0x24D6D84", VA = "0x24D6D84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x24D6EB0", Offset = "0x24D6EB0", VA = "0x24D6EB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x24D6FDC", Offset = "0x24D6FDC", VA = "0x24D6FDC")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x24D6B2C", Offset = "0x24D6B2C", VA = "0x24D6B2C")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x24D6FE0", Offset = "0x24D6FE0", VA = "0x24D6FE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6D84C", Offset = "0xE6D84C")]
	private IEnumerator GetResources(string path)
	{
		return null;
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x24D7074", Offset = "0x24D7074", VA = "0x24D7074")]
	public LoadingTextures()
	{
	}
}
[Token(Token = "0x2000397")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55A44", Offset = "0xE55A44")]
public class RandomLoadingTexture : MonoBehaviour
{
	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture texture_o;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RawImage image;

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x271847C", Offset = "0x271847C", VA = "0x271847C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x27184F4", Offset = "0x27184F4", VA = "0x27184F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x27184F8", Offset = "0x27184F8", VA = "0x27184F8")]
	private void SetImage()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x2718658", Offset = "0x2718658", VA = "0x2718658")]
	public RandomLoadingTexture()
	{
	}
}
[Token(Token = "0x2000398")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55AA4", Offset = "0xE55AA4")]
public class RoomLoadingTexture : MonoBehaviour
{
	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture_0;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture texture_1;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage image;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float interval;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x24B83A8", Offset = "0x24B83A8", VA = "0x24B83A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x24B83AC", Offset = "0x24B83AC", VA = "0x24B83AC")]
	public void SetImage()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x24B8404", Offset = "0x24B8404", VA = "0x24B8404")]
	public void Update()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x24B8564", Offset = "0x24B8564", VA = "0x24B8564")]
	public RoomLoadingTexture()
	{
	}
}
[Token(Token = "0x2000399")]
public class LogoUI : BaseUI
{
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55B04", Offset = "0xE55B04")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LogoUI <>4__this;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action action;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x205A168", Offset = "0x205A168", VA = "0x205A168")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x205A170", Offset = "0x205A170", VA = "0x205A170")]
		internal void <StartLogo>b__0()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x205A2FC", Offset = "0x205A2FC", VA = "0x205A2FC")]
		internal void <StartLogo>b__1()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x205A428", Offset = "0x205A428", VA = "0x205A428")]
		internal void <StartLogo>b__2()
		{
		}
	}

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ShowTime;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float displayDis;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFollowCamera;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine coroutine;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image Logo01;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image Logo02;

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x24D8AA4", Offset = "0x24D8AA4", VA = "0x24D8AA4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x24D8B80", Offset = "0x24D8B80", VA = "0x24D8B80", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x24D8F14", Offset = "0x24D8F14", VA = "0x24D8F14", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x24D8D00", Offset = "0x24D8D00", VA = "0x24D8D00")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x24D8FEC", Offset = "0x24D8FEC", VA = "0x24D8FEC")]
	public void StartLogo(Action action)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x24D90DC", Offset = "0x24D90DC", VA = "0x24D90DC")]
	public LogoUI()
	{
	}
}
[Token(Token = "0x200039B")]
public class StoreyUI
{
	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Storey;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIGameObject;

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x225A2BC", Offset = "0x225A2BC", VA = "0x225A2BC")]
	public StoreyUI()
	{
	}
}
[Token(Token = "0x200039C")]
public class MapIncubation : BaseUI
{
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55B14", Offset = "0xE55B14")]
	private sealed class <SetImage>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image image;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x205AC38", Offset = "0x205AC38", VA = "0x205AC38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x205AC80", Offset = "0x205AC80", VA = "0x205AC80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x205A948", Offset = "0x205A948", VA = "0x205A948")]
		[DebuggerHidden]
		public <SetImage>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x205A974", Offset = "0x205A974", VA = "0x205A974", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x205A978", Offset = "0x205A978", VA = "0x205A978", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x205AC40", Offset = "0x205AC40", VA = "0x205AC40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MapUI_null;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject QuestionPrefab;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject AislePrefab;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ArrowsPrefab;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject GoldPrefab;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BulletPrefab;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject EliteMonsterPrefab;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject WeaponBoxPrefab;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject TriagnlePrefab;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MapCanvasController _MapCanvasController;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	private Dictionary<int, Dictionary<int, GameObject>> MapUI;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<int, List<GameObject>> EntranceUIList;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<int, List<GameObject>> ArrowsUI;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<int, GameObject> TriagnleUI;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Dictionary<int, GameObject> EliteMonsterrUI;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Dictionary<int, Dictionary<int, StoreyUI>> AreaSymbolList;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image Teammate_Image;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool isAR;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float Map_PosScale;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int InitID;

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x24E02AC", Offset = "0x24E02AC", VA = "0x24E02AC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x24E037C", Offset = "0x24E037C", VA = "0x24E037C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x24E0680", Offset = "0x24E0680", VA = "0x24E0680")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x24E0984", Offset = "0x24E0984", VA = "0x24E0984")]
	public void DOInitPos()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x24E1EE0", Offset = "0x24E1EE0", VA = "0x24E1EE0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x24E1F10", Offset = "0x24E1F10", VA = "0x24E1F10", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x24E1F5C", Offset = "0x24E1F5C", VA = "0x24E1F5C")]
	public void OnHideAreaSymbol(int AreaId, int id)
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x24E0DC0", Offset = "0x24E0DC0", VA = "0x24E0DC0")]
	public void clear_Map()
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x24E21F8", Offset = "0x24E21F8", VA = "0x24E21F8")]
	public void Show_Map(int id, string Storey)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x24E2F50", Offset = "0x24E2F50", VA = "0x24E2F50")]
	public void Incubation_GearSymbol(int id, int Area_ID, int Storey, Vector3 switchPos)
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x24E35DC", Offset = "0x24E35DC", VA = "0x24E35DC")]
	public void Incubation_Symbol()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x24E33E8", Offset = "0x24E33E8", VA = "0x24E33E8")]
	private void SetMaptran(GameObject G, Vector3 scale, Vector3 Pos, Vector3 EulerAngles, Transform parent)
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x24E43B8", Offset = "0x24E43B8", VA = "0x24E43B8")]
	private void Incubation_Map(int Asset_Id, int AreaID, Vector3 v3, Quaternion Q, List<int> Storey, bool isBigMap, bool isShow = false)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x24E4BCC", Offset = "0x24E4BCC", VA = "0x24E4BCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6D8FC", Offset = "0xE6D8FC")]
	public IEnumerator SetImage(Image image, string path)
	{
		return null;
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x24E4C60", Offset = "0x24E4C60", VA = "0x24E4C60")]
	public MapIncubation()
	{
	}
}
[Token(Token = "0x200039E")]
public class PostureUi : BaseUI
{
	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Rightchoice_Language;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button Leftchoice_Language;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text LanguageTextState;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text LanguageText;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isEnglish;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button Rightchoice_GameHeight;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button Leftchoice_GameHeight;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text GameHeightTextState;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string StrGameHeightTextState;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text GameHeightText;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button Rightchoice_RightHandMove;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button Leftchoice_RightHandMove;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text RightHandMoveTextState;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string StrRightHandMoveTextState;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text RightHandMoveText;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button Rightchoice_TranslationMask;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button LeftchoiceTranslationMask;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text TranslationMaskTextState;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text TranslationMaskText;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string StrTranslationMaskState;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button Rightchoice_SmoothRotation;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button Leftchoice_SmoothRotation;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text SmoothRotationTextState;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text SmoothRotationText;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string SmoothRotationState;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Button Rightchoice_LeftHandMove;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Button Leftchoice_LeftHandMove;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text LeftHandMoveTextState;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string StrLeftHandMoveTextState;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text LeftHandMoveText;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Button Confirm;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text TextConfirm;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text Hint;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text LanguageHint;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text LanguageConfirmText;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Button LanguageConfirm;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject RootLanguage;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string SmoothRotationOpen;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string SmoothRotationClose;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string TranslationMaskOpen;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string TranslationMaskClose;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string Stand_str;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string StandPosture_str;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string Translation;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string Teleport;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool IintisEnglish;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string languageStr;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private XRControllerCollector XRControllerCollector;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private XmlDocument xmlDoc;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private string fullPath;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private string RecordLanguageTextState;

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x2314BB8", Offset = "0x2314BB8", VA = "0x2314BB8", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x2315718", Offset = "0x2315718", VA = "0x2315718", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x2315B60", Offset = "0x2315B60", VA = "0x2315B60", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x2316158", Offset = "0x2316158", VA = "0x2316158", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x231542C", Offset = "0x231542C", VA = "0x231542C")]
	public void InitGame()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x2316658", Offset = "0x2316658", VA = "0x2316658")]
	private void Language_Page()
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x2316804", Offset = "0x2316804", VA = "0x2316804")]
	private void SmoothRotation_Page()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x23169A4", Offset = "0x23169A4", VA = "0x23169A4")]
	private void TranslationMask_Page()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x2316B44", Offset = "0x2316B44", VA = "0x2316B44")]
	private void GameHeight_Page()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x2316CE4", Offset = "0x2316CE4", VA = "0x2316CE4")]
	private void RightHandMove_Page()
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x2316EC8", Offset = "0x2316EC8", VA = "0x2316EC8")]
	private void LeftHandMove_Page()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x23170AC", Offset = "0x23170AC", VA = "0x23170AC")]
	public void LanguageSetupGame()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x2317650", Offset = "0x2317650", VA = "0x2317650")]
	public void SaveSttingData()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x2317860", Offset = "0x2317860", VA = "0x2317860")]
	public void SaveData()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x2317A9C", Offset = "0x2317A9C", VA = "0x2317A9C")]
	public void SetupGame()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x2318090", Offset = "0x2318090", VA = "0x2318090")]
	public PostureUi()
	{
	}
}
[Token(Token = "0x200039F")]
public class Screen_schedule : BaseUI
{
	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WUnit owner;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image hpTitle;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text hpText;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color hpColor1;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color hpColor2;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int hpThreshold;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int CurHp;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject LowHP;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject effect;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int FloatLargen;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int FloatReduce;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int plusORminusFontSize;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text Integral;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text plusORminus;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text energy;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform MoneyImage;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float LargenTime;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool Largen;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int IntegralRecord;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int delayInt;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine Coroutine;

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x24C001C", Offset = "0x24C001C", VA = "0x24C001C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x24C0020", Offset = "0x24C0020", VA = "0x24C0020", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x24C0338", Offset = "0x24C0338", VA = "0x24C0338", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x24C0378", Offset = "0x24C0378", VA = "0x24C0378", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x24C0558", Offset = "0x24C0558", VA = "0x24C0558")]
	private void Update()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x24C0E64", Offset = "0x24C0E64", VA = "0x24C0E64")]
	public void IntegralEvent()
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x24C1070", Offset = "0x24C1070", VA = "0x24C1070")]
	public void EnergyUI()
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x24C1148", Offset = "0x24C1148", VA = "0x24C1148")]
	public void IntegralUI()
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x24C0BD0", Offset = "0x24C0BD0", VA = "0x24C0BD0")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x24C12D8", Offset = "0x24C12D8", VA = "0x24C12D8")]
	public Screen_schedule()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x24C12E8", Offset = "0x24C12E8", VA = "0x24C12E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6D9AC", Offset = "0xE6D9AC")]
	private void <IntegralUI>b__32_0()
	{
	}
}
[Token(Token = "0x20003A0")]
public class QRCodeVerifyDTO : Singleton<QRCodeVerifyDTO>
{
	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool VerifyQRFlag;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int mPlayerNumbers;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> qrcodes;

	[Token(Token = "0x170001FF")]
	public int PlayerNumbers
	{
		[Token(Token = "0x6001479")]
		[Address(RVA = "0x27120C8", Offset = "0x27120C8", VA = "0x27120C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600147A")]
		[Address(RVA = "0x27120D0", Offset = "0x27120D0", VA = "0x27120D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public int SelectPlayerNumbers
	{
		[Token(Token = "0x600147B")]
		[Address(RVA = "0x27120D8", Offset = "0x27120D8", VA = "0x27120D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x2712158", Offset = "0x2712158", VA = "0x2712158")]
	public string[] GetAllQRCode()
	{
		return null;
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x27121CC", Offset = "0x27121CC", VA = "0x27121CC")]
	public void StartGame(Action<bool, string> cb)
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x2712230", Offset = "0x2712230", VA = "0x2712230")]
	public void VerifyQRCode(Action<bool, string> cb)
	{
	}

	[Token(Token = "0x600147F")]
	public static bool CompareArray<T>(T[] arr1, T[] arr2)
	{
		return default(bool);
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x2712294", Offset = "0x2712294", VA = "0x2712294")]
	public QRCodeVerifyDTO()
	{
	}
}
[Token(Token = "0x20003A1")]
public class ServerUIMessageView : BaseUI
{
	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image bg;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x24C7880", Offset = "0x24C7880", VA = "0x24C7880", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x24C79C0", Offset = "0x24C79C0", VA = "0x24C79C0", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x24C79DC", Offset = "0x24C79DC", VA = "0x24C79DC", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x24C7A38", Offset = "0x24C7A38", VA = "0x24C7A38", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x24C7A84", Offset = "0x24C7A84", VA = "0x24C7A84")]
	public void Close()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x24C7B60", Offset = "0x24C7B60", VA = "0x24C7B60")]
	private void Fade(float alpha, float duration)
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x24C7CD0", Offset = "0x24C7CD0", VA = "0x24C7CD0")]
	public void ShowMessage(string info)
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x24C7DD0", Offset = "0x24C7DD0", VA = "0x24C7DD0")]
	public ServerUIMessageView()
	{
	}
}
[Token(Token = "0x20003A2")]
public class ServerUIQRCodeItemView : BaseUI
{
	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text info_text;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ServerUIQRCodeView parentView;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string qrcode;

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x24C7DD8", Offset = "0x24C7DD8", VA = "0x24C7DD8", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x24C7F00", Offset = "0x24C7F00", VA = "0x24C7F00")]
	public void RefreshUI()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x24C7F2C", Offset = "0x24C7F2C", VA = "0x24C7F2C")]
	public void RemoveBtn()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x24C7FF8", Offset = "0x24C7FF8", VA = "0x24C7FF8")]
	public ServerUIQRCodeItemView()
	{
	}
}
[Token(Token = "0x20003A3")]
public class ServerUIQRCodeView : BaseUI
{
	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button Close_Btn;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Clear_Btn;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button verify_Btn;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputField QRCode_Input;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject QRCodeItemPrefab;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GridLayoutGroup QRCodeGrid;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ServerUIQRCodeItemView> qrcodeItems;

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x24C8000", Offset = "0x24C8000", VA = "0x24C8000", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x24C8008", Offset = "0x24C8008", VA = "0x24C8008", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x24C8024", Offset = "0x24C8024", VA = "0x24C8024", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x24C8080", Offset = "0x24C8080", VA = "0x24C8080", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x24C80DC", Offset = "0x24C80DC", VA = "0x24C80DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x24C815C", Offset = "0x24C815C", VA = "0x24C815C")]
	public void CloseBtn()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x24C8238", Offset = "0x24C8238", VA = "0x24C8238")]
	public void ClearBtn()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x24C83CC", Offset = "0x24C83CC", VA = "0x24C83CC")]
	public void VerifyBtn()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x24C80E0", Offset = "0x24C80E0", VA = "0x24C80E0")]
	private void MonitorQRCode()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x24C83D0", Offset = "0x24C83D0", VA = "0x24C83D0")]
	private void AddItem(string qrcode)
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x24C7F48", Offset = "0x24C7F48", VA = "0x24C7F48")]
	public void RemoveItem(ServerUIQRCodeItemView item)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x24C823C", Offset = "0x24C823C", VA = "0x24C823C")]
	public void RemoveAllItem()
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x24C869C", Offset = "0x24C869C", VA = "0x24C869C")]
	public ServerUIQRCodeView()
	{
	}
}
[Token(Token = "0x20003A4")]
public class ServerUIView : BaseUI
{
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55B24", Offset = "0xE55B24")]
	private sealed class <DoRefresh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerUIView <>4__this;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x2061358", Offset = "0x2061358", VA = "0x2061358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x20613A0", Offset = "0x20613A0", VA = "0x20613A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x2061274", Offset = "0x2061274", VA = "0x2061274")]
		[DebuggerHidden]
		public <DoRefresh>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x20612A0", Offset = "0x20612A0", VA = "0x20612A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x20612A4", Offset = "0x20612A4", VA = "0x20612A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x2061360", Offset = "0x2061360", VA = "0x2061360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55B34", Offset = "0xE55B34")]
	private sealed class <>c
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__43_0;

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x2061268", Offset = "0x2061268", VA = "0x2061268")]
		public <>c()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x2061270", Offset = "0x2061270", VA = "0x2061270")]
		internal void <.ctor>b__43_0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Time_Text;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Game_Btn;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Game_Btn_Text;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button Video_Btn;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text Video_Btn_Text;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GridLayoutGroup Role_Item_Grid;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject RoleItemPrefab;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button StartQRCode_Btn;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text AvailablePlayer_Text;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BaseUI QRCodeView;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public ServerUIMessageView MessageView;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text Version_Text;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<bool> GameStatusEvent;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool GameVideoStatus;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<PlayerData, ServerUIViewRoleCell> roleToUIItemDic;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, string> timerStrDic;

	[Token(Token = "0x17000201")]
	private bool GameStatus
	{
		[Token(Token = "0x600149A")]
		[Address(RVA = "0x24C8720", Offset = "0x24C8720", VA = "0x24C8720")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000202")]
	public double GameTime
	{
		[Token(Token = "0x600149B")]
		[Address(RVA = "0x24C87F4", Offset = "0x24C87F4", VA = "0x24C87F4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x24C8878", Offset = "0x24C8878", VA = "0x24C8878", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x24C89F0", Offset = "0x24C89F0", VA = "0x24C89F0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x24C8B40", Offset = "0x24C8B40", VA = "0x24C8B40")]
	private void LockUI()
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x24C8C80", Offset = "0x24C8C80", VA = "0x24C8C80")]
	private void UnLockUI()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x24C8DC0", Offset = "0x24C8DC0", VA = "0x24C8DC0", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x24C8DDC", Offset = "0x24C8DDC", VA = "0x24C8DDC", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x24C9040", Offset = "0x24C9040", VA = "0x24C9040", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x24C9088", Offset = "0x24C9088", VA = "0x24C9088")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x24C8AD4", Offset = "0x24C8AD4", VA = "0x24C8AD4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x24C91E0", Offset = "0x24C91E0", VA = "0x24C91E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6D9BC", Offset = "0xE6D9BC")]
	private IEnumerator DoRefresh()
	{
		return null;
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x24C9258", Offset = "0x24C9258", VA = "0x24C9258")]
	private void DoRefresh1()
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x24C9594", Offset = "0x24C9594", VA = "0x24C9594")]
	private void ChangePlatfromVerifyView()
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x24C9650", Offset = "0x24C9650", VA = "0x24C9650")]
	private void ChangeAvailablePlayerText()
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x24C928C", Offset = "0x24C928C", VA = "0x24C928C")]
	private void ChangeVideoBtnText()
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x24C9310", Offset = "0x24C9310", VA = "0x24C9310")]
	private void ChangeGameBtnText()
	{
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x24C9398", Offset = "0x24C9398", VA = "0x24C9398")]
	private void ChangeRoleItems()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x24C972C", Offset = "0x24C972C", VA = "0x24C972C")]
	public void AddAndChangeRoleItem(PlayerData data)
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x24C9654", Offset = "0x24C9654", VA = "0x24C9654")]
	public void RemoveRoleItem(PlayerData data)
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x24C908C", Offset = "0x24C908C", VA = "0x24C908C")]
	public void UpdateGameTimer()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x24C9968", Offset = "0x24C9968", VA = "0x24C9968")]
	private string GetTimeStr(int num)
	{
		return null;
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x24C9A38", Offset = "0x24C9A38", VA = "0x24C9A38")]
	public void OnStartGame()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x24C9AD8", Offset = "0x24C9AD8", VA = "0x24C9AD8")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x24C9B78", Offset = "0x24C9B78", VA = "0x24C9B78")]
	public ServerUIView()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x24C9D30", Offset = "0x24C9D30", VA = "0x24C9D30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DA1C", Offset = "0xE6DA1C")]
	private void <OnInit>b__20_0()
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x24C9DFC", Offset = "0x24C9DFC", VA = "0x24C9DFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DA2C", Offset = "0xE6DA2C")]
	private void <OnInit>b__20_3()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x24C9E1C", Offset = "0x24C9E1C", VA = "0x24C9E1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DA3C", Offset = "0xE6DA3C")]
	private void <OnInit>b__20_1()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x24C9E4C", Offset = "0x24C9E4C", VA = "0x24C9E4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DA4C", Offset = "0xE6DA4C")]
	private void <OnInit>b__20_2()
	{
	}
}
[Token(Token = "0x20003A7")]
public class ServerUIViewRoleCell : BaseUI
{
	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image enableStatus_Image;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger enableStatus_Trigger;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerInfo_ip_Text;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text playerInfo_roleType_Image;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventTrigger playerInfo_roleType_Trigger;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text playerInfo_weaponType_Image;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EventTrigger playerInfo_weaponType_Trigger;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text playerInfo_groupType_Image;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EventTrigger playerInfo_groupType_Trigger;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private e_Player_Style player_stype;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private e_weapon_group weapon_stype;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private e_group_type group_stype;

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x21533F4", Offset = "0x21533F4", VA = "0x21533F4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x2153520", Offset = "0x2153520", VA = "0x2153520", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x2153548", Offset = "0x2153548", VA = "0x2153548")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x21536EC", Offset = "0x21536EC", VA = "0x21536EC")]
	private void ChangeEnableStatus()
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x2153594", Offset = "0x2153594", VA = "0x2153594")]
	private void SwitchEnableStatus()
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x21535E8", Offset = "0x21535E8", VA = "0x21535E8")]
	public void ChangePlayerInfo()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x215399C", Offset = "0x215399C", VA = "0x215399C")]
	public void ChangePlayerType(e_Player_Style curType)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x2153790", Offset = "0x2153790", VA = "0x2153790")]
	public void SwitchPlayerImage(e_Player_Style curType)
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x2153B18", Offset = "0x2153B18", VA = "0x2153B18")]
	public void ChangeWeaponType(e_weapon_group curType)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x2153838", Offset = "0x2153838", VA = "0x2153838")]
	public void SwitchWeaponImage(e_weapon_group curType)
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x2153C94", Offset = "0x2153C94", VA = "0x2153C94")]
	public void ChangeGroupType(e_group_type curType)
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x21538E0", Offset = "0x21538E0", VA = "0x21538E0")]
	public void SwitchGroupImage(e_group_type curType)
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x2153D54", Offset = "0x2153D54", VA = "0x2153D54")]
	public void OnEnableBtnClick()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x2153D58", Offset = "0x2153D58", VA = "0x2153D58")]
	public void OnPlayerBtnClick()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x2153D60", Offset = "0x2153D60", VA = "0x2153D60")]
	public void OnWeaponBtnClick()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x2153D68", Offset = "0x2153D68", VA = "0x2153D68")]
	public void OnGroupBtnClick()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x2153D70", Offset = "0x2153D70", VA = "0x2153D70")]
	public void LockUI()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x2153DDC", Offset = "0x2153DDC", VA = "0x2153DDC")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x2153E48", Offset = "0x2153E48", VA = "0x2153E48")]
	public ServerUIViewRoleCell()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x2153E50", Offset = "0x2153E50", VA = "0x2153E50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DAAC", Offset = "0xE6DAAC")]
	private void <OnInit>b__13_0(BaseEventData data)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x2153EF8", Offset = "0x2153EF8", VA = "0x2153EF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DABC", Offset = "0xE6DABC")]
	private void <OnInit>b__13_1()
	{
	}
}
[Token(Token = "0x20003A8")]
public class AttributesItemCell : BaseCell
{
	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text AttributesName;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image AttributesTypeIcon;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text AttributesPrice;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public e_attributes_type Attributes_Type;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text lv0;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int lv;

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x28F9DA0", Offset = "0x28F9DA0", VA = "0x28F9DA0")]
	public void SetBulletItem(e_attributes_type attributes_type, Sprite AttributesIcon)
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x28F9F40", Offset = "0x28F9F40", VA = "0x28F9F40")]
	public void InitSetAttributes(e_attributes_type attributes_type)
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x28FA104", Offset = "0x28FA104", VA = "0x28FA104")]
	public void PlayCurrencyAudio()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x28FA1B0", Offset = "0x28FA1B0", VA = "0x28FA1B0")]
	public void Buy(WUnit owner, int data)
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x28FA548", Offset = "0x28FA548", VA = "0x28FA548")]
	public AttributesItemCell()
	{
	}
}
[Token(Token = "0x20003A9")]
public class AttributesUI : BaseUI
{
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class WeaponUIData
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type WeaponType;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite WeaponSprite;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite WeaponBulletSprite;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject HoverEffect;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x20F14E4", Offset = "0x20F14E4", VA = "0x20F14E4")]
		public WeaponUIData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AB")]
	public class BulletUIData
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_bullet_type BulletType;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite BulletSprite;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x20F14DC", Offset = "0x20F14DC", VA = "0x20F14DC")]
		public BulletUIData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AC")]
	public class AttributesUIData
	{
		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_attributes_type AttributesType;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite AttributesSprite;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AttributesItemCell AttributesItem;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x20F14D4", Offset = "0x20F14D4", VA = "0x20F14D4")]
		public AttributesUIData()
		{
		}
	}

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61BB4", Offset = "0xE61BB4")]
	public GameObject WorkbenchRoot;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61BEC", Offset = "0xE61BEC")]
	public GameObject CurrencyRoot;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button ReturnHome;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Energys;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button Rightchoice;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button Leftchoice;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GridLayoutGroup gridLayoutGroup;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button PurchaseBtn;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image PurchaseFilled;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button Unlock;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image UnlockFilled;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61C24", Offset = "0xE61C24")]
	public Sprite UnlockSprite;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite UnlockSpriteState;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BaseCell UnlockBaseCell;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61C5C", Offset = "0xE61C5C")]
	public Text BuyText;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61C94", Offset = "0xE61C94")]
	public Button EquipmentShopBtn;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject EquipmentShopRoot;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject EquipmentCell;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GridLayoutGroup EquipmentGridLayoutGroup;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61CCC", Offset = "0xE61CCC")]
	public Button Weapon_AttributesShopBtn;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject Weapon_AttributesShopRoot;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject Weapon_AttributesCell;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GridLayoutGroup Weapon_AttributesGridLayoutGroup;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61D04", Offset = "0xE61D04")]
	public List<AttributesUIData> Weapon_AttributesUIDataList;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61D3C", Offset = "0xE61D3C")]
	public List<AttributesUIData> Equipment_AttributesUIDataList;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61D74", Offset = "0xE61D74")]
	public Text TextExplain;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SwitchInfoData Gun_Switch;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform WeaponDropPoint;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private WUnit owner;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int maxPages;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int PageDisplays;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int PaddingLeft;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int maxPaddingLeft;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int Pageindex;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool IsPageShow;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject curSelect;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool IsBuyDown;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float Delay;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float time;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private e_Shop_Type shop_Type;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private FollowVRController rightFollowVRController;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private FollowVRController leftFollowVRController;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x28FA558", Offset = "0x28FA558", VA = "0x28FA558", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x28FAC7C", Offset = "0x28FAC7C", VA = "0x28FAC7C", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x28FB1D4", Offset = "0x28FB1D4", VA = "0x28FB1D4", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x28FB580", Offset = "0x28FB580", VA = "0x28FB580", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x28FB240", Offset = "0x28FB240", VA = "0x28FB240")]
	private void Hide()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x28FB780", Offset = "0x28FB780", VA = "0x28FB780")]
	private void Update()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x28FB7C4", Offset = "0x28FB7C4", VA = "0x28FB7C4")]
	private void GetUpdateCurSelectedObj()
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x28FBA2C", Offset = "0x28FBA2C", VA = "0x28FBA2C")]
	private void SetUpdateBuyFilled()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x28FB188", Offset = "0x28FB188", VA = "0x28FB188")]
	public void CurrencyUIStatus(bool isShow = true)
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x28FC130", Offset = "0x28FC130", VA = "0x28FC130")]
	private void GoldUI()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x28FC19C", Offset = "0x28FC19C", VA = "0x28FC19C")]
	public void ReturnWorkbench()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x28FC338", Offset = "0x28FC338", VA = "0x28FC338")]
	private void SetPage(int uiCount, int pageDisplays, GridLayoutGroup layoutGroup)
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x28FC4F0", Offset = "0x28FC4F0", VA = "0x28FC4F0")]
	private void PageRight()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x28FC6E8", Offset = "0x28FC6E8", VA = "0x28FC6E8")]
	private void PageLeft()
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x28FBC14", Offset = "0x28FBC14", VA = "0x28FBC14")]
	private void PlayCurrencyAudio()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x28FC8DC", Offset = "0x28FC8DC", VA = "0x28FC8DC")]
	private void EnterEquipmentShop()
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x28FA944", Offset = "0x28FA944", VA = "0x28FA944")]
	private void EquipmentAttributesDisplay()
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x28FC9FC", Offset = "0x28FC9FC", VA = "0x28FC9FC")]
	private void EnterAttributesShop()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x28FA614", Offset = "0x28FA614", VA = "0x28FA614")]
	private void AttributesDisplay()
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x28FCB1C", Offset = "0x28FCB1C", VA = "0x28FCB1C")]
	public void SetExplainText(string str)
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x28FBDD8", Offset = "0x28FBDD8", VA = "0x28FBDD8")]
	private void AttributesBuy()
	{
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x28FCB40", Offset = "0x28FCB40", VA = "0x28FCB40")]
	public void OnPointerDown(BaseEventData baseEventData)
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x28FCEAC", Offset = "0x28FCEAC", VA = "0x28FCEAC")]
	public void OnPointerUp()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x28FD028", Offset = "0x28FD028", VA = "0x28FD028")]
	public AttributesUI()
	{
	}
}
[Token(Token = "0x20003AD")]
public class BaseCell : MonoBehaviour
{
	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61DBC", Offset = "0xE61DBC")]
	public Button BuyButton;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61DF4", Offset = "0xE61DF4")]
	public bool IsUnlock;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string TextExplain;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<string> ExplainAction;

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x29010C0", Offset = "0x29010C0", VA = "0x29010C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x29010CC", Offset = "0x29010CC", VA = "0x29010CC", Slot = "4")]
	protected virtual void DoUpdate()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x28FA550", Offset = "0x28FA550", VA = "0x28FA550")]
	public BaseCell()
	{
	}
}
[Token(Token = "0x20003AE")]
public class BulletItemCell : BaseCell
{
	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text AddBulletCount;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image bulleTypeIcon;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BulletPrice;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public e_bullet_type Bullet_Type;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61E3C", Offset = "0xE61E3C")]
	public ParticleSystem Take_Effects;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.Particle[] arrTake;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int arrCount;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isPlayEffect;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 target;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float systime;

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x27D48A8", Offset = "0x27D48A8", VA = "0x27D48A8")]
	public void SetBulletItem(e_bullet_type e_Bullet_Type, Sprite bulleIcon)
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x27D4A50", Offset = "0x27D4A50", VA = "0x27D4A50")]
	public void PlayCurrencyAudio()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x27D4B00", Offset = "0x27D4B00", VA = "0x27D4B00")]
	public void Buy(Vector3 pos)
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x27D4CAC", Offset = "0x27D4CAC", VA = "0x27D4CAC", Slot = "4")]
	protected override void DoUpdate()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x27D4F04", Offset = "0x27D4F04", VA = "0x27D4F04")]
	public BulletItemCell()
	{
	}
}
[Token(Token = "0x20003AF")]
public class RelicsScreenUI : BaseUI
{
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class RelicsUIData
	{
		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Root;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image RelicsImage;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text RelicsText;

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x2060344", Offset = "0x2060344", VA = "0x2060344")]
		public RelicsUIData()
		{
		}
	}

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<RelicsUIData> RelicsUIDatas;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int index;

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x2720814", Offset = "0x2720814", VA = "0x2720814", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x27208F0", Offset = "0x27208F0", VA = "0x27208F0", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x272083C", Offset = "0x272083C", VA = "0x272083C")]
	public void ResetRelics()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x27203A8", Offset = "0x27203A8", VA = "0x27203A8")]
	public void SetRelics(e_RelicsType relicsType, Sprite relicsSprite)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x2720918", Offset = "0x2720918", VA = "0x2720918")]
	public RelicsScreenUI()
	{
	}
}
[Token(Token = "0x20003B1")]
public class ShopUI : BaseUI
{
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class WeaponUIData
	{
		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type WeaponType;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite WeaponSprite;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite WeaponBulletSprite;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject HoverEffect;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public WeaponItemCell weaponItem;

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x2061734", Offset = "0x2061734", VA = "0x2061734")]
		public WeaponUIData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003B3")]
	public class BulletUIData
	{
		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_bullet_type BulletType;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite BulletSprite;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public BulletItemCell BulletItem;

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x206172C", Offset = "0x206172C", VA = "0x206172C")]
		public BulletUIData()
		{
		}
	}

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61E74", Offset = "0xE61E74")]
	public GameObject WorkbenchRoot;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61EAC", Offset = "0xE61EAC")]
	public GameObject CurrencyRoot;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button ReturnHome;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Golds;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button Rightchoice;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button Leftchoice;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GridLayoutGroup gridLayoutGroup;

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button PurchaseBtn;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image PurchaseFilled;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button Unlock;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image UnlockFilled;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61EE4", Offset = "0xE61EE4")]
	public Sprite UnlockSprite;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite UnlockSpriteState;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BaseCell UnlockBaseCell;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61F1C", Offset = "0xE61F1C")]
	public Text BuyText;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61F54", Offset = "0xE61F54")]
	public Button EquipmentShopBtn;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject EquipmentShopRoot;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61F8C", Offset = "0xE61F8C")]
	public Button WeaponShopBtn;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject WeaponShopRoot;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject WeaponCell;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GridLayoutGroup WeaponGridLayoutGroup;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61FC4", Offset = "0xE61FC4")]
	public Button BulletShopBtn;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject BulletShopRoot;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject BulletCell;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GridLayoutGroup BulletGridLayoutGroup;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE61FFC", Offset = "0xE61FFC")]
	public List<WeaponUIData> WeaponUIDataList;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62034", Offset = "0xE62034")]
	public List<BulletUIData> BullteUIDataList;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SwitchInfoData Gun_Switch;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6206C", Offset = "0xE6206C")]
	public Text TextExplain;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform WeaponDropPoint;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private WUnit owner;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int maxPages;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int PageDisplays;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int PaddingLeft;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int maxPaddingLeft;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int Pageindex;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool IsPageShow;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject curSelect;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool IsBuyDown;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float Delay;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float time;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private e_Shop_Type shop_Type;

	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private FollowVRController rightFollowVRController;

	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private FollowVRController leftFollowVRController;

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x215A2FC", Offset = "0x215A2FC", VA = "0x215A2FC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x215AABC", Offset = "0x215AABC", VA = "0x215AABC", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x215B044", Offset = "0x215B044", VA = "0x215B044", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x215B3D4", Offset = "0x215B3D4", VA = "0x215B3D4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x215B0C8", Offset = "0x215B0C8", VA = "0x215B0C8")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x215B3FC", Offset = "0x215B3FC", VA = "0x215B3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x215B440", Offset = "0x215B440", VA = "0x215B440")]
	private void GetUpdateCurSelectedObj()
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x215B6A0", Offset = "0x215B6A0", VA = "0x215B6A0")]
	private void SetUpdateBuyFilled()
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x215AFF8", Offset = "0x215AFF8", VA = "0x215AFF8")]
	public void CurrencyUIStatus(bool isShow = true)
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x215C1E0", Offset = "0x215C1E0", VA = "0x215C1E0")]
	private void GoldUI()
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x215C24C", Offset = "0x215C24C", VA = "0x215C24C")]
	public void ReturnWorkbench()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x215C41C", Offset = "0x215C41C", VA = "0x215C41C")]
	private void SetPage(int uiCount, int pageDisplays, GridLayoutGroup layoutGroup)
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x215C5D4", Offset = "0x215C5D4", VA = "0x215C5D4")]
	private void PageRight()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x215C7CC", Offset = "0x215C7CC", VA = "0x215C7CC")]
	private void PageLeft()
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x215C9C0", Offset = "0x215C9C0", VA = "0x215C9C0")]
	public void SetExplainText(string str)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x215B8A4", Offset = "0x215B8A4", VA = "0x215B8A4")]
	private void PlayCurrencyAudio()
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x215C9E4", Offset = "0x215C9E4", VA = "0x215C9E4")]
	private void EnterEquipmentShop()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x215CADC", Offset = "0x215CADC", VA = "0x215CADC")]
	private void EnterWeaponShop()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x215A3C0", Offset = "0x215A3C0", VA = "0x215A3C0")]
	private void WeaponDisplay()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x215CC10", Offset = "0x215CC10", VA = "0x215CC10")]
	private void WeaponUnlock()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x215B954", Offset = "0x215B954", VA = "0x215B954")]
	private void WeaponBuy()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x215CEAC", Offset = "0x215CEAC", VA = "0x215CEAC")]
	private void WeaponGetAudio(e_weapon_type weapon_Type)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x215D128", Offset = "0x215D128", VA = "0x215D128")]
	private void EnterBulletShop()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x215A7C4", Offset = "0x215A7C4", VA = "0x215A7C4")]
	private void BulletDisplay()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x215BE54", Offset = "0x215BE54", VA = "0x215BE54")]
	private void BulletBuy()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x215D248", Offset = "0x215D248", VA = "0x215D248")]
	public void OnPointerDown(BaseEventData baseEventData)
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x215D5B8", Offset = "0x215D5B8", VA = "0x215D5B8")]
	public void OnPointerUp()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x215D738", Offset = "0x215D738", VA = "0x215D738")]
	public ShopUI()
	{
	}
}
[Token(Token = "0x20003B4")]
public class WeaponItemCell : BaseCell, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE620C4", Offset = "0xE620C4")]
	public Sprite lockSprite;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite UnlockSprite;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite lockSpriteState;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite UnlockSpriteState;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE620FC", Offset = "0xE620FC")]
	public Text WeaponName;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color UnlockNameColor;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color lockNameColor;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62134", Offset = "0xE62134")]
	public Image WeaponIcon;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6216C", Offset = "0xE6216C")]
	public Text WeaponPrice;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE621A4", Offset = "0xE621A4")]
	public Image ShopOrLockIcon;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite ShopIconSprite;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite LockIconSprite;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE621DC", Offset = "0xE621DC")]
	public Image WeaponBullet;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public e_weapon_type weapon_Type;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SpriteState spriteState;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private StoreItemData storeItemData;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject HoverEffect;

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x2987694", Offset = "0x2987694", VA = "0x2987694")]
	public void SetWeaponItem(e_weapon_type e_weapon_Type, bool isUnlock, Sprite WeaponSprite, Sprite WeaponBulletSprite, GameObject hoverEffect)
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x2987E64", Offset = "0x2987E64", VA = "0x2987E64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x2987EF4", Offset = "0x2987EF4", VA = "0x2987EF4")]
	public void WeaponUnlock()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x2988090", Offset = "0x2988090", VA = "0x2988090", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x29880B0", Offset = "0x29880B0", VA = "0x29880B0", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x29880D0", Offset = "0x29880D0", VA = "0x29880D0")]
	public void PlayCurrencyAudio()
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x2988180", Offset = "0x2988180", VA = "0x2988180", Slot = "7")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x2988184", Offset = "0x2988184", VA = "0x2988184")]
	public WeaponItemCell()
	{
	}
}
[Token(Token = "0x20003B5")]
public class StatiscalUI : BaseUI
{
	[Token(Token = "0x20003B6")]
	private struct ScoreRange
	{
		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55B44", Offset = "0xE55B44")]
	private sealed class <UpdateView>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatiscalUI <>4__this;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.WaitForEndOfFrame <wait>5__2;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x2062DA4", Offset = "0x2062DA4", VA = "0x2062DA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x2062DEC", Offset = "0x2062DEC", VA = "0x2062DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x2061AF8", Offset = "0x2061AF8", VA = "0x2061AF8")]
		[DebuggerHidden]
		public <UpdateView>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x2061B24", Offset = "0x2061B24", VA = "0x2061B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x2061B28", Offset = "0x2061B28", VA = "0x2061B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x2062DAC", Offset = "0x2062DAC", VA = "0x2062DAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] itemCells;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject infoRoot;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject imageRoot;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RawImage rawImage;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] sprites;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color selfNameColor;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color selfInfoColor;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color otherNameColor;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color otherInfoColor;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D winTexture;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture2D failTexture;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int winTextId;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int failTextId;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text stateText;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float speed;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float holdTime;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float displayDis;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public AudioEvent audioEvent_win;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent audioEvent_lost;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public StateInfoData bgmLostState;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public StateInfoData bgmState;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine coroutine;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine sObj;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine sObj2;

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x2166D60", Offset = "0x2166D60", VA = "0x2166D60", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x2166D90", Offset = "0x2166D90", VA = "0x2166D90", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0x2167148", Offset = "0x2167148", VA = "0x2167148", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x21670E0", Offset = "0x21670E0", VA = "0x21670E0")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x2166ECC", Offset = "0x2166ECC", VA = "0x2166ECC")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x21673E8", Offset = "0x21673E8", VA = "0x21673E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6DACC", Offset = "0xE6DACC")]
	private IEnumerator UpdateView()
	{
		return null;
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x2167460", Offset = "0x2167460", VA = "0x2167460")]
	private void UpdateItem(Transform item, bool isSelf, StatisticalManager.StatisticalResultData data, PlayerData playerData)
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x2167BEC", Offset = "0x2167BEC", VA = "0x2167BEC")]
	private string SetGameIntensityInfo()
	{
		return null;
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0x2167D74", Offset = "0x2167D74", VA = "0x2167D74")]
	public StatiscalUI()
	{
	}
}
[Token(Token = "0x20003B8")]
public class UnitNormalNameHUD : BaseHUDView
{
	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text nameText;

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x2370228", Offset = "0x2370228", VA = "0x2370228")]
	public void SetNameText(string name)
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x23702D4", Offset = "0x23702D4", VA = "0x23702D4")]
	public void SetNameColor(Color cl)
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x23703A4", Offset = "0x23703A4", VA = "0x23703A4")]
	public void ShowNameTextActive(bool isActive)
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0x2370454", Offset = "0x2370454", VA = "0x2370454")]
	public void ShowNameTextFontSize(int size)
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x23704F8", Offset = "0x23704F8", VA = "0x23704F8", Slot = "6")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x23704FC", Offset = "0x23704FC", VA = "0x23704FC")]
	public UnitNormalNameHUD()
	{
	}
}
[Token(Token = "0x20003B9")]
public class VRDeviceSelectorCell : BaseUI
{
	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ConnectImg;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text playerInfo_ip_Text;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerInfo_roleType_Image;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventTrigger playerInfo_roleType_Trigger;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_ControllerSelector.ControllerData data;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_ControllerSelector selector;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int cotrollerIndex;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string cotroller;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int deviceIndex;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string device;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isConnect;

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x2375B48", Offset = "0x2375B48", VA = "0x2375B48", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x2375BBC", Offset = "0x2375BBC", VA = "0x2375BBC", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x2376098", Offset = "0x2376098", VA = "0x2376098")]
	public void SetData(int index, SteamVR_ControllerSelector sellect, SteamVR_ControllerSelector.ControllerData data)
	{
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x2375BE4", Offset = "0x2375BE4", VA = "0x2375BE4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x23763B0", Offset = "0x23763B0", VA = "0x23763B0")]
	public void ChangePlayerType(int curIndex)
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x2376188", Offset = "0x2376188", VA = "0x2376188")]
	private Dictionary<string, SteamVR_ControllerSelector.DeviceCodeInfo> GetRealCtrDic()
	{
		return null;
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x23766C8", Offset = "0x23766C8", VA = "0x23766C8")]
	public void OnPlayerBtnClick()
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x237674C", Offset = "0x237674C", VA = "0x237674C")]
	public void LockUI()
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x237676C", Offset = "0x237676C", VA = "0x237676C")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x237678C", Offset = "0x237678C", VA = "0x237678C")]
	public VRDeviceSelectorCell()
	{
	}
}
[Token(Token = "0x20003BA")]
public class VRDeviceSelectorUIView : BaseUI
{
	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button Game_Btn;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Save_Btn;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GridLayoutGroup Role_Item_Grid;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<VRDeviceSelectorCell> deviceUIItemDic;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_ControllerSelector m_controllerSelector;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float delayTime;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float updateDelayTime;

	[Token(Token = "0x17000207")]
	private SteamVR_ControllerSelector Selector
	{
		[Token(Token = "0x6001548")]
		[Address(RVA = "0x237680C", Offset = "0x237680C", VA = "0x237680C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x23768D0", Offset = "0x23768D0", VA = "0x23768D0", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x23769C8", Offset = "0x23769C8", VA = "0x23769C8")]
	private void LockUI()
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x23769CC", Offset = "0x23769CC", VA = "0x23769CC")]
	private void UnLockUI()
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x23769D0", Offset = "0x23769D0", VA = "0x23769D0", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x23769EC", Offset = "0x23769EC", VA = "0x23769EC", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x2376A24", Offset = "0x2376A24", VA = "0x2376A24", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0x2376A68", Offset = "0x2376A68", VA = "0x2376A68")]
	private void Update()
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0x2376A64", Offset = "0x2376A64", VA = "0x2376A64")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x2376B60", Offset = "0x2376B60", VA = "0x2376B60")]
	private void ChangeRoleItems()
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0x2376CF4", Offset = "0x2376CF4", VA = "0x2376CF4")]
	public void DoSaveConfig()
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0x2376D94", Offset = "0x2376D94", VA = "0x2376D94")]
	public void OnStartGame()
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0x2376E2C", Offset = "0x2376E2C", VA = "0x2376E2C")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0x2376EC4", Offset = "0x2376EC4", VA = "0x2376EC4")]
	public VRDeviceSelectorUIView()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0x2376F50", Offset = "0x2376F50", VA = "0x2376F50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DB7C", Offset = "0xE6DB7C")]
	private void <OnInit>b__10_0()
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0x2377000", Offset = "0x2377000", VA = "0x2377000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DB8C", Offset = "0xE6DB8C")]
	private void <OnInit>b__10_2()
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0x2377020", Offset = "0x2377020", VA = "0x2377020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DB9C", Offset = "0xE6DB9C")]
	private void <OnInit>b__10_1()
	{
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0x23770D0", Offset = "0x23770D0", VA = "0x23770D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DBAC", Offset = "0xE6DBAC")]
	private void <OnInit>b__10_3()
	{
	}
}
[Token(Token = "0x20003BB")]
public class WaitingforDeathUIView : BaseUI
{
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55B54", Offset = "0xE55B54")]
	private sealed class <WaitGet>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaitingforDeathUIView <>4__this;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x20651BC", Offset = "0x20651BC", VA = "0x20651BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x2065204", Offset = "0x2065204", VA = "0x2065204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x2064FA8", Offset = "0x2064FA8", VA = "0x2064FA8")]
		[DebuggerHidden]
		public <WaitGet>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x2064FD4", Offset = "0x2064FD4", VA = "0x2064FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x2064FD8", Offset = "0x2064FD8", VA = "0x2064FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x20651C4", Offset = "0x20651C4", VA = "0x20651C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text BeStruckText;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text killText;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text headText;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text deathText;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text TitleText;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject RawImage;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image ResurgenceImg;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text ResurgenceText;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Deathtime;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float time;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isTimer;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float forwardOffset;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private StatisticalManager.StatisticalResultData scell;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine cton;

	[Token(Token = "0x600155A")]
	[Address(RVA = "0x2978EE4", Offset = "0x2978EE4", VA = "0x2978EE4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x2978FC0", Offset = "0x2978FC0", VA = "0x2978FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x2979144", Offset = "0x2979144", VA = "0x2979144")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x2979148", Offset = "0x2979148", VA = "0x2979148")]
	private void UpdateFollowCamera()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x29792D4", Offset = "0x29792D4", VA = "0x29792D4", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x297933C", Offset = "0x297933C", VA = "0x297933C", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x297944C", Offset = "0x297944C", VA = "0x297944C")]
	public void Die(WUnit attacker, WUnit unit)
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x29798BC", Offset = "0x29798BC", VA = "0x29798BC")]
	private void GetPlayerDate()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x2979844", Offset = "0x2979844", VA = "0x2979844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6DBBC", Offset = "0xE6DBBC")]
	private IEnumerator WaitGet()
	{
		return null;
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x2979AC0", Offset = "0x2979AC0", VA = "0x2979AC0")]
	public WaitingforDeathUIView()
	{
	}
}
[Token(Token = "0x20003BD")]
public class WeaponInfoUI : BaseUI
{
	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hpTitle;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ammoTitle;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text hpText;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ammoText;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ammoText2;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color hpColor1;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color hpColor2;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color ammoColor1;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color ammoColor2;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE622F4", Offset = "0xE622F4")]
	public float hpThreshold;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6230C", Offset = "0xE6230C")]
	public float ammoThreshold;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WUnit owner;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Weapon weapon;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int maxValue;

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x2986AE8", Offset = "0x2986AE8", VA = "0x2986AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x2986AFC", Offset = "0x2986AFC", VA = "0x2986AFC", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x2986C24", Offset = "0x2986C24", VA = "0x2986C24", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0x2986C64", Offset = "0x2986C64", VA = "0x2986C64")]
	private void Update()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x2986FC4", Offset = "0x2986FC4", VA = "0x2986FC4")]
	public WeaponInfoUI()
	{
	}
}
[Token(Token = "0x20003BE")]
public class WeaponInfoUI_Slide : BaseUI
{
	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image CDSchedule;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image Skill_Slide;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BulletNumber;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WUnit owner;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Weapon weapon;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool Largen;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float LargenTime;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int IntegralRecord;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float followDis;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float followSpeed;

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x2986FD4", Offset = "0x2986FD4", VA = "0x2986FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x2986FE8", Offset = "0x2986FE8", VA = "0x2986FE8", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x2987338", Offset = "0x2987338", VA = "0x2987338", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x29875A8", Offset = "0x29875A8", VA = "0x29875A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0x29875AC", Offset = "0x29875AC", VA = "0x29875AC")]
	public void IntegralUI(WUnit Owner)
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0x2987680", Offset = "0x2987680", VA = "0x2987680")]
	public WeaponInfoUI_Slide()
	{
	}
}
[Token(Token = "0x20003BF")]
public class XRTagUI : BaseUI
{
	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ForwardUI;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject TagUI;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text text;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int Operate;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int TextLanguageIndex;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Weapon weapon;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isShow;

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x20E4C04", Offset = "0x20E4C04", VA = "0x20E4C04", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x20E4C9C", Offset = "0x20E4C9C", VA = "0x20E4C9C", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0x20E51A8", Offset = "0x20E51A8", VA = "0x20E51A8")]
	public void Show_TagUI(WUnit wUnit)
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x20E56A0", Offset = "0x20E56A0", VA = "0x20E56A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0x20E56B0", Offset = "0x20E56B0", VA = "0x20E56B0")]
	public void LookatVRHead()
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0x20E5790", Offset = "0x20E5790", VA = "0x20E5790")]
	public XRTagUI()
	{
	}
}
[Token(Token = "0x20003C0")]
public class AIAgent : WAgent
{
	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62324", Offset = "0xE62324")]
	private int <GearID>k__BackingField;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BehaviourTreeOwner behaviourTree;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Blackboard blackboard;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x1700020A")]
	public int GearID
	{
		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1FAC720", Offset = "0x1FAC720", VA = "0x1FAC720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DC6C", Offset = "0xE6DC6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1FAC728", Offset = "0x1FAC728", VA = "0x1FAC728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DC7C", Offset = "0xE6DC7C")]
		private set
		{
		}
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x1FAC730", Offset = "0x1FAC730", VA = "0x1FAC730", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x1FAC738", Offset = "0x1FAC738", VA = "0x1FAC738")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x1FAC9C8", Offset = "0x1FAC9C8", VA = "0x1FAC9C8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x1FAC73C", Offset = "0x1FAC73C", VA = "0x1FAC73C")]
	private void InitBehaviourTree()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x1FAC9D0", Offset = "0x1FAC9D0", VA = "0x1FAC9D0")]
	public void SetAIEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x1FACAF0", Offset = "0x1FACAF0", VA = "0x1FACAF0")]
	public void SetAIPause(bool isPause)
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x1FACBA4", Offset = "0x1FACBA4", VA = "0x1FACBA4")]
	public void SetGearID(int gearid)
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x1FACBAC", Offset = "0x1FACBAC", VA = "0x1FACBAC")]
	public AIAgent()
	{
	}
}
[Token(Token = "0x20003C1")]
public class AnimationAgent : WAgent
{
	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationDefine define;

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x212CDC8", Offset = "0x212CDC8", VA = "0x212CDC8")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x212D0BC", Offset = "0x212D0BC", VA = "0x212D0BC", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x212D18C", Offset = "0x212D18C", VA = "0x212D18C")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x212D2A4", Offset = "0x212D2A4", VA = "0x212D2A4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x212D0E8", Offset = "0x212D0E8", VA = "0x212D0E8")]
	public void SetAniSpeed(float speed)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x212D2A8", Offset = "0x212D2A8", VA = "0x212D2A8")]
	public AnimationAgent()
	{
	}
}
[Token(Token = "0x20003C2")]
public class BodyPartAgent : WAgent
{
	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Component> hurtDefines;

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x290C864", Offset = "0x290C864", VA = "0x290C864", Slot = "4")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x290C86C", Offset = "0x290C86C", VA = "0x290C86C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x290C870", Offset = "0x290C870", VA = "0x290C870")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x290CA38", Offset = "0x290CA38", VA = "0x290CA38")]
	public HurtDefine GetFirstDefine()
	{
		return null;
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x290CAE8", Offset = "0x290CAE8", VA = "0x290CAE8")]
	public void SetAllBodyPartStatus(bool status)
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x290CC7C", Offset = "0x290CC7C", VA = "0x290CC7C")]
	public BodyPartAgent()
	{
	}
}
[Token(Token = "0x20003C3")]
public class BuffAgent : WAgent
{
	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, IBuff> buffDic;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MultiMap<short, int, IBuff> buffTypeDic;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> delList;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62334", Offset = "0xE62334")]
	private bool <IsDebuff>k__BackingField;

	[Token(Token = "0x1700020B")]
	public bool IsDebuff
	{
		[Token(Token = "0x6001591")]
		[Address(RVA = "0x27CC234", Offset = "0x27CC234", VA = "0x27CC234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DC8C", Offset = "0xE6DC8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001592")]
		[Address(RVA = "0x27CC23C", Offset = "0x27CC23C", VA = "0x27CC23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DC9C", Offset = "0xE6DC9C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x27CC248", Offset = "0x27CC248", VA = "0x27CC248", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x27CC250", Offset = "0x27CC250", VA = "0x27CC250")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x27CC4E4", Offset = "0x27CC4E4", VA = "0x27CC4E4")]
	private void ClearDel()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x27CC7F8", Offset = "0x27CC7F8", VA = "0x27CC7F8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x27CC9E4", Offset = "0x27CC9E4", VA = "0x27CC9E4")]
	public void AddBuff(IBuff buffBase)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x27CCF80", Offset = "0x27CCF80", VA = "0x27CCF80")]
	public void UpdateBuff(int id, string dataJson)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x27CC638", Offset = "0x27CC638", VA = "0x27CC638")]
	public void RemoveBuff(int id)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x27CD084", Offset = "0x27CD084", VA = "0x27CD084")]
	public void SetMonseterAbnormalState(bool isdebuff)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x27CD090", Offset = "0x27CD090", VA = "0x27CD090")]
	public BuffAgent()
	{
	}
}
[Token(Token = "0x20003C4")]
public class DataAgent : WAgent
{
	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_Player_Style playerStyle;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnitAttribute attributeTable;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _hpMagnification;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<int> OnChange_HP;

	[Token(Token = "0x1700020C")]
	public int CurHP
	{
		[Token(Token = "0x600159C")]
		[Address(RVA = "0x21C759C", Offset = "0x21C759C", VA = "0x21C759C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600159D")]
		[Address(RVA = "0x21C75C8", Offset = "0x21C75C8", VA = "0x21C75C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700020D")]
	public int MaxHP
	{
		[Token(Token = "0x600159E")]
		[Address(RVA = "0x21C7680", Offset = "0x21C7680", VA = "0x21C7680")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020E")]
	public int DiffcultyHP
	{
		[Token(Token = "0x600159F")]
		[Address(RVA = "0x21C772C", Offset = "0x21C772C", VA = "0x21C772C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020F")]
	public List<int> DiffcultyHPList
	{
		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x21C7808", Offset = "0x21C7808", VA = "0x21C7808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000210")]
	public int HpMagnification
	{
		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x21C7708", Offset = "0x21C7708", VA = "0x21C7708")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x21C784C", Offset = "0x21C784C", VA = "0x21C784C")]
		set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public int Integral
	{
		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x21C7898", Offset = "0x21C7898", VA = "0x21C7898")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x21C78C4", Offset = "0x21C78C4", VA = "0x21C78C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000212")]
	public int Energy
	{
		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x21C7930", Offset = "0x21C7930", VA = "0x21C7930")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x21C795C", Offset = "0x21C795C", VA = "0x21C795C")]
		set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public int OwnerAddHp
	{
		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x21C7820", Offset = "0x21C7820", VA = "0x21C7820")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x21C79C8", Offset = "0x21C79C8", VA = "0x21C79C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000214")]
	public int BulletDamage
	{
		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x21C7AAC", Offset = "0x21C7AAC", VA = "0x21C7AAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x21C7AD8", Offset = "0x21C7AD8", VA = "0x21C7AD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public int MagazineCapacity
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x21C7BBC", Offset = "0x21C7BBC", VA = "0x21C7BBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x21C7BE8", Offset = "0x21C7BE8", VA = "0x21C7BE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public int BlindSideShot
	{
		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x21C7CCC", Offset = "0x21C7CCC", VA = "0x21C7CCC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x21C7CF8", Offset = "0x21C7CF8", VA = "0x21C7CF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public int CarryingAmmunition
	{
		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x21C7DDC", Offset = "0x21C7DDC", VA = "0x21C7DDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x21C7E08", Offset = "0x21C7E08", VA = "0x21C7E08")]
		set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public int ChangeAmmunitionTechnique
	{
		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x21C7EEC", Offset = "0x21C7EEC", VA = "0x21C7EEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x21C7F18", Offset = "0x21C7F18", VA = "0x21C7F18")]
		set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public int IntegralRatio
	{
		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x21C7FFC", Offset = "0x21C7FFC", VA = "0x21C7FFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700021A")]
	public e_weapon_type Weapon_Type
	{
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x21C8014", Offset = "0x21C8014", VA = "0x21C8014")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x1700021B")]
	public int Atk
	{
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x21C802C", Offset = "0x21C802C", VA = "0x21C802C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700021C")]
	public e_type_monster monsterType
	{
		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x21C8044", Offset = "0x21C8044", VA = "0x21C8044")]
		get
		{
			return default(e_type_monster);
		}
	}

	[Token(Token = "0x1700021D")]
	public e_type_npc npcType
	{
		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x21C805C", Offset = "0x21C805C", VA = "0x21C805C")]
		get
		{
			return default(e_type_npc);
		}
	}

	[Token(Token = "0x1700021E")]
	public string name
	{
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x21C8074", Offset = "0x21C8074", VA = "0x21C8074")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021F")]
	public int tableId
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x21C80D4", Offset = "0x21C80D4", VA = "0x21C80D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000220")]
	public int modelId
	{
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x21C80EC", Offset = "0x21C80EC", VA = "0x21C80EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000221")]
	public int hpRecoverInterval
	{
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x21C8104", Offset = "0x21C8104", VA = "0x21C8104")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000222")]
	public int hpRecoverValue
	{
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x21C811C", Offset = "0x21C811C", VA = "0x21C811C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000223")]
	public List<int> dropCountList
	{
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x21C8134", Offset = "0x21C8134", VA = "0x21C8134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000224")]
	public List<int> dropWeightList
	{
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x21C814C", Offset = "0x21C814C", VA = "0x21C814C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000225")]
	public int LanguageID
	{
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x21C8164", Offset = "0x21C8164", VA = "0x21C8164")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x21C817C", Offset = "0x21C817C", VA = "0x21C817C", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x21C8184", Offset = "0x21C8184", VA = "0x21C8184")]
	public void SetAttributeTable(UnitAttribute _attributeTable)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x21C8270", Offset = "0x21C8270", VA = "0x21C8270")]
	public void SetIntensityHP(int HP)
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x21C82A8", Offset = "0x21C82A8", VA = "0x21C82A8")]
	public void Update(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x21C82AC", Offset = "0x21C82AC", VA = "0x21C82AC")]
	public void FixedUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x21C82B0", Offset = "0x21C82B0", VA = "0x21C82B0")]
	public void Revive()
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x21C82F0", Offset = "0x21C82F0", VA = "0x21C82F0")]
	public void Restore(int value)
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x21C8350", Offset = "0x21C8350", VA = "0x21C8350")]
	public void ResetHpMfn()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x21C8354", Offset = "0x21C8354", VA = "0x21C8354")]
	public DataAgent()
	{
	}
}
[Token(Token = "0x20003C5")]
public class HPRestoreAgent : WAgent
{
	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRestore;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int restoreValue;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int restoreTime;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int restoreTimer;

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x2526C84", Offset = "0x2526C84", VA = "0x2526C84", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x2526D58", Offset = "0x2526D58", VA = "0x2526D58")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x2526E28", Offset = "0x2526E28", VA = "0x2526E28")]
	public void SetRestoreInfo(int _restoreTime, int _restoreValue)
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x2526E30", Offset = "0x2526E30", VA = "0x2526E30")]
	public void Activa()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x2526E40", Offset = "0x2526E40", VA = "0x2526E40")]
	public void Deactiva()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x2526E48", Offset = "0x2526E48", VA = "0x2526E48")]
	public HPRestoreAgent()
	{
	}
}
[Token(Token = "0x20003C6")]
public class IKAgent : WAgent
{
	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IKConfigMono ikConfigMono;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Weapon weapon_l;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Weapon weapon_r;

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x20ABE78", Offset = "0x20ABE78", VA = "0x20ABE78")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x20ABEF0", Offset = "0x20ABEF0", VA = "0x20ABEF0", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x20ABEF8", Offset = "0x20ABEF8", VA = "0x20ABEF8")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x20ABEFC", Offset = "0x20ABEFC", VA = "0x20ABEFC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x20ABF3C", Offset = "0x20ABF3C", VA = "0x20ABF3C")]
	public void SetAimActive(bool isActive)
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x20AC024", Offset = "0x20AC024", VA = "0x20AC024")]
	public void UpdateHeadIK(Vector3 vrCameraPos)
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x20AC1AC", Offset = "0x20AC1AC", VA = "0x20AC1AC")]
	public void UpdateWeaponIK()
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x20ABF40", Offset = "0x20ABF40", VA = "0x20ABF40")]
	public void SetIKEnable(bool flag)
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x20AC770", Offset = "0x20AC770", VA = "0x20AC770")]
	public void BindHandIKToWeapon()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x20AC988", Offset = "0x20AC988", VA = "0x20AC988")]
	public IKAgent()
	{
	}
}
[Token(Token = "0x20003C7")]
public class InterruptAgent : WAgent
{
	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isCanInterrupt;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InterruptData[] interruptDatas;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InterruptDefine mInterruptDefine;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<List<HurtDefine>, int> HurtDefineListTointerruptedId;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, InterruptData> interruptedIdToInterruptData;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, GameObject> interruptedIdSignObjectHash;

	[Token(Token = "0x17000226")]
	public bool IsInterrupt
	{
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x20B2490", Offset = "0x20B2490", VA = "0x20B2490")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x20B1674", Offset = "0x20B1674", VA = "0x20B1674", Slot = "4")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x20B16A0", Offset = "0x20B16A0", VA = "0x20B16A0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x20B1A34", Offset = "0x20B1A34", VA = "0x20B1A34")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x20B2498", Offset = "0x20B2498", VA = "0x20B2498")]
	public bool GetCanBodyPartInterrupt(HurtDefine hurtDefine)
	{
		return default(bool);
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x20B24FC", Offset = "0x20B24FC", VA = "0x20B24FC")]
	public bool GetBodyPartHasInterrupt(HurtDefine hurtDefine)
	{
		return default(bool);
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x20B2538", Offset = "0x20B2538", VA = "0x20B2538")]
	public int GetInterrtptIDByHurtDefine(HurtDefine hurtDefine)
	{
		return default(int);
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x20B24D4", Offset = "0x20B24D4", VA = "0x20B24D4")]
	public InterruptData GetInterrtptDataByHurtDefine(HurtDefine hurtDefine)
	{
		return null;
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x20B26EC", Offset = "0x20B26EC", VA = "0x20B26EC")]
	public InterruptData GetInterrtptDataByID(int interrtupID)
	{
		return null;
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x20B2760", Offset = "0x20B2760", VA = "0x20B2760")]
	public void Damage(int _interruptedId, int atk, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x20B28EC", Offset = "0x20B28EC", VA = "0x20B28EC")]
	public void SetInterruptStatus(int _interruptedId, e_InterruptState _statue, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x20B2908", Offset = "0x20B2908", VA = "0x20B2908")]
	public void SendS2CInterruptNotify(int _interruptedId, e_InterruptState _interruptedState, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x20B1890", Offset = "0x20B1890", VA = "0x20B1890")]
	public void HandleS2CInterruptNotify(int _interruptedId, int _interruptedState, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x20B2C30", Offset = "0x20B2C30", VA = "0x20B2C30")]
	public void ToActive(int _interruptedId)
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x20B2B20", Offset = "0x20B2B20", VA = "0x20B2B20")]
	public void ToInterrupt(int _interruptedId, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x20B29EC", Offset = "0x20B29EC", VA = "0x20B29EC")]
	public void ToRecover(int _interruptedId)
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x20B2C7C", Offset = "0x20B2C7C", VA = "0x20B2C7C")]
	private void DestroyAllInterruptedSignEffect()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x20B2E8C", Offset = "0x20B2E8C", VA = "0x20B2E8C")]
	public InterruptAgent()
	{
	}
}
[Token(Token = "0x20003C8")]
public enum e_InterruptState
{
	[Token(Token = "0x40017B6")]
	Default,
	[Token(Token = "0x40017B7")]
	Active,
	[Token(Token = "0x40017B8")]
	interrupted
}
[Token(Token = "0x20003C9")]
public enum ExploderHPType
{
	[Token(Token = "0x40017BA")]
	Default,
	[Token(Token = "0x40017BB")]
	SettingData
}
[Token(Token = "0x20003CA")]
public enum InterruptType
{
	[Token(Token = "0x40017BD")]
	Exploder,
	[Token(Token = "0x40017BE")]
	DieOut
}
[Serializable]
[Token(Token = "0x20003CB")]
public class InterruptData
{
	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int interruptedId;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_InterruptState state;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int interruptHP;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HurtDefine> hurtDefineList;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InterruptType interruptType;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExploderConfig exploderConfig;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DieOutConfig dieOutConfig;

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x20B2488", Offset = "0x20B2488", VA = "0x20B2488")]
	public InterruptData()
	{
	}
}
[Token(Token = "0x20003CC")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xE55B64", Offset = "0xE55B64")]
public class InterruptDefine : MonoBehaviour
{
	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WwiseDefine audioObj;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeOutTime;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public DeactivateOptions deactivateOptions;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FadeoutOptions FadeoutOptions;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62344", Offset = "0xE62344")]
	public ExploderHPType ExploderHPType;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isAllExploderDie;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit ownerUnit;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ReorderableAttribute", RVA = "0xE6237C", Offset = "0xE6237C")]
	public List<InterruptData> defines;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE623BC", Offset = "0xE623BC")]
	public int ExploderHP;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int ExploderCount;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action action;

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x20B1EF8", Offset = "0x20B1EF8", VA = "0x20B1EF8")]
	public void Init([Optional] WUnit owner)
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x20B2FA8", Offset = "0x20B2FA8", VA = "0x20B2FA8")]
	private void ExploderDie()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x20B2C50", Offset = "0x20B2C50", VA = "0x20B2C50")]
	public void Exploder(ExploderConfig exploderConfig, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x20B2C34", Offset = "0x20B2C34", VA = "0x20B2C34")]
	public void DieOut(DieOutConfig dieOutConfig)
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x20B30D4", Offset = "0x20B30D4", VA = "0x20B30D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6DCAC", Offset = "0xE6DCAC")]
	public void SetDefaultdefines()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x20B31B0", Offset = "0x20B31B0", VA = "0x20B31B0")]
	public InterruptDefine()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x20B31D4", Offset = "0x20B31D4", VA = "0x20B31D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DCE4", Offset = "0xE6DCE4")]
	private void <SetDefaultdefines>b__15_0(Transform child)
	{
	}
}
[Token(Token = "0x20003CD")]
public class InterruptManager : MonoBehaviour
{
	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x20B334C", Offset = "0x20B334C", VA = "0x20B334C")]
	public static void HandleS2CMonsterInterruptStateNotify(int _unitId, int _interrtuptId, int _interrtuptState, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x20B34B8", Offset = "0x20B34B8", VA = "0x20B34B8")]
	public InterruptManager()
	{
	}
}
[Token(Token = "0x20003CE")]
public class MoveAgent : WAgent
{
	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x2658810", Offset = "0x2658810", VA = "0x2658810", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x2658818", Offset = "0x2658818", VA = "0x2658818")]
	public void Update(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x265881C", Offset = "0x265881C", VA = "0x265881C")]
	public void FixedUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x2658820", Offset = "0x2658820", VA = "0x2658820")]
	public MoveAgent()
	{
	}
}
[Token(Token = "0x20003CF")]
public enum NumericType
{
	[Token(Token = "0x40017D3")]
	FieldBase = 100,
	[Token(Token = "0x40017D4")]
	Max = 100000,
	[Token(Token = "0x40017D5")]
	Integral = 1001,
	[Token(Token = "0x40017D6")]
	IntegralBase = 100100,
	[Token(Token = "0x40017D7")]
	Hp = 1002,
	[Token(Token = "0x40017D8")]
	HpBase = 100200,
	[Token(Token = "0x40017D9")]
	Magnification = 1003,
	[Token(Token = "0x40017DA")]
	MagnificationBase = 100300,
	[Token(Token = "0x40017DB")]
	Energy = 1004,
	[Token(Token = "0x40017DC")]
	EnergyBase = 100400,
	[Token(Token = "0x40017DD")]
	BulletDamage = 1005,
	[Token(Token = "0x40017DE")]
	BulletDamageBase = 100500,
	[Token(Token = "0x40017DF")]
	MagazineCapacity = 1006,
	[Token(Token = "0x40017E0")]
	MagazineCapacityBase = 100600,
	[Token(Token = "0x40017E1")]
	BlindSideShot = 1007,
	[Token(Token = "0x40017E2")]
	BlindSideShotBase = 100700,
	[Token(Token = "0x40017E3")]
	CarryingAmmunition = 1008,
	[Token(Token = "0x40017E4")]
	CarryingAmmunitionBase = 100800,
	[Token(Token = "0x40017E5")]
	ChangeAmmunitionTechnique = 1009,
	[Token(Token = "0x40017E6")]
	ChangeAmmunitionTechniqueBase = 100900,
	[Token(Token = "0x40017E7")]
	viability = 1010,
	[Token(Token = "0x40017E8")]
	viabilityBase = 101000
}
[Token(Token = "0x20003D0")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE55BC4", Offset = "0xE55BC4")]
public class NumericAgent : WAgent
{
	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected WUnit owner;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected readonly Dictionary<int, int> numericDic;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Action<NumericType> OnChange;

	[Token(Token = "0x17000227")]
	public int Item
	{
		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x23047B0", Offset = "0x23047B0", VA = "0x23047B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001600")]
		[Address(RVA = "0x23046C4", Offset = "0x23046C4", VA = "0x23046C4")]
		set
		{
		}
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x2304538", Offset = "0x2304538", VA = "0x2304538", Slot = "5")]
	public virtual void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x2304540", Offset = "0x2304540", VA = "0x2304540")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x2304544", Offset = "0x2304544", VA = "0x2304544")]
	public int GetAsInt(NumericType numericType)
	{
		return default(int);
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x2304548", Offset = "0x2304548", VA = "0x2304548")]
	public int GetAsInt(int numericType)
	{
		return default(int);
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x23046C0", Offset = "0x23046C0", VA = "0x23046C0")]
	public void Set(NumericType nt, int value)
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x2304784", Offset = "0x2304784", VA = "0x2304784")]
	public void Set(NumericType nt, float value)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x23047E0", Offset = "0x23047E0", VA = "0x23047E0")]
	public bool CheckKey(int key)
	{
		return default(bool);
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x2304854", Offset = "0x2304854", VA = "0x2304854")]
	private int GetByKey(NumericType key)
	{
		return default(int);
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x230454C", Offset = "0x230454C", VA = "0x230454C")]
	private int GetByKey(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x23047B4", Offset = "0x23047B4", VA = "0x23047B4")]
	protected void Update(NumericType numericType)
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x2304858", Offset = "0x2304858", VA = "0x2304858")]
	protected void UpdateLogic(NumericType numericType)
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x23026B0", Offset = "0x23026B0", VA = "0x23026B0")]
	public NumericAgent()
	{
	}
}
[Token(Token = "0x20003D1")]
public class NoPlayerNumericAgent : NumericAgent
{
	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSyncHp;

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x2302404", Offset = "0x2302404", VA = "0x2302404", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x23025EC", Offset = "0x23025EC", VA = "0x23025EC")]
	public void OnServerNumericChange(NumericType numericType)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x23026AC", Offset = "0x23026AC", VA = "0x23026AC")]
	public NoPlayerNumericAgent()
	{
	}
}
[Token(Token = "0x20003D2")]
public class PlayerNumericAgent : NumericAgent
{
	[Token(Token = "0x600160A")]
	[Address(RVA = "0x2312B48", Offset = "0x2312B48", VA = "0x2312B48", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x2312E8C", Offset = "0x2312E8C", VA = "0x2312E8C")]
	public void OnServerNumericChange(NumericType numericType)
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x23131E4", Offset = "0x23131E4", VA = "0x23131E4")]
	public PlayerNumericAgent()
	{
	}
}
[Token(Token = "0x20003D3")]
public class StateAgent : WAgent
{
	[Token(Token = "0x20003D4")]
	public enum STATE
	{
		[Token(Token = "0x40017F3")]
		NONE,
		[Token(Token = "0x40017F4")]
		NORMAL,
		[Token(Token = "0x40017F5")]
		DIE,
		[Token(Token = "0x40017F6")]
		HURT
	}

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnitBaseState activeState;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private STATE activeStateType;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<STATE, UnitBaseState> stateList;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private STATE preStateType;

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x2165B6C", Offset = "0x2165B6C", VA = "0x2165B6C")]
	public STATE STPreStateType()
	{
		return default(STATE);
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x2165B74", Offset = "0x2165B74", VA = "0x2165B74", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x2165D88", Offset = "0x2165D88", VA = "0x2165D88")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x2165DA0", Offset = "0x2165DA0", VA = "0x2165DA0")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x2165DB8", Offset = "0x2165DB8", VA = "0x2165DB8")]
	private void DoStateExit()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x2165DF8", Offset = "0x2165DF8", VA = "0x2165DF8")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x2165C88", Offset = "0x2165C88", VA = "0x2165C88")]
	private void Register(STATE type, UnitBaseState st)
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x2165E10", Offset = "0x2165E10", VA = "0x2165E10")]
	private void UnRegister(STATE type)
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x2165DE0", Offset = "0x2165DE0", VA = "0x2165DE0")]
	public STATE GetStateType()
	{
		return default(STATE);
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x2165F00", Offset = "0x2165F00", VA = "0x2165F00")]
	private UnitBaseState GetState()
	{
		return null;
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x2165F08", Offset = "0x2165F08", VA = "0x2165F08")]
	private UnitBaseState GetStateByType(STATE type)
	{
		return null;
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x2165F88", Offset = "0x2165F88", VA = "0x2165F88")]
	private void SetActiveState(STATE nextType)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x2165E9C", Offset = "0x2165E9C", VA = "0x2165E9C")]
	private bool IsHasState(STATE nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x2165D1C", Offset = "0x2165D1C", VA = "0x2165D1C")]
	public void ChangeUnitState(STATE _nextState)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x2166014", Offset = "0x2166014", VA = "0x2166014")]
	public StateAgent()
	{
	}
}
[Token(Token = "0x20003D5")]
public class TransformSyncAgent : WAgent
{
	[Token(Token = "0x40017F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsEnableSync;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ServerPlayerNetSyncController syncController;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsSyncLocal;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform LocalOffsetTrn;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 LocalOffset;

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x2ABA9C0", Offset = "0x2ABA9C0", VA = "0x2ABA9C0", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x2ABA9C8", Offset = "0x2ABA9C8", VA = "0x2ABA9C8")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x2ABAA34", Offset = "0x2ABAA34", VA = "0x2ABAA34")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x2ABAA38", Offset = "0x2ABAA38", VA = "0x2ABAA38")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x2ABAADC", Offset = "0x2ABAADC", VA = "0x2ABAADC")]
	private void PlayerInfo()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x2ABAE60", Offset = "0x2ABAE60", VA = "0x2ABAE60")]
	public void SetIsEnableSync(bool _IsEnableSync)
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x2ABAE6C", Offset = "0x2ABAE6C", VA = "0x2ABAE6C")]
	public TransformSyncAgent()
	{
	}
}
[Token(Token = "0x20003D6")]
public interface WAgent
{
	[Token(Token = "0x6001623")]
	void Init(WUnit owner);
}
[Token(Token = "0x20003D7")]
public class WeaponAgent : WAgent
{
	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40017FE")]
	private const int WEAPON_ID_RIGHT = 0;

	[Token(Token = "0x40017FF")]
	private const int WEAPON_ID_LEFT = 1;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool R_isPickup;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool L_isPickup;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool R_isDiscard;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool L_isDiscard;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool R_isStop_Discard;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool L_isStop_Discard;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE623F4", Offset = "0xE623F4")]
	private GameObject <weaponObject_right>k__BackingField;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62404", Offset = "0xE62404")]
	private GameObject <weaponObject_left>k__BackingField;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62414", Offset = "0xE62414")]
	private e_weapon_group <weaponGroup>k__BackingField;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool _isVisible;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Weapon weapon_right;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Weapon weapon_left;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isFireEnable;

	[Token(Token = "0x17000228")]
	public GameObject weaponObject_right
	{
		[Token(Token = "0x6001624")]
		[Address(RVA = "0x29806FC", Offset = "0x29806FC", VA = "0x29806FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DCF4", Offset = "0xE6DCF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001625")]
		[Address(RVA = "0x2980704", Offset = "0x2980704", VA = "0x2980704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD04", Offset = "0xE6DD04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public GameObject weaponObject_left
	{
		[Token(Token = "0x6001626")]
		[Address(RVA = "0x298070C", Offset = "0x298070C", VA = "0x298070C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD14", Offset = "0xE6DD14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001627")]
		[Address(RVA = "0x2980714", Offset = "0x2980714", VA = "0x2980714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD24", Offset = "0xE6DD24")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022A")]
	public e_weapon_group weaponGroup
	{
		[Token(Token = "0x600162B")]
		[Address(RVA = "0x2980B2C", Offset = "0x2980B2C", VA = "0x2980B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD34", Offset = "0xE6DD34")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x600162C")]
		[Address(RVA = "0x2980B34", Offset = "0x2980B34", VA = "0x2980B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD44", Offset = "0xE6DD44")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public virtual bool IsVisible
	{
		[Token(Token = "0x600162E")]
		[Address(RVA = "0x2980C2C", Offset = "0x2980C2C", VA = "0x2980C2C", Slot = "6")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600162D")]
		[Address(RVA = "0x2980B3C", Offset = "0x2980B3C", VA = "0x2980B3C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public Vector3 Position_right
	{
		[Token(Token = "0x600162F")]
		[Address(RVA = "0x2980C34", Offset = "0x2980C34", VA = "0x2980C34")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001630")]
		[Address(RVA = "0x2980CD4", Offset = "0x2980CD4", VA = "0x2980CD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public Quaternion Rotation_right
	{
		[Token(Token = "0x6001631")]
		[Address(RVA = "0x2980DA0", Offset = "0x2980DA0", VA = "0x2980DA0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6001632")]
		[Address(RVA = "0x2980E40", Offset = "0x2980E40", VA = "0x2980E40")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public Vector3 Forward_right
	{
		[Token(Token = "0x6001633")]
		[Address(RVA = "0x2980F14", Offset = "0x2980F14", VA = "0x2980F14")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001634")]
		[Address(RVA = "0x2980FB4", Offset = "0x2980FB4", VA = "0x2980FB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public e_weapon_type weaponType_right
	{
		[Token(Token = "0x6001635")]
		[Address(RVA = "0x2981080", Offset = "0x2981080", VA = "0x2981080")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x17000230")]
	public Vector3 Position_left
	{
		[Token(Token = "0x6001636")]
		[Address(RVA = "0x298110C", Offset = "0x298110C", VA = "0x298110C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x29811AC", Offset = "0x29811AC", VA = "0x29811AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public Quaternion Rotation_left
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x2981278", Offset = "0x2981278", VA = "0x2981278")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x2981318", Offset = "0x2981318", VA = "0x2981318")]
		set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public Vector3 Forward_left
	{
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x29813EC", Offset = "0x29813EC", VA = "0x29813EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600163B")]
		[Address(RVA = "0x298148C", Offset = "0x298148C", VA = "0x298148C")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public e_weapon_type weaponType_left
	{
		[Token(Token = "0x600163C")]
		[Address(RVA = "0x2981558", Offset = "0x2981558", VA = "0x2981558")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x298071C", Offset = "0x298071C", VA = "0x298071C")]
	public void SetWeaponObject_Right(GameObject rightObject, string rightName, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x298089C", Offset = "0x298089C", VA = "0x298089C")]
	public void SetWeaponObject_Left(GameObject leftObject, string leftName, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x2980A1C", Offset = "0x2980A1C", VA = "0x2980A1C")]
	public void SetWeaponObject(Weapon Weapon, string rightName, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x29815E4", Offset = "0x29815E4", VA = "0x29815E4")]
	public void RegisterInput()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x2981D20", Offset = "0x2981D20", VA = "0x2981D20")]
	public void UnRegisterInput()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x2982454", Offset = "0x2982454", VA = "0x2982454", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x298245C", Offset = "0x298245C", VA = "0x298245C")]
	public void WeaponDateReset()
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x2982F18", Offset = "0x2982F18", VA = "0x2982F18")]
	private void rightPassivityWeaponDestroy()
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x2983034", Offset = "0x2983034", VA = "0x2983034")]
	private void leftPassivityWeaponDestroy()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x2983150", Offset = "0x2983150", VA = "0x2983150")]
	private void rightPassivityWeaponUpdate()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x2983234", Offset = "0x2983234", VA = "0x2983234")]
	private void leftPassivityWeaponUpdate()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x297873C", Offset = "0x297873C", VA = "0x297873C")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x2978354", Offset = "0x2978354", VA = "0x2978354")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x29834D4", Offset = "0x29834D4", VA = "0x29834D4")]
	public void OnDestroy(bool isRight)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x2978C04", Offset = "0x2978C04", VA = "0x2978C04")]
	public void SetFireEnable(bool flag)
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x2983820", Offset = "0x2983820", VA = "0x2983820")]
	public void SetRHandNull()
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x2983A54", Offset = "0x2983A54", VA = "0x2983A54")]
	public void SetLHandNull()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x2983C88", Offset = "0x2983C88", VA = "0x2983C88")]
	public void SetAimLineStatus(bool _status)
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x2983D68", Offset = "0x2983D68", VA = "0x2983D68")]
	public void SetWeaponUIStatus(bool _status)
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x2983318", Offset = "0x2983318", VA = "0x2983318")]
	public void SetShootLightStatus(bool _status)
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x29833E0", Offset = "0x29833E0", VA = "0x29833E0")]
	public void SetBulletInfiniteState(bool _status)
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x2984144", Offset = "0x2984144", VA = "0x2984144")]
	public void Discard_LeftWeapon()
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x29843D8", Offset = "0x29843D8", VA = "0x29843D8")]
	public void Discard_RightWeapon()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x298466C", Offset = "0x298466C", VA = "0x298466C")]
	public void SetWeaponNull(bool isR)
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x298469C", Offset = "0x298469C", VA = "0x298469C")]
	public void SetHandWeapon_L()
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x2984740", Offset = "0x2984740", VA = "0x2984740")]
	public void SetHandWeapon_R()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x29847E4", Offset = "0x29847E4", VA = "0x29847E4")]
	public void Homing(WeaponSlot weaponSlot, GameObject weaponObject, Weapon weapon)
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x2984940", Offset = "0x2984940", VA = "0x2984940")]
	public void OtherDiscardedWeapon(bool isR)
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x2982488", Offset = "0x2982488", VA = "0x2982488")]
	public void DiscardedWeapon(bool isR)
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x2984BE8", Offset = "0x2984BE8", VA = "0x2984BE8")]
	public int BulletFill(bool isR, int Cartridge_Bag)
	{
		return default(int);
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x2984EA8", Offset = "0x2984EA8", VA = "0x2984EA8")]
	public void SetDropWeaponAddBullet()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x2985144", Offset = "0x2985144", VA = "0x2985144")]
	public void OnRightWeaponPress(bool isDown)
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x29851F8", Offset = "0x29851F8", VA = "0x29851F8")]
	private void OnLeftWeaponPress(bool isDown)
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x29852AC", Offset = "0x29852AC", VA = "0x29852AC")]
	private void OnRightWeaponMiddlePress(bool isDown)
	{
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x29852B8", Offset = "0x29852B8", VA = "0x29852B8")]
	private void OnRightWeaponMiddlePressDown()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x29854C0", Offset = "0x29854C0", VA = "0x29854C0")]
	private void OnRightWeaponMiddlePressStay(float times)
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x298535C", Offset = "0x298535C", VA = "0x298535C")]
	private void OnRightWeaponMiddlePressUp()
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x2985568", Offset = "0x2985568", VA = "0x2985568")]
	private void OnLeftWeaponMiddlePress(bool isDown)
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x298577C", Offset = "0x298577C", VA = "0x298577C")]
	private void OnLeftWeaponMiddlePressStay(float times)
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x2985574", Offset = "0x2985574", VA = "0x2985574")]
	private void OnLeftWeaponMiddlePressDown()
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x2985618", Offset = "0x2985618", VA = "0x2985618")]
	private void OnLeftWeaponMiddlePressUp()
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x2983188", Offset = "0x2983188", VA = "0x2983188")]
	private void rightShellPopUp(bool isDown = true)
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x298326C", Offset = "0x298326C", VA = "0x298326C")]
	private void leftShellPopUp(bool isDown = true)
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x2985824", Offset = "0x2985824", VA = "0x2985824")]
	public void SetAllAniCloseObjActive(bool isActive)
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x2985904", Offset = "0x2985904", VA = "0x2985904")]
	public void SyncCreateBullteTrigger(int id, bool trigger)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x2985D28", Offset = "0x2985D28", VA = "0x2985D28")]
	public void SyncCreateBullte(int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x298619C", Offset = "0x298619C", VA = "0x298619C")]
	public void SyncCreateEffectBullte(int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x29863A4", Offset = "0x29863A4", VA = "0x29863A4")]
	public void SyncReload(int id, bool isNeedAni)
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x298655C", Offset = "0x298655C", VA = "0x298655C")]
	public void SyncTimeCtrlEnable(Vector3 pos, int id, bool isNeedAni)
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x2986680", Offset = "0x2986680", VA = "0x2986680")]
	public void SyncReloadMagazine()
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x29780EC", Offset = "0x29780EC", VA = "0x29780EC")]
	public WeaponAgent()
	{
	}
}
[Token(Token = "0x20003D8")]
public class XRInteractAgent : WAgent
{
	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractConfigMono interactConfigMono;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject collectorObj;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRControllerCollector collector;

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x20E29D8", Offset = "0x20E29D8", VA = "0x20E29D8")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x20E2F68", Offset = "0x20E2F68", VA = "0x20E2F68", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x20E2BA0", Offset = "0x20E2BA0", VA = "0x20E2BA0")]
	private void InitControllerCollector()
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x20E2F70", Offset = "0x20E2F70", VA = "0x20E2F70")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x20E30FC", Offset = "0x20E30FC", VA = "0x20E30FC")]
	public XRInteractAgent()
	{
	}
}
[Token(Token = "0x20003D9")]
public interface IDeathDefine
{
	[Token(Token = "0x6001672")]
	void SetDeathStaut(bool IsCommitSuicide);

	[Token(Token = "0x6001673")]
	void TriggerDeathDefine(Action endAction);
}
[Token(Token = "0x20003DA")]
public class ReturnInitPos : MonoBehaviour
{
	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MoveFxPrefab;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distance;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float ReturnTime;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float Times;

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x2721184", Offset = "0x2721184", VA = "0x2721184")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x2721218", Offset = "0x2721218", VA = "0x2721218")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x272121C", Offset = "0x272121C", VA = "0x272121C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x2721220", Offset = "0x2721220", VA = "0x2721220")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x2721378", Offset = "0x2721378", VA = "0x2721378")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x27215E4", Offset = "0x27215E4", VA = "0x27215E4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x272173C", Offset = "0x272173C", VA = "0x272173C")]
	public ReturnInitPos()
	{
	}
}
[Token(Token = "0x20003DB")]
public class HandQesture : MonoBehaviour
{
	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator Index_Finger_animator;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Grab_Anim;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Pull_Anim;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Refer_Anim;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Idle;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isR;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isGrab;

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x2526FD0", Offset = "0x2526FD0", VA = "0x2526FD0")]
	public void Pull_Amim(bool isPull)
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x2527038", Offset = "0x2527038", VA = "0x2527038")]
	public void Grab_Amim(bool Grab)
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x25270C8", Offset = "0x25270C8", VA = "0x25270C8")]
	public void Idle_Amim()
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x2527130", Offset = "0x2527130", VA = "0x2527130")]
	public void Refer_Amim()
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x252718C", Offset = "0x252718C", VA = "0x252718C")]
	public void Capture_Amim()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x25271C4", Offset = "0x25271C4", VA = "0x25271C4")]
	public void Iint_Rhand(bool bool_isR)
	{
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0x252743C", Offset = "0x252743C", VA = "0x252743C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x252745C", Offset = "0x252745C", VA = "0x252745C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x25275C0", Offset = "0x25275C0", VA = "0x25275C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x2527828", Offset = "0x2527828", VA = "0x2527828")]
	public HandQesture()
	{
	}
}
[Token(Token = "0x20003DC")]
public class UDieState : UnitBaseState
{
	[Token(Token = "0x6001685")]
	[Address(RVA = "0x2367E20", Offset = "0x2367E20", VA = "0x2367E20")]
	public UDieState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x2367E74", Offset = "0x2367E74", VA = "0x2367E74", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x2367E78", Offset = "0x2367E78", VA = "0x2367E78", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x2367E7C", Offset = "0x2367E7C", VA = "0x2367E7C", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x2367E80", Offset = "0x2367E80", VA = "0x2367E80", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20003DD")]
public class UHurtState : UnitBaseState
{
	[Token(Token = "0x600168A")]
	[Address(RVA = "0x2367E84", Offset = "0x2367E84", VA = "0x2367E84")]
	public UHurtState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x2367E88", Offset = "0x2367E88", VA = "0x2367E88", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x2367E8C", Offset = "0x2367E8C", VA = "0x2367E8C", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x2367E90", Offset = "0x2367E90", VA = "0x2367E90", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0x2367E94", Offset = "0x2367E94", VA = "0x2367E94", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20003DE")]
public class UNormalState : UnitBaseState
{
	[Token(Token = "0x600168F")]
	[Address(RVA = "0x23690B0", Offset = "0x23690B0", VA = "0x23690B0")]
	public UNormalState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x23690B4", Offset = "0x23690B4", VA = "0x23690B4", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x23690B8", Offset = "0x23690B8", VA = "0x23690B8", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x23690BC", Offset = "0x23690BC", VA = "0x23690BC", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x23690C0", Offset = "0x23690C0", VA = "0x23690C0", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20003DF")]
public abstract class UnitBaseState
{
	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected StateAgent stateOwner;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected WUnit owner;

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x2367E24", Offset = "0x2367E24", VA = "0x2367E24")]
	public UnitBaseState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x6001695")]
	public abstract void DoInit();

	[Token(Token = "0x6001696")]
	public abstract void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x6001697")]
	public abstract void DoLateUpdate();

	[Token(Token = "0x6001698")]
	public abstract void DoExit();
}
[Token(Token = "0x20003E0")]
public class WUnit
{
	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject mGameObject;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject mModelObject;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62424", Offset = "0xE62424")]
	private UnitConfigMono <playerConfigMono>k__BackingField;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62434", Offset = "0xE62434")]
	private ComponentCacheTools <componentCacheTools>k__BackingField;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DataAgent dataAgent;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationAgent animatonAgent;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BodyPartAgent bodyPartAgent;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AIAgent aiAgent;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WeaponAgent weaponAgent;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IKAgent ikAgent;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TransformSyncAgent transformSyncAgent;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InterruptAgent InterruptAgent;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NumericAgent characterNumericAgent;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BuffAgent buffAgent;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public XRInteractAgent interactAgent;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected bool _isVisible;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	protected bool mIsDestory;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62444", Offset = "0xE62444")]
	private bool <isLocalPlayer>k__BackingField;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62454", Offset = "0xE62454")]
	private bool <isLiveing>k__BackingField;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected bool mIsDie;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<WUnit> OnDeadCB;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<WUnit> OnReviveCB;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int IsLastUpdatePosCount;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int id;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private e_group_type groupId;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private e_type_role _roleType;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool IsNoHurt;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool IsLeaveArea;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Timeline timeLine;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool joinStatus;

	[Token(Token = "0x17000234")]
	public GameObject gameObject
	{
		[Token(Token = "0x6001699")]
		[Address(RVA = "0x29773F0", Offset = "0x29773F0", VA = "0x29773F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000235")]
	public GameObject modelObject
	{
		[Token(Token = "0x600169A")]
		[Address(RVA = "0x29773F8", Offset = "0x29773F8", VA = "0x29773F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600169B")]
		[Address(RVA = "0x2977400", Offset = "0x2977400", VA = "0x2977400")]
		set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public UnitConfigMono playerConfigMono
	{
		[Token(Token = "0x600169C")]
		[Address(RVA = "0x2977408", Offset = "0x2977408", VA = "0x2977408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD54", Offset = "0xE6DD54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600169D")]
		[Address(RVA = "0x2977410", Offset = "0x2977410", VA = "0x2977410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD64", Offset = "0xE6DD64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public ComponentCacheTools componentCacheTools
	{
		[Token(Token = "0x600169E")]
		[Address(RVA = "0x2977418", Offset = "0x2977418", VA = "0x2977418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD74", Offset = "0xE6DD74")]
		get
		{
			return null;
		}
		[Token(Token = "0x600169F")]
		[Address(RVA = "0x2977420", Offset = "0x2977420", VA = "0x2977420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD84", Offset = "0xE6DD84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public string name
	{
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x2977428", Offset = "0x2977428", VA = "0x2977428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000239")]
	public Vector3 Position
	{
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x29774D0", Offset = "0x29774D0", VA = "0x29774D0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x2977570", Offset = "0x2977570", VA = "0x2977570")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public Quaternion Rotation
	{
		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x297763C", Offset = "0x297763C", VA = "0x297763C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x29776DC", Offset = "0x29776DC", VA = "0x29776DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public Vector3 Forward
	{
		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x29777B0", Offset = "0x29777B0", VA = "0x29777B0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x2977850", Offset = "0x2977850", VA = "0x2977850")]
		set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	public virtual bool IsVisible
	{
		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x29779E0", Offset = "0x29779E0", VA = "0x29779E0", Slot = "5")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x297791C", Offset = "0x297791C", VA = "0x297791C", Slot = "4")]
		set
		{
		}
	}

	[Token(Token = "0x1700023D")]
	public bool isDestory
	{
		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x29779E8", Offset = "0x29779E8", VA = "0x29779E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023E")]
	public bool isLocalPlayer
	{
		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x29779F0", Offset = "0x29779F0", VA = "0x29779F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DD94", Offset = "0xE6DD94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x29779F8", Offset = "0x29779F8", VA = "0x29779F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDA4", Offset = "0xE6DDA4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public bool isLiveing
	{
		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x2977A04", Offset = "0x2977A04", VA = "0x2977A04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDB4", Offset = "0xE6DDB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x2977A0C", Offset = "0x2977A0C", VA = "0x2977A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDC4", Offset = "0xE6DDC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public bool IsDie
	{
		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x2977A18", Offset = "0x2977A18", VA = "0x2977A18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000241")]
	public int Id
	{
		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x2977B0C", Offset = "0x2977B0C", VA = "0x2977B0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000242")]
	public e_group_type GroupId
	{
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x2977B14", Offset = "0x2977B14", VA = "0x2977B14")]
		get
		{
			return default(e_group_type);
		}
	}

	[Token(Token = "0x17000243")]
	public e_type_role roleType
	{
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x2977B1C", Offset = "0x2977B1C", VA = "0x2977B1C")]
		get
		{
			return default(e_type_role);
		}
	}

	[Token(Token = "0x17000244")]
	public bool JoinStatus
	{
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x2978B28", Offset = "0x2978B28", VA = "0x2978B28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x2977A20", Offset = "0x2977A20", VA = "0x2977A20")]
	public void SetDie(bool dead)
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x2977A4C", Offset = "0x2977A4C", VA = "0x2977A4C")]
	protected void OnDead()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x2977AAC", Offset = "0x2977AAC", VA = "0x2977AAC")]
	protected void OnRevive()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x2977B24", Offset = "0x2977B24", VA = "0x2977B24")]
	private WUnit(int _id, e_group_type _groupId)
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x2977B68", Offset = "0x2977B68", VA = "0x2977B68")]
	public void ChangePlayerGroup(e_group_type _groupId)
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x2977CDC", Offset = "0x2977CDC", VA = "0x2977CDC")]
	public static WUnit CreatePlayerUnit(int _id, e_group_type _groupId)
	{
		return null;
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x2977D60", Offset = "0x2977D60", VA = "0x2977D60")]
	public static WUnit CreateNPCUnit(int _id, e_group_type _groupId)
	{
		return null;
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x2977DE8", Offset = "0x2977DE8", VA = "0x2977DE8")]
	public static WUnit CreateMonsterUnit(int _id)
	{
		return null;
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x2977E68", Offset = "0x2977E68", VA = "0x2977E68")]
	public void Init(UnitAttribute attribute)
	{
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x2978100", Offset = "0x2978100", VA = "0x2978100")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x2978698", Offset = "0x2978698", VA = "0x2978698", Slot = "6")]
	public virtual void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x2978878", Offset = "0x2978878", VA = "0x2978878")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x297888C", Offset = "0x297888C", VA = "0x297888C")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x2978890", Offset = "0x2978890", VA = "0x2978890")]
	public void SetGameObject(GameObject obj, string name, bool _isVisible = true, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x2978B30", Offset = "0x2978B30", VA = "0x2978B30")]
	public void JoinGame()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x2978D1C", Offset = "0x2978D1C", VA = "0x2978D1C")]
	public void JoinGame(bool _joinStatus)
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x2978D40", Offset = "0x2978D40", VA = "0x2978D40")]
	public void SetIntensityData()
	{
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x2978E5C", Offset = "0x2978E5C", VA = "0x2978E5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDD4", Offset = "0xE6DDD4")]
	private void <Destroy>b__79_0()
	{
	}
}
[Token(Token = "0x20003E1")]
public class AcquireWeapon : MonoBehaviour
{
	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public e_weapon_type e_weapon_Type;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool IsRightWeapon;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool InShopping;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float moveTime;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float middlePointAdd;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 fromPoint;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 middlePoint;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 endPoint;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WUnit unit;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float DropSpeed;

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x1FB3218", Offset = "0x1FB3218", VA = "0x1FB3218")]
	public void Trigger(int uid, e_weapon_type BoxWeaponType, bool isRight = true)
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x1FB3248", Offset = "0x1FB3248", VA = "0x1FB3248")]
	private void MoveToTarget(int uid)
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x1FB33BC", Offset = "0x1FB33BC", VA = "0x1FB33BC")]
	private void DoMove()
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x1FB369C", Offset = "0x1FB369C", VA = "0x1FB369C")]
	private void Update()
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x1FB35D8", Offset = "0x1FB35D8", VA = "0x1FB35D8")]
	public Vector3 GetCurvePoint(Vector3 point0, Vector3 point1, Vector3 point2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x1FB36AC", Offset = "0x1FB36AC", VA = "0x1FB36AC")]
	public AcquireWeapon()
	{
	}
}
[Token(Token = "0x20003E2")]
public class ArmoryTrigger : MonoBehaviour
{
	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x21343F4", Offset = "0x21343F4", VA = "0x21343F4")]
	public ArmoryTrigger()
	{
	}
}
[Token(Token = "0x20003E3")]
[AttributeAttribute(Name = "ComponentCacheAttribute", RVA = "0xE55BFC", Offset = "0xE55BFC")]
public abstract class BaseWeaponHitEffect : MonoBehaviour
{
	[Token(Token = "0x60016CC")]
	public abstract void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal);

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x2901FF4", Offset = "0x2901FF4", VA = "0x2901FF4")]
	protected BaseWeaponHitEffect()
	{
	}
}
[Token(Token = "0x20003E4")]
public class CartridgeBag : MonoBehaviour
{
	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Cartridge_Bag_765mm;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Cartridge_Bag_18mm;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Max_Cartridge_Bag_765mm;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Max_Cartridge_Bag_18mm;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE624C4", Offset = "0xE624C4")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WeaponSlot weaponSlotLeft;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WeaponSlot weaponSlotRight;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TargetingInteractable TargetingInteractable;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int CartridgeBag_9mm;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int CartridgeBag_765mm;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int CartridgeBag_18mm;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int Bullet9_mm_MaxCartridge;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int Bullet765_mm_MaxCartridge;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int Bullet18_mm_MaxCartridge;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int Cur9_MaxCartridge;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int Cur765_MaxCartridge;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int Cur18_MaxCartridge;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE624D4", Offset = "0xE624D4")]
	public Animator animator;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string ShutDown_9mm;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string ShutDown_765mm;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string ShutDown_18mm;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ParticleSystem ParticleSystem_9mm;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem ParticleSystem_765mm;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem ParticleSystem_18mm;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private BulletData bullet_9mm;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BulletData bullet_765mm;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BulletData bullet_18mm;

	[Token(Token = "0x17000245")]
	public WUnit Owner
	{
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x2444274", Offset = "0x2444274", VA = "0x2444274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDE4", Offset = "0xE6DDE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x244427C", Offset = "0x244427C", VA = "0x244427C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DDF4", Offset = "0xE6DDF4")]
		private set
		{
		}
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x2444284", Offset = "0x2444284", VA = "0x2444284")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x244450C", Offset = "0x244450C", VA = "0x244450C")]
	public void RenewalMaxCartridge()
	{
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x2444498", Offset = "0x2444498", VA = "0x2444498")]
	public void Writetext()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x2444620", Offset = "0x2444620", VA = "0x2444620")]
	public void ReturnBullet(e_bullet_type BulletType, int CurBulletCount)
	{
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x2444668", Offset = "0x2444668", VA = "0x2444668")]
	public void TopUpAllBullet(bool isBox)
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0x2444734", Offset = "0x2444734", VA = "0x2444734")]
	public void TopUpBullet(int Cartridge_9mm, int Cartridge_765mm, int Cartridge_18mm)
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0x24447B4", Offset = "0x24447B4", VA = "0x24447B4")]
	public void TopUpBullet(e_bullet_type bullet_Type, int Cartridge)
	{
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x244483C", Offset = "0x244483C", VA = "0x244483C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x24449FC", Offset = "0x24449FC", VA = "0x24449FC")]
	public void BulletExtractor(bool isR, e_bullet_type bullet_type)
	{
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x2444C58", Offset = "0x2444C58", VA = "0x2444C58")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x2444DF0", Offset = "0x2444DF0", VA = "0x2444DF0")]
	private bool GetShell_pop(Weapon weapon)
	{
		return default(bool);
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x2444E7C", Offset = "0x2444E7C", VA = "0x2444E7C")]
	public CartridgeBag()
	{
	}
}
[Token(Token = "0x20003E5")]
public class LeftAcquireWeapon : Weapon
{
	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6250C", Offset = "0xE6250C")]
	public List<GameObject> HoldWeapon;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public List<AcquireWeapon> AcqureWeapon;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public LineRenderer Line;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private RaycastHit[] m_RaycastHits;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector3 m_TargetEndPoint;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject RightHandTeleportation;

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x20BC184", Offset = "0x20BC184", VA = "0x20BC184", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x20BC45C", Offset = "0x20BC45C", VA = "0x20BC45C", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x20BC460", Offset = "0x20BC460", VA = "0x20BC460", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x20BC464", Offset = "0x20BC464", VA = "0x20BC464", Slot = "17")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x20BC468", Offset = "0x20BC468", VA = "0x20BC468", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x20BC46C", Offset = "0x20BC46C", VA = "0x20BC46C", Slot = "30")]
	public override void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x20BC268", Offset = "0x20BC268", VA = "0x20BC268")]
	public void DelayHoldWeapon()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x20BC470", Offset = "0x20BC470", VA = "0x20BC470")]
	public void SetActiveHoldWeapon(bool isHide)
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x20BC5F4", Offset = "0x20BC5F4", VA = "0x20BC5F4")]
	public LeftAcquireWeapon()
	{
	}
}
[Token(Token = "0x20003E6")]
public class WeaponMotion : MonoBehaviour
{
	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE62544", Offset = "0xE62544")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62544", Offset = "0xE62544")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62544", Offset = "0xE62544")]
	public float PositionSpring2Stiffness;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE625BC", Offset = "0xE625BC")]
	public float PositionSpring2Damping;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected vp_Spring m_PositionSpring2;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 m_PositionSpring2DefaultRotation;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE625D4", Offset = "0xE625D4")]
	protected Vector3 RotationOffset;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6260C", Offset = "0xE6260C")]
	public float RotationSpring2Stiffness;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE62624", Offset = "0xE62624")]
	public float RotationSpring2Damping;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected vp_Spring m_RotationSpring2;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 m_RotationSpring2DefaultRotation;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6263C", Offset = "0xE6263C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6263C", Offset = "0xE6263C")]
	public float PositionPivotSpringStiffness;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE62690", Offset = "0xE62690")]
	public float PositionPivotSpringDamping;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 PositionPivot;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected vp_Spring m_PositionPivotSpring;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE626A8", Offset = "0xE626A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE626A8", Offset = "0xE626A8")]
	public float RotationSpringStiffness;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE626FC", Offset = "0xE626FC")]
	public float RotationSpringDamping;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected vp_Spring m_RotationSpring;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62714", Offset = "0xE62714")]
	public Transform WeaponMotionPoint;

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x298818C", Offset = "0x298818C", VA = "0x298818C", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x29883BC", Offset = "0x29883BC", VA = "0x29883BC", Slot = "5")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x29883C8", Offset = "0x29883C8", VA = "0x29883C8", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x2988494", Offset = "0x2988494", VA = "0x2988494", Slot = "7")]
	public virtual void AddForce2(Vector3 positional, Vector3 angular)
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x2988508", Offset = "0x2988508", VA = "0x2988508", Slot = "8")]
	public virtual void ResetSprings(float positionReset, float rotationReset, float positionPauseTime = 0f, float rotationPauseTime = 0f)
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x2988628", Offset = "0x2988628", VA = "0x2988628", Slot = "9")]
	protected virtual void SnapSprings()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x2988760", Offset = "0x2988760", VA = "0x2988760", Slot = "10")]
	protected virtual void StopSprings()
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x29887D4", Offset = "0x29887D4", VA = "0x29887D4", Slot = "11")]
	protected virtual void Refresh()
	{
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x2988944", Offset = "0x2988944", VA = "0x2988944")]
	public WeaponMotion()
	{
	}
}
[Token(Token = "0x20003E7")]
public class vp_Spring
{
	[Token(Token = "0x20003E8")]
	public enum UpdateMode
	{
		[Token(Token = "0x400188D")]
		Position,
		[Token(Token = "0x400188E")]
		PositionAdditiveLocal,
		[Token(Token = "0x400188F")]
		PositionAdditiveGlobal,
		[Token(Token = "0x4001890")]
		PositionAdditiveSelf,
		[Token(Token = "0x4001891")]
		Rotation,
		[Token(Token = "0x4001892")]
		RotationAdditiveLocal,
		[Token(Token = "0x4001893")]
		RotationAdditiveGlobal,
		[Token(Token = "0x4001894")]
		Scale,
		[Token(Token = "0x4001895")]
		ScaleAdditiveLocal
	}

	[Token(Token = "0x20003E9")]
	protected delegate void UpdateDelegate();

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected UpdateMode Mode;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected bool m_AutoUpdate;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UpdateDelegate m_UpdateFunc;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 State;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected Vector3 m_Velocity;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 RestState;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Stiffness;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 Damping;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float m_VelocityFadeInCap;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float m_VelocityFadeInEndTime;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float m_VelocityFadeInLength;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3[] m_SoftForceFrame;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MaxVelocity;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float MinVelocity;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 MaxState;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 MinState;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform m_Transform;

	[Token(Token = "0x17000246")]
	public Transform Transform
	{
		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x20E7314", Offset = "0x20E7314", VA = "0x20E7314")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x20E731C", Offset = "0x20E731C", VA = "0x20E731C")]
		set
		{
		}
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x20E771C", Offset = "0x20E771C", VA = "0x20E771C")]
	public vp_Spring(Transform transform, UpdateMode mode, bool autoUpdate = true)
	{
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x20E7834", Offset = "0x20E7834", VA = "0x20E7834")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x20E7B44", Offset = "0x20E7B44", VA = "0x20E7B44")]
	private void Position()
	{
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x20E7B6C", Offset = "0x20E7B6C", VA = "0x20E7B6C")]
	private void Rotation()
	{
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x20E7B94", Offset = "0x20E7B94", VA = "0x20E7B94")]
	private void Scale()
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x20E7BBC", Offset = "0x20E7BBC", VA = "0x20E7BBC")]
	private void PositionAdditiveLocal()
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x20E7C0C", Offset = "0x20E7C0C", VA = "0x20E7C0C")]
	private void PositionAdditiveGlobal()
	{
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x20E7C5C", Offset = "0x20E7C5C", VA = "0x20E7C5C")]
	private void PositionAdditiveSelf()
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x20E7C88", Offset = "0x20E7C88", VA = "0x20E7C88")]
	private void RotationAdditiveLocal()
	{
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x20E7CD8", Offset = "0x20E7CD8", VA = "0x20E7CD8")]
	private void RotationAdditiveGlobal()
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x20E7D28", Offset = "0x20E7D28", VA = "0x20E7D28")]
	private void ScaleAdditiveLocal()
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x20E7D78", Offset = "0x20E7D78", VA = "0x20E7D78")]
	private void None()
	{
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x20E7344", Offset = "0x20E7344", VA = "0x20E7344")]
	protected void RefreshUpdateMode()
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x20E7A54", Offset = "0x20E7A54", VA = "0x20E7A54")]
	protected void Calculate()
	{
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0x20E79F4", Offset = "0x20E79F4", VA = "0x20E79F4")]
	private void AddForceInternal(Vector3 force)
	{
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x20E7E60", Offset = "0x20E7E60", VA = "0x20E7E60")]
	public void AddForce(Vector3 force)
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x20E7EE4", Offset = "0x20E7EE4", VA = "0x20E7EE4")]
	public void AddSoftForce(Vector3 force, float frames)
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x20E7D7C", Offset = "0x20E7D7C", VA = "0x20E7D7C")]
	protected void Move()
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x20E7E24", Offset = "0x20E7E24", VA = "0x20E7E24")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x20E8004", Offset = "0x20E8004", VA = "0x20E8004")]
	public void Stop(bool includeSoftForce = false)
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x20E8048", Offset = "0x20E8048", VA = "0x20E8048")]
	public void StopSoftForce()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x20E80C0", Offset = "0x20E80C0", VA = "0x20E80C0")]
	public void ForceVelocityFadeIn(float seconds)
	{
	}
}
[Token(Token = "0x20003EA")]
public class ShieldHitEffects : BaseWeaponHitEffect
{
	[Token(Token = "0x20003EB")]
	public enum dir
	{
		[Token(Token = "0x400189C")]
		none,
		[Token(Token = "0x400189D")]
		left,
		[Token(Token = "0x400189E")]
		right,
		[Token(Token = "0x400189F")]
		up,
		[Token(Token = "0x40018A0")]
		down
	}

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerPoint;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rect;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float x_borderValue;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float y_borderValue;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject effect;

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x215A108", Offset = "0x215A108", VA = "0x215A108", Slot = "4")]
	public override void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal)
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x215A1AC", Offset = "0x215A1AC", VA = "0x215A1AC")]
	public dir GetDir(Vector3 _hitPos)
	{
		return default(dir);
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x215A2E0", Offset = "0x215A2E0", VA = "0x215A2E0")]
	public ShieldHitEffects()
	{
	}
}
[Token(Token = "0x20003EC")]
public class TimeCtrlEffect : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	private enum LoadType
	{
		[Token(Token = "0x40018C9")]
		None,
		[Token(Token = "0x40018CA")]
		type_loading,
		[Token(Token = "0x40018CB")]
		type_loadFinish
	}

	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55C5C", Offset = "0xE55C5C")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer meshRender;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimeCtrlEffect <>4__this;

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x2063704", Offset = "0x2063704", VA = "0x2063704")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x206370C", Offset = "0x206370C", VA = "0x206370C")]
		internal void <TriggerStateChance>b__0()
		{
		}
	}

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeScale;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6274C", Offset = "0xE6274C")]
	public float CDTime1;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62784", Offset = "0xE62784")]
	public float CDTime2;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE627BC", Offset = "0xE627BC")]
	public float CDTime3;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE627F4", Offset = "0xE627F4")]
	public float duration;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6282C", Offset = "0xE6282C")]
	public float loadTime;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62864", Offset = "0xE62864")]
	public float shakeValue;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6289C", Offset = "0xE6289C")]
	public float frequency;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE628D4", Offset = "0xE628D4")]
	public float shakeAddTime;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6290C", Offset = "0xE6290C")]
	public GameObject handEffectObj;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62944", Offset = "0xE62944")]
	public GameObject CtrlAreaPrefab;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6297C", Offset = "0xE6297C")]
	public float offsetZ;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE629B4", Offset = "0xE629B4")]
	public List<MeshRenderer> meshRenders;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator animator;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE629EC", Offset = "0xE629EC")]
	public Vector2 StartVec2;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float StartChangeTime;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62A24", Offset = "0xE62A24")]
	public Vector2 loadVec2;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62A5C", Offset = "0xE62A5C")]
	public Vector2 CD01Vec2;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector2 CD02Vec2;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float CD02time;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62A94", Offset = "0xE62A94")]
	public Vector2 EndVec2;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Tween> loadTweens;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tween CDTween;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int mWeaponID;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int mOwnerUnitID;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isTrigger;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float loadTimeCounter;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LoadType loadType;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public float cdTimeCounter;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isCD;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isPreEnd;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isScaling;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float durTimeCounter;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float scaleZCounter;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float shakeCounter;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public StateInfoData OpenStateData;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public StateInfoData OffStateData;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isShakeStop;

	[Token(Token = "0x17000247")]
	public float CDTime
	{
		[Token(Token = "0x600170D")]
		[Address(RVA = "0x2AB6150", Offset = "0x2AB6150", VA = "0x2AB6150")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x2AB6288", Offset = "0x2AB6288", VA = "0x2AB6288")]
	public void Init(int ownerUnitID, int weaponID)
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x2AB6414", Offset = "0x2AB6414", VA = "0x2AB6414")]
	public void Update()
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x2AB6900", Offset = "0x2AB6900", VA = "0x2AB6900")]
	public void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x2AB68C0", Offset = "0x2AB68C0", VA = "0x2AB68C0")]
	private bool CheckCDTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x2AB65FC", Offset = "0x2AB65FC", VA = "0x2AB65FC")]
	private bool CheckLoadFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x2AB66A4", Offset = "0x2AB66A4", VA = "0x2AB66A4")]
	private bool CheckDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x2AB6654", Offset = "0x2AB6654", VA = "0x2AB6654")]
	private bool KeepShakeing()
	{
		return default(bool);
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x2AB740C", Offset = "0x2AB740C", VA = "0x2AB740C")]
	private void InitScale()
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x2AB66FC", Offset = "0x2AB66FC", VA = "0x2AB66FC")]
	public void SetTimeCtrlEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x2AB76C0", Offset = "0x2AB76C0", VA = "0x2AB76C0")]
	public void SyncTimeCtrlEnableLogic(Vector3 pos, bool isEnable)
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x2AB7450", Offset = "0x2AB7450", VA = "0x2AB7450")]
	private void ShowCtrlArea(Vector3 pos)
	{
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x2AB76CC", Offset = "0x2AB76CC", VA = "0x2AB76CC")]
	public bool IsShakeing()
	{
		return default(bool);
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0x2AB76DC", Offset = "0x2AB76DC", VA = "0x2AB76DC")]
	public TimeCtrlEffect()
	{
	}
}
[Token(Token = "0x20003EF")]
public abstract class Weapon : MonoBehaviour
{
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55C6C", Offset = "0xE55C6C")]
	private sealed class <>c__DisplayClass207_0
	{
		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon <>4__this;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isR;

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x206520C", Offset = "0x206520C", VA = "0x206520C")]
		public <>c__DisplayClass207_0()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x2065214", Offset = "0x2065214", VA = "0x2065214")]
		internal void <WeaponRenderMelt>b__0()
		{
		}
	}

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62ADC", Offset = "0xE62ADC")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public WeaponAttribute attributeTable;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<WUnit> weaponFireAct;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<WUnit> weaponReloadAct;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<WUnit> weaponShell_pop_up;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<WUnit> WeaponUIAct;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE62AFC", Offset = "0xE62AFC")]
	private int <WeaponId>k__BackingField;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62B0C", Offset = "0xE62B0C")]
	public e_weapon_type WeaponType;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponTypeGroup WeaponTypeGroup;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public e_bullet_type BulletType;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRBaseInteractable XRBaseInteractable;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int Owner_MagazineCapacity;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsCheckBulletCount;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsCheckMagazin;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	protected bool IsReduceBulletCount;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62B44", Offset = "0xE62B44")]
	public TransformTimeLine transformTimeLine;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62B7C", Offset = "0xE62B7C")]
	public Transform FirePoint;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FireForwardOffset;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject AimLine;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62BB4", Offset = "0xE62BB4")]
	public Light ShootLight;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int ShootLightCloseFrame;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool IsLocalReloadBullet;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool IsAutoReloadBullet;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62BEC", Offset = "0xE62BEC")]
	public float DownReloadEndAngle;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62C24", Offset = "0xE62C24")]
	public Transform LeftHandTarget;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform RightHandTarget;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62C5C", Offset = "0xE62C5C")]
	private bool IsBelongToLocalPlayer;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[SerializeField]
	protected bool IsUseRecoil;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected WeaponMotion mWeaponMotion;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool mIsRecoiling;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected int mFirBulletNum;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected float mNotFirTime;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62CA4", Offset = "0xE62CA4")]
	private int mBeginSpreadBulletMinNum;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62CF0", Offset = "0xE62CF0")]
	private int mBeginSpreadBulletMaxNum;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62D3C", Offset = "0xE62D3C")]
	[SerializeField]
	private float mRecoilMinOffsetX;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62D88", Offset = "0xE62D88")]
	private float mRecoilMaxOffsetX;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62DD4", Offset = "0xE62DD4")]
	[SerializeField]
	private float mRecoilAddMinOffsetY;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62E20", Offset = "0xE62E20")]
	[SerializeField]
	private float mRecoilAddMaxOffsetY;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62E6C", Offset = "0xE62E6C")]
	private float mRecoilTotalMaxOffsetY;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float mCurTotalOffsetY;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float mCurSpreadBulletNum;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62EB8", Offset = "0xE62EB8")]
	public Vector3 MotionPositionRecoil;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 MotionRotationRecoil;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float MotionRotationRecoilDeadZone;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62EF0", Offset = "0xE62EF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE62EF0", Offset = "0xE62EF0")]
	public float MotionPositionReset;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE62F44", Offset = "0xE62F44")]
	public float MotionRotationReset;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float MotionPositionPause;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float MotionRotationPause;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62F5C", Offset = "0xE62F5C")]
	public SwitchInfoData AudioSwitch;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62F94", Offset = "0xE62F94")]
	public bool ShootAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject ShootObject;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE62FCC", Offset = "0xE62FCC")]
	public bool ShellAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public AudioEvent ShellAudio;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject ShellObject;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63004", Offset = "0xE63004")]
	public AudioEvent NoBulletAudio;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool NoBulletAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	protected bool PlayNoBulletAudio;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject NoBulletObject;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6303C", Offset = "0xE6303C")]
	public bool ReloadBulletAudio_UseAudioSwitchGroup;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public AudioEvent ReloadBulletAudio;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject ReloadObject;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63074", Offset = "0xE63074")]
	public GameObject ChildNode;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 ChildRot;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected bool isShowShootLight;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	protected bool isFire;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected float fireIntervalTimer;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE630AC", Offset = "0xE630AC")]
	private int <CurBulletCount>k__BackingField;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected int SingleShots;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE630BC", Offset = "0xE630BC")]
	private int <CurrentMagazineValue>k__BackingField;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int ShootLightTimer;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float lastAngle;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE630CC", Offset = "0xE630CC")]
	public bool IsCheckObstacle;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float CheckObstacleTime;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Collider CheckObstacleCollider;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private RendererConfigMono rendererConfigMono;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private MaterialPropertyBlock prop;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int colorId;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int colorId2;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool isStartCheck;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	protected bool isEnterObstacle;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	protected float enterObstacleTimer;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public BaseUI banUI;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63104", Offset = "0xE63104")]
	public byte hapticsLevel;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public int hapticsTime;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63120", Offset = "0xE63120")]
	public Transform WeaponTriggerAnim;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float TriggerOffset;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63158", Offset = "0xE63158")]
	public BaseUI DiscardedWeaponUI;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Image DiscardedImage;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Coroutine DiscardedCoroutine;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63190", Offset = "0xE63190")]
	public Animator animator;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public string Ani_IdleState;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string Ani_ReloadState;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public string Ani_FireState;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float gun_clip_destory_Time;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool isTreeBlend;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public string Blend;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public int ThresholdValue;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int FireTreeNumber;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool ForTheFirst;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float reloadTime;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float reloadPreTime;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject[] AniObj_Close;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject gun_clip_obj;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[HideInInspector]
	public bool isReloading;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Coroutine reloadCoroutine;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private GameObject gun_clip_obj_exploed;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Coroutine reloadPreCoroutine;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE631D8", Offset = "0xE631D8")]
	public List<Renderer> WeaponRender;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public float ChangeTime;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63210", Offset = "0xE63210")]
	public WeaponInfoUI_Slide infoUI;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63248", Offset = "0xE63248")]
	public FollowVRController followVRController;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float hapticPulseDuration;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AnimationCurve hapticPulseCurve;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float hapticPulseVlaue;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public bool Shell_pop_up;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
	[HideInInspector]
	public bool Pickup;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE63290", Offset = "0xE63290")]
	private ComponentCacheTools <cacheTools>k__BackingField;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Coroutine coroutine;

	[Token(Token = "0x17000248")]
	public WUnit Owner
	{
		[Token(Token = "0x600171D")]
		[Address(RVA = "0x297B4D0", Offset = "0x297B4D0", VA = "0x297B4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE04", Offset = "0xE6DE04")]
		get
		{
			return null;
		}
		[Token(Token = "0x600171E")]
		[Address(RVA = "0x297B4D8", Offset = "0x297B4D8", VA = "0x297B4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE14", Offset = "0xE6DE14")]
		private set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public int WeaponId
	{
		[Token(Token = "0x600171F")]
		[Address(RVA = "0x297B4E0", Offset = "0x297B4E0", VA = "0x297B4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE24", Offset = "0xE6DE24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001720")]
		[Address(RVA = "0x297B4E8", Offset = "0x297B4E8", VA = "0x297B4E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE34", Offset = "0xE6DE34")]
		private set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public string weaponName
	{
		[Token(Token = "0x6001721")]
		[Address(RVA = "0x297B4F0", Offset = "0x297B4F0", VA = "0x297B4F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700024B")]
	public int Atk
	{
		[Token(Token = "0x6001722")]
		[Address(RVA = "0x297B550", Offset = "0x297B550", VA = "0x297B550")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024C")]
	public int HeadPer
	{
		[Token(Token = "0x6001723")]
		[Address(RVA = "0x297B568", Offset = "0x297B568", VA = "0x297B568")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024D")]
	public int CriticalHitRate
	{
		[Token(Token = "0x6001724")]
		[Address(RVA = "0x297B580", Offset = "0x297B580", VA = "0x297B580")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024E")]
	public float fireInterval
	{
		[Token(Token = "0x6001725")]
		[Address(RVA = "0x297B598", Offset = "0x297B598", VA = "0x297B598")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024F")]
	public int HitForce
	{
		[Token(Token = "0x6001726")]
		[Address(RVA = "0x297B5C0", Offset = "0x297B5C0", VA = "0x297B5C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000250")]
	public int HeadHitForce
	{
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x297B5D8", Offset = "0x297B5D8", VA = "0x297B5D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000251")]
	public int KillForce
	{
		[Token(Token = "0x6001728")]
		[Address(RVA = "0x297B5F0", Offset = "0x297B5F0", VA = "0x297B5F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000252")]
	public int HeadShotForce
	{
		[Token(Token = "0x6001729")]
		[Address(RVA = "0x297B608", Offset = "0x297B608", VA = "0x297B608")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000253")]
	public int MaxBulletCount
	{
		[Token(Token = "0x600172A")]
		[Address(RVA = "0x297B620", Offset = "0x297B620", VA = "0x297B620")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000254")]
	public int MaximumMagazineValue
	{
		[Token(Token = "0x600172B")]
		[Address(RVA = "0x297B640", Offset = "0x297B640", VA = "0x297B640")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000255")]
	protected bool IsFire
	{
		[Token(Token = "0x600172C")]
		[Address(RVA = "0x297B660", Offset = "0x297B660", VA = "0x297B660")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600172D")]
		[Address(RVA = "0x297B668", Offset = "0x297B668", VA = "0x297B668")]
		set
		{
		}
	}

	[Token(Token = "0x17000256")]
	[HideInInspector]
	public int CurBulletCount
	{
		[Token(Token = "0x600172E")]
		[Address(RVA = "0x297B674", Offset = "0x297B674", VA = "0x297B674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE44", Offset = "0xE6DE44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600172F")]
		[Address(RVA = "0x297B67C", Offset = "0x297B67C", VA = "0x297B67C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE54", Offset = "0xE6DE54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000257")]
	[HideInInspector]
	public int CurrentMagazineValue
	{
		[Token(Token = "0x6001730")]
		[Address(RVA = "0x297B684", Offset = "0x297B684", VA = "0x297B684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE64", Offset = "0xE6DE64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001731")]
		[Address(RVA = "0x297B68C", Offset = "0x297B68C", VA = "0x297B68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE74", Offset = "0xE6DE74")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000258")]
	public ComponentCacheTools cacheTools
	{
		[Token(Token = "0x6001732")]
		[Address(RVA = "0x297B694", Offset = "0x297B694", VA = "0x297B694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE84", Offset = "0xE6DE84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001733")]
		[Address(RVA = "0x297B69C", Offset = "0x297B69C", VA = "0x297B69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DE94", Offset = "0xE6DE94")]
		private set
		{
		}
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x297B6AC", Offset = "0x297B6AC", VA = "0x297B6AC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x297B7B8", Offset = "0x297B7B8", VA = "0x297B7B8", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0x297B938", Offset = "0x297B938", VA = "0x297B938", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x297BA3C", Offset = "0x297BA3C", VA = "0x297BA3C", Slot = "7")]
	protected virtual void weaponReload()
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x297BB60", Offset = "0x297BB60", VA = "0x297BB60", Slot = "8")]
	protected virtual void OnCheckObstacleEnter(Collider c1, Collider c2)
	{
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0x297BC20", Offset = "0x297BC20", VA = "0x297BC20", Slot = "9")]
	protected virtual void EnterObstacle()
	{
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0x297BEE0", Offset = "0x297BEE0", VA = "0x297BEE0", Slot = "10")]
	protected virtual void ExitObstacle()
	{
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0x297C188", Offset = "0x297C188", VA = "0x297C188", Slot = "11")]
	public virtual void ReducingState()
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0x297C2E8", Offset = "0x297C2E8", VA = "0x297C2E8", Slot = "12")]
	public virtual void InitWeapon()
	{
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0x297C4B8", Offset = "0x297C4B8", VA = "0x297C4B8", Slot = "13")]
	public virtual void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0x297CAD0", Offset = "0x297CAD0", VA = "0x297CAD0", Slot = "14")]
	public virtual void InitAudioSwitch()
	{
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x297CAD4", Offset = "0x297CAD4", VA = "0x297CAD4")]
	public void TransformTimeLineStopLoop()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x297C428", Offset = "0x297C428", VA = "0x297C428")]
	public void TransformTimeLineStartLoop()
	{
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x297CB64", Offset = "0x297CB64", VA = "0x297CB64", Slot = "15")]
	public virtual void ShellPopUp()
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x297CCB4", Offset = "0x297CCB4", VA = "0x297CCB4", Slot = "16")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x297D248", Offset = "0x297D248", VA = "0x297D248", Slot = "17")]
	public virtual void PreFireLogic()
	{
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0x297D550", Offset = "0x297D550", VA = "0x297D550", Slot = "18")]
	public virtual void SyncFireLogicTrigger(bool trigger)
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x297D554", Offset = "0x297D554", VA = "0x297D554")]
	public void SyncFireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x297D564", Offset = "0x297D564", VA = "0x297D564")]
	public void SyncReloadLogic(bool isNeedAni)
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x297D578", Offset = "0x297D578", VA = "0x297D578", Slot = "19")]
	public virtual void SyncTimeCtrlEnableLogic(Vector3 pos, bool isEnable)
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x297D57C", Offset = "0x297D57C", VA = "0x297D57C")]
	public void SyncFireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0x297D58C", Offset = "0x297D58C", VA = "0x297D58C", Slot = "20")]
	protected virtual void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0x297DC58", Offset = "0x297DC58", VA = "0x297DC58", Slot = "21")]
	public virtual void AnimSetFloat()
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0x297DCB0", Offset = "0x297DCB0", VA = "0x297DCB0", Slot = "22")]
	protected virtual void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x297DCB4", Offset = "0x297DCB4", VA = "0x297DCB4", Slot = "23")]
	protected virtual void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x297DCB8", Offset = "0x297DCB8", VA = "0x297DCB8", Slot = "24")]
	protected virtual void AnimWeaponTrigger(bool Tirgger)
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x297DE68", Offset = "0x297DE68", VA = "0x297DE68", Slot = "25")]
	protected virtual Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x297DED4", Offset = "0x297DED4", VA = "0x297DED4", Slot = "26")]
	public virtual void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x297DF20", Offset = "0x297DF20", VA = "0x297DF20")]
	public void DiscardedMiddleTriggerStay(float Times)
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x297E284", Offset = "0x297E284", VA = "0x297E284", Slot = "27")]
	public virtual void MiddleTriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x297E430", Offset = "0x297E430", VA = "0x297E430", Slot = "28")]
	protected virtual bool CheckFireInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x297E480", Offset = "0x297E480", VA = "0x297E480", Slot = "29")]
	public virtual bool CheckBulletCount()
	{
		return default(bool);
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0x297D8D8", Offset = "0x297D8D8", VA = "0x297D8D8")]
	protected void ReduceBulletCount()
	{
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0x297E490", Offset = "0x297E490", VA = "0x297E490")]
	public void AddCurBulletCount(float percentage)
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x297D130", Offset = "0x297D130", VA = "0x297D130")]
	public void PreReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x297E50C", Offset = "0x297E50C", VA = "0x297E50C", Slot = "30")]
	public virtual void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x297EAAC", Offset = "0x297EAAC", VA = "0x297EAAC")]
	public void ReloadMagazine(int value)
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x297EAD0", Offset = "0x297EAD0", VA = "0x297EAD0")]
	public void SetBulletCount(int MagazineCount, int BulletCount)
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x297EADC", Offset = "0x297EADC", VA = "0x297EADC")]
	private float GetModifiedAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x297EB14", Offset = "0x297EB14", VA = "0x297EB14", Slot = "31")]
	public virtual bool CheckReloadAction()
	{
		return default(bool);
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x297C880", Offset = "0x297C880", VA = "0x297C880")]
	protected void InitShootLight()
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x297D934", Offset = "0x297D934", VA = "0x297D934")]
	protected void EnableShootLight()
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x297D1D8", Offset = "0x297D1D8", VA = "0x297D1D8")]
	protected void UpdateShootLight()
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x297EC1C", Offset = "0x297EC1C", VA = "0x297EC1C")]
	protected bool IsLocalPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x297ECD4", Offset = "0x297ECD4", VA = "0x297ECD4")]
	public void SetAimLineStatus(bool status)
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x297ED78", Offset = "0x297ED78", VA = "0x297ED78")]
	public void SetShootLightStatus(bool status)
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x297ED80", Offset = "0x297ED80", VA = "0x297ED80")]
	public void SetState(bool isShow)
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x297C9E8", Offset = "0x297C9E8", VA = "0x297C9E8")]
	public void SetAniCloseObjActive(bool isActive)
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x297EEAC", Offset = "0x297EEAC", VA = "0x297EEAC")]
	public void WeaponRenderMelt(bool isR)
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x297C914", Offset = "0x297C914", VA = "0x297C914")]
	public void WeaponRenderShow()
	{
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x297F084", Offset = "0x297F084", VA = "0x297F084")]
	private int GetBeginSpreadNum()
	{
		return default(int);
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x297F094", Offset = "0x297F094", VA = "0x297F094")]
	private float GetOffsetX()
	{
		return default(float);
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x297F0A0", Offset = "0x297F0A0", VA = "0x297F0A0")]
	private float GetOffsetY()
	{
		return default(float);
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x297D9E8", Offset = "0x297D9E8", VA = "0x297D9E8")]
	protected void SetRecoilSpread()
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x297D0D8", Offset = "0x297D0D8", VA = "0x297D0D8")]
	protected void CheckNotFirUpdate(float dt)
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x297F0AC", Offset = "0x297F0AC", VA = "0x297F0AC")]
	private void ResetNoFirStatus()
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x297D9D0", Offset = "0x297D9D0", VA = "0x297D9D0")]
	protected bool CheckCanRecoilAngleOffset()
	{
		return default(bool);
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x297DA74", Offset = "0x297DA74", VA = "0x297DA74")]
	protected void ApplyRecoil()
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x297F0F8", Offset = "0x297F0F8", VA = "0x297F0F8")]
	protected Weapon()
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x297F28C", Offset = "0x297F28C", VA = "0x297F28C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DEA4", Offset = "0xE6DEA4")]
	private void <weaponReload>b__162_0()
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x297F298", Offset = "0x297F298", VA = "0x297F298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DEB4", Offset = "0xE6DEB4")]
	private void <DiscardedMiddleTriggerStay>b__187_0()
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x297F2C4", Offset = "0x297F2C4", VA = "0x297F2C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DEC4", Offset = "0xE6DEC4")]
	private void <ReloadBullet>b__194_0()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x297F450", Offset = "0x297F450", VA = "0x297F450")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DED4", Offset = "0xE6DED4")]
	private void <ReloadBullet>b__194_2()
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0x297F580", Offset = "0x297F580", VA = "0x297F580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DEE4", Offset = "0xE6DEE4")]
	private void <ReloadBullet>b__194_1()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0x297F6CC", Offset = "0x297F6CC", VA = "0x297F6CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DEF4", Offset = "0xE6DEF4")]
	private void <ReloadBullet>b__194_3()
	{
	}
}
[Token(Token = "0x20003F1")]
public class WeaponTag : MonoBehaviour
{
	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_weapon_group e_weapon_group;

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x2B51C5C", Offset = "0x2B51C5C", VA = "0x2B51C5C")]
	public WeaponTag()
	{
	}
}
[Token(Token = "0x20003F2")]
public class Weapon_Explosive_crossbow : Weapon_Rifle
{
	[Token(Token = "0x6001778")]
	[Address(RVA = "0x2B51EB0", Offset = "0x2B51EB0", VA = "0x2B51EB0", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x2B51F74", Offset = "0x2B51F74", VA = "0x2B51F74")]
	public Weapon_Explosive_crossbow()
	{
	}
}
[Token(Token = "0x20003F3")]
public class Weapon_FlameProjector : Weapon
{
	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE632A0", Offset = "0xE632A0")]
	public bool Gun_Shoot_Switch_Stop;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public AudioEvent Gun_ShootStop;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE632D8", Offset = "0xE632D8")]
	public bool Gun_Idle_Switch;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public AudioEvent Gun_Idle;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject IdleObject;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool StopwwiseDefine;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private WwiseDefine FireWwiseDefine;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public ParticleSystem ParticleSystem;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public ParticleSystem ParticleSystemEnd;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private BulletFlameProjector bulletFlameProjector;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool FlameProjectorisbool;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject FlameProjectorisTrigger;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private float fireEffectCoolDown;

	[Token(Token = "0x600177A")]
	[Address(RVA = "0x2B51F94", Offset = "0x2B51F94", VA = "0x2B51F94", Slot = "11")]
	public override void ReducingState()
	{
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0x2B52158", Offset = "0x2B52158", VA = "0x2B52158", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0x2B52960", Offset = "0x2B52960", VA = "0x2B52960", Slot = "20")]
	protected override void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0x2B52C88", Offset = "0x2B52C88", VA = "0x2B52C88", Slot = "24")]
	protected override void AnimWeaponTrigger(bool Tirgger)
	{
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0x2B52E00", Offset = "0x2B52E00", VA = "0x2B52E00", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x2B52E04", Offset = "0x2B52E04", VA = "0x2B52E04", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x2B530E0", Offset = "0x2B530E0", VA = "0x2B530E0", Slot = "17")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0x2B5329C", Offset = "0x2B5329C", VA = "0x2B5329C", Slot = "18")]
	public override void SyncFireLogicTrigger(bool trigger)
	{
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0x2B533EC", Offset = "0x2B533EC", VA = "0x2B533EC", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x2B53420", Offset = "0x2B53420", VA = "0x2B53420", Slot = "28")]
	protected override bool CheckFireInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0x2B5347C", Offset = "0x2B5347C", VA = "0x2B5347C")]
	public Weapon_FlameProjector()
	{
	}
}
[Token(Token = "0x20003F4")]
public class Weapon_Fuel_gun : Weapon_Rifle
{
	[Token(Token = "0x6001785")]
	[Address(RVA = "0x2B53484", Offset = "0x2B53484", VA = "0x2B53484", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x2B53548", Offset = "0x2B53548", VA = "0x2B53548")]
	public Weapon_Fuel_gun()
	{
	}
}
[Token(Token = "0x20003F5")]
public class Weapon_Fx_timecontrolArea : Weapon
{
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55C7C", Offset = "0xE55C7C")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_Fx_timecontrolArea <>4__this;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x2066D00", Offset = "0x2066D00", VA = "0x2066D00")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x2066D08", Offset = "0x2066D08", VA = "0x2066D08")]
		internal void <FireEffectLogic>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63310", Offset = "0xE63310")]
	public bool Gun_Idle_Switch;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public AudioEvent Gun_Idle;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject IdleObject;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private bool m;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63348", Offset = "0xE63348")]
	public Transform ShellPoint;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63380", Offset = "0xE63380")]
	public float ScatterCoefficient;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject BulletPrefab;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63398", Offset = "0xE63398")]
	public GameObject BulletEffectPrefab_Local;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE633D0", Offset = "0xE633D0")]
	public GameObject BulletEffectPrefab_Other;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public TimeCtrlEffect timeCtrlEffect;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	protected bool isScaling;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63408", Offset = "0xE63408")]
	public float moveSpeed;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float bulletOffset;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public Vector2 randOffset;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public float minShowDistance;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public float delayDestroy;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private bool isShell;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private float fireEffectCoolDown;

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x2B53558", Offset = "0x2B53558", VA = "0x2B53558", Slot = "20")]
	protected override void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x2B5388C", Offset = "0x2B5388C", VA = "0x2B5388C", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x2B539C4", Offset = "0x2B539C4", VA = "0x2B539C4", Slot = "25")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x2B53A84", Offset = "0x2B53A84", VA = "0x2B53A84", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x2B53BC8", Offset = "0x2B53BC8", VA = "0x2B53BC8", Slot = "23")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x2B53E64", Offset = "0x2B53E64", VA = "0x2B53E64")]
	protected bool CheckFireEffectInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x2B53EC0", Offset = "0x2B53EC0", VA = "0x2B53EC0", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x2B53FC0", Offset = "0x2B53FC0", VA = "0x2B53FC0", Slot = "19")]
	public override void SyncTimeCtrlEnableLogic(Vector3 pos, bool isEnable)
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x2B540E4", Offset = "0x2B540E4", VA = "0x2B540E4", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x2B54568", Offset = "0x2B54568", VA = "0x2B54568")]
	public Weapon_Fx_timecontrolArea()
	{
	}
}
[Token(Token = "0x20003F7")]
public class Weapon_Gatling : Weapon
{
	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string EjectAnim;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63440", Offset = "0xE63440")]
	public bool Gun_Shoot_Switch_Stop;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public AudioEvent Gun_ShootStop;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private bool StopwwiseDefine;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63478", Offset = "0xE63478")]
	public Transform ShellPoint;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE634B0", Offset = "0xE634B0")]
	public float ScatterCoefficient;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject BulletPrefab;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public List<Transform> addFirePointList;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private WwiseDefine FireWwiseDefine;

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x2B54578", Offset = "0x2B54578", VA = "0x2B54578", Slot = "15")]
	public override void ShellPopUp()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x2B5465C", Offset = "0x2B5465C", VA = "0x2B5465C", Slot = "11")]
	public override void ReducingState()
	{
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0x2B54740", Offset = "0x2B54740", VA = "0x2B54740", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x2B54868", Offset = "0x2B54868", VA = "0x2B54868", Slot = "25")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x2B54928", Offset = "0x2B54928", VA = "0x2B54928", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x2B54C38", Offset = "0x2B54C38", VA = "0x2B54C38", Slot = "20")]
	protected override void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x2B54F60", Offset = "0x2B54F60", VA = "0x2B54F60", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x2B5550C", Offset = "0x2B5550C", VA = "0x2B5550C")]
	public Weapon_Gatling()
	{
	}
}
[Token(Token = "0x20003F8")]
public class Weapon_Hand : Weapon
{
	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject HandModel;

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x2B55568", Offset = "0x2B55568", VA = "0x2B55568", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x2B55574", Offset = "0x2B55574", VA = "0x2B55574", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x2B55578", Offset = "0x2B55578", VA = "0x2B55578", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x2B5557C", Offset = "0x2B5557C", VA = "0x2B5557C", Slot = "17")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x2B55580", Offset = "0x2B55580", VA = "0x2B55580", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x2B55584", Offset = "0x2B55584", VA = "0x2B55584", Slot = "30")]
	public override void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x2B55588", Offset = "0x2B55588", VA = "0x2B55588")]
	public Weapon_Hand()
	{
	}
}
[Token(Token = "0x20003F9")]
public class Weapon_Laser_pistol : Weapon_Rifle
{
	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE634C8", Offset = "0xE634C8")]
	public bool Gun_Shoot_Switch_Stop;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public AudioEvent Gun_ShootStop;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63500", Offset = "0xE63500")]
	public bool Gun_Idle_Switch;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public AudioEvent Gun_Idle;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject IdleObject;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private bool StopwwiseDefine;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private WwiseDefine FireWwiseDefine;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Lightning ShotLocalityEffectPrefab;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private bool EffectPrefabOpenAndEnd;

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x2B55590", Offset = "0x2B55590", VA = "0x2B55590", Slot = "11")]
	public override void ReducingState()
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x2B55750", Offset = "0x2B55750", VA = "0x2B55750", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x2B559C8", Offset = "0x2B559C8", VA = "0x2B559C8", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x2B561A8", Offset = "0x2B561A8", VA = "0x2B561A8", Slot = "20")]
	protected override void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x2B564D0", Offset = "0x2B564D0", VA = "0x2B564D0", Slot = "17")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x2B565F0", Offset = "0x2B565F0", VA = "0x2B565F0", Slot = "18")]
	public override void SyncFireLogicTrigger(bool trigger)
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x2B56700", Offset = "0x2B56700", VA = "0x2B56700", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x2B567E4", Offset = "0x2B567E4", VA = "0x2B567E4")]
	public Weapon_Laser_pistol()
	{
	}
}
[Token(Token = "0x20003FA")]
public class Weapon_Machine : Weapon_Rifle
{
	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private string EjectAnim;

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x2B567F4", Offset = "0x2B567F4", VA = "0x2B567F4", Slot = "15")]
	public override void ShellPopUp()
	{
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x2B568D8", Offset = "0x2B568D8", VA = "0x2B568D8", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x2B56D24", Offset = "0x2B56D24", VA = "0x2B56D24")]
	public Weapon_Machine()
	{
	}
}
[Token(Token = "0x20003FB")]
public class Weapon_Melee : MonoBehaviour
{
	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE63538", Offset = "0xE63538")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public e_Attack_type type;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isTriggerMaterialEffect;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hitEffect;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Collider> collisionComList;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float damageInterval;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float time;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isAttack;

	[Token(Token = "0x17000259")]
	public WUnit Owner
	{
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x2B56D88", Offset = "0x2B56D88", VA = "0x2B56D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DF04", Offset = "0xE6DF04")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x2B56D90", Offset = "0x2B56D90", VA = "0x2B56D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DF14", Offset = "0xE6DF14")]
		protected set
		{
		}
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x2B56D98", Offset = "0x2B56D98", VA = "0x2B56D98", Slot = "4")]
	public virtual void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x2B56DC8", Offset = "0x2B56DC8", VA = "0x2B56DC8", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x2B56FF8", Offset = "0x2B56FF8", VA = "0x2B56FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x2B570CC", Offset = "0x2B570CC", VA = "0x2B570CC", Slot = "6")]
	protected virtual void DoTriggerStay(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x2B57238", Offset = "0x2B57238", VA = "0x2B57238", Slot = "7")]
	protected virtual void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x2B5723C", Offset = "0x2B5723C", VA = "0x2B5723C", Slot = "8")]
	protected virtual void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x2B57240", Offset = "0x2B57240", VA = "0x2B57240", Slot = "9")]
	protected virtual bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x2B57758", Offset = "0x2B57758", VA = "0x2B57758", Slot = "10")]
	protected virtual void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x2B57824", Offset = "0x2B57824", VA = "0x2B57824")]
	public void OnStartAttack()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x2B57830", Offset = "0x2B57830", VA = "0x2B57830")]
	public void OnStopAttack()
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x2B57838", Offset = "0x2B57838", VA = "0x2B57838")]
	public Weapon_Melee()
	{
	}
}
[Token(Token = "0x20003FC")]
public class Weapon_Needle_gun : Weapon_Rifle
{
	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Transform targetPosition;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private string EjectAnim;

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x2B57850", Offset = "0x2B57850", VA = "0x2B57850", Slot = "15")]
	public override void ShellPopUp()
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x2B57934", Offset = "0x2B57934", VA = "0x2B57934", Slot = "24")]
	protected override void AnimWeaponTrigger(bool Tirgger)
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x2B57AAC", Offset = "0x2B57AAC", VA = "0x2B57AAC", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x2B57D90", Offset = "0x2B57D90", VA = "0x2B57D90", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x2B581DC", Offset = "0x2B581DC", VA = "0x2B581DC")]
	public Weapon_Needle_gun()
	{
	}
}
[Token(Token = "0x20003FD")]
public class Weapon_Plasma_pistol : Weapon_Rifle
{
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55C8C", Offset = "0xE55C8C")]
	private sealed class <GunShot>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon_Plasma_pistol <>4__this;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x2067440", Offset = "0x2067440", VA = "0x2067440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x2067488", Offset = "0x2067488", VA = "0x2067488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x2067298", Offset = "0x2067298", VA = "0x2067298")]
		[DebuggerHidden]
		public <GunShot>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x20672C4", Offset = "0x20672C4", VA = "0x20672C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x20672C8", Offset = "0x20672C8", VA = "0x20672C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x2067448", Offset = "0x2067448", VA = "0x2067448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55C9C", Offset = "0xE55C9C")]
	private sealed class <DisableChargeEffect>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon_Plasma_pistol <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x2067248", Offset = "0x2067248", VA = "0x2067248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x2067290", Offset = "0x2067290", VA = "0x2067290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x2066FEC", Offset = "0x2066FEC", VA = "0x2066FEC")]
		[DebuggerHidden]
		public <DisableChargeEffect>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x2067018", Offset = "0x2067018", VA = "0x2067018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x206701C", Offset = "0x206701C", VA = "0x206701C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x2067250", Offset = "0x2067250", VA = "0x2067250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63548", Offset = "0xE63548")]
	public bool Gun_Charge;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public AudioEvent Gun_ShootCharge;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject ChargeObject;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private WwiseDefine ChargeWwiseDefine;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private bool SChargewwiseDefine;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63580", Offset = "0xE63580")]
	public float loadTime;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private float loadTimeCounter;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[SerializeField]
	private ParticleGroupEmitter chargeEffectEmitter;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[SerializeField]
	private ParticleGroupEmitter chargeEndEffectEmitter;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	[SerializeField]
	private float spreadAcceleration;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private float chargeDisableDelay;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private float chargeTime;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private float currentSpread;

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x2B58240", Offset = "0x2B58240", VA = "0x2B58240", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x2B5846C", Offset = "0x2B5846C", VA = "0x2B5846C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6DF24", Offset = "0xE6DF24")]
	private IEnumerator GunShot()
	{
		return null;
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x2B584E4", Offset = "0x2B584E4", VA = "0x2B584E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6DF84", Offset = "0xE6DF84")]
	private IEnumerator DisableChargeEffect()
	{
		return null;
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x2B5855C", Offset = "0x2B5855C", VA = "0x2B5855C", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x2B58588", Offset = "0x2B58588", VA = "0x2B58588")]
	private bool CheckLoadFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x2B585E0", Offset = "0x2B585E0", VA = "0x2B585E0", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x2B58D38", Offset = "0x2B58D38", VA = "0x2B58D38", Slot = "18")]
	public override void SyncFireLogicTrigger(bool trigger)
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x2B58DB0", Offset = "0x2B58DB0", VA = "0x2B58DB0", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0x2B58E74", Offset = "0x2B58E74", VA = "0x2B58E74")]
	public Weapon_Plasma_pistol()
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0x2B58E8C", Offset = "0x2B58E8C", VA = "0x2B58E8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6DFE4", Offset = "0xE6DFE4")]
	private void <DoUpdate>b__18_0()
	{
	}
}
[Token(Token = "0x2000400")]
public class Weapon_Rifle : Weapon
{
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55CAC", Offset = "0xE55CAC")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_Rifle <>4__this;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x2067490", Offset = "0x2067490", VA = "0x2067490")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x2067498", Offset = "0x2067498", VA = "0x2067498")]
		internal void <FireEffectLogic>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE635E8", Offset = "0xE635E8")]
	public Transform ShellPoint;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63620", Offset = "0xE63620")]
	public float ScatterCoefficient;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63638", Offset = "0xE63638")]
	public GameObject BulletEffectPrefab_Local;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63670", Offset = "0xE63670")]
	public GameObject BulletEffectPrefab_Other;

	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE636A8", Offset = "0xE636A8")]
	public float moveSpeed;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public float bulletOffset;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Vector2 randOffset;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public float minShowDistance;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public float delayDestroy;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public bool OrderFire;

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
	protected bool startFrie;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	[HideInInspector]
	public float fireEffectCoolDown;

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x2B55998", Offset = "0x2B55998", VA = "0x2B55998", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0x2B58F8C", Offset = "0x2B58F8C", VA = "0x2B58F8C", Slot = "25")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0x2B57AB0", Offset = "0x2B57AB0", VA = "0x2B57AB0", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x2B5904C", Offset = "0x2B5904C", VA = "0x2B5904C", Slot = "23")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0x2B592E8", Offset = "0x2B592E8", VA = "0x2B592E8", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x2B58CDC", Offset = "0x2B58CDC", VA = "0x2B58CDC")]
	protected bool CheckFireEffectInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x2B56730", Offset = "0x2B56730", VA = "0x2B56730", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x2B5931C", Offset = "0x2B5931C", VA = "0x2B5931C", Slot = "20")]
	protected override void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x2B51F84", Offset = "0x2B51F84", VA = "0x2B51F84")]
	public Weapon_Rifle()
	{
	}
}
[Token(Token = "0x2000402")]
public class Weapon_RocketLauncher : Weapon
{
	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE636F0", Offset = "0xE636F0")]
	public bool Gun_Idle_Switch;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public AudioEvent Gun_Idle;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject IdleObject;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject BulletObj;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float IntervalEmissionTime;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public List<Transform> FirePointList;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private int BulletNumber;

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x2B59694", Offset = "0x2B59694", VA = "0x2B59694", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x2B5976C", Offset = "0x2B5976C", VA = "0x2B5976C", Slot = "11")]
	public override void ReducingState()
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x2B59828", Offset = "0x2B59828", VA = "0x2B59828", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x2B599AC", Offset = "0x2B599AC", VA = "0x2B599AC")]
	public Weapon_RocketLauncher()
	{
	}
}
[Token(Token = "0x2000403")]
public class Weapon_Shield : Weapon
{
	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x2B599C8", Offset = "0x2B599C8", VA = "0x2B599C8", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x2B599CC", Offset = "0x2B599CC", VA = "0x2B599CC", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x2B599D0", Offset = "0x2B599D0", VA = "0x2B599D0", Slot = "17")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0x2B599D4", Offset = "0x2B599D4", VA = "0x2B599D4", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0x2B599D8", Offset = "0x2B599D8", VA = "0x2B599D8", Slot = "30")]
	public override void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x2B599DC", Offset = "0x2B599DC", VA = "0x2B599DC")]
	public Weapon_Shield()
	{
	}
}
[Token(Token = "0x2000404")]
public class Weapon_ShotGun : Weapon
{
	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63728", Offset = "0xE63728")]
	public float fireRange;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public float fireRangeDistance;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public int bulletNumber;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Transform ShellPoint;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float angle;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private string EjectAnim;

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0x2B599E4", Offset = "0x2B599E4", VA = "0x2B599E4", Slot = "15")]
	public override void ShellPopUp()
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x2B59AC8", Offset = "0x2B59AC8", VA = "0x2B59AC8", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0x2B59E2C", Offset = "0x2B59E2C", VA = "0x2B59E2C", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x2B5A268", Offset = "0x2B5A268", VA = "0x2B5A268")]
	public Weapon_ShotGun()
	{
	}
}
[Token(Token = "0x2000405")]
public class Weapon_pistol : Weapon_Rifle
{
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55CBC", Offset = "0xE55CBC")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_pistol <>4__this;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x20676FC", Offset = "0x20676FC", VA = "0x20676FC")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x2067704", Offset = "0x2067704", VA = "0x2067704")]
		internal void <FireEffectLogic>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private string EjectAnim;

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x2B5A2E0", Offset = "0x2B5A2E0", VA = "0x2B5A2E0", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0x2B5A3A4", Offset = "0x2B5A3A4", VA = "0x2B5A3A4", Slot = "15")]
	public override void ShellPopUp()
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x2B5A488", Offset = "0x2B5A488", VA = "0x2B5A488", Slot = "28")]
	protected override bool CheckFireInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0x2B5A4E4", Offset = "0x2B5A4E4", VA = "0x2B5A4E4", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x2B5A920", Offset = "0x2B5A920", VA = "0x2B5A920", Slot = "23")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x2B5ABB8", Offset = "0x2B5ABB8", VA = "0x2B5ABB8")]
	public Weapon_pistol()
	{
	}
}
[Token(Token = "0x2000407")]
public class Weapon_pistol_DE : Weapon_Rifle
{
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55CCC", Offset = "0xE55CCC")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_pistol_DE <>4__this;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x2067968", Offset = "0x2067968", VA = "0x2067968")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x2067970", Offset = "0x2067970", VA = "0x2067970")]
		internal void <FireEffectLogic>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private string EjectAnim;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float InitTrigger;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public float EndTrigger;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Transform ShotEffectTr;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private bool isFrist;

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x2B5AC1C", Offset = "0x2B5AC1C", VA = "0x2B5AC1C", Slot = "13")]
	public override void Init(WUnit owner, int id, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x2B5AD18", Offset = "0x2B5AD18", VA = "0x2B5AD18", Slot = "6")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x2B5AD44", Offset = "0x2B5AD44", VA = "0x2B5AD44", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0x2B5AD4C", Offset = "0x2B5AD4C", VA = "0x2B5AD4C", Slot = "7")]
	protected override void weaponReload()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0x2B5AE2C", Offset = "0x2B5AE2C", VA = "0x2B5AE2C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0x2B5AE84", Offset = "0x2B5AE84", VA = "0x2B5AE84", Slot = "16")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0x2B5B2C0", Offset = "0x2B5B2C0", VA = "0x2B5B2C0", Slot = "24")]
	protected override void AnimWeaponTrigger(bool Tirgger)
	{
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0x2B5B45C", Offset = "0x2B5B45C", VA = "0x2B5B45C", Slot = "26")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x2B5B5B8", Offset = "0x2B5B5B8", VA = "0x2B5B5B8", Slot = "15")]
	public override void ShellPopUp()
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x2B5B734", Offset = "0x2B5B734", VA = "0x2B5B734", Slot = "28")]
	protected override bool CheckFireInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0x2B5B790", Offset = "0x2B5B790", VA = "0x2B5B790", Slot = "23")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0x2B5BA28", Offset = "0x2B5BA28", VA = "0x2B5BA28", Slot = "22")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0x2B5BCE8", Offset = "0x2B5BCE8", VA = "0x2B5BCE8")]
	public Weapon_pistol_DE()
	{
	}
}
[Token(Token = "0x2000409")]
public class DialInteractable : XRBaseInteractable
{
	[Token(Token = "0x200040A")]
	public enum InteractionType
	{
		[Token(Token = "0x40019ED")]
		ControllerRotation,
		[Token(Token = "0x40019EE")]
		ControllerPull
	}

	[Token(Token = "0x200040B")]
	protected class NetSM_dial : NetSM_able
	{
		[Token(Token = "0x40019EF")]
		public const int AngleChanged = 200;

		[Token(Token = "0x40019F0")]
		public const int StepChanged = 201;

		[Token(Token = "0x40019F1")]
		public const int Changed = 202;

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x20F56FC", Offset = "0x20F56FC", VA = "0x20F56FC")]
		public static bool MatchAngleChanged(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x20F5730", Offset = "0x20F5730", VA = "0x20F5730")]
		public static bool MatchStepChanged(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x20F5764", Offset = "0x20F5764", VA = "0x20F5764")]
		public static bool MatchChanged(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x20F5798", Offset = "0x20F5798", VA = "0x20F5798")]
		public NetSM_dial()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200040C")]
	public class DialTurnedAngleEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001819")]
		[Address(RVA = "0x20F5664", Offset = "0x20F5664", VA = "0x20F5664")]
		public DialTurnedAngleEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200040D")]
	public class DialTurnedStepEvent : UnityEvent<int>
	{
		[Token(Token = "0x600181A")]
		[Address(RVA = "0x20F56B0", Offset = "0x20F56B0", VA = "0x20F56B0")]
		public DialTurnedStepEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200040E")]
	public class DialChangedEvent : UnityEvent<DialInteractable>
	{
		[Token(Token = "0x600181B")]
		[Address(RVA = "0x20F5618", Offset = "0x20F5618", VA = "0x20F5618")]
		public DialChangedEvent()
		{
		}
	}

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public InteractionType DialType;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Rigidbody RotatingRigidbody;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Vector3 LocalRotationAxis;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Vector3 LocalAxisStart;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float RotationAngleMaximum;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE63760", Offset = "0xE63760")]
	public int Steps;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool SnapOnRelease;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip SnapAudioClip;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public DialTurnedAngleEvent OnEffectDialAngleChanged;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public DialTurnedStepEvent OnEffectDialStepChanged;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public DialChangedEvent OnEffectDialChanged;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public DialTurnedAngleEvent OnDialAngleChanged;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public DialTurnedStepEvent OnDialStepChanged;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public DialChangedEvent OnDialChanged;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[HideInInspector]
	public XRBaseInteractor m_GrabbingInteractor;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Quaternion m_GrabbedRotation;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Vector3 m_StartingWorldAxis;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float m_CurrentEffectAngle;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int m_CurrentEffectStep;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float m_CurrentAngle;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int m_CurrentStep;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float m_StepSize;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Transform m_SyncTransform;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Transform m_OriginalTransform;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject HandAnimL;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject HandAnimR;

	[Token(Token = "0x1700025E")]
	public float CurrentAngle
	{
		[Token(Token = "0x6001805")]
		[Address(RVA = "0x24E8120", Offset = "0x24E8120", VA = "0x24E8120")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700025F")]
	public int CurrentStep
	{
		[Token(Token = "0x6001806")]
		[Address(RVA = "0x24E8128", Offset = "0x24E8128", VA = "0x24E8128")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x24E8130", Offset = "0x24E8130", VA = "0x24E8130", Slot = "30")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x24E829C", Offset = "0x24E829C", VA = "0x24E829C", Slot = "31")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x24E8328", Offset = "0x24E8328", VA = "0x24E8328", Slot = "12")]
	public override void InitBtInteractable(int id)
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0x24E843C", Offset = "0x24E843C", VA = "0x24E843C")]
	private void Start()
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x24E8610", Offset = "0x24E8610", VA = "0x24E8610")]
	public void ClearInteractable()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x24E86A4", Offset = "0x24E86A4", VA = "0x24E86A4")]
	public void ShowHand()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x24E885C", Offset = "0x24E885C", VA = "0x24E885C")]
	public void HideHand()
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x24E8A74", Offset = "0x24E8A74", VA = "0x24E8A74", Slot = "29")]
	public override void ProcessInteractable(XRInteractionUpdateOrder.UpdatePhase updatePhase)
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0x24E9248", Offset = "0x24E9248", VA = "0x24E9248", Slot = "21")]
	protected override void OnEffectSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x24E9418", Offset = "0x24E9418", VA = "0x24E9418", Slot = "23")]
	protected override void OnEffectSelectExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0x24E97EC", Offset = "0x24E97EC", VA = "0x24E97EC", Slot = "8")]
	public override void SyncNetStatus(int statusType, int status, Vector3 pos, Quaternion rot, [Optional] XRInteractNormalInfo[] normalInfo)
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x24E913C", Offset = "0x24E913C", VA = "0x24E913C")]
	private void SendInteractStatus(int status, float fParam, int iParam)
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0x24E99F0", Offset = "0x24E99F0", VA = "0x24E99F0", Slot = "16")]
	public override bool IsSelectableBy(XRBaseInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x24E9A80", Offset = "0x24E9A80", VA = "0x24E9A80")]
	public DialInteractable()
	{
	}
}
[Token(Token = "0x200040F")]
public class Bonuses : MonoBehaviour
{
	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE637A8", Offset = "0xE637A8")]
	public int Hp_scale;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE637E0", Offset = "0xE637E0")]
	public int Bullet_Limit;

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x290CC84", Offset = "0x290CC84", VA = "0x290CC84")]
	public void Hp_Add(XRBaseInteractor xRBaseInteractor)
	{
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x290CE10", Offset = "0x290CE10", VA = "0x290CE10")]
	public void Hp_Minus(XRBaseInteractor xRBaseInteractor)
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x290CF9C", Offset = "0x290CF9C", VA = "0x290CF9C")]
	public void Bullet_UpperLimit_Add(XRBaseInteractor xRBaseInteractor)
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x290D0FC", Offset = "0x290D0FC", VA = "0x290D0FC")]
	public void Bullet_UpperLimit_Minus(XRBaseInteractor xRBaseInteractor)
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x290D25C", Offset = "0x290D25C", VA = "0x290D25C")]
	public void TimeControl_Add(XRBaseInteractor xRBaseInteractor)
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x290D35C", Offset = "0x290D35C", VA = "0x290D35C")]
	public void TimeControl_Take(XRBaseInteractor xRBaseInteractor)
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0x290D478", Offset = "0x290D478", VA = "0x290D478")]
	public Bonuses()
	{
	}
}
[Token(Token = "0x2000410")]
public class ButtonDownInteractable : XRBaseInteractable
{
	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float IntervalTime;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float time;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Animator animator;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool CanSelect;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool isDetectionSpeed;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 lastPos;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float Distance;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool ClosedLoop;

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x27DD3EC", Offset = "0x27DD3EC", VA = "0x27DD3EC", Slot = "4")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x27DD3F4", Offset = "0x27DD3F4", VA = "0x27DD3F4", Slot = "12")]
	public override void InitBtInteractable(int ID)
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x27DD428", Offset = "0x27DD428", VA = "0x27DD428")]
	private void Start()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x27DD434", Offset = "0x27DD434", VA = "0x27DD434")]
	private void Update()
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0x27DD4F8", Offset = "0x27DD4F8", VA = "0x27DD4F8", Slot = "18")]
	protected override void OnHoverEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x27DD500", Offset = "0x27DD500", VA = "0x27DD500", Slot = "21")]
	protected override void OnEffectSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x27DD508", Offset = "0x27DD508", VA = "0x27DD508", Slot = "23")]
	protected override void OnEffectSelectExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x27DD510", Offset = "0x27DD510", VA = "0x27DD510", Slot = "17")]
	protected override void OnEffectHoverEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x27DD630", Offset = "0x27DD630", VA = "0x27DD630", Slot = "19")]
	protected override void OnEffectHoverExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x27DD638", Offset = "0x27DD638", VA = "0x27DD638", Slot = "16")]
	public override bool IsSelectableBy(XRBaseInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x27DD6D4", Offset = "0x27DD6D4", VA = "0x27DD6D4")]
	private void resetAnimator(string AniName)
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x27DD5D4", Offset = "0x27DD5D4", VA = "0x27DD5D4")]
	private void playAnimator(string AniName)
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0x27DD730", Offset = "0x27DD730", VA = "0x27DD730")]
	public ButtonDownInteractable()
	{
	}
}
[Token(Token = "0x2000411")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55CDC", Offset = "0xE55CDC")]
public class SocketTarget : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55D3C", Offset = "0xE55D3C")]
	private sealed class <DisableSocketDelayed>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRExclusiveSocketInteractor interactor;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x2061A00", Offset = "0x2061A00", VA = "0x2061A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x2061A48", Offset = "0x2061A48", VA = "0x2061A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x206191C", Offset = "0x206191C", VA = "0x206191C")]
		[DebuggerHidden]
		public <DisableSocketDelayed>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x2061948", Offset = "0x2061948", VA = "0x2061948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x206194C", Offset = "0x206194C", VA = "0x206194C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x2061A08", Offset = "0x2061A08", VA = "0x2061A08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SocketType;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRInteractableEvent SocketedEvent;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRInteractableEvent SocketedExit;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRInteractableEvent HoverEnter;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DisableSocketOnSocketed;

	[Token(Token = "0x6001830")]
	[Address(RVA = "0x2162964", Offset = "0x2162964", VA = "0x2162964")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0x2162AE8", Offset = "0x2162AE8", VA = "0x2162AE8")]
	public void HoverSwitchExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0x2162C98", Offset = "0x2162C98", VA = "0x2162C98")]
	public void SelectedSwitchEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0x2162DD0", Offset = "0x2162DD0", VA = "0x2162DD0")]
	public void SelectedSwitchExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0x2162C20", Offset = "0x2162C20", VA = "0x2162C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6E094", Offset = "0xE6E094")]
	private IEnumerator DisableSocketDelayed(XRExclusiveSocketInteractor interactor)
	{
		return null;
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0x2162F08", Offset = "0x2162F08", VA = "0x2162F08")]
	public SocketTarget()
	{
	}
}
[Token(Token = "0x2000413")]
public class TargetingInteractable : MonoBehaviour
{
	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> InteractableMaterial;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float SaveFresnel_Scale;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRTagUI SelectedObject;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _fresnel_strength;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _fresnel_Scale;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Eixt__fresnel_strength;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Eixt__fresnel_Scale;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int strengthPropertyID;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int scalePropertyID;

	[Token(Token = "0x600183C")]
	[Address(RVA = "0x2AB02AC", Offset = "0x2AB02AC", VA = "0x2AB02AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600183D")]
	[Address(RVA = "0x2AB035C", Offset = "0x2AB035C", VA = "0x2AB035C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E144", Offset = "0xE6E144")]
	public void TargetingEnter()
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0x2AB07E4", Offset = "0x2AB07E4", VA = "0x2AB07E4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E17C", Offset = "0xE6E17C")]
	public void TargetingEixt()
	{
	}

	[Token(Token = "0x600183F")]
	[Address(RVA = "0x2AB097C", Offset = "0x2AB097C", VA = "0x2AB097C")]
	public void TargetingEnter(XRBaseInteractor XR)
	{
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0x2AB0C08", Offset = "0x2AB0C08", VA = "0x2AB0C08")]
	public void TargetingEixt(XRBaseInteractor XR)
	{
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0x2AB04E8", Offset = "0x2AB04E8", VA = "0x2AB04E8")]
	private void SetFresnel(float Fresnel_strength, float Fresnel_Scale)
	{
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0x2AB0E98", Offset = "0x2AB0E98", VA = "0x2AB0E98")]
	public void ShowTagUI(WUnit wUnit)
	{
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0x2AB0EB4", Offset = "0x2AB0EB4", VA = "0x2AB0EB4")]
	public TargetingInteractable()
	{
	}
}
[Token(Token = "0x2000414")]
public class XRExclusiveSocketInteractor : XRSocketInteractor
{
	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string AcceptedType;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int ownerId;

	[Token(Token = "0x17000262")]
	public override int OwnerId
	{
		[Token(Token = "0x6001844")]
		[Address(RVA = "0x20E0724", Offset = "0x20E0724", VA = "0x20E0724", Slot = "12")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0x20E072C", Offset = "0x20E072C", VA = "0x20E072C")]
	public void SetOwnerId(int id)
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0x20E0734", Offset = "0x20E0734", VA = "0x20E0734", Slot = "14")]
	public override void InitBtInteractor(int ID)
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0x20E0744", Offset = "0x20E0744", VA = "0x20E0744", Slot = "21")]
	public override bool CanSelect(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0x20E0828", Offset = "0x20E0828", VA = "0x20E0828", Slot = "20")]
	public override bool CanHover(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0x20E0838", Offset = "0x20E0838", VA = "0x20E0838")]
	public XRExclusiveSocketInteractor()
	{
	}
}
[Token(Token = "0x2000415")]
public class XRHalidomIntercator : XRExclusiveSocketInteractor
{
	[Token(Token = "0x600184A")]
	[Address(RVA = "0x20E1488", Offset = "0x20E1488", VA = "0x20E1488")]
	public void F_Track_Tf(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0x20E15CC", Offset = "0x20E15CC", VA = "0x20E15CC")]
	public void T_Track_Tf(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0x20E164C", Offset = "0x20E164C", VA = "0x20E164C")]
	public XRHalidomIntercator()
	{
	}
}
[Token(Token = "0x2000416")]
public class PointToFunctionality : MonoBehaviour
{
	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PointToAni;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string PointToReleaseAni;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider PointToTrigger;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider NormalInteractTrigger;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider FingerInteractTrigger;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool IsPointTo;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<string, float, int> AniAct;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WUnit owner;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private XRControllerCollector collector;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private XRBaseControllerInteractor ctrlInteractor;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isLeft;

	[Token(Token = "0x17000263")]
	public bool IsRealPointTo
	{
		[Token(Token = "0x600184D")]
		[Address(RVA = "0x23133A0", Offset = "0x23133A0", VA = "0x23133A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0x23133A8", Offset = "0x23133A8", VA = "0x23133A8")]
	public void Init(WUnit owner, XRControllerCollector collector, bool isLeft)
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0x23135A8", Offset = "0x23135A8", VA = "0x23135A8")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0x23135AC", Offset = "0x23135AC", VA = "0x23135AC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0x23135F4", Offset = "0x23135F4", VA = "0x23135F4")]
	private void DoTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0x2313698", Offset = "0x2313698", VA = "0x2313698")]
	private void DoTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0x23135F8", Offset = "0x23135F8", VA = "0x23135F8")]
	private void DoEnter(Collider other)
	{
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0x2313824", Offset = "0x2313824", VA = "0x2313824")]
	private void DoTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0x231369C", Offset = "0x231369C", VA = "0x231369C")]
	private bool CanPointTo()
	{
		return default(bool);
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0x2313730", Offset = "0x2313730", VA = "0x2313730")]
	public void UsePointTo()
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0x23138B8", Offset = "0x23138B8", VA = "0x23138B8")]
	public void ReleasePointTo()
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0x23139A8", Offset = "0x23139A8", VA = "0x23139A8")]
	private void PlayAni(bool isPointTo)
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0x2313A30", Offset = "0x2313A30", VA = "0x2313A30")]
	public void ResetPointTo()
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x2313A40", Offset = "0x2313A40", VA = "0x2313A40")]
	public PointToFunctionality()
	{
	}
}
[Token(Token = "0x2000417")]
public class RayInteractor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55D4C", Offset = "0xE55D4C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__11_0;

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x205FEB4", Offset = "0x205FEB4", VA = "0x205FEB4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x205FEBC", Offset = "0x205FEBC", VA = "0x205FEBC")]
		internal int <FixedUpdate>b__11_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit Unit;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRDirectInteractor XRDirectInteractor;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FollowVRController FollowVRController;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radius;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TargetingInteractable InteractableColl;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempHitCollider;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CartridgeBag cartridgeBag;

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x2718B8C", Offset = "0x2718B8C", VA = "0x2718B8C")]
	public void DOIint(WUnit wUnit, bool isR, XRDirectInteractor xRDInteractor)
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0x2718C14", Offset = "0x2718C14", VA = "0x2718C14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x2718C20", Offset = "0x2718C20", VA = "0x2718C20")]
	public void setInteractableNull()
	{
	}

	[Token(Token = "0x600185E")]
	[Address(RVA = "0x2718C2C", Offset = "0x2718C2C", VA = "0x2718C2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0x27191F0", Offset = "0x27191F0", VA = "0x27191F0")]
	private void RayTarget(RaycastHit RaycastHit)
	{
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0x27193E0", Offset = "0x27193E0", VA = "0x27193E0")]
	public RayInteractor()
	{
	}
}
[Token(Token = "0x2000419")]
public class FixTeleportRigbody : MonoBehaviour
{
	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRDirectInteractor leftHand;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRDirectInteractor rightHand;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportationProvider teleportationProvider;

	[Token(Token = "0x6001865")]
	[Address(RVA = "0x223F430", Offset = "0x223F430", VA = "0x223F430")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0x223F588", Offset = "0x223F588", VA = "0x223F588")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0x223F6E0", Offset = "0x223F6E0", VA = "0x223F6E0")]
	public void BeginFix(TeleportRequest teleportRequest)
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0x223F6E4", Offset = "0x223F6E4", VA = "0x223F6E4")]
	public void EndFix(TeleportRequest teleportRequest)
	{
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0x223F8AC", Offset = "0x223F8AC", VA = "0x223F8AC")]
	private void Teleport(XRGrabInteractable grabInteractable, TeleportRequest teleportRequest)
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0x223F938", Offset = "0x223F938", VA = "0x223F938")]
	public FixTeleportRigbody()
	{
	}
}
[Token(Token = "0x200041A")]
[Flags]
public enum GameTransportAreaStep
{
	[Token(Token = "0x4001A2A")]
	None = 1,
	[Token(Token = "0x4001A2B")]
	SafeRoom_Step_1 = 2,
	[Token(Token = "0x4001A2C")]
	SafeRoom_Step_2 = 4,
	[Token(Token = "0x4001A2D")]
	GameScene_01_Step_1 = 8,
	[Token(Token = "0x4001A2E")]
	GameScene_01_Step_2 = 0x10,
	[Token(Token = "0x4001A2F")]
	GameScene_02_Step_1 = 0x20,
	[Token(Token = "0x4001A30")]
	GameScene_03_Step_1 = 0x40,
	[Token(Token = "0x4001A31")]
	GameScene_04_Step_1 = 0x80,
	[Token(Token = "0x4001A32")]
	GameScene_04_Step_2 = 0x100
}
[Token(Token = "0x200041B")]
public class GameTransportArea : MonoSingleton<GameTransportArea>
{
	[Serializable]
	[Token(Token = "0x200041C")]
	public class GameTransportAreaCell
	{
		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameTransportAreaStep areaStep;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject area;

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x28435C0", Offset = "0x28435C0", VA = "0x28435C0")]
		public GameTransportAreaCell()
		{
		}
	}

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameTransportAreaStep initStep;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameTransportAreaCell[] gameTransportAreaCells;

	[Token(Token = "0x600186B")]
	[Address(RVA = "0x224FFD8", Offset = "0x224FFD8", VA = "0x224FFD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0x22500DC", Offset = "0x22500DC", VA = "0x22500DC")]
	public void Init()
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0x224FFE0", Offset = "0x224FFE0", VA = "0x224FFE0")]
	public void TriggerStep(GameTransportAreaStep step)
	{
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0x22500E4", Offset = "0x22500E4", VA = "0x22500E4")]
	public GameTransportArea()
	{
	}
}
[Token(Token = "0x200041D")]
public abstract class TeleportInteractableBase : XRBaseInteractable
{
	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	protected MatchOrientation m_MatchOrientation;

	[Token(Token = "0x17000264")]
	public MatchOrientation matchOrientation
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x2AB0EEC", Offset = "0x2AB0EEC", VA = "0x2AB0EEC")]
		get
		{
			return default(MatchOrientation);
		}
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x2AB0EF4", Offset = "0x2AB0EF4", VA = "0x2AB0EF4")]
		set
		{
		}
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0x2AB0EFC", Offset = "0x2AB0EFC", VA = "0x2AB0EFC", Slot = "34")]
	protected virtual bool GenerateTeleportRequest(XRBaseInteractor interactor, Vector3 Pos, Quaternion quaternion, ref TeleportRequest teleportRequest)
	{
		return default(bool);
	}

	[Token(Token = "0x6001873")]
	[Address(RVA = "0x2AB0F04", Offset = "0x2AB0F04", VA = "0x2AB0F04")]
	private void SendTeleportRequest(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0x2AB1268", Offset = "0x2AB1268", VA = "0x2AB1268", Slot = "20")]
	protected override void OnHoverExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0x2AB1298", Offset = "0x2AB1298", VA = "0x2AB1298")]
	protected TeleportInteractableBase()
	{
	}
}
[Token(Token = "0x200041E")]
public class TeleportProvider : TeleportationProvider
{
	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE63848", Offset = "0xE63848")]
	private static TeleportProvider <Instance>k__BackingField;

	[Token(Token = "0x17000265")]
	public static TeleportProvider Instance
	{
		[Token(Token = "0x6001876")]
		[Address(RVA = "0x2AB12A0", Offset = "0x2AB12A0", VA = "0x2AB12A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E1B4", Offset = "0xE6E1B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001877")]
		[Address(RVA = "0x2AB12EC", Offset = "0x2AB12EC", VA = "0x2AB12EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E1C4", Offset = "0xE6E1C4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0x2AB1340", Offset = "0x2AB1340", VA = "0x2AB1340", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0x2AB139C", Offset = "0x2AB139C", VA = "0x2AB139C")]
	public TeleportProvider()
	{
	}
}
[Token(Token = "0x200041F")]
public class TransportArea : TeleportInteractableBase
{
	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int AreaID;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int StoreyCount;

	[Token(Token = "0x600187A")]
	[Address(RVA = "0x2ABB82C", Offset = "0x2ABB82C", VA = "0x2ABB82C", Slot = "30")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0x2ABB840", Offset = "0x2ABB840", VA = "0x2ABB840", Slot = "12")]
	public override void InitBtInteractable(int id)
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0x2ABB84C", Offset = "0x2ABB84C", VA = "0x2ABB84C", Slot = "34")]
	protected override bool GenerateTeleportRequest(XRBaseInteractor interactor, Vector3 Pos, Quaternion quaternion, ref TeleportRequest teleportRequest)
	{
		return default(bool);
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0x2ABB8E0", Offset = "0x2ABB8E0", VA = "0x2ABB8E0")]
	public TransportArea()
	{
	}
}
[Token(Token = "0x2000420")]
public class TransportController : MonoBehaviour
{
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55D6C", Offset = "0xE55D6C")]
	private sealed class <InitAsync>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransportController <>4__this;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x2063B54", Offset = "0x2063B54", VA = "0x2063B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x2063B9C", Offset = "0x2063B9C", VA = "0x2063B9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x20638E8", Offset = "0x20638E8", VA = "0x20638E8")]
		[DebuggerHidden]
		public <InitAsync>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x2063914", Offset = "0x2063914", VA = "0x2063914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x2063918", Offset = "0x2063918", VA = "0x2063918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x2063B5C", Offset = "0x2063B5C", VA = "0x2063B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55D7C", Offset = "0xE55D7C")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Target;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransportController <>4__this;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x2063758", Offset = "0x2063758", VA = "0x2063758")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x2063760", Offset = "0x2063760", VA = "0x2063760")]
		internal void <LookAtTarget>b__0()
		{
		}
	}

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TrackedBase;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TrackedCamera;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportationProvider teleportationProvider;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRTransportInteractor RightTeleportInteractor;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRTransportInteractor LeftTeleportInteractor;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isLRRotateAround;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float RotateAroundAngleByFrame;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RotateAroundSpeed;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isLeftTranslation;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool isRightTranslation;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool isSmoothRotation;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float TranslationSpeed;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float TranslationDisByFrame;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputDevice m_LeftInputDevice;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InputDevice m_RightInputDevice;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TransportLineVisual m_RightLineVisual;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TransportLineVisual m_LeftLineVisual;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private XRReleaseController m_RightController;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private XRReleaseController m_LeftController;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_PreviousRightClicked;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool m_PreviousLeftClicked;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool m_LastFrameRightEnable;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool m_LastFrameLeftEnable;

	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private LayerMask m_OriginalRightMask;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LayerMask m_OriginalLeftMask;

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 rotateAround_pos;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion rotateAround_rot;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isRotateAround_R;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isRotateAround_L;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isTranslation;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool isBeginLocomotion;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float GameModeHeighOffset;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63858", Offset = "0xE63858")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63858", Offset = "0xE63858")]
	public float joystickAngle;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float max;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public bool isTranslationMask;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WUnit owner;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CharacterMono character;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isStart;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TransportController _instance;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float angle;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject MoveFxPrefab;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject moveFx_Left;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject moveFx_Right;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Renderer moveFxRender_Left;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Renderer moveFxRender_Right;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Tween moveTn_Left;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Tween moveTn_Right;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 TrackedCameraPos;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 MonsterCheckPos;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float frameCount;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float passedTime;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float fpsByDeltatime;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float realtimesFPS;

	[Token(Token = "0x17000266")]
	public bool IsStart
	{
		[Token(Token = "0x600187E")]
		[Address(RVA = "0x2ABB8E8", Offset = "0x2ABB8E8", VA = "0x2ABB8E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600187F")]
		[Address(RVA = "0x2ABB8F0", Offset = "0x2ABB8F0", VA = "0x2ABB8F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000267")]
	public static TransportController Instance
	{
		[Token(Token = "0x6001880")]
		[Address(RVA = "0x2ABB8FC", Offset = "0x2ABB8FC", VA = "0x2ABB8FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0x2ABB948", Offset = "0x2ABB948", VA = "0x2ABB948")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0x2ABB99C", Offset = "0x2ABB99C", VA = "0x2ABB99C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0x2ABBCC4", Offset = "0x2ABBCC4", VA = "0x2ABBCC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0x2ABBFE8", Offset = "0x2ABBFE8", VA = "0x2ABBFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0x2ABC1E4", Offset = "0x2ABC1E4", VA = "0x2ABC1E4")]
	public void Init()
	{
	}

	[Token(Token = "0x6001886")]
	[Address(RVA = "0x2ABC234", Offset = "0x2ABC234", VA = "0x2ABC234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6E1D4", Offset = "0xE6E1D4")]
	private IEnumerator InitAsync()
	{
		return null;
	}

	[Token(Token = "0x6001887")]
	[Address(RVA = "0x2ABC2AC", Offset = "0x2ABC2AC", VA = "0x2ABC2AC")]
	private int GetId(int ID, bool isLeft)
	{
		return default(int);
	}

	[Token(Token = "0x6001888")]
	[Address(RVA = "0x2ABC2C4", Offset = "0x2ABC2C4", VA = "0x2ABC2C4")]
	private void RegisterDevices(InputDevice connectedDevice)
	{
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0x2ABC340", Offset = "0x2ABC340", VA = "0x2ABC340")]
	private void Update()
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0x2ABC564", Offset = "0x2ABC564", VA = "0x2ABC564")]
	public void SetPlayerMoveType(bool IsTranslation_R, bool IsTranslation_L, bool TranslationMask, bool IsSmoothRotation)
	{
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0x2ABC454", Offset = "0x2ABC454", VA = "0x2ABC454")]
	private void TeleportUpdate()
	{
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0x2ABC588", Offset = "0x2ABC588", VA = "0x2ABC588")]
	private void RightTeleportUpdate(Vector2 axisInput)
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x2ABC7A0", Offset = "0x2ABC7A0", VA = "0x2ABC7A0")]
	private void LeftTeleportUpdate(Vector2 axisInput)
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x2ABC9B4", Offset = "0x2ABC9B4", VA = "0x2ABC9B4")]
	public void OnBeginLocomotion(TeleportRequest teleportRequest)
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x2ABC9C4", Offset = "0x2ABC9C4", VA = "0x2ABC9C4")]
	private void EndFix(TeleportRequest teleportRequest)
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x2ABCB14", Offset = "0x2ABCB14", VA = "0x2ABCB14")]
	private void PlayTransportEndAudio()
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x2ABC934", Offset = "0x2ABC934", VA = "0x2ABC934")]
	private void LeftRotateAroundUpdate(Vector2 axisInput)
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0x2ABC71C", Offset = "0x2ABC71C", VA = "0x2ABC71C")]
	private void RightRotateAroundUpdate(Vector2 axisInput)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0x2ABCD80", Offset = "0x2ABCD80", VA = "0x2ABCD80")]
	private void RotateAroundUpdate(Vector2 axisInput, bool isRight = false)
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x2ABCBC4", Offset = "0x2ABCBC4", VA = "0x2ABCBC4")]
	private void RotateAroundUpdate_Smoothness(Vector2 axisInput, bool isRight = false)
	{
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x2ABCFA4", Offset = "0x2ABCFA4", VA = "0x2ABCFA4")]
	public void LookAtTarget(Transform Target, Action action)
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x2ABD094", Offset = "0x2ABD094", VA = "0x2ABD094")]
	public void SetPlayerRotato(float RotateAroundAngle)
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x2ABD238", Offset = "0x2ABD238", VA = "0x2ABD238")]
	public void SetMoveFx_Right(bool isActive, bool isDoTween = false)
	{
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0x2ABD69C", Offset = "0x2ABD69C", VA = "0x2ABD69C")]
	public void SetMoveFx_Left(bool isActive, bool isDoTween = false)
	{
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0x2ABDB00", Offset = "0x2ABDB00", VA = "0x2ABDB00")]
	private void RightMove(Vector2 vector2)
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0x2ABDF1C", Offset = "0x2ABDF1C", VA = "0x2ABDF1C")]
	private void LeftMove(Vector2 vector2)
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0x2ABE340", Offset = "0x2ABE340", VA = "0x2ABE340")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0x2ABE42C", Offset = "0x2ABE42C", VA = "0x2ABE42C")]
	public TransportController()
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0x2ABE468", Offset = "0x2ABE468", VA = "0x2ABE468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E234", Offset = "0xE6E234")]
	private void <SetMoveFx_Right>b__74_0()
	{
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x2ABE488", Offset = "0x2ABE488", VA = "0x2ABE488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E244", Offset = "0xE6E244")]
	private void <SetMoveFx_Left>b__75_0()
	{
	}
}
[Token(Token = "0x2000423")]
public interface ILineRenderable
{
	[Token(Token = "0x60018A7")]
	bool GetLinePoints(ref Vector3[] linePoints, ref int noPoints);

	[Token(Token = "0x60018A8")]
	bool TryGetHitInfo(ref Vector3 position, ref Vector3 normal, ref int positionInLine, ref bool isValidTarget);
}
[Token(Token = "0x2000424")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55D8C", Offset = "0xE55D8C")]
public class TransportLineVisual : MonoBehaviour
{
	[Token(Token = "0x4001A76")]
	private const float k_MinLineWidth = 0.0001f;

	[Token(Token = "0x4001A77")]
	private const float k_MaxLineWidth = 0.05f;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE638BC", Offset = "0xE638BC")]
	private float m_LineWidth;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_OverrideInteractorLineLength;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_LineLength;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve m_WidthCurve;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Gradient m_ValidColorGradient;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Gradient m_InvalidColorGradient;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_SmoothMovement;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_FollowTightness;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_SnapThresholdDistance;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject wallReticle;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_Reticle;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool m_StopLineAtFirstRaycastHit;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_ReticlePos;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 m_ReticleNormal;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_EndPositionInLine;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_SnapCurve;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool m_PerformSetup;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool m_PreviousHit;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool m_CurrentHit;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject m_ReticleToUse;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer m_LineRenderer;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ILineRenderable m_LineRenderable;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] m_TargetPoints;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_NoTargetPoints;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] m_RenderPoints;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int m_NoRenderPoints;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3[] m_PreviousRenderPoints;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int m_NoPreviousRenderPoints;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3[] m_ClearArray;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public float AngleY;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Quaternion quaternion;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float Angle;

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject m_CustomReticle;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_CustomReticleAttached;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private XRTransportInteractor XRRay;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE639C4", Offset = "0xE639C4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE639C4", Offset = "0xE639C4")]
	public float controlPointHeight;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63A18", Offset = "0xE63A18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63A18", Offset = "0xE63A18")]
	public float controlPointDistance;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63A6C", Offset = "0xE63A6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63A6C", Offset = "0xE63A6C")]
	public float offectY;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63AC0", Offset = "0xE63AC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63AC0", Offset = "0xE63AC0")]
	public float rayRadius;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63B18", Offset = "0xE63B18")]
	public bool isHitpointNormalOffect;

	[Token(Token = "0x1700026A")]
	public float lineWidth
	{
		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x2ABE544", Offset = "0x2ABE544", VA = "0x2ABE544")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x2ABE54C", Offset = "0x2ABE54C", VA = "0x2ABE54C")]
		set
		{
		}
	}

	[Token(Token = "0x1700026B")]
	public bool overrideInteractorLineLength
	{
		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x2ABE55C", Offset = "0x2ABE55C", VA = "0x2ABE55C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x2ABE564", Offset = "0x2ABE564", VA = "0x2ABE564")]
		set
		{
		}
	}

	[Token(Token = "0x1700026C")]
	public float lineLength
	{
		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x2ABE570", Offset = "0x2ABE570", VA = "0x2ABE570")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x2ABE578", Offset = "0x2ABE578", VA = "0x2ABE578")]
		set
		{
		}
	}

	[Token(Token = "0x1700026D")]
	private AnimationCurve widthCurve
	{
		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x2ABE580", Offset = "0x2ABE580", VA = "0x2ABE580")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x2ABE588", Offset = "0x2ABE588", VA = "0x2ABE588")]
		set
		{
		}
	}

	[Token(Token = "0x1700026E")]
	public Gradient validColorGradient
	{
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x2ABE5B8", Offset = "0x2ABE5B8", VA = "0x2ABE5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x2ABE5C0", Offset = "0x2ABE5C0", VA = "0x2ABE5C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700026F")]
	public Gradient invalidColorGradient
	{
		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x2ABE5C8", Offset = "0x2ABE5C8", VA = "0x2ABE5C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x2ABE5D0", Offset = "0x2ABE5D0", VA = "0x2ABE5D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000270")]
	public bool smoothMovement
	{
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x2ABE5D8", Offset = "0x2ABE5D8", VA = "0x2ABE5D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x2ABE5E0", Offset = "0x2ABE5E0", VA = "0x2ABE5E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000271")]
	public float followTightness
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x2ABE5EC", Offset = "0x2ABE5EC", VA = "0x2ABE5EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x2ABE5F4", Offset = "0x2ABE5F4", VA = "0x2ABE5F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000272")]
	public float snapThresholdDistance
	{
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x2ABE5FC", Offset = "0x2ABE5FC", VA = "0x2ABE5FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x2ABE604", Offset = "0x2ABE604", VA = "0x2ABE604")]
		set
		{
		}
	}

	[Token(Token = "0x17000273")]
	public GameObject reticle
	{
		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x2ABE60C", Offset = "0x2ABE60C", VA = "0x2ABE60C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x2ABE614", Offset = "0x2ABE614", VA = "0x2ABE614")]
		set
		{
		}
	}

	[Token(Token = "0x17000274")]
	public bool stopLineAtFirstRaycastHit
	{
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x2ABE61C", Offset = "0x2ABE61C", VA = "0x2ABE61C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x2ABE624", Offset = "0x2ABE624", VA = "0x2ABE624")]
		set
		{
		}
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0x2ABE630", Offset = "0x2ABE630", VA = "0x2ABE630")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0x2ABE794", Offset = "0x2ABE794", VA = "0x2ABE794")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0x2ABE804", Offset = "0x2ABE804", VA = "0x2ABE804")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0x2ABE7C8", Offset = "0x2ABE7C8", VA = "0x2ABE7C8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0x2ABEAA8", Offset = "0x2ABEAA8", VA = "0x2ABEAA8")]
	private void ClearLineRenderer()
	{
	}

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0x2ABEB00", Offset = "0x2ABEB00", VA = "0x2ABEB00")]
	private void Update()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0x2ABEB5C", Offset = "0x2ABEB5C", VA = "0x2ABEB5C")]
	private void UpdateLineVisual()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0x2ABFB2C", Offset = "0x2ABFB2C", VA = "0x2ABFB2C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0x2ABE720", Offset = "0x2ABE720", VA = "0x2ABE720")]
	private void UpdateSettings()
	{
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0x2ABE960", Offset = "0x2ABE960", VA = "0x2ABE960")]
	private bool TryFindLineRenderer()
	{
		return default(bool);
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0x2ABFB30", Offset = "0x2ABFB30", VA = "0x2ABFB30")]
	public bool AttachCustomReticle(GameObject reticle)
	{
		return default(bool);
	}

	[Token(Token = "0x60018CA")]
	[Address(RVA = "0x2ABFC80", Offset = "0x2ABFC80", VA = "0x2ABFC80")]
	public bool RemoveCustomReticle()
	{
		return default(bool);
	}

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0x2ABF9BC", Offset = "0x2ABF9BC", VA = "0x2ABF9BC")]
	private void DrawNewBeizer()
	{
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0x2ABFD74", Offset = "0x2ABFD74", VA = "0x2ABFD74")]
	public Vector3 GetBezierCurveControllerPoint(Vector3 endPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0x2ABFE7C", Offset = "0x2ABFE7C", VA = "0x2ABFE7C")]
	private Vector3[] GetBeizerPathPointList(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint, int pointNum)
	{
		return null;
	}

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0x2ABFF9C", Offset = "0x2ABFF9C", VA = "0x2ABFF9C")]
	private Vector3 GetBeizerPathPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0x2ABFFFC", Offset = "0x2ABFFFC", VA = "0x2ABFFFC")]
	public TransportLineVisual()
	{
	}
}
[Token(Token = "0x2000425")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE55DFC", Offset = "0xE55DFC")]
public class XRTransportInteractor : XRBaseControllerInteractor, ILineRenderable
{
	[Token(Token = "0x2000426")]
	private class RaycastHitComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x6001903")]
		[Address(RVA = "0x2067E3C", Offset = "0x2067E3C", VA = "0x2067E3C", Slot = "4")]
		public int Compare(RaycastHit a, RaycastHit b)
		{
			return default(int);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x2067F54", Offset = "0x2067F54", VA = "0x2067F54")]
		public RaycastHitComparer()
		{
		}
	}

	[Token(Token = "0x2000427")]
	public enum LineType
	{
		[Token(Token = "0x4001AC4")]
		StraightLine,
		[Token(Token = "0x4001AC5")]
		ProjectileCurve,
		[Token(Token = "0x4001AC6")]
		BezierCurve
	}

	[Token(Token = "0x2000428")]
	public enum HitDetectionType
	{
		[Token(Token = "0x4001AC8")]
		Raycast,
		[Token(Token = "0x4001AC9")]
		SphereCast
	}

	[Token(Token = "0x4001AA0")]
	private const float k_DefaultMaxRaycastDistance = 30f;

	[Token(Token = "0x4001AA1")]
	private const float k_DefaultHoverTimeToSelect = 0.5f;

	[Token(Token = "0x4001AA2")]
	private const int kMaxRaycastHits = 10;

	[Token(Token = "0x4001AA3")]
	private const int k_MinLineSamples = 2;

	[Token(Token = "0x4001AA4")]
	private const int k_MaxLineSamples = 100;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63B50", Offset = "0xE63B50")]
	public bool m_isConnectReticle;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63B88", Offset = "0xE63B88")]
	[SerializeField]
	private bool m_isFixHitPoint;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63BD4", Offset = "0xE63BD4")]
	[SerializeField]
	private float m_hitPointOffect;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public int m_firstHitIndex;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	[SerializeField]
	private LineType m_LineType;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private float m_MaxRaycastDistance;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private Transform m_ReferenceFrame;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private float m_Velocity;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[SerializeField]
	private float m_Acceleration;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private float m_AdditionalFlightTime;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[SerializeField]
	private float m_EndPointDistance;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private float m_EndPointHeight;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[SerializeField]
	private float m_ControlPointDistance;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private float m_ControlPointHeight;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE63CC0", Offset = "0xE63CC0")]
	private int m_SampleFrequency;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private HitDetectionType m_HitDetectionType;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	[SerializeField]
	private float m_SphereCastRadius;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private LayerMask m_RaycastMask;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	[SerializeField]
	private QueryTriggerInteraction m_RaycastTriggerInteraction;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private RaycastHit[] m_RaycastHits;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private RaycastHitComparer m_RaycastHitComparer;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private List<XRBaseInteractable> m_ValidTargets;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3[] m_SamplePoints;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int m_NoSamplePoints;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int m_HitCount;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int m_HitPositionInLine;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3[] m_ControlPoints;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] s_CachedLinePoints;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[HideInInspector]
	public TransportLineVisual transportLineVisual;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public bool isHitFloorFirst;

	[Token(Token = "0x17000275")]
	public LineType lineType
	{
		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x20E5798", Offset = "0x20E5798", VA = "0x20E5798")]
		get
		{
			return default(LineType);
		}
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x20E57A0", Offset = "0x20E57A0", VA = "0x20E57A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000276")]
	public float maxRaycastDistance
	{
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x20E584C", Offset = "0x20E584C", VA = "0x20E584C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x20E5854", Offset = "0x20E5854", VA = "0x20E5854")]
		set
		{
		}
	}

	[Token(Token = "0x17000277")]
	public Transform referenceFrame
	{
		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x20E585C", Offset = "0x20E585C", VA = "0x20E585C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x20E5864", Offset = "0x20E5864", VA = "0x20E5864")]
		set
		{
		}
	}

	[Token(Token = "0x17000278")]
	public float Velocity
	{
		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x20E5874", Offset = "0x20E5874", VA = "0x20E5874")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x20E587C", Offset = "0x20E587C", VA = "0x20E587C")]
		set
		{
		}
	}

	[Token(Token = "0x17000279")]
	public float Acceleration
	{
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x20E5884", Offset = "0x20E5884", VA = "0x20E5884")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x20E588C", Offset = "0x20E588C", VA = "0x20E588C")]
		set
		{
		}
	}

	[Token(Token = "0x1700027A")]
	public float AdditionalFlightTime
	{
		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x20E5894", Offset = "0x20E5894", VA = "0x20E5894")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x20E589C", Offset = "0x20E589C", VA = "0x20E589C")]
		set
		{
		}
	}

	[Token(Token = "0x1700027B")]
	public float endPointDistance
	{
		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x20E58A4", Offset = "0x20E58A4", VA = "0x20E58A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x20E58AC", Offset = "0x20E58AC", VA = "0x20E58AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700027C")]
	public float endPointHeight
	{
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x20E58B4", Offset = "0x20E58B4", VA = "0x20E58B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x20E58BC", Offset = "0x20E58BC", VA = "0x20E58BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700027D")]
	public float controlPointDistance
	{
		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x20E58C4", Offset = "0x20E58C4", VA = "0x20E58C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x20E58CC", Offset = "0x20E58CC", VA = "0x20E58CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700027E")]
	public float controlPointHeight
	{
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x20E58D4", Offset = "0x20E58D4", VA = "0x20E58D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x20E58DC", Offset = "0x20E58DC", VA = "0x20E58DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700027F")]
	public int sampleFrequency
	{
		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x20E58E4", Offset = "0x20E58E4", VA = "0x20E58E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x20E58EC", Offset = "0x20E58EC", VA = "0x20E58EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000280")]
	public HitDetectionType hitDetectionType
	{
		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x20E58F4", Offset = "0x20E58F4", VA = "0x20E58F4")]
		get
		{
			return default(HitDetectionType);
		}
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x20E58FC", Offset = "0x20E58FC", VA = "0x20E58FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000281")]
	public float sphereCastRadius
	{
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x20E5904", Offset = "0x20E5904", VA = "0x20E5904")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x20E590C", Offset = "0x20E590C", VA = "0x20E590C")]
		set
		{
		}
	}

	[Token(Token = "0x17000282")]
	public LayerMask raycastMask
	{
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x20E5914", Offset = "0x20E5914", VA = "0x20E5914")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x20E591C", Offset = "0x20E591C", VA = "0x20E591C")]
		set
		{
		}
	}

	[Token(Token = "0x17000283")]
	public QueryTriggerInteraction raycastTriggerInteraction
	{
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x20E5924", Offset = "0x20E5924", VA = "0x20E5924")]
		get
		{
			return default(QueryTriggerInteraction);
		}
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x20E592C", Offset = "0x20E592C", VA = "0x20E592C")]
		set
		{
		}
	}

	[Token(Token = "0x17000284")]
	public float Angle
	{
		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x20E5934", Offset = "0x20E5934", VA = "0x20E5934")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000285")]
	protected override List<XRBaseInteractable> ValidTargets
	{
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x20E5AC0", Offset = "0x20E5AC0", VA = "0x20E5AC0", Slot = "36")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000286")]
	public Transform m_StartTransform
	{
		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x20E5AA8", Offset = "0x20E5AA8", VA = "0x20E5AA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0x20E57A8", Offset = "0x20E57A8", VA = "0x20E57A8")]
	private void RebuildSamplePoints()
	{
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0x20E5AC8", Offset = "0x20E5AC8", VA = "0x20E5AC8", Slot = "15")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0x20E5CBC", Offset = "0x20E5CBC", VA = "0x20E5CBC", Slot = "16")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0x20E5CE8", Offset = "0x20E5CE8", VA = "0x20E5CE8", Slot = "37")]
	public bool GetLinePoints(ref Vector3[] linePoints, ref int noPoints)
	{
		return default(bool);
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0x20E5DE8", Offset = "0x20E5DE8", VA = "0x20E5DE8", Slot = "38")]
	public bool TryGetHitInfo(ref Vector3 position, ref Vector3 normal, ref int positionInLine, ref bool isValidTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0x20E5FC4", Offset = "0x20E5FC4", VA = "0x20E5FC4")]
	public void UpdateUIModel(ref TrackedDeviceModel model)
	{
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0x20E5F50", Offset = "0x20E5F50", VA = "0x20E5F50")]
	public bool GetCurrentRaycastHit(out RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0x20E61B4", Offset = "0x20E61B4", VA = "0x20E61B4")]
	public Quaternion GetMoveQuaternion()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0x20E624C", Offset = "0x20E624C", VA = "0x20E624C")]
	private void UpdateControlPoints()
	{
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0x20E6430", Offset = "0x20E6430", VA = "0x20E6430")]
	private Vector3 CalculateBezierPoint(float t, Vector3 start, Vector3 control, Vector3 end)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0x20E6490", Offset = "0x20E6490", VA = "0x20E6490")]
	private Vector3 CalculateProjectilePoint(float t, Vector3 start, Vector3 velocity, Vector3 acceleration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0x20E5B40", Offset = "0x20E5B40", VA = "0x20E5B40")]
	private void FindReferenceFrame()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0x20E64E8", Offset = "0x20E64E8", VA = "0x20E64E8")]
	private int CheckCollidersBetweenPoints(Vector3 from, Vector3 to, int firstHitIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0x20E673C", Offset = "0x20E673C", VA = "0x20E673C")]
	private void FixHitPoint(RaycastHit oldHit)
	{
	}

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0x20E6A0C", Offset = "0x20E6A0C", VA = "0x20E6A0C", Slot = "17")]
	public override void GetValidTargets(List<XRBaseInteractable> validTargets)
	{
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0x20E7070", Offset = "0x20E7070", VA = "0x20E7070", Slot = "20")]
	public override bool CanHover(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001901")]
	[Address(RVA = "0x20E7078", Offset = "0x20E7078", VA = "0x20E7078", Slot = "21")]
	public override bool CanSelect(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001902")]
	[Address(RVA = "0x20E7080", Offset = "0x20E7080", VA = "0x20E7080")]
	public XRTransportInteractor()
	{
	}
}
[Token(Token = "0x2000429")]
public class XRControllerCollector : MonoBehaviour
{
	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLocal;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XROtherController OtherLeftCtrl;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XROtherController OtherRightCtrl;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRBaseControllerInteractor OtherLeftControllerInteractor;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public XRBaseControllerInteractor OtherRightControllerInteractor;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public XRLocalController LfetCtrl;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public XRLocalController RightCtrl;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public XRBaseControllerInteractor LeftControllerInteractor;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public XRBaseControllerInteractor RightControllerInteractor;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public XRRayInteractor RayControllerInteractorLeft;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public XRRayInteractor RayControllerInteractorRight;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public UnityEvent OnLoaclInit;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool IsRay;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRControllerCollector> CollectorList;

	[Token(Token = "0x6001905")]
	[Address(RVA = "0x2B610AC", Offset = "0x2B610AC", VA = "0x2B610AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0x2B61138", Offset = "0x2B61138", VA = "0x2B61138")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0x2B611C4", Offset = "0x2B611C4", VA = "0x2B611C4")]
	public static void StaticUpdate()
	{
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0x2B612B4", Offset = "0x2B612B4", VA = "0x2B612B4")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0x2B61390", Offset = "0x2B61390", VA = "0x2B61390")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0x2B61A44", Offset = "0x2B61A44", VA = "0x2B61A44")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0x2B61A2C", Offset = "0x2B61A2C", VA = "0x2B61A2C")]
	private int GetId(int ID, bool isLeft)
	{
		return default(int);
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0x2B61C1C", Offset = "0x2B61C1C", VA = "0x2B61C1C")]
	public void SetRayController(bool isRay, bool isTrigger = false)
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0x2B61C8C", Offset = "0x2B61C8C", VA = "0x2B61C8C")]
	public void SyncHandAni(bool isLeft, string ani, float transition, int layer)
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0x2B61D2C", Offset = "0x2B61D2C", VA = "0x2B61D2C")]
	public void GetHandPosAndRot(out Vector3 lhPos, out Quaternion lhRot, out Vector3 rhPos, out Quaternion rhRot)
	{
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0x2B61ED4", Offset = "0x2B61ED4", VA = "0x2B61ED4")]
	public void SyncPosAndRot(Vector3 lhPos, Quaternion lhRot, Vector3 rhPos, Quaternion rhRot)
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0x2B620C0", Offset = "0x2B620C0", VA = "0x2B620C0")]
	public void SyncPressTrigger(bool isLeft, int pressedType, bool isPressed)
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0x2B62108", Offset = "0x2B62108", VA = "0x2B62108")]
	public XRControllerCollector()
	{
	}
}
[Token(Token = "0x200042A")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE55E48", Offset = "0xE55E48")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE55E48", Offset = "0xE55E48")]
[DisallowMultipleComponent]
public class XRCustomInteractionManager : XRInteractionManager
{
	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRCustomInteractionManager Instance;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, XRNetBaseInteract> m_NetBaseInteractDic;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, XRBaseInteractor> m_InteractorDic;

	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, XRBaseInteractable> m_InteractableDic;

	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<XRNetBaseInteract> interactList;

	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<XRNetBaseInteract> exposedInActive;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<XRNetBaseInteract> exposedActive;

	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<XRInteractRigidbodyInfo> interactRbInfo;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastUpdateTime;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float localAuthorityStartTime;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool IsStart;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public XRControllerCollector XRControllerCollector;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public int IdNum;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public int IdNumInteractor;

	[Token(Token = "0x17000287")]
	public override bool IsServer
	{
		[Token(Token = "0x6001938")]
		[Address(RVA = "0x2B6545C", Offset = "0x2B6545C", VA = "0x2B6545C", Slot = "21")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001913")]
	[Address(RVA = "0x2B621A4", Offset = "0x2B621A4", VA = "0x2B621A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001914")]
	[Address(RVA = "0x2B622D0", Offset = "0x2B622D0", VA = "0x2B622D0")]
	public void OnInit()
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0x2B6251C", Offset = "0x2B6251C", VA = "0x2B6251C")]
	public void OnStart()
	{
	}

	[Token(Token = "0x6001916")]
	[Address(RVA = "0x2B626B4", Offset = "0x2B626B4", VA = "0x2B626B4")]
	public void OnStop()
	{
	}

	[Token(Token = "0x6001917")]
	[Address(RVA = "0x2B62848", Offset = "0x2B62848", VA = "0x2B62848")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6001918")]
	[Address(RVA = "0x2B62E8C", Offset = "0x2B62E8C", VA = "0x2B62E8C", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6001919")]
	[Address(RVA = "0x2B62F28", Offset = "0x2B62F28", VA = "0x2B62F28", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x600191A")]
	[Address(RVA = "0x2B62FC4", Offset = "0x2B62FC4", VA = "0x2B62FC4", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0x2B62400", Offset = "0x2B62400", VA = "0x2B62400")]
	public void ClearGoods()
	{
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0x2B63060", Offset = "0x2B63060", VA = "0x2B63060", Slot = "26")]
	public override void SendMutualInteractStatus(int interactorId, int interactableId, int statusType, int status, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] XRInteractNormalInfo[] normalInfo)
	{
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0x2B63150", Offset = "0x2B63150", VA = "0x2B63150", Slot = "27")]
	public override void SendSingleInteractStatus(int interactId, int statusType, int status, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] XRInteractNormalInfo[] normalInfo, bool isCullHost = true)
	{
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0x2B63240", Offset = "0x2B63240", VA = "0x2B63240", Slot = "14")]
	protected override void SelectEnter(XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0x2B63500", Offset = "0x2B63500", VA = "0x2B63500", Slot = "15")]
	protected override void SelectExit(XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0x2B635E0", Offset = "0x2B635E0", VA = "0x2B635E0", Slot = "16")]
	protected override void HoverEnter(XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0x2B63744", Offset = "0x2B63744", VA = "0x2B63744", Slot = "17")]
	protected override void HoverExit(XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0x2B6384C", Offset = "0x2B6384C", VA = "0x2B6384C", Slot = "18")]
	public override void ActiveEnter(XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0x2B638CC", Offset = "0x2B638CC", VA = "0x2B638CC", Slot = "19")]
	public override void ActiveExit(XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0x2B6394C", Offset = "0x2B6394C", VA = "0x2B6394C", Slot = "22")]
	public override void StartInteractor(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0x2B639BC", Offset = "0x2B639BC", VA = "0x2B639BC", Slot = "23")]
	public override void StopInteractor(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0x2B63A2C", Offset = "0x2B63A2C", VA = "0x2B63A2C", Slot = "24")]
	public override void StartInteractable(XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0x2B63A9C", Offset = "0x2B63A9C", VA = "0x2B63A9C", Slot = "25")]
	public override void StopInteractable(XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001928")]
	[Address(RVA = "0x2B63B0C", Offset = "0x2B63B0C", VA = "0x2B63B0C")]
	public void SyncInteractStatus(int interactorId, int interactableId, int statusType, int status, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] XRInteractNormalInfo[] normalInfo)
	{
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0x2B642C4", Offset = "0x2B642C4", VA = "0x2B642C4")]
	public void SyncInteractInfo(int netInteractId, int infoType, int infoTag, Vector3 pos, Quaternion rot, [Optional] XRInteractNormalInfo[] normalInfo)
	{
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0x2B62908", Offset = "0x2B62908", VA = "0x2B62908")]
	private void SendRemoteRigidbody()
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0x2B64404", Offset = "0x2B64404", VA = "0x2B64404")]
	public void SyncRemoteRigidbody(XRInteractRigidbodyInfo info)
	{
	}

	[Token(Token = "0x600192C")]
	[Address(RVA = "0x2B64914", Offset = "0x2B64914", VA = "0x2B64914")]
	public void HandleC2SInteractStatusNotify(int interactorId, int interactableId, int statusType, int status)
	{
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0x2B64A18", Offset = "0x2B64A18", VA = "0x2B64A18", Slot = "20")]
	protected override void InteractorHoverValidTargets(XRBaseInteractor interactor, List<XRBaseInteractable> validTargets)
	{
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0x2B63338", Offset = "0x2B63338", VA = "0x2B63338")]
	public void ServerHandleInteractStatus(XRBaseInteractor interactor, XRBaseInteractable interactable, int statusType, int status)
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0x2B64168", Offset = "0x2B64168", VA = "0x2B64168")]
	public XRBaseInteractor GetBaseInteractor(int id)
	{
		return null;
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0x2B641DC", Offset = "0x2B641DC", VA = "0x2B641DC")]
	public XRBaseInteractable GetBaseInteractable(int id)
	{
		return null;
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0x2B64250", Offset = "0x2B64250", VA = "0x2B64250")]
	public XRNetBaseInteract GetNetBaseInteract(int id)
	{
		return null;
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0x2B64C4C", Offset = "0x2B64C4C", VA = "0x2B64C4C", Slot = "10")]
	public override void RegisterInteractor(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0x2B64E64", Offset = "0x2B64E64", VA = "0x2B64E64", Slot = "11")]
	public override void UnregisterInteractor(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0x2B64F64", Offset = "0x2B64F64", VA = "0x2B64F64", Slot = "12")]
	public override void RegisterInteractable(XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0x2B650C8", Offset = "0x2B650C8", VA = "0x2B650C8", Slot = "13")]
	public override void UnregisterInteractable(XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0x2B651C8", Offset = "0x2B651C8", VA = "0x2B651C8")]
	public void RegisterInteract(XRNetBaseInteract interact)
	{
	}

	[Token(Token = "0x6001937")]
	[Address(RVA = "0x2B65394", Offset = "0x2B65394", VA = "0x2B65394")]
	public void UnregisterInteract(XRNetBaseInteract interact)
	{
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0x2B654DC", Offset = "0x2B654DC", VA = "0x2B654DC", Slot = "29")]
	protected override bool IsExistInteractor(XRBaseInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0x2B65544", Offset = "0x2B65544", VA = "0x2B65544", Slot = "30")]
	protected override bool IsExistInteractable(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x600193B")]
	[Address(RVA = "0x2B655AC", Offset = "0x2B655AC", VA = "0x2B655AC")]
	public XRCustomInteractionManager()
	{
	}
}
[Token(Token = "0x200042B")]
public class XRGrabbableWeapon : XRGrabInteractable
{
	[Token(Token = "0x200042C")]
	private class SavedTransform
	{
		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 OriginalPosition;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion OriginalRotation;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x2067E2C", Offset = "0x2067E2C", VA = "0x2067E2C")]
		public SavedTransform()
		{
		}
	}

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x266")]
	private bool isSelectHand;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Dictionary<XRBaseInteractor, SavedTransform> m_SavedTransforms;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Rigidbody m_Rb;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool isFixedAttachPos;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject FixedAttachPos;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Transform defaultAttachPosition;

	[Token(Token = "0x600193D")]
	[Address(RVA = "0x20E0840", Offset = "0x20E0840", VA = "0x20E0840", Slot = "12")]
	public override void InitBtInteractable(int ID)
	{
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0x20E08E0", Offset = "0x20E08E0", VA = "0x20E08E0", Slot = "4")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0x20E09B8", Offset = "0x20E09B8", VA = "0x20E09B8", Slot = "31")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001940")]
	[Address(RVA = "0x20E09C0", Offset = "0x20E09C0", VA = "0x20E09C0", Slot = "19")]
	protected override void OnEffectHoverExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001941")]
	[Address(RVA = "0x20E09C8", Offset = "0x20E09C8", VA = "0x20E09C8", Slot = "21")]
	protected override void OnEffectSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001942")]
	[Address(RVA = "0x20E12C4", Offset = "0x20E12C4", VA = "0x20E12C4", Slot = "23")]
	protected override void OnEffectSelectExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001943")]
	[Address(RVA = "0x20E13F8", Offset = "0x20E13F8", VA = "0x20E13F8")]
	public void SetIsSelectHand(bool isHand)
	{
	}

	[Token(Token = "0x6001944")]
	[Address(RVA = "0x20E1404", Offset = "0x20E1404", VA = "0x20E1404")]
	public XRGrabbableWeapon()
	{
	}
}
[Token(Token = "0x200042D")]
[DisallowMultipleComponent]
public class XRHandinteractor : XRDirectInteractor
{
	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool isR;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private TargetingInteractable InteractableRay;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private XRBaseInteractable Interactable;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public FollowVRController followVRController;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public LineRenderer Line;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform LinStartPos;

	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool isRay;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private WUnit wUnit;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Transform LeftHandAnchor;

	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private MapIncubation MiniMap;

	[Token(Token = "0x4001AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private MapCanvasController mapCanvasController;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private TargetingInteractable TriggerHapticPulse;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	public HandQesture handQesture;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public SignTrigger HandTrigger;

	[Token(Token = "0x6001946")]
	[Address(RVA = "0x20E1654", Offset = "0x20E1654", VA = "0x20E1654", Slot = "4")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0x20E1948", Offset = "0x20E1948", VA = "0x20E1948")]
	private void UpdateSphereCast()
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0x20E1B50", Offset = "0x20E1B50", VA = "0x20E1B50")]
	private void OnHitJob(int index, int hitCount)
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0x20E1E44", Offset = "0x20E1E44", VA = "0x20E1E44")]
	public void StartLineRenderer(Vector3 EndPos)
	{
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0x20E2034", Offset = "0x20E2034", VA = "0x20E2034")]
	private void Update()
	{
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0x20E1F40", Offset = "0x20E1F40", VA = "0x20E1F40")]
	private void SetTargetingEnter(TargetingInteractable targetingInteractable)
	{
	}

	[Token(Token = "0x600194C")]
	[Address(RVA = "0x20E2264", Offset = "0x20E2264", VA = "0x20E2264", Slot = "17")]
	public override void GetValidTargets(List<XRBaseInteractable> validTargets)
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0x20E25AC", Offset = "0x20E25AC", VA = "0x20E25AC", Slot = "37")]
	protected override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0x20E266C", Offset = "0x20E266C", VA = "0x20E266C")]
	public XRBaseInteractable GetInteractableForCollider(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0x20E2764", Offset = "0x20E2764", VA = "0x20E2764")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0x20E2938", Offset = "0x20E2938", VA = "0x20E2938")]
	public XRHandinteractor()
	{
	}
}
[Token(Token = "0x200042E")]
public class XRLocalController : XRController
{
	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WUnit owner;

	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private XRControllerCollector collector;

	[Token(Token = "0x4001B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PointToFunctionality PointToFunc;

	[Token(Token = "0x4001B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject HandModel;

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool isPickup;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[HideInInspector]
	public bool isStopPickup;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject WatchRoot;

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject MiniMapRoot;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public XRInteractorLineVisual XRInteractorLineVisual;

	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform OffsetTransf;

	[Token(Token = "0x17000288")]
	public override bool IsLeft
	{
		[Token(Token = "0x6001952")]
		[Address(RVA = "0x20E3104", Offset = "0x20E3104", VA = "0x20E3104", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000289")]
	public override bool IsLocal
	{
		[Token(Token = "0x6001953")]
		[Address(RVA = "0x20E3114", Offset = "0x20E3114", VA = "0x20E3114", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028A")]
	public override int OwnerId
	{
		[Token(Token = "0x6001954")]
		[Address(RVA = "0x20E311C", Offset = "0x20E311C", VA = "0x20E311C", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700028B")]
	public WUnit Owner
	{
		[Token(Token = "0x6001955")]
		[Address(RVA = "0x20E3138", Offset = "0x20E3138", VA = "0x20E3138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0x20E3140", Offset = "0x20E3140", VA = "0x20E3140")]
	public void Init(WUnit owner, XRControllerCollector collector)
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0x20E33E8", Offset = "0x20E33E8", VA = "0x20E33E8", Slot = "10")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0x20E3524", Offset = "0x20E3524", VA = "0x20E3524", Slot = "11")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0x20E3660", Offset = "0x20E3660", VA = "0x20E3660")]
	public void State_ModelGO(bool isShow)
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0x20E390C", Offset = "0x20E390C", VA = "0x20E390C")]
	private void PlayAni(string ani, float transition, int layer)
	{
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0x20E39F0", Offset = "0x20E39F0", VA = "0x20E39F0", Slot = "15")]
	public override void PlayControllerModelAnimationCallback()
	{
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0x20E3A80", Offset = "0x20E3A80", VA = "0x20E3A80", Slot = "14")]
	protected override void HandleInteractionAction(XRNode node, InputHelpers.Button button, ref InteractionState interactionState, ControllerActionUsageType actionType)
	{
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0x20E3BFC", Offset = "0x20E3BFC", VA = "0x20E3BFC")]
	private void SetHandInteractionState(ControllerActionUsageType pressedType, bool isPressed)
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0x20E3C00", Offset = "0x20E3C00", VA = "0x20E3C00")]
	public XRLocalController()
	{
	}
}
[Token(Token = "0x200042F")]
public class XROffsetGrabbable : XRGrabInteractable
{
	[Token(Token = "0x2000430")]
	private class SavedTransform
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 OriginalPosition;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion OriginalRotation;

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x2067E34", Offset = "0x2067E34", VA = "0x2067E34")]
		public SavedTransform()
		{
		}
	}

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x266")]
	private bool isSelectHand;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Dictionary<XRBaseInteractor, SavedTransform> m_SavedTransforms;

	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Rigidbody m_Rb;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool isFixedAttachPos;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject FixedAttachPos;

	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Transform defaultAttachPosition;

	[Token(Token = "0x600195F")]
	[Address(RVA = "0x20E3C10", Offset = "0x20E3C10", VA = "0x20E3C10", Slot = "4")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0x20E3CE8", Offset = "0x20E3CE8", VA = "0x20E3CE8", Slot = "30")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0x20E3CF0", Offset = "0x20E3CF0", VA = "0x20E3CF0", Slot = "12")]
	public override void InitBtInteractable(int ID)
	{
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0x20E3D08", Offset = "0x20E3D08", VA = "0x20E3D08", Slot = "21")]
	protected override void OnEffectSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001963")]
	[Address(RVA = "0x20E3FC4", Offset = "0x20E3FC4", VA = "0x20E3FC4", Slot = "23")]
	protected override void OnEffectSelectExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6001964")]
	[Address(RVA = "0x20E40F8", Offset = "0x20E40F8", VA = "0x20E40F8")]
	public void ClearInteractable()
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0x20E4130", Offset = "0x20E4130", VA = "0x20E4130")]
	public void SetIsSelectHand(bool isHand)
	{
	}

	[Token(Token = "0x6001966")]
	[Address(RVA = "0x20E413C", Offset = "0x20E413C", VA = "0x20E413C")]
	public XROffsetGrabbable()
	{
	}
}
[Token(Token = "0x2000431")]
public class XRReleaseController : XRController
{
	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool m_Selected;

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private FieldInfo m_SelectionStateFieldInfo;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private FieldInfo m_SelectionStateActivatedThisFrameInfo;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private FieldInfo m_SelectionStateDectivatedThisFrameInfo;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private FieldInfo m_SelectionStateActiveInfo;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool m_Active;

	[Token(Token = "0x1700028C")]
	public override bool IsLocal
	{
		[Token(Token = "0x6001968")]
		[Address(RVA = "0x20E488C", Offset = "0x20E488C", VA = "0x20E488C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028D")]
	public override bool IsLeft
	{
		[Token(Token = "0x6001969")]
		[Address(RVA = "0x20E4894", Offset = "0x20E4894", VA = "0x20E4894", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0x20E48A4", Offset = "0x20E48A4", VA = "0x20E48A4", Slot = "10")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0x20E4A68", Offset = "0x20E4A68", VA = "0x20E4A68")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0x20E4BF0", Offset = "0x20E4BF0", VA = "0x20E4BF0")]
	public void Select()
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0x20E4BFC", Offset = "0x20E4BFC", VA = "0x20E4BFC")]
	public XRReleaseController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000432")]
public class AniEventController : MonoBehaviour
{
	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneEventGear Gear;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioEvent> audioEventList;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> audioObjList;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, WwiseDefine> wwiseDefineDic;

	[Token(Token = "0x600196E")]
	[Address(RVA = "0x212C1FC", Offset = "0x212C1FC", VA = "0x212C1FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0x212C4F0", Offset = "0x212C4F0", VA = "0x212C4F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0x212C760", Offset = "0x212C760", VA = "0x212C760")]
	public void PlayAudio(int index)
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0x212C80C", Offset = "0x212C80C", VA = "0x212C80C")]
	private void aniEventPlayAudio(int index)
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0x212CAB0", Offset = "0x212CAB0", VA = "0x212CAB0")]
	public AniEventController()
	{
	}
}
[Token(Token = "0x2000433")]
public class AnimationGear : BaseHurtGear
{
	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float closeDelay;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Animator animatorCom;

	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string animationStateName;

	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject[] closeObjs;

	[Token(Token = "0x4001B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timer;

	[Token(Token = "0x4001B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool isCloseDelay;

	[Token(Token = "0x6001973")]
	[Address(RVA = "0x212F200", Offset = "0x212F200", VA = "0x212F200", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0x212F42C", Offset = "0x212F42C", VA = "0x212F42C", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0x212F4E0", Offset = "0x212F4E0", VA = "0x212F4E0", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0x212F6A8", Offset = "0x212F6A8", VA = "0x212F6A8", Slot = "23")]
	public override void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0x212F778", Offset = "0x212F778", VA = "0x212F778")]
	private void CloseDecal()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0x212F874", Offset = "0x212F874", VA = "0x212F874")]
	private void Update()
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0x212FA08", Offset = "0x212FA08", VA = "0x212FA08")]
	public AnimationGear()
	{
	}
}
[Token(Token = "0x2000434")]
public class AssociativeAnimationGear : BaseGear
{
	[Token(Token = "0x4001B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63DF4", Offset = "0xE63DF4")]
	public Animator animator;

	[Token(Token = "0x4001B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string AniName;

	[Token(Token = "0x4001B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string StateName;

	[Token(Token = "0x4001B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63E2C", Offset = "0xE63E2C")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4001B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject audioObj;

	[Token(Token = "0x4001B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isTrigger;

	[Token(Token = "0x4001B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isPlayer;

	[Token(Token = "0x4001B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WUnit owner;

	[Token(Token = "0x4001B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ServerMonsterNetSyncController MonsterNetSyncController;

	[Token(Token = "0x4001B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63E64", Offset = "0xE63E64")]
	public bool isDrop;

	[Token(Token = "0x600197A")]
	[Address(RVA = "0x28F88F4", Offset = "0x28F88F4", VA = "0x28F88F4", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0x28F8994", Offset = "0x28F8994", VA = "0x28F8994", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0x28F89E4", Offset = "0x28F89E4", VA = "0x28F89E4", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x28F8A30", Offset = "0x28F8A30", VA = "0x28F8A30")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0x28F8B80", Offset = "0x28F8B80", VA = "0x28F8B80")]
	private void Update()
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0x28F9654", Offset = "0x28F9654", VA = "0x28F9654", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0x28F979C", Offset = "0x28F979C", VA = "0x28F979C")]
	public void AddRigidBody()
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0x28F98A4", Offset = "0x28F98A4", VA = "0x28F98A4")]
	public bool IsMonsterUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0x28F9984", Offset = "0x28F9984", VA = "0x28F9984")]
	public AssociativeAnimationGear()
	{
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0x28F99BC", Offset = "0x28F99BC", VA = "0x28F99BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E2A4", Offset = "0xE6E2A4")]
	private void <AddRigidBody>b__16_0()
	{
	}
}
[Token(Token = "0x2000435")]
public class ClearancePlatformGear : BaseGear
{
	[Token(Token = "0x2000436")]
	protected enum MovePlatformState
	{
		[Token(Token = "0x4001B4B")]
		Idle,
		[Token(Token = "0x4001B4C")]
		Run,
		[Token(Token = "0x4001B4D")]
		Finish
	}

	[Serializable]
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55EB8", Offset = "0xE55EB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GuideController> <>9__34_0;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x20F4768", Offset = "0x20F4768", VA = "0x20F4768")]
		public <>c()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x20F4770", Offset = "0x20F4770", VA = "0x20F4770")]
		internal bool <GearStart>b__34_0(GuideController a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform MovePlatform;

	[Token(Token = "0x4001B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Transform> RoomRefPoint;

	[Token(Token = "0x4001B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Transform MoveEndPoint;

	[Token(Token = "0x4001B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int PointIndex;

	[Token(Token = "0x4001B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform FollowPoint;

	[Token(Token = "0x4001B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MoveSpeed;

	[Token(Token = "0x4001B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float MoveSpeedGUp;

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float MoveSpeedGDown;

	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float DelayTimeMove;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float DelayRunningTimeMove;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float RunningMoveSpeed;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float smoothSpeed;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Vector3 selfPosition;

	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float SyncFrameTime;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float SyncFrameRunningTime;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioEvent movingSoundAudio;

	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioEvent Platform_Stop;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MeshRenderer FloorMeshRenderer;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color FloorColor;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color DefaultFloorColor;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float Floortime;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform GuideTipTrans;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine moveSoundObj;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Coroutine movingCor;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, Vector3> MotionFloorMoveSyncAction;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int, bool> GearState;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool IsOpenGear;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 OrignalOffset;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected MovePlatformState moveState;

	[Token(Token = "0x6001984")]
	[Address(RVA = "0x2669338", Offset = "0x2669338", VA = "0x2669338")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0x2669370", Offset = "0x2669370", VA = "0x2669370", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0x2669440", Offset = "0x2669440", VA = "0x2669440", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0x2669C20", Offset = "0x2669C20", VA = "0x2669C20", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0x266A058", Offset = "0x266A058", VA = "0x266A058")]
	private void Update()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0x266A754", Offset = "0x266A754", VA = "0x266A754")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0x266A7DC", Offset = "0x266A7DC", VA = "0x266A7DC", Slot = "22")]
	protected virtual void MoveEnd()
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0x266A414", Offset = "0x266A414", VA = "0x266A414")]
	private void PlayDelayMovingSound()
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0x2669F58", Offset = "0x2669F58", VA = "0x2669F58")]
	protected void StopMovingSound()
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0x26698E0", Offset = "0x26698E0", VA = "0x26698E0")]
	protected void SetPlayerMoveAniActive(bool isActive)
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0x266A4AC", Offset = "0x266A4AC", VA = "0x266A4AC")]
	private void MovePlatformUpdate(bool isMove = true)
	{
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0x266AB58", Offset = "0x266AB58", VA = "0x266AB58")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0x266AE0C", Offset = "0x266AE0C", VA = "0x266AE0C")]
	private Vector3 GetPlayerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0x266B094", Offset = "0x266B094", VA = "0x266B094", Slot = "23")]
	protected virtual bool CheckIsCanMovePlatformRun()
	{
		return default(bool);
	}

	[Token(Token = "0x6001992")]
	[Address(RVA = "0x266B09C", Offset = "0x266B09C", VA = "0x266B09C")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6001993")]
	[Address(RVA = "0x266A39C", Offset = "0x266A39C", VA = "0x266A39C")]
	private void PreSetOrignalOffset(Vector3 pos)
	{
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0x2669D88", Offset = "0x2669D88", VA = "0x2669D88")]
	protected void SetPlatformPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0x266B180", Offset = "0x266B180", VA = "0x266B180", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0x266B884", Offset = "0x266B884", VA = "0x266B884", Slot = "20")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0x266B898", Offset = "0x266B898", VA = "0x266B898", Slot = "21")]
	public override void SetRoomStatus()
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0x2669E94", Offset = "0x2669E94", VA = "0x2669E94")]
	public void SetFloorPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0x266B9D8", Offset = "0x266B9D8", VA = "0x266B9D8")]
	public void SetGearStart()
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0x266AAD0", Offset = "0x266AAD0", VA = "0x266AAD0")]
	public void GetGearFinish()
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0x266BAB4", Offset = "0x266BAB4", VA = "0x266BAB4")]
	public ClearancePlatformGear()
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0x266BB9C", Offset = "0x266BB9C", VA = "0x266BB9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E2B4", Offset = "0xE6E2B4")]
	private void <PlayDelayMovingSound>b__39_0()
	{
	}
}
[Token(Token = "0x2000438")]
public class CurrencyGear : BaseGear
{
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55EC8", Offset = "0xE55EC8")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CurrencyGear <>4__this;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 prmV1;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x20F4838", Offset = "0x20F4838", VA = "0x20F4838")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x20F4840", Offset = "0x20F4840", VA = "0x20F4840")]
		internal void <GearStatus>b__3()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x20F4A00", Offset = "0x20F4A00", VA = "0x20F4A00")]
		internal void <GearStatus>b__0()
		{
		}
	}

	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55ED8", Offset = "0xE55ED8")]
	private sealed class <>c__DisplayClass48_1
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int isRHandendWeapon;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRControllerCollector XRControllerCollector;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass48_0 CS$<>8__locals1;

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x20F4BC0", Offset = "0x20F4BC0", VA = "0x20F4BC0")]
		public <>c__DisplayClass48_1()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x20F4BC8", Offset = "0x20F4BC8", VA = "0x20F4BC8")]
		internal void <GearStatus>b__1()
		{
		}
	}

	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55EE8", Offset = "0xE55EE8")]
	private sealed class <>c__DisplayClass48_2
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int isRHandendWeapon;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRControllerCollector XRControllerCollector;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass48_0 CS$<>8__locals2;

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x20F4FA4", Offset = "0x20F4FA4", VA = "0x20F4FA4")]
		public <>c__DisplayClass48_2()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x20F4FAC", Offset = "0x20F4FAC", VA = "0x20F4FAC")]
		internal void <GearStatus>b__2()
		{
		}
	}

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63E9C", Offset = "0xE63E9C")]
	public Transform StartTrn;

	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform TargetTrn;

	[Token(Token = "0x4001B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform StartTrn02;

	[Token(Token = "0x4001B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform TargetTrn02;

	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63ED4", Offset = "0xE63ED4")]
	public int EndTriggerGearID;

	[Token(Token = "0x4001B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63F0C", Offset = "0xE63F0C")]
	public Animator animator;

	[Token(Token = "0x4001B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string AniName;

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63F44", Offset = "0xE63F44")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject AudioObj;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioEvent audioEvent01;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject AudioObj01;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject NavMeshFloors;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63F7C", Offset = "0xE63F7C")]
	private WwiseDefine Triangle_Loop;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject TriangularEffects;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject TriangularTrans;

	[Token(Token = "0x4001B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63FB4", Offset = "0xE63FB4")]
	public GameObject Take;

	[Token(Token = "0x4001B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ParticleSystem Take_Effects;

	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ParticleSystem.Particle[] arrTake;

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int arrCount;

	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isPlayEffect;

	[Token(Token = "0x4001B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE63FEC", Offset = "0xE63FEC")]
	public Animator gold_box;

	[Token(Token = "0x4001B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string gold_box_str;

	[Token(Token = "0x4001B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64024", Offset = "0xE64024")]
	public bool IsFloor;

	[Token(Token = "0x4001B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform StartFlagTrans;

	[Token(Token = "0x4001B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform TriggerFlagTrans;

	[Token(Token = "0x4001B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Collider TriggerCollider;

	[Token(Token = "0x4001B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6405C", Offset = "0xE6405C")]
	public bool isBox;

	[Token(Token = "0x4001B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64094", Offset = "0xE64094")]
	public GameObject DoorColl;

	[Token(Token = "0x4001B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Collider FrontDoorCheckCollider;

	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Collider BehindDoorCheckCollider;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private RoomCell FrontRoomCell;

	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private RoomCell BehindRoomCell;

	[Token(Token = "0x4001B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private LevelGeneratorBak CurLevelGeneratorBak;

	[Token(Token = "0x4001B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 target;

	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SwitchController Switch;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float systime;

	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private e_SwitchType SwitchType;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 StartPos01;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 StartPos02;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 EndPos01;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 EndPos02;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool IsDoorOpen;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private LevelGeneratorBak LevelGeneratorBak;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Tweener tweener01;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Tweener tweener02;

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0x21C1CB8", Offset = "0x21C1CB8", VA = "0x21C1CB8", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0x21C1F74", Offset = "0x21C1F74", VA = "0x21C1F74", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0x21C2074", Offset = "0x21C2074", VA = "0x21C2074", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0x21C207C", Offset = "0x21C207C", VA = "0x21C207C")]
	private void Update()
	{
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0x21C2444", Offset = "0x21C2444", VA = "0x21C2444", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0x21C373C", Offset = "0x21C373C", VA = "0x21C373C")]
	public void ShowFloor()
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0x21C3888", Offset = "0x21C3888", VA = "0x21C3888")]
	private void SetFloorState(bool isShow)
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0x21C3A34", Offset = "0x21C3A34", VA = "0x21C3A34")]
	private void InitDoorCheckCollider()
	{
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0x21C3DBC", Offset = "0x21C3DBC", VA = "0x21C3DBC")]
	public void DoorMove(bool isOpen = true)
	{
	}

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0x21C4114", Offset = "0x21C4114", VA = "0x21C4114")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x60019AB")]
	[Address(RVA = "0x21C418C", Offset = "0x21C418C", VA = "0x21C418C")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0x21C3644", Offset = "0x21C3644", VA = "0x21C3644")]
	private void DoMove()
	{
	}

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0x21C3DE4", Offset = "0x21C3DE4", VA = "0x21C3DE4")]
	public void DoDoorMove(bool isOpen = true)
	{
	}

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0x21C3F38", Offset = "0x21C3F38", VA = "0x21C3F38")]
	public void DoDoorTwoWayMove(bool isOpen = true)
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0x21C4204", Offset = "0x21C4204", VA = "0x21C4204")]
	public void SetOpenDoor(bool isOpen)
	{
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0x21C3668", Offset = "0x21C3668", VA = "0x21C3668")]
	private void StuatPlayAni(bool isShow)
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0x21C4398", Offset = "0x21C4398", VA = "0x21C4398")]
	private void FrontDoorTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0x21C44B8", Offset = "0x21C44B8", VA = "0x21C44B8")]
	private void FrontDoorTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0x21C33FC", Offset = "0x21C33FC", VA = "0x21C33FC")]
	public void PlayAni()
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0x21C4634", Offset = "0x21C4634", VA = "0x21C4634")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0x21C34D8", Offset = "0x21C34D8", VA = "0x21C34D8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E2C4", Offset = "0xE6E2C4")]
	private void OnClearanceChange()
	{
	}

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0x21C23A0", Offset = "0x21C23A0", VA = "0x21C23A0")]
	public void GoldState(bool isActive)
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0x21C4720", Offset = "0x21C4720", VA = "0x21C4720")]
	public CurrencyGear()
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0x21C4728", Offset = "0x21C4728", VA = "0x21C4728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E2FC", Offset = "0xE6E2FC")]
	private void <DoDoorMove>b__58_0()
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0x21C4730", Offset = "0x21C4730", VA = "0x21C4730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E30C", Offset = "0xE6E30C")]
	private void <DoDoorTwoWayMove>b__59_0()
	{
	}
}
[Token(Token = "0x200043C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55EF8", Offset = "0xE55EF8")]
public class ElevatorGear : BaseGear
{
	[Token(Token = "0x200043D")]
	private enum ElevatorState
	{
		[Token(Token = "0x4001B8E")]
		Ready,
		[Token(Token = "0x4001B8F")]
		PreRun,
		[Token(Token = "0x4001B90")]
		Run,
		[Token(Token = "0x4001B91")]
		RunEnd
	}

	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55F58", Offset = "0xE55F58")]
	private sealed class <ElevatorStart>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorGear <>4__this;

		[Token(Token = "0x1700028E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x20F5EE8", Offset = "0x20F5EE8", VA = "0x20F5EE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x20F5F30", Offset = "0x20F5F30", VA = "0x20F5F30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x20F5D70", Offset = "0x20F5D70", VA = "0x20F5D70")]
		[DebuggerHidden]
		public <ElevatorStart>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x20F5D9C", Offset = "0x20F5D9C", VA = "0x20F5D9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x20F5DA0", Offset = "0x20F5DA0", VA = "0x20F5DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x20F5EF0", Offset = "0x20F5EF0", VA = "0x20F5EF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator animatorCom;

	[Token(Token = "0x4001B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string animationStateName;

	[Token(Token = "0x4001B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float elevatorRunDelay;

	[Token(Token = "0x4001B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HashSet<int> entryList;

	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ElevatorState elevatorState;

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine coroutine;

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0x24F055C", Offset = "0x24F055C", VA = "0x24F055C", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0x24F079C", Offset = "0x24F079C", VA = "0x24F079C", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0x24F0840", Offset = "0x24F0840", VA = "0x24F0840", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0x24F08E4", Offset = "0x24F08E4", VA = "0x24F08E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0x24F0B64", Offset = "0x24F0B64", VA = "0x24F0B64")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0x24F0C20", Offset = "0x24F0C20", VA = "0x24F0C20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0x24F0D24", Offset = "0x24F0D24", VA = "0x24F0D24")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0x24F0E58", Offset = "0x24F0E58", VA = "0x24F0E58")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0x24F0628", Offset = "0x24F0628", VA = "0x24F0628")]
	private void ElevatorRestore()
	{
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0x24F0AEC", Offset = "0x24F0AEC", VA = "0x24F0AEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6E31C", Offset = "0xE6E31C")]
	private IEnumerator ElevatorStart()
	{
		return null;
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0x24F0B80", Offset = "0x24F0B80", VA = "0x24F0B80")]
	private void ElevatorUpdate()
	{
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0x24F0EAC", Offset = "0x24F0EAC", VA = "0x24F0EAC")]
	private void UpdatePlayerPos(float height)
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0x24F0954", Offset = "0x24F0954", VA = "0x24F0954")]
	private bool CheckIsCanElevatorRun()
	{
		return default(bool);
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0x24F10CC", Offset = "0x24F10CC", VA = "0x24F10CC")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0x24F0C74", Offset = "0x24F0C74", VA = "0x24F0C74")]
	private void EntryElevator(GameObject obj)
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0x24F0D70", Offset = "0x24F0D70", VA = "0x24F0D70")]
	private void ExitElevator(GameObject obj)
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0x24F11B0", Offset = "0x24F11B0", VA = "0x24F11B0")]
	public ElevatorGear()
	{
	}
}
[Token(Token = "0x200043F")]
public class ExploderGear : BaseGear
{
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE55F68", Offset = "0xE55F68")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderGear <>4__this;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int prm1;

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x20F6544", Offset = "0x20F6544", VA = "0x20F6544")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x20F654C", Offset = "0x20F654C", VA = "0x20F654C")]
		internal bool <GearStatus>b__0(Collider a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExploderTools ExploderTools;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Collider> collisionComList;

	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ExploderEffect;

	[Token(Token = "0x4001B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform EffectTrns;

	[Token(Token = "0x4001B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4001B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject audioObj;

	[Token(Token = "0x4001B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isTrigger;

	[Token(Token = "0x4001B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0x24F4848", Offset = "0x24F4848", VA = "0x24F4848", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0x24F4ACC", Offset = "0x24F4ACC", VA = "0x24F4ACC", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0x24F4AFC", Offset = "0x24F4AFC", VA = "0x24F4AFC", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0x24F4B2C", Offset = "0x24F4B2C", VA = "0x24F4B2C")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0x24F5028", Offset = "0x24F5028", VA = "0x24F5028", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0x24F534C", Offset = "0x24F534C", VA = "0x24F534C")]
	public void PlayerEffect()
	{
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0x24F5464", Offset = "0x24F5464", VA = "0x24F5464")]
	public ExploderGear()
	{
	}
}
[Token(Token = "0x2000441")]
public class FlashLight : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	public enum LightEventType
	{
		[Token(Token = "0x4001BB2")]
		Enter,
		[Token(Token = "0x4001BB3")]
		Stay,
		[Token(Token = "0x4001BB4")]
		Exit
	}

	[Token(Token = "0x2000443")]
	public struct RayData
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 direction;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x20F76E4", Offset = "0x20F76E4", VA = "0x20F76E4")]
		public RayData(Vector3 dir, float range, Vector3 pos)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x20F7710", Offset = "0x20F7710", VA = "0x20F7710")]
		public RayData(float x, float y, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
		{
		}
	}

	[Token(Token = "0x2000444")]
	public class HitInfoList : List<RaycastHit>
	{
		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x20F6E80", Offset = "0x20F6E80", VA = "0x20F6E80")]
		public HitInfoList()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x20F6EF8", Offset = "0x20F6EF8", VA = "0x20F6EF8")]
		public HitInfoList(HitInfoList copy)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x20F70D0", Offset = "0x20F70D0", VA = "0x20F70D0")]
		public bool AddElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x20F7444", Offset = "0x20F7444", VA = "0x20F7444")]
		public bool RemoveElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x20F74FC", Offset = "0x20F74FC", VA = "0x20F74FC")]
		public HitInfoList GetSubList(HitInfoList another)
		{
			return null;
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x20F7198", Offset = "0x20F7198", VA = "0x20F7198")]
		public bool ExistElement(RaycastHit info, out RaycastHit result)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dampSpeed;

	[Token(Token = "0x4001BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rangeOffset;

	[Token(Token = "0x4001BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useMultipleRay;

	[Token(Token = "0x4001BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6410C", Offset = "0xE6410C")]
	public float sectionOfMultipleRay;

	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dampTmp;

	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxLightDistance;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HitInfoList InfoList;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RayData> rayDatas;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] xP;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] yP;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitInfoList Infolist2;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<FlashLight, RaycastHit, LightEventType> EventHandler;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distance;

	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x4001BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x4001BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JobHandle handle;

	[Token(Token = "0x4001BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isDrawLine;

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0x223FB24", Offset = "0x223FB24", VA = "0x223FB24")]
	private void Start()
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0x223FB9C", Offset = "0x223FB9C", VA = "0x223FB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0x2240220", Offset = "0x2240220", VA = "0x2240220")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0x22402CC", Offset = "0x22402CC", VA = "0x22402CC")]
	public void Switch(bool switchOn)
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0x223FBC0", Offset = "0x223FBC0", VA = "0x223FBC0")]
	private void ControlLightRange()
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0x223FD9C", Offset = "0x223FD9C", VA = "0x223FD9C")]
	private void DetectObject()
	{
	}

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0x224044C", Offset = "0x224044C", VA = "0x224044C")]
	private void HandleEvent(HitInfoList current, int operate)
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0x22402EC", Offset = "0x22402EC", VA = "0x22402EC")]
	private void UpdateRayDatas(float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0x2240914", Offset = "0x2240914", VA = "0x2240914")]
	private void GetFullCircleRay(ref List<RayData> list, int[] xParams, int[] yParams, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0x2240A44", Offset = "0x2240A44", VA = "0x2240A44")]
	private void GetQuarterCircleRay(ref List<RayData> list, int xParam, int yParam, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0x2240BEC", Offset = "0x2240BEC", VA = "0x2240BEC")]
	public FlashLight()
	{
	}
}
[Token(Token = "0x2000445")]
public class HurtBox : BaseHurtGear
{
	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject box;

	[Token(Token = "0x60019F5")]
	[Address(RVA = "0x2534964", Offset = "0x2534964", VA = "0x2534964", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60019F6")]
	[Address(RVA = "0x2534A88", Offset = "0x2534A88", VA = "0x2534A88", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60019F7")]
	[Address(RVA = "0x2534B44", Offset = "0x2534B44", VA = "0x2534B44", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0x2534BFC", Offset = "0x2534BFC", VA = "0x2534BFC", Slot = "23")]
	public override void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x60019F9")]
	[Address(RVA = "0x2534C48", Offset = "0x2534C48", VA = "0x2534C48")]
	public HurtBox()
	{
	}
}
[Token(Token = "0x2000446")]
public class InfraredGear : BaseGear
{
	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private splineMove splinemove;

	[Token(Token = "0x4001BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64178", Offset = "0xE64178")]
	private float maxDistance;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE641C4", Offset = "0xE641C4")]
	[SerializeField]
	private float topOffset;

	[Token(Token = "0x4001BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hit_forward;

	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private RaycastHit hit_back;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private LayerMask activeLayer;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private AudioEvent audioEvent;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WwiseDefine audio;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private InfraredGearManager infraredGearManager;

	[Token(Token = "0x4001BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int closeCount;

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0x20AD194", Offset = "0x20AD194", VA = "0x20AD194", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0x20AD350", Offset = "0x20AD350", VA = "0x20AD350", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0x20AD95C", Offset = "0x20AD95C", VA = "0x20AD95C", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0x20AD8B8", Offset = "0x20AD8B8", VA = "0x20AD8B8")]
	private void FindObjects(GameObject obj, bool state)
	{
	}

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0x20ADC90", Offset = "0x20ADC90", VA = "0x20ADC90", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0x20ADF70", Offset = "0x20ADF70", VA = "0x20ADF70")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0x20AE5A0", Offset = "0x20AE5A0", VA = "0x20AE5A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A01")]
	[Address(RVA = "0x20AE350", Offset = "0x20AE350", VA = "0x20AE350")]
	private void OnTriggerCollider(Collider other)
	{
	}

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0x20AE710", Offset = "0x20AE710", VA = "0x20AE710")]
	public InfraredGear()
	{
	}
}
[Token(Token = "0x2000447")]
public class InfraredGearManager : MonoBehaviour
{
	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InfraredGear[] infraredGears;

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0x20AE724", Offset = "0x20AE724", VA = "0x20AE724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0x20AD828", Offset = "0x20AD828", VA = "0x20AD828")]
	public void SetCheckTargetState(bool state)
	{
	}

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0x20AE780", Offset = "0x20AE780", VA = "0x20AE780")]
	public InfraredGearManager()
	{
	}
}
[Token(Token = "0x2000448")]
public class LoopMovePlatformGear : MovePlatformGear
{
	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool isStartMove;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool IsOpen;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool IsReverse;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform DefulatInitTnrs;

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0x24D9898", Offset = "0x24D9898", VA = "0x24D9898", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A07")]
	[Address(RVA = "0x24D990C", Offset = "0x24D990C", VA = "0x24D990C", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0x24D9A38", Offset = "0x24D9A38", VA = "0x24D9A38", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0x24D9B18", Offset = "0x24D9B18", VA = "0x24D9B18", Slot = "22")]
	protected override void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0x24D9B20", Offset = "0x24D9B20", VA = "0x24D9B20", Slot = "24")]
	protected override void DoTriggerStay(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0x24D9B28", Offset = "0x24D9B28", VA = "0x24D9B28", Slot = "23")]
	protected override void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0x24D9B30", Offset = "0x24D9B30", VA = "0x24D9B30", Slot = "27")]
	protected override bool CheckIsCanMovePlatformRun()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0x24D9B38", Offset = "0x24D9B38", VA = "0x24D9B38", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0x24D9E24", Offset = "0x24D9E24", VA = "0x24D9E24", Slot = "26")]
	protected override void MoveEnd()
	{
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0x24DA170", Offset = "0x24DA170", VA = "0x24DA170")]
	public LoopMovePlatformGear()
	{
	}
}
[Token(Token = "0x2000449")]
public class MagmaGearManager : MonoSingleton<MagmaGearManager>
{
	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_setting_type GearDamageType;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public e_setting_type GearDamageFrequency;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GearFrequency;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WUnit> hurtList;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isTime;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action DamageFrequencyAction;

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0x24DA1D4", Offset = "0x24DA1D4", VA = "0x24DA1D4")]
	public void Enter(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0x24DA358", Offset = "0x24DA358", VA = "0x24DA358")]
	public void Exit(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0x24DA488", Offset = "0x24DA488", VA = "0x24DA488")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0x24DA82C", Offset = "0x24DA82C", VA = "0x24DA82C")]
	public MagmaGearManager()
	{
	}
}
[Token(Token = "0x200044A")]
public class MovePlatformGear : BaseGear
{
	[Token(Token = "0x200044B")]
	protected enum MovePlatformState
	{
		[Token(Token = "0x4001BF2")]
		Idle,
		[Token(Token = "0x4001BF3")]
		Run,
		[Token(Token = "0x4001BF4")]
		Finish
	}

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider collisionCom;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform MovePlatform;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Transform> RoomRefPoint;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<Transform> EndRoomRefPoint;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform MoveEndPoint;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected int PointIndex;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform FollowPoint;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float MoveSpeed;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float MoveSpeedGUp;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float MoveSpeedGDown;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float DelayTimeMove;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HashSet<int> entryList;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float DelayRunningTimeMove;

	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float RunningMoveSpeed;

	[Token(Token = "0x4001BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x4001BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float smoothSpeed;

	[Token(Token = "0x4001BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Vector3 selfPosition;

	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float SyncFrameTime;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float SyncFrameRunningTime;

	[Token(Token = "0x4001BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public AudioEvent movingSoundAudio;

	[Token(Token = "0x4001BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioEvent Platform_Stop;

	[Token(Token = "0x4001BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine moveSoundObj;

	[Token(Token = "0x4001BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine movingCor;

	[Token(Token = "0x4001BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, Vector3> MotionFloorMoveSyncAction;

	[Token(Token = "0x4001BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int, bool> GearState;

	[Token(Token = "0x4001BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private bool IsDefaultOpen;

	[Token(Token = "0x4001BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private List<GameObject> Footprints;

	[Token(Token = "0x4001BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool IsOpenGear;

	[Token(Token = "0x4001BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int playerCount;

	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected CharacterMono characterMono;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 OrignalOffset;

	[Token(Token = "0x4001BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	protected MovePlatformState moveState;

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0x2659AD4", Offset = "0x2659AD4", VA = "0x2659AD4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0x2659C04", Offset = "0x2659C04", VA = "0x2659C04", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0x2659DF4", Offset = "0x2659DF4", VA = "0x2659DF4", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0x265A594", Offset = "0x265A594", VA = "0x265A594", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0x265AA90", Offset = "0x265AA90", VA = "0x265AA90")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0x265B2C4", Offset = "0x265B2C4", VA = "0x265B2C4", Slot = "22")]
	protected virtual void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0x265B3C8", Offset = "0x265B3C8", VA = "0x265B3C8", Slot = "23")]
	protected virtual void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0x265B4CC", Offset = "0x265B4CC", VA = "0x265B4CC", Slot = "24")]
	protected virtual void DoTriggerStay(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0x265B520", Offset = "0x265B520", VA = "0x265B520", Slot = "25")]
	protected virtual void MovePlatformRestore()
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x265B5CC", Offset = "0x265B5CC", VA = "0x265B5CC")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x265B654", Offset = "0x265B654", VA = "0x265B654", Slot = "26")]
	protected virtual void MoveEnd()
	{
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x265AF84", Offset = "0x265AF84", VA = "0x265AF84")]
	private void PlayDelayMovingSound()
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x265A990", Offset = "0x265A990", VA = "0x265A990")]
	protected void StopMovingSound()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x265A2AC", Offset = "0x265A2AC", VA = "0x265A2AC")]
	protected void SetPlayerMoveAniActive(bool isActive)
	{
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0x265B01C", Offset = "0x265B01C", VA = "0x265B01C")]
	private void MovePlatformUpdate(bool isMove = true)
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0x265BD08", Offset = "0x265BD08", VA = "0x265BD08")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0x265BFBC", Offset = "0x265BFBC", VA = "0x265BFBC")]
	private Vector3 GetPlayerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A25")]
	[Address(RVA = "0x265C244", Offset = "0x265C244", VA = "0x265C244", Slot = "27")]
	protected virtual bool CheckIsCanMovePlatformRun()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0x265C368", Offset = "0x265C368", VA = "0x265C368")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0x265B318", Offset = "0x265B318", VA = "0x265B318")]
	private void EntryMovePlatform(GameObject obj)
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0x265B41C", Offset = "0x265B41C", VA = "0x265B41C")]
	private void ExitMovePlatform(GameObject obj)
	{
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0x265AF0C", Offset = "0x265AF0C", VA = "0x265AF0C")]
	private void PreSetOrignalOffset(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0x265A7C0", Offset = "0x265A7C0", VA = "0x265A7C0")]
	protected void SetPlatformPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x265C44C", Offset = "0x265C44C", VA = "0x265C44C", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x265CBD0", Offset = "0x265CBD0", VA = "0x265CBD0", Slot = "20")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x265CBE4", Offset = "0x265CBE4", VA = "0x265CBE4", Slot = "21")]
	public override void SetRoomStatus()
	{
	}

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0x265A8CC", Offset = "0x265A8CC", VA = "0x265A8CC")]
	public void SetFloorPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0x265CBC4", Offset = "0x265CBC4", VA = "0x265CBC4")]
	public void SetGearStart()
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0x265BD00", Offset = "0x265BD00", VA = "0x265BD00")]
	public void GetGearFinish()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0x265CDA4", Offset = "0x265CDA4", VA = "0x265CDA4")]
	public MovePlatformGear()
	{
	}

	[Token(Token = "0x6001A33")]
	[Address(RVA = "0x265CF00", Offset = "0x265CF00", VA = "0x265CF00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E3CC", Offset = "0xE6E3CC")]
	private void <PlayDelayMovingSound>b__45_0()
	{
	}
}
[Token(Token = "0x200044C")]
public class MovePlatformGearRoom : MonoBehaviour
{
	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation ani;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Room;

	[Token(Token = "0x4001BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RoomActiveRoot;

	[Token(Token = "0x4001BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform MotionFloorFollowRoot;

	[Token(Token = "0x4001BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent OpenDoorAudio;

	[Token(Token = "0x4001BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent CloseDoorAudio;

	[Token(Token = "0x4001BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WwiseDefine OpenDoorObj;

	[Token(Token = "0x4001BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine CloseDoorObj;

	[Token(Token = "0x4001BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> aniClipNameList;

	[Token(Token = "0x4001BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x4001BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Vector3> MotionFloorMoveSyncAction;

	[Token(Token = "0x6001A34")]
	[Address(RVA = "0x265CFD4", Offset = "0x265CFD4", VA = "0x265CFD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A35")]
	[Address(RVA = "0x265D2EC", Offset = "0x265D2EC", VA = "0x265D2EC")]
	public void GearInit()
	{
	}

	[Token(Token = "0x6001A36")]
	[Address(RVA = "0x265D46C", Offset = "0x265D46C", VA = "0x265D46C")]
	public void GearStart()
	{
	}

	[Token(Token = "0x6001A37")]
	[Address(RVA = "0x265D50C", Offset = "0x265D50C", VA = "0x265D50C")]
	public void GearStop()
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0x265D734", Offset = "0x265D734", VA = "0x265D734")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0x265D850", Offset = "0x265D850", VA = "0x265D850")]
	public void UpdatePosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0x265D5DC", Offset = "0x265D5DC", VA = "0x265D5DC")]
	public void SetPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0x265D2F4", Offset = "0x265D2F4", VA = "0x265D2F4")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0x265D9FC", Offset = "0x265D9FC", VA = "0x265D9FC")]
	private void SetSound(bool Open, bool isSet)
	{
	}

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0x265D700", Offset = "0x265D700", VA = "0x265D700")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0x265D910", Offset = "0x265D910", VA = "0x265D910")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0x265DC04", Offset = "0x265DC04", VA = "0x265DC04")]
	public MovePlatformGearRoom()
	{
	}
}
[Token(Token = "0x200044D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55F78", Offset = "0xE55F78")]
public class OffLimitsAreasGear : BaseGear
{
	[Token(Token = "0x200044E")]
	public class hurtTimer
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x205D138", Offset = "0x205D138", VA = "0x205D138")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider col;

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<WUnit> hurtList;

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0x2306CAC", Offset = "0x2306CAC", VA = "0x2306CAC", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A42")]
	[Address(RVA = "0x2306D94", Offset = "0x2306D94", VA = "0x2306D94", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A43")]
	[Address(RVA = "0x2306E34", Offset = "0x2306E34", VA = "0x2306E34", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A44")]
	[Address(RVA = "0x2306EDC", Offset = "0x2306EDC", VA = "0x2306EDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A45")]
	[Address(RVA = "0x2307178", Offset = "0x2307178", VA = "0x2307178")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0x23073A8", Offset = "0x23073A8", VA = "0x23073A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0x230782C", Offset = "0x230782C", VA = "0x230782C")]
	public OffLimitsAreasGear()
	{
	}
}
[Token(Token = "0x200044F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE55FD8", Offset = "0xE55FD8")]
public class PhysicalItemGear : BaseHurtGear
{
	[Token(Token = "0x4001C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 initPos;

	[Token(Token = "0x4001C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion initRot;

	[Token(Token = "0x4001C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4001C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float force;

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0x230C590", Offset = "0x230C590", VA = "0x230C590", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0x230C648", Offset = "0x230C648", VA = "0x230C648", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0x230C6D4", Offset = "0x230C6D4", VA = "0x230C6D4", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0x230C720", Offset = "0x230C720", VA = "0x230C720", Slot = "22")]
	public override void GearHurt(e_group_type ackGroupType, int damage, Vector3 atkDir)
	{
	}

	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0x230C7E4", Offset = "0x230C7E4", VA = "0x230C7E4")]
	public PhysicalItemGear()
	{
	}
}
[Token(Token = "0x2000450")]
public class PlaneExploderStone : MonoBehaviour
{
	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0x230CB74", Offset = "0x230CB74", VA = "0x230CB74")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0x230CE5C", Offset = "0x230CE5C", VA = "0x230CE5C")]
	public PlaneExploderStone()
	{
	}
}
[Token(Token = "0x2000451")]
public class RebirtGear : BaseGear
{
	[Token(Token = "0x4001C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider rebirtCollider;

	[Token(Token = "0x6001A50")]
	[Address(RVA = "0x271B368", Offset = "0x271B368", VA = "0x271B368", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0x271B3A8", Offset = "0x271B3A8", VA = "0x271B3A8", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0x271B448", Offset = "0x271B448", VA = "0x271B448", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0x271B4F0", Offset = "0x271B4F0", VA = "0x271B4F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0x271B684", Offset = "0x271B684", VA = "0x271B684")]
	public RebirtGear()
	{
	}
}
[Token(Token = "0x2000452")]
public class SceneEventGear : BaseGear
{
	[Token(Token = "0x4001C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Root;

	[Token(Token = "0x4001C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64280", Offset = "0xE64280")]
	public Animator animator;

	[Token(Token = "0x4001C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string AniName;

	[Token(Token = "0x4001C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE642B8", Offset = "0xE642B8")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4001C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform EffectRoot;

	[Token(Token = "0x4001C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE642F0", Offset = "0xE642F0")]
	public List<AudioEvent> audioEventList;

	[Token(Token = "0x4001C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> audioObjList;

	[Token(Token = "0x4001C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, WwiseDefine> wwiseDefineDic;

	[Token(Token = "0x4001C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64328", Offset = "0xE64328")]
	public List<Material> materials;

	[Token(Token = "0x4001C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float ObjectLow;

	[Token(Token = "0x4001C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float defaultLow;

	[Token(Token = "0x4001C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float Dotime;

	[Token(Token = "0x4001C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isTrigger;

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0x24BDD4C", Offset = "0x24BDD4C", VA = "0x24BDD4C", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0x24BE178", Offset = "0x24BE178", VA = "0x24BE178", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A57")]
	[Address(RVA = "0x24BE1B0", Offset = "0x24BE1B0", VA = "0x24BE1B0", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A58")]
	[Address(RVA = "0x24BDD50", Offset = "0x24BDD50", VA = "0x24BDD50")]
	private void Init()
	{
	}

	[Token(Token = "0x6001A59")]
	[Address(RVA = "0x24BE1D8", Offset = "0x24BE1D8", VA = "0x24BE1D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0x24BE6DC", Offset = "0x24BE6DC", VA = "0x24BE6DC", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0x24BEA50", Offset = "0x24BEA50", VA = "0x24BEA50")]
	public void PlayAudio(int index)
	{
	}

	[Token(Token = "0x6001A5C")]
	[Address(RVA = "0x24BEC98", Offset = "0x24BEC98", VA = "0x24BEC98")]
	public SceneEventGear()
	{
	}
}
[Token(Token = "0x2000453")]
public class SinglePlankBridgeGear : BaseGear
{
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56038", Offset = "0xE56038")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x2061788", Offset = "0x2061788", VA = "0x2061788")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x2061790", Offset = "0x2061790", VA = "0x2061790")]
		internal bool <DoFXTriggerEnter>b__0(int a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider[] colliders;

	[Token(Token = "0x4001C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Transform> ItemList;

	[Token(Token = "0x4001C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider[] FXCollidersTrigger;

	[Token(Token = "0x4001C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int PlayerMaxNum;

	[Token(Token = "0x4001C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int RandPlayerIndex;

	[Token(Token = "0x4001C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int RandPlayerRunningIndex;

	[Token(Token = "0x4001C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> playerIdList;

	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0x215ED94", Offset = "0x215ED94", VA = "0x215ED94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0x215F00C", Offset = "0x215F00C", VA = "0x215F00C", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0x215F320", Offset = "0x215F320", VA = "0x215F320", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A60")]
	[Address(RVA = "0x215F694", Offset = "0x215F694", VA = "0x215F694", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A61")]
	[Address(RVA = "0x215F9A0", Offset = "0x215F9A0", VA = "0x215F9A0")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A62")]
	[Address(RVA = "0x215FD48", Offset = "0x215FD48", VA = "0x215FD48")]
	private void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A63")]
	[Address(RVA = "0x215FB7C", Offset = "0x215FB7C", VA = "0x215FB7C")]
	private void TriggerToAction(Vector3 dir, WUnit unit)
	{
	}

	[Token(Token = "0x6001A64")]
	[Address(RVA = "0x215FD4C", Offset = "0x215FD4C", VA = "0x215FD4C")]
	private void DoFXTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A65")]
	[Address(RVA = "0x215FFFC", Offset = "0x215FFFC", VA = "0x215FFFC")]
	private void DoFXTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001A66")]
	[Address(RVA = "0x215FFF8", Offset = "0x215FFF8", VA = "0x215FFF8")]
	private void DoFxPlay()
	{
	}

	[Token(Token = "0x6001A67")]
	[Address(RVA = "0x21601B8", Offset = "0x21601B8", VA = "0x21601B8", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001A68")]
	[Address(RVA = "0x21601BC", Offset = "0x21601BC", VA = "0x21601BC")]
	public SinglePlankBridgeGear()
	{
	}
}
[Token(Token = "0x2000455")]
public enum e_Slotmachine
{
	[Token(Token = "0x4001C20")]
	Pistol = 1,
	[Token(Token = "0x4001C21")]
	_9mm = 2,
	[Token(Token = "0x4001C22")]
	_765mm = 3,
	[Token(Token = "0x4001C23")]
	_18mm = 4,
	[Token(Token = "0x4001C24")]
	Micro_gatling = 5,
	[Token(Token = "0x4001C25")]
	Continuous_RPG = 6,
	[Token(Token = "0x4001C26")]
	FlameProjector = 7,
	[Token(Token = "0x4001C27")]
	Fuel_gun = 8,
	[Token(Token = "0x4001C28")]
	Machine_pistol = 9,
	[Token(Token = "0x4001C29")]
	Shotgun = 10,
	[Token(Token = "0x4001C2A")]
	Plasma_pistol = 11,
	[Token(Token = "0x4001C2B")]
	Needle_gun = 12,
	[Token(Token = "0x4001C2C")]
	Laser_pistol = 13,
	[Token(Token = "0x4001C2D")]
	Explosive_crossbow = 14,
	[Token(Token = "0x4001C2E")]
	Pulse_gun = 15,
	[Token(Token = "0x4001C2F")]
	Revolver = 17
}
[Serializable]
[Token(Token = "0x2000456")]
public class Award
{
	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_Slotmachine E_Slotmachine;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float RecordingAngle;

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x2900DC8", Offset = "0x2900DC8", VA = "0x2900DC8")]
	public Award()
	{
	}
}
[Token(Token = "0x2000457")]
public class SlotmachineGear : BaseGear
{
	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56048", Offset = "0xE56048")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SlotmachineValue;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InfoWeight Slotmachine;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlotmachineGear <>4__this;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int IdNum;

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x20617B4", Offset = "0x20617B4", VA = "0x20617B4")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x20617BC", Offset = "0x20617BC", VA = "0x20617BC")]
		internal bool <GetRandomSlotmachine>b__0(InfoWeight a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x20617E0", Offset = "0x20617E0", VA = "0x20617E0")]
		internal void <GetRandomSlotmachine>b__1()
		{
		}
	}

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject turnplate1;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject turnplate2;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject turnplate3;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform AwardTr;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Slotmachine_Joystick;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Award> RecordingAngleList;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<InfoWeight> Random_Slotmachine;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isSlotmachineStart;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isStartRound1;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool isStartRound2;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool isStartRound3;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64360", Offset = "0xE64360")]
	public ParticleSystem Take_Effects;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ParticleSystem.Particle[] arrTake;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int arrCount;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 target;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float systime;

	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isPlayEffect;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int EnergylValue;

	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _RecordingAngle;

	[Token(Token = "0x4001C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int AddBullet18mm;

	[Token(Token = "0x4001C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int AddBullet765mm;

	[Token(Token = "0x4001C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int AddBullet9mm;

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0x2160BE0", Offset = "0x2160BE0", VA = "0x2160BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0x2160EC8", Offset = "0x2160EC8", VA = "0x2160EC8")]
	public void GetRandomSlotmachine()
	{
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0x2161388", Offset = "0x2161388", VA = "0x2161388")]
	public void Bullet_Effect_18mm()
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0x2161644", Offset = "0x2161644", VA = "0x2161644")]
	public void Bullet_Effect_765mm()
	{
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0x2161900", Offset = "0x2161900", VA = "0x2161900")]
	public void Bullet_Effect_9mm()
	{
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0x2161BBC", Offset = "0x2161BBC", VA = "0x2161BBC")]
	public void ReturnTrolley()
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0x2161C14", Offset = "0x2161C14", VA = "0x2161C14")]
	public void RandomPumping()
	{
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0x2162040", Offset = "0x2162040", VA = "0x2162040", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0x2162160", Offset = "0x2162160", VA = "0x2162160", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0x2162188", Offset = "0x2162188", VA = "0x2162188", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0x2162190", Offset = "0x2162190", VA = "0x2162190", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0x2162194", Offset = "0x2162194", VA = "0x2162194")]
	public SlotmachineGear()
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0x2162264", Offset = "0x2162264", VA = "0x2162264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E3DC", Offset = "0xE6E3DC")]
	private void <RandomPumping>b__29_0()
	{
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0x21622AC", Offset = "0x21622AC", VA = "0x21622AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E3EC", Offset = "0xE6E3EC")]
	private void <RandomPumping>b__29_1()
	{
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0x21622F4", Offset = "0x21622F4", VA = "0x21622F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E3FC", Offset = "0xE6E3FC")]
	private void <RandomPumping>b__29_2()
	{
	}
}
[Token(Token = "0x2000459")]
public class SpineHurt : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56058", Offset = "0xE56058")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpineHurt <>4__this;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit unit;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x2061A50", Offset = "0x2061A50", VA = "0x2061A50")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x2061A58", Offset = "0x2061A58", VA = "0x2061A58")]
		internal void <OnTriggerStay>b__0()
		{
		}
	}

	[Token(Token = "0x4001C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSetHurt;

	[Token(Token = "0x4001C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64398", Offset = "0xE64398")]
	public float DamageInterval;

	[Token(Token = "0x4001C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExtrusionWallGear ExtrusionWallGear;

	[Token(Token = "0x4001C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<int> entryList;

	[Token(Token = "0x4001C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Coroutine> isSetTime;

	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0x2164334", Offset = "0x2164334", VA = "0x2164334")]
	public void Iint()
	{
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0x2164390", Offset = "0x2164390", VA = "0x2164390")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0x2164504", Offset = "0x2164504", VA = "0x2164504")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0x2164A00", Offset = "0x2164A00", VA = "0x2164A00")]
	public SpineHurt()
	{
	}
}
[Token(Token = "0x200045B")]
public class SpotGear : BaseGear
{
	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int CheckRoomId;

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0x2164AD8", Offset = "0x2164AD8", VA = "0x2164AD8", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0x2164CE8", Offset = "0x2164CE8", VA = "0x2164CE8", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A86")]
	[Address(RVA = "0x2164DC4", Offset = "0x2164DC4", VA = "0x2164DC4", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A87")]
	[Address(RVA = "0x2164F30", Offset = "0x2164F30", VA = "0x2164F30", Slot = "19")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0x21651A4", Offset = "0x21651A4", VA = "0x21651A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0x2164D20", Offset = "0x2164D20", VA = "0x2164D20")]
	private void FindObjects(GameObject obj, bool state)
	{
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0x2165340", Offset = "0x2165340", VA = "0x2165340")]
	private void OnEventHandler(FlashLight flashLight, RaycastHit raycastHit, FlashLight.LightEventType lightEventType)
	{
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0x21653B8", Offset = "0x21653B8", VA = "0x21653B8")]
	protected void OnLightEnter(RaycastHit info)
	{
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0x21653F0", Offset = "0x21653F0", VA = "0x21653F0")]
	protected void OnLightStay(RaycastHit info)
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0x2165428", Offset = "0x2165428", VA = "0x2165428")]
	private void TriggerHit(RaycastHit info)
	{
	}

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0x21656C0", Offset = "0x21656C0", VA = "0x21656C0")]
	public SpotGear()
	{
	}
}
[Token(Token = "0x200045C")]
public class SupplyGear : BaseGear
{
	[Token(Token = "0x200045D")]
	public class DoInfoTimer
	{
		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x2063424", Offset = "0x2063424", VA = "0x2063424")]
		public DoInfoTimer()
		{
		}
	}

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider rebirtCollider;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<DoInfoTimer> doList;

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0x225AF98", Offset = "0x225AF98", VA = "0x225AF98", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0x225AFD8", Offset = "0x225AFD8", VA = "0x225AFD8", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0x225B0F4", Offset = "0x225B0F4", VA = "0x225B0F4", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0x225B1F0", Offset = "0x225B1F0", VA = "0x225B1F0")]
	private bool CheckUnit(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0x225B338", Offset = "0x225B338", VA = "0x225B338")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0x225B4A0", Offset = "0x225B4A0", VA = "0x225B4A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0x225B74C", Offset = "0x225B74C", VA = "0x225B74C")]
	public SupplyGear()
	{
	}
}
[Token(Token = "0x200045E")]
public enum e_SwitchType
{
	[Token(Token = "0x4001C5A")]
	None = 0,
	[Token(Token = "0x4001C5B")]
	SafeRoomFence = 10,
	[Token(Token = "0x4001C5C")]
	MovePlatform = 20,
	[Token(Token = "0x4001C5D")]
	PlayerConvey = 30,
	[Token(Token = "0x4001C5E")]
	Currency_Move = 100,
	[Token(Token = "0x4001C5F")]
	Currency_TwoWayMove = 102,
	[Token(Token = "0x4001C60")]
	ProtectiveBoard = 200,
	[Token(Token = "0x4001C61")]
	WeaponAcquisition = 500,
	[Token(Token = "0x4001C62")]
	WeaponRandomAcquisition = 501,
	[Token(Token = "0x4001C63")]
	InitWeaponRandom = 502,
	[Token(Token = "0x4001C64")]
	IntegralAcquisition = 600,
	[Token(Token = "0x4001C65")]
	CartridgeAcquisition = 601,
	[Token(Token = "0x4001C66")]
	RelicsAcquisition = 602,
	[Token(Token = "0x4001C67")]
	Clearance = 1000
}
[Token(Token = "0x200045F")]
public enum e_SwitchWeapon
{
	[Token(Token = "0x4001C69")]
	InstanceWeaponModel,
	[Token(Token = "0x4001C6A")]
	WeaponAcquisitionRight,
	[Token(Token = "0x4001C6B")]
	WeaponAcquisitionLeft,
	[Token(Token = "0x4001C6C")]
	WeaponRandomAcquisition
}
[Token(Token = "0x2000460")]
public class SwitchData
{
	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int IntegralValue;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float ProgressTime;

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0x22615D8", Offset = "0x22615D8", VA = "0x22615D8")]
	public SwitchData()
	{
	}
}
[Token(Token = "0x2000461")]
public class InfoWeight
{
	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int SwitchInfo;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int RandomWeight;

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0x20AD18C", Offset = "0x20AD18C", VA = "0x20AD18C")]
	public InfoWeight()
	{
	}
}
[Token(Token = "0x2000462")]
public class SwitchController : MonoBehaviour
{
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56068", Offset = "0xE56068")]
	private sealed class <>c__DisplayClass54_0
	{
		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRHandinteractor XRHandinteractor;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x2063538", Offset = "0x2063538", VA = "0x2063538")]
		public <>c__DisplayClass54_0()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x2063540", Offset = "0x2063540", VA = "0x2063540")]
		internal bool <Cartridge_Acquisition>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56078", Offset = "0xE56078")]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRHandinteractor XRHandinteractor;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x2063570", Offset = "0x2063570", VA = "0x2063570")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x2063578", Offset = "0x2063578", VA = "0x2063578")]
		internal bool <GetMoney>b__0()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56088", Offset = "0xE56088")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GuideController> <>9__79_1;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<GuideController> <>9__79_0;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<GuideController> <>9__79_2;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<GuideController> <>9__79_3;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<GuideController> <>9__79_4;

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x2063490", Offset = "0x2063490", VA = "0x2063490")]
		public <>c()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x2063498", Offset = "0x2063498", VA = "0x2063498")]
		internal bool <InitGuideTip>b__79_1(GuideController a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x20634B8", Offset = "0x20634B8", VA = "0x20634B8")]
		internal bool <InitGuideTip>b__79_0(GuideController a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x20634D8", Offset = "0x20634D8", VA = "0x20634D8")]
		internal bool <InitGuideTip>b__79_2(GuideController a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x20634F8", Offset = "0x20634F8", VA = "0x20634F8")]
		internal bool <InitGuideTip>b__79_3(GuideController a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x2063518", Offset = "0x2063518", VA = "0x2063518")]
		internal bool <InitGuideTip>b__79_4(GuideController a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE643E0", Offset = "0xE643E0")]
	public int ID;

	[Token(Token = "0x4001C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64418", Offset = "0xE64418")]
	public int DataID;

	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64450", Offset = "0xE64450")]
	public int Areaid;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64488", Offset = "0xE64488")]
	public float delayTime;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE644C0", Offset = "0xE644C0")]
	public e_SwitchType e_SwichType;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE644F8", Offset = "0xE644F8")]
	public e_weapon_type e_weapon_Type;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64530", Offset = "0xE64530")]
	public Transform WeaponModelTrns;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64568", Offset = "0xE64568")]
	public GameObject SignPrefab;

	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE645A0", Offset = "0xE645A0")]
	public Transform LockSignRoot;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE645D8", Offset = "0xE645D8")]
	public GameObject ClearanceTips;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64610", Offset = "0xE64610")]
	public GameObject PortalEffect;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64648", Offset = "0xE64648")]
	public Transform functionTrns;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64680", Offset = "0xE64680")]
	public Transform UIRoot;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE646B8", Offset = "0xE646B8")]
	public TextMeshPro proUGUI;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE646F0", Offset = "0xE646F0")]
	public TextMesh WeaponNameText;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64728", Offset = "0xE64728")]
	public BaseGear CurrencyGear;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64760", Offset = "0xE64760")]
	public XRBaseInteractor XRBaseInteractor;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64798", Offset = "0xE64798")]
	public XRBaseInteractable XRBaseInteractable;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE647D0", Offset = "0xE647D0")]
	public Transform GuideTipTrans;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE64808", Offset = "0xE64808")]
	public bool IsSummonMonster;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64840", Offset = "0xE64840")]
	private WUnit <OwnerWunit>k__BackingField;

	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64850", Offset = "0xE64850")]
	private RoomSwitchLockSign <LockSign>k__BackingField;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64860", Offset = "0xE64860")]
	private GameObject <Tips>k__BackingField;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WUnit NpcWunit;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isStart;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isOldSummon;

	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int integralValue;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine coroutine;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<InfoWeight> RandomSwitchdata;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject WeaponModel;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Collider InteractaCollider;

	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isFinish;

	[Token(Token = "0x17000290")]
	public WUnit OwnerWunit
	{
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x225BC70", Offset = "0x225BC70", VA = "0x225BC70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E40C", Offset = "0xE6E40C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x225BC78", Offset = "0x225BC78", VA = "0x225BC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E41C", Offset = "0xE6E41C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000291")]
	public RoomSwitchLockSign LockSign
	{
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x225BC80", Offset = "0x225BC80", VA = "0x225BC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E42C", Offset = "0xE6E42C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x225BC88", Offset = "0x225BC88", VA = "0x225BC88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E43C", Offset = "0xE6E43C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000292")]
	public GameObject Tips
	{
		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x225BC90", Offset = "0x225BC90", VA = "0x225BC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E44C", Offset = "0xE6E44C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x225BC98", Offset = "0x225BC98", VA = "0x225BC98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E45C", Offset = "0xE6E45C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000293")]
	public Transform FunctionTrns
	{
		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x225BCA0", Offset = "0x225BCA0", VA = "0x225BCA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x225BD2C", Offset = "0x225BD2C", VA = "0x225BD2C")]
	public void OnInit()
	{
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x225C388", Offset = "0x225C388", VA = "0x225C388")]
	public void OnStart()
	{
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x225E1DC", Offset = "0x225E1DC", VA = "0x225E1DC")]
	public void OnStop()
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x225E378", Offset = "0x225E378", VA = "0x225E378")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0x225E3F8", Offset = "0x225E3F8", VA = "0x225E3F8")]
	private void Reuse()
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0x225CA68", Offset = "0x225CA68", VA = "0x225CA68")]
	public void InitTips()
	{
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x225E52C", Offset = "0x225E52C", VA = "0x225E52C")]
	public void DoBeginSignCallBack()
	{
	}

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x225E5A8", Offset = "0x225E5A8", VA = "0x225E5A8")]
	public void DoBreakSignCallBack()
	{
	}

	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0x225E450", Offset = "0x225E450", VA = "0x225E450")]
	public void DoSignStatus(bool isShow)
	{
	}

	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x225E6D0", Offset = "0x225E6D0", VA = "0x225E6D0")]
	public void FinishCallBack()
	{
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x225FA3C", Offset = "0x225FA3C", VA = "0x225FA3C")]
	private bool CheckIntegralValue(int uid)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x225FBE8", Offset = "0x225FBE8", VA = "0x225FBE8")]
	public void Cartridge_Acquisition(XRBaseInteractor XRBaseInteractor)
	{
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x2260160", Offset = "0x2260160", VA = "0x2260160")]
	public void AcquireBox_weapon(XRBaseInteractor XRBaseInteractor)
	{
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x2260464", Offset = "0x2260464", VA = "0x2260464")]
	public void AcquireBox_Relics(XRBaseInteractor XRBaseInteractor)
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x226005C", Offset = "0x226005C", VA = "0x226005C")]
	public void Logout_Activate_Coll()
	{
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x2260744", Offset = "0x2260744", VA = "0x2260744")]
	public void GetMoney(XRBaseInteractor XRBaseInteractor)
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0x22609D8", Offset = "0x22609D8", VA = "0x22609D8")]
	public void OpenDoor(bool isR)
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0x2260CB0", Offset = "0x2260CB0", VA = "0x2260CB0")]
	public void Clearance(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0x2260E30", Offset = "0x2260E30", VA = "0x2260E30")]
	public void DestroyDropItem(XRBaseInteractable xRBaseInteractable)
	{
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0x2260EB0", Offset = "0x2260EB0", VA = "0x2260EB0")]
	public void SafeRoomFence(DialInteractable interactable)
	{
	}

	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0x225C0A8", Offset = "0x225C0A8", VA = "0x225C0A8")]
	private void InitGuidSign()
	{
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0x225F95C", Offset = "0x225F95C", VA = "0x225F95C")]
	public SignTrigger GetFirstSign()
	{
		return null;
	}

	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0x225C978", Offset = "0x225C978", VA = "0x225C978")]
	public void ShowSign(bool isShow)
	{
	}

	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0x22610FC", Offset = "0x22610FC", VA = "0x22610FC")]
	public void ShowSignProgress(bool isShow)
	{
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x22611BC", Offset = "0x22611BC", VA = "0x22611BC")]
	public int GetFirstSignTriggerOwnerId()
	{
		return default(int);
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x2261254", Offset = "0x2261254", VA = "0x2261254")]
	public WUnit GetFirstSignTriggerOwner()
	{
		return null;
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x22612E8", Offset = "0x22612E8", VA = "0x22612E8")]
	public bool GetFirstSignHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x225CF1C", Offset = "0x225CF1C", VA = "0x225CF1C")]
	public void GetRandomWeaponType()
	{
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x22613B4", Offset = "0x22613B4", VA = "0x22613B4")]
	public void SetSwitchWeapon_group(int weapon_type)
	{
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0x225CBF8", Offset = "0x225CBF8", VA = "0x225CBF8")]
	public void InstanceWeaponModel()
	{
	}

	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0x225D504", Offset = "0x225D504", VA = "0x225D504")]
	public void SetIntergral(int Intergral)
	{
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0x22613BC", Offset = "0x22613BC", VA = "0x22613BC")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0x225BF48", Offset = "0x225BF48", VA = "0x225BF48")]
	public void UIShow(bool isShow)
	{
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0x225BFF8", Offset = "0x225BFF8", VA = "0x225BFF8")]
	private void WeaponUI(bool isShow)
	{
	}

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0x225D210", Offset = "0x225D210", VA = "0x225D210")]
	public void GetRandomIntegralValue()
	{
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0x22614C8", Offset = "0x22614C8", VA = "0x22614C8")]
	public void AddGold()
	{
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0x225D5C8", Offset = "0x225D5C8", VA = "0x225D5C8")]
	private void InitGuideTip()
	{
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x225F638", Offset = "0x225F638", VA = "0x225F638")]
	private void FinishGuideTip()
	{
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x225E624", Offset = "0x225E624", VA = "0x225E624")]
	private void DoorStatus(bool isShow)
	{
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0x2261568", Offset = "0x2261568", VA = "0x2261568")]
	public SwitchController()
	{
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x2261578", Offset = "0x2261578", VA = "0x2261578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E46C", Offset = "0xE6E46C")]
	private void <FinishCallBack>b__52_0()
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x2261580", Offset = "0x2261580", VA = "0x2261580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E47C", Offset = "0xE6E47C")]
	private void <FinishCallBack>b__52_1()
	{
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x2261588", Offset = "0x2261588", VA = "0x2261588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E48C", Offset = "0xE6E48C")]
	private void <FinishCallBack>b__52_2()
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x2261590", Offset = "0x2261590", VA = "0x2261590")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E49C", Offset = "0xE6E49C")]
	private bool <GetRandomWeaponType>b__70_0(InfoWeight a)
	{
		return default(bool);
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x22615B4", Offset = "0x22615B4", VA = "0x22615B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E4AC", Offset = "0xE6E4AC")]
	private bool <GetRandomIntegralValue>b__77_0(InfoWeight a)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000466")]
public class TriggerGear : BaseGear
{
	[Token(Token = "0x4001C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent<bool> EnterEvent;

	[Token(Token = "0x4001C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isEnter;

	[Token(Token = "0x4001C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WUnit owner;

	[Token(Token = "0x4001C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public e_GuideTip_Type guideTip_Type;

	[Token(Token = "0x4001C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private XRControllerCollector XRControllerCollector;

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0x23667E0", Offset = "0x23667E0", VA = "0x23667E0", Slot = "14")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0x23667E8", Offset = "0x23667E8", VA = "0x23667E8", Slot = "15")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0x2366964", Offset = "0x2366964", VA = "0x2366964", Slot = "16")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x236696C", Offset = "0x236696C", VA = "0x236696C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0x2366AD4", Offset = "0x2366AD4", VA = "0x2366AD4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0x2366970", Offset = "0x2366970", VA = "0x2366970")]
	private void DoOnTrigger(Collider other)
	{
	}

	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0x2366AD8", Offset = "0x2366AD8", VA = "0x2366AD8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0x2366C38", Offset = "0x2366C38", VA = "0x2366C38")]
	public void ShopUIStatus(bool isShow)
	{
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0x2366E84", Offset = "0x2366E84", VA = "0x2366E84")]
	public void AttributesUIStatus(bool isShow)
	{
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0x23670D0", Offset = "0x23670D0", VA = "0x23670D0")]
	public void SetGuidesTipState(bool isShow)
	{
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0x2367170", Offset = "0x2367170", VA = "0x2367170")]
	public void ShowGuidesTip(int guideTip)
	{
	}

	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0x2367200", Offset = "0x2367200", VA = "0x2367200")]
	public TriggerGear()
	{
	}
}
[Token(Token = "0x2000467")]
public class TriggerListening : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56098", Offset = "0xE56098")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Collider, Collider> <>9__7_0;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Collider, Collider> <>9__7_1;

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x2063D70", Offset = "0x2063D70", VA = "0x2063D70")]
		public <>c()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x2063D78", Offset = "0x2063D78", VA = "0x2063D78")]
		internal void <.ctor>b__7_0(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x2063D7C", Offset = "0x2063D7C", VA = "0x2063D7C")]
		internal void <.ctor>b__7_1(Collider <p0>, Collider <p1>)
		{
		}
	}

	[Token(Token = "0x4001C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider, Collider> OnTriggerEnterCB;

	[Token(Token = "0x4001C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider, Collider> OnTriggerExitCB;

	[Token(Token = "0x4001CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider SelfCollider;

	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0x2367208", Offset = "0x2367208", VA = "0x2367208")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0x236727C", Offset = "0x236727C", VA = "0x236727C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x23672F0", Offset = "0x23672F0", VA = "0x23672F0")]
	public static TriggerListening Add(Collider go)
	{
		return null;
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x23673E8", Offset = "0x23673E8", VA = "0x23673E8")]
	public static void Remove(GameObject go)
	{
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x23674BC", Offset = "0x23674BC", VA = "0x23674BC")]
	public TriggerListening()
	{
	}
}
[Token(Token = "0x2000469")]
public class TriggerListeningStay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE560A8", Offset = "0xE560A8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Collider, Collider> <>9__9_0;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Collider, Collider> <>9__9_1;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Collider, Collider> <>9__9_2;

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x2063DE4", Offset = "0x2063DE4", VA = "0x2063DE4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x2063DEC", Offset = "0x2063DEC", VA = "0x2063DEC")]
		internal void <.ctor>b__9_0(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x2063DF0", Offset = "0x2063DF0", VA = "0x2063DF0")]
		internal void <.ctor>b__9_1(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x2063DF4", Offset = "0x2063DF4", VA = "0x2063DF4")]
		internal void <.ctor>b__9_2(Collider <p0>, Collider <p1>)
		{
		}
	}

	[Token(Token = "0x4001CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider, Collider> OnTriggerEnterCB;

	[Token(Token = "0x4001CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider, Collider> OnTriggerExitCB;

	[Token(Token = "0x4001CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<Collider, Collider> OnTriggerStayCB;

	[Token(Token = "0x4001CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider SelfCollider;

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x2367688", Offset = "0x2367688", VA = "0x2367688")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x23676F0", Offset = "0x23676F0", VA = "0x23676F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x2367758", Offset = "0x2367758", VA = "0x2367758")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x23677C0", Offset = "0x23677C0", VA = "0x23677C0")]
	public static TriggerListeningStay Add(Collider go)
	{
		return null;
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x23678B8", Offset = "0x23678B8", VA = "0x23678B8")]
	public static void Remove(GameObject go)
	{
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x236798C", Offset = "0x236798C", VA = "0x236798C")]
	public TriggerListeningStay()
	{
	}
}
[Token(Token = "0x200046B")]
public class InitBugly : MonoBehaviour
{
	[Token(Token = "0x4001CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appid;

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0x20AE788", Offset = "0x20AE788", VA = "0x20AE788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x20AE78C", Offset = "0x20AE78C", VA = "0x20AE78C")]
	public InitBugly()
	{
	}
}
[Token(Token = "0x200046C")]
public class Main : MonoBehaviour
{
	[Token(Token = "0x4001CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Main _instance;

	[Token(Token = "0x4001CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ulong GCTimeSlice;

	[Token(Token = "0x17000294")]
	public static Main Instance
	{
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x24DA8F0", Offset = "0x24DA8F0", VA = "0x24DA8F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x24DA93C", Offset = "0x24DA93C", VA = "0x24DA93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x24DAA64", Offset = "0x24DAA64", VA = "0x24DAA64")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x24DB368", Offset = "0x24DB368", VA = "0x24DB368")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x24DB63C", Offset = "0x24DB63C", VA = "0x24DB63C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0x24DB75C", Offset = "0x24DB75C", VA = "0x24DB75C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x24DB8DC", Offset = "0x24DB8DC", VA = "0x24DB8DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x24DB9A8", Offset = "0x24DB9A8", VA = "0x24DB9A8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x24DB9AC", Offset = "0x24DB9AC", VA = "0x24DB9AC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x24DBAB0", Offset = "0x24DBAB0", VA = "0x24DBAB0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x24DBD44", Offset = "0x24DBD44", VA = "0x24DBD44")]
	public Main()
	{
	}
}
[Token(Token = "0x200046D")]
public static class MainController
{
	[Token(Token = "0x4001CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsUseOBB;

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x24DAABC", Offset = "0x24DAABC", VA = "0x24DAABC")]
	public static void Start()
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x24DB7B4", Offset = "0x24DB7B4", VA = "0x24DB7B4")]
	public static void FixedUpdate()
	{
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x24DB3C0", Offset = "0x24DB3C0", VA = "0x24DB3C0")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x24DB694", Offset = "0x24DB694", VA = "0x24DB694")]
	public static void LateUpdate()
	{
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x24DBA0C", Offset = "0x24DBA0C", VA = "0x24DBA0C")]
	public static void OnPause(bool pause)
	{
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x24DB934", Offset = "0x24DB934", VA = "0x24DB934")]
	public static void OnDestroy()
	{
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0x24DBB78", Offset = "0x24DBB78", VA = "0x24DBB78")]
	public static void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0x24DBD54", Offset = "0x24DBD54", VA = "0x24DBD54")]
	public static void OnGUI()
	{
	}
}
[Token(Token = "0x200046E")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4001CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int speed;

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0x24BBA1C", Offset = "0x24BBA1C", VA = "0x24BBA1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0x24BBA20", Offset = "0x24BBA20", VA = "0x24BBA20")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0x24BBA74", Offset = "0x24BBA74", VA = "0x24BBA74")]
	public Rotate()
	{
	}
}
[Token(Token = "0x200046F")]
public interface IState
{
	[Token(Token = "0x6001B11")]
	void DoInit(object param);

	[Token(Token = "0x6001B12")]
	void DoUpdate();

	[Token(Token = "0x6001B13")]
	void DoLateUpdate();

	[Token(Token = "0x6001B14")]
	void DoFixedUpdate();

	[Token(Token = "0x6001B15")]
	void DoGUI();

	[Token(Token = "0x6001B16")]
	void DoLoad();

	[Token(Token = "0x6001B17")]
	void DoStart(StateManager.StateDefine preType);

	[Token(Token = "0x6001B18")]
	void DoTransformStartOver(StateManager.StateDefine preType);

	[Token(Token = "0x6001B19")]
	bool DoExit(StateManager.StateDefine nextType);

	[Token(Token = "0x6001B1A")]
	void DoUpdateLoad();

	[Token(Token = "0x6001B1B")]
	void DoUpdateInTransEnd();
}
[Token(Token = "0x2000470")]
public class StateManager : Singleton<StateManager>
{
	[Token(Token = "0x2000471")]
	public enum StateDefine
	{
		[Token(Token = "0x4001CB6")]
		STATE_NONE = 0,
		[Token(Token = "0x4001CB7")]
		STATE_DEBUG_CONFIG = 1,
		[Token(Token = "0x4001CB8")]
		STATE_LOGO = 2,
		[Token(Token = "0x4001CB9")]
		STATE_CHECK = 3,
		[Token(Token = "0x4001CBA")]
		STATE_SCENE = 9,
		[Token(Token = "0x4001CBB")]
		STATE_BATTLE = 10
	}

	[Token(Token = "0x4001CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IState activeState;

	[Token(Token = "0x4001CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateDefine activeStateType;

	[Token(Token = "0x4001CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<StateDefine, IState> stateList;

	[Token(Token = "0x4001CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StateDefine preStateType;

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x21660A0", Offset = "0x21660A0", VA = "0x21660A0")]
	public StateDefine STPreStateType()
	{
		return default(StateDefine);
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x21660A8", Offset = "0x21660A8", VA = "0x21660A8")]
	public void Init()
	{
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x216610C", Offset = "0x216610C", VA = "0x216610C")]
	private void Register(StateDefine type, IState st)
	{
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x21661A0", Offset = "0x21661A0", VA = "0x21661A0")]
	private void UnRegister(StateDefine type)
	{
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x2166290", Offset = "0x2166290", VA = "0x2166290")]
	public StateDefine GetStateType()
	{
		return default(StateDefine);
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x21662A8", Offset = "0x21662A8", VA = "0x21662A8")]
	public IState GetState()
	{
		return null;
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0x21662B0", Offset = "0x21662B0", VA = "0x21662B0")]
	public IState GetStateByType(StateDefine type)
	{
		return null;
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0x2166338", Offset = "0x2166338", VA = "0x2166338")]
	public void SetActiveState(StateDefine nextType)
	{
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0x216622C", Offset = "0x216622C", VA = "0x216622C")]
	public bool IsHasState(StateDefine nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x21663C4", Offset = "0x21663C4", VA = "0x21663C4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x2166430", Offset = "0x2166430", VA = "0x2166430")]
	public void DoStateExit(StateDefine nextType)
	{
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x2166508", Offset = "0x2166508", VA = "0x2166508")]
	public void DoTransformStartOver()
	{
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0x21665C8", Offset = "0x21665C8", VA = "0x21665C8")]
	public void DoInit(object param)
	{
	}

	[Token(Token = "0x6001B29")]
	[Address(RVA = "0x2166690", Offset = "0x2166690", VA = "0x2166690")]
	public void DoStateLoad()
	{
	}

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0x2166748", Offset = "0x2166748", VA = "0x2166748")]
	public void DoStateUpdateLoad()
	{
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0x2166800", Offset = "0x2166800", VA = "0x2166800")]
	public void DoUpdateInTransEnd()
	{
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0x21668B8", Offset = "0x21668B8", VA = "0x21668B8")]
	public void DoStateStart()
	{
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0x2166978", Offset = "0x2166978", VA = "0x2166978")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0x2166A30", Offset = "0x2166A30", VA = "0x2166A30")]
	public void Update()
	{
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0x2166AE8", Offset = "0x2166AE8", VA = "0x2166AE8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x2166BA0", Offset = "0x2166BA0", VA = "0x2166BA0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x2166C58", Offset = "0x2166C58", VA = "0x2166C58")]
	public void ChangeGameState(StateDefine _nextState, [Optional] object _param)
	{
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x2166C9C", Offset = "0x2166C9C", VA = "0x2166C9C")]
	public StateManager()
	{
	}
}
[Token(Token = "0x2000472")]
public enum AchievementType
{
	[Token(Token = "0x4001CBD")]
	First_entry,
	[Token(Token = "0x4001CBE")]
	First_entry_2nd,
	[Token(Token = "0x4001CBF")]
	First_entry_3rd,
	[Token(Token = "0x4001CC0")]
	First_entry_4th,
	[Token(Token = "0x4001CC1")]
	First_entry_5th,
	[Token(Token = "0x4001CC2")]
	Found_SecretRoom,
	[Token(Token = "0x4001CC3")]
	Found_SarabNest,
	[Token(Token = "0x4001CC4")]
	Kill_Monster_10,
	[Token(Token = "0x4001CC5")]
	Kill_Monster_100,
	[Token(Token = "0x4001CC6")]
	Kill_Monster_1000,
	[Token(Token = "0x4001CC7")]
	Pistol_Kill_Monster_100,
	[Token(Token = "0x4001CC8")]
	SMG_Kill_Monster_100,
	[Token(Token = "0x4001CC9")]
	Shotgun_Kill_Monster_100,
	[Token(Token = "0x4001CCA")]
	First_Beat_BigWhite,
	[Token(Token = "0x4001CCB")]
	First_Beat_PHPH,
	[Token(Token = "0x4001CCC")]
	First_Beat_COA,
	[Token(Token = "0x4001CCD")]
	Die_1st,
	[Token(Token = "0x4001CCE")]
	Die_9th,
	[Token(Token = "0x4001CCF")]
	Collect_Gold_1000,
	[Token(Token = "0x4001CD0")]
	Collect_Gold_10000,
	[Token(Token = "0x4001CD1")]
	Collect_Gold_100000,
	[Token(Token = "0x4001CD2")]
	Collect_Energy_100,
	[Token(Token = "0x4001CD3")]
	Collect_Energy_1000,
	[Token(Token = "0x4001CD4")]
	Collect_Energy_10000,
	[Token(Token = "0x4001CD5")]
	New_Weapon
}
[Token(Token = "0x2000473")]
public enum Stat_Type
{
	[Token(Token = "0x4001CD7")]
	TestCount,
	[Token(Token = "0x4001CD8")]
	Max_Levels,
	[Token(Token = "0x4001CD9")]
	SecretRoom_Count,
	[Token(Token = "0x4001CDA")]
	SarabNest_Count,
	[Token(Token = "0x4001CDB")]
	Kill_Monster_Num,
	[Token(Token = "0x4001CDC")]
	Pistol_Kill_Monster,
	[Token(Token = "0x4001CDD")]
	SMG_Kill_Monster,
	[Token(Token = "0x4001CDE")]
	Shotgun_Kill_Monster,
	[Token(Token = "0x4001CDF")]
	Kill_BigWhite_Num,
	[Token(Token = "0x4001CE0")]
	Kill_PHPH_Num,
	[Token(Token = "0x4001CE1")]
	Kill_COA_Num,
	[Token(Token = "0x4001CE2")]
	Die_Count,
	[Token(Token = "0x4001CE3")]
	Gold_Collect,
	[Token(Token = "0x4001CE4")]
	Energy_Collect,
	[Token(Token = "0x4001CE5")]
	Weapon_Buy_Count
}
[Token(Token = "0x2000474")]
public class SteamAchi : MonoBehaviour
{
	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pbAchieved;

	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<AchievementType, bool> isAchievementDic;

	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SteamAchi Instance;

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x2258654", Offset = "0x2258654", VA = "0x2258654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x22586C0", Offset = "0x22586C0", VA = "0x22586C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E4BC", Offset = "0xE6E4BC")]
	public void IintAchievementDic()
	{
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x22586C4", Offset = "0x22586C4", VA = "0x22586C4")]
	public void Complete_Achievement(AchievementType ach_type)
	{
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x22586C8", Offset = "0x22586C8", VA = "0x22586C8")]
	public void UnLockAchievement(AchievementType _achiName)
	{
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0x22586CC", Offset = "0x22586CC", VA = "0x22586CC")]
	public void Remove_Achievement(AchievementType ach_type, bool _all)
	{
	}

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0x22586D0", Offset = "0x22586D0", VA = "0x22586D0")]
	private void Clean_Achievement(string achievementName)
	{
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0x22586D4", Offset = "0x22586D4", VA = "0x22586D4")]
	private void Clean_AllAchievement()
	{
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x22586D8", Offset = "0x22586D8", VA = "0x22586D8")]
	public void ResetAllStatsAchi(bool allAchi)
	{
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x22586DC", Offset = "0x22586DC", VA = "0x22586DC")]
	public void Stat_increase(int _stat, int _stat_increase, Stat_Type _Stat_Type)
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x22586E0", Offset = "0x22586E0", VA = "0x22586E0")]
	public void Stats_increase(Stat_Type stat_Type, int _Count)
	{
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0x22586E4", Offset = "0x22586E4", VA = "0x22586E4")]
	public void Check_UnLockAchi(Stat_Type _stat_Type, int _stat)
	{
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0x22586E8", Offset = "0x22586E8", VA = "0x22586E8")]
	public void GetAchiflag(AchievementType achievementType)
	{
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0x22586EC", Offset = "0x22586EC", VA = "0x22586EC")]
	public SteamAchi()
	{
	}
}
[Token(Token = "0x2000475")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000295")]
	public static bool Initialized
	{
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x2258774", Offset = "0x2258774", VA = "0x2258774")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0x225877C", Offset = "0x225877C", VA = "0x225877C")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000476")]
public class CSVBulletData
{
	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVBulletData> data_list;

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int BoxBullets;

	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int HeapBullets;

	[Token(Token = "0x4001CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BagBullets;

	[Token(Token = "0x4001CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InitBullets;

	[Token(Token = "0x4001CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int BuyBullets;

	[Token(Token = "0x4001CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int BuyGold;

	[Token(Token = "0x4001CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x6001B43")]
	[Address(RVA = "0x27DD778", Offset = "0x27DD778", VA = "0x27DD778")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0x27DD7BC", Offset = "0x27DD7BC", VA = "0x27DD7BC")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0x27DD8EC", Offset = "0x27DD8EC", VA = "0x27DD8EC")]
	private static CSVBulletData Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0x27DDB14", Offset = "0x27DDB14", VA = "0x27DDB14")]
	public static CSVBulletData GetBulletData(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0x27DD9D8", Offset = "0x27DD9D8", VA = "0x27DD9D8")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0x27DDD94", Offset = "0x27DDD94", VA = "0x27DDD94")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0x27DE410", Offset = "0x27DE410", VA = "0x27DE410")]
	public CSVBulletData()
	{
	}
}
[Token(Token = "0x2000477")]
public class CSVCharacter_attribute_level
{
	[Token(Token = "0x4001CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVCharacter_attribute_level> data_list;

	[Token(Token = "0x4001CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int LV0;

	[Token(Token = "0x4001CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int LV1;

	[Token(Token = "0x4001CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int LV2;

	[Token(Token = "0x4001CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int LV3;

	[Token(Token = "0x4001CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int LV4;

	[Token(Token = "0x4001CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int LV5;

	[Token(Token = "0x4001CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0x27DE4B4", Offset = "0x27DE4B4", VA = "0x27DE4B4")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B4C")]
	[Address(RVA = "0x27DE4F8", Offset = "0x27DE4F8", VA = "0x27DE4F8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0x27DE5AC", Offset = "0x27DE5AC", VA = "0x27DE5AC")]
	private static CSVCharacter_attribute_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0x27DE7D4", Offset = "0x27DE7D4", VA = "0x27DE7D4")]
	public static CSVCharacter_attribute_level GetCharacter_attribute_level(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0x27DE698", Offset = "0x27DE698", VA = "0x27DE698")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0x27DE8A8", Offset = "0x27DE8A8", VA = "0x27DE8A8")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0x27DEF24", Offset = "0x27DEF24", VA = "0x27DEF24")]
	public CSVCharacter_attribute_level()
	{
	}
}
[Token(Token = "0x2000478")]
public class CSVGear_summon
{
	[Token(Token = "0x4001CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVGear_summon> data_list;

	[Token(Token = "0x4001CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int GameDiffculty;

	[Token(Token = "0x4001D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int playerCount;

	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int gear;

	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int triggerPointId;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int triggerDis;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int wave;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int time;

	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pointIdList;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int monsterId;

	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int monsterId_L;

	[Token(Token = "0x4001D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int spawnCount;

	[Token(Token = "0x4001D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int spawnDelay;

	[Token(Token = "0x4001D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string PatrolPointList;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string FightPointList;

	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string ShootTimesList;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int IsWarning;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int SpawnLoop;

	[Token(Token = "0x4001D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string type;

	[Token(Token = "0x4001D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string ratio;

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0x27DEFC8", Offset = "0x27DEFC8", VA = "0x27DEFC8")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0x27DF00C", Offset = "0x27DF00C", VA = "0x27DF00C")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0x27DF0C0", Offset = "0x27DF0C0", VA = "0x27DF0C0")]
	private static CSVGear_summon Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0x27DF2E8", Offset = "0x27DF2E8", VA = "0x27DF2E8")]
	public static CSVGear_summon GetGear_summon(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0x27DF1AC", Offset = "0x27DF1AC", VA = "0x27DF1AC")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0x27DF3BC", Offset = "0x27DF3BC", VA = "0x27DF3BC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0x27DFD80", Offset = "0x27DFD80", VA = "0x27DFD80")]
	public CSVGear_summon()
	{
	}
}
[Token(Token = "0x2000479")]
public class CSVIntegral
{
	[Token(Token = "0x4001D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVIntegral> data_list;

	[Token(Token = "0x4001D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int IntegralValue;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Info;

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0x27E056C", Offset = "0x27E056C", VA = "0x27E056C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0x27E05B0", Offset = "0x27E05B0", VA = "0x27E05B0")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0x27E0664", Offset = "0x27E0664", VA = "0x27E0664")]
	private static CSVIntegral Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0x27E088C", Offset = "0x27E088C", VA = "0x27E088C")]
	public static CSVIntegral GetIntegral(int ID)
	{
		return null;
	}

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0x27E0750", Offset = "0x27E0750", VA = "0x27E0750")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0x27E0960", Offset = "0x27E0960", VA = "0x27E0960")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0x27E0EEC", Offset = "0x27E0EEC", VA = "0x27E0EEC")]
	public CSVIntegral()
	{
	}
}
[Token(Token = "0x200047A")]
public class CSVLanguage
{
	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVLanguage> data_list;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Chinese;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string English_US;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Korean;

	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Japanese;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Chinese_TW;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Vietnamese;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Thai;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Indonesian;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string German;

	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string French;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string Russian;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string Portuguese;

	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string Spanish;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string Italian;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string Polish;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string Turkish;

	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string Dutch;

	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string Arabic;

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0x27E0F90", Offset = "0x27E0F90", VA = "0x27E0F90")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x27E0FD4", Offset = "0x27E0FD4", VA = "0x27E0FD4")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0x27E1088", Offset = "0x27E1088", VA = "0x27E1088")]
	private static CSVLanguage Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x27E12B0", Offset = "0x27E12B0", VA = "0x27E12B0")]
	public static CSVLanguage GetLanguage(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x27E1174", Offset = "0x27E1174", VA = "0x27E1174")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x27E1384", Offset = "0x27E1384", VA = "0x27E1384")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x27E1F88", Offset = "0x27E1F88", VA = "0x27E1F88")]
	public CSVLanguage()
	{
	}
}
[Token(Token = "0x200047B")]
public class CSVLive_camera_config_data
{
	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVLive_camera_config_data> data_list;

	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int camId;

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int step;

	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int model;

	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int site;

	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int siteType;

	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x4001D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int swithTime;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minTime;

	[Token(Token = "0x4001D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string aside;

	[Token(Token = "0x4001D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string info;

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0x242E330", Offset = "0x242E330", VA = "0x242E330")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0x242E374", Offset = "0x242E374", VA = "0x242E374")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0x242E42C", Offset = "0x242E42C", VA = "0x242E42C")]
	private static CSVLive_camera_config_data Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0x242E658", Offset = "0x242E658", VA = "0x242E658")]
	public static CSVLive_camera_config_data GetLive_camera_config_data(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0x242E518", Offset = "0x242E518", VA = "0x242E518")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0x242E730", Offset = "0x242E730", VA = "0x242E730")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0x242EE78", Offset = "0x242EE78", VA = "0x242EE78")]
	public CSVLive_camera_config_data()
	{
	}
}
[Token(Token = "0x200047C")]
public class CSVMonster
{
	[Token(Token = "0x4001D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster> data_list;

	[Token(Token = "0x4001D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x4001D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string maxHPList;

	[Token(Token = "0x4001D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int atk;

	[Token(Token = "0x4001D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int IntegralRatio;

	[Token(Token = "0x4001D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int LanguageID;

	[Token(Token = "0x4001D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string picList;

	[Token(Token = "0x4001D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string picWeight;

	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string name;

	[Token(Token = "0x4001D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string info;

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0x242EF1C", Offset = "0x242EF1C", VA = "0x242EF1C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0x242EF60", Offset = "0x242EF60", VA = "0x242EF60")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0x242F018", Offset = "0x242F018", VA = "0x242F018")]
	private static CSVMonster Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x242F244", Offset = "0x242F244", VA = "0x242F244")]
	public static CSVMonster GetMonster(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x242F104", Offset = "0x242F104", VA = "0x242F104")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x242F31C", Offset = "0x242F31C", VA = "0x242F31C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0x242FB00", Offset = "0x242FB00", VA = "0x242FB00")]
	public CSVMonster()
	{
	}
}
[Token(Token = "0x200047D")]
public class CSVMonster_spawn
{
	[Token(Token = "0x4001D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn> data_list;

	[Token(Token = "0x4001D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int GameDiffculty;

	[Token(Token = "0x4001D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int playerCount;

	[Token(Token = "0x4001D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int areaId;

	[Token(Token = "0x4001D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int wave;

	[Token(Token = "0x4001D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int time;

	[Token(Token = "0x4001D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pointIdList;

	[Token(Token = "0x4001D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int monsterId;

	[Token(Token = "0x4001D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int spawnCount;

	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spawnDelay;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int suicideDelayTime;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string PatrolPointList;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string FightPointList;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int IsWarning;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int SpawnLoop;

	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string type;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string ratio;

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x242FBA4", Offset = "0x242FBA4", VA = "0x242FBA4")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0x242FBE8", Offset = "0x242FBE8", VA = "0x242FBE8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x242FCA0", Offset = "0x242FCA0", VA = "0x242FCA0")]
	private static CSVMonster_spawn Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x242FECC", Offset = "0x242FECC", VA = "0x242FECC")]
	public static CSVMonster_spawn GetMonster_spawn(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0x242FD8C", Offset = "0x242FD8C", VA = "0x242FD8C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B80")]
	[Address(RVA = "0x242FFA4", Offset = "0x242FFA4", VA = "0x242FFA4")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0x24308A8", Offset = "0x24308A8", VA = "0x24308A8")]
	public CSVMonster_spawn()
	{
	}
}
[Token(Token = "0x200047E")]
public class CSVMonster_summon_one
{
	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_summon_one> data_list;

	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster;

	[Token(Token = "0x4001D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaId;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wave;

	[Token(Token = "0x4001D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x4001D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pointIdList;

	[Token(Token = "0x4001D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int monsterId;

	[Token(Token = "0x4001D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int spawnCount;

	[Token(Token = "0x4001D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spawnDelay;

	[Token(Token = "0x4001D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string FightPointList;

	[Token(Token = "0x4001D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int SpawnLoop;

	[Token(Token = "0x4001D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string ShootTimesList;

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0x243094C", Offset = "0x243094C", VA = "0x243094C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0x2430990", Offset = "0x2430990", VA = "0x2430990")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x2430A48", Offset = "0x2430A48", VA = "0x2430A48")]
	private static CSVMonster_summon_one Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x2430C74", Offset = "0x2430C74", VA = "0x2430C74")]
	public static CSVMonster_summon_one GetMonster_summon_one(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0x2430B34", Offset = "0x2430B34", VA = "0x2430B34")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0x2430D4C", Offset = "0x2430D4C", VA = "0x2430D4C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0x24314F8", Offset = "0x24314F8", VA = "0x24314F8")]
	public CSVMonster_summon_one()
	{
	}
}
[Token(Token = "0x200047F")]
public class CSVMonster_summon_three
{
	[Token(Token = "0x4001D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_summon_three> data_list;

	[Token(Token = "0x4001D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster;

	[Token(Token = "0x4001D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaId;

	[Token(Token = "0x4001D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wave;

	[Token(Token = "0x4001D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x4001D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pointIdList;

	[Token(Token = "0x4001D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int monsterId;

	[Token(Token = "0x4001D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int spawnCount;

	[Token(Token = "0x4001D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spawnDelay;

	[Token(Token = "0x4001D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string FightPointList;

	[Token(Token = "0x4001D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string ShootTimesList;

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0x243159C", Offset = "0x243159C", VA = "0x243159C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0x24315E0", Offset = "0x24315E0", VA = "0x24315E0")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0x2431698", Offset = "0x2431698", VA = "0x2431698")]
	private static CSVMonster_summon_three Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0x24318C4", Offset = "0x24318C4", VA = "0x24318C4")]
	public static CSVMonster_summon_three GetMonster_summon_three(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0x2431784", Offset = "0x2431784", VA = "0x2431784")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B90")]
	[Address(RVA = "0x243199C", Offset = "0x243199C", VA = "0x243199C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B91")]
	[Address(RVA = "0x2432118", Offset = "0x2432118", VA = "0x2432118")]
	public CSVMonster_summon_three()
	{
	}
}
[Token(Token = "0x2000480")]
public class CSVMonster_summon_two
{
	[Token(Token = "0x4001D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_summon_two> data_list;

	[Token(Token = "0x4001D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster;

	[Token(Token = "0x4001D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaId;

	[Token(Token = "0x4001D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wave;

	[Token(Token = "0x4001D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x4001D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pointIdList;

	[Token(Token = "0x4001D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int monsterId;

	[Token(Token = "0x4001D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int spawnCount;

	[Token(Token = "0x4001D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spawnDelay;

	[Token(Token = "0x4001D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string FightPointList;

	[Token(Token = "0x4001D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string ShootTimesList;

	[Token(Token = "0x6001B93")]
	[Address(RVA = "0x24321BC", Offset = "0x24321BC", VA = "0x24321BC")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x2432200", Offset = "0x2432200", VA = "0x2432200")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B95")]
	[Address(RVA = "0x24322B8", Offset = "0x24322B8", VA = "0x24322B8")]
	private static CSVMonster_summon_two Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B96")]
	[Address(RVA = "0x24324E4", Offset = "0x24324E4", VA = "0x24324E4")]
	public static CSVMonster_summon_two GetMonster_summon_two(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B97")]
	[Address(RVA = "0x24323A4", Offset = "0x24323A4", VA = "0x24323A4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B98")]
	[Address(RVA = "0x24325BC", Offset = "0x24325BC", VA = "0x24325BC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B99")]
	[Address(RVA = "0x2432D38", Offset = "0x2432D38", VA = "0x2432D38")]
	public CSVMonster_summon_two()
	{
	}
}
[Token(Token = "0x2000481")]
public class CSVNpc
{
	[Token(Token = "0x4001D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVNpc> data_list;

	[Token(Token = "0x4001D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x4001D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x4001D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int weaponType;

	[Token(Token = "0x4001D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int headPer;

	[Token(Token = "0x4001D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int frequency;

	[Token(Token = "0x4001D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string InterruptHPList;

	[Token(Token = "0x4001D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string dropList;

	[Token(Token = "0x4001D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int dropRatio;

	[Token(Token = "0x4001D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string name;

	[Token(Token = "0x4001D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string info;

	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0x2432DDC", Offset = "0x2432DDC", VA = "0x2432DDC")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x2432E20", Offset = "0x2432E20", VA = "0x2432E20")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0x2432ED8", Offset = "0x2432ED8", VA = "0x2432ED8")]
	private static CSVNpc Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x2433104", Offset = "0x2433104", VA = "0x2433104")]
	public static CSVNpc GetNpc(int id)
	{
		return null;
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x2432FC4", Offset = "0x2432FC4", VA = "0x2432FC4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x24331DC", Offset = "0x24331DC", VA = "0x24331DC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x24339EC", Offset = "0x24339EC", VA = "0x24339EC")]
	public CSVNpc()
	{
	}
}
[Token(Token = "0x2000482")]
public class CSVPlayer
{
	[Token(Token = "0x4001D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVPlayer> data_list;

	[Token(Token = "0x4001D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x4001D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hpRecoverInterval;

	[Token(Token = "0x4001D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hpRecoverValue;

	[Token(Token = "0x4001D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x4001D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string info;

	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0x2433A90", Offset = "0x2433A90", VA = "0x2433A90")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0x2433AD4", Offset = "0x2433AD4", VA = "0x2433AD4")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BA5")]
	[Address(RVA = "0x2433B8C", Offset = "0x2433B8C", VA = "0x2433B8C")]
	private static CSVPlayer Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BA6")]
	[Address(RVA = "0x2433DB8", Offset = "0x2433DB8", VA = "0x2433DB8")]
	public static CSVPlayer GetPlayer(int id)
	{
		return null;
	}

	[Token(Token = "0x6001BA7")]
	[Address(RVA = "0x2433C78", Offset = "0x2433C78", VA = "0x2433C78")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BA8")]
	[Address(RVA = "0x2433E90", Offset = "0x2433E90", VA = "0x2433E90")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0x2434548", Offset = "0x2434548", VA = "0x2434548")]
	public CSVPlayer()
	{
	}
}
[Token(Token = "0x2000483")]
public class CSVSetting
{
	[Token(Token = "0x4001D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVSetting> data_list;

	[Token(Token = "0x4001D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x4001D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Info;

	[Token(Token = "0x6001BAB")]
	[Address(RVA = "0x24345EC", Offset = "0x24345EC", VA = "0x24345EC")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0x2434630", Offset = "0x2434630", VA = "0x2434630")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x24346E8", Offset = "0x24346E8", VA = "0x24346E8")]
	private static CSVSetting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0x2434914", Offset = "0x2434914", VA = "0x2434914")]
	public static CSVSetting GetSetting(int id)
	{
		return null;
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x24347D4", Offset = "0x24347D4", VA = "0x24347D4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x24349EC", Offset = "0x24349EC", VA = "0x24349EC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x2434FB0", Offset = "0x2434FB0", VA = "0x2434FB0")]
	public CSVSetting()
	{
	}
}
[Token(Token = "0x2000484")]
public class CSVStoreItemData
{
	[Token(Token = "0x4001DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVStoreItemData> data_list;

	[Token(Token = "0x4001DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int UnlockGold;

	[Token(Token = "0x4001DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int BuyGold;

	[Token(Token = "0x4001DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Info;

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x2435054", Offset = "0x2435054", VA = "0x2435054")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x2435098", Offset = "0x2435098", VA = "0x2435098")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x2435150", Offset = "0x2435150", VA = "0x2435150")]
	private static CSVStoreItemData Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x243537C", Offset = "0x243537C", VA = "0x243537C")]
	public static CSVStoreItemData GetStoreItemData(int id)
	{
		return null;
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0x243523C", Offset = "0x243523C", VA = "0x243523C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0x2435454", Offset = "0x2435454", VA = "0x2435454")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x2435A14", Offset = "0x2435A14", VA = "0x2435A14")]
	public CSVStoreItemData()
	{
	}
}
[Token(Token = "0x2000485")]
public class CSVSwitchData_random
{
	[Token(Token = "0x4001DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVSwitchData_random> data_list;

	[Token(Token = "0x4001DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4001DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string InfoList;

	[Token(Token = "0x4001DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string weightList;

	[Token(Token = "0x4001DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Info;

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x2435AB8", Offset = "0x2435AB8", VA = "0x2435AB8")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x2435AFC", Offset = "0x2435AFC", VA = "0x2435AFC")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0x2435BB4", Offset = "0x2435BB4", VA = "0x2435BB4")]
	private static CSVSwitchData_random Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0x2435DE0", Offset = "0x2435DE0", VA = "0x2435DE0")]
	public static CSVSwitchData_random GetSwitchData_random(int ID)
	{
		return null;
	}

	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0x2435CA0", Offset = "0x2435CA0", VA = "0x2435CA0")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0x2435EB8", Offset = "0x2435EB8", VA = "0x2435EB8")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0x24364E4", Offset = "0x24364E4", VA = "0x24364E4")]
	public CSVSwitchData_random()
	{
	}
}
[Token(Token = "0x2000486")]
public class CSVWeapon
{
	[Token(Token = "0x4001DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWeapon> data_list;

	[Token(Token = "0x4001DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int bulletCount;

	[Token(Token = "0x4001DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MagazineCount;

	[Token(Token = "0x4001DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x4001DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int headPer;

	[Token(Token = "0x4001DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int fireInterval;

	[Token(Token = "0x4001DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int scatterRadius;

	[Token(Token = "0x4001DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int recoil;

	[Token(Token = "0x4001DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int HitForce;

	[Token(Token = "0x4001DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int HeadHitForce;

	[Token(Token = "0x4001DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int KillForce;

	[Token(Token = "0x4001DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int HeadShotForce;

	[Token(Token = "0x4001DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int Reload;

	[Token(Token = "0x4001DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string name;

	[Token(Token = "0x4001DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string info;

	[Token(Token = "0x4001DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int CriticalHitRate;

	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0x2436588", Offset = "0x2436588", VA = "0x2436588")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x24365CC", Offset = "0x24365CC", VA = "0x24365CC")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x2436684", Offset = "0x2436684", VA = "0x2436684")]
	private static CSVWeapon Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x24368B0", Offset = "0x24368B0", VA = "0x24368B0")]
	public static CSVWeapon GetWeapon(int id)
	{
		return null;
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x2436770", Offset = "0x2436770", VA = "0x2436770")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0x2436988", Offset = "0x2436988", VA = "0x2436988")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0x24371F0", Offset = "0x24371F0", VA = "0x24371F0")]
	public CSVWeapon()
	{
	}
}
[Token(Token = "0x2000487")]
public class CSVWwise_ambient_video
{
	[Token(Token = "0x4001DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWwise_ambient_video> data_list;

	[Token(Token = "0x4001DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int videoID;

	[Token(Token = "0x4001DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int time;

	[Token(Token = "0x4001DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int point;

	[Token(Token = "0x4001DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int eventID;

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0x2437294", Offset = "0x2437294", VA = "0x2437294")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0x24372D8", Offset = "0x24372D8", VA = "0x24372D8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0x2437390", Offset = "0x2437390", VA = "0x2437390")]
	private static CSVWwise_ambient_video Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0x24375BC", Offset = "0x24375BC", VA = "0x24375BC")]
	public static CSVWwise_ambient_video GetWwise_ambient_video(int id)
	{
		return null;
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0x243747C", Offset = "0x243747C", VA = "0x243747C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x2437694", Offset = "0x2437694", VA = "0x2437694")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0x2437C28", Offset = "0x2437C28", VA = "0x2437C28")]
	public CSVWwise_ambient_video()
	{
	}
}
[Token(Token = "0x2000488")]
public class CSVWwise_animation_define_setting
{
	[Token(Token = "0x4001DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWwise_animation_define_setting> data_list;

	[Token(Token = "0x4001DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelId;

	[Token(Token = "0x4001DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string animationName;

	[Token(Token = "0x4001DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLoop;

	[Token(Token = "0x4001DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int frame;

	[Token(Token = "0x4001DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> region;

	[Token(Token = "0x4001DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int audioEventID;

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x2437CCC", Offset = "0x2437CCC", VA = "0x2437CCC")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x2437D10", Offset = "0x2437D10", VA = "0x2437D10")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x2437DC8", Offset = "0x2437DC8", VA = "0x2437DC8")]
	private static CSVWwise_animation_define_setting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x2437FF4", Offset = "0x2437FF4", VA = "0x2437FF4")]
	public static CSVWwise_animation_define_setting GetWwise_animation_define_setting(int id)
	{
		return null;
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x2437EB4", Offset = "0x2437EB4", VA = "0x2437EB4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0x24380CC", Offset = "0x24380CC", VA = "0x24380CC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x243889C", Offset = "0x243889C", VA = "0x243889C")]
	public CSVWwise_animation_define_setting()
	{
	}
}
[Token(Token = "0x2000489")]
public enum e_LiveCamera_Cell_Type
{
	[Token(Token = "0x4001DD0")]
	None,
	[Token(Token = "0x4001DD1")]
	PlayerPoint,
	[Token(Token = "0x4001DD2")]
	FixPoint
}
[Token(Token = "0x200048A")]
public enum e_LiveCamera_Model_Type
{
	[Token(Token = "0x4001DD4")]
	None,
	[Token(Token = "0x4001DD5")]
	AutoSwith,
	[Token(Token = "0x4001DD6")]
	ManualSwith,
	[Token(Token = "0x4001DD7")]
	Event,
	[Token(Token = "0x4001DD8")]
	HighEvent
}
[Token(Token = "0x200048B")]
public enum e_LiveCamera_Event_Type
{
	[Token(Token = "0x4001DDA")]
	Default = -1,
	[Token(Token = "0x4001DDB")]
	NormaRollBack = 10001,
	[Token(Token = "0x4001DDC")]
	DropRollBack = 10002,
	[Token(Token = "0x4001DDD")]
	LookDoorSign = 10003
}
[Token(Token = "0x200048C")]
public enum e_LiveCamera_HighEvent_Type
{
	[Token(Token = "0x4001DDF")]
	Default = -1,
	[Token(Token = "0x4001DE0")]
	Win_A = 6000,
	[Token(Token = "0x4001DE1")]
	Win_B = 6001,
	[Token(Token = "0x4001DE2")]
	Start_look_player1 = 6010,
	[Token(Token = "0x4001DE3")]
	Start_look_player2 = 6011,
	[Token(Token = "0x4001DE4")]
	Start_look_player3 = 6012
}
[Token(Token = "0x200048D")]
public enum e_LiveCamera_Step_Type
{
	[Token(Token = "0x4001DE6")]
	CombatRoom = 990,
	[Token(Token = "0x4001DE7")]
	Room1 = 10,
	[Token(Token = "0x4001DE8")]
	Room2 = 20,
	[Token(Token = "0x4001DE9")]
	Room3 = 30,
	[Token(Token = "0x4001DEA")]
	Room4 = 40,
	[Token(Token = "0x4001DEB")]
	Room5 = 50,
	[Token(Token = "0x4001DEC")]
	Room6 = 60,
	[Token(Token = "0x4001DED")]
	Room7 = 70,
	[Token(Token = "0x4001DEE")]
	Room8 = 80,
	[Token(Token = "0x4001DEF")]
	Room9 = 90,
	[Token(Token = "0x4001DF0")]
	Room10 = 100,
	[Token(Token = "0x4001DF1")]
	Room11 = 110,
	[Token(Token = "0x4001DF2")]
	Room12 = 120,
	[Token(Token = "0x4001DF3")]
	Room13 = 130,
	[Token(Token = "0x4001DF4")]
	Room14 = 140,
	[Token(Token = "0x4001DF5")]
	Room15 = 150,
	[Token(Token = "0x4001DF6")]
	Room16 = 160,
	[Token(Token = "0x4001DF7")]
	Room17 = 170,
	[Token(Token = "0x4001DF8")]
	Room18 = 180
}
[Token(Token = "0x200048E")]
public class LiveCameraConfigData
{
	[Token(Token = "0x4001DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int camId;

	[Token(Token = "0x4001DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int step;

	[Token(Token = "0x4001DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int model;

	[Token(Token = "0x4001DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int site;

	[Token(Token = "0x4001DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int siteType;

	[Token(Token = "0x4001DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x4001E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int swithTime;

	[Token(Token = "0x4001E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minTime;

	[Token(Token = "0x4001E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string aside;

	[Token(Token = "0x6001BDB")]
	[Address(RVA = "0x24CCAA0", Offset = "0x24CCAA0", VA = "0x24CCAA0")]
	public LiveCameraConfigData()
	{
	}
}
[Token(Token = "0x200048F")]
public interface ILiveCameraDataCell
{
	[Token(Token = "0x6001BDC")]
	int ID();

	[Token(Token = "0x6001BDD")]
	void SetPos(Vector3 pos);

	[Token(Token = "0x6001BDE")]
	void SetRot(Quaternion rot);

	[Token(Token = "0x6001BDF")]
	Vector3 Pos();

	[Token(Token = "0x6001BE0")]
	Quaternion Rot();
}
[Token(Token = "0x2000490")]
public class LiveCameraCustomDataCell : ILiveCameraDataCell
{
	[Token(Token = "0x4001E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int site;

	[Token(Token = "0x4001E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int id;

	[Token(Token = "0x4001E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 mPos;

	[Token(Token = "0x4001E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion mRot;

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x24CCAA8", Offset = "0x24CCAA8", VA = "0x24CCAA8", Slot = "4")]
	public int ID()
	{
		return default(int);
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0x24CCAB0", Offset = "0x24CCAB0", VA = "0x24CCAB0")]
	public void Init(int site, int id)
	{
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0x24CCDF0", Offset = "0x24CCDF0", VA = "0x24CCDF0")]
	public void UnInit(int site)
	{
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x24CD0EC", Offset = "0x24CD0EC", VA = "0x24CD0EC", Slot = "5")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x24CD0F8", Offset = "0x24CD0F8", VA = "0x24CD0F8", Slot = "6")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x24CD104", Offset = "0x24CD104", VA = "0x24CD104", Slot = "7")]
	public Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0x24CD110", Offset = "0x24CD110", VA = "0x24CD110", Slot = "8")]
	public Quaternion Rot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x24CD11C", Offset = "0x24CD11C", VA = "0x24CD11C")]
	public LiveCameraCustomDataCell()
	{
	}
}
[Token(Token = "0x2000491")]
public class LiveCameraDataCell : MonoBehaviour, ILiveCameraDataCell
{
	[Token(Token = "0x4001E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_LiveCamera_Cell_Type CellType;

	[Token(Token = "0x4001E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject mObj;

	[Token(Token = "0x4001E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int id;

	[Token(Token = "0x17000296")]
	public GameObject SelfPoint
	{
		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x24CD168", Offset = "0x24CD168", VA = "0x24CD168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x24CD170", Offset = "0x24CD170", VA = "0x24CD170", Slot = "4")]
	public int ID()
	{
		return default(int);
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x24CD178", Offset = "0x24CD178", VA = "0x24CD178", Slot = "5")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x24CD17C", Offset = "0x24CD17C", VA = "0x24CD17C", Slot = "6")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x6001BED")]
	[Address(RVA = "0x24CD180", Offset = "0x24CD180", VA = "0x24CD180", Slot = "7")]
	public Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0x24CD220", Offset = "0x24CD220", VA = "0x24CD220", Slot = "8")]
	public Quaternion Rot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0x24CD2C0", Offset = "0x24CD2C0", VA = "0x24CD2C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0x24CD2F8", Offset = "0x24CD2F8", VA = "0x24CD2F8")]
	private void PareseID()
	{
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0x24CD488", Offset = "0x24CD488", VA = "0x24CD488")]
	public void Init(int site)
	{
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0x24CD618", Offset = "0x24CD618", VA = "0x24CD618")]
	public void UnInit(int site)
	{
	}

	[Token(Token = "0x6001BF3")]
	[Address(RVA = "0x24CD774", Offset = "0x24CD774", VA = "0x24CD774")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0x24CDA8C", Offset = "0x24CDA8C", VA = "0x24CDA8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0x24CDDA0", Offset = "0x24CDDA0", VA = "0x24CDDA0")]
	public LiveCameraDataCell()
	{
	}
}
[Serializable]
[Token(Token = "0x2000492")]
public class LiveCameraGameWinPoint
{
	[Token(Token = "0x4001E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Point;

	[Token(Token = "0x4001E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Time;

	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0x24CE2DC", Offset = "0x24CE2DC", VA = "0x24CE2DC")]
	public LiveCameraGameWinPoint()
	{
	}
}
[Token(Token = "0x2000493")]
public class LiveCameraGameWinDataCell : LiveCameraDataCell
{
	[Token(Token = "0x4001E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LiveCameraGameWinPoint> OtherShotList;

	[Token(Token = "0x6001BF7")]
	[Address(RVA = "0x24CE250", Offset = "0x24CE250", VA = "0x24CE250")]
	public LiveCameraGameWinDataCell()
	{
	}
}
[Token(Token = "0x2000494")]
public class LiveCameraManager : Singleton<LiveCameraManager>
{
	[Token(Token = "0x4001E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64870", Offset = "0xE64870")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4001E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsEnter;

	[Token(Token = "0x4001E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int CurStep;

	[Token(Token = "0x4001E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<LiveCameraConfigData> curStepLCConfigDataList;

	[Token(Token = "0x4001E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, LiveCameraConfigData> curCommonLCConfigDataDic;

	[Token(Token = "0x4001E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Dictionary<int, ILiveCameraDataCell>> AutoExPlayerDataCellDic;

	[Token(Token = "0x4001E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, ILiveCameraDataCell> AutoExFixDataCellDic;

	[Token(Token = "0x4001E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private e_LiveCamera_Model_Type mCurCameraModelStatus;

	[Token(Token = "0x4001E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<e_LiveCamera_Model_Type, LiveCameraModelBase> lcModelDic;

	[Token(Token = "0x4001E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LiveCameraModelBase mCurRunningModel;

	[Token(Token = "0x4001E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isLCPause;

	[Token(Token = "0x4001E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int> ChangeStepAct;

	[Token(Token = "0x4001E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<e_LiveCamera_Model_Type, List<LiveCameraConfigData>> ChangeModelAct;

	[Token(Token = "0x4001E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData, ILiveCameraDataCell> ChangeShotAct;

	[Token(Token = "0x4001E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData, ILiveCameraDataCell> ChangeShotInAct;

	[Token(Token = "0x4001E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData> ChangeShotOutAct;

	[Token(Token = "0x4001E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<int, int, ILiveCameraDataCell> LiveDataCellChange;

	[Token(Token = "0x4001E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int curSpecialSite;

	[Token(Token = "0x4001E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool NoCamSmooth;

	[Token(Token = "0x17000297")]
	public Camera camera
	{
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x24CF218", Offset = "0x24CF218", VA = "0x24CF218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E4F4", Offset = "0xE6E4F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x24CF220", Offset = "0x24CF220", VA = "0x24CF220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E504", Offset = "0xE6E504")]
		private set
		{
		}
	}

	[Token(Token = "0x17000298")]
	public int CurSpecialSite
	{
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x24D1640", Offset = "0x24D1640", VA = "0x24D1640")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x24D1648", Offset = "0x24D1648", VA = "0x24D1648")]
		set
		{
		}
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0x24CF228", Offset = "0x24CF228", VA = "0x24CF228")]
	public void ChangeStep(e_LiveCamera_Step_Type step)
	{
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0x24CF408", Offset = "0x24CF408", VA = "0x24CF408")]
	public void TriggerEvent(int site, e_LiveCamera_Event_Type eType)
	{
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0x24CF820", Offset = "0x24CF820", VA = "0x24CF820")]
	public void ManualSellect(int site, bool isChaneModel = false)
	{
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0x24CFB38", Offset = "0x24CFB38", VA = "0x24CFB38")]
	public void EnableManualModel(bool isEnable)
	{
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0x24CFD00", Offset = "0x24CFD00", VA = "0x24CFD00")]
	public void ChangeHighEvent(e_LiveCamera_HighEvent_Type eventType)
	{
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0x24D002C", Offset = "0x24D002C", VA = "0x24D002C")]
	public void SetEnable(bool status, bool isSetCam = false)
	{
	}

	[Token(Token = "0x6001C00")]
	[Address(RVA = "0x24CF2E4", Offset = "0x24CF2E4", VA = "0x24CF2E4")]
	private void DoChangeStep(int step)
	{
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0x24D0230", Offset = "0x24D0230", VA = "0x24D0230")]
	private bool SetAllModel(int step)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0x24D0778", Offset = "0x24D0778", VA = "0x24D0778")]
	private void UnLoadAllModel()
	{
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0x24D0520", Offset = "0x24D0520", VA = "0x24D0520")]
	private bool ChangeModelStatus(e_LiveCamera_Model_Type model, int site = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0x24CF4CC", Offset = "0x24CF4CC", VA = "0x24CF4CC")]
	private void DoTriggerEvent(int site, e_LiveCamera_Event_Type eType)
	{
	}

	[Token(Token = "0x6001C05")]
	[Address(RVA = "0x24CF8E4", Offset = "0x24CF8E4", VA = "0x24CF8E4")]
	private void DoManualSellect(int site, bool isChaneModel = false)
	{
	}

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0x24D092C", Offset = "0x24D092C", VA = "0x24D092C")]
	private bool RejectManual()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0x24D0A78", Offset = "0x24D0A78", VA = "0x24D0A78")]
	private bool RejectManual(int site)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0x24D0A7C", Offset = "0x24D0A7C", VA = "0x24D0A7C")]
	private bool RejectAuto()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C09")]
	[Address(RVA = "0x24CFBF4", Offset = "0x24CFBF4", VA = "0x24CFBF4")]
	private bool DoEnableManualModel(bool isEnable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0A")]
	[Address(RVA = "0x24CFDBC", Offset = "0x24CFDBC", VA = "0x24CFDBC")]
	private void DoTriggerHighEvent(e_LiveCamera_HighEvent_Type eventType)
	{
	}

	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0x24D08E4", Offset = "0x24D08E4", VA = "0x24D08E4")]
	private bool RejectEvent(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x24D0BCC", Offset = "0x24D0BCC", VA = "0x24D0BCC")]
	public bool CanCover(LiveCameraConfigData tgConfig, LiveCameraModelBase model)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0x24D0D30", Offset = "0x24D0D30", VA = "0x24D0D30")]
	public bool CanCover(LiveCameraConfigData tgConfig, LiveCameraShotBase shot)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0x24D0ED0", Offset = "0x24D0ED0", VA = "0x24D0ED0")]
	public bool IsAIPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0x24D0F88", Offset = "0x24D0F88", VA = "0x24D0F88")]
	private void CleanOutPutEvent()
	{
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0x24CCB4C", Offset = "0x24CCB4C", VA = "0x24CCB4C")]
	public void RegisterPlayerCell(int site, ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0x24CD8C8", Offset = "0x24CD8C8", VA = "0x24CD8C8")]
	public void RegisterFixCell(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x24CE044", Offset = "0x24CE044", VA = "0x24CE044")]
	public void UnRegisterBySite(int site)
	{
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0x24CDBE0", Offset = "0x24CDBE0", VA = "0x24CDBE0")]
	public void UnRegisterByCell(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0x24CCE84", Offset = "0x24CCE84", VA = "0x24CCE84")]
	public void UnRegisterBySiteAndCell(int site, ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0x24D0FBC", Offset = "0x24D0FBC", VA = "0x24D0FBC")]
	public ILiveCameraDataCell GetLiveCameraPlayerDataCell(int site, int camId)
	{
		return null;
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0x24D1120", Offset = "0x24D1120", VA = "0x24D1120")]
	public ILiveCameraDataCell GetLiveCameraFixDataCell(int camId)
	{
		return null;
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0x24D1220", Offset = "0x24D1220", VA = "0x24D1220")]
	public WUnit GetPlayerWUnitBySite(int site)
	{
		return null;
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0x24D1344", Offset = "0x24D1344", VA = "0x24D1344")]
	public void SetShotDataCell(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0x24CE538", Offset = "0x24CE538", VA = "0x24CE538")]
	public bool IsPlayerSite(int site)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0x24D13D0", Offset = "0x24D13D0", VA = "0x24D13D0")]
	public void SetShotDataCell(LiveCameraShotBase shot, int site)
	{
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0x24D1428", Offset = "0x24D1428", VA = "0x24D1428")]
	public ILiveCameraDataCell LiveShotDataCell(LiveCameraConfigData config, out bool isAI)
	{
		return null;
	}

	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0x24D145C", Offset = "0x24D145C", VA = "0x24D145C")]
	public List<LiveCameraConfigData> GetModelConfigList(e_LiveCamera_Model_Type model)
	{
		return null;
	}

	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0x24D15A4", Offset = "0x24D15A4", VA = "0x24D15A4")]
	public e_LiveCamera_Model_Type GetCurModel()
	{
		return default(e_LiveCamera_Model_Type);
	}

	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0x24D15AC", Offset = "0x24D15AC", VA = "0x24D15AC")]
	public int GetCurRunningLiveShotSit()
	{
		return default(int);
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0x24D1650", Offset = "0x24D1650", VA = "0x24D1650")]
	public void OnEnter(Camera camera)
	{
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0x24D1778", Offset = "0x24D1778", VA = "0x24D1778")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001C23")]
	[Address(RVA = "0x24D1868", Offset = "0x24D1868", VA = "0x24D1868")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0x24D18AC", Offset = "0x24D18AC", VA = "0x24D18AC")]
	public LiveCameraManager()
	{
	}
}
[Token(Token = "0x2000495")]
public class LCAutoSwithModel : LiveCameraModelBase
{
	[Token(Token = "0x4001E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> curAutoSwithConfigDataList;

	[Token(Token = "0x4001E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LiveCameraShotBase> SwithShotList;

	[Token(Token = "0x4001E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curIndex;

	[Token(Token = "0x4001E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int preTargetIndex;

	[Token(Token = "0x6001C25")]
	[Address(RVA = "0x20B5E54", Offset = "0x20B5E54", VA = "0x20B5E54", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001C26")]
	[Address(RVA = "0x20B5E80", Offset = "0x20B5E80", VA = "0x20B5E80", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001C27")]
	[Address(RVA = "0x20B643C", Offset = "0x20B643C", VA = "0x20B643C", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C28")]
	[Address(RVA = "0x20B6550", Offset = "0x20B6550", VA = "0x20B6550", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001C29")]
	[Address(RVA = "0x20B6594", Offset = "0x20B6594", VA = "0x20B6594", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001C2A")]
	[Address(RVA = "0x20B65F4", Offset = "0x20B65F4", VA = "0x20B65F4", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0x20B66A4", Offset = "0x20B66A4", VA = "0x20B66A4", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0x20B66AC", Offset = "0x20B66AC", VA = "0x20B66AC", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0x20B66C4", Offset = "0x20B66C4", VA = "0x20B66C4", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x20B66DC", Offset = "0x20B66DC", VA = "0x20B66DC", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x20B66F4", Offset = "0x20B66F4", VA = "0x20B66F4", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x20B6770", Offset = "0x20B6770", VA = "0x20B6770")]
	public void PreSetSelectCam(int tSite)
	{
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x20B6A08", Offset = "0x20B6A08", VA = "0x20B6A08")]
	private int GetPreSelectCam()
	{
		return default(int);
	}

	[Token(Token = "0x6001C32")]
	[Address(RVA = "0x20B6A10", Offset = "0x20B6A10", VA = "0x20B6A10")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x6001C33")]
	[Address(RVA = "0x20B6454", Offset = "0x20B6454", VA = "0x20B6454")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001C34")]
	[Address(RVA = "0x20B5F84", Offset = "0x20B5F84", VA = "0x20B5F84")]
	private bool ChangeNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C35")]
	[Address(RVA = "0x20B5EDC", Offset = "0x20B5EDC", VA = "0x20B5EDC")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x6001C36")]
	[Address(RVA = "0x20B6B3C", Offset = "0x20B6B3C", VA = "0x20B6B3C")]
	public LCAutoSwithModel()
	{
	}
}
[Token(Token = "0x2000496")]
public class LCEventModel : LiveCameraModelBase
{
	[Token(Token = "0x6001C37")]
	[Address(RVA = "0x20B6C0C", Offset = "0x20B6C0C", VA = "0x20B6C0C", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001C38")]
	[Address(RVA = "0x20B6C14", Offset = "0x20B6C14", VA = "0x20B6C14", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001C39")]
	[Address(RVA = "0x20B6C1C", Offset = "0x20B6C1C", VA = "0x20B6C1C", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0x20B6C88", Offset = "0x20B6C88", VA = "0x20B6C88", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C3B")]
	[Address(RVA = "0x20B6CD0", Offset = "0x20B6CD0", VA = "0x20B6CD0", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0x20B6CF8", Offset = "0x20B6CF8", VA = "0x20B6CF8", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0x20B6D10", Offset = "0x20B6D10", VA = "0x20B6D10", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0x20B6D28", Offset = "0x20B6D28", VA = "0x20B6D28", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C3F")]
	[Address(RVA = "0x20B6D40", Offset = "0x20B6D40", VA = "0x20B6D40", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x20B6D5C", Offset = "0x20B6D5C", VA = "0x20B6D5C", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0x20B6F10", Offset = "0x20B6F10", VA = "0x20B6F10")]
	public void ChangeEvent(int site, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0x20B7108", Offset = "0x20B7108", VA = "0x20B7108")]
	private void SetEvent(int site, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0x20B6CB4", Offset = "0x20B6CB4", VA = "0x20B6CB4")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0x20B70E4", Offset = "0x20B70E4", VA = "0x20B70E4")]
	private bool CanCover(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0x20B6C44", Offset = "0x20B6C44", VA = "0x20B6C44")]
	private void ResetAllData()
	{
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x20B71C0", Offset = "0x20B71C0", VA = "0x20B71C0", Slot = "6")]
	public override void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x20B7228", Offset = "0x20B7228", VA = "0x20B7228")]
	public LCEventModel()
	{
	}
}
[Token(Token = "0x2000497")]
public class LCHighEventModel : LiveCameraModelBase
{
	[Token(Token = "0x6001C48")]
	[Address(RVA = "0x20B7230", Offset = "0x20B7230", VA = "0x20B7230", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001C49")]
	[Address(RVA = "0x20B7238", Offset = "0x20B7238", VA = "0x20B7238", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0x20B7240", Offset = "0x20B7240", VA = "0x20B7240", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0x20B72AC", Offset = "0x20B72AC", VA = "0x20B72AC", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x20B72F4", Offset = "0x20B72F4", VA = "0x20B72F4", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0x20B731C", Offset = "0x20B731C", VA = "0x20B731C", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0x20B7334", Offset = "0x20B7334", VA = "0x20B7334", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0x20B734C", Offset = "0x20B734C", VA = "0x20B734C", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C50")]
	[Address(RVA = "0x20B7364", Offset = "0x20B7364", VA = "0x20B7364", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C51")]
	[Address(RVA = "0x20B7380", Offset = "0x20B7380", VA = "0x20B7380", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001C52")]
	[Address(RVA = "0x20B7534", Offset = "0x20B7534", VA = "0x20B7534")]
	public void ChangeEvent(e_LiveCamera_HighEvent_Type eventType, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x6001C53")]
	[Address(RVA = "0x20B771C", Offset = "0x20B771C", VA = "0x20B771C")]
	private void SetEvent(e_LiveCamera_HighEvent_Type eventType, LiveCameraConfigData config, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001C54")]
	[Address(RVA = "0x20B72D8", Offset = "0x20B72D8", VA = "0x20B72D8")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001C55")]
	[Address(RVA = "0x20B7700", Offset = "0x20B7700", VA = "0x20B7700")]
	private bool CanCover(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C56")]
	[Address(RVA = "0x20B7268", Offset = "0x20B7268", VA = "0x20B7268")]
	private void ResetAllData()
	{
	}

	[Token(Token = "0x6001C57")]
	[Address(RVA = "0x20B7880", Offset = "0x20B7880", VA = "0x20B7880", Slot = "6")]
	public override void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001C58")]
	[Address(RVA = "0x20B78E8", Offset = "0x20B78E8", VA = "0x20B78E8")]
	public LCHighEventModel()
	{
	}
}
[Token(Token = "0x2000498")]
public class LCManualSwithModel : LiveCameraModelBase
{
	[Token(Token = "0x4001E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> sellectShotConfigDic;

	[Token(Token = "0x4001E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, LiveCameraShotBase> sellectShotDic;

	[Token(Token = "0x4001E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curSellectSite;

	[Token(Token = "0x17000299")]
	public int CurSellectSite
	{
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x20B78F0", Offset = "0x20B78F0", VA = "0x20B78F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x20B78F8", Offset = "0x20B78F8", VA = "0x20B78F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700029A")]
	public List<LiveCameraConfigData> SellectShotConfigDic
	{
		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x20B7900", Offset = "0x20B7900", VA = "0x20B7900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x20B7908", Offset = "0x20B7908", VA = "0x20B7908", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0x20B7910", Offset = "0x20B7910", VA = "0x20B7910", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0x20B7FEC", Offset = "0x20B7FEC", VA = "0x20B7FEC", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0x20B8034", Offset = "0x20B8034", VA = "0x20B8034", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x20B8080", Offset = "0x20B8080", VA = "0x20B8080", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0x20B80C4", Offset = "0x20B80C4", VA = "0x20B80C4", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001C62")]
	[Address(RVA = "0x20B8174", Offset = "0x20B8174", VA = "0x20B8174", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x20B817C", Offset = "0x20B817C", VA = "0x20B817C", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0x20B81F8", Offset = "0x20B81F8", VA = "0x20B81F8", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001C65")]
	[Address(RVA = "0x20B7AA8", Offset = "0x20B7AA8", VA = "0x20B7AA8")]
	private bool IsSiteOk(int sellectSite)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x20B7BBC", Offset = "0x20B7BBC", VA = "0x20B7BBC")]
	private int GetFirstOkSite()
	{
		return default(int);
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x20B83E4", Offset = "0x20B83E4", VA = "0x20B83E4")]
	private ILiveCameraDataCell GetLCDataCell(LiveCameraShotBase shot, int site, int camId)
	{
		return null;
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0x20B8464", Offset = "0x20B8464", VA = "0x20B8464")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0x20B8018", Offset = "0x20B8018", VA = "0x20B8018")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0x20B7CBC", Offset = "0x20B7CBC", VA = "0x20B7CBC")]
	private void Change(int site)
	{
	}

	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0x20B7968", Offset = "0x20B7968", VA = "0x20B7968")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0x20B8678", Offset = "0x20B8678", VA = "0x20B8678")]
	public LCManualSwithModel()
	{
	}
}
[Token(Token = "0x2000499")]
public class LCRandFixedModel : LiveCameraModelBase
{
	[Token(Token = "0x4001E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> curAutoSwithConfigDataList;

	[Token(Token = "0x4001E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LiveCameraShotBase> SwithShotList;

	[Token(Token = "0x4001E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curIndex;

	[Token(Token = "0x4001E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> successIndexList;

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0x20B8750", Offset = "0x20B8750", VA = "0x20B8750", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x20B877C", Offset = "0x20B877C", VA = "0x20B877C", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x20B8CA4", Offset = "0x20B8CA4", VA = "0x20B8CA4", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0x20B8DB8", Offset = "0x20B8DB8", VA = "0x20B8DB8", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0x20B8DFC", Offset = "0x20B8DFC", VA = "0x20B8DFC", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x20B8E5C", Offset = "0x20B8E5C", VA = "0x20B8E5C", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x20B8F0C", Offset = "0x20B8F0C", VA = "0x20B8F0C", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x20B8F14", Offset = "0x20B8F14", VA = "0x20B8F14", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x20B8F2C", Offset = "0x20B8F2C", VA = "0x20B8F2C", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x20B8F44", Offset = "0x20B8F44", VA = "0x20B8F44", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x20B8F5C", Offset = "0x20B8F5C", VA = "0x20B8F5C", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0x20B8FD8", Offset = "0x20B8FD8", VA = "0x20B8FD8")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0x20B8CBC", Offset = "0x20B8CBC", VA = "0x20B8CBC")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x20B8880", Offset = "0x20B8880", VA = "0x20B8880")]
	private bool DoRandFixed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x20B87D8", Offset = "0x20B87D8", VA = "0x20B87D8")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x20B9104", Offset = "0x20B9104", VA = "0x20B9104")]
	public LCRandFixedModel()
	{
	}
}
[Token(Token = "0x200049A")]
public class LiveCameraModelBase
{
	[Token(Token = "0x4001E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsInit;

	[Token(Token = "0x4001E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool IsRunning;

	[Token(Token = "0x4001E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Camera mAffectCam;

	[Token(Token = "0x4001E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected LiveCameraShotBase CurLCAction;

	[Token(Token = "0x4001E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LiveCameraManager LCMgr;

	[Token(Token = "0x1700029B")]
	public LiveCameraShotBase CurRunLCAction
	{
		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x24D1EE0", Offset = "0x24D1EE0", VA = "0x24D1EE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x24D1EE8", Offset = "0x24D1EE8", VA = "0x24D1EE8", Slot = "4")]
	public virtual void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x24D1F24", Offset = "0x24D1F24", VA = "0x24D1F24", Slot = "5")]
	public virtual List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x24D1F2C", Offset = "0x24D1F2C", VA = "0x24D1F2C", Slot = "6")]
	public virtual void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x24D1F94", Offset = "0x24D1F94", VA = "0x24D1F94", Slot = "7")]
	public virtual int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x24D1F9C", Offset = "0x24D1F9C", VA = "0x24D1F9C", Slot = "8")]
	public virtual bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x24D1FA4", Offset = "0x24D1FA4", VA = "0x24D1FA4", Slot = "9")]
	public virtual bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x24D1FAC", Offset = "0x24D1FAC", VA = "0x24D1FAC", Slot = "10")]
	public virtual bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x24D1FB4", Offset = "0x24D1FB4", VA = "0x24D1FB4", Slot = "11")]
	public virtual void SetStep(int step)
	{
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x24D1FB8", Offset = "0x24D1FB8", VA = "0x24D1FB8", Slot = "12")]
	public virtual void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0x24D1FBC", Offset = "0x24D1FBC", VA = "0x24D1FBC", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0x24D1FC8", Offset = "0x24D1FC8", VA = "0x24D1FC8", Slot = "14")]
	public virtual void Update(float delta)
	{
	}

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x24D1FCC", Offset = "0x24D1FCC", VA = "0x24D1FCC", Slot = "15")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0x24D1FD4", Offset = "0x24D1FD4", VA = "0x24D1FD4", Slot = "16")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0x24D1FE0", Offset = "0x24D1FE0", VA = "0x24D1FE0", Slot = "17")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0x24D1FE8", Offset = "0x24D1FE8", VA = "0x24D1FE8")]
	public LiveCameraModelBase()
	{
	}
}
[Token(Token = "0x200049B")]
public class LiveCameraDataCollector : MonoBehaviour
{
	[Token(Token = "0x200049C")]
	[SerializeField]
	public enum e_PlayerDataCell_Type
	{
		[Token(Token = "0x4001E35")]
		None,
		[Token(Token = "0x4001E36")]
		FirstPlayer,
		[Token(Token = "0x4001E37")]
		ThirdPlayer
	}

	[Token(Token = "0x4001E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_PlayerDataCell_Type DataCell_Type;

	[Token(Token = "0x4001E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int FirstCamId;

	[Token(Token = "0x4001E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LiveCameraDataCell> CellList;

	[Token(Token = "0x4001E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int curSite;

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0x24CDDB0", Offset = "0x24CDDB0", VA = "0x24CDDB0")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0x24CDF8C", Offset = "0x24CDF8C", VA = "0x24CDF8C")]
	public void UnInit(WUnit owner)
	{
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x24CE1B8", Offset = "0x24CE1B8", VA = "0x24CE1B8")]
	public LiveCameraDataCollector()
	{
	}
}
[Token(Token = "0x200049D")]
public class LiveCameraGameWinShot : LiveCameraShotBase
{
	[Token(Token = "0x4001E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float switchSpeed;

	[Token(Token = "0x4001E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LiveCameraGameWinDataCell realDataCell;

	[Token(Token = "0x4001E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float curUseTime;

	[Token(Token = "0x4001E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float curRunningTime;

	[Token(Token = "0x4001E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int curIndex;

	[Token(Token = "0x4001E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject pointObj;

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x24CE2E4", Offset = "0x24CE2E4", VA = "0x24CE2E4", Slot = "12")]
	public override void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x24CE498", Offset = "0x24CE498", VA = "0x24CE498", Slot = "9")]
	public override bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x24CE548", Offset = "0x24CE548", VA = "0x24CE548", Slot = "11")]
	public override void SetDataCell(ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0x24CE5F4", Offset = "0x24CE5F4", VA = "0x24CE5F4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001C94")]
	[Address(RVA = "0x24CE898", Offset = "0x24CE898", VA = "0x24CE898", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0x24CE7E0", Offset = "0x24CE7E0", VA = "0x24CE7E0")]
	private void StartCameraPoint()
	{
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0x24CEED0", Offset = "0x24CEED0", VA = "0x24CEED0")]
	private LiveCameraGameWinPoint GetCurPointData(int index)
	{
		return null;
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0x24CE9B8", Offset = "0x24CE9B8", VA = "0x24CE9B8")]
	private void NextCameraPoint()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0x24CEBF8", Offset = "0x24CEBF8", VA = "0x24CEBF8")]
	private void DoUpdateCamera()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0x24CEFC8", Offset = "0x24CEFC8", VA = "0x24CEFC8", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0x24CF08C", Offset = "0x24CF08C", VA = "0x24CF08C", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001C9B")]
	[Address(RVA = "0x24CF168", Offset = "0x24CF168", VA = "0x24CF168", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0x24CF1E8", Offset = "0x24CF1E8", VA = "0x24CF1E8")]
	public LiveCameraGameWinShot()
	{
	}
}
[Token(Token = "0x200049E")]
public class LiveCameraManualShot : LiveCameraNormalShot
{
	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0x24D1A1C", Offset = "0x24D1A1C", VA = "0x24D1A1C", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0x24D1E5C", Offset = "0x24D1E5C", VA = "0x24D1E5C")]
	public LiveCameraManualShot()
	{
	}
}
[Token(Token = "0x200049F")]
public class LiveCameraNormalShot : LiveCameraShotBase
{
	[Token(Token = "0x4001E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float switchSpeed;

	[Token(Token = "0x4001E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 prePos;

	[Token(Token = "0x4001E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 curPos;

	[Token(Token = "0x4001E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float posQuickDistance;

	[Token(Token = "0x4001E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion preRot;

	[Token(Token = "0x4001E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion curRot;

	[Token(Token = "0x6001C9F")]
	[Address(RVA = "0x24D1FF0", Offset = "0x24D1FF0", VA = "0x24D1FF0", Slot = "12")]
	public override void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0x24D2054", Offset = "0x24D2054", VA = "0x24D2054", Slot = "9")]
	public override bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0x24D20F4", Offset = "0x24D20F4", VA = "0x24D20F4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0x24D2200", Offset = "0x24D2200", VA = "0x24D2200", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001CA3")]
	[Address(RVA = "0x24D1AB8", Offset = "0x24D1AB8", VA = "0x24D1AB8")]
	protected void DoUpdateCamera(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001CA4")]
	[Address(RVA = "0x24D22E0", Offset = "0x24D22E0", VA = "0x24D22E0", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0x24D22E4", Offset = "0x24D22E4", VA = "0x24D22E4", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0x24D22E8", Offset = "0x24D22E8", VA = "0x24D22E8", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0x24D1E60", Offset = "0x24D1E60", VA = "0x24D1E60")]
	public LiveCameraNormalShot()
	{
	}
}
[Token(Token = "0x20004A0")]
public class LiveCameraShotBase
{
	[Token(Token = "0x4001E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LiveCameraConfigData ConfigData;

	[Token(Token = "0x4001E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ILiveCameraDataCell DataCell;

	[Token(Token = "0x4001E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera AffectCam;

	[Token(Token = "0x4001E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RunningTime;

	[Token(Token = "0x4001E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float MinTime;

	[Token(Token = "0x4001E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float SwithTime;

	[Token(Token = "0x4001E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int Site;

	[Token(Token = "0x4001E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected e_LiveCamera_Model_Type LCCamModel;

	[Token(Token = "0x4001E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int RealSite;

	[Token(Token = "0x4001E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int mPriority;

	[Token(Token = "0x4001E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool IsInit;

	[Token(Token = "0x4001E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsRunning;

	[Token(Token = "0x4001E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool mIsFinish;

	[Token(Token = "0x1700029C")]
	public int Priority
	{
		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x24D2328", Offset = "0x24D2328", VA = "0x24D2328")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700029D")]
	public virtual bool IsFinish
	{
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x24D2330", Offset = "0x24D2330", VA = "0x24D2330", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x24D2338", Offset = "0x24D2338", VA = "0x24D2338", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700029E")]
	public virtual int SRealSite
	{
		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x24D2344", Offset = "0x24D2344", VA = "0x24D2344", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x24D234C", Offset = "0x24D234C", VA = "0x24D234C")]
	public void SetRealSite(int site)
	{
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0x24D2354", Offset = "0x24D2354", VA = "0x24D2354")]
	public void HalfCurTime()
	{
	}

	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0x24D2368", Offset = "0x24D2368", VA = "0x24D2368")]
	public void TotalCurTime()
	{
	}

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0x24D2370", Offset = "0x24D2370", VA = "0x24D2370", Slot = "7")]
	public virtual bool IsMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0x24D2380", Offset = "0x24D2380", VA = "0x24D2380", Slot = "8")]
	public virtual bool IsSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0x24D2394", Offset = "0x24D2394", VA = "0x24D2394", Slot = "9")]
	public virtual bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x24D239C", Offset = "0x24D239C", VA = "0x24D239C", Slot = "10")]
	public virtual bool IsDataCell()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0x24D23AC", Offset = "0x24D23AC", VA = "0x24D23AC", Slot = "11")]
	public virtual void SetDataCell(ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0x24CE348", Offset = "0x24CE348", VA = "0x24CE348", Slot = "12")]
	public virtual void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0x24CE708", Offset = "0x24CE708", VA = "0x24CE708", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x24D23B4", Offset = "0x24D23B4", VA = "0x24D23B4", Slot = "14")]
	public virtual void Update(float delta)
	{
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0x24CEFCC", Offset = "0x24CEFCC", VA = "0x24CEFCC", Slot = "15")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x6001CB8")]
	[Address(RVA = "0x24CF090", Offset = "0x24CF090", VA = "0x24CF090", Slot = "16")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x6001CB9")]
	[Address(RVA = "0x24CF1A8", Offset = "0x24CF1A8", VA = "0x24CF1A8", Slot = "17")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x6001CBA")]
	[Address(RVA = "0x24CF204", Offset = "0x24CF204", VA = "0x24CF204")]
	public LiveCameraShotBase()
	{
	}
}
[Token(Token = "0x20004A1")]
public class LiveShowActiveCell : MonoBehaviour
{
	[Token(Token = "0x4001E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image icon;

	[Token(Token = "0x4001E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text kill;

	[Token(Token = "0x4001E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text headshot;

	[Token(Token = "0x4001E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text die;

	[Token(Token = "0x4001E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text killTittle;

	[Token(Token = "0x4001E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text headshotTittle;

	[Token(Token = "0x4001E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text dieTittle;

	[Token(Token = "0x4001E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text cname;

	[Token(Token = "0x4001E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Sprite> DefaultSp;

	[Token(Token = "0x4001E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> WeaponGroupList;

	[Token(Token = "0x6001CBB")]
	[Address(RVA = "0x24D43BC", Offset = "0x24D43BC", VA = "0x24D43BC")]
	public void Show(bool isShow)
	{
	}

	[Token(Token = "0x6001CBC")]
	[Address(RVA = "0x24D452C", Offset = "0x24D452C", VA = "0x24D452C")]
	public void SetDataCell(WUnit unit, StatisticalManager.StatisticalResultData scoreLimitCell)
	{
	}

	[Token(Token = "0x6001CBD")]
	[Address(RVA = "0x24D48B0", Offset = "0x24D48B0", VA = "0x24D48B0")]
	private void SetWeaponGroup(e_weapon_group group)
	{
	}

	[Token(Token = "0x6001CBE")]
	[Address(RVA = "0x24D4530", Offset = "0x24D4530", VA = "0x24D4530")]
	public void UpdateView(WUnit unit, StatisticalManager.StatisticalResultData cellData)
	{
	}

	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0x24D4A34", Offset = "0x24D4A34", VA = "0x24D4A34")]
	public LiveShowActiveCell()
	{
	}
}
[Token(Token = "0x20004A2")]
public class LiveShowGridCell : MonoBehaviour
{
	[Token(Token = "0x4001E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image bg;

	[Token(Token = "0x4001E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4001E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text cname;

	[Token(Token = "0x4001E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text hp;

	[Token(Token = "0x4001E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Ammo;

	[Token(Token = "0x4001E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Sprite> DefaultSp;

	[Token(Token = "0x4001E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite NormalSp;

	[Token(Token = "0x4001E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WUnit unit;

	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0x24D4AB8", Offset = "0x24D4AB8", VA = "0x24D4AB8")]
	public void Show(bool isShow)
	{
	}

	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x24D4B1C", Offset = "0x24D4B1C", VA = "0x24D4B1C")]
	public void SetDataCell(WUnit unit)
	{
	}

	[Token(Token = "0x6001CC2")]
	[Address(RVA = "0x24D4F04", Offset = "0x24D4F04", VA = "0x24D4F04")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x24D4B58", Offset = "0x24D4B58", VA = "0x24D4B58")]
	public void UpdateView(WUnit unit)
	{
	}

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x24D4E0C", Offset = "0x24D4E0C", VA = "0x24D4E0C")]
	public void FreshData(WUnit unit)
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x24D4F0C", Offset = "0x24D4F0C", VA = "0x24D4F0C")]
	public LiveShowGridCell()
	{
	}
}
[Token(Token = "0x20004A3")]
public class LiveShowView : BaseUI
{
	[Token(Token = "0x4001E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ActiveCellRoot;

	[Token(Token = "0x4001E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LiveShowActiveCell BlueActiveCell;

	[Token(Token = "0x4001E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LiveShowGridCell> LiveLeftGridList;

	[Token(Token = "0x4001E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text time;

	[Token(Token = "0x4001E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text levelProcess;

	[Token(Token = "0x4001E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private e_LiveCamera_Model_Type modelType;

	[Token(Token = "0x4001E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int curSellectSite;

	[Token(Token = "0x4001E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float freqTime;

	[Token(Token = "0x4001E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float freqRunningTime;

	[Token(Token = "0x4001E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string winRoomStr;

	[Token(Token = "0x4001E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string totalRoomStr;

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x24D4F14", Offset = "0x24D4F14", VA = "0x24D4F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x24D4F18", Offset = "0x24D4F18", VA = "0x24D4F18", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0x24D4F20", Offset = "0x24D4F20", VA = "0x24D4F20", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0x24D50A0", Offset = "0x24D50A0", VA = "0x24D50A0", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0x24D50BC", Offset = "0x24D50BC", VA = "0x24D50BC", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x24D5200", Offset = "0x24D5200", VA = "0x24D5200", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001CCC")]
	[Address(RVA = "0x24D5248", Offset = "0x24D5248", VA = "0x24D5248")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0x24D54AC", Offset = "0x24D54AC", VA = "0x24D54AC")]
	private void FreqUpdateView()
	{
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x24D54B8", Offset = "0x24D54B8", VA = "0x24D54B8")]
	private void OnLiveShowEvent()
	{
	}

	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x24D54BC", Offset = "0x24D54BC", VA = "0x24D54BC")]
	private void SetGroupItems(List<LiveShowGridCell> cellList)
	{
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x24D57F8", Offset = "0x24D57F8", VA = "0x24D57F8")]
	private void SetCurSellectShot()
	{
	}

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0x24D5054", Offset = "0x24D5054", VA = "0x24D5054")]
	public void RefreshViewInfo()
	{
	}

	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0x24D49E8", Offset = "0x24D49E8", VA = "0x24D49E8")]
	public static Color GetNameColorByWeaponGroup(e_weapon_group group)
	{
		return default(Color);
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0x24D5A8C", Offset = "0x24D5A8C", VA = "0x24D5A8C")]
	public LiveShowView()
	{
	}
}
[Token(Token = "0x20004A4")]
public class ManualSellectCell : BaseUI
{
	[Token(Token = "0x4001E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image beSellect_Image;

	[Token(Token = "0x4001E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image sellect_Image_bg;

	[Token(Token = "0x4001E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x4001E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Site_Text;

	[Token(Token = "0x4001E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text IsAi_Text;

	[Token(Token = "0x4001E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSellect;

	[Token(Token = "0x4001E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int site;

	[Token(Token = "0x4001E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canSellect;

	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0x24DDEF8", Offset = "0x24DDEF8", VA = "0x24DDEF8", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0x24DE024", Offset = "0x24DE024", VA = "0x24DE024", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0x24DE02C", Offset = "0x24DE02C", VA = "0x24DE02C")]
	public void SetLiveSitData(int site)
	{
	}

	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0x24DE114", Offset = "0x24DE114", VA = "0x24DE114")]
	public void SetSitSellect(bool isSellect)
	{
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x24DE15C", Offset = "0x24DE15C", VA = "0x24DE15C")]
	public void SetCustonStatus(bool canSellect, bool isAI = false)
	{
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x24DE120", Offset = "0x24DE120", VA = "0x24DE120")]
	private void SetSellectStatus()
	{
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x24DE22C", Offset = "0x24DE22C", VA = "0x24DE22C")]
	public void OnSellectClick()
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x24DE2C8", Offset = "0x24DE2C8", VA = "0x24DE2C8")]
	public void LockUI()
	{
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0x24DE2CC", Offset = "0x24DE2CC", VA = "0x24DE2CC")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0x24DE2D0", Offset = "0x24DE2D0", VA = "0x24DE2D0")]
	public ManualSellectCell()
	{
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x24DE2E8", Offset = "0x24DE2E8", VA = "0x24DE2E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E514", Offset = "0xE6E514")]
	private void <OnInit>b__8_0(BaseEventData data)
	{
	}
}
[Token(Token = "0x20004A5")]
public class ManualSellectView : BaseUI
{
	[Token(Token = "0x4001E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GridLayoutGroup Sellect_Item_Grid;

	[Token(Token = "0x4001E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject SellectItemPrefab;

	[Token(Token = "0x4001E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Tittle_Text;

	[Token(Token = "0x4001E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Auto_Btn_Text;

	[Token(Token = "0x4001E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LiveCameraConfigData> LiveCameraSellectList;

	[Token(Token = "0x4001E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ManualSellectCell> SellectCellList;

	[Token(Token = "0x4001E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image beSellect_Image;

	[Token(Token = "0x4001E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x4001E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private e_LiveCamera_Model_Type modelType;

	[Token(Token = "0x4001E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool doInit;

	[Token(Token = "0x4001E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TestEventSellectView TestView;

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x24DE2EC", Offset = "0x24DE2EC", VA = "0x24DE2EC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x24DE418", Offset = "0x24DE418", VA = "0x24DE418")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x24DE514", Offset = "0x24DE514", VA = "0x24DE514", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x24DE544", Offset = "0x24DE544", VA = "0x24DE544", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x24DE560", Offset = "0x24DE560", VA = "0x24DE560", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x24DE5A8", Offset = "0x24DE5A8", VA = "0x24DE5A8", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x24DE5F0", Offset = "0x24DE5F0", VA = "0x24DE5F0")]
	public void ShowItems(List<LiveCameraConfigData> list)
	{
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x24DE644", Offset = "0x24DE644", VA = "0x24DE644")]
	private void SetItems()
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0x24D6490", Offset = "0x24D6490", VA = "0x24D6490")]
	public void SetSellectItem()
	{
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0x24DEB44", Offset = "0x24DEB44", VA = "0x24DEB44")]
	private void SetItemInfoStatus(LiveCameraConfigData config, ManualSellectCell cell)
	{
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0x24D6934", Offset = "0x24D6934", VA = "0x24D6934")]
	public void FreshAllItemInfoStatus()
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x24DE960", Offset = "0x24DE960", VA = "0x24DE960")]
	private ManualSellectCell AddAndChangeRoleItem(LiveCameraConfigData data)
	{
		return null;
	}

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x24DE8A8", Offset = "0x24DE8A8", VA = "0x24DE8A8")]
	private void RemoveRoleItem(ManualSellectCell cell)
	{
	}

	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0x24DEC40", Offset = "0x24DEC40", VA = "0x24DEC40")]
	public void OnClickExchangeModel()
	{
	}

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x24DECC0", Offset = "0x24DECC0", VA = "0x24DECC0")]
	private void SetExchangeModelBtn()
	{
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0x24D63CC", Offset = "0x24D63CC", VA = "0x24D63CC")]
	public void RefreshViewInfol()
	{
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x24DED6C", Offset = "0x24DED6C", VA = "0x24DED6C")]
	public void ShowTest(string rslt)
	{
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x24DED88", Offset = "0x24DED88", VA = "0x24DED88")]
	public ManualSellectView()
	{
	}

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0x24DEE0C", Offset = "0x24DEE0C", VA = "0x24DEE0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E524", Offset = "0xE6E524")]
	private void <OnInit>b__11_0(BaseEventData data)
	{
	}
}
[Token(Token = "0x20004A6")]
public class TestEventSellectView : MonoBehaviour
{
	[Token(Token = "0x4001E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x4001E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EventTrigger enableBeSellect_Trigger1;

	[Token(Token = "0x4001E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventTrigger enableBeSellect_TriggerAdd;

	[Token(Token = "0x4001E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Player_Text;

	[Token(Token = "0x4001E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playerSite;

	[Token(Token = "0x4001E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventTrigger enableStep_Trigger1;

	[Token(Token = "0x4001E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventTrigger enableRestStep_Trigger1;

	[Token(Token = "0x4001E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EventTrigger enableStep_TriggerAdd;

	[Token(Token = "0x4001E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EventTrigger enableStep_TriggerHighEvent;

	[Token(Token = "0x4001E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Step_Text;

	[Token(Token = "0x4001E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int step;

	[Token(Token = "0x4001E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int heighEvent;

	[Token(Token = "0x4001E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Result_Text;

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0x2AB2398", Offset = "0x2AB2398", VA = "0x2AB2398")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0x2AB28F8", Offset = "0x2AB28F8", VA = "0x2AB28F8")]
	private void OnSellectClick()
	{
	}

	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0x2AB28FC", Offset = "0x2AB28FC", VA = "0x2AB28FC")]
	private void OnSellectClick1()
	{
	}

	[Token(Token = "0x6001CF5")]
	[Address(RVA = "0x2AB2900", Offset = "0x2AB2900", VA = "0x2AB2900")]
	private void OnSellectClickAdd()
	{
	}

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x2AB27F0", Offset = "0x2AB27F0", VA = "0x2AB27F0")]
	private void SetPlayerSiteText()
	{
	}

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x2AB2918", Offset = "0x2AB2918", VA = "0x2AB2918")]
	private void OnStepClick1()
	{
	}

	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x2AB29A0", Offset = "0x2AB29A0", VA = "0x2AB29A0")]
	private void OnStepClickAdd()
	{
	}

	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x2AB29B8", Offset = "0x2AB29B8", VA = "0x2AB29B8")]
	private void OnRestStepClick()
	{
	}

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x2AB2874", Offset = "0x2AB2874", VA = "0x2AB2874")]
	private void SetStepText()
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x2AB29C0", Offset = "0x2AB29C0", VA = "0x2AB29C0")]
	public void SetResultText(string rslt)
	{
	}

	[Token(Token = "0x6001CFC")]
	[Address(RVA = "0x2AB29E4", Offset = "0x2AB29E4", VA = "0x2AB29E4")]
	private void OnHighEventClick()
	{
	}

	[Token(Token = "0x6001CFD")]
	[Address(RVA = "0x2AB2A8C", Offset = "0x2AB2A8C", VA = "0x2AB2A8C")]
	public TestEventSellectView()
	{
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0x2AB2AA8", Offset = "0x2AB2AA8", VA = "0x2AB2AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E534", Offset = "0xE6E534")]
	private void <Start>b__13_0(BaseEventData data)
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0x2AB2AAC", Offset = "0x2AB2AAC", VA = "0x2AB2AAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E544", Offset = "0xE6E544")]
	private void <Start>b__13_1(BaseEventData data)
	{
	}

	[Token(Token = "0x6001D00")]
	[Address(RVA = "0x2AB2AB0", Offset = "0x2AB2AB0", VA = "0x2AB2AB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E554", Offset = "0xE6E554")]
	private void <Start>b__13_2(BaseEventData data)
	{
	}

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0x2AB2AC8", Offset = "0x2AB2AC8", VA = "0x2AB2AC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E564", Offset = "0xE6E564")]
	private void <Start>b__13_3(BaseEventData data)
	{
	}

	[Token(Token = "0x6001D02")]
	[Address(RVA = "0x2AB2ACC", Offset = "0x2AB2ACC", VA = "0x2AB2ACC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E574", Offset = "0xE6E574")]
	private void <Start>b__13_4(BaseEventData data)
	{
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0x2AB2AE4", Offset = "0x2AB2AE4", VA = "0x2AB2AE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E584", Offset = "0xE6E584")]
	private void <Start>b__13_5(BaseEventData data)
	{
	}

	[Token(Token = "0x6001D04")]
	[Address(RVA = "0x2AB2AEC", Offset = "0x2AB2AEC", VA = "0x2AB2AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E594", Offset = "0xE6E594")]
	private void <Start>b__13_6(BaseEventData data)
	{
	}
}
[Token(Token = "0x20004A7")]
public class LiveSystem : Singleton<LiveSystem>
{
	[Token(Token = "0x4001E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4001E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsShowManual;

	[Token(Token = "0x4001E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ManualSellectView mManualView;

	[Token(Token = "0x4001E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LiveShowView mLiveView;

	[Token(Token = "0x4001E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isForbidLiveView;

	[Token(Token = "0x6001D05")]
	[Address(RVA = "0x24D28D8", Offset = "0x24D28D8", VA = "0x24D28D8")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6001D06")]
	[Address(RVA = "0x24D5B68", Offset = "0x24D5B68", VA = "0x24D5B68")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001D07")]
	[Address(RVA = "0x24D5EBC", Offset = "0x24D5EBC", VA = "0x24D5EBC")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6001D08")]
	[Address(RVA = "0x24D625C", Offset = "0x24D625C", VA = "0x24D625C")]
	private void ChangeModel(e_LiveCamera_Model_Type model, List<LiveCameraConfigData> list)
	{
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0x24D660C", Offset = "0x24D660C", VA = "0x24D660C")]
	private void ChangeShot(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0x24D66AC", Offset = "0x24D66AC", VA = "0x24D66AC")]
	private void FreshLiveView()
	{
	}

	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0x24D6750", Offset = "0x24D6750", VA = "0x24D6750")]
	private void DoShotIn(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0x24D67F0", Offset = "0x24D67F0", VA = "0x24D67F0")]
	private void DoShotOut(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data)
	{
	}

	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0x24D6890", Offset = "0x24D6890", VA = "0x24D6890")]
	private void DoLiveShotDataCellFresh(int op, int site, ILiveCameraDataCell dCell)
	{
	}

	[Token(Token = "0x6001D0E")]
	[Address(RVA = "0x24D2D28", Offset = "0x24D2D28", VA = "0x24D2D28")]
	public void SetShowLiveView(bool isShow)
	{
	}

	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0x24D5BEC", Offset = "0x24D5BEC", VA = "0x24D5BEC")]
	private void ForbidLiveView(bool isForbid)
	{
	}

	[Token(Token = "0x6001D10")]
	[Address(RVA = "0x24D5C38", Offset = "0x24D5C38", VA = "0x24D5C38")]
	private void ShowManualSellectView()
	{
	}

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0x24D5D80", Offset = "0x24D5D80", VA = "0x24D5D80")]
	private void HiteManualSellectView()
	{
	}

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0x24D6938", Offset = "0x24D6938", VA = "0x24D6938")]
	public LiveSystem()
	{
	}
}
[Token(Token = "0x20004A8")]
public class CutScenesTools : Singleton<CutScenesTools>
{
	[Token(Token = "0x4001E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Queue<e_CutScenesType> waitCutScenesQueue;

	[Token(Token = "0x4001E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private e_CutScenesType curCutScenesType;

	[Token(Token = "0x4001E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int cutScenesPoint_1_Time;

	[Token(Token = "0x4001E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool cutScenesPoint_1_State;

	[Token(Token = "0x4001E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int cutScenesPoint_2_Time;

	[Token(Token = "0x4001E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool cutScenesPoint_2_State;

	[Token(Token = "0x4001E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isInit;

	[Token(Token = "0x4001E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x1700029F")]
	public bool IsInit
	{
		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x21C57B0", Offset = "0x21C57B0", VA = "0x21C57B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x21C57B8", Offset = "0x21C57B8", VA = "0x21C57B8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0x21C57C4", Offset = "0x21C57C4", VA = "0x21C57C4")]
	public void Init(PlayerCountDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6001D16")]
	[Address(RVA = "0x21C57D8", Offset = "0x21C57D8", VA = "0x21C57D8")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0x21C57F8", Offset = "0x21C57F8", VA = "0x21C57F8")]
	public void ProcessingCutScenes(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0x21C5A4C", Offset = "0x21C5A4C", VA = "0x21C5A4C")]
	public void TriggerCutScenes(int deadCount)
	{
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0x21C59D4", Offset = "0x21C59D4", VA = "0x21C59D4")]
	public void AddCutScenesQueue(e_CutScenesType type)
	{
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0x21C5AC0", Offset = "0x21C5AC0", VA = "0x21C5AC0")]
	public void ProcessingCutScenesEnd()
	{
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0x21C5B5C", Offset = "0x21C5B5C", VA = "0x21C5B5C")]
	public CutScenesTools()
	{
	}
}
[Token(Token = "0x20004A9")]
public class TimeLineManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004AA")]
	private class TimeLineCell
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public e_CutScenesType type;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector playableDirector;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x2063750", Offset = "0x2063750", VA = "0x2063750")]
		public TimeLineCell()
		{
		}
	}

	[Token(Token = "0x4001E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeLineManager _instance;

	[Token(Token = "0x4001E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TimeLineCell> timeLineList;

	[Token(Token = "0x4001E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> enableList;

	[Token(Token = "0x4001EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> disableList;

	[Token(Token = "0x170002A0")]
	public static TimeLineManager Instance
	{
		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x2AB797C", Offset = "0x2AB797C", VA = "0x2AB797C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0x2AB79C8", Offset = "0x2AB79C8", VA = "0x2AB79C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D1E")]
	[Address(RVA = "0x2AB7A1C", Offset = "0x2AB7A1C", VA = "0x2AB7A1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0x2AB7C3C", Offset = "0x2AB7C3C", VA = "0x2AB7C3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D20")]
	[Address(RVA = "0x2AB7E5C", Offset = "0x2AB7E5C", VA = "0x2AB7E5C")]
	public void Control(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x6001D21")]
	[Address(RVA = "0x2AB80A0", Offset = "0x2AB80A0", VA = "0x2AB80A0")]
	public void Control_Net(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x6001D22")]
	[Address(RVA = "0x2AB7E68", Offset = "0x2AB7E68", VA = "0x2AB7E68")]
	private void Play(e_CutScenesType type)
	{
	}

	[Token(Token = "0x6001D23")]
	[Address(RVA = "0x2AB7F84", Offset = "0x2AB7F84", VA = "0x2AB7F84")]
	private void Stop(e_CutScenesType type)
	{
	}

	[Token(Token = "0x6001D24")]
	[Address(RVA = "0x2AB82F4", Offset = "0x2AB82F4", VA = "0x2AB82F4")]
	public bool CheckEnd(e_CutScenesType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D25")]
	[Address(RVA = "0x2AB81A0", Offset = "0x2AB81A0", VA = "0x2AB81A0")]
	private TimeLineCell GetCellByType(e_CutScenesType type)
	{
		return null;
	}

	[Token(Token = "0x6001D26")]
	[Address(RVA = "0x2AB8330", Offset = "0x2AB8330", VA = "0x2AB8330")]
	public void StopAll()
	{
	}

	[Token(Token = "0x6001D27")]
	[Address(RVA = "0x2AB846C", Offset = "0x2AB846C", VA = "0x2AB846C")]
	public TimeLineManager()
	{
	}
}
[Token(Token = "0x20004AB")]
public class PlayAnimatorPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator _animator;

	[Token(Token = "0x4001EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _stateName;

	[Token(Token = "0x4001EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _layer;

	[Token(Token = "0x4001EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _normalizedTime;

	[Token(Token = "0x4001EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _duration;

	[Token(Token = "0x6001D29")]
	[Address(RVA = "0x230D24C", Offset = "0x230D24C", VA = "0x230D24C")]
	public void Initialize(Animator animator, string stateName, int layer, float normalizedTime)
	{
	}

	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0x230D2A4", Offset = "0x230D2A4", VA = "0x230D2A4", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001D2B")]
	[Address(RVA = "0x230D2A8", Offset = "0x230D2A8", VA = "0x230D2A8", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001D2C")]
	[Address(RVA = "0x230D2AC", Offset = "0x230D2AC", VA = "0x230D2AC", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0x230D348", Offset = "0x230D348", VA = "0x230D348", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0x230D34C", Offset = "0x230D34C", VA = "0x230D34C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0x230D350", Offset = "0x230D350", VA = "0x230D350")]
	public PlayAnimatorPlayable()
	{
	}
}
[Token(Token = "0x20004AC")]
public class CameraFadePlayable : PlayableBehaviour
{
	[Token(Token = "0x4001EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isFadeOut;

	[Token(Token = "0x4001EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _isStop;

	[Token(Token = "0x4001EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _duration;

	[Token(Token = "0x6001D30")]
	[Address(RVA = "0x243E944", Offset = "0x243E944", VA = "0x243E944")]
	public void Initialize(bool isFadeOut, bool isStop)
	{
	}

	[Token(Token = "0x6001D31")]
	[Address(RVA = "0x243E958", Offset = "0x243E958", VA = "0x243E958", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001D32")]
	[Address(RVA = "0x243E95C", Offset = "0x243E95C", VA = "0x243E95C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001D33")]
	[Address(RVA = "0x243E960", Offset = "0x243E960", VA = "0x243E960", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D34")]
	[Address(RVA = "0x243EAEC", Offset = "0x243EAEC", VA = "0x243EAEC", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D35")]
	[Address(RVA = "0x243EC38", Offset = "0x243EC38", VA = "0x243EC38", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D36")]
	[Address(RVA = "0x243EC3C", Offset = "0x243EC3C", VA = "0x243EC3C")]
	public CameraFadePlayable()
	{
	}
}
[Token(Token = "0x20004AD")]
public class EffectPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _pos;

	[Token(Token = "0x4001EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _rot;

	[Token(Token = "0x4001EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _effectPrefabs;

	[Token(Token = "0x4001EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isLocal;

	[Token(Token = "0x4001EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _parent;

	[Token(Token = "0x4001EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EffectDefine _effect;

	[Token(Token = "0x6001D37")]
	[Address(RVA = "0x24EFFC8", Offset = "0x24EFFC8", VA = "0x24EFFC8")]
	public void Initialize(GameObject prefab, Vector3 pos, Vector3 rot, bool isLocal, GameObject parent)
	{
	}

	[Token(Token = "0x6001D38")]
	[Address(RVA = "0x24F004C", Offset = "0x24F004C", VA = "0x24F004C", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001D39")]
	[Address(RVA = "0x24F0050", Offset = "0x24F0050", VA = "0x24F0050", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0x24F0054", Offset = "0x24F0054", VA = "0x24F0054", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0x24F02D8", Offset = "0x24F02D8", VA = "0x24F02D8", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0x24F03CC", Offset = "0x24F03CC", VA = "0x24F03CC", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D3D")]
	[Address(RVA = "0x24F03D0", Offset = "0x24F03D0", VA = "0x24F03D0")]
	public EffectPlayable()
	{
	}
}
[Token(Token = "0x20004AE")]
public class MoveCameraPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4001EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _targetPoint;

	[Token(Token = "0x4001EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _lookPoint;

	[Token(Token = "0x4001EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isResetCameraRot;

	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0x26594FC", Offset = "0x26594FC", VA = "0x26594FC")]
	public void Initialize(Vector3 targetPoint, GameObject lookPoint, bool isResetCameraRot)
	{
	}

	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0x2659538", Offset = "0x2659538", VA = "0x2659538", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0x2659544", Offset = "0x2659544", VA = "0x2659544", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0x265954C", Offset = "0x265954C", VA = "0x265954C", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0x2659914", Offset = "0x2659914", VA = "0x2659914", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0x2659918", Offset = "0x2659918", VA = "0x2659918", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D44")]
	[Address(RVA = "0x265991C", Offset = "0x265991C", VA = "0x265991C")]
	public MoveCameraPlayable()
	{
	}
}
[Token(Token = "0x20004AF")]
public class WayPointPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4001EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PathManager _path;

	[Token(Token = "0x4001EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _roleRoot;

	[Token(Token = "0x4001EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private splineMove _splineMove;

	[Token(Token = "0x6001D45")]
	[Address(RVA = "0x297B144", Offset = "0x297B144", VA = "0x297B144")]
	public void Initialize(PathManager path, GameObject roleRoot)
	{
	}

	[Token(Token = "0x6001D46")]
	[Address(RVA = "0x297B178", Offset = "0x297B178", VA = "0x297B178", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001D47")]
	[Address(RVA = "0x297B184", Offset = "0x297B184", VA = "0x297B184", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001D48")]
	[Address(RVA = "0x297B18C", Offset = "0x297B18C", VA = "0x297B18C", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D49")]
	[Address(RVA = "0x297B2A4", Offset = "0x297B2A4", VA = "0x297B2A4", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D4A")]
	[Address(RVA = "0x297B324", Offset = "0x297B324", VA = "0x297B324", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001D4B")]
	[Address(RVA = "0x297B328", Offset = "0x297B328", VA = "0x297B328")]
	public WayPointPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B0")]
public class CameraFadePlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFadeOut;

	[Token(Token = "0x4001EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isStop;

	[Token(Token = "0x6001D4C")]
	[Address(RVA = "0x243EC44", Offset = "0x243EC44", VA = "0x243EC44", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D4D")]
	[Address(RVA = "0x243ED3C", Offset = "0x243ED3C", VA = "0x243ED3C")]
	public CameraFadePlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B1")]
public class EffectPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<GameObject> effectPrefabs;

	[Token(Token = "0x4001EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> parent;

	[Token(Token = "0x4001EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLocal;

	[Token(Token = "0x4001EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 pos;

	[Token(Token = "0x4001EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rot;

	[Token(Token = "0x4001EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _effectPrefabs;

	[Token(Token = "0x4001EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _parent;

	[Token(Token = "0x6001D4E")]
	[Address(RVA = "0x24F03D8", Offset = "0x24F03D8", VA = "0x24F03D8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D4F")]
	[Address(RVA = "0x24F0554", Offset = "0x24F0554", VA = "0x24F0554")]
	public EffectPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B2")]
public class MoveCameraPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _targetPoint;

	[Token(Token = "0x4001EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> lookPoint;

	[Token(Token = "0x4001EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _isResetCameraRot;

	[Token(Token = "0x4001EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _lookPoint;

	[Token(Token = "0x6001D50")]
	[Address(RVA = "0x2659924", Offset = "0x2659924", VA = "0x2659924", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D51")]
	[Address(RVA = "0x2659A84", Offset = "0x2659A84", VA = "0x2659A84")]
	public MoveCameraPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B3")]
public class PlayAnimatorPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Animator> animator;

	[Token(Token = "0x4001EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stateName;

	[Token(Token = "0x4001EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int layer;

	[Token(Token = "0x4001ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float normalizedTime;

	[Token(Token = "0x4001ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animator;

	[Token(Token = "0x6001D52")]
	[Address(RVA = "0x230D358", Offset = "0x230D358", VA = "0x230D358", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D53")]
	[Address(RVA = "0x230D4B4", Offset = "0x230D4B4", VA = "0x230D4B4")]
	public PlayAnimatorPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B4")]
public class WayPointPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<PathManager> path;

	[Token(Token = "0x4001ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> roleRoot;

	[Token(Token = "0x4001ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PathManager _path;

	[Token(Token = "0x4001ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _roleRoot;

	[Token(Token = "0x6001D54")]
	[Address(RVA = "0x297B330", Offset = "0x297B330", VA = "0x297B330", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D55")]
	[Address(RVA = "0x297B4C8", Offset = "0x297B4C8", VA = "0x297B4C8")]
	public WayPointPlayableAsset()
	{
	}
}
[Token(Token = "0x20004B5")]
public class CalibrationOffsetTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B6")]
	public class Calibrationinfo
	{
		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float y_offset;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x20F42C4", Offset = "0x20F42C4", VA = "0x20F42C4")]
		public Calibrationinfo()
		{
		}
	}

	[Token(Token = "0x4001ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform calibrationCamera;

	[Token(Token = "0x4001ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _idealStartPoint;

	[Token(Token = "0x4001ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _idealEndPoint;

	[Token(Token = "0x4001ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject calibrationRoot;

	[Token(Token = "0x4001ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _actualStartPoint;

	[Token(Token = "0x4001ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _actualEndPoint;

	[Token(Token = "0x4001ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Calibrationinfo curCalibrationinfo;

	[Token(Token = "0x4001ED7")]
	private const string jsonName = "/calibrationinfo.json";

	[Token(Token = "0x6001D56")]
	[Address(RVA = "0x243DA54", Offset = "0x243DA54", VA = "0x243DA54")]
	public void Init()
	{
	}

	[Token(Token = "0x6001D57")]
	[Address(RVA = "0x243DCA8", Offset = "0x243DCA8", VA = "0x243DCA8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001D58")]
	[Address(RVA = "0x243DDF0", Offset = "0x243DDF0", VA = "0x243DDF0")]
	private void WriteJson()
	{
	}

	[Token(Token = "0x6001D59")]
	[Address(RVA = "0x243DAA0", Offset = "0x243DAA0", VA = "0x243DAA0")]
	private Calibrationinfo ReadJson()
	{
		return null;
	}

	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0x243DD78", Offset = "0x243DD78", VA = "0x243DD78")]
	private void ClearJson()
	{
	}

	[Token(Token = "0x6001D5B")]
	[Address(RVA = "0x243DEAC", Offset = "0x243DEAC", VA = "0x243DEAC")]
	public void StartCalibration()
	{
	}

	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0x243DEE4", Offset = "0x243DEE4", VA = "0x243DEE4")]
	public void EndCalibration()
	{
	}

	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0x243E078", Offset = "0x243E078", VA = "0x243E078")]
	public static float GetCalibrationAngle(Vector3 startPoint, Vector3 idealEndPoint, Vector3 actualStartPoint, Vector3 actualEndPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0x243DC20", Offset = "0x243DC20", VA = "0x243DC20")]
	public void DoCalibration(Calibrationinfo info)
	{
	}

	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0x243DCF0", Offset = "0x243DCF0", VA = "0x243DCF0")]
	public void DoRestoreCalibration(Calibrationinfo info)
	{
	}

	[Token(Token = "0x6001D60")]
	[Address(RVA = "0x243E218", Offset = "0x243E218", VA = "0x243E218")]
	public CalibrationOffsetTools()
	{
	}
}
[Token(Token = "0x20004B7")]
public class CalibrationTest : MonoBehaviour
{
	[Token(Token = "0x4001ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CalibrationOffsetTools cTools;

	[Token(Token = "0x6001D62")]
	[Address(RVA = "0x243E220", Offset = "0x243E220", VA = "0x243E220")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001D63")]
	[Address(RVA = "0x243E54C", Offset = "0x243E54C", VA = "0x243E54C")]
	public CalibrationTest()
	{
	}
}
[Token(Token = "0x20004B8")]
public class FixSteamVR : Singleton<FixSteamVR>
{
	[Token(Token = "0x20004B9")]
	public struct defaultsettings
	{
		[Token(Token = "0x20004BA")]
		public struct steamvrsettings
		{
			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legacyInputRebinding;
		}

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public steamvrsettings steamvr;
	}

	[Token(Token = "0x20004BB")]
	public struct driverdefaultsvrsettings
	{
		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enable;
	}

	[Token(Token = "0x4001EDA")]
	private const string versionPath = "bin\\version.txt";

	[Token(Token = "0x4001EDB")]
	private const string defaultPath = "resources\\settings\\default.vrsettings";

	[Token(Token = "0x4001EDC")]
	private const string driver_defaultsPath = "resources\\settings\\driver_defaults.vrsettings";

	[Token(Token = "0x4001EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE649C0", Offset = "0xE649C0")]
	private int <SteamVRRuntimeNum>k__BackingField;

	[Token(Token = "0x4001EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE649D0", Offset = "0xE649D0")]
	private bool <IsNeedCheckFix>k__BackingField;

	[Token(Token = "0x4001EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE649E0", Offset = "0xE649E0")]
	private bool <IsNeedFix>k__BackingField;

	[Token(Token = "0x170002A1")]
	public int SteamVRRuntimeNum
	{
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x223F368", Offset = "0x223F368", VA = "0x223F368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5A4", Offset = "0xE6E5A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x223F370", Offset = "0x223F370", VA = "0x223F370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5B4", Offset = "0xE6E5B4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A2")]
	public bool IsNeedCheckFix
	{
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x223F378", Offset = "0x223F378", VA = "0x223F378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5C4", Offset = "0xE6E5C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x223F380", Offset = "0x223F380", VA = "0x223F380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5D4", Offset = "0xE6E5D4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A3")]
	public bool IsNeedFix
	{
		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x223F38C", Offset = "0x223F38C", VA = "0x223F38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5E4", Offset = "0xE6E5E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x223F394", Offset = "0x223F394", VA = "0x223F394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E5F4", Offset = "0xE6E5F4")]
		private set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6001D64")]
	[Address(RVA = "0x223F288", Offset = "0x223F288", VA = "0x223F288")]
	internal static extern IntPtr RuntimePath();

	[Token(Token = "0x6001D65")]
	[Address(RVA = "0x223F2FC", Offset = "0x223F2FC", VA = "0x223F2FC")]
	public static string GetRuntimePath()
	{
		return null;
	}

	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0x223F3A0", Offset = "0x223F3A0", VA = "0x223F3A0")]
	public void Init()
	{
	}

	[Token(Token = "0x6001D6D")]
	[Address(RVA = "0x223F3A4", Offset = "0x223F3A4", VA = "0x223F3A4")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0x223F3A8", Offset = "0x223F3A8", VA = "0x223F3A8")]
	public bool IsNeedFixController(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0x223F3B0", Offset = "0x223F3B0", VA = "0x223F3B0")]
	private void CheckRuntimeVersion()
	{
	}

	[Token(Token = "0x6001D70")]
	[Address(RVA = "0x223F3B4", Offset = "0x223F3B4", VA = "0x223F3B4")]
	private void CheckNeedFixRotation()
	{
	}

	[Token(Token = "0x6001D71")]
	[Address(RVA = "0x223F3B8", Offset = "0x223F3B8", VA = "0x223F3B8")]
	public FixSteamVR()
	{
	}
}
[Token(Token = "0x20004BC")]
public class FollowVRCamera : MonoBehaviour
{
	[Token(Token = "0x4001EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncPositionX;

	[Token(Token = "0x4001EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool syncPositionY;

	[Token(Token = "0x4001EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool syncPositionZ;

	[Token(Token = "0x4001EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool syncRotateX;

	[Token(Token = "0x4001EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool syncRotateY;

	[Token(Token = "0x4001EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool syncRotateZ;

	[Token(Token = "0x4001EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isOverriadY;

	[Token(Token = "0x4001EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool useDefaultRotate;

	[Token(Token = "0x4001EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float overriadY;

	[Token(Token = "0x4001EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion defaultRotate;

	[Token(Token = "0x4001EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 offset;

	[Token(Token = "0x4001EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float forwardOffset;

	[Token(Token = "0x4001EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform mVRCamera;

	[Token(Token = "0x6001D72")]
	[Address(RVA = "0x2242D38", Offset = "0x2242D38", VA = "0x2242D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D73")]
	[Address(RVA = "0x2242D74", Offset = "0x2242D74", VA = "0x2242D74")]
	public void Init()
	{
	}

	[Token(Token = "0x6001D74")]
	[Address(RVA = "0x2242E4C", Offset = "0x2242E4C", VA = "0x2242E4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001D75")]
	[Address(RVA = "0x22431EC", Offset = "0x22431EC", VA = "0x22431EC")]
	public FollowVRCamera()
	{
	}
}
[Token(Token = "0x20004BD")]
public class FollowVRController : MonoBehaviour
{
	[Token(Token = "0x4001EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncPositionX;

	[Token(Token = "0x4001EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool syncPositionY;

	[Token(Token = "0x4001EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool syncPositionZ;

	[Token(Token = "0x4001EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool syncRotateX;

	[Token(Token = "0x4001EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool syncRotateY;

	[Token(Token = "0x4001EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool syncRotateZ;

	[Token(Token = "0x4001EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isOverriadY;

	[Token(Token = "0x4001EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool useDefaultRotate;

	[Token(Token = "0x4001EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float overriadY;

	[Token(Token = "0x4001EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform offsetTarget;

	[Token(Token = "0x4001EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion defaultRotate;

	[Token(Token = "0x4001EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform currentController;

	[Token(Token = "0x4001EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 controllerAdjustRotation;

	[Token(Token = "0x4001EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 controllerAdjustPosition;

	[Token(Token = "0x4001F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A00", Offset = "0xE64A00")]
	private int <index>k__BackingField;

	[Token(Token = "0x4001F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isRight;

	[Token(Token = "0x4001F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int weapon_type;

	[Token(Token = "0x4001F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isHapticPulse;

	[Token(Token = "0x4001F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float hapticDuration;

	[Token(Token = "0x4001F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float hapticValue;

	[Token(Token = "0x4001F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AnimationCurve hapticCurve;

	[Token(Token = "0x4001F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float hapticTimer;

	[Token(Token = "0x170002A4")]
	public int index
	{
		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x2243204", Offset = "0x2243204", VA = "0x2243204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E604", Offset = "0xE6E604")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x224320C", Offset = "0x224320C", VA = "0x224320C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E614", Offset = "0xE6E614")]
		private set
		{
		}
	}

	[Token(Token = "0x6001D78")]
	[Address(RVA = "0x2243214", Offset = "0x2243214", VA = "0x2243214")]
	public void ChangeFollowController(Transform target, bool _isRight, int _weapon_type)
	{
	}

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0x22432DC", Offset = "0x22432DC", VA = "0x22432DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D7A")]
	[Address(RVA = "0x22432E0", Offset = "0x22432E0", VA = "0x22432E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D7B")]
	[Address(RVA = "0x2243304", Offset = "0x2243304", VA = "0x2243304")]
	private void ResetOffsetPosition()
	{
	}

	[Token(Token = "0x6001D7C")]
	[Address(RVA = "0x2243454", Offset = "0x2243454", VA = "0x2243454")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E624", Offset = "0xE6E624")]
	public void TriggerHapticPulse_1()
	{
	}

	[Token(Token = "0x6001D7D")]
	[Address(RVA = "0x224352C", Offset = "0x224352C", VA = "0x224352C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E65C", Offset = "0xE6E65C")]
	public void Refresh_1()
	{
	}

	[Token(Token = "0x6001D7E")]
	[Address(RVA = "0x2243468", Offset = "0x2243468", VA = "0x2243468")]
	public void TriggerHapticPulse(float _duration, float _value, [Optional] AnimationCurve _hapticCurveCurve)
	{
	}

	[Token(Token = "0x6001D7F")]
	[Address(RVA = "0x22433B0", Offset = "0x22433B0", VA = "0x22433B0")]
	public void StopHapticPulse()
	{
	}

	[Token(Token = "0x6001D80")]
	[Address(RVA = "0x2243530", Offset = "0x2243530", VA = "0x2243530")]
	private void ProcessingHapticPulse()
	{
	}

	[Token(Token = "0x6001D81")]
	[Address(RVA = "0x2243258", Offset = "0x2243258", VA = "0x2243258")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001D82")]
	[Address(RVA = "0x224362C", Offset = "0x224362C", VA = "0x224362C")]
	private void ProcessHardwareType()
	{
	}

	[Token(Token = "0x6001D83")]
	[Address(RVA = "0x22436D8", Offset = "0x22436D8", VA = "0x22436D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D84")]
	[Address(RVA = "0x2243710", Offset = "0x2243710", VA = "0x2243710")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D85")]
	[Address(RVA = "0x2243714", Offset = "0x2243714", VA = "0x2243714")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001D86")]
	[Address(RVA = "0x2243A70", Offset = "0x2243A70", VA = "0x2243A70")]
	public FollowVRController()
	{
	}
}
[Token(Token = "0x20004BE")]
public class VRManager : MonoBehaviour
{
	[Token(Token = "0x20004BF")]
	public enum ControllerType
	{
		[Token(Token = "0x4001F1E")]
		Left,
		[Token(Token = "0x4001F1F")]
		Right
	}

	[Token(Token = "0x4001F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject VR_ControllerManager;

	[Token(Token = "0x4001F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera mainCamera;

	[Token(Token = "0x4001F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject VRHeadObject;

	[Token(Token = "0x4001F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject XR_LeftHand;

	[Token(Token = "0x4001F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject XR_RightHand;

	[Token(Token = "0x4001F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManager _instance;

	[Token(Token = "0x4001F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A20", Offset = "0xE64A20")]
	private Vector3 <InitPos>k__BackingField;

	[Token(Token = "0x4001F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion InitRot;

	[Token(Token = "0x4001F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform playerHeightRoot;

	[Token(Token = "0x4001F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A30", Offset = "0xE64A30")]
	private bool <OpenVRFeature>k__BackingField;

	[Token(Token = "0x4001F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float DefaultPlayerHeight;

	[Token(Token = "0x4001F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float DefaultModelHeight;

	[Token(Token = "0x4001F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float DefaultHMDHeightOffset;

	[Token(Token = "0x4001F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float DefaultModelMaxHeight;

	[Token(Token = "0x4001F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A40", Offset = "0xE64A40")]
	private float <PlayerHeight>k__BackingField;

	[Token(Token = "0x4001F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A50", Offset = "0xE64A50")]
	private float <PlayerHeightOffset>k__BackingField;

	[Token(Token = "0x4001F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A60", Offset = "0xE64A60")]
	private float <PlayerHeightRate>k__BackingField;

	[Token(Token = "0x4001F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64A70", Offset = "0xE64A70")]
	private float <ModelHeight>k__BackingField;

	[Token(Token = "0x4001F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action OnInitPlayer;

	[Token(Token = "0x4001F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ServerPlayerNetSyncController serverPlayerNetSyncController;

	[Token(Token = "0x4001F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float Heightoffset;

	[Token(Token = "0x170002A5")]
	public static VRManager Instance
	{
		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x2377158", Offset = "0x2377158", VA = "0x2377158")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A6")]
	public Vector3 InitPos
	{
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x23771A4", Offset = "0x23771A4", VA = "0x23771A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E694", Offset = "0xE6E694")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x23771B0", Offset = "0x23771B0", VA = "0x23771B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6A4", Offset = "0xE6E6A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A7")]
	public bool OpenVRFeature
	{
		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x2377210", Offset = "0x2377210", VA = "0x2377210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6B4", Offset = "0xE6E6B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x2377218", Offset = "0x2377218", VA = "0x2377218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6C4", Offset = "0xE6E6C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A8")]
	[HideInInspector]
	public float PlayerHeight
	{
		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x2377DE8", Offset = "0x2377DE8", VA = "0x2377DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6D4", Offset = "0xE6E6D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x2377DF0", Offset = "0x2377DF0", VA = "0x2377DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6E4", Offset = "0xE6E6E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A9")]
	public float PlayerHeightOffset
	{
		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x2377DF8", Offset = "0x2377DF8", VA = "0x2377DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E6F4", Offset = "0xE6E6F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x2377E00", Offset = "0x2377E00", VA = "0x2377E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E704", Offset = "0xE6E704")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AA")]
	[HideInInspector]
	public float PlayerHeightRate
	{
		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x2377E08", Offset = "0x2377E08", VA = "0x2377E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E714", Offset = "0xE6E714")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x2377E10", Offset = "0x2377E10", VA = "0x2377E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E724", Offset = "0xE6E724")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AB")]
	[HideInInspector]
	public float ModelHeight
	{
		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x2377E18", Offset = "0x2377E18", VA = "0x2377E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E734", Offset = "0xE6E734")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x2377E20", Offset = "0x2377E20", VA = "0x2377E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E744", Offset = "0xE6E744")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AC")]
	public float CurRealHeight
	{
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x2377E28", Offset = "0x2377E28", VA = "0x2377E28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002AD")]
	public float CurPlayerHeight
	{
		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x2377F70", Offset = "0x2377F70", VA = "0x2377F70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001D8A")]
	[Address(RVA = "0x23771BC", Offset = "0x23771BC", VA = "0x23771BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0x2377224", Offset = "0x2377224", VA = "0x2377224")]
	public void Init(bool useVRInput)
	{
	}

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0x237751C", Offset = "0x237751C", VA = "0x237751C")]
	public void SetVRCamera(GameObject vrMgr)
	{
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0x23772CC", Offset = "0x23772CC", VA = "0x23772CC")]
	public void SetFirstPersonCamera(Camera mainCamera)
	{
	}

	[Token(Token = "0x6001D90")]
	[Address(RVA = "0x236D714", Offset = "0x236D714", VA = "0x236D714")]
	public Vector3 GetAreaStandPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D91")]
	[Address(RVA = "0x23779B8", Offset = "0x23779B8", VA = "0x23779B8")]
	public Vector3 GetAreaStandForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D92")]
	[Address(RVA = "0x236D7C0", Offset = "0x236D7C0", VA = "0x236D7C0")]
	public Quaternion GetAreaStandRot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0x2377A64", Offset = "0x2377A64", VA = "0x2377A64")]
	public Vector3 GetAreaStandRight()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0x2377B10", Offset = "0x2377B10", VA = "0x2377B10")]
	public void SetAreaStandPosAndRot(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0x2377CF0", Offset = "0x2377CF0", VA = "0x2377CF0")]
	public void SetMainCameraInit()
	{
	}

	[Token(Token = "0x6001DA0")]
	[Address(RVA = "0x23780A0", Offset = "0x23780A0", VA = "0x23780A0")]
	public void InitPlayerHeight()
	{
	}

	[Token(Token = "0x6001DA1")]
	[Address(RVA = "0x23781CC", Offset = "0x23781CC", VA = "0x23781CC")]
	public void InitPlayerHeightOffset()
	{
	}

	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0x237873C", Offset = "0x237873C", VA = "0x237873C")]
	public void ResetDefaultPlayerHeight()
	{
	}

	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0x23788CC", Offset = "0x23788CC", VA = "0x23788CC")]
	public void SetPlayerHeight(float Heightoffset)
	{
	}

	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0x2378A6C", Offset = "0x2378A6C", VA = "0x2378A6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6E754", Offset = "0xE6E754")]
	public void SetPlayerHeight()
	{
	}

	[Token(Token = "0x6001DA5")]
	[Address(RVA = "0x2378A74", Offset = "0x2378A74", VA = "0x2378A74")]
	public VRManager()
	{
	}
}
[Token(Token = "0x20004C0")]
public interface ILanguageHotSwitch
{
	[Token(Token = "0x6001DA6")]
	void HotSwitch(e_type_language type_Language);
}
[Token(Token = "0x20004C1")]
public class SystemLanguageManager : Singleton<SystemLanguageManager>
{
	[Token(Token = "0x6001DA7")]
	[Address(RVA = "0x226263C", Offset = "0x226263C", VA = "0x226263C")]
	public e_type_language GetSystemLanguage()
	{
		return default(e_type_language);
	}

	[Token(Token = "0x6001DA8")]
	[Address(RVA = "0x22627F4", Offset = "0x22627F4", VA = "0x22627F4")]
	public SystemLanguageManager()
	{
	}
}
[Token(Token = "0x20004C2")]
public class VRPlatformHelper : Singleton<VRPlatformHelper>
{
	[Token(Token = "0x4001F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IPEndPoint rInfo;

	[Token(Token = "0x4001F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IPEndPoint sInfo;

	[Token(Token = "0x4001F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IPEndPoint localInfo;

	[Token(Token = "0x4001F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action VRPlatformConnectCB;

	[Token(Token = "0x4001F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<string, IPEndPoint> ipDic;

	[Token(Token = "0x4001F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isConnect;

	[Token(Token = "0x4001F26")]
	private const float reconnectHostInterval = 1f;

	[Token(Token = "0x4001F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float reconnectTimer;

	[Token(Token = "0x4001F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isInit;

	[Token(Token = "0x4001F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private byte ERROR_NOT_CONNCET_TO_HOST;

	[Token(Token = "0x4001F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private byte ERROR_NOT_CONNCET_TO_PLATFORM;

	[Token(Token = "0x4001F2B")]
	private const int GAMEID = 145;

	[Token(Token = "0x6001DA9")]
	[Address(RVA = "0x2378A88", Offset = "0x2378A88", VA = "0x2378A88")]
	public void DoInit(Action connectCB)
	{
	}

	[Token(Token = "0x6001DAA")]
	[Address(RVA = "0x2379BD0", Offset = "0x2379BD0", VA = "0x2379BD0")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001DAB")]
	[Address(RVA = "0x2379D58", Offset = "0x2379D58", VA = "0x2379D58")]
	public void DoAppQuit()
	{
	}

	[Token(Token = "0x6001DAC")]
	[Address(RVA = "0x2379AD4", Offset = "0x2379AD4", VA = "0x2379AD4")]
	private void AutoConnection()
	{
	}

	[Token(Token = "0x6001DAD")]
	[Address(RVA = "0x2379F08", Offset = "0x2379F08", VA = "0x2379F08")]
	private void PlayerConnectHandle(PlayerConnectProtocol p)
	{
	}

	[Token(Token = "0x6001DAE")]
	[Address(RVA = "0x237AD58", Offset = "0x237AD58", VA = "0x237AD58")]
	private void PlayerStatusHandle(PlayerStatusProtocol p)
	{
	}

	[Token(Token = "0x6001DAF")]
	[Address(RVA = "0x237B2C8", Offset = "0x237B2C8", VA = "0x237B2C8")]
	private void PlayerInfoHandle(PlayerInfoProtocol p)
	{
	}

	[Token(Token = "0x6001DB0")]
	[Address(RVA = "0x237B7D0", Offset = "0x237B7D0", VA = "0x237B7D0")]
	private void PlayerSavData(GetLoadSavProtocol savProtocol)
	{
	}

	[Token(Token = "0x6001DB1")]
	[Address(RVA = "0x237B9DC", Offset = "0x237B9DC", VA = "0x237B9DC")]
	private void GameStartHandle(GameStartProtocol p)
	{
	}

	[Token(Token = "0x6001DB2")]
	[Address(RVA = "0x237C75C", Offset = "0x237C75C", VA = "0x237C75C")]
	private void GameEndHandle()
	{
	}

	[Token(Token = "0x6001DB3")]
	[Address(RVA = "0x237C964", Offset = "0x237C964", VA = "0x237C964")]
	private void TeamInfoHandle(PlayerWXInfoProtocol playerWXInfoProtocol)
	{
	}

	[Token(Token = "0x6001DB4")]
	[Address(RVA = "0x237CF64", Offset = "0x237CF64", VA = "0x237CF64")]
	public void SendGameStatistics(GameStatisticsProtocol protocol)
	{
	}

	[Token(Token = "0x6001DB5")]
	[Address(RVA = "0x237D180", Offset = "0x237D180", VA = "0x237D180")]
	public void SendCmd8(string type, int value)
	{
	}

	[Token(Token = "0x6001DB6")]
	[Address(RVA = "0x237D3C8", Offset = "0x237D3C8", VA = "0x237D3C8")]
	public void SendCmd15()
	{
	}

	[Token(Token = "0x6001DB7")]
	[Address(RVA = "0x237B014", Offset = "0x237B014", VA = "0x237B014")]
	public void SendIsEnableStatusRespon(byte type, string ip)
	{
	}

	[Token(Token = "0x6001DB8")]
	[Address(RVA = "0x237C4B4", Offset = "0x237C4B4", VA = "0x237C4B4")]
	public void SendGameStartRespon(bool flag)
	{
	}

	[Token(Token = "0x6001DB9")]
	[Address(RVA = "0x237D594", Offset = "0x237D594", VA = "0x237D594")]
	private void CloseGameHandle()
	{
	}

	[Token(Token = "0x6001DBA")]
	[Address(RVA = "0x237AD28", Offset = "0x237AD28", VA = "0x237AD28")]
	private e_Player_Style ConvetorStyle(int rawData)
	{
		return default(e_Player_Style);
	}

	[Token(Token = "0x6001DBB")]
	[Address(RVA = "0x237D610", Offset = "0x237D610", VA = "0x237D610")]
	public VRPlatformHelper()
	{
	}
}
[Token(Token = "0x20004C3")]
public class VRPlatformTest : MonoBehaviour
{
	[Token(Token = "0x4001F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sendIp;

	[Token(Token = "0x6001DBC")]
	[Address(RVA = "0x29741F0", Offset = "0x29741F0", VA = "0x29741F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001DBD")]
	[Address(RVA = "0x2974410", Offset = "0x2974410", VA = "0x2974410")]
	public VRPlatformTest()
	{
	}
}
[Token(Token = "0x20004C4")]
public class FPSTest : MonoBehaviour
{
	[Token(Token = "0x4001F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text_fps;

	[Token(Token = "0x4001F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShowFPS fpsCom;

	[Token(Token = "0x6001DBE")]
	[Address(RVA = "0x24F81C0", Offset = "0x24F81C0", VA = "0x24F81C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DBF")]
	[Address(RVA = "0x24F821C", Offset = "0x24F821C", VA = "0x24F821C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0x24F83DC", Offset = "0x24F83DC", VA = "0x24F83DC")]
	public FPSTest()
	{
	}
}
[Token(Token = "0x20004C5")]
public class LogicTest : MonoBehaviour
{
	[Token(Token = "0x4001F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 playerCenterPos;

	[Token(Token = "0x4001F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 newPos;

	[Token(Token = "0x6001DC1")]
	[Address(RVA = "0x24D862C", Offset = "0x24D862C", VA = "0x24D862C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DC2")]
	[Address(RVA = "0x24D8694", Offset = "0x24D8694", VA = "0x24D8694")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0x24D8698", Offset = "0x24D8698", VA = "0x24D8698")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0x24D8920", Offset = "0x24D8920", VA = "0x24D8920")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001DC5")]
	[Address(RVA = "0x24D8A60", Offset = "0x24D8A60", VA = "0x24D8A60")]
	public LogicTest()
	{
	}
}
[Token(Token = "0x20004C6")]
public class ObjectsInAudio : MonoBehaviour, IEnvAudio
{
	[Token(Token = "0x4001F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4001F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WwiseDefine audioObj;

	[Token(Token = "0x4001F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLoop;

	[Token(Token = "0x6001DC6")]
	[Address(RVA = "0x230697C", Offset = "0x230697C", VA = "0x230697C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DC7")]
	[Address(RVA = "0x2306A04", Offset = "0x2306A04", VA = "0x2306A04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001DC8")]
	[Address(RVA = "0x2306A8C", Offset = "0x2306A8C", VA = "0x2306A8C", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x6001DC9")]
	[Address(RVA = "0x2306B78", Offset = "0x2306B78", VA = "0x2306B78", Slot = "4")]
	private void IEnvAudio.PlayAudio()
	{
	}

	[Token(Token = "0x6001DCA")]
	[Address(RVA = "0x2306C9C", Offset = "0x2306C9C", VA = "0x2306C9C")]
	public ObjectsInAudio()
	{
	}
}
[Token(Token = "0x20004C7")]
public class PlayWwiseAudioTest : MonoBehaviour
{
	[Token(Token = "0x4001F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioEvent audioEvent;

	[Token(Token = "0x6001DCB")]
	[Address(RVA = "0x230D4C8", Offset = "0x230D4C8", VA = "0x230D4C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DCC")]
	[Address(RVA = "0x230D4CC", Offset = "0x230D4CC", VA = "0x230D4CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DCD")]
	[Address(RVA = "0x230D5A8", Offset = "0x230D5A8", VA = "0x230D5A8")]
	public PlayWwiseAudioTest()
	{
	}
}
[Token(Token = "0x20004C8")]
public class StatisticalInfoTest : MonoBehaviour
{
	[Token(Token = "0x4001F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x4001F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x4001F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x6001DCE")]
	[Address(RVA = "0x2167D90", Offset = "0x2167D90", VA = "0x2167D90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DCF")]
	[Address(RVA = "0x2167E44", Offset = "0x2167E44", VA = "0x2167E44")]
	public StatisticalInfoTest()
	{
	}
}
[Token(Token = "0x20004C9")]
public class TestGear : MonoBehaviour
{
	[Token(Token = "0x6001DD0")]
	[Address(RVA = "0x2AB2AF0", Offset = "0x2AB2AF0", VA = "0x2AB2AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DD1")]
	[Address(RVA = "0x2AB2BE0", Offset = "0x2AB2BE0", VA = "0x2AB2BE0")]
	public TestGear()
	{
	}
}
[Token(Token = "0x20004CA")]
public class TestIK : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004CB")]
	public class WeaponGroupConfig
	{
		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weaponGroup;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon leftWeapon;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon rightWeapon;

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x20635A8", Offset = "0x20635A8", VA = "0x20635A8")]
		public WeaponGroupConfig()
		{
		}
	}

	[Token(Token = "0x4001F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject other_role;

	[Token(Token = "0x4001F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject local_role;

	[Token(Token = "0x4001F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject headAnchor;

	[Token(Token = "0x4001F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private WeaponGroupConfig[] weaponGroups;

	[Token(Token = "0x4001F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 other_leftWeapon;

	[Token(Token = "0x4001F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 other_rightWeapon;

	[Token(Token = "0x4001F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Weapon other_weapon_1;

	[Token(Token = "0x4001F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Weapon other_weapon_2;

	[Token(Token = "0x4001F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 local_leftWeapon;

	[Token(Token = "0x4001F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 local_rightWeapon;

	[Token(Token = "0x4001F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Weapon local_weapon_1;

	[Token(Token = "0x4001F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Weapon local_weapon_2;

	[Token(Token = "0x4001F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool enableLeft;

	[Token(Token = "0x4001F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool enableRight;

	[Token(Token = "0x4001F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IKConfigMono other_ik;

	[Token(Token = "0x4001F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IKConfigMono local_ik;

	[Token(Token = "0x4001F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator other_animator;

	[Token(Token = "0x4001F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator local_animator;

	[Token(Token = "0x4001F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private e_weapon_group currentGroup;

	[Token(Token = "0x4001F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float moveTime;

	[Token(Token = "0x4001F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float moveTimer;

	[Token(Token = "0x4001F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2[] moveDirs;

	[Token(Token = "0x4001F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int moveDirIndex;

	[Token(Token = "0x4001F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float smoothSpeed;

	[Token(Token = "0x6001DD2")]
	[Address(RVA = "0x2AB2BE8", Offset = "0x2AB2BE8", VA = "0x2AB2BE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DD3")]
	[Address(RVA = "0x2AB31BC", Offset = "0x2AB31BC", VA = "0x2AB31BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001DD4")]
	[Address(RVA = "0x2AB3610", Offset = "0x2AB3610", VA = "0x2AB3610")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DD5")]
	[Address(RVA = "0x2AB3900", Offset = "0x2AB3900", VA = "0x2AB3900")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001DD6")]
	[Address(RVA = "0x2AB2D28", Offset = "0x2AB2D28", VA = "0x2AB2D28")]
	private void SwitchWeapon(e_weapon_group weapon_Group)
	{
	}

	[Token(Token = "0x6001DD7")]
	[Address(RVA = "0x2AB3F84", Offset = "0x2AB3F84", VA = "0x2AB3F84")]
	public WeaponGroupConfig GetWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0x2AB4268", Offset = "0x2AB4268", VA = "0x2AB4268")]
	public TestIK()
	{
	}
}
[Token(Token = "0x20004CC")]
public class TestPlayerHighlyMatched : MonoBehaviour
{
	[Token(Token = "0x4001F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherPlayer;

	[Token(Token = "0x4001F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject localPlayer;

	[Token(Token = "0x4001F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 otherPos;

	[Token(Token = "0x4001F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cameraRig;

	[Token(Token = "0x4001F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject vrcamera;

	[Token(Token = "0x4001F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float playerHeight;

	[Token(Token = "0x4001F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float playerHeightOffset;

	[Token(Token = "0x4001F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float playerHeightRate;

	[Token(Token = "0x4001F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isTest;

	[Token(Token = "0x4001F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OtherPlayerNetSyncController syncController;

	[Token(Token = "0x4001F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IKConfigMono iK;

	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0x2AB47B8", Offset = "0x2AB47B8", VA = "0x2AB47B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0x2AB48C4", Offset = "0x2AB48C4", VA = "0x2AB48C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0x2AB4B84", Offset = "0x2AB4B84", VA = "0x2AB4B84")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0x2AB4C98", Offset = "0x2AB4C98", VA = "0x2AB4C98")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0x2AB4CDC", Offset = "0x2AB4CDC", VA = "0x2AB4CDC")]
	private void TestPlayerHeight()
	{
	}

	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0x2AB4D78", Offset = "0x2AB4D78", VA = "0x2AB4D78")]
	private void SetCameraRig()
	{
	}

	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0x2AB4DE8", Offset = "0x2AB4DE8", VA = "0x2AB4DE8")]
	public TestPlayerHighlyMatched()
	{
	}
}
[Token(Token = "0x20004CD")]
public class TimeTest : MonoBehaviour
{
	[Token(Token = "0x4001F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text_time;

	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0x2AB8474", Offset = "0x2AB8474", VA = "0x2AB8474")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0x2AB84D0", Offset = "0x2AB84D0", VA = "0x2AB84D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DE3")]
	[Address(RVA = "0x2AB86D8", Offset = "0x2AB86D8", VA = "0x2AB86D8")]
	public TimeTest()
	{
	}
}
[Token(Token = "0x20004CE")]
public class WeaponTest : MonoBehaviour
{
	[Token(Token = "0x4001F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxBulletCount;

	[Token(Token = "0x4001F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxMagazineCount;

	[Token(Token = "0x4001F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int curBulletCount;

	[Token(Token = "0x4001F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int curMagazineCount;

	[Token(Token = "0x4001F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int atk;

	[Token(Token = "0x4001F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int headPer;

	[Token(Token = "0x4001F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fireInterval;

	[Token(Token = "0x4001F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int scatterRadius;

	[Token(Token = "0x4001F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int recoil;

	[Token(Token = "0x4001F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bulletForce;

	[Token(Token = "0x4001F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string weaponName;

	[Token(Token = "0x4001F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int CriticalHitRate;

	[Token(Token = "0x4001F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ChangeAmmunitionTechnique;

	[Token(Token = "0x4001F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Weapon weapon;

	[Token(Token = "0x6001DE4")]
	[Address(RVA = "0x2B51C64", Offset = "0x2B51C64", VA = "0x2B51C64")]
	public void Init(Weapon _weapon)
	{
	}

	[Token(Token = "0x6001DE5")]
	[Address(RVA = "0x2B51C6C", Offset = "0x2B51C6C", VA = "0x2B51C6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DE6")]
	[Address(RVA = "0x2B51EA0", Offset = "0x2B51EA0", VA = "0x2B51EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DE7")]
	[Address(RVA = "0x2B51EA4", Offset = "0x2B51EA4", VA = "0x2B51EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DE8")]
	[Address(RVA = "0x2B51C70", Offset = "0x2B51C70", VA = "0x2B51C70")]
	private void updateShowMessage()
	{
	}

	[Token(Token = "0x6001DE9")]
	[Address(RVA = "0x2B51EA8", Offset = "0x2B51EA8", VA = "0x2B51EA8")]
	public WeaponTest()
	{
	}
}
[Token(Token = "0x20004CF")]
public class TestLightCast : MonoBehaviour
{
	[Token(Token = "0x4001F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x6001DEA")]
	[Address(RVA = "0x2AB4288", Offset = "0x2AB4288", VA = "0x2AB4288")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DEB")]
	[Address(RVA = "0x2AB43EC", Offset = "0x2AB43EC", VA = "0x2AB43EC")]
	private void OnEventHandler(FlashLight flashLight, RaycastHit raycastHit, FlashLight.LightEventType lightEventType)
	{
	}

	[Token(Token = "0x6001DEC")]
	[Address(RVA = "0x2AB4468", Offset = "0x2AB4468", VA = "0x2AB4468")]
	protected void OnLightEnter(RaycastHit info)
	{
	}

	[Token(Token = "0x6001DED")]
	[Address(RVA = "0x2AB4580", Offset = "0x2AB4580", VA = "0x2AB4580")]
	protected void OnLightStay(RaycastHit info)
	{
	}

	[Token(Token = "0x6001DEE")]
	[Address(RVA = "0x2AB4698", Offset = "0x2AB4698", VA = "0x2AB4698")]
	protected void OnLightExit(RaycastHit info)
	{
	}

	[Token(Token = "0x6001DEF")]
	[Address(RVA = "0x2AB47B0", Offset = "0x2AB47B0", VA = "0x2AB47B0")]
	public TestLightCast()
	{
	}
}
[Token(Token = "0x20004D0")]
public class TestWwiseObstruction : MonoBehaviour
{
	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE560D8", Offset = "0xE560D8")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AkEvent akevent;

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x2063660", Offset = "0x2063660", VA = "0x2063660")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x2063668", Offset = "0x2063668", VA = "0x2063668")]
		internal void <Start>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE560E8", Offset = "0xE560E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__9_0;

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x2063614", Offset = "0x2063614", VA = "0x2063614")]
		public <>c()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x206361C", Offset = "0x206361C", VA = "0x206361C")]
		internal int <Update>b__9_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Listener;

	[Token(Token = "0x4001F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxDis;

	[Token(Token = "0x4001F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4001F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ObstructionValue;

	[Token(Token = "0x4001F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x4001F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float testP;

	[Token(Token = "0x4001F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4001F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x6001DF0")]
	[Address(RVA = "0x2AB5014", Offset = "0x2AB5014", VA = "0x2AB5014")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0x2AB5104", Offset = "0x2AB5104", VA = "0x2AB5104")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0x2AB5854", Offset = "0x2AB5854", VA = "0x2AB5854")]
	public TestWwiseObstruction()
	{
	}
}
[Token(Token = "0x20004D3")]
public class Testangle : MonoBehaviour
{
	[Token(Token = "0x20004D4")]
	public struct DoCell
	{
	}

	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0x2AB5928", Offset = "0x2AB5928", VA = "0x2AB5928")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DFA")]
	[Address(RVA = "0x2AB595C", Offset = "0x2AB595C", VA = "0x2AB595C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DFB")]
	[Address(RVA = "0x2AB5960", Offset = "0x2AB5960", VA = "0x2AB5960")]
	public Testangle()
	{
	}
}
[Token(Token = "0x20004D5")]
public class VRCameraReset : MonoBehaviour
{
	[Token(Token = "0x4001F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraEye;

	[Token(Token = "0x4001F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 dropPreCamPos;

	[Token(Token = "0x4001F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion dropPreCamRot;

	[Token(Token = "0x6001DFC")]
	[Address(RVA = "0x23758D4", Offset = "0x23758D4", VA = "0x23758D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DFD")]
	[Address(RVA = "0x237593C", Offset = "0x237593C", VA = "0x237593C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DFE")]
	[Address(RVA = "0x2375A7C", Offset = "0x2375A7C", VA = "0x2375A7C")]
	public VRCameraReset()
	{
	}
}
[Token(Token = "0x20004D6")]
public class testheight : MonoBehaviour
{
	[Token(Token = "0x4001F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4001F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text2;

	[Token(Token = "0x6001DFF")]
	[Address(RVA = "0x20E7204", Offset = "0x20E7204", VA = "0x20E7204")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E00")]
	[Address(RVA = "0x20E730C", Offset = "0x20E730C", VA = "0x20E730C")]
	public testheight()
	{
	}
}
[Token(Token = "0x20004D7")]
public class MeshPainterStringUtility
{
	[Token(Token = "0x4001F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string meshPaintEditorFolder;

	[Token(Token = "0x4001F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string contolTexFolder;

	[Token(Token = "0x4001F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string shaderNameDatas;

	[Token(Token = "0x4001F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string idleShaderNameDatas;

	[Token(Token = "0x4001F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string fileExr;

	[Token(Token = "0x4001F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string tex_1;

	[Token(Token = "0x4001F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string tex_2;

	[Token(Token = "0x4001F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string tex_3;

	[Token(Token = "0x4001F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string tex_4;

	[Token(Token = "0x4001F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string rayCastLayer;

	[Token(Token = "0x4001F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string shaderControlTexName;

	[Token(Token = "0x6001E01")]
	[Address(RVA = "0x279B310", Offset = "0x279B310", VA = "0x279B310")]
	private static string[] GetDirectories(string dir, [Optional] string regexPattern, bool recurse = false, bool throwEx = false)
	{
		return null;
	}

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x279B730", Offset = "0x279B730", VA = "0x279B730")]
	public static bool Exists(string str)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x279B7D0", Offset = "0x279B7D0", VA = "0x279B7D0")]
	public static string FindPath(string root, string condition)
	{
		return null;
	}

	[Token(Token = "0x6001E04")]
	[Address(RVA = "0x279B95C", Offset = "0x279B95C", VA = "0x279B95C")]
	public static string RelativePath(string path)
	{
		return null;
	}

	[Token(Token = "0x6001E05")]
	[Address(RVA = "0x279B9A4", Offset = "0x279B9A4", VA = "0x279B9A4")]
	public MeshPainterStringUtility()
	{
	}
}
[Token(Token = "0x20004D8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE560F8", Offset = "0xE560F8")]
public class MeshShaderType : ScriptableObject
{
	[Token(Token = "0x4001F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float brushSize;

	[Token(Token = "0x4001F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float brushStronger;

	[Token(Token = "0x4001F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int brushOrthValue;

	[Token(Token = "0x4001F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showUV;

	[Token(Token = "0x4001F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public int textureIndex;

	[Token(Token = "0x4001F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int brushIndex;

	[Token(Token = "0x4001F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isPaint;

	[Token(Token = "0x4001F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool lastIsPaint;

	[Token(Token = "0x4001F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public List<string> layers;

	[Token(Token = "0x4001F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public List<CustomData> shaders;

	[Token(Token = "0x6001E07")]
	[Address(RVA = "0x279BBA0", Offset = "0x279BBA0", VA = "0x279BBA0")]
	public List<string> UpdateLayers(List<string> list)
	{
		return null;
	}

	[Token(Token = "0x6001E08")]
	[Address(RVA = "0x279BC94", Offset = "0x279BC94", VA = "0x279BC94")]
	public List<CustomData> UpdateShaders(List<CustomData> list)
	{
		return null;
	}

	[Token(Token = "0x6001E09")]
	[Address(RVA = "0x279BD88", Offset = "0x279BD88", VA = "0x279BD88")]
	public MeshShaderType()
	{
	}
}
[Serializable]
[Token(Token = "0x20004D9")]
public class CustomData
{
	[Token(Token = "0x4001F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string shaderName;

	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0x21C4B30", Offset = "0x21C4B30", VA = "0x21C4B30")]
	public CustomData()
	{
	}
}
[Token(Token = "0x20004DA")]
public class AreaClock3DCrtl : MonoBehaviour
{
	[Token(Token = "0x4001F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AreaClock3D areaClock3D;

	[Token(Token = "0x4001F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float duration;

	[Token(Token = "0x4001F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float durTimeCounter;

	[Token(Token = "0x4001F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDestory;

	[Token(Token = "0x4001F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isInit;

	[Token(Token = "0x4001F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool isPreEnd;

	[Token(Token = "0x4001F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0x2131BE8", Offset = "0x2131BE8", VA = "0x2131BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E0C")]
	[Address(RVA = "0x2131BEC", Offset = "0x2131BEC", VA = "0x2131BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0x2131DAC", Offset = "0x2131DAC", VA = "0x2131DAC")]
	private bool PreCDEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0x2131E30", Offset = "0x2131E30", VA = "0x2131E30")]
	public void Init(float _duration, float _timeScale, Vector3 _pos)
	{
	}

	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0x2131DD8", Offset = "0x2131DD8", VA = "0x2131DD8")]
	private bool CheckDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E10")]
	[Address(RVA = "0x2131EBC", Offset = "0x2131EBC", VA = "0x2131EBC")]
	public AreaClock3DCrtl()
	{
	}
}
[Token(Token = "0x20004DB")]
public class CheckRay : MonoBehaviour
{
	[Token(Token = "0x6001E11")]
	[Address(RVA = "0x26675BC", Offset = "0x26675BC", VA = "0x26675BC")]
	public CheckRay()
	{
	}
}
[Token(Token = "0x20004DC")]
public enum AkAudioAPI
{
	[Token(Token = "0x4001F9D")]
	AkAudioAPI_AAudio = 1,
	[Token(Token = "0x4001F9E")]
	AkAudioAPI_OpenSL_ES,
	[Token(Token = "0x4001F9F")]
	AkAudioAPI_Default
}
[Token(Token = "0x20004DD")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x20004DE")]
	public enum AkCommSystem
	{
		[Token(Token = "0x4001FA3")]
		AkCommSystem_Socket,
		[Token(Token = "0x4001FA4")]
		AkCommSystem_HTCS
	}

	[Token(Token = "0x4001FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002AE")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x1FC17AC", Offset = "0x1FC17AC", VA = "0x1FC17AC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x1FC0888", Offset = "0x1FC0888", VA = "0x1FC0888")]
		set
		{
		}
	}

	[Token(Token = "0x170002AF")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x1FC1814", Offset = "0x1FC1814", VA = "0x1FC1814")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x1FC0900", Offset = "0x1FC0900", VA = "0x1FC0900")]
		set
		{
		}
	}

	[Token(Token = "0x170002B0")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x1FC187C", Offset = "0x1FC187C", VA = "0x1FC187C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x1FC0978", Offset = "0x1FC0978", VA = "0x1FC0978")]
		set
		{
		}
	}

	[Token(Token = "0x170002B1")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x1FC18E4", Offset = "0x1FC18E4", VA = "0x1FC18E4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x1FC09F0", Offset = "0x1FC09F0", VA = "0x1FC09F0")]
		set
		{
		}
	}

	[Token(Token = "0x170002B2")]
	public AkCommSystem commSystem
	{
		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x1FC194C", Offset = "0x1FC194C", VA = "0x1FC194C")]
		get
		{
			return default(AkCommSystem);
		}
		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x1FC0AE0", Offset = "0x1FC0AE0", VA = "0x1FC0AE0")]
		set
		{
		}
	}

	[Token(Token = "0x170002B3")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x1FC19B4", Offset = "0x1FC19B4", VA = "0x1FC19B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x1FC0A68", Offset = "0x1FC0A68", VA = "0x1FC0A68")]
		set
		{
		}
	}

	[Token(Token = "0x170002B4")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x1FC1A1C", Offset = "0x1FC1A1C", VA = "0x1FC1A1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x1FC0B58", Offset = "0x1FC0B58", VA = "0x1FC0B58")]
		set
		{
		}
	}

	[Token(Token = "0x6001E12")]
	[Address(RVA = "0x1FC1490", Offset = "0x1FC1490", VA = "0x1FC1490")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x1FC14D0", Offset = "0x1FC14D0", VA = "0x1FC14D0")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x1FC151C", Offset = "0x1FC151C", VA = "0x1FC151C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x1FC15BC", Offset = "0x1FC15BC", VA = "0x1FC15BC", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x1FC1544", Offset = "0x1FC1544", VA = "0x1FC1544", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x1FC1630", Offset = "0x1FC1630", VA = "0x1FC1630", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x1FBC3D0", Offset = "0x1FBC3D0", VA = "0x1FBC3D0")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x20004DF")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x4001FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002B5")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x23EE168", Offset = "0x23EE168", VA = "0x23EE168")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x23EE0DC", Offset = "0x23EE0DC", VA = "0x23EE0DC")]
		set
		{
		}
	}

	[Token(Token = "0x170002B6")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x23EE2B8", Offset = "0x23EE2B8", VA = "0x23EE2B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x23EE22C", Offset = "0x23EE22C", VA = "0x23EE22C")]
		set
		{
		}
	}

	[Token(Token = "0x170002B7")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x23EE408", Offset = "0x23EE408", VA = "0x23EE408")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x23EE37C", Offset = "0x23EE37C", VA = "0x23EE37C")]
		set
		{
		}
	}

	[Token(Token = "0x170002B8")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x23EE558", Offset = "0x23EE558", VA = "0x23EE558")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x23EE4CC", Offset = "0x23EE4CC", VA = "0x23EE4CC")]
		set
		{
		}
	}

	[Token(Token = "0x170002B9")]
	public AkAudioAPI eAudioAPI
	{
		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x23EE694", Offset = "0x23EE694", VA = "0x23EE694")]
		get
		{
			return default(AkAudioAPI);
		}
		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x23EE61C", Offset = "0x23EE61C", VA = "0x23EE61C")]
		set
		{
		}
	}

	[Token(Token = "0x170002BA")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x23EE774", Offset = "0x23EE774", VA = "0x23EE774")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x23EE6FC", Offset = "0x23EE6FC", VA = "0x23EE6FC")]
		set
		{
		}
	}

	[Token(Token = "0x170002BB")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x23EE854", Offset = "0x23EE854", VA = "0x23EE854")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x23EE7DC", Offset = "0x23EE7DC", VA = "0x23EE7DC")]
		set
		{
		}
	}

	[Token(Token = "0x170002BC")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x23EE934", Offset = "0x23EE934", VA = "0x23EE934")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x23EE8BC", Offset = "0x23EE8BC", VA = "0x23EE8BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002BD")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x23EEA14", Offset = "0x23EEA14", VA = "0x23EEA14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x23EE99C", Offset = "0x23EE99C", VA = "0x23EE99C")]
		set
		{
		}
	}

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x23E4EE0", Offset = "0x23E4EE0", VA = "0x23E4EE0")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x23E4DD0", Offset = "0x23E4DD0", VA = "0x23E4DD0")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x23EDE4C", Offset = "0x23EDE4C", VA = "0x23EDE4C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x23EDEEC", Offset = "0x23EDEEC", VA = "0x23EDEEC", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6001E2B")]
	[Address(RVA = "0x23EDE74", Offset = "0x23EDE74", VA = "0x23EDE74", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001E2C")]
	[Address(RVA = "0x23EDF60", Offset = "0x23EDF60", VA = "0x23EDF60", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x20004E0")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6001E3F")]
	[Address(RVA = "0x20FA61C", Offset = "0x20FA61C", VA = "0x20FA61C")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001E40")]
	[Address(RVA = "0x20FA620", Offset = "0x20FA620", VA = "0x20FA620")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x6001E41")]
	[Address(RVA = "0x20FA694", Offset = "0x20FA694", VA = "0x20FA694")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E42")]
	[Address(RVA = "0x20FA724", Offset = "0x20FA724", VA = "0x20FA724")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E43")]
	[Address(RVA = "0x20FA7A4", Offset = "0x20FA7A4", VA = "0x20FA7A4")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E44")]
	[Address(RVA = "0x20FA834", Offset = "0x20FA834", VA = "0x20FA834")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E45")]
	[Address(RVA = "0x20FA8B4", Offset = "0x20FA8B4", VA = "0x20FA8B4")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6001E46")]
	[Address(RVA = "0x20FA928", Offset = "0x20FA928", VA = "0x20FA928")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E47")]
	[Address(RVA = "0x20FA9A8", Offset = "0x20FA9A8", VA = "0x20FA9A8")]
	public static extern void CSharp_AkDeviceDescription_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E48")]
	[Address(RVA = "0x20FAA38", Offset = "0x20FAA38", VA = "0x20FAA38")]
	public static extern uint CSharp_AkDeviceDescription_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E49")]
	[Address(RVA = "0x20FAAB8", Offset = "0x20FAAB8", VA = "0x20FAAB8")]
	public static extern void CSharp_AkDeviceDescription_deviceName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E4A")]
	[Address(RVA = "0x20FAB5C", Offset = "0x20FAB5C", VA = "0x20FAB5C")]
	public static extern IntPtr CSharp_AkDeviceDescription_deviceName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E4B")]
	[Address(RVA = "0x20FABDC", Offset = "0x20FABDC", VA = "0x20FABDC")]
	public static extern void CSharp_AkDeviceDescription_deviceStateMask_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E4C")]
	[Address(RVA = "0x20FAC6C", Offset = "0x20FAC6C", VA = "0x20FAC6C")]
	public static extern int CSharp_AkDeviceDescription_deviceStateMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E4D")]
	[Address(RVA = "0x20FACEC", Offset = "0x20FACEC", VA = "0x20FACEC")]
	public static extern void CSharp_AkDeviceDescription_isDefaultDevice_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0x20FAD7C", Offset = "0x20FAD7C", VA = "0x20FAD7C")]
	public static extern bool CSharp_AkDeviceDescription_isDefaultDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0x20FAE04", Offset = "0x20FAE04", VA = "0x20FAE04")]
	public static extern void CSharp_AkDeviceDescription_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E50")]
	[Address(RVA = "0x20FAE84", Offset = "0x20FAE84", VA = "0x20FAE84")]
	public static extern int CSharp_AkDeviceDescription_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001E51")]
	[Address(RVA = "0x20FAEF8", Offset = "0x20FAEF8", VA = "0x20FAEF8")]
	public static extern void CSharp_AkDeviceDescription_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E52")]
	[Address(RVA = "0x20FAF88", Offset = "0x20FAF88", VA = "0x20FAF88")]
	public static extern IntPtr CSharp_new_AkDeviceDescription();

	[PreserveSig]
	[Token(Token = "0x6001E53")]
	[Address(RVA = "0x20FAFFC", Offset = "0x20FAFFC", VA = "0x20FAFFC")]
	public static extern void CSharp_delete_AkDeviceDescription(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E54")]
	[Address(RVA = "0x20FB07C", Offset = "0x20FB07C", VA = "0x20FB07C")]
	public static extern Vector3 CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E55")]
	[Address(RVA = "0x20FB0FC", Offset = "0x20FB0FC", VA = "0x20FB0FC")]
	public static extern Vector3 CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E56")]
	[Address(RVA = "0x20FB17C", Offset = "0x20FB17C", VA = "0x20FB17C")]
	public static extern Vector3 CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E57")]
	[Address(RVA = "0x20FB1FC", Offset = "0x20FB1FC", VA = "0x20FB1FC")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E58")]
	[Address(RVA = "0x20FB2DC", Offset = "0x20FB2DC", VA = "0x20FB2DC")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x20FB3C4", Offset = "0x20FB3C4", VA = "0x20FB3C4")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x20FB46C", Offset = "0x20FB46C", VA = "0x20FB46C")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x20FB514", Offset = "0x20FB514", VA = "0x20FB514")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, Vector3 jarg2, Vector3 jarg3);

	[PreserveSig]
	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x20FB5DC", Offset = "0x20FB5DC", VA = "0x20FB5DC")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x20FB6A4", Offset = "0x20FB6A4", VA = "0x20FB6A4")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x20FB718", Offset = "0x20FB718", VA = "0x20FB718")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x20FB798", Offset = "0x20FB798", VA = "0x20FB798")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x20FB828", Offset = "0x20FB828", VA = "0x20FB828")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x20FB8A8", Offset = "0x20FB8A8", VA = "0x20FB8A8")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x20FB938", Offset = "0x20FB938", VA = "0x20FB938")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x20FB9B8", Offset = "0x20FB9B8", VA = "0x20FB9B8")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x20FBA38", Offset = "0x20FBA38", VA = "0x20FBA38")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x20FBAAC", Offset = "0x20FBAAC", VA = "0x20FBAAC")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x20FBB3C", Offset = "0x20FBB3C", VA = "0x20FBB3C")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x20FBBB0", Offset = "0x20FBBB0", VA = "0x20FBBB0")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x20FBC30", Offset = "0x20FBC30", VA = "0x20FBC30")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E69")]
	[Address(RVA = "0x20FBCC0", Offset = "0x20FBCC0", VA = "0x20FBCC0")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0x20FBD40", Offset = "0x20FBD40", VA = "0x20FBD40")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0x20FBDD0", Offset = "0x20FBDD0", VA = "0x20FBDD0")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0x20FBE50", Offset = "0x20FBE50", VA = "0x20FBE50")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E6D")]
	[Address(RVA = "0x20FBED0", Offset = "0x20FBED0", VA = "0x20FBED0")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0x20FBF60", Offset = "0x20FBF60", VA = "0x20FBF60")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0x20FBFE0", Offset = "0x20FBFE0", VA = "0x20FBFE0")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E70")]
	[Address(RVA = "0x20FC070", Offset = "0x20FC070", VA = "0x20FC070")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E71")]
	[Address(RVA = "0x20FC0F0", Offset = "0x20FC0F0", VA = "0x20FC0F0")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E72")]
	[Address(RVA = "0x20FC180", Offset = "0x20FC180", VA = "0x20FC180")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E73")]
	[Address(RVA = "0x20FC200", Offset = "0x20FC200", VA = "0x20FC200")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E74")]
	[Address(RVA = "0x20FC2A8", Offset = "0x20FC2A8", VA = "0x20FC2A8")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001E75")]
	[Address(RVA = "0x20FC348", Offset = "0x20FC348", VA = "0x20FC348")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001E76")]
	[Address(RVA = "0x20FC3BC", Offset = "0x20FC3BC", VA = "0x20FC3BC")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E77")]
	[Address(RVA = "0x20FC43C", Offset = "0x20FC43C", VA = "0x20FC43C")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001E78")]
	[Address(RVA = "0x20FC4B0", Offset = "0x20FC4B0", VA = "0x20FC4B0")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E79")]
	[Address(RVA = "0x20FC540", Offset = "0x20FC540", VA = "0x20FC540")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0x20FC5D0", Offset = "0x20FC5D0", VA = "0x20FC5D0")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x20FC650", Offset = "0x20FC650", VA = "0x20FC650")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x20FC6E0", Offset = "0x20FC6E0", VA = "0x20FC6E0")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0x20FC760", Offset = "0x20FC760", VA = "0x20FC760")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x20FC7E0", Offset = "0x20FC7E0", VA = "0x20FC7E0")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0x20FC854", Offset = "0x20FC854", VA = "0x20FC854")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6001E80")]
	[Address(RVA = "0x20FC8C8", Offset = "0x20FC8C8", VA = "0x20FC8C8")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001E81")]
	[Address(RVA = "0x20FC93C", Offset = "0x20FC93C", VA = "0x20FC93C")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001E82")]
	[Address(RVA = "0x20FC9B0", Offset = "0x20FC9B0", VA = "0x20FC9B0")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6001E83")]
	[Address(RVA = "0x20FCA24", Offset = "0x20FCA24", VA = "0x20FCA24")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6001E84")]
	[Address(RVA = "0x20FCA98", Offset = "0x20FCA98", VA = "0x20FCA98")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6001E85")]
	[Address(RVA = "0x20FCB0C", Offset = "0x20FCB0C", VA = "0x20FCB0C")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E86")]
	[Address(RVA = "0x20FCB9C", Offset = "0x20FCB9C", VA = "0x20FCB9C")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E87")]
	[Address(RVA = "0x20FCC1C", Offset = "0x20FCC1C", VA = "0x20FCC1C")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E88")]
	[Address(RVA = "0x20FCCAC", Offset = "0x20FCCAC", VA = "0x20FCCAC")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E89")]
	[Address(RVA = "0x20FCD2C", Offset = "0x20FCD2C", VA = "0x20FCD2C")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0x20FCDBC", Offset = "0x20FCDBC", VA = "0x20FCDBC")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0x20FCE3C", Offset = "0x20FCE3C", VA = "0x20FCE3C")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E8C")]
	[Address(RVA = "0x20FCECC", Offset = "0x20FCECC", VA = "0x20FCECC")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0x20FCF4C", Offset = "0x20FCF4C", VA = "0x20FCF4C")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0x20FCFDC", Offset = "0x20FCFDC", VA = "0x20FCFDC")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0x20FD05C", Offset = "0x20FD05C", VA = "0x20FD05C")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E90")]
	[Address(RVA = "0x20FD0EC", Offset = "0x20FD0EC", VA = "0x20FD0EC")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E91")]
	[Address(RVA = "0x20FD16C", Offset = "0x20FD16C", VA = "0x20FD16C")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E92")]
	[Address(RVA = "0x20FD1EC", Offset = "0x20FD1EC", VA = "0x20FD1EC")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E93")]
	[Address(RVA = "0x20FD26C", Offset = "0x20FD26C", VA = "0x20FD26C")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E94")]
	[Address(RVA = "0x20FD2EC", Offset = "0x20FD2EC", VA = "0x20FD2EC")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E95")]
	[Address(RVA = "0x20FD36C", Offset = "0x20FD36C", VA = "0x20FD36C")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E96")]
	[Address(RVA = "0x20FD3EC", Offset = "0x20FD3EC", VA = "0x20FD3EC")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6001E97")]
	[Address(RVA = "0x20FD4B4", Offset = "0x20FD4B4", VA = "0x20FD4B4")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E98")]
	[Address(RVA = "0x20FD53C", Offset = "0x20FD53C", VA = "0x20FD53C")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x6001E99")]
	[Address(RVA = "0x20FD5B0", Offset = "0x20FD5B0", VA = "0x20FD5B0")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0x20FD630", Offset = "0x20FD630", VA = "0x20FD630")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0x20FD6C0", Offset = "0x20FD6C0", VA = "0x20FD6C0")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0x20FD740", Offset = "0x20FD740", VA = "0x20FD740")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0x20FD7C0", Offset = "0x20FD7C0", VA = "0x20FD7C0")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0x20FD840", Offset = "0x20FD840", VA = "0x20FD840")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0x20FD8C0", Offset = "0x20FD8C0", VA = "0x20FD8C0")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0x20FD958", Offset = "0x20FD958", VA = "0x20FD958")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0x20FD9F0", Offset = "0x20FD9F0", VA = "0x20FD9F0")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x6001EA2")]
	[Address(RVA = "0x20FDA64", Offset = "0x20FDA64", VA = "0x20FDA64")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EA3")]
	[Address(RVA = "0x20FDAE4", Offset = "0x20FDAE4", VA = "0x20FDAE4")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001EA4")]
	[Address(RVA = "0x20FDB58", Offset = "0x20FDB58", VA = "0x20FDB58")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EA5")]
	[Address(RVA = "0x20FDBD8", Offset = "0x20FDBD8", VA = "0x20FDBD8")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EA6")]
	[Address(RVA = "0x20FDC58", Offset = "0x20FDC58", VA = "0x20FDC58")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EA7")]
	[Address(RVA = "0x20FDCE8", Offset = "0x20FDCE8", VA = "0x20FDCE8")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EA8")]
	[Address(RVA = "0x20FDD80", Offset = "0x20FDD80", VA = "0x20FDD80")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EA9")]
	[Address(RVA = "0x20FDE18", Offset = "0x20FDE18", VA = "0x20FDE18")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EAA")]
	[Address(RVA = "0x20FDEA8", Offset = "0x20FDEA8", VA = "0x20FDEA8")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EAB")]
	[Address(RVA = "0x20FDF28", Offset = "0x20FDF28", VA = "0x20FDF28")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EAC")]
	[Address(RVA = "0x20FDFB8", Offset = "0x20FDFB8", VA = "0x20FDFB8")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EAD")]
	[Address(RVA = "0x20FE038", Offset = "0x20FE038", VA = "0x20FE038")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EAE")]
	[Address(RVA = "0x20FE0C8", Offset = "0x20FE0C8", VA = "0x20FE0C8")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EAF")]
	[Address(RVA = "0x20FE148", Offset = "0x20FE148", VA = "0x20FE148")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x6001EB0")]
	[Address(RVA = "0x20FE1BC", Offset = "0x20FE1BC", VA = "0x20FE1BC")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EB1")]
	[Address(RVA = "0x20FE23C", Offset = "0x20FE23C", VA = "0x20FE23C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EB2")]
	[Address(RVA = "0x20FE2BC", Offset = "0x20FE2BC", VA = "0x20FE2BC")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EB3")]
	[Address(RVA = "0x20FE33C", Offset = "0x20FE33C", VA = "0x20FE33C")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0x20FE3CC", Offset = "0x20FE3CC", VA = "0x20FE3CC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0x20FE45C", Offset = "0x20FE45C", VA = "0x20FE45C")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0x20FE4EC", Offset = "0x20FE4EC", VA = "0x20FE4EC")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0x20FE57C", Offset = "0x20FE57C", VA = "0x20FE57C")]
	public static extern bool CSharp_AkPlaylistArray_IsGrowingAllowed(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EB8")]
	[Address(RVA = "0x20FE604", Offset = "0x20FE604", VA = "0x20FE604")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EB9")]
	[Address(RVA = "0x20FE694", Offset = "0x20FE694", VA = "0x20FE694")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EBA")]
	[Address(RVA = "0x20FE714", Offset = "0x20FE714", VA = "0x20FE714")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0x20FE794", Offset = "0x20FE794", VA = "0x20FE794")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0x20FE814", Offset = "0x20FE814", VA = "0x20FE814")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0x20FE894", Offset = "0x20FE894", VA = "0x20FE894")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EBE")]
	[Address(RVA = "0x20FE91C", Offset = "0x20FE91C", VA = "0x20FE91C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0x20FE9AC", Offset = "0x20FE9AC", VA = "0x20FE9AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0x20FEA2C", Offset = "0x20FEA2C", VA = "0x20FEA2C")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0x20FEABC", Offset = "0x20FEABC", VA = "0x20FEABC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0x20FEB3C", Offset = "0x20FEB3C", VA = "0x20FEB3C")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EC3")]
	[Address(RVA = "0x20FEBBC", Offset = "0x20FEBBC", VA = "0x20FEBBC")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EC4")]
	[Address(RVA = "0x20FEC4C", Offset = "0x20FEC4C", VA = "0x20FEC4C")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EC5")]
	[Address(RVA = "0x20FECDC", Offset = "0x20FECDC", VA = "0x20FECDC")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EC6")]
	[Address(RVA = "0x20FED5C", Offset = "0x20FED5C", VA = "0x20FED5C")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EC7")]
	[Address(RVA = "0x20FEDEC", Offset = "0x20FEDEC", VA = "0x20FEDEC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EC8")]
	[Address(RVA = "0x20FEE7C", Offset = "0x20FEE7C", VA = "0x20FEE7C")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EC9")]
	[Address(RVA = "0x20FEF04", Offset = "0x20FEF04", VA = "0x20FEF04")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ECA")]
	[Address(RVA = "0x20FEF9C", Offset = "0x20FEF9C", VA = "0x20FEF9C")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ECB")]
	[Address(RVA = "0x20FF034", Offset = "0x20FF034", VA = "0x20FF034")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ECC")]
	[Address(RVA = "0x20FF0C4", Offset = "0x20FF0C4", VA = "0x20FF0C4")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ECD")]
	[Address(RVA = "0x20FF154", Offset = "0x20FF154", VA = "0x20FF154")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x6001ECE")]
	[Address(RVA = "0x20FF214", Offset = "0x20FF214", VA = "0x20FF214")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001ECF")]
	[Address(RVA = "0x20FF2C4", Offset = "0x20FF2C4", VA = "0x20FF2C4")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001ED0")]
	[Address(RVA = "0x20FF36C", Offset = "0x20FF36C", VA = "0x20FF36C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001ED1")]
	[Address(RVA = "0x20FF404", Offset = "0x20FF404", VA = "0x20FF404")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ED2")]
	[Address(RVA = "0x20FF494", Offset = "0x20FF494", VA = "0x20FF494")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6001ED3")]
	[Address(RVA = "0x20FF508", Offset = "0x20FF508", VA = "0x20FF508")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0x20FF588", Offset = "0x20FF588", VA = "0x20FF588")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001ED5")]
	[Address(RVA = "0x20FF638", Offset = "0x20FF638", VA = "0x20FF638")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0x20FF6E0", Offset = "0x20FF6E0", VA = "0x20FF6E0")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0x20FF760", Offset = "0x20FF760", VA = "0x20FF760")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0x20FF7E0", Offset = "0x20FF7E0", VA = "0x20FF7E0")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0x20FF878", Offset = "0x20FF878", VA = "0x20FF878")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x20FF908", Offset = "0x20FF908", VA = "0x20FF908")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x20FF988", Offset = "0x20FF988", VA = "0x20FF988")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0x20FFA20", Offset = "0x20FFA20", VA = "0x20FFA20")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0x20FFAB0", Offset = "0x20FFAB0", VA = "0x20FFAB0")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0x20FFB30", Offset = "0x20FFB30", VA = "0x20FFB30")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EDF")]
	[Address(RVA = "0x20FFBC8", Offset = "0x20FFBC8", VA = "0x20FFBC8")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0x20FFC58", Offset = "0x20FFC58", VA = "0x20FFC58")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x20FFCD8", Offset = "0x20FFCD8", VA = "0x20FFCD8")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x20FFD70", Offset = "0x20FFD70", VA = "0x20FFD70")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0x20FFE00", Offset = "0x20FFE00", VA = "0x20FFE00")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0x20FFE80", Offset = "0x20FFE80", VA = "0x20FFE80")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0x20FFF00", Offset = "0x20FFF00", VA = "0x20FFF00")]
	public static extern int CSharp_Seek__SWIG_0(uint jarg1, int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0x20FFF98", Offset = "0x20FFF98", VA = "0x20FFF98")]
	public static extern int CSharp_Seek__SWIG_1(uint jarg1, float jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0x2100038", Offset = "0x2100038", VA = "0x2100038")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EE8")]
	[Address(RVA = "0x21000D0", Offset = "0x21000D0", VA = "0x21000D0")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EE9")]
	[Address(RVA = "0x2100150", Offset = "0x2100150", VA = "0x2100150")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EEA")]
	[Address(RVA = "0x21001D0", Offset = "0x21001D0", VA = "0x21001D0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001EEB")]
	[Address(RVA = "0x2100244", Offset = "0x2100244", VA = "0x2100244")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001EEC")]
	[Address(RVA = "0x2100304", Offset = "0x2100304", VA = "0x2100304")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001EED")]
	[Address(RVA = "0x21003B4", Offset = "0x21003B4", VA = "0x21003B4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EEE")]
	[Address(RVA = "0x210045C", Offset = "0x210045C", VA = "0x210045C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EEF")]
	[Address(RVA = "0x21004F4", Offset = "0x21004F4", VA = "0x21004F4")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EF0")]
	[Address(RVA = "0x2100584", Offset = "0x2100584", VA = "0x2100584")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EF1")]
	[Address(RVA = "0x2100604", Offset = "0x2100604", VA = "0x2100604")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0x2100694", Offset = "0x2100694", VA = "0x2100694")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0x2100714", Offset = "0x2100714", VA = "0x2100714")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0x21007A4", Offset = "0x21007A4", VA = "0x21007A4")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0x2100824", Offset = "0x2100824", VA = "0x2100824")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0x21008B4", Offset = "0x21008B4", VA = "0x21008B4")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0x2100934", Offset = "0x2100934", VA = "0x2100934")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0x21009B4", Offset = "0x21009B4", VA = "0x21009B4")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0x2100A44", Offset = "0x2100A44", VA = "0x2100A44")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0x2100AC4", Offset = "0x2100AC4", VA = "0x2100AC4")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0x2100B38", Offset = "0x2100B38", VA = "0x2100B38")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0x2100BB8", Offset = "0x2100BB8", VA = "0x2100BB8")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EFD")]
	[Address(RVA = "0x2100C48", Offset = "0x2100C48", VA = "0x2100C48")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001EFE")]
	[Address(RVA = "0x2100CC8", Offset = "0x2100CC8", VA = "0x2100CC8")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001EFF")]
	[Address(RVA = "0x2100D58", Offset = "0x2100D58", VA = "0x2100D58")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F00")]
	[Address(RVA = "0x2100DD8", Offset = "0x2100DD8", VA = "0x2100DD8")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F01")]
	[Address(RVA = "0x2100E68", Offset = "0x2100E68", VA = "0x2100E68")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F02")]
	[Address(RVA = "0x2100EF0", Offset = "0x2100EF0", VA = "0x2100EF0")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F03")]
	[Address(RVA = "0x2100F80", Offset = "0x2100F80", VA = "0x2100F80")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F04")]
	[Address(RVA = "0x2101000", Offset = "0x2101000", VA = "0x2101000")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F05")]
	[Address(RVA = "0x2101090", Offset = "0x2101090", VA = "0x2101090")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F06")]
	[Address(RVA = "0x2101110", Offset = "0x2101110", VA = "0x2101110")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F07")]
	[Address(RVA = "0x21011A0", Offset = "0x21011A0", VA = "0x21011A0")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F08")]
	[Address(RVA = "0x2101220", Offset = "0x2101220", VA = "0x2101220")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F09")]
	[Address(RVA = "0x21012B0", Offset = "0x21012B0", VA = "0x21012B0")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F0A")]
	[Address(RVA = "0x2101330", Offset = "0x2101330", VA = "0x2101330")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F0B")]
	[Address(RVA = "0x21013C0", Offset = "0x21013C0", VA = "0x21013C0")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F0C")]
	[Address(RVA = "0x2101440", Offset = "0x2101440", VA = "0x2101440")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F0D")]
	[Address(RVA = "0x21014D0", Offset = "0x21014D0", VA = "0x21014D0")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F0E")]
	[Address(RVA = "0x2101558", Offset = "0x2101558", VA = "0x2101558")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F0F")]
	[Address(RVA = "0x21015E8", Offset = "0x21015E8", VA = "0x21015E8")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F10")]
	[Address(RVA = "0x2101670", Offset = "0x2101670", VA = "0x2101670")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F11")]
	[Address(RVA = "0x2101714", Offset = "0x2101714", VA = "0x2101714")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F12")]
	[Address(RVA = "0x2101794", Offset = "0x2101794", VA = "0x2101794")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F13")]
	[Address(RVA = "0x2101824", Offset = "0x2101824", VA = "0x2101824")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F14")]
	[Address(RVA = "0x21018A4", Offset = "0x21018A4", VA = "0x21018A4")]
	public static extern void CSharp_AkInitSettings_uBankReadBufferSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F15")]
	[Address(RVA = "0x2101934", Offset = "0x2101934", VA = "0x2101934")]
	public static extern uint CSharp_AkInitSettings_uBankReadBufferSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F16")]
	[Address(RVA = "0x21019B4", Offset = "0x21019B4", VA = "0x21019B4")]
	public static extern void CSharp_AkInitSettings_fDebugOutOfRangeLimit_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F17")]
	[Address(RVA = "0x2101A44", Offset = "0x2101A44", VA = "0x2101A44")]
	public static extern float CSharp_AkInitSettings_fDebugOutOfRangeLimit_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F18")]
	[Address(RVA = "0x2101AC4", Offset = "0x2101AC4", VA = "0x2101AC4")]
	public static extern void CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F19")]
	[Address(RVA = "0x2101B54", Offset = "0x2101B54", VA = "0x2101B54")]
	public static extern bool CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F1A")]
	[Address(RVA = "0x2101BDC", Offset = "0x2101BDC", VA = "0x2101BDC")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F1B")]
	[Address(RVA = "0x2101C5C", Offset = "0x2101C5C", VA = "0x2101C5C")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F1C")]
	[Address(RVA = "0x2101CEC", Offset = "0x2101CEC", VA = "0x2101CEC")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F1D")]
	[Address(RVA = "0x2101D6C", Offset = "0x2101D6C", VA = "0x2101D6C")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F1E")]
	[Address(RVA = "0x2101DFC", Offset = "0x2101DFC", VA = "0x2101DFC")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F1F")]
	[Address(RVA = "0x2101E7C", Offset = "0x2101E7C", VA = "0x2101E7C")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F20")]
	[Address(RVA = "0x2101F0C", Offset = "0x2101F0C", VA = "0x2101F0C")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F21")]
	[Address(RVA = "0x2101F8C", Offset = "0x2101F8C", VA = "0x2101F8C")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F22")]
	[Address(RVA = "0x210200C", Offset = "0x210200C", VA = "0x210200C")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001F23")]
	[Address(RVA = "0x2102080", Offset = "0x2102080", VA = "0x2102080")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F24")]
	[Address(RVA = "0x2102110", Offset = "0x2102110", VA = "0x2102110")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6001F25")]
	[Address(RVA = "0x2102184", Offset = "0x2102184", VA = "0x2102184")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F26")]
	[Address(RVA = "0x2102204", Offset = "0x2102204", VA = "0x2102204")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6001F27")]
	[Address(RVA = "0x2102280", Offset = "0x2102280", VA = "0x2102280")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F28")]
	[Address(RVA = "0x2102300", Offset = "0x2102300", VA = "0x2102300")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F29")]
	[Address(RVA = "0x2102380", Offset = "0x2102380", VA = "0x2102380")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0x21023F4", Offset = "0x21023F4", VA = "0x21023F4")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0x2102484", Offset = "0x2102484", VA = "0x2102484")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0x2102504", Offset = "0x2102504", VA = "0x2102504")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0x2102594", Offset = "0x2102594", VA = "0x2102594")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F2E")]
	[Address(RVA = "0x2102614", Offset = "0x2102614", VA = "0x2102614")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0x21026C4", Offset = "0x21026C4", VA = "0x21026C4")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F30")]
	[Address(RVA = "0x2102764", Offset = "0x2102764", VA = "0x2102764")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F31")]
	[Address(RVA = "0x2102814", Offset = "0x2102814", VA = "0x2102814")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F32")]
	[Address(RVA = "0x21028BC", Offset = "0x21028BC", VA = "0x21028BC")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F33")]
	[Address(RVA = "0x2102944", Offset = "0x2102944", VA = "0x2102944")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F34")]
	[Address(RVA = "0x21029C4", Offset = "0x21029C4", VA = "0x21029C4")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F35")]
	[Address(RVA = "0x2102A44", Offset = "0x2102A44", VA = "0x2102A44")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001F36")]
	[Address(RVA = "0x2102AB8", Offset = "0x2102AB8", VA = "0x2102AB8")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_0(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F37")]
	[Address(RVA = "0x2102B78", Offset = "0x2102B78", VA = "0x2102B78")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F38")]
	[Address(RVA = "0x2102C10", Offset = "0x2102C10", VA = "0x2102C10")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F39")]
	[Address(RVA = "0x2102CA8", Offset = "0x2102CA8", VA = "0x2102CA8")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0x2102D80", Offset = "0x2102D80", VA = "0x2102D80")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0x2102E48", Offset = "0x2102E48", VA = "0x2102E48")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0x2102EF8", Offset = "0x2102EF8", VA = "0x2102EF8")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0x2102F88", Offset = "0x2102F88", VA = "0x2102F88")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0x2103078", Offset = "0x2103078", VA = "0x2103078")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001F3F")]
	[Address(RVA = "0x2103158", Offset = "0x2103158", VA = "0x2103158")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F40")]
	[Address(RVA = "0x2103220", Offset = "0x2103220", VA = "0x2103220")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F41")]
	[Address(RVA = "0x21032C8", Offset = "0x21032C8", VA = "0x21032C8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001F42")]
	[Address(RVA = "0x2103388", Offset = "0x2103388", VA = "0x2103388")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F43")]
	[Address(RVA = "0x2103438", Offset = "0x2103438", VA = "0x2103438")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F44")]
	[Address(RVA = "0x21034E0", Offset = "0x21034E0", VA = "0x21034E0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F45")]
	[Address(RVA = "0x2103578", Offset = "0x2103578", VA = "0x2103578")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F46")]
	[Address(RVA = "0x2103608", Offset = "0x2103608", VA = "0x2103608")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001F47")]
	[Address(RVA = "0x21036E0", Offset = "0x21036E0", VA = "0x21036E0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F48")]
	[Address(RVA = "0x21037A8", Offset = "0x21037A8", VA = "0x21037A8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F49")]
	[Address(RVA = "0x2103868", Offset = "0x2103868", VA = "0x2103868")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0x2103918", Offset = "0x2103918", VA = "0x2103918")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0x21039C0", Offset = "0x21039C0", VA = "0x21039C0")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0x2103A68", Offset = "0x2103A68", VA = "0x2103A68")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0x2103AF8", Offset = "0x2103AF8", VA = "0x2103AF8")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0x2103B78", Offset = "0x2103B78", VA = "0x2103B78")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0x2103BEC", Offset = "0x2103BEC", VA = "0x2103BEC")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F50")]
	[Address(RVA = "0x2103C84", Offset = "0x2103C84", VA = "0x2103C84")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F51")]
	[Address(RVA = "0x2103D34", Offset = "0x2103D34", VA = "0x2103D34")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F52")]
	[Address(RVA = "0x2103DB4", Offset = "0x2103DB4", VA = "0x2103DB4")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F53")]
	[Address(RVA = "0x2103E4C", Offset = "0x2103E4C", VA = "0x2103E4C")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F54")]
	[Address(RVA = "0x2103EE4", Offset = "0x2103EE4", VA = "0x2103EE4")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F55")]
	[Address(RVA = "0x2103F94", Offset = "0x2103F94", VA = "0x2103F94")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F56")]
	[Address(RVA = "0x2104044", Offset = "0x2104044", VA = "0x2104044")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F57")]
	[Address(RVA = "0x21040EC", Offset = "0x21040EC", VA = "0x21040EC")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F58")]
	[Address(RVA = "0x2104184", Offset = "0x2104184", VA = "0x2104184")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F59")]
	[Address(RVA = "0x210424C", Offset = "0x210424C", VA = "0x210424C")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0x210430C", Offset = "0x210430C", VA = "0x210430C")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0x21043BC", Offset = "0x21043BC", VA = "0x21043BC")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x2104474", Offset = "0x2104474", VA = "0x2104474")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x210451C", Offset = "0x210451C", VA = "0x210451C")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0x21045BC", Offset = "0x21045BC", VA = "0x21045BC")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0x210468C", Offset = "0x210468C", VA = "0x210468C")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F60")]
	[Address(RVA = "0x210474C", Offset = "0x210474C", VA = "0x210474C")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F61")]
	[Address(RVA = "0x2104804", Offset = "0x2104804", VA = "0x2104804")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F62")]
	[Address(RVA = "0x2104884", Offset = "0x2104884", VA = "0x2104884")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F63")]
	[Address(RVA = "0x2104904", Offset = "0x2104904", VA = "0x2104904")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F64")]
	[Address(RVA = "0x2104984", Offset = "0x2104984", VA = "0x2104984")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F65")]
	[Address(RVA = "0x2104A1C", Offset = "0x2104A1C", VA = "0x2104A1C")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F66")]
	[Address(RVA = "0x2104AAC", Offset = "0x2104AAC", VA = "0x2104AAC")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F67")]
	[Address(RVA = "0x2104B44", Offset = "0x2104B44", VA = "0x2104B44")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F68")]
	[Address(RVA = "0x2104BC4", Offset = "0x2104BC4", VA = "0x2104BC4")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001F69")]
	[Address(RVA = "0x2104C34", Offset = "0x2104C34", VA = "0x2104C34")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0x2104CCC", Offset = "0x2104CCC", VA = "0x2104CCC")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0x2104D5C", Offset = "0x2104D5C", VA = "0x2104D5C")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0x2104DDC", Offset = "0x2104DDC", VA = "0x2104DDC")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0x2104E84", Offset = "0x2104E84", VA = "0x2104E84")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0x2104F1C", Offset = "0x2104F1C", VA = "0x2104F1C")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0x2104FAC", Offset = "0x2104FAC", VA = "0x2104FAC")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F70")]
	[Address(RVA = "0x210502C", Offset = "0x210502C", VA = "0x210502C")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F71")]
	[Address(RVA = "0x21050AC", Offset = "0x21050AC", VA = "0x21050AC")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6001F72")]
	[Address(RVA = "0x2105128", Offset = "0x2105128", VA = "0x2105128")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6001F73")]
	[Address(RVA = "0x21051F0", Offset = "0x21051F0", VA = "0x21051F0")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6001F74")]
	[Address(RVA = "0x2105264", Offset = "0x2105264", VA = "0x2105264")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F75")]
	[Address(RVA = "0x210530C", Offset = "0x210530C", VA = "0x210530C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F76")]
	[Address(RVA = "0x21053A4", Offset = "0x21053A4", VA = "0x21053A4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F77")]
	[Address(RVA = "0x210544C", Offset = "0x210544C", VA = "0x210544C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F78")]
	[Address(RVA = "0x21054E4", Offset = "0x21054E4", VA = "0x21054E4")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F79")]
	[Address(RVA = "0x2105574", Offset = "0x2105574", VA = "0x2105574")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6001F7A")]
	[Address(RVA = "0x21055E8", Offset = "0x21055E8", VA = "0x21055E8")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F7B")]
	[Address(RVA = "0x2105678", Offset = "0x2105678", VA = "0x2105678")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0x2105720", Offset = "0x2105720", VA = "0x2105720")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0x21057A0", Offset = "0x21057A0", VA = "0x21057A0")]
	public static extern int CSharp_LoadBankMemoryView__SWIG_0(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0x2105838", Offset = "0x2105838", VA = "0x2105838")]
	public static extern int CSharp_LoadBankMemoryCopy__SWIG_0(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F7F")]
	[Address(RVA = "0x21058D0", Offset = "0x21058D0", VA = "0x21058D0")]
	public static extern int CSharp_LoadBank__SWIG_2(string jarg1, IntPtr jarg2, IntPtr jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F80")]
	[Address(RVA = "0x2105990", Offset = "0x2105990", VA = "0x2105990")]
	public static extern int CSharp_LoadBank__SWIG_3(uint jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F81")]
	[Address(RVA = "0x2105A28", Offset = "0x2105A28", VA = "0x2105A28")]
	public static extern int CSharp_LoadBankMemoryView__SWIG_1(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F82")]
	[Address(RVA = "0x2105AD8", Offset = "0x2105AD8", VA = "0x2105AD8")]
	public static extern int CSharp_LoadBankMemoryCopy__SWIG_1(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F83")]
	[Address(RVA = "0x2105B88", Offset = "0x2105B88", VA = "0x2105B88")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F84")]
	[Address(RVA = "0x2105C30", Offset = "0x2105C30", VA = "0x2105C30")]
	public static extern int CSharp_UnloadBank__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F85")]
	[Address(RVA = "0x2105CC0", Offset = "0x2105CC0", VA = "0x2105CC0")]
	public static extern int CSharp_UnloadBank__SWIG_2(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F86")]
	[Address(RVA = "0x2105D80", Offset = "0x2105D80", VA = "0x2105D80")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F87")]
	[Address(RVA = "0x2105E28", Offset = "0x2105E28", VA = "0x2105E28")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F88")]
	[Address(RVA = "0x2105EA8", Offset = "0x2105EA8", VA = "0x2105EA8")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F89")]
	[Address(RVA = "0x2105F5C", Offset = "0x2105F5C", VA = "0x2105F5C")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F8A")]
	[Address(RVA = "0x2106008", Offset = "0x2106008", VA = "0x2106008")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0x21060A0", Offset = "0x21060A0", VA = "0x21060A0")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0x2106130", Offset = "0x2106130", VA = "0x2106130")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0x21061FC", Offset = "0x21061FC", VA = "0x21061FC")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0x21062C0", Offset = "0x21062C0", VA = "0x21062C0")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F8F")]
	[Address(RVA = "0x2106370", Offset = "0x2106370", VA = "0x2106370")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001F90")]
	[Address(RVA = "0x2106418", Offset = "0x2106418", VA = "0x2106418")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x6001F91")]
	[Address(RVA = "0x210648C", Offset = "0x210648C", VA = "0x210648C")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F92")]
	[Address(RVA = "0x2106524", Offset = "0x2106524", VA = "0x2106524")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001F93")]
	[Address(RVA = "0x21065C4", Offset = "0x21065C4", VA = "0x21065C4")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F94")]
	[Address(RVA = "0x2106674", Offset = "0x2106674", VA = "0x2106674")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F95")]
	[Address(RVA = "0x210672C", Offset = "0x210672C", VA = "0x210672C")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F96")]
	[Address(RVA = "0x21067BC", Offset = "0x21067BC", VA = "0x21067BC")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F97")]
	[Address(RVA = "0x210684C", Offset = "0x210684C", VA = "0x210684C")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F98")]
	[Address(RVA = "0x2106918", Offset = "0x2106918", VA = "0x2106918")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001F99")]
	[Address(RVA = "0x21069D0", Offset = "0x21069D0", VA = "0x21069D0")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001F9A")]
	[Address(RVA = "0x2106AB4", Offset = "0x2106AB4", VA = "0x2106AB4")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001F9B")]
	[Address(RVA = "0x2106B84", Offset = "0x2106B84", VA = "0x2106B84")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F9C")]
	[Address(RVA = "0x2106C14", Offset = "0x2106C14", VA = "0x2106C14")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001F9D")]
	[Address(RVA = "0x2106CA4", Offset = "0x2106CA4", VA = "0x2106CA4")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F9E")]
	[Address(RVA = "0x2106D24", Offset = "0x2106D24", VA = "0x2106D24")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001F9F")]
	[Address(RVA = "0x2106DA4", Offset = "0x2106DA4", VA = "0x2106DA4")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FA0")]
	[Address(RVA = "0x2106E24", Offset = "0x2106E24", VA = "0x2106E24")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FA1")]
	[Address(RVA = "0x2106ED4", Offset = "0x2106ED4", VA = "0x2106ED4")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FA2")]
	[Address(RVA = "0x2106F6C", Offset = "0x2106F6C", VA = "0x2106F6C")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001FA3")]
	[Address(RVA = "0x210702C", Offset = "0x210702C", VA = "0x210702C")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0x21070E4", Offset = "0x21070E4", VA = "0x21070E4")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0x210718C", Offset = "0x210718C", VA = "0x210718C")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0x210722C", Offset = "0x210722C", VA = "0x210722C")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FA7")]
	[Address(RVA = "0x21072BC", Offset = "0x21072BC", VA = "0x21072BC")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001FA8")]
	[Address(RVA = "0x2107394", Offset = "0x2107394", VA = "0x2107394")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001FA9")]
	[Address(RVA = "0x2107464", Offset = "0x2107464", VA = "0x2107464")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FAA")]
	[Address(RVA = "0x2107524", Offset = "0x2107524", VA = "0x2107524")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FAB")]
	[Address(RVA = "0x21075DC", Offset = "0x21075DC", VA = "0x21075DC")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FAC")]
	[Address(RVA = "0x2107684", Offset = "0x2107684", VA = "0x2107684")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001FAD")]
	[Address(RVA = "0x2107744", Offset = "0x2107744", VA = "0x2107744")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001FAE")]
	[Address(RVA = "0x21077FC", Offset = "0x21077FC", VA = "0x21077FC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FAF")]
	[Address(RVA = "0x21078A4", Offset = "0x21078A4", VA = "0x21078A4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FB0")]
	[Address(RVA = "0x2107944", Offset = "0x2107944", VA = "0x2107944")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001FB1")]
	[Address(RVA = "0x2107A1C", Offset = "0x2107A1C", VA = "0x2107A1C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001FB2")]
	[Address(RVA = "0x2107AEC", Offset = "0x2107AEC", VA = "0x2107AEC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FB3")]
	[Address(RVA = "0x2107BAC", Offset = "0x2107BAC", VA = "0x2107BAC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0x2107C64", Offset = "0x2107C64", VA = "0x2107C64")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0x2107D14", Offset = "0x2107D14", VA = "0x2107D14")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FB6")]
	[Address(RVA = "0x2107DBC", Offset = "0x2107DBC", VA = "0x2107DBC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FB7")]
	[Address(RVA = "0x2107E54", Offset = "0x2107E54", VA = "0x2107E54")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0x2107EE4", Offset = "0x2107EE4", VA = "0x2107EE4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FB9")]
	[Address(RVA = "0x2107F64", Offset = "0x2107F64", VA = "0x2107F64")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6001FBA")]
	[Address(RVA = "0x210802C", Offset = "0x210802C", VA = "0x210802C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FBB")]
	[Address(RVA = "0x21080EC", Offset = "0x21080EC", VA = "0x21080EC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FBC")]
	[Address(RVA = "0x210819C", Offset = "0x210819C", VA = "0x210819C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FBD")]
	[Address(RVA = "0x2108244", Offset = "0x2108244", VA = "0x2108244")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FBE")]
	[Address(RVA = "0x21082DC", Offset = "0x21082DC", VA = "0x21082DC")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FBF")]
	[Address(RVA = "0x2108374", Offset = "0x2108374", VA = "0x2108374")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FC0")]
	[Address(RVA = "0x2108438", Offset = "0x2108438", VA = "0x2108438")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FC1")]
	[Address(RVA = "0x21084C8", Offset = "0x21084C8", VA = "0x21084C8")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FC2")]
	[Address(RVA = "0x2108570", Offset = "0x2108570", VA = "0x2108570")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FC3")]
	[Address(RVA = "0x2108600", Offset = "0x2108600", VA = "0x2108600")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FC4")]
	[Address(RVA = "0x21086C0", Offset = "0x21086C0", VA = "0x21086C0")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FC5")]
	[Address(RVA = "0x2108758", Offset = "0x2108758", VA = "0x2108758")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FC6")]
	[Address(RVA = "0x21087F8", Offset = "0x21087F8", VA = "0x21087F8")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FC7")]
	[Address(RVA = "0x2108890", Offset = "0x2108890", VA = "0x2108890")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FC8")]
	[Address(RVA = "0x2108928", Offset = "0x2108928", VA = "0x2108928")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FC9")]
	[Address(RVA = "0x21089D8", Offset = "0x21089D8", VA = "0x21089D8")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FCA")]
	[Address(RVA = "0x2108A68", Offset = "0x2108A68", VA = "0x2108A68")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FCB")]
	[Address(RVA = "0x2108B10", Offset = "0x2108B10", VA = "0x2108B10")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0x2108BA0", Offset = "0x2108BA0", VA = "0x2108BA0")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0x2108C48", Offset = "0x2108C48", VA = "0x2108C48")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0x2108CF0", Offset = "0x2108CF0", VA = "0x2108CF0")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FCF")]
	[Address(RVA = "0x2108D98", Offset = "0x2108D98", VA = "0x2108D98")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FD0")]
	[Address(RVA = "0x2108E30", Offset = "0x2108E30", VA = "0x2108E30")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6001FD1")]
	[Address(RVA = "0x2108EA4", Offset = "0x2108EA4", VA = "0x2108EA4")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FD2")]
	[Address(RVA = "0x2108F3C", Offset = "0x2108F3C", VA = "0x2108F3C")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FD3")]
	[Address(RVA = "0x2108FD4", Offset = "0x2108FD4", VA = "0x2108FD4")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6001FD4")]
	[Address(RVA = "0x2109048", Offset = "0x2109048", VA = "0x2109048")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FD5")]
	[Address(RVA = "0x21090C8", Offset = "0x21090C8", VA = "0x21090C8")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FD6")]
	[Address(RVA = "0x2109160", Offset = "0x2109160", VA = "0x2109160")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FD7")]
	[Address(RVA = "0x21091F0", Offset = "0x21091F0", VA = "0x21091F0")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FD8")]
	[Address(RVA = "0x2109280", Offset = "0x2109280", VA = "0x2109280")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FD9")]
	[Address(RVA = "0x2109328", Offset = "0x2109328", VA = "0x2109328")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FDA")]
	[Address(RVA = "0x21093B8", Offset = "0x21093B8", VA = "0x21093B8")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FDB")]
	[Address(RVA = "0x2109478", Offset = "0x2109478", VA = "0x2109478")]
	public static extern int CSharp_GetDeviceList__SWIG_0(uint jarg1, uint jarg2, out uint jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001FDC")]
	[Address(RVA = "0x2109520", Offset = "0x2109520", VA = "0x2109520")]
	public static extern int CSharp_GetDeviceList__SWIG_1(uint jarg1, out uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001FDD")]
	[Address(RVA = "0x21095B8", Offset = "0x21095B8", VA = "0x21095B8")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FDE")]
	[Address(RVA = "0x2109648", Offset = "0x2109648", VA = "0x2109648")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FDF")]
	[Address(RVA = "0x21096C8", Offset = "0x21096C8", VA = "0x21096C8")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FE0")]
	[Address(RVA = "0x2109748", Offset = "0x2109748", VA = "0x2109748")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001FE1")]
	[Address(RVA = "0x21097BC", Offset = "0x21097BC", VA = "0x21097BC")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6001FE2")]
	[Address(RVA = "0x2109830", Offset = "0x2109830", VA = "0x2109830")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6001FE3")]
	[Address(RVA = "0x21098A4", Offset = "0x21098A4", VA = "0x21098A4")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FE4")]
	[Address(RVA = "0x2109934", Offset = "0x2109934", VA = "0x2109934")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FE5")]
	[Address(RVA = "0x21099B4", Offset = "0x21099B4", VA = "0x21099B4")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FE6")]
	[Address(RVA = "0x2109A44", Offset = "0x2109A44", VA = "0x2109A44")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FE7")]
	[Address(RVA = "0x2109AC4", Offset = "0x2109AC4", VA = "0x2109AC4")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FE8")]
	[Address(RVA = "0x2109B54", Offset = "0x2109B54", VA = "0x2109B54")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FE9")]
	[Address(RVA = "0x2109BD4", Offset = "0x2109BD4", VA = "0x2109BD4")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FEA")]
	[Address(RVA = "0x2109C64", Offset = "0x2109C64", VA = "0x2109C64")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FEB")]
	[Address(RVA = "0x2109CE4", Offset = "0x2109CE4", VA = "0x2109CE4")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FEC")]
	[Address(RVA = "0x2109D74", Offset = "0x2109D74", VA = "0x2109D74")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FED")]
	[Address(RVA = "0x2109DF4", Offset = "0x2109DF4", VA = "0x2109DF4")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FEE")]
	[Address(RVA = "0x2109E84", Offset = "0x2109E84", VA = "0x2109E84")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FEF")]
	[Address(RVA = "0x2109F04", Offset = "0x2109F04", VA = "0x2109F04")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FF0")]
	[Address(RVA = "0x2109F94", Offset = "0x2109F94", VA = "0x2109F94")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FF1")]
	[Address(RVA = "0x210A014", Offset = "0x210A014", VA = "0x210A014")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FF2")]
	[Address(RVA = "0x210A0A4", Offset = "0x210A0A4", VA = "0x210A0A4")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FF3")]
	[Address(RVA = "0x210A124", Offset = "0x210A124", VA = "0x210A124")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FF4")]
	[Address(RVA = "0x210A1B4", Offset = "0x210A1B4", VA = "0x210A1B4")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FF5")]
	[Address(RVA = "0x210A234", Offset = "0x210A234", VA = "0x210A234")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6001FF6")]
	[Address(RVA = "0x210A2A8", Offset = "0x210A2A8", VA = "0x210A2A8")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FF7")]
	[Address(RVA = "0x210A328", Offset = "0x210A328", VA = "0x210A328")]
	public static extern void CSharp_AkResourceMonitorDataSummary_totalCPU_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FF8")]
	[Address(RVA = "0x210A3B8", Offset = "0x210A3B8", VA = "0x210A3B8")]
	public static extern float CSharp_AkResourceMonitorDataSummary_totalCPU_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FF9")]
	[Address(RVA = "0x210A438", Offset = "0x210A438", VA = "0x210A438")]
	public static extern void CSharp_AkResourceMonitorDataSummary_pluginCPU_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FFA")]
	[Address(RVA = "0x210A4C8", Offset = "0x210A4C8", VA = "0x210A4C8")]
	public static extern float CSharp_AkResourceMonitorDataSummary_pluginCPU_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FFB")]
	[Address(RVA = "0x210A548", Offset = "0x210A548", VA = "0x210A548")]
	public static extern void CSharp_AkResourceMonitorDataSummary_physicalVoices_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FFC")]
	[Address(RVA = "0x210A5D8", Offset = "0x210A5D8", VA = "0x210A5D8")]
	public static extern uint CSharp_AkResourceMonitorDataSummary_physicalVoices_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FFD")]
	[Address(RVA = "0x210A658", Offset = "0x210A658", VA = "0x210A658")]
	public static extern void CSharp_AkResourceMonitorDataSummary_virtualVoices_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001FFE")]
	[Address(RVA = "0x210A6E8", Offset = "0x210A6E8", VA = "0x210A6E8")]
	public static extern uint CSharp_AkResourceMonitorDataSummary_virtualVoices_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001FFF")]
	[Address(RVA = "0x210A768", Offset = "0x210A768", VA = "0x210A768")]
	public static extern void CSharp_AkResourceMonitorDataSummary_totalVoices_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002000")]
	[Address(RVA = "0x210A7F8", Offset = "0x210A7F8", VA = "0x210A7F8")]
	public static extern uint CSharp_AkResourceMonitorDataSummary_totalVoices_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002001")]
	[Address(RVA = "0x210A878", Offset = "0x210A878", VA = "0x210A878")]
	public static extern void CSharp_AkResourceMonitorDataSummary_nbActiveEvents_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002002")]
	[Address(RVA = "0x210A908", Offset = "0x210A908", VA = "0x210A908")]
	public static extern uint CSharp_AkResourceMonitorDataSummary_nbActiveEvents_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002003")]
	[Address(RVA = "0x210A988", Offset = "0x210A988", VA = "0x210A988")]
	public static extern IntPtr CSharp_new_AkResourceMonitorDataSummary();

	[PreserveSig]
	[Token(Token = "0x6002004")]
	[Address(RVA = "0x210A9FC", Offset = "0x210A9FC", VA = "0x210A9FC")]
	public static extern void CSharp_delete_AkResourceMonitorDataSummary(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002005")]
	[Address(RVA = "0x210AA7C", Offset = "0x210AA7C", VA = "0x210AA7C")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6002006")]
	[Address(RVA = "0x210AAF0", Offset = "0x210AAF0", VA = "0x210AAF0")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6002007")]
	[Address(RVA = "0x210AB64", Offset = "0x210AB64", VA = "0x210AB64")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002008")]
	[Address(RVA = "0x210ABF4", Offset = "0x210ABF4", VA = "0x210ABF4")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002009")]
	[Address(RVA = "0x210AC74", Offset = "0x210AC74", VA = "0x210AC74")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600200A")]
	[Address(RVA = "0x210AD04", Offset = "0x210AD04", VA = "0x210AD04")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600200B")]
	[Address(RVA = "0x210AD84", Offset = "0x210AD84", VA = "0x210AD84")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600200C")]
	[Address(RVA = "0x210AE14", Offset = "0x210AE14", VA = "0x210AE14")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600200D")]
	[Address(RVA = "0x210AE94", Offset = "0x210AE94", VA = "0x210AE94")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x600200E")]
	[Address(RVA = "0x210AF08", Offset = "0x210AF08", VA = "0x210AF08")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600200F")]
	[Address(RVA = "0x210AF88", Offset = "0x210AF88", VA = "0x210AF88")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002010")]
	[Address(RVA = "0x210B018", Offset = "0x210B018", VA = "0x210B018")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002011")]
	[Address(RVA = "0x210B098", Offset = "0x210B098", VA = "0x210B098")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002012")]
	[Address(RVA = "0x210B128", Offset = "0x210B128", VA = "0x210B128")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002013")]
	[Address(RVA = "0x210B1A8", Offset = "0x210B1A8", VA = "0x210B1A8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6002014")]
	[Address(RVA = "0x210B21C", Offset = "0x210B21C", VA = "0x210B21C")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002015")]
	[Address(RVA = "0x210B29C", Offset = "0x210B29C", VA = "0x210B29C")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002016")]
	[Address(RVA = "0x210B32C", Offset = "0x210B32C", VA = "0x210B32C")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002017")]
	[Address(RVA = "0x210B3AC", Offset = "0x210B3AC", VA = "0x210B3AC")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002018")]
	[Address(RVA = "0x210B43C", Offset = "0x210B43C", VA = "0x210B43C")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002019")]
	[Address(RVA = "0x210B4BC", Offset = "0x210B4BC", VA = "0x210B4BC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x600201A")]
	[Address(RVA = "0x210B530", Offset = "0x210B530", VA = "0x210B530")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600201B")]
	[Address(RVA = "0x210B5B0", Offset = "0x210B5B0", VA = "0x210B5B0")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600201C")]
	[Address(RVA = "0x210B640", Offset = "0x210B640", VA = "0x210B640")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600201D")]
	[Address(RVA = "0x210B6C0", Offset = "0x210B6C0", VA = "0x210B6C0")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600201E")]
	[Address(RVA = "0x210B750", Offset = "0x210B750", VA = "0x210B750")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600201F")]
	[Address(RVA = "0x210B7D0", Offset = "0x210B7D0", VA = "0x210B7D0")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6002020")]
	[Address(RVA = "0x210B844", Offset = "0x210B844", VA = "0x210B844")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002021")]
	[Address(RVA = "0x210B8C4", Offset = "0x210B8C4", VA = "0x210B8C4")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002022")]
	[Address(RVA = "0x210B954", Offset = "0x210B954", VA = "0x210B954")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002023")]
	[Address(RVA = "0x210B9D4", Offset = "0x210B9D4", VA = "0x210B9D4")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002024")]
	[Address(RVA = "0x210BA64", Offset = "0x210BA64", VA = "0x210BA64")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002025")]
	[Address(RVA = "0x210BAE4", Offset = "0x210BAE4", VA = "0x210BAE4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6002026")]
	[Address(RVA = "0x210BB58", Offset = "0x210BB58", VA = "0x210BB58")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002027")]
	[Address(RVA = "0x210BBD8", Offset = "0x210BBD8", VA = "0x210BBD8")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002028")]
	[Address(RVA = "0x210BC68", Offset = "0x210BC68", VA = "0x210BC68")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002029")]
	[Address(RVA = "0x210BCE8", Offset = "0x210BCE8", VA = "0x210BCE8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x600202A")]
	[Address(RVA = "0x210BD5C", Offset = "0x210BD5C", VA = "0x210BD5C")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600202B")]
	[Address(RVA = "0x210BDDC", Offset = "0x210BDDC", VA = "0x210BDDC")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600202C")]
	[Address(RVA = "0x210BE6C", Offset = "0x210BE6C", VA = "0x210BE6C")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600202D")]
	[Address(RVA = "0x210BEEC", Offset = "0x210BEEC", VA = "0x210BEEC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x600202E")]
	[Address(RVA = "0x210BF60", Offset = "0x210BF60", VA = "0x210BF60")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600202F")]
	[Address(RVA = "0x210BFE0", Offset = "0x210BFE0", VA = "0x210BFE0")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002030")]
	[Address(RVA = "0x210C070", Offset = "0x210C070", VA = "0x210C070")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002031")]
	[Address(RVA = "0x210C0F0", Offset = "0x210C0F0", VA = "0x210C0F0")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002032")]
	[Address(RVA = "0x210C180", Offset = "0x210C180", VA = "0x210C180")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002033")]
	[Address(RVA = "0x210C200", Offset = "0x210C200", VA = "0x210C200")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002034")]
	[Address(RVA = "0x210C290", Offset = "0x210C290", VA = "0x210C290")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002035")]
	[Address(RVA = "0x210C310", Offset = "0x210C310", VA = "0x210C310")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002036")]
	[Address(RVA = "0x210C3A0", Offset = "0x210C3A0", VA = "0x210C3A0")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002037")]
	[Address(RVA = "0x210C420", Offset = "0x210C420", VA = "0x210C420")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002038")]
	[Address(RVA = "0x210C4B0", Offset = "0x210C4B0", VA = "0x210C4B0")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002039")]
	[Address(RVA = "0x210C530", Offset = "0x210C530", VA = "0x210C530")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600203A")]
	[Address(RVA = "0x210C5C0", Offset = "0x210C5C0", VA = "0x210C5C0")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600203B")]
	[Address(RVA = "0x210C640", Offset = "0x210C640", VA = "0x210C640")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600203C")]
	[Address(RVA = "0x210C6D0", Offset = "0x210C6D0", VA = "0x210C6D0")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600203D")]
	[Address(RVA = "0x210C750", Offset = "0x210C750", VA = "0x210C750")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600203E")]
	[Address(RVA = "0x210C7E0", Offset = "0x210C7E0", VA = "0x210C7E0")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600203F")]
	[Address(RVA = "0x210C860", Offset = "0x210C860", VA = "0x210C860")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002040")]
	[Address(RVA = "0x210C8F0", Offset = "0x210C8F0", VA = "0x210C8F0")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002041")]
	[Address(RVA = "0x210C970", Offset = "0x210C970", VA = "0x210C970")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002042")]
	[Address(RVA = "0x210CA00", Offset = "0x210CA00", VA = "0x210CA00")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002043")]
	[Address(RVA = "0x210CA80", Offset = "0x210CA80", VA = "0x210CA80")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6002044")]
	[Address(RVA = "0x210CB10", Offset = "0x210CB10", VA = "0x210CB10")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002045")]
	[Address(RVA = "0x210CB90", Offset = "0x210CB90", VA = "0x210CB90")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002046")]
	[Address(RVA = "0x210CC20", Offset = "0x210CC20", VA = "0x210CC20")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002047")]
	[Address(RVA = "0x210CCA0", Offset = "0x210CCA0", VA = "0x210CCA0")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002048")]
	[Address(RVA = "0x210CD30", Offset = "0x210CD30", VA = "0x210CD30")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002049")]
	[Address(RVA = "0x210CDB0", Offset = "0x210CDB0", VA = "0x210CDB0")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600204A")]
	[Address(RVA = "0x210CE40", Offset = "0x210CE40", VA = "0x210CE40")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600204B")]
	[Address(RVA = "0x210CEC0", Offset = "0x210CEC0", VA = "0x210CEC0")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600204C")]
	[Address(RVA = "0x210CF50", Offset = "0x210CF50", VA = "0x210CF50")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600204D")]
	[Address(RVA = "0x210CFD0", Offset = "0x210CFD0", VA = "0x210CFD0")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600204E")]
	[Address(RVA = "0x210D060", Offset = "0x210D060", VA = "0x210D060")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600204F")]
	[Address(RVA = "0x210D0E0", Offset = "0x210D0E0", VA = "0x210D0E0")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002050")]
	[Address(RVA = "0x210D170", Offset = "0x210D170", VA = "0x210D170")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002051")]
	[Address(RVA = "0x210D1F0", Offset = "0x210D1F0", VA = "0x210D1F0")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002052")]
	[Address(RVA = "0x210D280", Offset = "0x210D280", VA = "0x210D280")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002053")]
	[Address(RVA = "0x210D300", Offset = "0x210D300", VA = "0x210D300")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6002054")]
	[Address(RVA = "0x210D374", Offset = "0x210D374", VA = "0x210D374")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002055")]
	[Address(RVA = "0x210D3F4", Offset = "0x210D3F4", VA = "0x210D3F4")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002056")]
	[Address(RVA = "0x210D484", Offset = "0x210D484", VA = "0x210D484")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002057")]
	[Address(RVA = "0x210D504", Offset = "0x210D504", VA = "0x210D504")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6002058")]
	[Address(RVA = "0x210D5AC", Offset = "0x210D5AC", VA = "0x210D5AC")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002059")]
	[Address(RVA = "0x210D63C", Offset = "0x210D63C", VA = "0x210D63C")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600205A")]
	[Address(RVA = "0x210D6B0", Offset = "0x210D6B0", VA = "0x210D6B0")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x600205B")]
	[Address(RVA = "0x210D724", Offset = "0x210D724", VA = "0x210D724")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600205C")]
	[Address(RVA = "0x210D7A4", Offset = "0x210D7A4", VA = "0x210D7A4")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600205D")]
	[Address(RVA = "0x210D834", Offset = "0x210D834", VA = "0x210D834")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600205E")]
	[Address(RVA = "0x210D8B4", Offset = "0x210D8B4", VA = "0x210D8B4")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600205F")]
	[Address(RVA = "0x210D934", Offset = "0x210D934", VA = "0x210D934")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6002060")]
	[Address(RVA = "0x210D9CC", Offset = "0x210D9CC", VA = "0x210D9CC")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002061")]
	[Address(RVA = "0x210DA5C", Offset = "0x210DA5C", VA = "0x210DA5C")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002062")]
	[Address(RVA = "0x210DADC", Offset = "0x210DADC", VA = "0x210DADC")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002063")]
	[Address(RVA = "0x210DB5C", Offset = "0x210DB5C", VA = "0x210DB5C")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002064")]
	[Address(RVA = "0x210DBDC", Offset = "0x210DBDC", VA = "0x210DBDC")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002065")]
	[Address(RVA = "0x210DC5C", Offset = "0x210DC5C", VA = "0x210DC5C")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x6002066")]
	[Address(RVA = "0x210DCD0", Offset = "0x210DCD0", VA = "0x210DCD0")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002067")]
	[Address(RVA = "0x210DD50", Offset = "0x210DD50", VA = "0x210DD50")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002068")]
	[Address(RVA = "0x210DDD0", Offset = "0x210DDD0", VA = "0x210DDD0")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002069")]
	[Address(RVA = "0x210DE50", Offset = "0x210DE50", VA = "0x210DE50")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600206A")]
	[Address(RVA = "0x210DEC4", Offset = "0x210DEC4", VA = "0x210DEC4")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600206B")]
	[Address(RVA = "0x210DF44", Offset = "0x210DF44", VA = "0x210DF44")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600206C")]
	[Address(RVA = "0x210DFC4", Offset = "0x210DFC4", VA = "0x210DFC4")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600206D")]
	[Address(RVA = "0x210E044", Offset = "0x210E044", VA = "0x210E044")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600206E")]
	[Address(RVA = "0x210E0B8", Offset = "0x210E0B8", VA = "0x210E0B8")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600206F")]
	[Address(RVA = "0x210E138", Offset = "0x210E138", VA = "0x210E138")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002070")]
	[Address(RVA = "0x210E1B8", Offset = "0x210E1B8", VA = "0x210E1B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002071")]
	[Address(RVA = "0x210E238", Offset = "0x210E238", VA = "0x210E238")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002072")]
	[Address(RVA = "0x210E2B8", Offset = "0x210E2B8", VA = "0x210E2B8")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002073")]
	[Address(RVA = "0x210E338", Offset = "0x210E338", VA = "0x210E338")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002074")]
	[Address(RVA = "0x210E3B8", Offset = "0x210E3B8", VA = "0x210E3B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002075")]
	[Address(RVA = "0x210E438", Offset = "0x210E438", VA = "0x210E438")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002076")]
	[Address(RVA = "0x210E4B8", Offset = "0x210E4B8", VA = "0x210E4B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002077")]
	[Address(RVA = "0x210E538", Offset = "0x210E538", VA = "0x210E538")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002078")]
	[Address(RVA = "0x210E5B8", Offset = "0x210E5B8", VA = "0x210E5B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002079")]
	[Address(RVA = "0x210E638", Offset = "0x210E638", VA = "0x210E638")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600207A")]
	[Address(RVA = "0x210E6B8", Offset = "0x210E6B8", VA = "0x210E6B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600207B")]
	[Address(RVA = "0x210E738", Offset = "0x210E738", VA = "0x210E738")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600207C")]
	[Address(RVA = "0x210E7B8", Offset = "0x210E7B8", VA = "0x210E7B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600207D")]
	[Address(RVA = "0x210E838", Offset = "0x210E838", VA = "0x210E838")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600207E")]
	[Address(RVA = "0x210E8AC", Offset = "0x210E8AC", VA = "0x210E8AC")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600207F")]
	[Address(RVA = "0x210E92C", Offset = "0x210E92C", VA = "0x210E92C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002080")]
	[Address(RVA = "0x210E9AC", Offset = "0x210E9AC", VA = "0x210E9AC")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002081")]
	[Address(RVA = "0x210EA2C", Offset = "0x210EA2C", VA = "0x210EA2C")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002082")]
	[Address(RVA = "0x210EAAC", Offset = "0x210EAAC", VA = "0x210EAAC")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6002083")]
	[Address(RVA = "0x210EB20", Offset = "0x210EB20", VA = "0x210EB20")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002084")]
	[Address(RVA = "0x210EBA0", Offset = "0x210EBA0", VA = "0x210EBA0")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002085")]
	[Address(RVA = "0x210EC20", Offset = "0x210EC20", VA = "0x210EC20")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002086")]
	[Address(RVA = "0x210ECA0", Offset = "0x210ECA0", VA = "0x210ECA0")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002087")]
	[Address(RVA = "0x210ED20", Offset = "0x210ED20", VA = "0x210ED20")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002088")]
	[Address(RVA = "0x210EDA0", Offset = "0x210EDA0", VA = "0x210EDA0")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002089")]
	[Address(RVA = "0x210EE28", Offset = "0x210EE28", VA = "0x210EE28")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600208A")]
	[Address(RVA = "0x210EE9C", Offset = "0x210EE9C", VA = "0x210EE9C")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600208B")]
	[Address(RVA = "0x210EF1C", Offset = "0x210EF1C", VA = "0x210EF1C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600208C")]
	[Address(RVA = "0x210EF9C", Offset = "0x210EF9C", VA = "0x210EF9C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600208D")]
	[Address(RVA = "0x210F01C", Offset = "0x210F01C", VA = "0x210F01C")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600208E")]
	[Address(RVA = "0x210F09C", Offset = "0x210F09C", VA = "0x210F09C")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600208F")]
	[Address(RVA = "0x210F110", Offset = "0x210F110", VA = "0x210F110")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002090")]
	[Address(RVA = "0x210F190", Offset = "0x210F190", VA = "0x210F190")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002091")]
	[Address(RVA = "0x210F210", Offset = "0x210F210", VA = "0x210F210")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002092")]
	[Address(RVA = "0x210F290", Offset = "0x210F290", VA = "0x210F290")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002093")]
	[Address(RVA = "0x210F310", Offset = "0x210F310", VA = "0x210F310")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002094")]
	[Address(RVA = "0x210F390", Offset = "0x210F390", VA = "0x210F390")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002095")]
	[Address(RVA = "0x210F410", Offset = "0x210F410", VA = "0x210F410")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002096")]
	[Address(RVA = "0x210F490", Offset = "0x210F490", VA = "0x210F490")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002097")]
	[Address(RVA = "0x210F510", Offset = "0x210F510", VA = "0x210F510")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002098")]
	[Address(RVA = "0x210F590", Offset = "0x210F590", VA = "0x210F590")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002099")]
	[Address(RVA = "0x210F610", Offset = "0x210F610", VA = "0x210F610")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600209A")]
	[Address(RVA = "0x210F690", Offset = "0x210F690", VA = "0x210F690")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600209B")]
	[Address(RVA = "0x210F710", Offset = "0x210F710", VA = "0x210F710")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600209C")]
	[Address(RVA = "0x210F790", Offset = "0x210F790", VA = "0x210F790")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600209D")]
	[Address(RVA = "0x210F804", Offset = "0x210F804", VA = "0x210F804")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600209E")]
	[Address(RVA = "0x210F884", Offset = "0x210F884", VA = "0x210F884")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600209F")]
	[Address(RVA = "0x210F904", Offset = "0x210F904", VA = "0x210F904")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A0")]
	[Address(RVA = "0x210F984", Offset = "0x210F984", VA = "0x210F984")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A1")]
	[Address(RVA = "0x210FA04", Offset = "0x210FA04", VA = "0x210FA04")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A2")]
	[Address(RVA = "0x210FA84", Offset = "0x210FA84", VA = "0x210FA84")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60020A3")]
	[Address(RVA = "0x210FAF8", Offset = "0x210FAF8", VA = "0x210FAF8")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A4")]
	[Address(RVA = "0x210FB78", Offset = "0x210FB78", VA = "0x210FB78")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A5")]
	[Address(RVA = "0x210FBF8", Offset = "0x210FBF8", VA = "0x210FBF8")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A6")]
	[Address(RVA = "0x210FC78", Offset = "0x210FC78", VA = "0x210FC78")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A7")]
	[Address(RVA = "0x210FCF8", Offset = "0x210FCF8", VA = "0x210FCF8")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60020A8")]
	[Address(RVA = "0x210FD6C", Offset = "0x210FD6C", VA = "0x210FD6C")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020A9")]
	[Address(RVA = "0x210FDEC", Offset = "0x210FDEC", VA = "0x210FDEC")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020AA")]
	[Address(RVA = "0x210FE6C", Offset = "0x210FE6C", VA = "0x210FE6C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020AB")]
	[Address(RVA = "0x210FEEC", Offset = "0x210FEEC", VA = "0x210FEEC")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020AC")]
	[Address(RVA = "0x210FF6C", Offset = "0x210FF6C", VA = "0x210FF6C")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020AD")]
	[Address(RVA = "0x210FFEC", Offset = "0x210FFEC", VA = "0x210FFEC")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020AE")]
	[Address(RVA = "0x211006C", Offset = "0x211006C", VA = "0x211006C")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60020AF")]
	[Address(RVA = "0x21100E0", Offset = "0x21100E0", VA = "0x21100E0")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020B0")]
	[Address(RVA = "0x2110160", Offset = "0x2110160", VA = "0x2110160")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020B1")]
	[Address(RVA = "0x21101E8", Offset = "0x21101E8", VA = "0x21101E8")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60020B2")]
	[Address(RVA = "0x211025C", Offset = "0x211025C", VA = "0x211025C")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020B3")]
	[Address(RVA = "0x21102DC", Offset = "0x21102DC", VA = "0x21102DC")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020B4")]
	[Address(RVA = "0x2110364", Offset = "0x2110364", VA = "0x2110364")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60020B5")]
	[Address(RVA = "0x21103D8", Offset = "0x21103D8", VA = "0x21103D8")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020B6")]
	[Address(RVA = "0x2110458", Offset = "0x2110458", VA = "0x2110458")]
	public static extern void CSharp_LocalOutput(int jarg1, string jarg2, int jarg3, uint jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x60020B7")]
	[Address(RVA = "0x211051C", Offset = "0x211051C", VA = "0x211051C")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60020B8")]
	[Address(RVA = "0x21105AC", Offset = "0x21105AC", VA = "0x21105AC")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x60020B9")]
	[Address(RVA = "0x211061C", Offset = "0x211061C", VA = "0x211061C")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x60020BA")]
	[Address(RVA = "0x2110690", Offset = "0x2110690", VA = "0x2110690")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x60020BB")]
	[Address(RVA = "0x2110700", Offset = "0x2110700", VA = "0x2110700")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60020BC")]
	[Address(RVA = "0x2110780", Offset = "0x2110780", VA = "0x2110780")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60020BD")]
	[Address(RVA = "0x2110810", Offset = "0x2110810", VA = "0x2110810")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x60020BE")]
	[Address(RVA = "0x2110884", Offset = "0x2110884", VA = "0x2110884")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020BF")]
	[Address(RVA = "0x2110904", Offset = "0x2110904", VA = "0x2110904")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60020C0")]
	[Address(RVA = "0x21109C4", Offset = "0x21109C4", VA = "0x21109C4")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60020C1")]
	[Address(RVA = "0x2110A74", Offset = "0x2110A74", VA = "0x2110A74")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60020C2")]
	[Address(RVA = "0x2110B1C", Offset = "0x2110B1C", VA = "0x2110B1C")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60020C3")]
	[Address(RVA = "0x2110BB4", Offset = "0x2110BB4", VA = "0x2110BB4")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60020C4")]
	[Address(RVA = "0x2110C44", Offset = "0x2110C44", VA = "0x2110C44")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60020C5")]
	[Address(RVA = "0x2110D1C", Offset = "0x2110D1C", VA = "0x2110D1C")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60020C6")]
	[Address(RVA = "0x2110DE4", Offset = "0x2110DE4", VA = "0x2110DE4")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60020C7")]
	[Address(RVA = "0x2110EA4", Offset = "0x2110EA4", VA = "0x2110EA4")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60020C8")]
	[Address(RVA = "0x2110F54", Offset = "0x2110F54", VA = "0x2110F54")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60020C9")]
	[Address(RVA = "0x2110FFC", Offset = "0x2110FFC", VA = "0x2110FFC")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x60020CA")]
	[Address(RVA = "0x2111070", Offset = "0x2111070", VA = "0x2111070")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60020CB")]
	[Address(RVA = "0x21110F0", Offset = "0x21110F0", VA = "0x21110F0")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020CC")]
	[Address(RVA = "0x2111170", Offset = "0x2111170", VA = "0x2111170")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60020CD")]
	[Address(RVA = "0x2111220", Offset = "0x2111220", VA = "0x2111220")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60020CE")]
	[Address(RVA = "0x21112C0", Offset = "0x21112C0", VA = "0x21112C0")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60020CF")]
	[Address(RVA = "0x2111358", Offset = "0x2111358", VA = "0x2111358")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x60020D0")]
	[Address(RVA = "0x21113F0", Offset = "0x21113F0", VA = "0x21113F0")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020D1")]
	[Address(RVA = "0x2111480", Offset = "0x2111480", VA = "0x2111480")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020D2")]
	[Address(RVA = "0x2111500", Offset = "0x2111500", VA = "0x2111500")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60020D3")]
	[Address(RVA = "0x2111590", Offset = "0x2111590", VA = "0x2111590")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020D4")]
	[Address(RVA = "0x2111610", Offset = "0x2111610", VA = "0x2111610")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60020D5")]
	[Address(RVA = "0x21116A0", Offset = "0x21116A0", VA = "0x21116A0")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020D6")]
	[Address(RVA = "0x2111720", Offset = "0x2111720", VA = "0x2111720")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60020D7")]
	[Address(RVA = "0x21117B0", Offset = "0x21117B0", VA = "0x21117B0")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020D8")]
	[Address(RVA = "0x2111838", Offset = "0x2111838", VA = "0x2111838")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60020D9")]
	[Address(RVA = "0x21118C8", Offset = "0x21118C8", VA = "0x21118C8")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020DA")]
	[Address(RVA = "0x2111948", Offset = "0x2111948", VA = "0x2111948")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60020DB")]
	[Address(RVA = "0x21119D8", Offset = "0x21119D8", VA = "0x21119D8")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020DC")]
	[Address(RVA = "0x2111A60", Offset = "0x2111A60", VA = "0x2111A60")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60020DD")]
	[Address(RVA = "0x2111AF0", Offset = "0x2111AF0", VA = "0x2111AF0")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020DE")]
	[Address(RVA = "0x2111B78", Offset = "0x2111B78", VA = "0x2111B78")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020DF")]
	[Address(RVA = "0x2111C08", Offset = "0x2111C08", VA = "0x2111C08")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020E0")]
	[Address(RVA = "0x2111C88", Offset = "0x2111C88", VA = "0x2111C88")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020E1")]
	[Address(RVA = "0x2111D18", Offset = "0x2111D18", VA = "0x2111D18")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020E2")]
	[Address(RVA = "0x2111D98", Offset = "0x2111D98", VA = "0x2111D98")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020E3")]
	[Address(RVA = "0x2111E28", Offset = "0x2111E28", VA = "0x2111E28")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020E4")]
	[Address(RVA = "0x2111EA8", Offset = "0x2111EA8", VA = "0x2111EA8")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020E5")]
	[Address(RVA = "0x2111F38", Offset = "0x2111F38", VA = "0x2111F38")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020E6")]
	[Address(RVA = "0x2111FB8", Offset = "0x2111FB8", VA = "0x2111FB8")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020E7")]
	[Address(RVA = "0x2112048", Offset = "0x2112048", VA = "0x2112048")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020E8")]
	[Address(RVA = "0x21120C8", Offset = "0x21120C8", VA = "0x21120C8")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020E9")]
	[Address(RVA = "0x2112158", Offset = "0x2112158", VA = "0x2112158")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020EA")]
	[Address(RVA = "0x21121D8", Offset = "0x21121D8", VA = "0x21121D8")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020EB")]
	[Address(RVA = "0x2112268", Offset = "0x2112268", VA = "0x2112268")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020EC")]
	[Address(RVA = "0x21122E8", Offset = "0x21122E8", VA = "0x21122E8")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020ED")]
	[Address(RVA = "0x2112378", Offset = "0x2112378", VA = "0x2112378")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020EE")]
	[Address(RVA = "0x21123F8", Offset = "0x21123F8", VA = "0x21123F8")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020EF")]
	[Address(RVA = "0x2112488", Offset = "0x2112488", VA = "0x2112488")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020F0")]
	[Address(RVA = "0x2112508", Offset = "0x2112508", VA = "0x2112508")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020F1")]
	[Address(RVA = "0x2112598", Offset = "0x2112598", VA = "0x2112598")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020F2")]
	[Address(RVA = "0x2112618", Offset = "0x2112618", VA = "0x2112618")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60020F3")]
	[Address(RVA = "0x21126A8", Offset = "0x21126A8", VA = "0x21126A8")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020F4")]
	[Address(RVA = "0x2112728", Offset = "0x2112728", VA = "0x2112728")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x60020F5")]
	[Address(RVA = "0x211279C", Offset = "0x211279C", VA = "0x211279C")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020F6")]
	[Address(RVA = "0x211281C", Offset = "0x211281C", VA = "0x211281C")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60020F7")]
	[Address(RVA = "0x21128AC", Offset = "0x21128AC", VA = "0x21128AC")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020F8")]
	[Address(RVA = "0x211292C", Offset = "0x211292C", VA = "0x211292C")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60020F9")]
	[Address(RVA = "0x21129BC", Offset = "0x21129BC", VA = "0x21129BC")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020FA")]
	[Address(RVA = "0x2112A3C", Offset = "0x2112A3C", VA = "0x2112A3C")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60020FB")]
	[Address(RVA = "0x2112ACC", Offset = "0x2112ACC", VA = "0x2112ACC")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020FC")]
	[Address(RVA = "0x2112B4C", Offset = "0x2112B4C", VA = "0x2112B4C")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60020FD")]
	[Address(RVA = "0x2112BCC", Offset = "0x2112BCC", VA = "0x2112BCC")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60020FE")]
	[Address(RVA = "0x2112C40", Offset = "0x2112C40", VA = "0x2112C40")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60020FF")]
	[Address(RVA = "0x2112CD0", Offset = "0x2112CD0", VA = "0x2112CD0")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6002100")]
	[Address(RVA = "0x2112D44", Offset = "0x2112D44", VA = "0x2112D44")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002101")]
	[Address(RVA = "0x2112DC4", Offset = "0x2112DC4", VA = "0x2112DC4")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002102")]
	[Address(RVA = "0x2112E54", Offset = "0x2112E54", VA = "0x2112E54")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002103")]
	[Address(RVA = "0x2112EE4", Offset = "0x2112EE4", VA = "0x2112EE4")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6002104")]
	[Address(RVA = "0x2112F94", Offset = "0x2112F94", VA = "0x2112F94")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6002105")]
	[Address(RVA = "0x211305C", Offset = "0x211305C", VA = "0x211305C")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002106")]
	[Address(RVA = "0x21130F4", Offset = "0x21130F4", VA = "0x21130F4")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002107")]
	[Address(RVA = "0x21131A0", Offset = "0x21131A0", VA = "0x21131A0")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002108")]
	[Address(RVA = "0x2113230", Offset = "0x2113230", VA = "0x2113230")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002109")]
	[Address(RVA = "0x21132D8", Offset = "0x21132D8", VA = "0x21132D8")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600210A")]
	[Address(RVA = "0x2113370", Offset = "0x2113370", VA = "0x2113370")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600210B")]
	[Address(RVA = "0x2113408", Offset = "0x2113408", VA = "0x2113408")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x600210C")]
	[Address(RVA = "0x21134B0", Offset = "0x21134B0", VA = "0x21134B0")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x600210D")]
	[Address(RVA = "0x2113548", Offset = "0x2113548", VA = "0x2113548")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x600210E")]
	[Address(RVA = "0x21135F8", Offset = "0x21135F8", VA = "0x21135F8")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600210F")]
	[Address(RVA = "0x2113688", Offset = "0x2113688", VA = "0x2113688")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6002110")]
	[Address(RVA = "0x2113710", Offset = "0x2113710", VA = "0x2113710")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6002111")]
	[Address(RVA = "0x2113790", Offset = "0x2113790", VA = "0x2113790")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002112")]
	[Address(RVA = "0x2113810", Offset = "0x2113810", VA = "0x2113810")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002113")]
	[Address(RVA = "0x2113890", Offset = "0x2113890", VA = "0x2113890")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6002114")]
	[Address(RVA = "0x21139B8", Offset = "0x21139B8", VA = "0x21139B8")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6002115")]
	[Address(RVA = "0x2113A50", Offset = "0x2113A50", VA = "0x2113A50")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6002116")]
	[Address(RVA = "0x2113AE8", Offset = "0x2113AE8", VA = "0x2113AE8")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002117")]
	[Address(RVA = "0x2113B68", Offset = "0x2113B68", VA = "0x2113B68")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002118")]
	[Address(RVA = "0x2113BE8", Offset = "0x2113BE8", VA = "0x2113BE8")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002119")]
	[Address(RVA = "0x2113C68", Offset = "0x2113C68", VA = "0x2113C68")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600211A")]
	[Address(RVA = "0x2113CE8", Offset = "0x2113CE8", VA = "0x2113CE8")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600211B")]
	[Address(RVA = "0x2113D68", Offset = "0x2113D68", VA = "0x2113D68")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600211C")]
	[Address(RVA = "0x2113DF8", Offset = "0x2113DF8", VA = "0x2113DF8")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600211D")]
	[Address(RVA = "0x2113E80", Offset = "0x2113E80", VA = "0x2113E80")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600211E")]
	[Address(RVA = "0x2113F08", Offset = "0x2113F08", VA = "0x2113F08")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600211F")]
	[Address(RVA = "0x2113F90", Offset = "0x2113F90", VA = "0x2113F90")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002120")]
	[Address(RVA = "0x2114018", Offset = "0x2114018", VA = "0x2114018")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6002121")]
	[Address(RVA = "0x2114098", Offset = "0x2114098", VA = "0x2114098")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002122")]
	[Address(RVA = "0x2114130", Offset = "0x2114130", VA = "0x2114130")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002123")]
	[Address(RVA = "0x21141C0", Offset = "0x21141C0", VA = "0x21141C0")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002124")]
	[Address(RVA = "0x2114240", Offset = "0x2114240", VA = "0x2114240")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002125")]
	[Address(RVA = "0x21142D0", Offset = "0x21142D0", VA = "0x21142D0")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002126")]
	[Address(RVA = "0x2114350", Offset = "0x2114350", VA = "0x2114350")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002127")]
	[Address(RVA = "0x21143E0", Offset = "0x21143E0", VA = "0x21143E0")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002128")]
	[Address(RVA = "0x2114460", Offset = "0x2114460", VA = "0x2114460")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6002129")]
	[Address(RVA = "0x21144D4", Offset = "0x21144D4", VA = "0x21144D4")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600212A")]
	[Address(RVA = "0x2114564", Offset = "0x2114564", VA = "0x2114564")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600212B")]
	[Address(RVA = "0x21145E4", Offset = "0x21145E4", VA = "0x21145E4")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600212C")]
	[Address(RVA = "0x2114674", Offset = "0x2114674", VA = "0x2114674")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600212D")]
	[Address(RVA = "0x211470C", Offset = "0x211470C", VA = "0x211470C")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600212E")]
	[Address(RVA = "0x211479C", Offset = "0x211479C", VA = "0x211479C")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600212F")]
	[Address(RVA = "0x211482C", Offset = "0x211482C", VA = "0x211482C")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002130")]
	[Address(RVA = "0x21148B4", Offset = "0x21148B4", VA = "0x21148B4")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002131")]
	[Address(RVA = "0x2114934", Offset = "0x2114934", VA = "0x2114934")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002132")]
	[Address(RVA = "0x21149C4", Offset = "0x21149C4", VA = "0x21149C4")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002133")]
	[Address(RVA = "0x2114A44", Offset = "0x2114A44", VA = "0x2114A44")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002134")]
	[Address(RVA = "0x2114AC4", Offset = "0x2114AC4", VA = "0x2114AC4")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002135")]
	[Address(RVA = "0x2114B4C", Offset = "0x2114B4C", VA = "0x2114B4C")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002136")]
	[Address(RVA = "0x2114BCC", Offset = "0x2114BCC", VA = "0x2114BCC")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6002137")]
	[Address(RVA = "0x2114C40", Offset = "0x2114C40", VA = "0x2114C40")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(Vector3 jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6002138")]
	[Address(RVA = "0x2114CF8", Offset = "0x2114CF8", VA = "0x2114CF8")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x6002139")]
	[Address(RVA = "0x2114DA0", Offset = "0x2114DA0", VA = "0x2114DA0")]
	public static extern Vector3 CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600213A")]
	[Address(RVA = "0x2114E20", Offset = "0x2114E20", VA = "0x2114E20")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600213B")]
	[Address(RVA = "0x2114EB0", Offset = "0x2114EB0", VA = "0x2114EB0")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600213C")]
	[Address(RVA = "0x2114F30", Offset = "0x2114F30", VA = "0x2114F30")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600213D")]
	[Address(RVA = "0x2114FC0", Offset = "0x2114FC0", VA = "0x2114FC0")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600213E")]
	[Address(RVA = "0x2115040", Offset = "0x2115040", VA = "0x2115040")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600213F")]
	[Address(RVA = "0x21150D0", Offset = "0x21150D0", VA = "0x21150D0")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002140")]
	[Address(RVA = "0x2115150", Offset = "0x2115150", VA = "0x2115150")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002141")]
	[Address(RVA = "0x21151E0", Offset = "0x21151E0", VA = "0x21151E0")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002142")]
	[Address(RVA = "0x2115260", Offset = "0x2115260", VA = "0x2115260")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6002143")]
	[Address(RVA = "0x21152F0", Offset = "0x21152F0", VA = "0x21152F0")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002144")]
	[Address(RVA = "0x2115370", Offset = "0x2115370", VA = "0x2115370")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002145")]
	[Address(RVA = "0x21153F0", Offset = "0x21153F0", VA = "0x21153F0")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6002146")]
	[Address(RVA = "0x2115460", Offset = "0x2115460", VA = "0x2115460")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6002147")]
	[Address(RVA = "0x21154D4", Offset = "0x21154D4", VA = "0x21154D4")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6002148")]
	[Address(RVA = "0x2115548", Offset = "0x2115548", VA = "0x2115548")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6002149")]
	[Address(RVA = "0x21155B8", Offset = "0x21155B8", VA = "0x21155B8")]
	public static extern uint CSharp_kDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x600214A")]
	[Address(RVA = "0x211562C", Offset = "0x211562C", VA = "0x211562C")]
	public static extern uint CSharp_kDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x600214B")]
	[Address(RVA = "0x21156A0", Offset = "0x21156A0", VA = "0x21156A0")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x600214C")]
	[Address(RVA = "0x2115714", Offset = "0x2115714", VA = "0x2115714")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x600214D")]
	[Address(RVA = "0x2115788", Offset = "0x2115788", VA = "0x2115788")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600214E")]
	[Address(RVA = "0x2115818", Offset = "0x2115818", VA = "0x2115818")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600214F")]
	[Address(RVA = "0x2115898", Offset = "0x2115898", VA = "0x2115898")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002150")]
	[Address(RVA = "0x2115928", Offset = "0x2115928", VA = "0x2115928")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002151")]
	[Address(RVA = "0x21159A8", Offset = "0x21159A8", VA = "0x21159A8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6002152")]
	[Address(RVA = "0x2115A38", Offset = "0x2115A38", VA = "0x2115A38")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002153")]
	[Address(RVA = "0x2115AB8", Offset = "0x2115AB8", VA = "0x2115AB8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6002154")]
	[Address(RVA = "0x2115B48", Offset = "0x2115B48", VA = "0x2115B48")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002155")]
	[Address(RVA = "0x2115BC8", Offset = "0x2115BC8", VA = "0x2115BC8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6002156")]
	[Address(RVA = "0x2115C58", Offset = "0x2115C58", VA = "0x2115C58")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002157")]
	[Address(RVA = "0x2115CD8", Offset = "0x2115CD8", VA = "0x2115CD8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uNumberOfPrimaryRays_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002158")]
	[Address(RVA = "0x2115D68", Offset = "0x2115D68", VA = "0x2115D68")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uNumberOfPrimaryRays_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002159")]
	[Address(RVA = "0x2115DE8", Offset = "0x2115DE8", VA = "0x2115DE8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxReflectionOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600215A")]
	[Address(RVA = "0x2115E78", Offset = "0x2115E78", VA = "0x2115E78")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxReflectionOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600215B")]
	[Address(RVA = "0x2115EF8", Offset = "0x2115EF8", VA = "0x2115EF8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600215C")]
	[Address(RVA = "0x2115F88", Offset = "0x2115F88", VA = "0x2115F88")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600215D")]
	[Address(RVA = "0x2116008", Offset = "0x2116008", VA = "0x2116008")]
	public static extern void CSharp_AkSpatialAudioInitSettings_bEnableDiffractionOnReflection_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600215E")]
	[Address(RVA = "0x2116098", Offset = "0x2116098", VA = "0x2116098")]
	public static extern bool CSharp_AkSpatialAudioInitSettings_bEnableDiffractionOnReflection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600215F")]
	[Address(RVA = "0x2116120", Offset = "0x2116120", VA = "0x2116120")]
	public static extern void CSharp_AkSpatialAudioInitSettings_bEnableDirectPathDiffraction_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6002160")]
	[Address(RVA = "0x21161B0", Offset = "0x21161B0", VA = "0x21161B0")]
	public static extern bool CSharp_AkSpatialAudioInitSettings_bEnableDirectPathDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002161")]
	[Address(RVA = "0x2116238", Offset = "0x2116238", VA = "0x2116238")]
	public static extern void CSharp_AkSpatialAudioInitSettings_bEnableTransmission_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6002162")]
	[Address(RVA = "0x21162C8", Offset = "0x21162C8", VA = "0x21162C8")]
	public static extern bool CSharp_AkSpatialAudioInitSettings_bEnableTransmission_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002163")]
	[Address(RVA = "0x2116350", Offset = "0x2116350", VA = "0x2116350")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002164")]
	[Address(RVA = "0x21163D0", Offset = "0x21163D0", VA = "0x21163D0")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6002165")]
	[Address(RVA = "0x2116444", Offset = "0x2116444", VA = "0x2116444")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(Vector3 jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6002166")]
	[Address(RVA = "0x21164FC", Offset = "0x21164FC", VA = "0x21164FC")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002167")]
	[Address(RVA = "0x211657C", Offset = "0x211657C", VA = "0x211657C")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002168")]
	[Address(RVA = "0x211660C", Offset = "0x211660C", VA = "0x211660C")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6002169")]
	[Address(RVA = "0x21166B0", Offset = "0x21166B0", VA = "0x21166B0")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600216A")]
	[Address(RVA = "0x2116740", Offset = "0x2116740", VA = "0x2116740")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600216B")]
	[Address(RVA = "0x21167C0", Offset = "0x21167C0", VA = "0x21167C0")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600216C")]
	[Address(RVA = "0x2116834", Offset = "0x2116834", VA = "0x2116834")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x600216D")]
	[Address(RVA = "0x21168DC", Offset = "0x21168DC", VA = "0x21168DC")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600216E")]
	[Address(RVA = "0x211696C", Offset = "0x211696C", VA = "0x211696C")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600216F")]
	[Address(RVA = "0x21169EC", Offset = "0x21169EC", VA = "0x21169EC")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6002170")]
	[Address(RVA = "0x2116A7C", Offset = "0x2116A7C", VA = "0x2116A7C")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002171")]
	[Address(RVA = "0x2116AFC", Offset = "0x2116AFC", VA = "0x2116AFC")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6002172")]
	[Address(RVA = "0x2116B8C", Offset = "0x2116B8C", VA = "0x2116B8C")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002173")]
	[Address(RVA = "0x2116C0C", Offset = "0x2116C0C", VA = "0x2116C0C")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6002174")]
	[Address(RVA = "0x2116C9C", Offset = "0x2116C9C", VA = "0x2116C9C")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002175")]
	[Address(RVA = "0x2116D1C", Offset = "0x2116D1C", VA = "0x2116D1C")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002176")]
	[Address(RVA = "0x2116D9C", Offset = "0x2116D9C", VA = "0x2116D9C")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6002177")]
	[Address(RVA = "0x2116E10", Offset = "0x2116E10", VA = "0x2116E10")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002178")]
	[Address(RVA = "0x2116EA0", Offset = "0x2116EA0", VA = "0x2116EA0")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002179")]
	[Address(RVA = "0x2116F20", Offset = "0x2116F20", VA = "0x2116F20")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x600217A")]
	[Address(RVA = "0x2116F94", Offset = "0x2116F94", VA = "0x2116F94")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600217B")]
	[Address(RVA = "0x2117024", Offset = "0x2117024", VA = "0x2117024")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600217C")]
	[Address(RVA = "0x21170A4", Offset = "0x21170A4", VA = "0x21170A4")]
	public static extern void CSharp_AkAcousticSurface_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600217D")]
	[Address(RVA = "0x2117134", Offset = "0x2117134", VA = "0x2117134")]
	public static extern float CSharp_AkAcousticSurface_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600217E")]
	[Address(RVA = "0x21171B4", Offset = "0x21171B4", VA = "0x21171B4")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600217F")]
	[Address(RVA = "0x2117258", Offset = "0x2117258", VA = "0x2117258")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002180")]
	[Address(RVA = "0x21172D8", Offset = "0x21172D8", VA = "0x21172D8")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002181")]
	[Address(RVA = "0x2117358", Offset = "0x2117358", VA = "0x2117358")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002182")]
	[Address(RVA = "0x21173D8", Offset = "0x21173D8", VA = "0x21173D8")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6002183")]
	[Address(RVA = "0x211744C", Offset = "0x211744C", VA = "0x211744C")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002184")]
	[Address(RVA = "0x21174DC", Offset = "0x21174DC", VA = "0x21174DC")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002185")]
	[Address(RVA = "0x211755C", Offset = "0x211755C", VA = "0x211755C")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x6002186")]
	[Address(RVA = "0x2117604", Offset = "0x2117604", VA = "0x2117604")]
	public static extern Vector3 CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002187")]
	[Address(RVA = "0x2117684", Offset = "0x2117684", VA = "0x2117684")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002188")]
	[Address(RVA = "0x2117714", Offset = "0x2117714", VA = "0x2117714")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002189")]
	[Address(RVA = "0x2117794", Offset = "0x2117794", VA = "0x2117794")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600218A")]
	[Address(RVA = "0x2117824", Offset = "0x2117824", VA = "0x2117824")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600218B")]
	[Address(RVA = "0x21178A4", Offset = "0x21178A4", VA = "0x21178A4")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600218C")]
	[Address(RVA = "0x2117934", Offset = "0x2117934", VA = "0x2117934")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600218D")]
	[Address(RVA = "0x21179B4", Offset = "0x21179B4", VA = "0x21179B4")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600218E")]
	[Address(RVA = "0x2117A44", Offset = "0x2117A44", VA = "0x2117A44")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600218F")]
	[Address(RVA = "0x2117ACC", Offset = "0x2117ACC", VA = "0x2117ACC")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6002190")]
	[Address(RVA = "0x2117B40", Offset = "0x2117B40", VA = "0x2117B40")]
	public static extern Vector3 CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002191")]
	[Address(RVA = "0x2117BD0", Offset = "0x2117BD0", VA = "0x2117BD0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002192")]
	[Address(RVA = "0x2117C60", Offset = "0x2117C60", VA = "0x2117C60")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002193")]
	[Address(RVA = "0x2117CF0", Offset = "0x2117CF0", VA = "0x2117CF0")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002194")]
	[Address(RVA = "0x2117D80", Offset = "0x2117D80", VA = "0x2117D80")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6002195")]
	[Address(RVA = "0x2117DF4", Offset = "0x2117DF4", VA = "0x2117DF4")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002196")]
	[Address(RVA = "0x2117E74", Offset = "0x2117E74", VA = "0x2117E74")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002197")]
	[Address(RVA = "0x2117F04", Offset = "0x2117F04", VA = "0x2117F04")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002198")]
	[Address(RVA = "0x2117F84", Offset = "0x2117F84", VA = "0x2117F84")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002199")]
	[Address(RVA = "0x2118014", Offset = "0x2118014", VA = "0x2118014")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600219A")]
	[Address(RVA = "0x2118094", Offset = "0x2118094", VA = "0x2118094")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600219B")]
	[Address(RVA = "0x2118124", Offset = "0x2118124", VA = "0x2118124")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600219C")]
	[Address(RVA = "0x21181A4", Offset = "0x21181A4", VA = "0x21181A4")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600219D")]
	[Address(RVA = "0x2118234", Offset = "0x2118234", VA = "0x2118234")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600219E")]
	[Address(RVA = "0x21182B4", Offset = "0x21182B4", VA = "0x21182B4")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600219F")]
	[Address(RVA = "0x2118344", Offset = "0x2118344", VA = "0x2118344")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021A0")]
	[Address(RVA = "0x21183C4", Offset = "0x21183C4", VA = "0x21183C4")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60021A1")]
	[Address(RVA = "0x2118438", Offset = "0x2118438", VA = "0x2118438")]
	public static extern Vector3 CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021A2")]
	[Address(RVA = "0x21184C8", Offset = "0x21184C8", VA = "0x21184C8")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021A3")]
	[Address(RVA = "0x2118558", Offset = "0x2118558", VA = "0x2118558")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021A4")]
	[Address(RVA = "0x21185E8", Offset = "0x21185E8", VA = "0x21185E8")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021A5")]
	[Address(RVA = "0x2118678", Offset = "0x2118678", VA = "0x2118678")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021A6")]
	[Address(RVA = "0x2118708", Offset = "0x2118708", VA = "0x2118708")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60021A7")]
	[Address(RVA = "0x211877C", Offset = "0x211877C", VA = "0x211877C")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021A8")]
	[Address(RVA = "0x21187FC", Offset = "0x21187FC", VA = "0x21187FC")]
	public static extern IntPtr CSharp_new_AkRoomParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60021A9")]
	[Address(RVA = "0x2118870", Offset = "0x2118870", VA = "0x2118870")]
	public static extern IntPtr CSharp_new_AkRoomParams__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021AA")]
	[Address(RVA = "0x21188F0", Offset = "0x21188F0", VA = "0x21188F0")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x60021AB")]
	[Address(RVA = "0x2118998", Offset = "0x2118998", VA = "0x2118998")]
	public static extern Vector3 CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021AC")]
	[Address(RVA = "0x2118A18", Offset = "0x2118A18", VA = "0x2118A18")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x60021AD")]
	[Address(RVA = "0x2118AC0", Offset = "0x2118AC0", VA = "0x2118AC0")]
	public static extern Vector3 CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021AE")]
	[Address(RVA = "0x2118B40", Offset = "0x2118B40", VA = "0x2118B40")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021AF")]
	[Address(RVA = "0x2118BD0", Offset = "0x2118BD0", VA = "0x2118BD0")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021B0")]
	[Address(RVA = "0x2118C50", Offset = "0x2118C50", VA = "0x2118C50")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60021B1")]
	[Address(RVA = "0x2118CE0", Offset = "0x2118CE0", VA = "0x2118CE0")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021B2")]
	[Address(RVA = "0x2118D60", Offset = "0x2118D60", VA = "0x2118D60")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60021B3")]
	[Address(RVA = "0x2118DF0", Offset = "0x2118DF0", VA = "0x2118DF0")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021B4")]
	[Address(RVA = "0x2118E70", Offset = "0x2118E70", VA = "0x2118E70")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60021B5")]
	[Address(RVA = "0x2118F00", Offset = "0x2118F00", VA = "0x2118F00")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021B6")]
	[Address(RVA = "0x2118F80", Offset = "0x2118F80", VA = "0x2118F80")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60021B7")]
	[Address(RVA = "0x2119010", Offset = "0x2119010", VA = "0x2119010")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021B8")]
	[Address(RVA = "0x2119098", Offset = "0x2119098", VA = "0x2119098")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021B9")]
	[Address(RVA = "0x2119118", Offset = "0x2119118", VA = "0x2119118")]
	public static extern int CSharp_SetImageSource(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x60021BA")]
	[Address(RVA = "0x21191C8", Offset = "0x21191C8", VA = "0x21191C8")]
	public static extern int CSharp_RemoveImageSource(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60021BB")]
	[Address(RVA = "0x2119260", Offset = "0x2119260", VA = "0x2119260")]
	public static extern int CSharp_ClearImageSources__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60021BC")]
	[Address(RVA = "0x21192F0", Offset = "0x21192F0", VA = "0x21192F0")]
	public static extern int CSharp_ClearImageSources__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60021BD")]
	[Address(RVA = "0x2119370", Offset = "0x2119370", VA = "0x2119370")]
	public static extern int CSharp_ClearImageSources__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x60021BE")]
	[Address(RVA = "0x21193E4", Offset = "0x21193E4", VA = "0x21193E4")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60021BF")]
	[Address(RVA = "0x2119464", Offset = "0x2119464", VA = "0x2119464")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, ref Vector3 jarg2, ref Vector3 jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60021C0")]
	[Address(RVA = "0x2119514", Offset = "0x2119514", VA = "0x2119514")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60021C1")]
	[Address(RVA = "0x2119594", Offset = "0x2119594", VA = "0x2119594")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60021C2")]
	[Address(RVA = "0x2119614", Offset = "0x2119614", VA = "0x2119614")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60021C3")]
	[Address(RVA = "0x21196A4", Offset = "0x21196A4", VA = "0x21196A4")]
	public static extern int CSharp_SetReflectionsOrder(uint jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60021C4")]
	[Address(RVA = "0x2119734", Offset = "0x2119734", VA = "0x2119734")]
	public static extern int CSharp_SetNumberOfPrimaryRays(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60021C5")]
	[Address(RVA = "0x21197B4", Offset = "0x21197B4", VA = "0x21197B4")]
	public static extern int CSharp_SetEarlyReflectionsAuxSend(ulong jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021C6")]
	[Address(RVA = "0x2119844", Offset = "0x2119844", VA = "0x2119844")]
	public static extern int CSharp_SetEarlyReflectionsVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60021C7")]
	[Address(RVA = "0x21198D4", Offset = "0x21198D4", VA = "0x21198D4")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60021C8")]
	[Address(RVA = "0x211996C", Offset = "0x211996C", VA = "0x211996C")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x60021C9")]
	[Address(RVA = "0x21199FC", Offset = "0x21199FC", VA = "0x21199FC")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, ref Vector3 jarg2, ref Vector3 jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60021CA")]
	[Address(RVA = "0x2119AAC", Offset = "0x2119AAC", VA = "0x2119AAC")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021CB")]
	[Address(RVA = "0x2119B3C", Offset = "0x2119B3C", VA = "0x2119B3C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021CC")]
	[Address(RVA = "0x2119BBC", Offset = "0x2119BBC", VA = "0x2119BBC")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021CD")]
	[Address(RVA = "0x2119C4C", Offset = "0x2119C4C", VA = "0x2119C4C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021CE")]
	[Address(RVA = "0x2119CCC", Offset = "0x2119CCC", VA = "0x2119CCC")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021CF")]
	[Address(RVA = "0x2119D5C", Offset = "0x2119D5C", VA = "0x2119D5C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021D0")]
	[Address(RVA = "0x2119DDC", Offset = "0x2119DDC", VA = "0x2119DDC")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021D1")]
	[Address(RVA = "0x2119E6C", Offset = "0x2119E6C", VA = "0x2119E6C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021D2")]
	[Address(RVA = "0x2119EEC", Offset = "0x2119EEC", VA = "0x2119EEC")]
	public static extern void CSharp_AkPlatformInitSettings_eAudioAPI_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60021D3")]
	[Address(RVA = "0x2119F7C", Offset = "0x2119F7C", VA = "0x2119F7C")]
	public static extern int CSharp_AkPlatformInitSettings_eAudioAPI_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021D4")]
	[Address(RVA = "0x2119FFC", Offset = "0x2119FFC", VA = "0x2119FFC")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021D5")]
	[Address(RVA = "0x211A08C", Offset = "0x211A08C", VA = "0x211A08C")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021D6")]
	[Address(RVA = "0x211A10C", Offset = "0x211A10C", VA = "0x211A10C")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60021D7")]
	[Address(RVA = "0x211A19C", Offset = "0x211A19C", VA = "0x211A19C")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021D8")]
	[Address(RVA = "0x211A21C", Offset = "0x211A21C", VA = "0x211A21C")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021D9")]
	[Address(RVA = "0x211A2AC", Offset = "0x211A2AC", VA = "0x211A2AC")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021DA")]
	[Address(RVA = "0x211A32C", Offset = "0x211A32C", VA = "0x211A32C")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60021DB")]
	[Address(RVA = "0x211A3BC", Offset = "0x211A3BC", VA = "0x211A3BC")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021DC")]
	[Address(RVA = "0x211A444", Offset = "0x211A444", VA = "0x211A444")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021DD")]
	[Address(RVA = "0x211A4C4", Offset = "0x211A4C4", VA = "0x211A4C4")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021DE")]
	[Address(RVA = "0x211A554", Offset = "0x211A554", VA = "0x211A554")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021DF")]
	[Address(RVA = "0x211A5D4", Offset = "0x211A5D4", VA = "0x211A5D4")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021E0")]
	[Address(RVA = "0x211A664", Offset = "0x211A664", VA = "0x211A664")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021E1")]
	[Address(RVA = "0x211A6E4", Offset = "0x211A6E4", VA = "0x211A6E4")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021E2")]
	[Address(RVA = "0x211A774", Offset = "0x211A774", VA = "0x211A774")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021E3")]
	[Address(RVA = "0x211A7F4", Offset = "0x211A7F4", VA = "0x211A7F4")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021E4")]
	[Address(RVA = "0x211A884", Offset = "0x211A884", VA = "0x211A884")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021E5")]
	[Address(RVA = "0x211A904", Offset = "0x211A904", VA = "0x211A904")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021E6")]
	[Address(RVA = "0x211A994", Offset = "0x211A994", VA = "0x211A994")]
	public static extern uint CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021E7")]
	[Address(RVA = "0x211AA14", Offset = "0x211AA14", VA = "0x211AA14")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021E8")]
	[Address(RVA = "0x211AAA4", Offset = "0x211AAA4", VA = "0x211AAA4")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021E9")]
	[Address(RVA = "0x211AB24", Offset = "0x211AB24", VA = "0x211AB24")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021EA")]
	[Address(RVA = "0x211ABB4", Offset = "0x211ABB4", VA = "0x211ABB4")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021EB")]
	[Address(RVA = "0x211AC34", Offset = "0x211AC34", VA = "0x211AC34")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60021EC")]
	[Address(RVA = "0x211ACC4", Offset = "0x211ACC4", VA = "0x211ACC4")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021ED")]
	[Address(RVA = "0x211AD44", Offset = "0x211AD44", VA = "0x211AD44")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60021EE")]
	[Address(RVA = "0x211ADD4", Offset = "0x211ADD4", VA = "0x211ADD4")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021EF")]
	[Address(RVA = "0x211AE54", Offset = "0x211AE54", VA = "0x211AE54")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021F0")]
	[Address(RVA = "0x211AEE4", Offset = "0x211AEE4", VA = "0x211AEE4")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021F1")]
	[Address(RVA = "0x211AF64", Offset = "0x211AF64", VA = "0x211AF64")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60021F2")]
	[Address(RVA = "0x211AFF4", Offset = "0x211AFF4", VA = "0x211AFF4")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021F3")]
	[Address(RVA = "0x211B07C", Offset = "0x211B07C", VA = "0x211B07C")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021F4")]
	[Address(RVA = "0x211B10C", Offset = "0x211B10C", VA = "0x211B10C")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021F5")]
	[Address(RVA = "0x211B18C", Offset = "0x211B18C", VA = "0x211B18C")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021F6")]
	[Address(RVA = "0x211B20C", Offset = "0x211B20C", VA = "0x211B20C")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60021F7")]
	[Address(RVA = "0x211B29C", Offset = "0x211B29C", VA = "0x211B29C")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021F8")]
	[Address(RVA = "0x211B31C", Offset = "0x211B31C", VA = "0x211B31C")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021F9")]
	[Address(RVA = "0x211B3AC", Offset = "0x211B3AC", VA = "0x211B3AC")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021FA")]
	[Address(RVA = "0x211B42C", Offset = "0x211B42C", VA = "0x211B42C")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60021FB")]
	[Address(RVA = "0x211B4BC", Offset = "0x211B4BC", VA = "0x211B4BC")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021FC")]
	[Address(RVA = "0x211B53C", Offset = "0x211B53C", VA = "0x211B53C")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60021FD")]
	[Address(RVA = "0x211B5CC", Offset = "0x211B5CC", VA = "0x211B5CC")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60021FE")]
	[Address(RVA = "0x211B64C", Offset = "0x211B64C", VA = "0x211B64C")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x60021FF")]
	[Address(RVA = "0x211B6C0", Offset = "0x211B6C0", VA = "0x211B6C0")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002200")]
	[Address(RVA = "0x211B740", Offset = "0x211B740", VA = "0x211B740")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6002201")]
	[Address(RVA = "0x211B7C4", Offset = "0x211B7C4", VA = "0x211B7C4")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6002202")]
	[Address(RVA = "0x211B834", Offset = "0x211B834", VA = "0x211B834")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6002203")]
	[Address(RVA = "0x211B8D8", Offset = "0x211B8D8", VA = "0x211B8D8")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002204")]
	[Address(RVA = "0x211B958", Offset = "0x211B958", VA = "0x211B958")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6002205")]
	[Address(RVA = "0x211B9CC", Offset = "0x211B9CC", VA = "0x211B9CC")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002206")]
	[Address(RVA = "0x211BA5C", Offset = "0x211BA5C", VA = "0x211BA5C")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002207")]
	[Address(RVA = "0x211BADC", Offset = "0x211BADC", VA = "0x211BADC")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6002208")]
	[Address(RVA = "0x211BB6C", Offset = "0x211BB6C", VA = "0x211BB6C")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002209")]
	[Address(RVA = "0x211BBEC", Offset = "0x211BBEC", VA = "0x211BBEC")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600220A")]
	[Address(RVA = "0x211BC7C", Offset = "0x211BC7C", VA = "0x211BC7C")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600220B")]
	[Address(RVA = "0x211BCFC", Offset = "0x211BCFC", VA = "0x211BCFC")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600220C")]
	[Address(RVA = "0x211BD8C", Offset = "0x211BD8C", VA = "0x211BD8C")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600220D")]
	[Address(RVA = "0x211BE0C", Offset = "0x211BE0C", VA = "0x211BE0C")]
	public static extern void CSharp_AkCommunicationSettings_commSystem_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600220E")]
	[Address(RVA = "0x211BE9C", Offset = "0x211BE9C", VA = "0x211BE9C")]
	public static extern int CSharp_AkCommunicationSettings_commSystem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600220F")]
	[Address(RVA = "0x211BF1C", Offset = "0x211BF1C", VA = "0x211BF1C")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6002210")]
	[Address(RVA = "0x211BFAC", Offset = "0x211BFAC", VA = "0x211BFAC")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002211")]
	[Address(RVA = "0x211C034", Offset = "0x211C034", VA = "0x211C034")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6002212")]
	[Address(RVA = "0x211C0D8", Offset = "0x211C0D8", VA = "0x211C0D8")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002213")]
	[Address(RVA = "0x211C158", Offset = "0x211C158", VA = "0x211C158")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002214")]
	[Address(RVA = "0x211C1D8", Offset = "0x211C1D8", VA = "0x211C1D8")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x6002215")]
	[Address(RVA = "0x211C24C", Offset = "0x211C24C", VA = "0x211C24C")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002216")]
	[Address(RVA = "0x211C2CC", Offset = "0x211C2CC", VA = "0x211C2CC")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002217")]
	[Address(RVA = "0x211C35C", Offset = "0x211C35C", VA = "0x211C35C")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002218")]
	[Address(RVA = "0x211C3DC", Offset = "0x211C3DC", VA = "0x211C3DC")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002219")]
	[Address(RVA = "0x211C46C", Offset = "0x211C46C", VA = "0x211C46C")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600221A")]
	[Address(RVA = "0x211C4EC", Offset = "0x211C4EC", VA = "0x211C4EC")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600221B")]
	[Address(RVA = "0x211C57C", Offset = "0x211C57C", VA = "0x211C57C")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600221C")]
	[Address(RVA = "0x211C5FC", Offset = "0x211C5FC", VA = "0x211C5FC")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600221D")]
	[Address(RVA = "0x211C68C", Offset = "0x211C68C", VA = "0x211C68C")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600221E")]
	[Address(RVA = "0x211C70C", Offset = "0x211C70C", VA = "0x211C70C")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600221F")]
	[Address(RVA = "0x211C79C", Offset = "0x211C79C", VA = "0x211C79C")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002220")]
	[Address(RVA = "0x211C81C", Offset = "0x211C81C", VA = "0x211C81C")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002221")]
	[Address(RVA = "0x211C8AC", Offset = "0x211C8AC", VA = "0x211C8AC")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002222")]
	[Address(RVA = "0x211C92C", Offset = "0x211C92C", VA = "0x211C92C")]
	public static extern void CSharp_AkInitializationSettings_useAsyncOpen_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6002223")]
	[Address(RVA = "0x211C9BC", Offset = "0x211C9BC", VA = "0x211C9BC")]
	public static extern bool CSharp_AkInitializationSettings_useAsyncOpen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002224")]
	[Address(RVA = "0x211CA44", Offset = "0x211CA44", VA = "0x211CA44")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6002225")]
	[Address(RVA = "0x211CAB8", Offset = "0x211CAB8", VA = "0x211CAB8")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002226")]
	[Address(RVA = "0x211CB38", Offset = "0x211CB38", VA = "0x211CB38")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6002227")]
	[Address(RVA = "0x211CBE0", Offset = "0x211CBE0", VA = "0x211CBE0")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002228")]
	[Address(RVA = "0x211CC90", Offset = "0x211CC90", VA = "0x211CC90")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002229")]
	[Address(RVA = "0x211CD28", Offset = "0x211CD28", VA = "0x211CD28")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600222A")]
	[Address(RVA = "0x211CDA8", Offset = "0x211CDA8", VA = "0x211CDA8")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600222B")]
	[Address(RVA = "0x211CE38", Offset = "0x211CE38", VA = "0x211CE38")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600222C")]
	[Address(RVA = "0x211CEAC", Offset = "0x211CEAC", VA = "0x211CEAC")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600222D")]
	[Address(RVA = "0x211CF3C", Offset = "0x211CF3C", VA = "0x211CF3C")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600222E")]
	[Address(RVA = "0x211CFBC", Offset = "0x211CFBC", VA = "0x211CFBC")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600222F")]
	[Address(RVA = "0x211D04C", Offset = "0x211D04C", VA = "0x211D04C")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002230")]
	[Address(RVA = "0x211D0CC", Offset = "0x211D0CC", VA = "0x211D0CC")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6002231")]
	[Address(RVA = "0x211D170", Offset = "0x211D170", VA = "0x211D170")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002232")]
	[Address(RVA = "0x211D1F0", Offset = "0x211D1F0", VA = "0x211D1F0")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6002233")]
	[Address(RVA = "0x211D280", Offset = "0x211D280", VA = "0x211D280")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002234")]
	[Address(RVA = "0x211D300", Offset = "0x211D300", VA = "0x211D300")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002235")]
	[Address(RVA = "0x211D390", Offset = "0x211D390", VA = "0x211D390")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002236")]
	[Address(RVA = "0x211D410", Offset = "0x211D410", VA = "0x211D410")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002237")]
	[Address(RVA = "0x211D4A0", Offset = "0x211D4A0", VA = "0x211D4A0")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002238")]
	[Address(RVA = "0x211D520", Offset = "0x211D520", VA = "0x211D520")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002239")]
	[Address(RVA = "0x211D5A0", Offset = "0x211D5A0", VA = "0x211D5A0")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600223A")]
	[Address(RVA = "0x211D620", Offset = "0x211D620", VA = "0x211D620")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600223B")]
	[Address(RVA = "0x211D6A0", Offset = "0x211D6A0", VA = "0x211D6A0")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x600223C")]
	[Address(RVA = "0x211D710", Offset = "0x211D710", VA = "0x211D710")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600223D")]
	[Address(RVA = "0x211D790", Offset = "0x211D790", VA = "0x211D790")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600223E")]
	[Address(RVA = "0x211D810", Offset = "0x211D810", VA = "0x211D810")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600223F")]
	[Address(RVA = "0x211D8BC", Offset = "0x211D8BC", VA = "0x211D8BC")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6002240")]
	[Address(RVA = "0x211D954", Offset = "0x211D954", VA = "0x211D954")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6002241")]
	[Address(RVA = "0x211D9EC", Offset = "0x211D9EC", VA = "0x211D9EC")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002242")]
	[Address(RVA = "0x211DA94", Offset = "0x211DA94", VA = "0x211DA94")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6002243")]
	[Address(RVA = "0x211DB2C", Offset = "0x211DB2C", VA = "0x211DB2C")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6002244")]
	[Address(RVA = "0x211DBC4", Offset = "0x211DBC4", VA = "0x211DBC4")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6002245")]
	[Address(RVA = "0x211DC5C", Offset = "0x211DC5C", VA = "0x211DC5C")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002246")]
	[Address(RVA = "0x211DD0C", Offset = "0x211DD0C", VA = "0x211DD0C")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6002247")]
	[Address(RVA = "0x211DDE8", Offset = "0x211DDE8", VA = "0x211DDE8")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_0(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6002248")]
	[Address(RVA = "0x211DED8", Offset = "0x211DED8", VA = "0x211DED8")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_1(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6002249")]
	[Address(RVA = "0x211DFB8", Offset = "0x211DFB8", VA = "0x211DFB8")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_2(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x600224A")]
	[Address(RVA = "0x211E080", Offset = "0x211E080", VA = "0x211E080")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_3(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600224B")]
	[Address(RVA = "0x211E128", Offset = "0x211E128", VA = "0x211E128")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x600224C")]
	[Address(RVA = "0x211E19C", Offset = "0x211E19C", VA = "0x211E19C")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600224D")]
	[Address(RVA = "0x211E21C", Offset = "0x211E21C", VA = "0x211E21C")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x600224E")]
	[Address(RVA = "0x211E290", Offset = "0x211E290", VA = "0x211E290")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);

	[PreserveSig]
	[Token(Token = "0x600224F")]
	[Address(RVA = "0x211E370", Offset = "0x211E370", VA = "0x211E370")]
	public static extern int CSharp_GetSourceMultiplePlayPositions__SWIG_0(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6002250")]
	[Address(RVA = "0x211E580", Offset = "0x211E580", VA = "0x211E580")]
	public static extern int CSharp_GetSourceMultiplePlayPositions__SWIG_1(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6002251")]
	[Address(RVA = "0x211E76C", Offset = "0x211E76C", VA = "0x211E76C")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6002252")]
	[Address(RVA = "0x211E80C", Offset = "0x211E80C", VA = "0x211E80C")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6002253")]
	[Address(RVA = "0x211E8A4", Offset = "0x211E8A4", VA = "0x211E8A4")]
	public static extern int CSharp_AddOutput__SWIG_0(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6002254")]
	[Address(RVA = "0x211E954", Offset = "0x211E954", VA = "0x211E954")]
	public static extern int CSharp_AddOutput__SWIG_1(IntPtr jarg1, out ulong jarg2, ulong[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6002255")]
	[Address(RVA = "0x211E9F0", Offset = "0x211E9F0", VA = "0x211E9F0")]
	public static extern int CSharp_AddOutput__SWIG_2(IntPtr jarg1, out ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6002256")]
	[Address(RVA = "0x211EA80", Offset = "0x211EA80", VA = "0x211EA80")]
	public static extern int CSharp_AddOutput__SWIG_3(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002257")]
	[Address(RVA = "0x211EB00", Offset = "0x211EB00", VA = "0x211EB00")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002258")]
	[Address(RVA = "0x211EB80", Offset = "0x211EB80", VA = "0x211EB80")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002259")]
	[Address(RVA = "0x211EC00", Offset = "0x211EC00", VA = "0x211EC00")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600225A")]
	[Address(RVA = "0x211EC80", Offset = "0x211EC80", VA = "0x211EC80")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600225B")]
	[Address(RVA = "0x211ED00", Offset = "0x211ED00", VA = "0x211ED00")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600225C")]
	[Address(RVA = "0x211ED80", Offset = "0x211ED80", VA = "0x211ED80")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x600225D")]
	[Address(RVA = "0x211EDF4", Offset = "0x211EDF4", VA = "0x211EDF4")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x600225E")]
	[Address(RVA = "0x211EE68", Offset = "0x211EE68", VA = "0x211EE68")]
	public static extern void CSharp_StartResourceMonitoring();

	[PreserveSig]
	[Token(Token = "0x600225F")]
	[Address(RVA = "0x211EED8", Offset = "0x211EED8", VA = "0x211EED8")]
	public static extern void CSharp_StopResourceMonitoring();

	[PreserveSig]
	[Token(Token = "0x6002260")]
	[Address(RVA = "0x211EF48", Offset = "0x211EF48", VA = "0x211EF48")]
	public static extern void CSharp_GetResourceMonitorDataSummary(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002261")]
	[Address(RVA = "0x211EFC8", Offset = "0x211EFC8", VA = "0x211EFC8")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, Vector3 jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x6002262")]
	[Address(RVA = "0x211F0A0", Offset = "0x211F0A0", VA = "0x211F0A0")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6002263")]
	[Address(RVA = "0x211F154", Offset = "0x211F154", VA = "0x211F154")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6002264")]
	[Address(RVA = "0x211F1D4", Offset = "0x211F1D4", VA = "0x211F1D4")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6002265")]
	[Address(RVA = "0x211F254", Offset = "0x211F254", VA = "0x211F254")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, Vector3[] jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x6002266")]
	[Address(RVA = "0x211F350", Offset = "0x211F350", VA = "0x211F350")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_4(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6002267")]
	[Address(RVA = "0x211F428", Offset = "0x211F428", VA = "0x211F428")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_5(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6002268")]
	[Address(RVA = "0x211F4F0", Offset = "0x211F4F0", VA = "0x211F4F0")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_6(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6002269")]
	[Address(RVA = "0x211F5A0", Offset = "0x211F5A0", VA = "0x211F5A0")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_7(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600226A")]
	[Address(RVA = "0x211F630", Offset = "0x211F630", VA = "0x211F630")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600226B")]
	[Address(RVA = "0x211F6B0", Offset = "0x211F6B0", VA = "0x211F6B0")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600226C")]
	[Address(RVA = "0x211F730", Offset = "0x211F730", VA = "0x211F730")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600226D")]
	[Address(RVA = "0x211F7B0", Offset = "0x211F7B0", VA = "0x211F7B0")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600226E")]
	[Address(RVA = "0x211F830", Offset = "0x211F830", VA = "0x211F830")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600226F")]
	[Address(RVA = "0x211F8B0", Offset = "0x211F8B0", VA = "0x211F8B0")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002270")]
	[Address(RVA = "0x211F930", Offset = "0x211F930", VA = "0x211F930")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002271")]
	[Address(RVA = "0x211F9B0", Offset = "0x211F9B0", VA = "0x211F9B0")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6002272")]
	[Address(RVA = "0x211FA30", Offset = "0x211FA30", VA = "0x211FA30")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x6002273")]
	[Address(RVA = "0x211FAB0", Offset = "0x211FAB0", VA = "0x211FAB0")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x20004E1")]
public class AkSoundEngine
{
	[Token(Token = "0x20004E2")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x20004E3")]
	private class AutoObject
	{
		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x20EEBBC", Offset = "0x20EEBBC", VA = "0x20EEBBC")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x20EECEC", Offset = "0x20EECEC", VA = "0x20EECEC", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x4001FA7")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x4001FA8")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x4001FA9")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x4001FAA")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x4001FAB")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x4001FAC")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x4001FAD")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x4001FAE")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x4001FAF")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x4001FB0")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x4001FB1")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x4001FB2")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x4001FB3")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x4001FB4")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x4001FB5")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x4001FB6")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x4001FB7")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x4001FB8")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x4001FB9")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x4001FBA")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x4001FBB")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x4001FBC")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x4001FBD")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x4001FBE")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x4001FBF")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x4001FC0")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x4001FC1")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x4001FC2")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x4001FC3")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x4001FC4")]
	public const int NULL = 0;

	[Token(Token = "0x4001FC5")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x4001FC6")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x4001FC7")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x4001FC8")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x4001FC9")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x4001FCA")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x4001FCB")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x4001FCC")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x4001FCD")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x4001FCE")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x4001FCF")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x4001FD0")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x4001FD1")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x4001FD2")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x4001FD3")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x4001FD4")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x4001FD5")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x4001FD6")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4001FD7")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x4001FD8")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x4001FD9")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4001FDA")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4001FDB")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4001FDC")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4001FDD")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4001FDE")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x4001FDF")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x4001FE0")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x4001FE1")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x4001FE2")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x4001FE3")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x4001FE4")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x4001FE5")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x4001FE6")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4001FE7")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4001FE8")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4001FE9")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4001FEA")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4001FEB")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4001FEC")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4001FED")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4001FEE")]
	public const int AKCODECID_AKOPUS_WEM = 20;

	[Token(Token = "0x4001FEF")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x4001FF0")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x4001FF1")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x4001FF2")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x4001FF3")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x4001FF4")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x4001FF5")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x4001FF6")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x4001FF7")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4001FF8")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4001FF9")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4001FFA")]
	public const int AK_WAVE_FORMAT_OPUS_WEM = 12353;

	[Token(Token = "0x4001FFB")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4001FFC")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001FFD")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001FFE")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001FFF")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4002000")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4002001")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4002002")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x4002003")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x4002004")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x4002005")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x4002006")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4002007")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4002008")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4002009")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x400200A")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x400200B")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x400200C")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x400200D")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x400200E")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x400200F")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4002010")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x4002011")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x4002012")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x4002013")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x4002014")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x4002015")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x4002016")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4002017")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4002018")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4002019")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x400201A")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x400201B")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x400201C")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x400201D")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x400201E")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x400201F")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4002020")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x4002021")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x4002022")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x4002023")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x4002024")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x4002025")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x4002026")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4002027")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4002028")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4002029")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x400202A")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x400202B")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x400202C")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x400202D")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x400202E")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x400202F")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4002030")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x4002031")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x4002032")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x4002033")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x4002034")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x4002035")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x4002036")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4002037")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4002038")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4002039")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x400203A")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x400203B")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x400203C")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x400203D")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x400203E")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x400203F")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4002040")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x4002041")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x4002042")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x4002043")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x4002044")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x4002045")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x4002046")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4002047")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4002048")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4002049")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x400204A")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x400204B")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x400204C")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x400204D")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x400204E")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x400204F")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4002050")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x4002051")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x4002052")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x4002053")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x4002054")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x4002055")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x4002056")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x4002057")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x4002058")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4002059")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x400205A")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x400205B")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x400205C")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x400205D")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x400205E")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x400205F")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4002060")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x4002061")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x4002062")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x4002063")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x4002064")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x4002065")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x4002066")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x4002067")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x4002068")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4002069")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x400206A")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x400206B")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x400206C")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x400206D")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x400206E")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x400206F")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4002070")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x4002071")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x4002072")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x4002073")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x4002074")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x4002075")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x4002076")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x4002077")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x4002078")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x4002079")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x400207A")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x400207B")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x400207C")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x400207D")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x400207E")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x400207F")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x4002080")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x4002081")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x4002082")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x4002083")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x4002084")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x4002085")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x4002086")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x4002087")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x4002088")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x4002089")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x400208A")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x400208B")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x400208C")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x400208D")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x400208E")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x400208F")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x4002090")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x4002091")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x4002092")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x4002093")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x4002094")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x4002095")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x4002096")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x4002097")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x4002098")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x4002099")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x400209A")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x400209B")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x400209C")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x400209D")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x400209E")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x400209F")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40020A0")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40020A1")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40020A2")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40020A3")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40020A4")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40020A5")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40020A6")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40020A7")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40020A8")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40020A9")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40020AA")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40020AB")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40020AC")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40020AD")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40020AE")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40020AF")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40020B0")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40020B1")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40020B2")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40020B3")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40020B4")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40020B5")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40020B6")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40020B7")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40020B8")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40020B9")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40020BA")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40020BB")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40020BC")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40020BD")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40020BE")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40020BF")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40020C0")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40020C1")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40020C2")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40020C3")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40020C4")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40020C5")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40020C6")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40020C7")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40020C8")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40020C9")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40020CA")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40020CB")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40020CC")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40020CD")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40020CE")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40020CF")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40020D0")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40020D1")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40020D2")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40020D3")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40020D4")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40020D5")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40020D6")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x40020D7")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x40020D8")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x40020D9")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x40020DA")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x40020DB")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x40020DC")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x40020DD")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x40020DE")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x40020DF")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x40020E0")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x40020E1")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x40020E2")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x40020E3")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x40020E4")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x40020E5")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x40020E6")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x40020E7")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x40020E8")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x40020E9")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x40020EA")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x40020EB")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x40020EC")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x40020ED")]
	public const int AK_MAX_AMBISONICS_ORDER = 5;

	[Token(Token = "0x40020EE")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x40020EF")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x40020F0")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 8;

	[Token(Token = "0x40020F1")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x40020F2")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x40020F3")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 1.0;

	[Token(Token = "0x40020F4")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x40020F5")]
	public const int AK_DEFAULT_REFLECTIONS_ORDER = 1;

	[Token(Token = "0x40020F6")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x40020F7")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.002;

	[Token(Token = "0x40020F8")]
	public const double AK_SA_DIFFRACTION_DOT_EPSILON = 2E-06;

	[Token(Token = "0x40020F9")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x40020FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x40020FB")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x40020FC")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x40020FD")]
	public const string Deprecation_2019_2_0 = "This functionality is deprecated as of Wwise v2019.2.0 and will be removed in a future release.";

	[Token(Token = "0x40020FE")]
	public const string Deprecation_2019_2_2 = "This functionality is deprecated as of Wwise v2019.2.2 and will be removed in a future release.";

	[Token(Token = "0x40020FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x170002BE")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x6002274")]
		[Address(RVA = "0x23FA954", Offset = "0x23FA954", VA = "0x23FA954")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002BF")]
	public static ushort AK_INT
	{
		[Token(Token = "0x6002275")]
		[Address(RVA = "0x23FA9B0", Offset = "0x23FA9B0", VA = "0x23FA9B0")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170002C0")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x6002276")]
		[Address(RVA = "0x23FAA0C", Offset = "0x23FAA0C", VA = "0x23FAA0C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170002C1")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x6002277")]
		[Address(RVA = "0x23FAA68", Offset = "0x23FAA68", VA = "0x23FAA68")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002C2")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x6002278")]
		[Address(RVA = "0x23FAAC4", Offset = "0x23FAAC4", VA = "0x23FAAC4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002C3")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x6002279")]
		[Address(RVA = "0x23FAB20", Offset = "0x23FAB20", VA = "0x23FAB20")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002C4")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x600227A")]
		[Address(RVA = "0x23FAB7C", Offset = "0x23FAB7C", VA = "0x23FAB7C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002C5")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x600227B")]
		[Address(RVA = "0x23FABD8", Offset = "0x23FABD8", VA = "0x23FABD8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002C6")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x600234F")]
		[Address(RVA = "0x240333C", Offset = "0x240333C", VA = "0x240333C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002C7")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x6002350")]
		[Address(RVA = "0x2403398", Offset = "0x2403398", VA = "0x2403398")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002C8")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x6002386")]
		[Address(RVA = "0x24052D8", Offset = "0x24052D8", VA = "0x24052D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C9")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x6002387")]
		[Address(RVA = "0x2405334", Offset = "0x2405334", VA = "0x2405334")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002CA")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x6002388")]
		[Address(RVA = "0x2405390", Offset = "0x2405390", VA = "0x2405390")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002CB")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x6002389")]
		[Address(RVA = "0x24053EC", Offset = "0x24053EC", VA = "0x24053EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002CC")]
	public static uint kDiffractionMaxEdges
	{
		[Token(Token = "0x600238A")]
		[Address(RVA = "0x2405448", Offset = "0x2405448", VA = "0x2405448")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002CD")]
	public static uint kDiffractionMaxPaths
	{
		[Token(Token = "0x600238B")]
		[Address(RVA = "0x24054A4", Offset = "0x24054A4", VA = "0x24054A4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002CE")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x600238C")]
		[Address(RVA = "0x2405500", Offset = "0x2405500", VA = "0x2405500")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002CF")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x2407AE8", Offset = "0x2407AE8", VA = "0x2407AE8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D0")]
	public static string WwiseVersion
	{
		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x2407DB0", Offset = "0x2407DB0", VA = "0x2407DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600227C")]
	[Address(RVA = "0x23FAC34", Offset = "0x23FAC34", VA = "0x23FAC34")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x600227D")]
	[Address(RVA = "0x23FADBC", Offset = "0x23FADBC", VA = "0x23FADBC")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x600227E")]
	[Address(RVA = "0x23FAF3C", Offset = "0x23FAF3C", VA = "0x23FAF3C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x600227F")]
	[Address(RVA = "0x23FB02C", Offset = "0x23FB02C", VA = "0x23FB02C")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002280")]
	[Address(RVA = "0x23FB090", Offset = "0x23FB090", VA = "0x23FB090")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002281")]
	[Address(RVA = "0x23FB10C", Offset = "0x23FB10C", VA = "0x23FB10C")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002282")]
	[Address(RVA = "0x23FB180", Offset = "0x23FB180", VA = "0x23FB180")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002283")]
	[Address(RVA = "0x23FB1E4", Offset = "0x23FB1E4", VA = "0x23FB1E4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002284")]
	[Address(RVA = "0x23FB260", Offset = "0x23FB260", VA = "0x23FB260")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002285")]
	[Address(RVA = "0x23FB2D4", Offset = "0x23FB2D4", VA = "0x23FB2D4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002286")]
	[Address(RVA = "0x23FB338", Offset = "0x23FB338", VA = "0x23FB338")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002287")]
	[Address(RVA = "0x23FB3B4", Offset = "0x23FB3B4", VA = "0x23FB3B4")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002288")]
	[Address(RVA = "0x23FB428", Offset = "0x23FB428", VA = "0x23FB428")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002289")]
	[Address(RVA = "0x23FB48C", Offset = "0x23FB48C", VA = "0x23FB48C")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600228A")]
	[Address(RVA = "0x23FB508", Offset = "0x23FB508", VA = "0x23FB508")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600228B")]
	[Address(RVA = "0x23FB57C", Offset = "0x23FB57C", VA = "0x23FB57C")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600228C")]
	[Address(RVA = "0x23FB5E0", Offset = "0x23FB5E0", VA = "0x23FB5E0")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600228D")]
	[Address(RVA = "0x23FB644", Offset = "0x23FB644", VA = "0x23FB644")]
	public static AKRESULT Seek(uint in_playingID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600228E")]
	[Address(RVA = "0x23FB6C0", Offset = "0x23FB6C0", VA = "0x23FB6C0")]
	public static AKRESULT Seek(uint in_playingID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600228F")]
	[Address(RVA = "0x23FB744", Offset = "0x23FB744", VA = "0x23FB744")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002290")]
	[Address(RVA = "0x23FB7C0", Offset = "0x23FB7C0", VA = "0x23FB7C0")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x6002291")]
	[Address(RVA = "0x23FB87C", Offset = "0x23FB87C", VA = "0x23FB87C")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002292")]
	[Address(RVA = "0x23E0FB4", Offset = "0x23E0FB4", VA = "0x23E0FB4")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6002293")]
	[Address(RVA = "0x23FB8E0", Offset = "0x23FB8E0", VA = "0x23FB8E0")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002294")]
	[Address(RVA = "0x23FB958", Offset = "0x23FB958", VA = "0x23FB958")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x6002295")]
	[Address(RVA = "0x23FB9FC", Offset = "0x23FB9FC", VA = "0x23FB9FC")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x6002296")]
	[Address(RVA = "0x23FBA98", Offset = "0x23FBA98", VA = "0x23FBA98")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002297")]
	[Address(RVA = "0x23FBB0C", Offset = "0x23FBB0C", VA = "0x23FBB0C")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002298")]
	[Address(RVA = "0x23FBB70", Offset = "0x23FBB70", VA = "0x23FBB70")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002299")]
	[Address(RVA = "0x23FBBE4", Offset = "0x23FBBE4", VA = "0x23FBBE4")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600229A")]
	[Address(RVA = "0x23FBC48", Offset = "0x23FBC48", VA = "0x23FBC48")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600229B")]
	[Address(RVA = "0x23FBCD4", Offset = "0x23FBCD4", VA = "0x23FBCD4")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600229C")]
	[Address(RVA = "0x23FBD50", Offset = "0x23FBD50", VA = "0x23FBD50")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600229D")]
	[Address(RVA = "0x23FBDDC", Offset = "0x23FBDDC", VA = "0x23FBDDC")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600229E")]
	[Address(RVA = "0x23FBE60", Offset = "0x23FBE60", VA = "0x23FBE60")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600229F")]
	[Address(RVA = "0x23FBECC", Offset = "0x23FBECC", VA = "0x23FBECC")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022A0")]
	[Address(RVA = "0x23FBF30", Offset = "0x23FBF30", VA = "0x23FBF30")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022A1")]
	[Address(RVA = "0x23FBF94", Offset = "0x23FBF94", VA = "0x23FBF94")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022A2")]
	[Address(RVA = "0x23FBFF0", Offset = "0x23FBFF0", VA = "0x23FBFF0")]
	public static AKRESULT RegisterPluginDLL(string in_DllName, string in_DllPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022A3")]
	[Address(RVA = "0x23FC064", Offset = "0x23FC064", VA = "0x23FC064")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022A4")]
	[Address(RVA = "0x23FC0C8", Offset = "0x23FC0C8", VA = "0x23FC0C8")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x60022A5")]
	[Address(RVA = "0x23FC12C", Offset = "0x23FC12C", VA = "0x23FC12C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60022A6")]
	[Address(RVA = "0x23FC2F4", Offset = "0x23FC2F4", VA = "0x23FC2F4")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60022A7")]
	[Address(RVA = "0x23FC4AC", Offset = "0x23FC4AC", VA = "0x23FC4AC")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60022A8")]
	[Address(RVA = "0x23FC634", Offset = "0x23FC634", VA = "0x23FC634")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60022A9")]
	[Address(RVA = "0x23FC734", Offset = "0x23FC734", VA = "0x23FC734")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60022AA")]
	[Address(RVA = "0x23FC8FC", Offset = "0x23FC8FC", VA = "0x23FC8FC")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60022AB")]
	[Address(RVA = "0x23DF758", Offset = "0x23DF758", VA = "0x23DF758")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60022AC")]
	[Address(RVA = "0x23FCAB4", Offset = "0x23FCAB4", VA = "0x23FCAB4")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60022AD")]
	[Address(RVA = "0x23FCBB4", Offset = "0x23FCBB4", VA = "0x23FCBB4")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022AE")]
	[Address(RVA = "0x23FCC9C", Offset = "0x23FCC9C", VA = "0x23FCC9C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022AF")]
	[Address(RVA = "0x23FCD74", Offset = "0x23FCD74", VA = "0x23FCD74")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B0")]
	[Address(RVA = "0x23FCE44", Offset = "0x23FCE44", VA = "0x23FCE44")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B1")]
	[Address(RVA = "0x23FCF04", Offset = "0x23FCF04", VA = "0x23FCF04")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B2")]
	[Address(RVA = "0x23FCF78", Offset = "0x23FCF78", VA = "0x23FCF78")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B3")]
	[Address(RVA = "0x23DFACC", Offset = "0x23DFACC", VA = "0x23DFACC")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B4")]
	[Address(RVA = "0x23FD060", Offset = "0x23FD060", VA = "0x23FD060")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B5")]
	[Address(RVA = "0x23FD130", Offset = "0x23FD130", VA = "0x23FD130")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B6")]
	[Address(RVA = "0x23FD1F0", Offset = "0x23FD1F0", VA = "0x23FD1F0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B7")]
	[Address(RVA = "0x23FD264", Offset = "0x23FD264", VA = "0x23FD264")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B8")]
	[Address(RVA = "0x23FD340", Offset = "0x23FD340", VA = "0x23FD340")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022B9")]
	[Address(RVA = "0x23FD3F8", Offset = "0x23FD3F8", VA = "0x23FD3F8")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022BA")]
	[Address(RVA = "0x23FD45C", Offset = "0x23FD45C", VA = "0x23FD45C")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022BB")]
	[Address(RVA = "0x23FD4B8", Offset = "0x23FD4B8", VA = "0x23FD4B8")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022BC")]
	[Address(RVA = "0x23FD534", Offset = "0x23FD534", VA = "0x23FD534")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022BD")]
	[Address(RVA = "0x23FD5B0", Offset = "0x23FD5B0", VA = "0x23FD5B0")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022BE")]
	[Address(RVA = "0x23FD614", Offset = "0x23FD614", VA = "0x23FD614")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022BF")]
	[Address(RVA = "0x23FD678", Offset = "0x23FD678", VA = "0x23FD678")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C0")]
	[Address(RVA = "0x23FD6F4", Offset = "0x23FD6F4", VA = "0x23FD6F4")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C1")]
	[Address(RVA = "0x23FD770", Offset = "0x23FD770", VA = "0x23FD770")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C2")]
	[Address(RVA = "0x23FD848", Offset = "0x23FD848", VA = "0x23FD848")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C3")]
	[Address(RVA = "0x23FD918", Offset = "0x23FD918", VA = "0x23FD918")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C4")]
	[Address(RVA = "0x23FD9D8", Offset = "0x23FD9D8", VA = "0x23FD9D8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C5")]
	[Address(RVA = "0x23FDAB0", Offset = "0x23FDAB0", VA = "0x23FDAB0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C6")]
	[Address(RVA = "0x23FDB80", Offset = "0x23FDB80", VA = "0x23FDB80")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C7")]
	[Address(RVA = "0x23FDC40", Offset = "0x23FDC40", VA = "0x23FDC40")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C8")]
	[Address(RVA = "0x23FDD20", Offset = "0x23FDD20", VA = "0x23FDD20")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022C9")]
	[Address(RVA = "0x23DE070", Offset = "0x23DE070", VA = "0x23DE070")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022CA")]
	[Address(RVA = "0x23FDDF0", Offset = "0x23FDDF0", VA = "0x23FDDF0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022CB")]
	[Address(RVA = "0x23FDED0", Offset = "0x23FDED0", VA = "0x23FDED0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022CC")]
	[Address(RVA = "0x23FDFA0", Offset = "0x23FDFA0", VA = "0x23FDFA0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022CD")]
	[Address(RVA = "0x23FE068", Offset = "0x23FE068", VA = "0x23FE068")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x60022CE")]
	[Address(RVA = "0x23FE0CC", Offset = "0x23FE0CC", VA = "0x23FE0CC")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x60022CF")]
	[Address(RVA = "0x23FE174", Offset = "0x23FE174", VA = "0x23FE174")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x60022D0")]
	[Address(RVA = "0x23FE1D8", Offset = "0x23FE1D8", VA = "0x23FE1D8")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022D1")]
	[Address(RVA = "0x23FE254", Offset = "0x23FE254", VA = "0x23FE254")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022D2")]
	[Address(RVA = "0x23FE2C8", Offset = "0x23FE2C8", VA = "0x23FE2C8")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022D3")]
	[Address(RVA = "0x23E0044", Offset = "0x23E0044", VA = "0x23E0044")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x60022D4")]
	[Address(RVA = "0x23FE344", Offset = "0x23FE344", VA = "0x23FE344")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x60022D5")]
	[Address(RVA = "0x23FE3A0", Offset = "0x23FE3A0", VA = "0x23FE3A0")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x60022D6")]
	[Address(RVA = "0x23FE41C", Offset = "0x23FE41C", VA = "0x23FE41C")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x60022D7")]
	[Address(RVA = "0x23FE490", Offset = "0x23FE490", VA = "0x23FE490")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x60022D8")]
	[Address(RVA = "0x23FE4F4", Offset = "0x23FE4F4", VA = "0x23FE4F4")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x60022D9")]
	[Address(RVA = "0x23FE580", Offset = "0x23FE580", VA = "0x23FE580")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x60022DA")]
	[Address(RVA = "0x23FE5FC", Offset = "0x23FE5FC", VA = "0x23FE5FC")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x60022DB")]
	[Address(RVA = "0x23FE670", Offset = "0x23FE670", VA = "0x23FE670")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x60022DC")]
	[Address(RVA = "0x23FE6D4", Offset = "0x23FE6D4", VA = "0x23FE6D4")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x60022DD")]
	[Address(RVA = "0x23FE738", Offset = "0x23FE738", VA = "0x23FE738")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x60022DE")]
	[Address(RVA = "0x23FE794", Offset = "0x23FE794", VA = "0x23FE794")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022DF")]
	[Address(RVA = "0x23FE884", Offset = "0x23FE884", VA = "0x23FE884")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E0")]
	[Address(RVA = "0x23FE8E0", Offset = "0x23FE8E0", VA = "0x23FE8E0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E1")]
	[Address(RVA = "0x23FE9B0", Offset = "0x23FE9B0", VA = "0x23FE9B0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E2")]
	[Address(RVA = "0x23FEA70", Offset = "0x23FEA70", VA = "0x23FEA70")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E3")]
	[Address(RVA = "0x23FEB40", Offset = "0x23FEB40", VA = "0x23FEB40")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E4")]
	[Address(RVA = "0x23FEC00", Offset = "0x23FEC00", VA = "0x23FEC00")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E5")]
	[Address(RVA = "0x23FECB0", Offset = "0x23FECB0", VA = "0x23FECB0")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E6")]
	[Address(RVA = "0x23FED0C", Offset = "0x23FED0C", VA = "0x23FED0C")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E7")]
	[Address(RVA = "0x23FED80", Offset = "0x23FED80", VA = "0x23FED80")]
	public static AKRESULT LoadBank(string in_pszString, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E8")]
	[Address(RVA = "0x23FEDF4", Offset = "0x23FEDF4", VA = "0x23FEDF4")]
	public static AKRESULT LoadBank(uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022E9")]
	[Address(RVA = "0x23FEE58", Offset = "0x23FEE58", VA = "0x23FEE58")]
	public static AKRESULT LoadBankMemoryView(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022EA")]
	[Address(RVA = "0x23FEED4", Offset = "0x23FEED4", VA = "0x23FEED4")]
	public static AKRESULT LoadBankMemoryCopy(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022EB")]
	[Address(RVA = "0x23FEF50", Offset = "0x23FEF50", VA = "0x23FEF50")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022EC")]
	[Address(RVA = "0x23FF040", Offset = "0x23FF040", VA = "0x23FF040")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022ED")]
	[Address(RVA = "0x23FF120", Offset = "0x23FF120", VA = "0x23FF120")]
	public static AKRESULT LoadBankMemoryView(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022EE")]
	[Address(RVA = "0x23FF218", Offset = "0x23FF218", VA = "0x23FF218")]
	public static AKRESULT LoadBankMemoryCopy(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022EF")]
	[Address(RVA = "0x23FF310", Offset = "0x23FF310", VA = "0x23FF310")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F0")]
	[Address(RVA = "0x23EA214", Offset = "0x23EA214", VA = "0x23EA214")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F1")]
	[Address(RVA = "0x23FF384", Offset = "0x23FF384", VA = "0x23FF384")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F2")]
	[Address(RVA = "0x23FF474", Offset = "0x23FF474", VA = "0x23FF474")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F3")]
	[Address(RVA = "0x23FF564", Offset = "0x23FF564", VA = "0x23FF564")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x60022F4")]
	[Address(RVA = "0x23FF5C8", Offset = "0x23FF5C8", VA = "0x23FF5C8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F5")]
	[Address(RVA = "0x23FF644", Offset = "0x23FF644", VA = "0x23FF644")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F6")]
	[Address(RVA = "0x23FF6B8", Offset = "0x23FF6B8", VA = "0x23FF6B8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F7")]
	[Address(RVA = "0x23FF734", Offset = "0x23FF734", VA = "0x23FF734")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F8")]
	[Address(RVA = "0x23FF7A8", Offset = "0x23FF7A8", VA = "0x23FF7A8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022F9")]
	[Address(RVA = "0x23FF8A0", Offset = "0x23FF8A0", VA = "0x23FF8A0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022FA")]
	[Address(RVA = "0x23FF990", Offset = "0x23FF990", VA = "0x23FF990")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022FB")]
	[Address(RVA = "0x23FFA88", Offset = "0x23FFA88", VA = "0x23FFA88")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022FC")]
	[Address(RVA = "0x23FFB78", Offset = "0x23FFB78", VA = "0x23FFB78")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022FD")]
	[Address(RVA = "0x23FFBD4", Offset = "0x23FFBD4", VA = "0x23FFBD4")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022FE")]
	[Address(RVA = "0x23FFEAC", Offset = "0x23FFEAC", VA = "0x23FFEAC")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60022FF")]
	[Address(RVA = "0x23FFF28", Offset = "0x23FFF28", VA = "0x23FFF28")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002300")]
	[Address(RVA = "0x240027C", Offset = "0x240027C", VA = "0x240027C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002301")]
	[Address(RVA = "0x2400374", Offset = "0x2400374", VA = "0x2400374")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002302")]
	[Address(RVA = "0x2400400", Offset = "0x2400400", VA = "0x2400400")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002303")]
	[Address(RVA = "0x240048C", Offset = "0x240048C", VA = "0x240048C")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002304")]
	[Address(RVA = "0x2400774", Offset = "0x2400774", VA = "0x2400774")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002305")]
	[Address(RVA = "0x2400808", Offset = "0x2400808", VA = "0x2400808")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002306")]
	[Address(RVA = "0x2400B6C", Offset = "0x2400B6C", VA = "0x2400B6C")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002307")]
	[Address(RVA = "0x23E1F44", Offset = "0x23E1F44", VA = "0x23E1F44")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002308")]
	[Address(RVA = "0x23E229C", Offset = "0x23E229C", VA = "0x23E229C")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002309")]
	[Address(RVA = "0x2400C7C", Offset = "0x2400C7C", VA = "0x2400C7C")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600230A")]
	[Address(RVA = "0x2400D24", Offset = "0x2400D24", VA = "0x2400D24")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600230B")]
	[Address(RVA = "0x23E02AC", Offset = "0x23E02AC", VA = "0x23E02AC")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600230C")]
	[Address(RVA = "0x2400DCC", Offset = "0x2400DCC", VA = "0x2400DCC")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600230D")]
	[Address(RVA = "0x2400EB0", Offset = "0x2400EB0", VA = "0x2400EB0")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600230E")]
	[Address(RVA = "0x2400F84", Offset = "0x2400F84", VA = "0x2400F84")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600230F")]
	[Address(RVA = "0x240106C", Offset = "0x240106C", VA = "0x240106C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002310")]
	[Address(RVA = "0x240114C", Offset = "0x240114C", VA = "0x240114C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002311")]
	[Address(RVA = "0x240121C", Offset = "0x240121C", VA = "0x240121C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002312")]
	[Address(RVA = "0x24012E4", Offset = "0x24012E4", VA = "0x24012E4")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002313")]
	[Address(RVA = "0x2401358", Offset = "0x2401358", VA = "0x2401358")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002314")]
	[Address(RVA = "0x2401440", Offset = "0x2401440", VA = "0x2401440")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002315")]
	[Address(RVA = "0x2401520", Offset = "0x2401520", VA = "0x2401520")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002316")]
	[Address(RVA = "0x23DFD98", Offset = "0x23DFD98", VA = "0x23DFD98")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002317")]
	[Address(RVA = "0x24015F0", Offset = "0x24015F0", VA = "0x24015F0")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002318")]
	[Address(RVA = "0x2401664", Offset = "0x2401664", VA = "0x2401664")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002319")]
	[Address(RVA = "0x2401708", Offset = "0x2401708", VA = "0x2401708")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600231A")]
	[Address(RVA = "0x24017A4", Offset = "0x24017A4", VA = "0x24017A4")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600231B")]
	[Address(RVA = "0x2401830", Offset = "0x2401830", VA = "0x2401830")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600231C")]
	[Address(RVA = "0x24018B4", Offset = "0x24018B4", VA = "0x24018B4")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600231D")]
	[Address(RVA = "0x2401958", Offset = "0x2401958", VA = "0x2401958")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600231E")]
	[Address(RVA = "0x24019F4", Offset = "0x24019F4", VA = "0x24019F4")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600231F")]
	[Address(RVA = "0x2401A80", Offset = "0x2401A80", VA = "0x2401A80")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002320")]
	[Address(RVA = "0x2401B04", Offset = "0x2401B04", VA = "0x2401B04")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002321")]
	[Address(RVA = "0x2401BDC", Offset = "0x2401BDC", VA = "0x2401BDC")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002322")]
	[Address(RVA = "0x2401CAC", Offset = "0x2401CAC", VA = "0x2401CAC")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002323")]
	[Address(RVA = "0x2401D6C", Offset = "0x2401D6C", VA = "0x2401D6C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002324")]
	[Address(RVA = "0x2401E24", Offset = "0x2401E24", VA = "0x2401E24")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002325")]
	[Address(RVA = "0x2401E88", Offset = "0x2401E88", VA = "0x2401E88")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002326")]
	[Address(RVA = "0x2401F60", Offset = "0x2401F60", VA = "0x2401F60")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002327")]
	[Address(RVA = "0x2402030", Offset = "0x2402030", VA = "0x2402030")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002328")]
	[Address(RVA = "0x24020F0", Offset = "0x24020F0", VA = "0x24020F0")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002329")]
	[Address(RVA = "0x24021A8", Offset = "0x24021A8", VA = "0x24021A8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600232A")]
	[Address(RVA = "0x240220C", Offset = "0x240220C", VA = "0x240220C")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600232B")]
	[Address(RVA = "0x23DFC3C", Offset = "0x23DFC3C", VA = "0x23DFC3C")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600232C")]
	[Address(RVA = "0x24022CC", Offset = "0x24022CC", VA = "0x24022CC")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600232D")]
	[Address(RVA = "0x2402384", Offset = "0x2402384", VA = "0x2402384")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600232E")]
	[Address(RVA = "0x240243C", Offset = "0x240243C", VA = "0x240243C")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600232F")]
	[Address(RVA = "0x24024B0", Offset = "0x24024B0", VA = "0x24024B0")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002330")]
	[Address(RVA = "0x2402524", Offset = "0x2402524", VA = "0x2402524")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002331")]
	[Address(RVA = "0x23DFEF0", Offset = "0x23DFEF0", VA = "0x23DFEF0")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002332")]
	[Address(RVA = "0x24025F0", Offset = "0x24025F0", VA = "0x24025F0")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002333")]
	[Address(RVA = "0x240266C", Offset = "0x240266C", VA = "0x240266C")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002334")]
	[Address(RVA = "0x24026E8", Offset = "0x24026E8", VA = "0x24026E8")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002335")]
	[Address(RVA = "0x2402764", Offset = "0x2402764", VA = "0x2402764")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002336")]
	[Address(RVA = "0x24027D8", Offset = "0x24027D8", VA = "0x24027D8")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002337")]
	[Address(RVA = "0x240284C", Offset = "0x240284C", VA = "0x240284C")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002338")]
	[Address(RVA = "0x24028D4", Offset = "0x24028D4", VA = "0x24028D4")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002339")]
	[Address(RVA = "0x23DBD6C", Offset = "0x23DBD6C", VA = "0x23DBD6C")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600233A")]
	[Address(RVA = "0x240295C", Offset = "0x240295C", VA = "0x240295C")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600233B")]
	[Address(RVA = "0x2402A5C", Offset = "0x2402A5C", VA = "0x2402A5C")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600233C")]
	[Address(RVA = "0x2402AC0", Offset = "0x2402AC0", VA = "0x2402AC0")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600233D")]
	[Address(RVA = "0x2402B1C", Offset = "0x2402B1C", VA = "0x2402B1C")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600233E")]
	[Address(RVA = "0x2402B80", Offset = "0x2402B80", VA = "0x2402B80")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600233F")]
	[Address(RVA = "0x2402BE4", Offset = "0x2402BE4", VA = "0x2402BE4")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002340")]
	[Address(RVA = "0x2402C40", Offset = "0x2402C40", VA = "0x2402C40")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002341")]
	[Address(RVA = "0x2402CA4", Offset = "0x2402CA4", VA = "0x2402CA4")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002342")]
	[Address(RVA = "0x2402D48", Offset = "0x2402D48", VA = "0x2402D48")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002343")]
	[Address(RVA = "0x2402DE4", Offset = "0x2402DE4", VA = "0x2402DE4")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002344")]
	[Address(RVA = "0x2402E58", Offset = "0x2402E58", VA = "0x2402E58")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002345")]
	[Address(RVA = "0x2402ECC", Offset = "0x2402ECC", VA = "0x2402ECC")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002346")]
	[Address(RVA = "0x2402F40", Offset = "0x2402F40", VA = "0x2402F40")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002347")]
	[Address(RVA = "0x2402FB4", Offset = "0x2402FB4", VA = "0x2402FB4")]
	public static AKRESULT GetDeviceList(uint in_ulCompanyID, uint in_ulPluginID, out uint io_maxNumDevices, AkDeviceDescriptionArray out_deviceDescriptions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002348")]
	[Address(RVA = "0x2403058", Offset = "0x2403058", VA = "0x2403058")]
	public static AKRESULT GetDeviceList(uint in_audioDeviceShareSetID, out uint io_maxNumDevices, AkDeviceDescriptionArray out_deviceDescriptions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002349")]
	[Address(RVA = "0x24030EC", Offset = "0x24030EC", VA = "0x24030EC")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234A")]
	[Address(RVA = "0x2403160", Offset = "0x2403160", VA = "0x2403160")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234B")]
	[Address(RVA = "0x24031C4", Offset = "0x24031C4", VA = "0x24031C4")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234C")]
	[Address(RVA = "0x2403228", Offset = "0x2403228", VA = "0x2403228")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234D")]
	[Address(RVA = "0x2403284", Offset = "0x2403284", VA = "0x2403284")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234E")]
	[Address(RVA = "0x24032E0", Offset = "0x24032E0", VA = "0x24032E0")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x6002351")]
	[Address(RVA = "0x24033F4", Offset = "0x24033F4", VA = "0x24033F4")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002352")]
	[Address(RVA = "0x2403498", Offset = "0x2403498", VA = "0x2403498")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002353")]
	[Address(RVA = "0x2403534", Offset = "0x2403534", VA = "0x2403534")]
	public static void LocalOutput(AkMonitorErrorCode in_eErrorCode, string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
	}

	[Token(Token = "0x6002354")]
	[Address(RVA = "0x240360C", Offset = "0x240360C", VA = "0x240360C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002355")]
	[Address(RVA = "0x24036F4", Offset = "0x24036F4", VA = "0x24036F4")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002356")]
	[Address(RVA = "0x24037CC", Offset = "0x24037CC", VA = "0x24037CC")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002357")]
	[Address(RVA = "0x240389C", Offset = "0x240389C", VA = "0x240389C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002358")]
	[Address(RVA = "0x2403918", Offset = "0x2403918", VA = "0x2403918")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002359")]
	[Address(RVA = "0x240398C", Offset = "0x240398C", VA = "0x240398C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600235A")]
	[Address(RVA = "0x2403A74", Offset = "0x2403A74", VA = "0x2403A74")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600235B")]
	[Address(RVA = "0x2403B4C", Offset = "0x2403B4C", VA = "0x2403B4C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600235C")]
	[Address(RVA = "0x2403C1C", Offset = "0x2403C1C", VA = "0x2403C1C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600235D")]
	[Address(RVA = "0x2403C98", Offset = "0x2403C98", VA = "0x2403C98")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600235E")]
	[Address(RVA = "0x2403D0C", Offset = "0x2403D0C", VA = "0x2403D0C")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x600235F")]
	[Address(RVA = "0x2403D68", Offset = "0x2403D68", VA = "0x2403D68")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x6002360")]
	[Address(RVA = "0x2403DCC", Offset = "0x2403DCC", VA = "0x2403DCC")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x6002361")]
	[Address(RVA = "0x2403E44", Offset = "0x2403E44", VA = "0x2403E44")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x6002362")]
	[Address(RVA = "0x2403ED0", Offset = "0x2403ED0", VA = "0x2403ED0")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x6002363")]
	[Address(RVA = "0x2403F4C", Offset = "0x2403F4C", VA = "0x2403F4C")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002364")]
	[Address(RVA = "0x2403FC8", Offset = "0x2403FC8", VA = "0x2403FC8")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002365")]
	[Address(RVA = "0x2404044", Offset = "0x2404044", VA = "0x2404044")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002366")]
	[Address(RVA = "0x2404104", Offset = "0x2404104", VA = "0x2404104")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002367")]
	[Address(RVA = "0x24041D0", Offset = "0x24041D0", VA = "0x24041D0")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002368")]
	[Address(RVA = "0x24042A8", Offset = "0x24042A8", VA = "0x24042A8")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002369")]
	[Address(RVA = "0x2404380", Offset = "0x2404380", VA = "0x2404380")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600236A")]
	[Address(RVA = "0x2404440", Offset = "0x2404440", VA = "0x2404440")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600236B")]
	[Address(RVA = "0x24044F8", Offset = "0x24044F8", VA = "0x24044F8")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600236C")]
	[Address(RVA = "0x240456C", Offset = "0x240456C", VA = "0x240456C")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600236D")]
	[Address(RVA = "0x24045E0", Offset = "0x24045E0", VA = "0x24045E0")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600236E")]
	[Address(RVA = "0x24046AC", Offset = "0x24046AC", VA = "0x24046AC")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600236F")]
	[Address(RVA = "0x2404784", Offset = "0x2404784", VA = "0x2404784")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002370")]
	[Address(RVA = "0x240486C", Offset = "0x240486C", VA = "0x240486C")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002371")]
	[Address(RVA = "0x2404900", Offset = "0x2404900", VA = "0x2404900")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002372")]
	[Address(RVA = "0x2404994", Offset = "0x2404994", VA = "0x2404994")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002373")]
	[Address(RVA = "0x2404A30", Offset = "0x2404A30", VA = "0x2404A30")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x6002374")]
	[Address(RVA = "0x2404AD8", Offset = "0x2404AD8", VA = "0x2404AD8")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x6002375")]
	[Address(RVA = "0x2404B80", Offset = "0x2404B80", VA = "0x2404B80")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6002376")]
	[Address(RVA = "0x2404BE4", Offset = "0x2404BE4", VA = "0x2404BE4")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002377")]
	[Address(RVA = "0x2404C48", Offset = "0x2404C48", VA = "0x2404C48")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002378")]
	[Address(RVA = "0x2404D08", Offset = "0x2404D08", VA = "0x2404D08")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002379")]
	[Address(RVA = "0x2404D84", Offset = "0x2404D84", VA = "0x2404D84")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600237A")]
	[Address(RVA = "0x2404E00", Offset = "0x2404E00", VA = "0x2404E00")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x600237B")]
	[Address(RVA = "0x2404E64", Offset = "0x2404E64", VA = "0x2404E64")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x600237C")]
	[Address(RVA = "0x2404EC8", Offset = "0x2404EC8", VA = "0x2404EC8")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x600237D")]
	[Address(RVA = "0x2404F2C", Offset = "0x2404F2C", VA = "0x2404F2C")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x600237E")]
	[Address(RVA = "0x2404F90", Offset = "0x2404F90", VA = "0x2404F90")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x600237F")]
	[Address(RVA = "0x2404FF4", Offset = "0x2404FF4", VA = "0x2404FF4")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6002380")]
	[Address(RVA = "0x2405068", Offset = "0x2405068", VA = "0x2405068")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6002381")]
	[Address(RVA = "0x24050CC", Offset = "0x24050CC", VA = "0x24050CC")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6002382")]
	[Address(RVA = "0x2405130", Offset = "0x2405130", VA = "0x2405130")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6002383")]
	[Address(RVA = "0x2405194", Offset = "0x2405194", VA = "0x2405194")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6002384")]
	[Address(RVA = "0x24051F8", Offset = "0x24051F8", VA = "0x24051F8")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x6002385")]
	[Address(RVA = "0x240525C", Offset = "0x240525C", VA = "0x240525C")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x600238D")]
	[Address(RVA = "0x240555C", Offset = "0x240555C", VA = "0x240555C")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600238E")]
	[Address(RVA = "0x240565C", Offset = "0x240565C", VA = "0x240565C")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600238F")]
	[Address(RVA = "0x240571C", Offset = "0x240571C", VA = "0x240571C")]
	public static AKRESULT ClearImageSources(uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002390")]
	[Address(RVA = "0x24057D4", Offset = "0x24057D4", VA = "0x24057D4")]
	public static AKRESULT ClearImageSources(uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002391")]
	[Address(RVA = "0x2405838", Offset = "0x2405838", VA = "0x2405838")]
	public static AKRESULT ClearImageSources()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002392")]
	[Address(RVA = "0x2405894", Offset = "0x2405894", VA = "0x2405894")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002393")]
	[Address(RVA = "0x24058F8", Offset = "0x24058F8", VA = "0x24058F8")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, ref Vector3 out_listenerPos, ref Vector3 out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002394")]
	[Address(RVA = "0x23F609C", Offset = "0x23F609C", VA = "0x23F609C")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002395")]
	[Address(RVA = "0x23F889C", Offset = "0x23F889C", VA = "0x23F889C")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002396")]
	[Address(RVA = "0x23F70C8", Offset = "0x23F70C8", VA = "0x23F70C8")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002397")]
	[Address(RVA = "0x24059E8", Offset = "0x24059E8", VA = "0x24059E8")]
	public static AKRESULT SetReflectionsOrder(uint in_uReflectionsOrder, bool in_bUpdatePaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002398")]
	[Address(RVA = "0x2405A5C", Offset = "0x2405A5C", VA = "0x2405A5C")]
	public static AKRESULT SetNumberOfPrimaryRays(uint in_uNbPrimaryRays)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002399")]
	[Address(RVA = "0x23DB560", Offset = "0x23DB560", VA = "0x23DB560")]
	public static AKRESULT SetEarlyReflectionsAuxSend(GameObject in_gameObjectID, uint in_auxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600239A")]
	[Address(RVA = "0x23DB618", Offset = "0x23DB618", VA = "0x23DB618")]
	public static AKRESULT SetEarlyReflectionsVolume(GameObject in_gameObjectID, float in_fSendVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600239B")]
	[Address(RVA = "0x23F97B8", Offset = "0x23F97B8", VA = "0x23F97B8")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600239C")]
	[Address(RVA = "0x2405AC0", Offset = "0x2405AC0", VA = "0x2405AC0")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600239D")]
	[Address(RVA = "0x2405B34", Offset = "0x2405B34", VA = "0x2405B34")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, ref Vector3 out_listenerPos, ref Vector3 out_emitterPos, AkDiffractionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600239E")]
	[Address(RVA = "0x2405C24", Offset = "0x2405C24", VA = "0x2405C24")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600239F")]
	[Address(RVA = "0x23E63C8", Offset = "0x23E63C8", VA = "0x23E63C8")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60023A0")]
	[Address(RVA = "0x23E65B4", Offset = "0x23E65B4", VA = "0x23E65B4")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x60023A1")]
	[Address(RVA = "0x2405CE8", Offset = "0x2405CE8", VA = "0x2405CE8")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x60023A2")]
	[Address(RVA = "0x2405D5C", Offset = "0x2405D5C", VA = "0x2405D5C")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023A3")]
	[Address(RVA = "0x2405DE8", Offset = "0x2405DE8", VA = "0x2405DE8")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023A4")]
	[Address(RVA = "0x2405E60", Offset = "0x2405E60", VA = "0x2405E60")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023A5")]
	[Address(RVA = "0x2405ED8", Offset = "0x2405ED8", VA = "0x2405ED8")]
	public static void Term()
	{
	}

	[Token(Token = "0x60023A6")]
	[Address(RVA = "0x2405F34", Offset = "0x2405F34", VA = "0x2405F34")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023A7")]
	[Address(RVA = "0x2405FD4", Offset = "0x2405FD4", VA = "0x2405FD4")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023A8")]
	[Address(RVA = "0x2406074", Offset = "0x2406074", VA = "0x2406074")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023A9")]
	[Address(RVA = "0x2406124", Offset = "0x2406124", VA = "0x2406124")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023AA")]
	[Address(RVA = "0x2406188", Offset = "0x2406188", VA = "0x2406188")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023AB")]
	[Address(RVA = "0x24061EC", Offset = "0x24061EC", VA = "0x24061EC")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023AC")]
	[Address(RVA = "0x2406260", Offset = "0x2406260", VA = "0x2406260")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023AD")]
	[Address(RVA = "0x24062C4", Offset = "0x24062C4", VA = "0x24062C4")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023AE")]
	[Address(RVA = "0x2406328", Offset = "0x2406328", VA = "0x2406328")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023AF")]
	[Address(RVA = "0x240638C", Offset = "0x240638C", VA = "0x240638C")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023B0")]
	[Address(RVA = "0x2406408", Offset = "0x2406408", VA = "0x2406408")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023B1")]
	[Address(RVA = "0x24064AC", Offset = "0x24064AC", VA = "0x24064AC")]
	public static uint PostEventOnRoom(string in_pszEventName, ulong in_roomID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60023B2")]
	[Address(RVA = "0x2406630", Offset = "0x2406630", VA = "0x2406630")]
	public static uint PostEventOnRoom(string in_pszEventName, ulong in_roomID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60023B3")]
	[Address(RVA = "0x24067A4", Offset = "0x24067A4", VA = "0x24067A4")]
	public static uint PostEventOnRoom(string in_pszEventName, ulong in_roomID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60023B4")]
	[Address(RVA = "0x24068E8", Offset = "0x24068E8", VA = "0x24068E8")]
	public static uint PostEventOnRoom(string in_pszEventName, ulong in_roomID)
	{
		return default(uint);
	}

	[Token(Token = "0x60023B5")]
	[Address(RVA = "0x23E9E18", Offset = "0x23E9E18", VA = "0x23E9E18")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x60023B6")]
	[Address(RVA = "0x24069A4", Offset = "0x24069A4", VA = "0x24069A4")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023B7")]
	[Address(RVA = "0x2406A08", Offset = "0x2406A08", VA = "0x2406A08")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023B8")]
	[Address(RVA = "0x23E06D4", Offset = "0x23E06D4", VA = "0x23E06D4")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, Vector3 Pos, Vector3 Front, Vector3 Top)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023B9")]
	[Address(RVA = "0x2406A64", Offset = "0x2406A64", VA = "0x2406A64")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023BA")]
	[Address(RVA = "0x2406B08", Offset = "0x2406B08", VA = "0x2406B08")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023BB")]
	[Address(RVA = "0x23E2014", Offset = "0x23E2014", VA = "0x23E2014")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023BC")]
	[Address(RVA = "0x2406B9C", Offset = "0x2406B9C", VA = "0x2406B9C")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023BD")]
	[Address(RVA = "0x2406C10", Offset = "0x2406C10", VA = "0x2406C10")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023BE")]
	[Address(RVA = "0x2406CC4", Offset = "0x2406CC4", VA = "0x2406CC4")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023BF")]
	[Address(RVA = "0x2406D68", Offset = "0x2406D68", VA = "0x2406D68")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023C0")]
	[Address(RVA = "0x2406E04", Offset = "0x2406E04", VA = "0x2406E04")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023C1")]
	[Address(RVA = "0x2406E90", Offset = "0x2406E90", VA = "0x2406E90")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x60023C2")]
	[Address(RVA = "0x2406F08", Offset = "0x2406F08", VA = "0x2406F08")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x60023C3")]
	[Address(RVA = "0x2406F80", Offset = "0x2406F80", VA = "0x2406F80")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x60023C4")]
	[Address(RVA = "0x240700C", Offset = "0x240700C", VA = "0x240700C")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x60023C5")]
	[Address(RVA = "0x2407098", Offset = "0x2407098", VA = "0x2407098")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x60023C6")]
	[Address(RVA = "0x2407124", Offset = "0x2407124", VA = "0x2407124")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60023C7")]
	[Address(RVA = "0x2407180", Offset = "0x2407180", VA = "0x2407180")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60023C8")]
	[Address(RVA = "0x24071DC", Offset = "0x24071DC", VA = "0x24071DC")]
	public static void StartResourceMonitoring()
	{
	}

	[Token(Token = "0x60023C9")]
	[Address(RVA = "0x2407238", Offset = "0x2407238", VA = "0x2407238")]
	public static void StopResourceMonitoring()
	{
	}

	[Token(Token = "0x60023CA")]
	[Address(RVA = "0x2407294", Offset = "0x2407294", VA = "0x2407294")]
	public static void GetResourceMonitorDataSummary(AkResourceMonitorDataSummary resourceMonitorDataSummary)
	{
	}

	[Token(Token = "0x60023CB")]
	[Address(RVA = "0x23F87CC", Offset = "0x23F87CC", VA = "0x23F87CC")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, Vector3 Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023CC")]
	[Address(RVA = "0x23F58BC", Offset = "0x23F58BC", VA = "0x23F58BC")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023CD")]
	[Address(RVA = "0x2407320", Offset = "0x2407320", VA = "0x2407320")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023CE")]
	[Address(RVA = "0x24073C8", Offset = "0x24073C8", VA = "0x24073C8")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023CF")]
	[Address(RVA = "0x2407470", Offset = "0x2407470", VA = "0x2407470")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, Vector3[] Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023D0")]
	[Address(RVA = "0x24075B8", Offset = "0x24075B8", VA = "0x24075B8")]
	public static uint PostEventOnRoom(uint in_eventID, ulong in_roomID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60023D1")]
	[Address(RVA = "0x240773C", Offset = "0x240773C", VA = "0x240773C")]
	public static uint PostEventOnRoom(uint in_eventID, ulong in_roomID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60023D2")]
	[Address(RVA = "0x24078B0", Offset = "0x24078B0", VA = "0x24078B0")]
	public static uint PostEventOnRoom(uint in_eventID, ulong in_roomID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60023D3")]
	[Address(RVA = "0x23F6480", Offset = "0x23F6480", VA = "0x23F6480")]
	public static uint PostEventOnRoom(uint in_eventID, ulong in_roomID)
	{
		return default(uint);
	}

	[Token(Token = "0x60023D4")]
	[Address(RVA = "0x23DEFA4", Offset = "0x23DEFA4", VA = "0x23DEFA4")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60023D5")]
	[Address(RVA = "0x23E9ADC", Offset = "0x23E9ADC", VA = "0x23E9ADC")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60023D6")]
	[Address(RVA = "0x24079F4", Offset = "0x24079F4", VA = "0x24079F4")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60023D7")]
	[Address(RVA = "0x2407A58", Offset = "0x2407A58", VA = "0x2407A58")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x60023D9")]
	[Address(RVA = "0x23E8E48", Offset = "0x23E8E48", VA = "0x23E8E48")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x60023DA")]
	[Address(RVA = "0x2407B9C", Offset = "0x2407B9C", VA = "0x2407B9C")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023DB")]
	[Address(RVA = "0x23E044C", Offset = "0x23E044C", VA = "0x23E044C")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023DC")]
	[Address(RVA = "0x23E1010", Offset = "0x23E1010", VA = "0x23E1010")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023DE")]
	[Address(RVA = "0x2407FD8", Offset = "0x2407FD8", VA = "0x2407FD8")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023DF")]
	[Address(RVA = "0x240811C", Offset = "0x240811C", VA = "0x240811C")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, float posX, float posY, float posZ, float frontX, float frontY, float frontZ, float topX, float topY, float topZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60023E0")]
	[Address(RVA = "0x23E8EC0", Offset = "0x23E8EC0", VA = "0x23E8EC0")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60023E1")]
	[Address(RVA = "0x240822C", Offset = "0x240822C", VA = "0x240822C")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60023E2")]
	[Address(RVA = "0x2407C50", Offset = "0x2407C50", VA = "0x2407C50")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60023E3")]
	[Address(RVA = "0x2407D00", Offset = "0x2407D00", VA = "0x2407D00")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60023E4")]
	[Address(RVA = "0x2408378", Offset = "0x2408378", VA = "0x2408378")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60023E5")]
	[Address(RVA = "0x24082EC", Offset = "0x24082EC", VA = "0x24082EC")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x60023E6")]
	[Address(RVA = "0x24084AC", Offset = "0x24084AC", VA = "0x24084AC")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60023E7")]
	[Address(RVA = "0x2408510", Offset = "0x2408510", VA = "0x2408510")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x20004E4")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4002101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D1")]
	public int nPriority
	{
		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x21246E8", Offset = "0x21246E8", VA = "0x21246E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x2124674", Offset = "0x2124674", VA = "0x2124674")]
		set
		{
		}
	}

	[Token(Token = "0x170002D2")]
	public uint uStackSize
	{
		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x21247C0", Offset = "0x21247C0", VA = "0x21247C0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x212474C", Offset = "0x212474C", VA = "0x212474C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public int uSchedPolicy
	{
		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x2124898", Offset = "0x2124898", VA = "0x2124898")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x2124824", Offset = "0x2124824", VA = "0x2124824")]
		set
		{
		}
	}

	[Token(Token = "0x170002D4")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x2124970", Offset = "0x2124970", VA = "0x2124970")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x21248FC", Offset = "0x21248FC", VA = "0x21248FC")]
		set
		{
		}
	}

	[Token(Token = "0x60023EF")]
	[Address(RVA = "0x212435C", Offset = "0x212435C", VA = "0x212435C")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60023F0")]
	[Address(RVA = "0x212439C", Offset = "0x212439C", VA = "0x212439C")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60023F1")]
	[Address(RVA = "0x21243E8", Offset = "0x21243E8", VA = "0x21243E8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60023F2")]
	[Address(RVA = "0x2124488", Offset = "0x2124488", VA = "0x2124488", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x60023F3")]
	[Address(RVA = "0x2124410", Offset = "0x2124410", VA = "0x2124410", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60023F4")]
	[Address(RVA = "0x21244FC", Offset = "0x21244FC", VA = "0x21244FC", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60023FD")]
	[Address(RVA = "0x21249D4", Offset = "0x21249D4", VA = "0x21249D4")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x20004E5")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4002103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60023FE")]
	[Address(RVA = "0x2129A54", Offset = "0x2129A54", VA = "0x2129A54")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60023FF")]
	[Address(RVA = "0x2129A94", Offset = "0x2129A94", VA = "0x2129A94")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002400")]
	[Address(RVA = "0x2129AE0", Offset = "0x2129AE0", VA = "0x2129AE0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002401")]
	[Address(RVA = "0x2129B80", Offset = "0x2129B80", VA = "0x2129B80", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6002402")]
	[Address(RVA = "0x2129B08", Offset = "0x2129B08", VA = "0x2129B08", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002403")]
	[Address(RVA = "0x2129BF4", Offset = "0x2129BF4", VA = "0x2129BF4", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x20004E6")]
public enum AKRESULT
{
	[Token(Token = "0x4002106")]
	AK_NotImplemented = 0,
	[Token(Token = "0x4002107")]
	AK_Success = 1,
	[Token(Token = "0x4002108")]
	AK_Fail = 2,
	[Token(Token = "0x4002109")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x400210A")]
	AK_NotCompatible = 4,
	[Token(Token = "0x400210B")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x400210C")]
	AK_InvalidFile = 7,
	[Token(Token = "0x400210D")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x400210E")]
	AK_MaxReached = 9,
	[Token(Token = "0x400210F")]
	AK_InvalidID = 14,
	[Token(Token = "0x4002110")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4002111")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4002112")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4002113")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4002114")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4002115")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4002116")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x4002117")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x4002118")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x4002119")]
	AK_PathNotFound = 36,
	[Token(Token = "0x400211A")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x400211B")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x400211C")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x400211D")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x400211E")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x400211F")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4002120")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4002121")]
	AK_DataReady = 45,
	[Token(Token = "0x4002122")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4002123")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4002124")]
	AK_Cancelled = 53,
	[Token(Token = "0x4002125")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x4002126")]
	AK_BankReadError = 56,
	[Token(Token = "0x4002127")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x4002128")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x4002129")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x400212A")]
	AK_FileNotFound = 66,
	[Token(Token = "0x400212B")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x400212C")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x400212D")]
	AK_RenderedFX = 71,
	[Token(Token = "0x400212E")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x400212F")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4002130")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4002131")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4002132")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4002133")]
	AK_Busy = 77,
	[Token(Token = "0x4002134")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4002135")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4002136")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x4002137")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x4002138")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x4002139")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x400213A")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x400213B")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x400213C")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x400213D")]
	AK_OpenSLError = 87,
	[Token(Token = "0x400213E")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x400213F")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4002140")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4002141")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4002142")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x4002143")]
	AK_DeviceNotFound = 93,
	[Token(Token = "0x4002144")]
	AK_PlayingIDNotFound = 94,
	[Token(Token = "0x4002145")]
	AK_InvalidFloatValue = 95,
	[Token(Token = "0x4002146")]
	AK_FileFormatMismatch = 96,
	[Token(Token = "0x4002147")]
	AK_NoDistinctListener = 97,
	[Token(Token = "0x4002148")]
	AK_ACP_Error = 98,
	[Token(Token = "0x4002149")]
	AK_ResourceInUse = 99
}
[Token(Token = "0x20004E7")]
public enum Ak3DPositionType
{
	[Token(Token = "0x400214B")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x400214C")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x400214D")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x20004E8")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x400214F")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4002150")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x4002151")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x20004E9")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4002152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D5")]
	public uint textureID
	{
		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1FB4DB0", Offset = "0x1FB4DB0", VA = "0x1FB4DB0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1FB4D38", Offset = "0x1FB4D38", VA = "0x1FB4D38")]
		set
		{
		}
	}

	[Token(Token = "0x170002D6")]
	public float occlusion
	{
		[Token(Token = "0x600240E")]
		[Address(RVA = "0x1FB4E90", Offset = "0x1FB4E90", VA = "0x1FB4E90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600240D")]
		[Address(RVA = "0x1FB4E18", Offset = "0x1FB4E18", VA = "0x1FB4E18")]
		set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public string strName
	{
		[Token(Token = "0x6002410")]
		[Address(RVA = "0x1FB4F70", Offset = "0x1FB4F70", VA = "0x1FB4F70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600240F")]
		[Address(RVA = "0x1FB4EF8", Offset = "0x1FB4EF8", VA = "0x1FB4EF8")]
		set
		{
		}
	}

	[Token(Token = "0x6002404")]
	[Address(RVA = "0x1FB499C", Offset = "0x1FB499C", VA = "0x1FB499C")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002405")]
	[Address(RVA = "0x1FB49DC", Offset = "0x1FB49DC", VA = "0x1FB49DC")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002406")]
	[Address(RVA = "0x1FB4A28", Offset = "0x1FB4A28", VA = "0x1FB4A28", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002407")]
	[Address(RVA = "0x1FB4AC8", Offset = "0x1FB4AC8", VA = "0x1FB4AC8", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6002408")]
	[Address(RVA = "0x1FB4A50", Offset = "0x1FB4A50", VA = "0x1FB4A50", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002409")]
	[Address(RVA = "0x1FB4B3C", Offset = "0x1FB4B3C", VA = "0x1FB4B3C", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600240A")]
	[Address(RVA = "0x1FB4CB8", Offset = "0x1FB4CB8", VA = "0x1FB4CB8")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6002411")]
	[Address(RVA = "0x1FB5018", Offset = "0x1FB5018", VA = "0x1FB5018")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002412")]
	[Address(RVA = "0x1FB5080", Offset = "0x1FB5080", VA = "0x1FB5080")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6002413")]
	[Address(RVA = "0x1FB50E8", Offset = "0x1FB50E8", VA = "0x1FB50E8")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002414")]
	[Address(RVA = "0x1FB5144", Offset = "0x1FB5144", VA = "0x1FB5144")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20004EA")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4002155")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4002156")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4002157")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4002158")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4002159")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x20004EB")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x400215B")]
	AkDeviceState_Unknown = 0,
	[Token(Token = "0x400215C")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x400215D")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x400215E")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x400215F")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x4002160")]
	AkDeviceState_All = 15
}
[Token(Token = "0x20004EC")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4002161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D8")]
	public uint uSampleRate
	{
		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1FB69E0", Offset = "0x1FB69E0", VA = "0x1FB69E0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1FB6968", Offset = "0x1FB6968", VA = "0x1FB6968")]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1FB6B34", Offset = "0x1FB6B34", VA = "0x1FB6B34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600241D")]
		[Address(RVA = "0x1FB6A48", Offset = "0x1FB6A48", VA = "0x1FB6A48")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1FB6CB0", Offset = "0x1FB6CB0", VA = "0x1FB6CB0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600241F")]
		[Address(RVA = "0x1FB6C38", Offset = "0x1FB6C38", VA = "0x1FB6C38")]
		set
		{
		}
	}

	[Token(Token = "0x170002DB")]
	public uint uBlockAlign
	{
		[Token(Token = "0x6002422")]
		[Address(RVA = "0x1FB6D90", Offset = "0x1FB6D90", VA = "0x1FB6D90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002421")]
		[Address(RVA = "0x1FB6D18", Offset = "0x1FB6D18", VA = "0x1FB6D18")]
		set
		{
		}
	}

	[Token(Token = "0x170002DC")]
	public uint uTypeID
	{
		[Token(Token = "0x6002424")]
		[Address(RVA = "0x1FB6E70", Offset = "0x1FB6E70", VA = "0x1FB6E70")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1FB6DF8", Offset = "0x1FB6DF8", VA = "0x1FB6DF8")]
		set
		{
		}
	}

	[Token(Token = "0x170002DD")]
	public uint uInterleaveID
	{
		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1FB6F50", Offset = "0x1FB6F50", VA = "0x1FB6F50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1FB6ED8", Offset = "0x1FB6ED8", VA = "0x1FB6ED8")]
		set
		{
		}
	}

	[Token(Token = "0x6002415")]
	[Address(RVA = "0x1FB664C", Offset = "0x1FB664C", VA = "0x1FB664C")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002416")]
	[Address(RVA = "0x1FB668C", Offset = "0x1FB668C", VA = "0x1FB668C")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002417")]
	[Address(RVA = "0x1FB66D8", Offset = "0x1FB66D8", VA = "0x1FB66D8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002418")]
	[Address(RVA = "0x1FB6778", Offset = "0x1FB6778", VA = "0x1FB6778", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6002419")]
	[Address(RVA = "0x1FB6700", Offset = "0x1FB6700", VA = "0x1FB6700", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600241A")]
	[Address(RVA = "0x1FB67EC", Offset = "0x1FB67EC", VA = "0x1FB67EC", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002427")]
	[Address(RVA = "0x1FB6FB8", Offset = "0x1FB6FB8", VA = "0x1FB6FB8")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6002428")]
	[Address(RVA = "0x1FB7020", Offset = "0x1FB7020", VA = "0x1FB7020")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6002429")]
	[Address(RVA = "0x1FB7088", Offset = "0x1FB7088", VA = "0x1FB7088")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x600242A")]
	[Address(RVA = "0x1FB70F0", Offset = "0x1FB70F0", VA = "0x1FB70F0")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x600242B")]
	[Address(RVA = "0x1FB7158", Offset = "0x1FB7158", VA = "0x1FB7158")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x600242C")]
	[Address(RVA = "0x1FB71C0", Offset = "0x1FB71C0", VA = "0x1FB71C0")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x600242D")]
	[Address(RVA = "0x1FB7298", Offset = "0x1FB7298", VA = "0x1FB7298")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600242E")]
	[Address(RVA = "0x1FB7300", Offset = "0x1FB7300", VA = "0x1FB7300")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x20004ED")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4002163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002DE")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1FB8104", Offset = "0x1FB8104", VA = "0x1FB8104")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600242F")]
	[Address(RVA = "0x1FB7DE8", Offset = "0x1FB7DE8", VA = "0x1FB7DE8")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002430")]
	[Address(RVA = "0x1FB7E28", Offset = "0x1FB7E28", VA = "0x1FB7E28")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002431")]
	[Address(RVA = "0x1FB7E74", Offset = "0x1FB7E74", VA = "0x1FB7E74", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002432")]
	[Address(RVA = "0x1FB7F14", Offset = "0x1FB7F14", VA = "0x1FB7F14", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x6002433")]
	[Address(RVA = "0x1FB7E9C", Offset = "0x1FB7E9C", VA = "0x1FB7E9C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002434")]
	[Address(RVA = "0x1FB7F88", Offset = "0x1FB7F88", VA = "0x1FB7F88", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002436")]
	[Address(RVA = "0x1FB816C", Offset = "0x1FB816C", VA = "0x1FB816C")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x20004EE")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4002165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002DF")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1FB8E1C", Offset = "0x1FB8E1C", VA = "0x1FB8E1C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1FB8DA4", Offset = "0x1FB8DA4", VA = "0x1FB8DA4")]
		set
		{
		}
	}

	[Token(Token = "0x170002E0")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1FB8EFC", Offset = "0x1FB8EFC", VA = "0x1FB8EFC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1FB8E84", Offset = "0x1FB8E84", VA = "0x1FB8E84")]
		set
		{
		}
	}

	[Token(Token = "0x6002437")]
	[Address(RVA = "0x1FB8A88", Offset = "0x1FB8A88", VA = "0x1FB8A88")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002438")]
	[Address(RVA = "0x1FB8AC8", Offset = "0x1FB8AC8", VA = "0x1FB8AC8")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002439")]
	[Address(RVA = "0x1FB8B14", Offset = "0x1FB8B14", VA = "0x1FB8B14", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600243A")]
	[Address(RVA = "0x1FB8BB4", Offset = "0x1FB8BB4", VA = "0x1FB8BB4", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x600243B")]
	[Address(RVA = "0x1FB8B3C", Offset = "0x1FB8B3C", VA = "0x1FB8B3C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600243C")]
	[Address(RVA = "0x1FB8C28", Offset = "0x1FB8C28", VA = "0x1FB8C28", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002441")]
	[Address(RVA = "0x1FB8F64", Offset = "0x1FB8F64", VA = "0x1FB8F64")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x20004EF")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4002167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E1")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1FB9300", Offset = "0x1FB9300", VA = "0x1FB9300")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002442")]
	[Address(RVA = "0x1FB8FE4", Offset = "0x1FB8FE4", VA = "0x1FB8FE4")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002443")]
	[Address(RVA = "0x1FB9024", Offset = "0x1FB9024", VA = "0x1FB9024")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002444")]
	[Address(RVA = "0x1FB9070", Offset = "0x1FB9070", VA = "0x1FB9070", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002445")]
	[Address(RVA = "0x1FB9110", Offset = "0x1FB9110", VA = "0x1FB9110", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6002446")]
	[Address(RVA = "0x1FB9098", Offset = "0x1FB9098", VA = "0x1FB9098", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002447")]
	[Address(RVA = "0x1FB9184", Offset = "0x1FB9184", VA = "0x1FB9184", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002449")]
	[Address(RVA = "0x1FB9368", Offset = "0x1FB9368", VA = "0x1FB9368")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x20004F0")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4002169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400216A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E2")]
	public ulong listenerID
	{
		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1FBA0B4", Offset = "0x1FBA0B4", VA = "0x1FBA0B4")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1FBA03C", Offset = "0x1FBA03C", VA = "0x1FBA03C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E3")]
	public uint auxBusID
	{
		[Token(Token = "0x6002453")]
		[Address(RVA = "0x1FBA194", Offset = "0x1FBA194", VA = "0x1FBA194")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1FBA11C", Offset = "0x1FBA11C", VA = "0x1FBA11C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E4")]
	public float fControlValue
	{
		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1FBA274", Offset = "0x1FBA274", VA = "0x1FBA274")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1FBA1FC", Offset = "0x1FBA1FC", VA = "0x1FBA1FC")]
		set
		{
		}
	}

	[Token(Token = "0x600244A")]
	[Address(RVA = "0x1FB95C8", Offset = "0x1FB95C8", VA = "0x1FB95C8")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600244B")]
	[Address(RVA = "0x1FB9D60", Offset = "0x1FB9D60", VA = "0x1FB9D60")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600244C")]
	[Address(RVA = "0x1FB9DAC", Offset = "0x1FB9DAC", VA = "0x1FB9DAC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600244D")]
	[Address(RVA = "0x1FB9E4C", Offset = "0x1FB9E4C", VA = "0x1FB9E4C", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x600244E")]
	[Address(RVA = "0x1FB9DD4", Offset = "0x1FB9DD4", VA = "0x1FB9DD4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600244F")]
	[Address(RVA = "0x1FB9EC0", Offset = "0x1FB9EC0", VA = "0x1FB9EC0", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002456")]
	[Address(RVA = "0x1FBA2DC", Offset = "0x1FBA2DC", VA = "0x1FBA2DC")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x6002457")]
	[Address(RVA = "0x1FBA3B8", Offset = "0x1FBA3B8", VA = "0x1FBA3B8")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x6002458")]
	[Address(RVA = "0x1FBA484", Offset = "0x1FBA484", VA = "0x1FBA484")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20004F1")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x400216B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400216C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E5")]
	public uint bankID
	{
		[Token(Token = "0x600245F")]
		[Address(RVA = "0x1FBAC64", Offset = "0x1FBAC64", VA = "0x1FBAC64")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002E6")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6002460")]
		[Address(RVA = "0x1FBACCC", Offset = "0x1FBACCC", VA = "0x1FBACCC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002E7")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6002461")]
		[Address(RVA = "0x1FBAD34", Offset = "0x1FBAD34", VA = "0x1FBAD34")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x6002459")]
	[Address(RVA = "0x1FBA948", Offset = "0x1FBA948", VA = "0x1FBA948")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600245A")]
	[Address(RVA = "0x1FBA988", Offset = "0x1FBA988", VA = "0x1FBA988")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600245B")]
	[Address(RVA = "0x1FBA9D4", Offset = "0x1FBA9D4", VA = "0x1FBA9D4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600245C")]
	[Address(RVA = "0x1FBAA74", Offset = "0x1FBAA74", VA = "0x1FBAA74", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x600245D")]
	[Address(RVA = "0x1FBA9FC", Offset = "0x1FBA9FC", VA = "0x1FBA9FC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600245E")]
	[Address(RVA = "0x1FBAAE8", Offset = "0x1FBAAE8", VA = "0x1FBAAE8", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002462")]
	[Address(RVA = "0x1FBAD9C", Offset = "0x1FBAD9C", VA = "0x1FBAD9C")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x20004F2")]
public enum AkBankContent
{
	[Token(Token = "0x400216E")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x400216F")]
	AkBankContent_All
}
[Token(Token = "0x20004F3")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4002171")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4002172")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4002173")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x20004F4")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4002174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E8")]
	public IntPtr pCookie
	{
		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1FBC77C", Offset = "0x1FBC77C", VA = "0x1FBC77C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002E9")]
	public ulong gameObjID
	{
		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1FBC7E4", Offset = "0x1FBC7E4", VA = "0x1FBC7E4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6002463")]
	[Address(RVA = "0x1FBC460", Offset = "0x1FBC460", VA = "0x1FBC460")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002464")]
	[Address(RVA = "0x1FBC4A0", Offset = "0x1FBC4A0", VA = "0x1FBC4A0")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002465")]
	[Address(RVA = "0x1FBC4EC", Offset = "0x1FBC4EC", VA = "0x1FBC4EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002466")]
	[Address(RVA = "0x1FBC58C", Offset = "0x1FBC58C", VA = "0x1FBC58C", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6002467")]
	[Address(RVA = "0x1FBC514", Offset = "0x1FBC514", VA = "0x1FBC514", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002468")]
	[Address(RVA = "0x1FBC600", Offset = "0x1FBC600", VA = "0x1FBC600", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600246B")]
	[Address(RVA = "0x1FBC84C", Offset = "0x1FBC84C", VA = "0x1FBC84C")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x20004F5")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4002176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600246C")]
	[Address(RVA = "0x1FBE8D0", Offset = "0x1FBE8D0", VA = "0x1FBE8D0")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600246D")]
	[Address(RVA = "0x1FBE910", Offset = "0x1FBE910", VA = "0x1FBE910")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600246E")]
	[Address(RVA = "0x1FBE95C", Offset = "0x1FBE95C", VA = "0x1FBE95C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600246F")]
	[Address(RVA = "0x1FBE9FC", Offset = "0x1FBE9FC", VA = "0x1FBE9FC", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6002470")]
	[Address(RVA = "0x1FBE984", Offset = "0x1FBE984", VA = "0x1FBE984", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002471")]
	[Address(RVA = "0x1FBEA70", Offset = "0x1FBEA70", VA = "0x1FBEA70", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002472")]
	[Address(RVA = "0x1FBD464", Offset = "0x1FBD464", VA = "0x1FBD464")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002473")]
	[Address(RVA = "0x1FBD5C8", Offset = "0x1FBD5C8", VA = "0x1FBD5C8")]
	public static void Term()
	{
	}

	[Token(Token = "0x6002474")]
	[Address(RVA = "0x1FBE478", Offset = "0x1FBE478", VA = "0x1FBE478")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002475")]
	[Address(RVA = "0x1FBE4D4", Offset = "0x1FBE4D4", VA = "0x1FBE4D4")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6002476")]
	[Address(RVA = "0x1FBD6A8", Offset = "0x1FBD6A8", VA = "0x1FBD6A8")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6002477")]
	[Address(RVA = "0x1FBEBEC", Offset = "0x1FBEBEC", VA = "0x1FBEBEC")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002478")]
	[Address(RVA = "0x1FBEC8C", Offset = "0x1FBEC8C", VA = "0x1FBEC8C")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x20004F6")]
public enum AkCallbackType
{
	[Token(Token = "0x4002179")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x400217A")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x400217B")]
	AK_Marker = 4,
	[Token(Token = "0x400217C")]
	AK_Duration = 8,
	[Token(Token = "0x400217D")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x400217E")]
	AK_Starvation = 32,
	[Token(Token = "0x400217F")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x4002180")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x4002181")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x4002182")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x4002183")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x4002184")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x4002185")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x4002186")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x4002187")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x4002188")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x4002189")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x400218A")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x400218B")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x400218C")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x400218D")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x400218E")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x400218F")]
	AK_Bank = 1073741824,
	[Token(Token = "0x4002190")]
	AK_AudioInterruption = 570425344,
	[Token(Token = "0x4002191")]
	AK_AudioSourceChange = 587202560
}
[Token(Token = "0x20004F7")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x4002192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002EA")]
	public uint uNumChannels
	{
		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1FBF014", Offset = "0x1FBF014", VA = "0x1FBF014")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600247F")]
		[Address(RVA = "0x1FBEF9C", Offset = "0x1FBEF9C", VA = "0x1FBEF9C")]
		set
		{
		}
	}

	[Token(Token = "0x170002EB")]
	public uint eConfigType
	{
		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1FBF0F4", Offset = "0x1FBF0F4", VA = "0x1FBF0F4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1FBF07C", Offset = "0x1FBF07C", VA = "0x1FBF07C")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	public uint uChannelMask
	{
		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1FBF1D4", Offset = "0x1FBF1D4", VA = "0x1FBF1D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002483")]
		[Address(RVA = "0x1FBF15C", Offset = "0x1FBF15C", VA = "0x1FBF15C")]
		set
		{
		}
	}

	[Token(Token = "0x6002479")]
	[Address(RVA = "0x1FB6BF8", Offset = "0x1FB6BF8", VA = "0x1FB6BF8")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600247A")]
	[Address(RVA = "0x1FB6AE8", Offset = "0x1FB6AE8", VA = "0x1FB6AE8")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600247B")]
	[Address(RVA = "0x1FBED0C", Offset = "0x1FBED0C", VA = "0x1FBED0C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600247C")]
	[Address(RVA = "0x1FBEDAC", Offset = "0x1FBEDAC", VA = "0x1FBEDAC", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x600247D")]
	[Address(RVA = "0x1FBED34", Offset = "0x1FBED34", VA = "0x1FBED34", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600247E")]
	[Address(RVA = "0x1FBEE20", Offset = "0x1FBEE20", VA = "0x1FBEE20", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002485")]
	[Address(RVA = "0x1FBF23C", Offset = "0x1FBF23C", VA = "0x1FBF23C")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6002486")]
	[Address(RVA = "0x1FBF2BC", Offset = "0x1FBF2BC", VA = "0x1FBF2BC")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6002487")]
	[Address(RVA = "0x1FBF354", Offset = "0x1FBF354", VA = "0x1FBF354")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002488")]
	[Address(RVA = "0x1FBF3BC", Offset = "0x1FBF3BC", VA = "0x1FBF3BC")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6002489")]
	[Address(RVA = "0x1FBF434", Offset = "0x1FBF434", VA = "0x1FBF434")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x600248A")]
	[Address(RVA = "0x1FBF4B4", Offset = "0x1FBF4B4", VA = "0x1FBF4B4")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600248B")]
	[Address(RVA = "0x1FBF52C", Offset = "0x1FBF52C", VA = "0x1FBF52C")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600248C")]
	[Address(RVA = "0x1FBF5A4", Offset = "0x1FBF5A4", VA = "0x1FBF5A4")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600248D")]
	[Address(RVA = "0x1FBF60C", Offset = "0x1FBF60C", VA = "0x1FBF60C")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x600248E")]
	[Address(RVA = "0x1FBF674", Offset = "0x1FBF674", VA = "0x1FBF674")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x600248F")]
	[Address(RVA = "0x1FBF6EC", Offset = "0x1FBF6EC", VA = "0x1FBF6EC")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x6002490")]
	[Address(RVA = "0x1FBF798", Offset = "0x1FBF798", VA = "0x1FBF798")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x6002491")]
	[Address(RVA = "0x1FBF844", Offset = "0x1FBF844", VA = "0x1FBF844")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004F8")]
public enum AkChannelConfigType
{
	[Token(Token = "0x4002195")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x4002196")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x4002197")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x20004F9")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x4002198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002ED")]
	public AkTransform position
	{
		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1FBFC54", Offset = "0x1FBFC54", VA = "0x1FBFC54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1FBFBC8", Offset = "0x1FBFBC8", VA = "0x1FBFBC8")]
		set
		{
		}
	}

	[Token(Token = "0x170002EE")]
	public uint uInputChannels
	{
		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1FBFD90", Offset = "0x1FBFD90", VA = "0x1FBFD90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1FBFD18", Offset = "0x1FBFD18", VA = "0x1FBFD18")]
		set
		{
		}
	}

	[Token(Token = "0x6002492")]
	[Address(RVA = "0x1FBF8AC", Offset = "0x1FBF8AC", VA = "0x1FBF8AC")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002493")]
	[Address(RVA = "0x1FBF8EC", Offset = "0x1FBF8EC", VA = "0x1FBF8EC")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002494")]
	[Address(RVA = "0x1FBF938", Offset = "0x1FBF938", VA = "0x1FBF938", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002495")]
	[Address(RVA = "0x1FBF9D8", Offset = "0x1FBF9D8", VA = "0x1FBF9D8", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6002496")]
	[Address(RVA = "0x1FBF960", Offset = "0x1FBF960", VA = "0x1FBF960", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002497")]
	[Address(RVA = "0x1FBFA4C", Offset = "0x1FBFA4C", VA = "0x1FBFA4C", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x20004FA")]
public enum AkChannelOrdering
{
	[Token(Token = "0x400219B")]
	ChannelOrdering_Standard,
	[Token(Token = "0x400219C")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x20004FB")]
public enum AkConnectionType
{
	[Token(Token = "0x400219E")]
	ConnectionType_Direct,
	[Token(Token = "0x400219F")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40021A0")]
	ConnectionType_UserDefSend,
	[Token(Token = "0x40021A1")]
	ConnectionType_ReflectionsSend
}
[Token(Token = "0x20004FC")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40021A3")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40021A4")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40021A5")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40021A6")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40021A7")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40021A8")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40021A9")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40021AA")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40021AB")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40021AC")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40021AD")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x20004FD")]
public class AkDeviceDescription : IDisposable
{
	[Token(Token = "0x40021AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002EF")]
	public uint idDevice
	{
		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1FC1E58", Offset = "0x1FC1E58", VA = "0x1FC1E58")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1FC1DE0", Offset = "0x1FC1DE0", VA = "0x1FC1DE0")]
		set
		{
		}
	}

	[Token(Token = "0x170002F0")]
	public string deviceName
	{
		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x1FC1F38", Offset = "0x1FC1F38", VA = "0x1FC1F38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1FC1EC0", Offset = "0x1FC1EC0", VA = "0x1FC1EC0")]
		set
		{
		}
	}

	[Token(Token = "0x170002F1")]
	public AkAudioDeviceState deviceStateMask
	{
		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x1FC2058", Offset = "0x1FC2058", VA = "0x1FC2058")]
		get
		{
			return default(AkAudioDeviceState);
		}
		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1FC1FE0", Offset = "0x1FC1FE0", VA = "0x1FC1FE0")]
		set
		{
		}
	}

	[Token(Token = "0x170002F2")]
	public bool isDefaultDevice
	{
		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x1FC2138", Offset = "0x1FC2138", VA = "0x1FC2138")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1FC20C0", Offset = "0x1FC20C0", VA = "0x1FC20C0")]
		set
		{
		}
	}

	[Token(Token = "0x600249C")]
	[Address(RVA = "0x1FC1AC4", Offset = "0x1FC1AC4", VA = "0x1FC1AC4")]
	internal AkDeviceDescription(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600249D")]
	[Address(RVA = "0x1FC1B04", Offset = "0x1FC1B04", VA = "0x1FC1B04")]
	internal static IntPtr getCPtr(AkDeviceDescription obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600249E")]
	[Address(RVA = "0x1FC1B50", Offset = "0x1FC1B50", VA = "0x1FC1B50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600249F")]
	[Address(RVA = "0x1FC1BF0", Offset = "0x1FC1BF0", VA = "0x1FC1BF0", Slot = "1")]
	~AkDeviceDescription()
	{
	}

	[Token(Token = "0x60024A0")]
	[Address(RVA = "0x1FC1B78", Offset = "0x1FC1B78", VA = "0x1FC1B78", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60024A1")]
	[Address(RVA = "0x1FC1C64", Offset = "0x1FC1C64", VA = "0x1FC1C64", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60024AA")]
	[Address(RVA = "0x1FC21A0", Offset = "0x1FC21A0", VA = "0x1FC21A0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60024AB")]
	[Address(RVA = "0x1FC2208", Offset = "0x1FC2208", VA = "0x1FC2208")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60024AC")]
	[Address(RVA = "0x1FC2264", Offset = "0x1FC2264", VA = "0x1FC2264")]
	public void Clone(AkDeviceDescription other)
	{
	}

	[Token(Token = "0x60024AD")]
	[Address(RVA = "0x1FC2304", Offset = "0x1FC2304", VA = "0x1FC2304")]
	public AkDeviceDescription()
	{
	}
}
[Token(Token = "0x20004FE")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40021B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002F3")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1FC2934", Offset = "0x1FC2934", VA = "0x1FC2934")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1FC28BC", Offset = "0x1FC28BC", VA = "0x1FC28BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002F4")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1FC299C", Offset = "0x1FC299C", VA = "0x1FC299C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1FC03F0", Offset = "0x1FC03F0", VA = "0x1FC03F0")]
		set
		{
		}
	}

	[Token(Token = "0x170002F5")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1FC2A7C", Offset = "0x1FC2A7C", VA = "0x1FC2A7C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1FC2A04", Offset = "0x1FC2A04", VA = "0x1FC2A04")]
		set
		{
		}
	}

	[Token(Token = "0x170002F6")]
	public uint ePoolAttributes
	{
		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1FC2B5C", Offset = "0x1FC2B5C", VA = "0x1FC2B5C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1FC2AE4", Offset = "0x1FC2AE4", VA = "0x1FC2AE4")]
		set
		{
		}
	}

	[Token(Token = "0x170002F7")]
	public uint uGranularity
	{
		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1FC2C3C", Offset = "0x1FC2C3C", VA = "0x1FC2C3C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1FC2BC4", Offset = "0x1FC2BC4", VA = "0x1FC2BC4")]
		set
		{
		}
	}

	[Token(Token = "0x170002F8")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1FC2D1C", Offset = "0x1FC2D1C", VA = "0x1FC2D1C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x1FC2CA4", Offset = "0x1FC2CA4", VA = "0x1FC2CA4")]
		set
		{
		}
	}

	[Token(Token = "0x170002F9")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x1FC2E10", Offset = "0x1FC2E10", VA = "0x1FC2E10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1FC2D84", Offset = "0x1FC2D84", VA = "0x1FC2D84")]
		set
		{
		}
	}

	[Token(Token = "0x170002FA")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1FC2ED4", Offset = "0x1FC2ED4", VA = "0x1FC2ED4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x1FC0468", Offset = "0x1FC0468", VA = "0x1FC0468")]
		set
		{
		}
	}

	[Token(Token = "0x170002FB")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1FC2FB4", Offset = "0x1FC2FB4", VA = "0x1FC2FB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x1FC2F3C", Offset = "0x1FC2F3C", VA = "0x1FC2F3C")]
		set
		{
		}
	}

	[Token(Token = "0x170002FC")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1FC301C", Offset = "0x1FC301C", VA = "0x1FC301C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x1FC04E0", Offset = "0x1FC04E0", VA = "0x1FC04E0")]
		set
		{
		}
	}

	[Token(Token = "0x170002FD")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x1FC3084", Offset = "0x1FC3084", VA = "0x1FC3084")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x1FC0558", Offset = "0x1FC0558", VA = "0x1FC0558")]
		set
		{
		}
	}

	[Token(Token = "0x60024AE")]
	[Address(RVA = "0x1FC25A0", Offset = "0x1FC25A0", VA = "0x1FC25A0")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60024AF")]
	[Address(RVA = "0x1FC25E0", Offset = "0x1FC25E0", VA = "0x1FC25E0")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60024B0")]
	[Address(RVA = "0x1FC262C", Offset = "0x1FC262C", VA = "0x1FC262C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60024B1")]
	[Address(RVA = "0x1FC26CC", Offset = "0x1FC26CC", VA = "0x1FC26CC", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x60024B2")]
	[Address(RVA = "0x1FC2654", Offset = "0x1FC2654", VA = "0x1FC2654", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60024B3")]
	[Address(RVA = "0x1FC2740", Offset = "0x1FC2740", VA = "0x1FC2740", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x20004FF")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40021B3")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40021B4")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40021B5")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40021B6")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x2000500")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40021B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40021B9")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170002FE")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x23D9DEC", Offset = "0x23D9DEC", VA = "0x23D9DEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x23D9D60", Offset = "0x23D9D60", VA = "0x23D9D60")]
		set
		{
		}
	}

	[Token(Token = "0x170002FF")]
	public uint nodeCount
	{
		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x23D9F28", Offset = "0x23D9F28", VA = "0x23D9F28")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x23D9EB0", Offset = "0x23D9EB0", VA = "0x23D9EB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000300")]
	public float diffraction
	{
		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x23DA008", Offset = "0x23DA008", VA = "0x23DA008")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x23D9F90", Offset = "0x23D9F90", VA = "0x23D9F90")]
		set
		{
		}
	}

	[Token(Token = "0x17000301")]
	public float totLength
	{
		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x23DA0E8", Offset = "0x23DA0E8", VA = "0x23DA0E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x23DA070", Offset = "0x23DA070", VA = "0x23DA070")]
		set
		{
		}
	}

	[Token(Token = "0x17000302")]
	public float obstructionValue
	{
		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x23DA1C8", Offset = "0x23DA1C8", VA = "0x23DA1C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x23DA150", Offset = "0x23DA150", VA = "0x23DA150")]
		set
		{
		}
	}

	[Token(Token = "0x60024CA")]
	[Address(RVA = "0x23D9A44", Offset = "0x23D9A44", VA = "0x23D9A44")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60024CB")]
	[Address(RVA = "0x23D9A84", Offset = "0x23D9A84", VA = "0x23D9A84")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60024CC")]
	[Address(RVA = "0x23D9AD0", Offset = "0x23D9AD0", VA = "0x23D9AD0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60024CD")]
	[Address(RVA = "0x23D9B70", Offset = "0x23D9B70", VA = "0x23D9B70", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x60024CE")]
	[Address(RVA = "0x23D9AF8", Offset = "0x23D9AF8", VA = "0x23D9AF8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60024CF")]
	[Address(RVA = "0x23D9BE4", Offset = "0x23D9BE4", VA = "0x23D9BE4", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60024DA")]
	[Address(RVA = "0x23DA230", Offset = "0x23DA230", VA = "0x23DA230")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60024DB")]
	[Address(RVA = "0x23DA28C", Offset = "0x23DA28C", VA = "0x23DA28C")]
	public Vector3 GetNodes(uint idx)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60024DC")]
	[Address(RVA = "0x23DA304", Offset = "0x23DA304", VA = "0x23DA304")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60024DD")]
	[Address(RVA = "0x23DA37C", Offset = "0x23DA37C", VA = "0x23DA37C")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60024DE")]
	[Address(RVA = "0x23DA3F4", Offset = "0x23DA3F4", VA = "0x23DA3F4")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60024DF")]
	[Address(RVA = "0x23DA46C", Offset = "0x23DA46C", VA = "0x23DA46C")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x60024E0")]
	[Address(RVA = "0x23DA50C", Offset = "0x23DA50C", VA = "0x23DA50C")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x2000501")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40021BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000303")]
	public float fDuration
	{
		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x23DAD58", Offset = "0x23DAD58", VA = "0x23DAD58")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000304")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x23DADC0", Offset = "0x23DADC0", VA = "0x23DADC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000305")]
	public uint audioNodeID
	{
		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x23DAE28", Offset = "0x23DAE28", VA = "0x23DAE28")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000306")]
	public uint mediaID
	{
		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x23DAE90", Offset = "0x23DAE90", VA = "0x23DAE90")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000307")]
	public bool bStreaming
	{
		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x23DAEF8", Offset = "0x23DAEF8", VA = "0x23DAEF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60024E1")]
	[Address(RVA = "0x23DA7C0", Offset = "0x23DA7C0", VA = "0x23DA7C0")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60024E2")]
	[Address(RVA = "0x23DA8DC", Offset = "0x23DA8DC", VA = "0x23DA8DC")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60024E3")]
	[Address(RVA = "0x23DA928", Offset = "0x23DA928", VA = "0x23DA928", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60024E4")]
	[Address(RVA = "0x23DAA34", Offset = "0x23DAA34", VA = "0x23DAA34", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60024EA")]
	[Address(RVA = "0x23DAF60", Offset = "0x23DAF60", VA = "0x23DAF60")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x2000502")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40021BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000308")]
	public uint playingID
	{
		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x23DB2C8", Offset = "0x23DB2C8", VA = "0x23DB2C8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000309")]
	public uint audioNodeID
	{
		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x23DB330", Offset = "0x23DB330", VA = "0x23DB330")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700030A")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x23DB398", Offset = "0x23DB398", VA = "0x23DB398")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x60024EB")]
	[Address(RVA = "0x23DAFD0", Offset = "0x23DAFD0", VA = "0x23DAFD0")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60024EC")]
	[Address(RVA = "0x23DB060", Offset = "0x23DB060", VA = "0x23DB060")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60024ED")]
	[Address(RVA = "0x23DB0AC", Offset = "0x23DB0AC", VA = "0x23DB0AC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60024EE")]
	[Address(RVA = "0x23DB134", Offset = "0x23DB134", VA = "0x23DB134", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60024F2")]
	[Address(RVA = "0x23DB400", Offset = "0x23DB400", VA = "0x23DB400")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x2000503")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x40021BD")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x40021BE")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000504")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40021BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700030B")]
	public uint playingID
	{
		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x23DCDFC", Offset = "0x23DCDFC", VA = "0x23DCDFC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700030C")]
	public uint eventID
	{
		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x23DCE64", Offset = "0x23DCE64", VA = "0x23DCE64")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60024F3")]
	[Address(RVA = "0x23DA84C", Offset = "0x23DA84C", VA = "0x23DA84C")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60024F4")]
	[Address(RVA = "0x23DCDB0", Offset = "0x23DCDB0", VA = "0x23DCDB0")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60024F5")]
	[Address(RVA = "0x23DA9AC", Offset = "0x23DA9AC", VA = "0x23DA9AC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60024F6")]
	[Address(RVA = "0x23DABC4", Offset = "0x23DABC4", VA = "0x23DABC4", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60024F9")]
	[Address(RVA = "0x23DCECC", Offset = "0x23DCECC", VA = "0x23DCECC")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000505")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x40021C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030D")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6002508")]
		[Address(RVA = "0x23DED40", Offset = "0x23DED40", VA = "0x23DED40")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002507")]
		[Address(RVA = "0x23DECC8", Offset = "0x23DECC8", VA = "0x23DECC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700030E")]
	public uint idCodec
	{
		[Token(Token = "0x600250A")]
		[Address(RVA = "0x23DEE20", Offset = "0x23DEE20", VA = "0x23DEE20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002509")]
		[Address(RVA = "0x23DEDA8", Offset = "0x23DEDA8", VA = "0x23DEDA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700030F")]
	public string szFile
	{
		[Token(Token = "0x600250C")]
		[Address(RVA = "0x23DEF00", Offset = "0x23DEF00", VA = "0x23DEF00")]
		get
		{
			return null;
		}
		[Token(Token = "0x600250B")]
		[Address(RVA = "0x23DEE88", Offset = "0x23DEE88", VA = "0x23DEE88")]
		set
		{
		}
	}

	[Token(Token = "0x17000310")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x600250E")]
		[Address(RVA = "0x23DF07C", Offset = "0x23DF07C", VA = "0x23DF07C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600250D")]
		[Address(RVA = "0x23DF004", Offset = "0x23DF004", VA = "0x23DF004")]
		set
		{
		}
	}

	[Token(Token = "0x17000311")]
	public uint uiMemorySize
	{
		[Token(Token = "0x6002510")]
		[Address(RVA = "0x23DF15C", Offset = "0x23DF15C", VA = "0x23DF15C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600250F")]
		[Address(RVA = "0x23DF0E4", Offset = "0x23DF0E4", VA = "0x23DF0E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000312")]
	public uint idFile
	{
		[Token(Token = "0x6002512")]
		[Address(RVA = "0x23DF23C", Offset = "0x23DF23C", VA = "0x23DF23C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002511")]
		[Address(RVA = "0x23DF1C4", Offset = "0x23DF1C4", VA = "0x23DF1C4")]
		set
		{
		}
	}

	[Token(Token = "0x60024FA")]
	[Address(RVA = "0x23DE5C8", Offset = "0x23DE5C8", VA = "0x23DE5C8")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60024FB")]
	[Address(RVA = "0x23DE608", Offset = "0x23DE608", VA = "0x23DE608")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60024FC")]
	[Address(RVA = "0x23DE654", Offset = "0x23DE654", VA = "0x23DE654", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60024FD")]
	[Address(RVA = "0x23DE6F4", Offset = "0x23DE6F4", VA = "0x23DE6F4", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x60024FE")]
	[Address(RVA = "0x23DE67C", Offset = "0x23DE67C", VA = "0x23DE67C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60024FF")]
	[Address(RVA = "0x23DE768", Offset = "0x23DE768", VA = "0x23DE768", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002500")]
	[Address(RVA = "0x23DE8E4", Offset = "0x23DE8E4", VA = "0x23DE8E4")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6002501")]
	[Address(RVA = "0x23DE964", Offset = "0x23DE964", VA = "0x23DE964")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6002502")]
	[Address(RVA = "0x23DEA14", Offset = "0x23DEA14", VA = "0x23DEA14")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6002503")]
	[Address(RVA = "0x23DEABC", Offset = "0x23DEABC", VA = "0x23DEABC")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6002504")]
	[Address(RVA = "0x23DEB64", Offset = "0x23DEB64", VA = "0x23DEB64")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002505")]
	[Address(RVA = "0x23DEBCC", Offset = "0x23DEBCC", VA = "0x23DEBCC")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6002506")]
	[Address(RVA = "0x23DEC6C", Offset = "0x23DEC6C", VA = "0x23DEC6C")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x2000506")]
public enum AkFloorPlane
{
	[Token(Token = "0x40021C3")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x40021C4")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x40021C5")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x40021C6")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x2000507")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x40021C8")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x40021C9")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x40021CA")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x40021CB")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x40021CC")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x40021CD")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x40021CE")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x40021CF")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x40021D0")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x40021D1")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x40021D2")]
	AkGlobalCallbackLocation_Init = 1024,
	[Token(Token = "0x40021D3")]
	AkGlobalCallbackLocation_Suspend = 2048,
	[Token(Token = "0x40021D4")]
	AkGlobalCallbackLocation_WakeupFromSuspend = 4096,
	[Token(Token = "0x40021D5")]
	AkGlobalCallbackLocation_Num = 13
}
[Token(Token = "0x2000508")]
public enum AkGroupType
{
	[Token(Token = "0x40021D7")]
	AkGroupType_Switch,
	[Token(Token = "0x40021D8")]
	AkGroupType_State
}
[Token(Token = "0x2000509")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x40021D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000313")]
	public Vector3 sourcePosition
	{
		[Token(Token = "0x600251C")]
		[Address(RVA = "0x23E2890", Offset = "0x23E2890", VA = "0x23E2890")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600251B")]
		[Address(RVA = "0x23E2800", Offset = "0x23E2800", VA = "0x23E2800")]
		set
		{
		}
	}

	[Token(Token = "0x17000314")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x600251E")]
		[Address(RVA = "0x23E2970", Offset = "0x23E2970", VA = "0x23E2970")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600251D")]
		[Address(RVA = "0x23E28F8", Offset = "0x23E28F8", VA = "0x23E28F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000315")]
	public float fLevel
	{
		[Token(Token = "0x6002520")]
		[Address(RVA = "0x23E2A50", Offset = "0x23E2A50", VA = "0x23E2A50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600251F")]
		[Address(RVA = "0x23E29D8", Offset = "0x23E29D8", VA = "0x23E29D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000316")]
	public float fDiffraction
	{
		[Token(Token = "0x6002522")]
		[Address(RVA = "0x23E2B30", Offset = "0x23E2B30", VA = "0x23E2B30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002521")]
		[Address(RVA = "0x23E2AB8", Offset = "0x23E2AB8", VA = "0x23E2AB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000317")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x6002524")]
		[Address(RVA = "0x23E2C10", Offset = "0x23E2C10", VA = "0x23E2C10")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002523")]
		[Address(RVA = "0x23E2B98", Offset = "0x23E2B98", VA = "0x23E2B98")]
		set
		{
		}
	}

	[Token(Token = "0x17000318")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x6002526")]
		[Address(RVA = "0x23E2CF0", Offset = "0x23E2CF0", VA = "0x23E2CF0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002525")]
		[Address(RVA = "0x23E2C78", Offset = "0x23E2C78", VA = "0x23E2C78")]
		set
		{
		}
	}

	[Token(Token = "0x6002513")]
	[Address(RVA = "0x23E23A4", Offset = "0x23E23A4", VA = "0x23E23A4")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002514")]
	[Address(RVA = "0x23E23E4", Offset = "0x23E23E4", VA = "0x23E23E4")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002515")]
	[Address(RVA = "0x23E2430", Offset = "0x23E2430", VA = "0x23E2430", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002516")]
	[Address(RVA = "0x23E24D0", Offset = "0x23E24D0", VA = "0x23E24D0", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6002517")]
	[Address(RVA = "0x23E2458", Offset = "0x23E2458", VA = "0x23E2458", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002518")]
	[Address(RVA = "0x23E2544", Offset = "0x23E2544", VA = "0x23E2544", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002519")]
	[Address(RVA = "0x23E26C0", Offset = "0x23E26C0", VA = "0x23E26C0")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x600251A")]
	[Address(RVA = "0x23E2740", Offset = "0x23E2740", VA = "0x23E2740")]
	public AkImageSourceParams(Vector3 in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x200050A")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x40021DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000319")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x6002532")]
		[Address(RVA = "0x23E3344", Offset = "0x23E3344", VA = "0x23E3344")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002531")]
		[Address(RVA = "0x23E32A4", Offset = "0x23E32A4", VA = "0x23E32A4")]
		set
		{
		}
	}

	[Token(Token = "0x6002527")]
	[Address(RVA = "0x23E2D58", Offset = "0x23E2D58", VA = "0x23E2D58")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002528")]
	[Address(RVA = "0x23E2D98", Offset = "0x23E2D98", VA = "0x23E2D98")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002529")]
	[Address(RVA = "0x23E2DE4", Offset = "0x23E2DE4", VA = "0x23E2DE4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600252A")]
	[Address(RVA = "0x23E2E84", Offset = "0x23E2E84", VA = "0x23E2E84", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x600252B")]
	[Address(RVA = "0x23E2E0C", Offset = "0x23E2E0C", VA = "0x23E2E0C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600252C")]
	[Address(RVA = "0x23E2EF8", Offset = "0x23E2EF8", VA = "0x23E2EF8", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600252D")]
	[Address(RVA = "0x23E3074", Offset = "0x23E3074", VA = "0x23E3074")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x600252E")]
	[Address(RVA = "0x23E30F4", Offset = "0x23E30F4", VA = "0x23E30F4")]
	public AkImageSourceSettings(Vector3 in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x600252F")]
	[Address(RVA = "0x23E31B4", Offset = "0x23E31B4", VA = "0x23E31B4")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x6002530")]
	[Address(RVA = "0x23E322C", Offset = "0x23E322C", VA = "0x23E322C")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x200050B")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x40021DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700031A")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x600253A")]
		[Address(RVA = "0x23E379C", Offset = "0x23E379C", VA = "0x23E379C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002539")]
		[Address(RVA = "0x23E3724", Offset = "0x23E3724", VA = "0x23E3724")]
		set
		{
		}
	}

	[Token(Token = "0x1700031B")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x600253C")]
		[Address(RVA = "0x23E387C", Offset = "0x23E387C", VA = "0x23E387C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600253B")]
		[Address(RVA = "0x23E3804", Offset = "0x23E3804", VA = "0x23E3804")]
		set
		{
		}
	}

	[Token(Token = "0x1700031C")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x600253E")]
		[Address(RVA = "0x23E395C", Offset = "0x23E395C", VA = "0x23E395C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600253D")]
		[Address(RVA = "0x23E38E4", Offset = "0x23E38E4", VA = "0x23E38E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700031D")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x6002540")]
		[Address(RVA = "0x23E3A3C", Offset = "0x23E3A3C", VA = "0x23E3A3C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600253F")]
		[Address(RVA = "0x23E39C4", Offset = "0x23E39C4", VA = "0x23E39C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700031E")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6002542")]
		[Address(RVA = "0x23E3B1C", Offset = "0x23E3B1C", VA = "0x23E3B1C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002541")]
		[Address(RVA = "0x23E3AA4", Offset = "0x23E3AA4", VA = "0x23E3AA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700031F")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6002544")]
		[Address(RVA = "0x23E3BFC", Offset = "0x23E3BFC", VA = "0x23E3BFC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002543")]
		[Address(RVA = "0x23E3B84", Offset = "0x23E3B84", VA = "0x23E3B84")]
		set
		{
		}
	}

	[Token(Token = "0x17000320")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6002546")]
		[Address(RVA = "0x23E3D50", Offset = "0x23E3D50", VA = "0x23E3D50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002545")]
		[Address(RVA = "0x23E3C64", Offset = "0x23E3C64", VA = "0x23E3C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000321")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6002548")]
		[Address(RVA = "0x23E3ECC", Offset = "0x23E3ECC", VA = "0x23E3ECC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002547")]
		[Address(RVA = "0x23E3E54", Offset = "0x23E3E54", VA = "0x23E3E54")]
		set
		{
		}
	}

	[Token(Token = "0x17000322")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x600254A")]
		[Address(RVA = "0x23E3FAC", Offset = "0x23E3FAC", VA = "0x23E3FAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002549")]
		[Address(RVA = "0x23E3F34", Offset = "0x23E3F34", VA = "0x23E3F34")]
		set
		{
		}
	}

	[Token(Token = "0x17000323")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x600254C")]
		[Address(RVA = "0x23E408C", Offset = "0x23E408C", VA = "0x23E408C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600254B")]
		[Address(RVA = "0x23E4014", Offset = "0x23E4014", VA = "0x23E4014")]
		set
		{
		}
	}

	[Token(Token = "0x17000324")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x600254E")]
		[Address(RVA = "0x23E416C", Offset = "0x23E416C", VA = "0x23E416C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600254D")]
		[Address(RVA = "0x23E40F4", Offset = "0x23E40F4", VA = "0x23E40F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000325")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x6002550")]
		[Address(RVA = "0x23E4288", Offset = "0x23E4288", VA = "0x23E4288")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x600254F")]
		[Address(RVA = "0x23E4210", Offset = "0x23E4210", VA = "0x23E4210")]
		set
		{
		}
	}

	[Token(Token = "0x17000326")]
	public uint uBankReadBufferSize
	{
		[Token(Token = "0x6002552")]
		[Address(RVA = "0x23E4368", Offset = "0x23E4368", VA = "0x23E4368")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002551")]
		[Address(RVA = "0x23E42F0", Offset = "0x23E42F0", VA = "0x23E42F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000327")]
	public float fDebugOutOfRangeLimit
	{
		[Token(Token = "0x6002554")]
		[Address(RVA = "0x23E4448", Offset = "0x23E4448", VA = "0x23E4448")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002553")]
		[Address(RVA = "0x23E43D0", Offset = "0x23E43D0", VA = "0x23E43D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000328")]
	public bool bDebugOutOfRangeCheckEnabled
	{
		[Token(Token = "0x6002556")]
		[Address(RVA = "0x23E4528", Offset = "0x23E4528", VA = "0x23E4528")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002555")]
		[Address(RVA = "0x23E44B0", Offset = "0x23E44B0", VA = "0x23E44B0")]
		set
		{
		}
	}

	[Token(Token = "0x6002533")]
	[Address(RVA = "0x23E3408", Offset = "0x23E3408", VA = "0x23E3408")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002534")]
	[Address(RVA = "0x23E3448", Offset = "0x23E3448", VA = "0x23E3448")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002535")]
	[Address(RVA = "0x23E3494", Offset = "0x23E3494", VA = "0x23E3494", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002536")]
	[Address(RVA = "0x23E3534", Offset = "0x23E3534", VA = "0x23E3534", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x6002537")]
	[Address(RVA = "0x23E34BC", Offset = "0x23E34BC", VA = "0x23E34BC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002538")]
	[Address(RVA = "0x23E35A8", Offset = "0x23E35A8", VA = "0x23E35A8", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x200050C")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x40021DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000329")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x600255F")]
		[Address(RVA = "0x23E49B8", Offset = "0x23E49B8", VA = "0x23E49B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600255E")]
		[Address(RVA = "0x23E492C", Offset = "0x23E492C", VA = "0x23E492C")]
		set
		{
		}
	}

	[Token(Token = "0x1700032A")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6002561")]
		[Address(RVA = "0x23E4B08", Offset = "0x23E4B08", VA = "0x23E4B08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002560")]
		[Address(RVA = "0x23E4A7C", Offset = "0x23E4A7C", VA = "0x23E4A7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700032B")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6002563")]
		[Address(RVA = "0x23E4C6C", Offset = "0x23E4C6C", VA = "0x23E4C6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002562")]
		[Address(RVA = "0x23E4BCC", Offset = "0x23E4BCC", VA = "0x23E4BCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700032C")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6002565")]
		[Address(RVA = "0x23E4E1C", Offset = "0x23E4E1C", VA = "0x23E4E1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002564")]
		[Address(RVA = "0x23E4D30", Offset = "0x23E4D30", VA = "0x23E4D30")]
		set
		{
		}
	}

	[Token(Token = "0x1700032D")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6002567")]
		[Address(RVA = "0x23E500C", Offset = "0x23E500C", VA = "0x23E500C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002566")]
		[Address(RVA = "0x23E4F20", Offset = "0x23E4F20", VA = "0x23E4F20")]
		set
		{
		}
	}

	[Token(Token = "0x1700032E")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x6002569")]
		[Address(RVA = "0x23E519C", Offset = "0x23E519C", VA = "0x23E519C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002568")]
		[Address(RVA = "0x23E5110", Offset = "0x23E5110", VA = "0x23E5110")]
		set
		{
		}
	}

	[Token(Token = "0x1700032F")]
	public bool useAsyncOpen
	{
		[Token(Token = "0x600256B")]
		[Address(RVA = "0x23E52D8", Offset = "0x23E52D8", VA = "0x23E52D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600256A")]
		[Address(RVA = "0x23E5260", Offset = "0x23E5260", VA = "0x23E5260")]
		set
		{
		}
	}

	[Token(Token = "0x6002557")]
	[Address(RVA = "0x23E4590", Offset = "0x23E4590", VA = "0x23E4590")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002558")]
	[Address(RVA = "0x23E45D0", Offset = "0x23E45D0", VA = "0x23E45D0")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002559")]
	[Address(RVA = "0x23E461C", Offset = "0x23E461C", VA = "0x23E461C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600255A")]
	[Address(RVA = "0x23E46BC", Offset = "0x23E46BC", VA = "0x23E46BC", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x600255B")]
	[Address(RVA = "0x23E4644", Offset = "0x23E4644", VA = "0x23E4644", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600255C")]
	[Address(RVA = "0x23E4730", Offset = "0x23E4730", VA = "0x23E4730", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600255D")]
	[Address(RVA = "0x23E48AC", Offset = "0x23E48AC", VA = "0x23E48AC")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x200050D")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x40021E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40021E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000330")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6002573")]
		[Address(RVA = "0x23E5CE4", Offset = "0x23E5CE4", VA = "0x23E5CE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002572")]
		[Address(RVA = "0x23E5BF8", Offset = "0x23E5BF8", VA = "0x23E5BF8")]
		set
		{
		}
	}

	[Token(Token = "0x600256C")]
	[Address(RVA = "0x23E58DC", Offset = "0x23E58DC", VA = "0x23E58DC")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600256D")]
	[Address(RVA = "0x23E591C", Offset = "0x23E591C", VA = "0x23E591C")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600256E")]
	[Address(RVA = "0x23E5968", Offset = "0x23E5968", VA = "0x23E5968", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600256F")]
	[Address(RVA = "0x23E5A08", Offset = "0x23E5A08", VA = "0x23E5A08", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6002570")]
	[Address(RVA = "0x23E5990", Offset = "0x23E5990", VA = "0x23E5990", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002571")]
	[Address(RVA = "0x23E5A7C", Offset = "0x23E5A7C", VA = "0x23E5A7C", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002574")]
	[Address(RVA = "0x23E5DE8", Offset = "0x23E5DE8", VA = "0x23E5DE8")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6002575")]
	[Address(RVA = "0x23E5E90", Offset = "0x23E5E90", VA = "0x23E5E90")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6002576")]
	[Address(RVA = "0x23E5F38", Offset = "0x23E5F38", VA = "0x23E5F38")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6002577")]
	[Address(RVA = "0x23E5FE0", Offset = "0x23E5FE0", VA = "0x23E5FE0")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6002578")]
	[Address(RVA = "0x23E6080", Offset = "0x23E6080", VA = "0x23E6080")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6002579")]
	[Address(RVA = "0x23E6120", Offset = "0x23E6120", VA = "0x23E6120")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x200050E")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x40021E4")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x40021E5")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x40021E6")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x40021E7")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x40021E8")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x40021E9")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x40021EA")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x40021EB")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x40021EC")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x40021ED")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x40021EE")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x40021EF")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x40021F0")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x40021F1")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x40021F2")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x40021F3")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x40021F4")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x40021F5")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x40021F6")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x40021F7")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x40021F8")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x40021F9")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x40021FA")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x40021FB")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x40021FC")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x40021FD")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x40021FE")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x40021FF")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x4002200")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x4002201")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x4002202")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x4002203")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x4002204")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4002205")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4002206")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4002207")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4002208")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4002209")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x400220A")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x400220B")]
	VOLUME_FINE = 39,
	[Token(Token = "0x400220C")]
	BALANCE_FINE = 40,
	[Token(Token = "0x400220D")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x400220E")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x400220F")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x4002210")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x4002211")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x4002212")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x4002213")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x4002214")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4002215")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4002216")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4002217")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4002218")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4002219")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x400221A")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x400221B")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x400221C")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x400221D")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x400221E")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x400221F")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x4002220")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x4002221")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x4002222")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x4002223")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x4002224")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4002225")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4002226")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4002227")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4002228")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4002229")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x400222A")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x400222B")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x400222C")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x400222D")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x400222E")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x400222F")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x4002230")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x4002231")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x4002232")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x4002233")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x4002234")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4002235")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4002236")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4002237")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4002238")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4002239")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x400223A")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x400223B")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x400223C")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x400223D")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x400223E")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x400223F")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x4002240")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x4002241")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x4002242")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x4002243")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x4002244")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x200050F")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000510")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000344")]
		public byte byParam1
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0x20ECC14", Offset = "0x20ECC14", VA = "0x20ECC14")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x20ECB9C", Offset = "0x20ECB9C", VA = "0x20ECB9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public byte byParam2
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x20ECCF4", Offset = "0x20ECCF4", VA = "0x20ECCF4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x20ECC7C", Offset = "0x20ECC7C", VA = "0x20ECC7C")]
			set
			{
			}
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x20EC880", Offset = "0x20EC880", VA = "0x20EC880")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x20EC8C0", Offset = "0x20EC8C0", VA = "0x20EC8C0")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x20EC90C", Offset = "0x20EC90C", VA = "0x20EC90C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x20EC9AC", Offset = "0x20EC9AC", VA = "0x20EC9AC", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x20EC934", Offset = "0x20EC934", VA = "0x20EC934", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x20ECA20", Offset = "0x20ECA20", VA = "0x20ECA20", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x20ECD5C", Offset = "0x20ECD5C", VA = "0x20ECD5C")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x2000511")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000346")]
		public byte byNote
		{
			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x20ED6CC", Offset = "0x20ED6CC", VA = "0x20ED6CC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x20ED654", Offset = "0x20ED654", VA = "0x20ED654")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public byte byVelocity
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x20ED7AC", Offset = "0x20ED7AC", VA = "0x20ED7AC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x20ED734", Offset = "0x20ED734", VA = "0x20ED734")]
			set
			{
			}
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x20ED338", Offset = "0x20ED338", VA = "0x20ED338")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x20ED378", Offset = "0x20ED378", VA = "0x20ED378")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x20ED3C4", Offset = "0x20ED3C4", VA = "0x20ED3C4", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x20ED464", Offset = "0x20ED464", VA = "0x20ED464", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x20ED3EC", Offset = "0x20ED3EC", VA = "0x20ED3EC", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x20ED4D8", Offset = "0x20ED4D8", VA = "0x20ED4D8", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x20ED814", Offset = "0x20ED814", VA = "0x20ED814")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x2000512")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000348")]
		public byte byCc
		{
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x20EC23C", Offset = "0x20EC23C", VA = "0x20EC23C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x20EC1C4", Offset = "0x20EC1C4", VA = "0x20EC1C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public byte byValue
		{
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x20EC31C", Offset = "0x20EC31C", VA = "0x20EC31C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x20EC2A4", Offset = "0x20EC2A4", VA = "0x20EC2A4")]
			set
			{
			}
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x20EBEA8", Offset = "0x20EBEA8", VA = "0x20EBEA8")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x20EBEE8", Offset = "0x20EBEE8", VA = "0x20EBEE8")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x20EBF34", Offset = "0x20EBF34", VA = "0x20EBF34", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x20EBFD4", Offset = "0x20EBFD4", VA = "0x20EBFD4", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x20EBF5C", Offset = "0x20EBF5C", VA = "0x20EBF5C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x20EC048", Offset = "0x20EC048", VA = "0x20EC048", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x20EC384", Offset = "0x20EC384", VA = "0x20EC384")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000513")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700034A")]
		public byte byValueLsb
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x20EDC28", Offset = "0x20EDC28", VA = "0x20EDC28")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x20EDBB0", Offset = "0x20EDBB0", VA = "0x20EDBB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public byte byValueMsb
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x20EDD08", Offset = "0x20EDD08", VA = "0x20EDD08")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x20EDC90", Offset = "0x20EDC90", VA = "0x20EDC90")]
			set
			{
			}
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x20ED894", Offset = "0x20ED894", VA = "0x20ED894")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x20ED8D4", Offset = "0x20ED8D4", VA = "0x20ED8D4")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x20ED920", Offset = "0x20ED920", VA = "0x20ED920", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x20ED9C0", Offset = "0x20ED9C0", VA = "0x20ED9C0", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x20ED948", Offset = "0x20ED948", VA = "0x20ED948", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x20EDA34", Offset = "0x20EDA34", VA = "0x20EDA34", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x20EDD70", Offset = "0x20EDD70", VA = "0x20EDD70")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000514")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700034C")]
		public byte byNote
		{
			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x20ED170", Offset = "0x20ED170", VA = "0x20ED170")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x20ED0F8", Offset = "0x20ED0F8", VA = "0x20ED0F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public byte byValue
		{
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x20ED250", Offset = "0x20ED250", VA = "0x20ED250")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x20ED1D8", Offset = "0x20ED1D8", VA = "0x20ED1D8")]
			set
			{
			}
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x20ECDDC", Offset = "0x20ECDDC", VA = "0x20ECDDC")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x20ECE1C", Offset = "0x20ECE1C", VA = "0x20ECE1C")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x20ECE68", Offset = "0x20ECE68", VA = "0x20ECE68", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x20ECF08", Offset = "0x20ECF08", VA = "0x20ECF08", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x20ECE90", Offset = "0x20ECE90", VA = "0x20ECE90", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x20ECF7C", Offset = "0x20ECF7C", VA = "0x20ECF7C", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x20ED2B8", Offset = "0x20ED2B8", VA = "0x20ED2B8")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000515")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700034E")]
		public byte byValue
		{
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x20EC798", Offset = "0x20EC798", VA = "0x20EC798")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x20EC720", Offset = "0x20EC720", VA = "0x20EC720")]
			set
			{
			}
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x20EC404", Offset = "0x20EC404", VA = "0x20EC404")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x20EC444", Offset = "0x20EC444", VA = "0x20EC444")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x20EC490", Offset = "0x20EC490", VA = "0x20EC490", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x20EC530", Offset = "0x20EC530", VA = "0x20EC530", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x20EC4B8", Offset = "0x20EC4B8", VA = "0x20EC4B8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x20EC5A4", Offset = "0x20EC5A4", VA = "0x20EC5A4", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x20EC800", Offset = "0x20EC800", VA = "0x20EC800")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x2000516")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700034F")]
		public byte byProgramNum
		{
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x20EE184", Offset = "0x20EE184", VA = "0x20EE184")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x20EE10C", Offset = "0x20EE10C", VA = "0x20EE10C")]
			set
			{
			}
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x20EDDF0", Offset = "0x20EDDF0", VA = "0x20EDDF0")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x20EDE30", Offset = "0x20EDE30", VA = "0x20EDE30")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x20EDE7C", Offset = "0x20EDE7C", VA = "0x20EDE7C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x20EDF1C", Offset = "0x20EDF1C", VA = "0x20EDF1C", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x20EDEA4", Offset = "0x20EDEA4", VA = "0x20EDEA4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x20EDF90", Offset = "0x20EDF90", VA = "0x20EDF90", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x20EE1EC", Offset = "0x20EE1EC", VA = "0x20EE1EC")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x4002245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000331")]
	public byte byChan
	{
		[Token(Token = "0x6002581")]
		[Address(RVA = "0x23E6CD8", Offset = "0x23E6CD8", VA = "0x23E6CD8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002580")]
		[Address(RVA = "0x23E6C60", Offset = "0x23E6C60", VA = "0x23E6C60")]
		set
		{
		}
	}

	[Token(Token = "0x17000332")]
	public tGen Gen
	{
		[Token(Token = "0x6002583")]
		[Address(RVA = "0x23E6DCC", Offset = "0x23E6DCC", VA = "0x23E6DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002582")]
		[Address(RVA = "0x23E6D40", Offset = "0x23E6D40", VA = "0x23E6D40")]
		set
		{
		}
	}

	[Token(Token = "0x17000333")]
	public tCc Cc
	{
		[Token(Token = "0x6002585")]
		[Address(RVA = "0x23E6F1C", Offset = "0x23E6F1C", VA = "0x23E6F1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002584")]
		[Address(RVA = "0x23E6E90", Offset = "0x23E6E90", VA = "0x23E6E90")]
		set
		{
		}
	}

	[Token(Token = "0x17000334")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6002587")]
		[Address(RVA = "0x23E706C", Offset = "0x23E706C", VA = "0x23E706C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002586")]
		[Address(RVA = "0x23E6FE0", Offset = "0x23E6FE0", VA = "0x23E6FE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000335")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6002589")]
		[Address(RVA = "0x23E71BC", Offset = "0x23E71BC", VA = "0x23E71BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002588")]
		[Address(RVA = "0x23E7130", Offset = "0x23E7130", VA = "0x23E7130")]
		set
		{
		}
	}

	[Token(Token = "0x17000336")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x600258B")]
		[Address(RVA = "0x23E730C", Offset = "0x23E730C", VA = "0x23E730C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600258A")]
		[Address(RVA = "0x23E7280", Offset = "0x23E7280", VA = "0x23E7280")]
		set
		{
		}
	}

	[Token(Token = "0x17000337")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x600258D")]
		[Address(RVA = "0x23E745C", Offset = "0x23E745C", VA = "0x23E745C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600258C")]
		[Address(RVA = "0x23E73D0", Offset = "0x23E73D0", VA = "0x23E73D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000338")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x600258F")]
		[Address(RVA = "0x23E75AC", Offset = "0x23E75AC", VA = "0x23E75AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600258E")]
		[Address(RVA = "0x23E7520", Offset = "0x23E7520", VA = "0x23E7520")]
		set
		{
		}
	}

	[Token(Token = "0x17000339")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6002591")]
		[Address(RVA = "0x23E76E8", Offset = "0x23E76E8", VA = "0x23E76E8")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6002590")]
		[Address(RVA = "0x23E7670", Offset = "0x23E7670", VA = "0x23E7670")]
		set
		{
		}
	}

	[Token(Token = "0x1700033A")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6002593")]
		[Address(RVA = "0x23E77C8", Offset = "0x23E77C8", VA = "0x23E77C8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002592")]
		[Address(RVA = "0x23E7750", Offset = "0x23E7750", VA = "0x23E7750")]
		set
		{
		}
	}

	[Token(Token = "0x1700033B")]
	public byte byVelocity
	{
		[Token(Token = "0x6002595")]
		[Address(RVA = "0x23E78A8", Offset = "0x23E78A8", VA = "0x23E78A8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002594")]
		[Address(RVA = "0x23E7830", Offset = "0x23E7830", VA = "0x23E7830")]
		set
		{
		}
	}

	[Token(Token = "0x1700033C")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6002597")]
		[Address(RVA = "0x23E7988", Offset = "0x23E7988", VA = "0x23E7988")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6002596")]
		[Address(RVA = "0x23E7910", Offset = "0x23E7910", VA = "0x23E7910")]
		set
		{
		}
	}

	[Token(Token = "0x1700033D")]
	public byte byCcValue
	{
		[Token(Token = "0x6002599")]
		[Address(RVA = "0x23E7A68", Offset = "0x23E7A68", VA = "0x23E7A68")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002598")]
		[Address(RVA = "0x23E79F0", Offset = "0x23E79F0", VA = "0x23E79F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700033E")]
	public byte byValueLsb
	{
		[Token(Token = "0x600259B")]
		[Address(RVA = "0x23E7B48", Offset = "0x23E7B48", VA = "0x23E7B48")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600259A")]
		[Address(RVA = "0x23E7AD0", Offset = "0x23E7AD0", VA = "0x23E7AD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700033F")]
	public byte byValueMsb
	{
		[Token(Token = "0x600259D")]
		[Address(RVA = "0x23E7C28", Offset = "0x23E7C28", VA = "0x23E7C28")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600259C")]
		[Address(RVA = "0x23E7BB0", Offset = "0x23E7BB0", VA = "0x23E7BB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000340")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x600259F")]
		[Address(RVA = "0x23E7D08", Offset = "0x23E7D08", VA = "0x23E7D08")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600259E")]
		[Address(RVA = "0x23E7C90", Offset = "0x23E7C90", VA = "0x23E7C90")]
		set
		{
		}
	}

	[Token(Token = "0x17000341")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x23E7DE8", Offset = "0x23E7DE8", VA = "0x23E7DE8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x23E7D70", Offset = "0x23E7D70", VA = "0x23E7D70")]
		set
		{
		}
	}

	[Token(Token = "0x17000342")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x23E7EC8", Offset = "0x23E7EC8", VA = "0x23E7EC8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x23E7E50", Offset = "0x23E7E50", VA = "0x23E7E50")]
		set
		{
		}
	}

	[Token(Token = "0x17000343")]
	public byte byProgramNum
	{
		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x23E7FA8", Offset = "0x23E7FA8", VA = "0x23E7FA8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x23E7F30", Offset = "0x23E7F30", VA = "0x23E7F30")]
		set
		{
		}
	}

	[Token(Token = "0x600257A")]
	[Address(RVA = "0x23E6944", Offset = "0x23E6944", VA = "0x23E6944")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600257B")]
	[Address(RVA = "0x23E6984", Offset = "0x23E6984", VA = "0x23E6984")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600257C")]
	[Address(RVA = "0x23E69D0", Offset = "0x23E69D0", VA = "0x23E69D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600257D")]
	[Address(RVA = "0x23E6A70", Offset = "0x23E6A70", VA = "0x23E6A70", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x600257E")]
	[Address(RVA = "0x23E69F8", Offset = "0x23E69F8", VA = "0x23E69F8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600257F")]
	[Address(RVA = "0x23E6AE4", Offset = "0x23E6AE4", VA = "0x23E6AE4", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60025A6")]
	[Address(RVA = "0x23E8010", Offset = "0x23E8010", VA = "0x23E8010")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x2000517")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4002255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000350")]
	public byte byChan
	{
		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x23E837C", Offset = "0x23E837C", VA = "0x23E837C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000351")]
	public byte byParam1
	{
		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x23E83E4", Offset = "0x23E83E4", VA = "0x23E83E4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000352")]
	public byte byParam2
	{
		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x23E844C", Offset = "0x23E844C", VA = "0x23E844C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000353")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x23E84B4", Offset = "0x23E84B4", VA = "0x23E84B4")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x17000354")]
	public byte byOnOffNote
	{
		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x23E851C", Offset = "0x23E851C", VA = "0x23E851C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000355")]
	public byte byVelocity
	{
		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x23E8584", Offset = "0x23E8584", VA = "0x23E8584")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000356")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x23E85EC", Offset = "0x23E85EC", VA = "0x23E85EC")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x17000357")]
	public byte byCcValue
	{
		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x23E8654", Offset = "0x23E8654", VA = "0x23E8654")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000358")]
	public byte byValueLsb
	{
		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x23E86BC", Offset = "0x23E86BC", VA = "0x23E86BC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000359")]
	public byte byValueMsb
	{
		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x23E8724", Offset = "0x23E8724", VA = "0x23E8724")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700035A")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x23E878C", Offset = "0x23E878C", VA = "0x23E878C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700035B")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x23E87F4", Offset = "0x23E87F4", VA = "0x23E87F4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700035C")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6002600")]
		[Address(RVA = "0x23E885C", Offset = "0x23E885C", VA = "0x23E885C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700035D")]
	public byte byProgramNum
	{
		[Token(Token = "0x6002601")]
		[Address(RVA = "0x23E88C4", Offset = "0x23E88C4", VA = "0x23E88C4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x60025F0")]
	[Address(RVA = "0x23E8090", Offset = "0x23E8090", VA = "0x23E8090")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60025F1")]
	[Address(RVA = "0x23E811C", Offset = "0x23E811C", VA = "0x23E811C")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60025F2")]
	[Address(RVA = "0x23E8168", Offset = "0x23E8168", VA = "0x23E8168", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60025F3")]
	[Address(RVA = "0x23E81EC", Offset = "0x23E81EC", VA = "0x23E81EC", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002602")]
	[Address(RVA = "0x23E892C", Offset = "0x23E892C", VA = "0x23E892C")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000518")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4002257")]
	NOTE_OFF = 128,
	[Token(Token = "0x4002258")]
	NOTE_ON = 144,
	[Token(Token = "0x4002259")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x400225A")]
	CONTROLLER = 176,
	[Token(Token = "0x400225B")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x400225C")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x400225D")]
	PITCH_BEND = 224,
	[Token(Token = "0x400225E")]
	SYSEX = 240,
	[Token(Token = "0x400225F")]
	ESCAPE = 247,
	[Token(Token = "0x4002260")]
	META = 255
}
[Token(Token = "0x2000519")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x4002261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700035E")]
	public uint uOffset
	{
		[Token(Token = "0x6002608")]
		[Address(RVA = "0x23E8D0C", Offset = "0x23E8D0C", VA = "0x23E8D0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002607")]
		[Address(RVA = "0x23E8C94", Offset = "0x23E8C94", VA = "0x23E8C94")]
		set
		{
		}
	}

	[Token(Token = "0x6002603")]
	[Address(RVA = "0x23E899C", Offset = "0x23E899C", VA = "0x23E899C")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002604")]
	[Address(RVA = "0x23E8A34", Offset = "0x23E8A34", VA = "0x23E8A34")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002605")]
	[Address(RVA = "0x23E8A80", Offset = "0x23E8A80", VA = "0x23E8A80", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002606")]
	[Address(RVA = "0x23E8B08", Offset = "0x23E8B08", VA = "0x23E8B08", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002609")]
	[Address(RVA = "0x23E8D74", Offset = "0x23E8D74", VA = "0x23E8D74")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600260A")]
	[Address(RVA = "0x23E8F30", Offset = "0x23E8F30", VA = "0x23E8F30")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x600260B")]
	[Address(RVA = "0x23E8FD0", Offset = "0x23E8FD0", VA = "0x23E8FD0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600260C")]
	[Address(RVA = "0x23E902C", Offset = "0x23E902C", VA = "0x23E902C")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x200051A")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4002262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700035F")]
	public uint uIdentifier
	{
		[Token(Token = "0x6002611")]
		[Address(RVA = "0x23E9968", Offset = "0x23E9968", VA = "0x23E9968")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000360")]
	public uint uPosition
	{
		[Token(Token = "0x6002612")]
		[Address(RVA = "0x23E99D0", Offset = "0x23E99D0", VA = "0x23E99D0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000361")]
	public string strLabel
	{
		[Token(Token = "0x6002613")]
		[Address(RVA = "0x23E9A38", Offset = "0x23E9A38", VA = "0x23E9A38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600260D")]
	[Address(RVA = "0x23E967C", Offset = "0x23E967C", VA = "0x23E967C")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600260E")]
	[Address(RVA = "0x23E9708", Offset = "0x23E9708", VA = "0x23E9708")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600260F")]
	[Address(RVA = "0x23E9754", Offset = "0x23E9754", VA = "0x23E9754", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002610")]
	[Address(RVA = "0x23E97D8", Offset = "0x23E97D8", VA = "0x23E97D8", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002614")]
	[Address(RVA = "0x23E9B40", Offset = "0x23E9B40", VA = "0x23E9B40")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x200051B")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4002264")]
	AK_NoMetering = 0,
	[Token(Token = "0x4002265")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4002266")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4002267")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4002268")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4002269")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x200051C")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x400226B")]
	ErrorCode_NoError,
	[Token(Token = "0x400226C")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x400226D")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x400226E")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x400226F")]
	ErrorCode_IODevice,
	[Token(Token = "0x4002270")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4002271")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4002272")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4002273")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4002274")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4002275")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4002276")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4002277")]
	ErrorCode_VorbisSeekTableRecommended,
	[Token(Token = "0x4002278")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4002279")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x400227A")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x400227B")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x400227C")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x400227D")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x400227E")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x400227F")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4002280")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4002281")]
	ErrorCode_TransitionNotAccuratePluginMismatch,
	[Token(Token = "0x4002282")]
	ErrorCode_TransitionNotAccurateRejectedByPlugin,
	[Token(Token = "0x4002283")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4002284")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4002285")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4002286")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4002287")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4002288")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4002289")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x400228A")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x400228B")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x400228C")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x400228D")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x400228E")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x400228F")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x4002290")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x4002291")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x4002292")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x4002293")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x4002294")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x4002295")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x4002296")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x4002297")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x4002298")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x4002299")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x400229A")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x400229B")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x400229C")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x400229D")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x400229E")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x400229F")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40022A0")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40022A1")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40022A2")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40022A3")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40022A4")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40022A5")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40022A6")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40022A7")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40022A8")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40022A9")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40022AA")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40022AB")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40022AC")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40022AD")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40022AE")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40022AF")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40022B0")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40022B1")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40022B2")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40022B3")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40022B4")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40022B5")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x40022B6")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x40022B7")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x40022B8")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x40022B9")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x40022BA")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x40022BB")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x40022BC")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x40022BD")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x40022BE")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x40022BF")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x40022C0")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x40022C1")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x40022C2")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x40022C3")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x40022C4")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x40022C5")]
	ErrorCode_SpatialAudio_ListenerAutomationNotSupported,
	[Token(Token = "0x40022C6")]
	ErrorCode_MediaDuplicationLength,
	[Token(Token = "0x40022C7")]
	ErrorCode_HwVoicesSystemInitFailed,
	[Token(Token = "0x40022C8")]
	ErrorCode_HwVoicesDecodeBatchFailed,
	[Token(Token = "0x40022C9")]
	ErrorCode_HwVoiceLimitReached,
	[Token(Token = "0x40022CA")]
	ErrorCode_HwVoiceInitFailed,
	[Token(Token = "0x40022CB")]
	ErrorCode_SpatialAudio_ReflectionBusError,
	[Token(Token = "0x40022CC")]
	Num_ErrorCodes
}
[Token(Token = "0x200051D")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x40022CE")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x40022CF")]
	ErrorLevel_Error,
	[Token(Token = "0x40022D0")]
	ErrorLevel_All
}
[Token(Token = "0x200051E")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x40022D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000362")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x600261B")]
		[Address(RVA = "0x23EA610", Offset = "0x23EA610", VA = "0x23EA610")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x17000363")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x600261C")]
		[Address(RVA = "0x23EA678", Offset = "0x23EA678", VA = "0x23EA678")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x17000364")]
	public uint playingID
	{
		[Token(Token = "0x600261D")]
		[Address(RVA = "0x23EA6E0", Offset = "0x23EA6E0", VA = "0x23EA6E0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000365")]
	public ulong gameObjID
	{
		[Token(Token = "0x600261E")]
		[Address(RVA = "0x23EA748", Offset = "0x23EA748", VA = "0x23EA748")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000366")]
	public string message
	{
		[Token(Token = "0x600261F")]
		[Address(RVA = "0x23EA7B0", Offset = "0x23EA7B0", VA = "0x23EA7B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002615")]
	[Address(RVA = "0x23EA2F4", Offset = "0x23EA2F4", VA = "0x23EA2F4")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002616")]
	[Address(RVA = "0x23EA334", Offset = "0x23EA334", VA = "0x23EA334")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002617")]
	[Address(RVA = "0x23EA380", Offset = "0x23EA380", VA = "0x23EA380", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002618")]
	[Address(RVA = "0x23EA420", Offset = "0x23EA420", VA = "0x23EA420", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x6002619")]
	[Address(RVA = "0x23EA3A8", Offset = "0x23EA3A8", VA = "0x23EA3A8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600261A")]
	[Address(RVA = "0x23EA494", Offset = "0x23EA494", VA = "0x23EA494", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002620")]
	[Address(RVA = "0x23EA854", Offset = "0x23EA854", VA = "0x23EA854")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x200051F")]
public enum AkMultiPositionType
{
	[Token(Token = "0x40022D4")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x40022D5")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x40022D6")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000520")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40022D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000367")]
	public uint playlistID
	{
		[Token(Token = "0x6002625")]
		[Address(RVA = "0x23EAC4C", Offset = "0x23EAC4C", VA = "0x23EAC4C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000368")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x6002626")]
		[Address(RVA = "0x23EACB4", Offset = "0x23EACB4", VA = "0x23EACB4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000369")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x6002627")]
		[Address(RVA = "0x23EAD1C", Offset = "0x23EAD1C", VA = "0x23EAD1C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700036A")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x6002628")]
		[Address(RVA = "0x23EAD84", Offset = "0x23EAD84", VA = "0x23EAD84")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6002621")]
	[Address(RVA = "0x23EA960", Offset = "0x23EA960", VA = "0x23EA960")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002622")]
	[Address(RVA = "0x23EA9EC", Offset = "0x23EA9EC", VA = "0x23EA9EC")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002623")]
	[Address(RVA = "0x23EAA38", Offset = "0x23EAA38", VA = "0x23EAA38", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002624")]
	[Address(RVA = "0x23EAABC", Offset = "0x23EAABC", VA = "0x23EAABC", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002629")]
	[Address(RVA = "0x23EADEC", Offset = "0x23EADEC", VA = "0x23EADEC")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x2000521")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x40022D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700036B")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6002631")]
		[Address(RVA = "0x23EB164", Offset = "0x23EB164", VA = "0x23EB164")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002630")]
		[Address(RVA = "0x23EB0EC", Offset = "0x23EB0EC", VA = "0x23EB0EC")]
		set
		{
		}
	}

	[Token(Token = "0x600262A")]
	[Address(RVA = "0x23E50D0", Offset = "0x23E50D0", VA = "0x23E50D0")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600262B")]
	[Address(RVA = "0x23E4FC0", Offset = "0x23E4FC0", VA = "0x23E4FC0")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600262C")]
	[Address(RVA = "0x23EAE5C", Offset = "0x23EAE5C", VA = "0x23EAE5C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600262D")]
	[Address(RVA = "0x23EAEFC", Offset = "0x23EAEFC", VA = "0x23EAEFC", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x600262E")]
	[Address(RVA = "0x23EAE84", Offset = "0x23EAE84", VA = "0x23EAE84", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600262F")]
	[Address(RVA = "0x23EAF70", Offset = "0x23EAF70", VA = "0x23EAF70", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x2000522")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40022DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700036C")]
	public uint playingID
	{
		[Token(Token = "0x6002636")]
		[Address(RVA = "0x23EB4C4", Offset = "0x23EB4C4", VA = "0x23EB4C4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700036D")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x6002637")]
		[Address(RVA = "0x23EB52C", Offset = "0x23EB52C", VA = "0x23EB52C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700036E")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x6002638")]
		[Address(RVA = "0x23EB594", Offset = "0x23EB594", VA = "0x23EB594")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700036F")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x6002639")]
		[Address(RVA = "0x23EB5FC", Offset = "0x23EB5FC", VA = "0x23EB5FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000370")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x600263A")]
		[Address(RVA = "0x23EB664", Offset = "0x23EB664", VA = "0x23EB664")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000371")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x600263B")]
		[Address(RVA = "0x23EB6CC", Offset = "0x23EB6CC", VA = "0x23EB6CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000372")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x600263C")]
		[Address(RVA = "0x23EB734", Offset = "0x23EB734", VA = "0x23EB734")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000373")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x600263D")]
		[Address(RVA = "0x23EB79C", Offset = "0x23EB79C", VA = "0x23EB79C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000374")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x600263E")]
		[Address(RVA = "0x23EB804", Offset = "0x23EB804", VA = "0x23EB804")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000375")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x600263F")]
		[Address(RVA = "0x23EB86C", Offset = "0x23EB86C", VA = "0x23EB86C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000376")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x6002640")]
		[Address(RVA = "0x23EB8D4", Offset = "0x23EB8D4", VA = "0x23EB8D4")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x17000377")]
	public string userCueName
	{
		[Token(Token = "0x6002641")]
		[Address(RVA = "0x23EB93C", Offset = "0x23EB93C", VA = "0x23EB93C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002632")]
	[Address(RVA = "0x23EB1CC", Offset = "0x23EB1CC", VA = "0x23EB1CC")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002633")]
	[Address(RVA = "0x23EB25C", Offset = "0x23EB25C", VA = "0x23EB25C")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002634")]
	[Address(RVA = "0x23EB2A8", Offset = "0x23EB2A8", VA = "0x23EB2A8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002635")]
	[Address(RVA = "0x23EB330", Offset = "0x23EB330", VA = "0x23EB330", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002642")]
	[Address(RVA = "0x23EB9E0", Offset = "0x23EB9E0", VA = "0x23EB9E0")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x2000523")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x40022DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000378")]
	public uint objID
	{
		[Token(Token = "0x600264A")]
		[Address(RVA = "0x23EBDE4", Offset = "0x23EBDE4", VA = "0x23EBDE4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002649")]
		[Address(RVA = "0x23EBD6C", Offset = "0x23EBD6C", VA = "0x23EBD6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000379")]
	public uint parentID
	{
		[Token(Token = "0x600264C")]
		[Address(RVA = "0x23EBEC4", Offset = "0x23EBEC4", VA = "0x23EBEC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600264B")]
		[Address(RVA = "0x23EBE4C", Offset = "0x23EBE4C", VA = "0x23EBE4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700037A")]
	public int iDepth
	{
		[Token(Token = "0x600264E")]
		[Address(RVA = "0x23EBFA4", Offset = "0x23EBFA4", VA = "0x23EBFA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600264D")]
		[Address(RVA = "0x23EBF2C", Offset = "0x23EBF2C", VA = "0x23EBF2C")]
		set
		{
		}
	}

	[Token(Token = "0x6002643")]
	[Address(RVA = "0x23EBA50", Offset = "0x23EBA50", VA = "0x23EBA50")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002644")]
	[Address(RVA = "0x23EBA90", Offset = "0x23EBA90", VA = "0x23EBA90")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002645")]
	[Address(RVA = "0x23EBADC", Offset = "0x23EBADC", VA = "0x23EBADC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002646")]
	[Address(RVA = "0x23EBB7C", Offset = "0x23EBB7C", VA = "0x23EBB7C", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x6002647")]
	[Address(RVA = "0x23EBB04", Offset = "0x23EBB04", VA = "0x23EBB04", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002648")]
	[Address(RVA = "0x23EBBF0", Offset = "0x23EBBF0", VA = "0x23EBBF0", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600264F")]
	[Address(RVA = "0x23EC00C", Offset = "0x23EC00C", VA = "0x23EC00C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002650")]
	[Address(RVA = "0x23EC074", Offset = "0x23EC074", VA = "0x23EC074")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002651")]
	[Address(RVA = "0x23EC0D0", Offset = "0x23EC0D0", VA = "0x23EC0D0")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x6002652")]
	[Address(RVA = "0x23EC170", Offset = "0x23EC170", VA = "0x23EC170")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x2000524")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x40022DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700037B")]
	public float occlusion
	{
		[Token(Token = "0x600265A")]
		[Address(RVA = "0x23ECF5C", Offset = "0x23ECF5C", VA = "0x23ECF5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002659")]
		[Address(RVA = "0x23ECEE4", Offset = "0x23ECEE4", VA = "0x23ECEE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700037C")]
	public float obstruction
	{
		[Token(Token = "0x600265C")]
		[Address(RVA = "0x23ED03C", Offset = "0x23ED03C", VA = "0x23ED03C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600265B")]
		[Address(RVA = "0x23ECFC4", Offset = "0x23ECFC4", VA = "0x23ECFC4")]
		set
		{
		}
	}

	[Token(Token = "0x6002653")]
	[Address(RVA = "0x23ECBC8", Offset = "0x23ECBC8", VA = "0x23ECBC8")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002654")]
	[Address(RVA = "0x23ECC08", Offset = "0x23ECC08", VA = "0x23ECC08")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002655")]
	[Address(RVA = "0x23ECC54", Offset = "0x23ECC54", VA = "0x23ECC54", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002656")]
	[Address(RVA = "0x23ECCF4", Offset = "0x23ECCF4", VA = "0x23ECCF4", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6002657")]
	[Address(RVA = "0x23ECC7C", Offset = "0x23ECC7C", VA = "0x23ECC7C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002658")]
	[Address(RVA = "0x23ECD68", Offset = "0x23ECD68", VA = "0x23ECD68", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600265D")]
	[Address(RVA = "0x23ED0A4", Offset = "0x23ED0A4", VA = "0x23ED0A4")]
	public void Clear()
	{
	}

	[Token(Token = "0x600265E")]
	[Address(RVA = "0x23ED10C", Offset = "0x23ED10C", VA = "0x23ED10C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600265F")]
	[Address(RVA = "0x23ED168", Offset = "0x23ED168", VA = "0x23ED168")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x6002660")]
	[Address(RVA = "0x23ED208", Offset = "0x23ED208", VA = "0x23ED208")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x2000525")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x40022DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700037D")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x600266D")]
		[Address(RVA = "0x23EDAD4", Offset = "0x23EDAD4", VA = "0x23EDAD4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600266C")]
		[Address(RVA = "0x23EDA5C", Offset = "0x23EDA5C", VA = "0x23EDA5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700037E")]
	public uint idDevice
	{
		[Token(Token = "0x600266F")]
		[Address(RVA = "0x23EDBB4", Offset = "0x23EDBB4", VA = "0x23EDBB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600266E")]
		[Address(RVA = "0x23EDB3C", Offset = "0x23EDB3C", VA = "0x23EDB3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700037F")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6002671")]
		[Address(RVA = "0x23EDC94", Offset = "0x23EDC94", VA = "0x23EDC94")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x6002670")]
		[Address(RVA = "0x23EDC1C", Offset = "0x23EDC1C", VA = "0x23EDC1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000380")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6002673")]
		[Address(RVA = "0x23EDD88", Offset = "0x23EDD88", VA = "0x23EDD88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002672")]
		[Address(RVA = "0x23EDCFC", Offset = "0x23EDCFC", VA = "0x23EDCFC")]
		set
		{
		}
	}

	[Token(Token = "0x6002661")]
	[Address(RVA = "0x23E3E14", Offset = "0x23E3E14", VA = "0x23E3E14")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002662")]
	[Address(RVA = "0x23E3D04", Offset = "0x23E3D04", VA = "0x23E3D04")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002663")]
	[Address(RVA = "0x23ED4A4", Offset = "0x23ED4A4", VA = "0x23ED4A4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002664")]
	[Address(RVA = "0x23ED544", Offset = "0x23ED544", VA = "0x23ED544", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6002665")]
	[Address(RVA = "0x23ED4CC", Offset = "0x23ED4CC", VA = "0x23ED4CC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002666")]
	[Address(RVA = "0x23ED5B8", Offset = "0x23ED5B8", VA = "0x23ED5B8", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002667")]
	[Address(RVA = "0x23ED734", Offset = "0x23ED734", VA = "0x23ED734")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x6002668")]
	[Address(RVA = "0x23ED7B4", Offset = "0x23ED7B4", VA = "0x23ED7B4")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x6002669")]
	[Address(RVA = "0x23ED878", Offset = "0x23ED878", VA = "0x23ED878")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x600266A")]
	[Address(RVA = "0x23ED934", Offset = "0x23ED934", VA = "0x23ED934")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x600266B")]
	[Address(RVA = "0x23ED9CC", Offset = "0x23ED9CC", VA = "0x23ED9CC")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x2000526")]
public enum AkPanningRule
{
	[Token(Token = "0x40022E2")]
	AkPanningRule_Speakers,
	[Token(Token = "0x40022E3")]
	AkPanningRule_Headphones
}
[Token(Token = "0x2000527")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x40022E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6002674")]
	[Address(RVA = "0x23EEA7C", Offset = "0x23EEA7C", VA = "0x23EEA7C")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002675")]
	[Address(RVA = "0x23EEB54", Offset = "0x23EEB54", VA = "0x23EEB54")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002676")]
	[Address(RVA = "0x23EEBA0", Offset = "0x23EEBA0", VA = "0x23EEBA0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002677")]
	[Address(RVA = "0x23EEC50", Offset = "0x23EEC50", VA = "0x23EEC50", Slot = "6")]
	protected override void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002678")]
	[Address(RVA = "0x23EEF58", Offset = "0x23EEF58", VA = "0x23EEF58")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002679")]
	[Address(RVA = "0x23EF018", Offset = "0x23EF018", VA = "0x23EF018")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600267A")]
	[Address(RVA = "0x23EF0B0", Offset = "0x23EF0B0", VA = "0x23EF0B0")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600267B")]
	[Address(RVA = "0x23EF140", Offset = "0x23EF140", VA = "0x23EF140")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600267C")]
	[Address(RVA = "0x23EF1C0", Offset = "0x23EF1C0", VA = "0x23EF1C0")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600267D")]
	[Address(RVA = "0x23EF238", Offset = "0x23EF238", VA = "0x23EF238")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x2000528")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x40022E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600267E")]
	[Address(RVA = "0x23EEB14", Offset = "0x23EEB14", VA = "0x23EEB14")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600267F")]
	[Address(RVA = "0x23EF2A8", Offset = "0x23EF2A8", VA = "0x23EF2A8")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002680")]
	[Address(RVA = "0x23EEC28", Offset = "0x23EEC28", VA = "0x23EEC28", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002681")]
	[Address(RVA = "0x23EF36C", Offset = "0x23EF36C", VA = "0x23EF36C", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x6002682")]
	[Address(RVA = "0x23EF2F4", Offset = "0x23EF2F4", VA = "0x23EF2F4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002683")]
	[Address(RVA = "0x23EEDDC", Offset = "0x23EEDDC", VA = "0x23EEDDC", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002684")]
	[Address(RVA = "0x23EF3E0", Offset = "0x23EF3E0", VA = "0x23EF3E0")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x6002685")]
	[Address(RVA = "0x23EF460", Offset = "0x23EF460", VA = "0x23EF460")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x6002686")]
	[Address(RVA = "0x23EF50C", Offset = "0x23EF50C", VA = "0x23EF50C")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x6002687")]
	[Address(RVA = "0x23EF5B8", Offset = "0x23EF5B8", VA = "0x23EF5B8")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6002688")]
	[Address(RVA = "0x23EF69C", Offset = "0x23EF69C", VA = "0x23EF69C")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6002689")]
	[Address(RVA = "0x23EF780", Offset = "0x23EF780", VA = "0x23EF780")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x600268A")]
	[Address(RVA = "0x23EF7F8", Offset = "0x23EF7F8", VA = "0x23EF7F8")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x600268B")]
	[Address(RVA = "0x23EF8DC", Offset = "0x23EF8DC", VA = "0x23EF8DC")]
	public bool IsGrowingAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600268C")]
	[Address(RVA = "0x23EF944", Offset = "0x23EF944", VA = "0x23EF944")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600268D")]
	[Address(RVA = "0x23EF9BC", Offset = "0x23EF9BC", VA = "0x23EF9BC")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x600268E")]
	[Address(RVA = "0x23EFA24", Offset = "0x23EFA24", VA = "0x23EFA24")]
	public void Term()
	{
	}

	[Token(Token = "0x600268F")]
	[Address(RVA = "0x23EFA8C", Offset = "0x23EFA8C", VA = "0x23EFA8C")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x6002690")]
	[Address(RVA = "0x23EFAF4", Offset = "0x23EFAF4", VA = "0x23EFAF4")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x6002691")]
	[Address(RVA = "0x23EFBB8", Offset = "0x23EFBB8", VA = "0x23EFBB8")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6002692")]
	[Address(RVA = "0x23EFC20", Offset = "0x23EFC20", VA = "0x23EFC20")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6002693")]
	[Address(RVA = "0x23EFD1C", Offset = "0x23EFD1C", VA = "0x23EFD1C")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x6002694")]
	[Address(RVA = "0x23EFDE0", Offset = "0x23EFDE0", VA = "0x23EFDE0")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x6002695")]
	[Address(RVA = "0x23EFEDC", Offset = "0x23EFEDC", VA = "0x23EFEDC")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x6002696")]
	[Address(RVA = "0x23EFF84", Offset = "0x23EFF84", VA = "0x23EFF84")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x6002697")]
	[Address(RVA = "0x23EFFEC", Offset = "0x23EFFEC", VA = "0x23EFFEC")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002698")]
	[Address(RVA = "0x23F008C", Offset = "0x23F008C", VA = "0x23F008C")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002699")]
	[Address(RVA = "0x23F012C", Offset = "0x23F012C", VA = "0x23F012C")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x600269A")]
	[Address(RVA = "0x23F0194", Offset = "0x23F0194", VA = "0x23F0194")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x600269B")]
	[Address(RVA = "0x23F024C", Offset = "0x23F024C", VA = "0x23F024C")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x600269C")]
	[Address(RVA = "0x23F0320", Offset = "0x23F0320", VA = "0x23F0320")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x600269D")]
	[Address(RVA = "0x23F0388", Offset = "0x23F0388", VA = "0x23F0388")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x600269E")]
	[Address(RVA = "0x23F0400", Offset = "0x23F0400", VA = "0x23F0400")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x600269F")]
	[Address(RVA = "0x23F0478", Offset = "0x23F0478", VA = "0x23F0478")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x60026A0")]
	[Address(RVA = "0x23F0518", Offset = "0x23F0518", VA = "0x23F0518")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000529")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x40022E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000381")]
	public uint audioNodeID
	{
		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x23F0C10", Offset = "0x23F0C10", VA = "0x23F0C10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x23F0B98", Offset = "0x23F0B98", VA = "0x23F0B98")]
		set
		{
		}
	}

	[Token(Token = "0x17000382")]
	public int msDelay
	{
		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x23F0CF0", Offset = "0x23F0CF0", VA = "0x23F0CF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x23F0C78", Offset = "0x23F0C78", VA = "0x23F0C78")]
		set
		{
		}
	}

	[Token(Token = "0x17000383")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x23F0DD0", Offset = "0x23F0DD0", VA = "0x23F0DD0")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x23F0D58", Offset = "0x23F0D58", VA = "0x23F0D58")]
		set
		{
		}
	}

	[Token(Token = "0x60026A1")]
	[Address(RVA = "0x23E5DA8", Offset = "0x23E5DA8", VA = "0x23E5DA8")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60026A2")]
	[Address(RVA = "0x23E5C98", Offset = "0x23E5C98", VA = "0x23E5C98")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60026A3")]
	[Address(RVA = "0x23F05B8", Offset = "0x23F05B8", VA = "0x23F05B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60026A4")]
	[Address(RVA = "0x23F0658", Offset = "0x23F0658", VA = "0x23F0658", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x60026A5")]
	[Address(RVA = "0x23F05E0", Offset = "0x23F05E0", VA = "0x23F05E0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60026A6")]
	[Address(RVA = "0x23F06CC", Offset = "0x23F06CC", VA = "0x23F06CC", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60026A7")]
	[Address(RVA = "0x23F0848", Offset = "0x23F0848", VA = "0x23F0848")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x60026A8")]
	[Address(RVA = "0x23F08C8", Offset = "0x23F08C8", VA = "0x23F08C8")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x60026A9")]
	[Address(RVA = "0x23F0980", Offset = "0x23F0980", VA = "0x23F0980")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x60026AA")]
	[Address(RVA = "0x23F0A60", Offset = "0x23F0A60", VA = "0x23F0A60")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x60026AB")]
	[Address(RVA = "0x23F0B00", Offset = "0x23F0B00", VA = "0x23F0B00")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200052A")]
public enum AkPluginType
{
	[Token(Token = "0x40022EA")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x40022EB")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x40022EC")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x40022ED")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x40022EE")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x40022EF")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x40022F0")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x40022F1")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x200052B")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x40022F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000384")]
	public float fCenterPct
	{
		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x23F1744", Offset = "0x23F1744", VA = "0x23F1744")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x23F16CC", Offset = "0x23F16CC", VA = "0x23F16CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000385")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x23F1824", Offset = "0x23F1824", VA = "0x23F1824")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x23F17AC", Offset = "0x23F17AC", VA = "0x23F17AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000386")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x23F1904", Offset = "0x23F1904", VA = "0x23F1904")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x23F188C", Offset = "0x23F188C", VA = "0x23F188C")]
		set
		{
		}
	}

	[Token(Token = "0x17000387")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x23F19E4", Offset = "0x23F19E4", VA = "0x23F19E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x23F196C", Offset = "0x23F196C", VA = "0x23F196C")]
		set
		{
		}
	}

	[Token(Token = "0x17000388")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x23F1AC4", Offset = "0x23F1AC4", VA = "0x23F1AC4")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x23F1A4C", Offset = "0x23F1A4C", VA = "0x23F1A4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000389")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x23F1BA4", Offset = "0x23F1BA4", VA = "0x23F1BA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x23F1B2C", Offset = "0x23F1B2C", VA = "0x23F1B2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700038A")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x23F1C84", Offset = "0x23F1C84", VA = "0x23F1C84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x23F1C0C", Offset = "0x23F1C0C", VA = "0x23F1C0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700038B")]
	public float fInnerAngle
	{
		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x23F1D64", Offset = "0x23F1D64", VA = "0x23F1D64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x23F1CEC", Offset = "0x23F1CEC", VA = "0x23F1CEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700038C")]
	public float fOuterAngle
	{
		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x23F1E44", Offset = "0x23F1E44", VA = "0x23F1E44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x23F1DCC", Offset = "0x23F1DCC", VA = "0x23F1DCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700038D")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x23F1F24", Offset = "0x23F1F24", VA = "0x23F1F24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x23F1EAC", Offset = "0x23F1EAC", VA = "0x23F1EAC")]
		set
		{
		}
	}

	[Token(Token = "0x1700038E")]
	public float LPFCone
	{
		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x23F2004", Offset = "0x23F2004", VA = "0x23F2004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x23F1F8C", Offset = "0x23F1F8C", VA = "0x23F1F8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700038F")]
	public float HPFCone
	{
		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x23F20E4", Offset = "0x23F20E4", VA = "0x23F20E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x23F206C", Offset = "0x23F206C", VA = "0x23F206C")]
		set
		{
		}
	}

	[Token(Token = "0x17000390")]
	public float fMaxDistance
	{
		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x23F21C4", Offset = "0x23F21C4", VA = "0x23F21C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x23F214C", Offset = "0x23F214C", VA = "0x23F214C")]
		set
		{
		}
	}

	[Token(Token = "0x17000391")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x23F22A4", Offset = "0x23F22A4", VA = "0x23F22A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x23F222C", Offset = "0x23F222C", VA = "0x23F222C")]
		set
		{
		}
	}

	[Token(Token = "0x17000392")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x23F2384", Offset = "0x23F2384", VA = "0x23F2384")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x23F230C", Offset = "0x23F230C", VA = "0x23F230C")]
		set
		{
		}
	}

	[Token(Token = "0x17000393")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x23F2464", Offset = "0x23F2464", VA = "0x23F2464")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x23F23EC", Offset = "0x23F23EC", VA = "0x23F23EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000394")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x23F2544", Offset = "0x23F2544", VA = "0x23F2544")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x23F24CC", Offset = "0x23F24CC", VA = "0x23F24CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000395")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x23F2624", Offset = "0x23F2624", VA = "0x23F2624")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x23F25AC", Offset = "0x23F25AC", VA = "0x23F25AC")]
		set
		{
		}
	}

	[Token(Token = "0x60026B2")]
	[Address(RVA = "0x23F13B0", Offset = "0x23F13B0", VA = "0x23F13B0")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60026B3")]
	[Address(RVA = "0x23F13F0", Offset = "0x23F13F0", VA = "0x23F13F0")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60026B4")]
	[Address(RVA = "0x23F143C", Offset = "0x23F143C", VA = "0x23F143C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60026B5")]
	[Address(RVA = "0x23F14DC", Offset = "0x23F14DC", VA = "0x23F14DC", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x60026B6")]
	[Address(RVA = "0x23F1464", Offset = "0x23F1464", VA = "0x23F1464", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60026B7")]
	[Address(RVA = "0x23F1550", Offset = "0x23F1550", VA = "0x23F1550", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60026DC")]
	[Address(RVA = "0x23F268C", Offset = "0x23F268C", VA = "0x23F268C")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x200052C")]
public enum AkPreparationType
{
	[Token(Token = "0x40022F5")]
	Preparation_Load,
	[Token(Token = "0x40022F6")]
	Preparation_Unload,
	[Token(Token = "0x40022F7")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x200052D")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x40022F9")]
	RTPCValue_Default,
	[Token(Token = "0x40022FA")]
	RTPCValue_Global,
	[Token(Token = "0x40022FB")]
	RTPCValue_GameObject,
	[Token(Token = "0x40022FC")]
	RTPCValue_PlayingID,
	[Token(Token = "0x40022FD")]
	RTPCValue_Unavailable
}
[Token(Token = "0x200052E")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x40022FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40022FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000396")]
	public float fPrev
	{
		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x23F3764", Offset = "0x23F3764", VA = "0x23F3764")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x23F36EC", Offset = "0x23F36EC", VA = "0x23F36EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000397")]
	public float fNext
	{
		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x23F3844", Offset = "0x23F3844", VA = "0x23F3844")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x23F37CC", Offset = "0x23F37CC", VA = "0x23F37CC")]
		set
		{
		}
	}

	[Token(Token = "0x60026DD")]
	[Address(RVA = "0x23F32B8", Offset = "0x23F32B8", VA = "0x23F32B8")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60026DE")]
	[Address(RVA = "0x23F32F8", Offset = "0x23F32F8", VA = "0x23F32F8")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60026DF")]
	[Address(RVA = "0x23F3344", Offset = "0x23F3344", VA = "0x23F3344", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60026E0")]
	[Address(RVA = "0x23F33E4", Offset = "0x23F33E4", VA = "0x23F33E4", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x60026E1")]
	[Address(RVA = "0x23F336C", Offset = "0x23F336C", VA = "0x23F336C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60026E2")]
	[Address(RVA = "0x23F3458", Offset = "0x23F3458", VA = "0x23F3458", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60026E3")]
	[Address(RVA = "0x23F35D4", Offset = "0x23F35D4", VA = "0x23F35D4")]
	public AkRamp()
	{
	}

	[Token(Token = "0x60026E4")]
	[Address(RVA = "0x23F3654", Offset = "0x23F3654", VA = "0x23F3654")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x200052F")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4002300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000398")]
	public Vector3 imageSource
	{
		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x23F3C58", Offset = "0x23F3C58", VA = "0x23F3C58")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x23F3BC8", Offset = "0x23F3BC8", VA = "0x23F3BC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000399")]
	public uint numPathPoints
	{
		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x23F3D38", Offset = "0x23F3D38", VA = "0x23F3D38")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x23F3CC0", Offset = "0x23F3CC0", VA = "0x23F3CC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700039A")]
	public uint numReflections
	{
		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x23F3E18", Offset = "0x23F3E18", VA = "0x23F3E18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x23F3DA0", Offset = "0x23F3DA0", VA = "0x23F3DA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700039B")]
	public float level
	{
		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x23F3EF8", Offset = "0x23F3EF8", VA = "0x23F3EF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x23F3E80", Offset = "0x23F3E80", VA = "0x23F3E80")]
		set
		{
		}
	}

	[Token(Token = "0x1700039C")]
	public bool isOccluded
	{
		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x23F3FD8", Offset = "0x23F3FD8", VA = "0x23F3FD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x23F3F60", Offset = "0x23F3F60", VA = "0x23F3F60")]
		set
		{
		}
	}

	[Token(Token = "0x60026E9")]
	[Address(RVA = "0x23F38AC", Offset = "0x23F38AC", VA = "0x23F38AC")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60026EA")]
	[Address(RVA = "0x23F38EC", Offset = "0x23F38EC", VA = "0x23F38EC")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60026EB")]
	[Address(RVA = "0x23F3938", Offset = "0x23F3938", VA = "0x23F3938", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60026EC")]
	[Address(RVA = "0x23F39D8", Offset = "0x23F39D8", VA = "0x23F39D8", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x60026ED")]
	[Address(RVA = "0x23F3960", Offset = "0x23F3960", VA = "0x23F3960", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60026EE")]
	[Address(RVA = "0x23F3A4C", Offset = "0x23F3A4C", VA = "0x23F3A4C", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60026F9")]
	[Address(RVA = "0x23F4040", Offset = "0x23F4040", VA = "0x23F4040")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60026FA")]
	[Address(RVA = "0x23F409C", Offset = "0x23F409C", VA = "0x23F409C")]
	public Vector3 GetPathPoint(uint idx)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60026FB")]
	[Address(RVA = "0x23F4114", Offset = "0x23F4114", VA = "0x23F4114")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60026FC")]
	[Address(RVA = "0x23F41CC", Offset = "0x23F41CC", VA = "0x23F41CC")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60026FD")]
	[Address(RVA = "0x23F4244", Offset = "0x23F4244", VA = "0x23F4244")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x60026FE")]
	[Address(RVA = "0x23F42E4", Offset = "0x23F42E4", VA = "0x23F42E4")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000530")]
public class AkResourceMonitorDataSummary : IDisposable
{
	[Token(Token = "0x4002302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700039D")]
	public float totalCPU
	{
		[Token(Token = "0x6002706")]
		[Address(RVA = "0x23F48B0", Offset = "0x23F48B0", VA = "0x23F48B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002705")]
		[Address(RVA = "0x23F4838", Offset = "0x23F4838", VA = "0x23F4838")]
		set
		{
		}
	}

	[Token(Token = "0x1700039E")]
	public float pluginCPU
	{
		[Token(Token = "0x6002708")]
		[Address(RVA = "0x23F4990", Offset = "0x23F4990", VA = "0x23F4990")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002707")]
		[Address(RVA = "0x23F4918", Offset = "0x23F4918", VA = "0x23F4918")]
		set
		{
		}
	}

	[Token(Token = "0x1700039F")]
	public uint physicalVoices
	{
		[Token(Token = "0x600270A")]
		[Address(RVA = "0x23F4A70", Offset = "0x23F4A70", VA = "0x23F4A70")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002709")]
		[Address(RVA = "0x23F49F8", Offset = "0x23F49F8", VA = "0x23F49F8")]
		set
		{
		}
	}

	[Token(Token = "0x170003A0")]
	public uint virtualVoices
	{
		[Token(Token = "0x600270C")]
		[Address(RVA = "0x23F4B50", Offset = "0x23F4B50", VA = "0x23F4B50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600270B")]
		[Address(RVA = "0x23F4AD8", Offset = "0x23F4AD8", VA = "0x23F4AD8")]
		set
		{
		}
	}

	[Token(Token = "0x170003A1")]
	public uint totalVoices
	{
		[Token(Token = "0x600270E")]
		[Address(RVA = "0x23F4C30", Offset = "0x23F4C30", VA = "0x23F4C30")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600270D")]
		[Address(RVA = "0x23F4BB8", Offset = "0x23F4BB8", VA = "0x23F4BB8")]
		set
		{
		}
	}

	[Token(Token = "0x170003A2")]
	public uint nbActiveEvents
	{
		[Token(Token = "0x6002710")]
		[Address(RVA = "0x23F4D10", Offset = "0x23F4D10", VA = "0x23F4D10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600270F")]
		[Address(RVA = "0x23F4C98", Offset = "0x23F4C98", VA = "0x23F4C98")]
		set
		{
		}
	}

	[Token(Token = "0x60026FF")]
	[Address(RVA = "0x23F451C", Offset = "0x23F451C", VA = "0x23F451C")]
	internal AkResourceMonitorDataSummary(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002700")]
	[Address(RVA = "0x23F455C", Offset = "0x23F455C", VA = "0x23F455C")]
	internal static IntPtr getCPtr(AkResourceMonitorDataSummary obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002701")]
	[Address(RVA = "0x23F45A8", Offset = "0x23F45A8", VA = "0x23F45A8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002702")]
	[Address(RVA = "0x23F4648", Offset = "0x23F4648", VA = "0x23F4648", Slot = "1")]
	~AkResourceMonitorDataSummary()
	{
	}

	[Token(Token = "0x6002703")]
	[Address(RVA = "0x23F45D0", Offset = "0x23F45D0", VA = "0x23F45D0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002704")]
	[Address(RVA = "0x23F46BC", Offset = "0x23F46BC", VA = "0x23F46BC", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002711")]
	[Address(RVA = "0x23F4D78", Offset = "0x23F4D78", VA = "0x23F4D78")]
	public AkResourceMonitorDataSummary()
	{
	}
}
[Token(Token = "0x2000531")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x4002304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003A3")]
	public Vector3 Up
	{
		[Token(Token = "0x600271B")]
		[Address(RVA = "0x23F7FB8", Offset = "0x23F7FB8", VA = "0x23F7FB8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600271A")]
		[Address(RVA = "0x23F5544", Offset = "0x23F5544", VA = "0x23F5544")]
		set
		{
		}
	}

	[Token(Token = "0x170003A4")]
	public Vector3 Front
	{
		[Token(Token = "0x600271D")]
		[Address(RVA = "0x23F8020", Offset = "0x23F8020", VA = "0x23F8020")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600271C")]
		[Address(RVA = "0x23F55D4", Offset = "0x23F55D4", VA = "0x23F55D4")]
		set
		{
		}
	}

	[Token(Token = "0x170003A5")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x600271F")]
		[Address(RVA = "0x23F8088", Offset = "0x23F8088", VA = "0x23F8088")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600271E")]
		[Address(RVA = "0x23F5664", Offset = "0x23F5664", VA = "0x23F5664")]
		set
		{
		}
	}

	[Token(Token = "0x170003A6")]
	public float ReverbLevel
	{
		[Token(Token = "0x6002721")]
		[Address(RVA = "0x23F80F0", Offset = "0x23F80F0", VA = "0x23F80F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002720")]
		[Address(RVA = "0x23F56DC", Offset = "0x23F56DC", VA = "0x23F56DC")]
		set
		{
		}
	}

	[Token(Token = "0x170003A7")]
	public float WallOcclusion
	{
		[Token(Token = "0x6002723")]
		[Address(RVA = "0x23F8158", Offset = "0x23F8158", VA = "0x23F8158")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002722")]
		[Address(RVA = "0x23F5754", Offset = "0x23F5754", VA = "0x23F5754")]
		set
		{
		}
	}

	[Token(Token = "0x170003A8")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6002725")]
		[Address(RVA = "0x23F81C0", Offset = "0x23F81C0", VA = "0x23F81C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002724")]
		[Address(RVA = "0x23F57CC", Offset = "0x23F57CC", VA = "0x23F57CC")]
		set
		{
		}
	}

	[Token(Token = "0x170003A9")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6002727")]
		[Address(RVA = "0x23F8228", Offset = "0x23F8228", VA = "0x23F8228")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002726")]
		[Address(RVA = "0x23F5844", Offset = "0x23F5844", VA = "0x23F5844")]
		set
		{
		}
	}

	[Token(Token = "0x6002712")]
	[Address(RVA = "0x23F7BE4", Offset = "0x23F7BE4", VA = "0x23F7BE4")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002713")]
	[Address(RVA = "0x23F7C24", Offset = "0x23F7C24", VA = "0x23F7C24")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002714")]
	[Address(RVA = "0x23F7C70", Offset = "0x23F7C70", VA = "0x23F7C70", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002715")]
	[Address(RVA = "0x23F7D10", Offset = "0x23F7D10", VA = "0x23F7D10", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6002716")]
	[Address(RVA = "0x23F7C98", Offset = "0x23F7C98", VA = "0x23F7C98", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002717")]
	[Address(RVA = "0x23F7D84", Offset = "0x23F7D84", VA = "0x23F7D84", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002718")]
	[Address(RVA = "0x23F54C4", Offset = "0x23F54C4", VA = "0x23F54C4")]
	public AkRoomParams()
	{
	}

	[Token(Token = "0x6002719")]
	[Address(RVA = "0x23F7F00", Offset = "0x23F7F00", VA = "0x23F7F00")]
	public AkRoomParams(AkRoomParams in_rhs)
	{
	}
}
[Token(Token = "0x2000532")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4002306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003AA")]
	public int iCurrentPosition
	{
		[Token(Token = "0x600272F")]
		[Address(RVA = "0x23F9BCC", Offset = "0x23F9BCC", VA = "0x23F9BCC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600272E")]
		[Address(RVA = "0x23F9B54", Offset = "0x23F9B54", VA = "0x23F9B54")]
		set
		{
		}
	}

	[Token(Token = "0x170003AB")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6002731")]
		[Address(RVA = "0x23F9CAC", Offset = "0x23F9CAC", VA = "0x23F9CAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002730")]
		[Address(RVA = "0x23F9C34", Offset = "0x23F9C34", VA = "0x23F9C34")]
		set
		{
		}
	}

	[Token(Token = "0x170003AC")]
	public int iActiveDuration
	{
		[Token(Token = "0x6002733")]
		[Address(RVA = "0x23F9D8C", Offset = "0x23F9D8C", VA = "0x23F9D8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002732")]
		[Address(RVA = "0x23F9D14", Offset = "0x23F9D14", VA = "0x23F9D14")]
		set
		{
		}
	}

	[Token(Token = "0x170003AD")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6002735")]
		[Address(RVA = "0x23F9E6C", Offset = "0x23F9E6C", VA = "0x23F9E6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002734")]
		[Address(RVA = "0x23F9DF4", Offset = "0x23F9DF4", VA = "0x23F9DF4")]
		set
		{
		}
	}

	[Token(Token = "0x170003AE")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x6002737")]
		[Address(RVA = "0x23F9F4C", Offset = "0x23F9F4C", VA = "0x23F9F4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002736")]
		[Address(RVA = "0x23F9ED4", Offset = "0x23F9ED4", VA = "0x23F9ED4")]
		set
		{
		}
	}

	[Token(Token = "0x170003AF")]
	public float fBeatDuration
	{
		[Token(Token = "0x6002739")]
		[Address(RVA = "0x23FA02C", Offset = "0x23FA02C", VA = "0x23FA02C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002738")]
		[Address(RVA = "0x23F9FB4", Offset = "0x23F9FB4", VA = "0x23F9FB4")]
		set
		{
		}
	}

	[Token(Token = "0x170003B0")]
	public float fBarDuration
	{
		[Token(Token = "0x600273B")]
		[Address(RVA = "0x23FA10C", Offset = "0x23FA10C", VA = "0x23FA10C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600273A")]
		[Address(RVA = "0x23FA094", Offset = "0x23FA094", VA = "0x23FA094")]
		set
		{
		}
	}

	[Token(Token = "0x170003B1")]
	public float fGridDuration
	{
		[Token(Token = "0x600273D")]
		[Address(RVA = "0x23FA1EC", Offset = "0x23FA1EC", VA = "0x23FA1EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600273C")]
		[Address(RVA = "0x23FA174", Offset = "0x23FA174", VA = "0x23FA174")]
		set
		{
		}
	}

	[Token(Token = "0x170003B2")]
	public float fGridOffset
	{
		[Token(Token = "0x600273F")]
		[Address(RVA = "0x23FA2CC", Offset = "0x23FA2CC", VA = "0x23FA2CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600273E")]
		[Address(RVA = "0x23FA254", Offset = "0x23FA254", VA = "0x23FA254")]
		set
		{
		}
	}

	[Token(Token = "0x6002728")]
	[Address(RVA = "0x23F9838", Offset = "0x23F9838", VA = "0x23F9838")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002729")]
	[Address(RVA = "0x23F9878", Offset = "0x23F9878", VA = "0x23F9878")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600272A")]
	[Address(RVA = "0x23F98C4", Offset = "0x23F98C4", VA = "0x23F98C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600272B")]
	[Address(RVA = "0x23F9964", Offset = "0x23F9964", VA = "0x23F9964", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x600272C")]
	[Address(RVA = "0x23F98EC", Offset = "0x23F98EC", VA = "0x23F98EC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600272D")]
	[Address(RVA = "0x23F99D8", Offset = "0x23F99D8", VA = "0x23F99D8", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002740")]
	[Address(RVA = "0x23FA334", Offset = "0x23FA334", VA = "0x23FA334")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x2000533")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4002308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003B3")]
	public IntPtr pPackage
	{
		[Token(Token = "0x6002747")]
		[Address(RVA = "0x23FA6D0", Offset = "0x23FA6D0", VA = "0x23FA6D0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170003B4")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x6002748")]
		[Address(RVA = "0x23FA738", Offset = "0x23FA738", VA = "0x23FA738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003B5")]
	public AkCallbackType eType
	{
		[Token(Token = "0x6002749")]
		[Address(RVA = "0x23FA7FC", Offset = "0x23FA7FC", VA = "0x23FA7FC")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6002741")]
	[Address(RVA = "0x23FA3B4", Offset = "0x23FA3B4", VA = "0x23FA3B4")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002742")]
	[Address(RVA = "0x23FA3F4", Offset = "0x23FA3F4", VA = "0x23FA3F4")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002743")]
	[Address(RVA = "0x23FA440", Offset = "0x23FA440", VA = "0x23FA440", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002744")]
	[Address(RVA = "0x23FA4E0", Offset = "0x23FA4E0", VA = "0x23FA4E0", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6002745")]
	[Address(RVA = "0x23FA468", Offset = "0x23FA468", VA = "0x23FA468", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002746")]
	[Address(RVA = "0x23FA554", Offset = "0x23FA554", VA = "0x23FA554", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600274A")]
	[Address(RVA = "0x23FA864", Offset = "0x23FA864", VA = "0x23FA864")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600274B")]
	[Address(RVA = "0x23FA8CC", Offset = "0x23FA8CC", VA = "0x23FA8CC")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x2000534")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x400230B")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x400230C")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x400230D")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x2000535")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x400230E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400230F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003B6")]
	public uint sourceID
	{
		[Token(Token = "0x6002753")]
		[Address(RVA = "0x211FE44", Offset = "0x211FE44", VA = "0x211FE44")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002752")]
		[Address(RVA = "0x211FDD0", Offset = "0x211FDD0", VA = "0x211FDD0")]
		set
		{
		}
	}

	[Token(Token = "0x170003B7")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6002755")]
		[Address(RVA = "0x211FF1C", Offset = "0x211FF1C", VA = "0x211FF1C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6002754")]
		[Address(RVA = "0x211FEA8", Offset = "0x211FEA8", VA = "0x211FEA8")]
		set
		{
		}
	}

	[Token(Token = "0x170003B8")]
	public uint uMediaSize
	{
		[Token(Token = "0x6002757")]
		[Address(RVA = "0x211FFF4", Offset = "0x211FFF4", VA = "0x211FFF4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002756")]
		[Address(RVA = "0x211FF80", Offset = "0x211FF80", VA = "0x211FF80")]
		set
		{
		}
	}

	[Token(Token = "0x600274C")]
	[Address(RVA = "0x211FAB8", Offset = "0x211FAB8", VA = "0x211FAB8")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600274D")]
	[Address(RVA = "0x211FAF8", Offset = "0x211FAF8", VA = "0x211FAF8")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600274E")]
	[Address(RVA = "0x211FB44", Offset = "0x211FB44", VA = "0x211FB44", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600274F")]
	[Address(RVA = "0x211FBE4", Offset = "0x211FBE4", VA = "0x211FBE4", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6002750")]
	[Address(RVA = "0x211FB6C", Offset = "0x211FB6C", VA = "0x211FB6C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002751")]
	[Address(RVA = "0x211FC58", Offset = "0x211FC58", VA = "0x211FC58", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002758")]
	[Address(RVA = "0x2120058", Offset = "0x2120058", VA = "0x2120058")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002759")]
	[Address(RVA = "0x21200BC", Offset = "0x21200BC", VA = "0x21200BC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600275A")]
	[Address(RVA = "0x2120114", Offset = "0x2120114", VA = "0x2120114")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x600275B")]
	[Address(RVA = "0x21201B0", Offset = "0x21201B0", VA = "0x21201B0")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x2000536")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4002310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003B9")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6002764")]
		[Address(RVA = "0x21208D4", Offset = "0x21208D4", VA = "0x21208D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002763")]
		[Address(RVA = "0x2120860", Offset = "0x2120860", VA = "0x2120860")]
		set
		{
		}
	}

	[Token(Token = "0x170003BA")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6002766")]
		[Address(RVA = "0x21209AC", Offset = "0x21209AC", VA = "0x21209AC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002765")]
		[Address(RVA = "0x2120938", Offset = "0x2120938", VA = "0x2120938")]
		set
		{
		}
	}

	[Token(Token = "0x170003BB")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6002768")]
		[Address(RVA = "0x2120A84", Offset = "0x2120A84", VA = "0x2120A84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002767")]
		[Address(RVA = "0x2120A10", Offset = "0x2120A10", VA = "0x2120A10")]
		set
		{
		}
	}

	[Token(Token = "0x170003BC")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x600276A")]
		[Address(RVA = "0x2120B5C", Offset = "0x2120B5C", VA = "0x2120B5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002769")]
		[Address(RVA = "0x2120AE8", Offset = "0x2120AE8", VA = "0x2120AE8")]
		set
		{
		}
	}

	[Token(Token = "0x170003BD")]
	public float fMovementThreshold
	{
		[Token(Token = "0x600276C")]
		[Address(RVA = "0x2120C34", Offset = "0x2120C34", VA = "0x2120C34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600276B")]
		[Address(RVA = "0x2120BC0", Offset = "0x2120BC0", VA = "0x2120BC0")]
		set
		{
		}
	}

	[Token(Token = "0x170003BE")]
	public uint uNumberOfPrimaryRays
	{
		[Token(Token = "0x600276E")]
		[Address(RVA = "0x2120D0C", Offset = "0x2120D0C", VA = "0x2120D0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600276D")]
		[Address(RVA = "0x2120C98", Offset = "0x2120C98", VA = "0x2120C98")]
		set
		{
		}
	}

	[Token(Token = "0x170003BF")]
	public uint uMaxReflectionOrder
	{
		[Token(Token = "0x6002770")]
		[Address(RVA = "0x2120DE4", Offset = "0x2120DE4", VA = "0x2120DE4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600276F")]
		[Address(RVA = "0x2120D70", Offset = "0x2120D70", VA = "0x2120D70")]
		set
		{
		}
	}

	[Token(Token = "0x170003C0")]
	public float fMaxPathLength
	{
		[Token(Token = "0x6002772")]
		[Address(RVA = "0x2120EBC", Offset = "0x2120EBC", VA = "0x2120EBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002771")]
		[Address(RVA = "0x2120E48", Offset = "0x2120E48", VA = "0x2120E48")]
		set
		{
		}
	}

	[Token(Token = "0x170003C1")]
	public bool bEnableDiffractionOnReflection
	{
		[Token(Token = "0x6002774")]
		[Address(RVA = "0x2120F94", Offset = "0x2120F94", VA = "0x2120F94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002773")]
		[Address(RVA = "0x2120F20", Offset = "0x2120F20", VA = "0x2120F20")]
		set
		{
		}
	}

	[Token(Token = "0x170003C2")]
	public bool bEnableDirectPathDiffraction
	{
		[Token(Token = "0x6002776")]
		[Address(RVA = "0x212106C", Offset = "0x212106C", VA = "0x212106C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002775")]
		[Address(RVA = "0x2120FF8", Offset = "0x2120FF8", VA = "0x2120FF8")]
		set
		{
		}
	}

	[Token(Token = "0x170003C3")]
	public bool bEnableTransmission
	{
		[Token(Token = "0x6002778")]
		[Address(RVA = "0x2121144", Offset = "0x2121144", VA = "0x2121144")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002777")]
		[Address(RVA = "0x21210D0", Offset = "0x21210D0", VA = "0x21210D0")]
		set
		{
		}
	}

	[Token(Token = "0x600275C")]
	[Address(RVA = "0x21204CC", Offset = "0x21204CC", VA = "0x21204CC")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600275D")]
	[Address(RVA = "0x212050C", Offset = "0x212050C", VA = "0x212050C")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600275E")]
	[Address(RVA = "0x2120558", Offset = "0x2120558", VA = "0x2120558", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600275F")]
	[Address(RVA = "0x21205F8", Offset = "0x21205F8", VA = "0x21205F8", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6002760")]
	[Address(RVA = "0x2120580", Offset = "0x2120580", VA = "0x2120580", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002761")]
	[Address(RVA = "0x212066C", Offset = "0x212066C", VA = "0x212066C", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002762")]
	[Address(RVA = "0x21207E4", Offset = "0x21207E4", VA = "0x21207E4")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x2000537")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x4002313")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x4002314")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x2000538")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x4002315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6002779")]
	[Address(RVA = "0x21216F0", Offset = "0x21216F0", VA = "0x21216F0")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600277A")]
	[Address(RVA = "0x2121730", Offset = "0x2121730", VA = "0x2121730")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600277B")]
	[Address(RVA = "0x212177C", Offset = "0x212177C", VA = "0x212177C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600277C")]
	[Address(RVA = "0x212181C", Offset = "0x212181C", VA = "0x212181C", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x600277D")]
	[Address(RVA = "0x21217A4", Offset = "0x21217A4", VA = "0x21217A4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600277E")]
	[Address(RVA = "0x2121890", Offset = "0x2121890", VA = "0x2121890", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}
}
[Token(Token = "0x2000539")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4002317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4002318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003C4")]
	public uint uIdxThread
	{
		[Token(Token = "0x6002786")]
		[Address(RVA = "0x2124274", Offset = "0x2124274", VA = "0x2124274")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002785")]
		[Address(RVA = "0x2124200", Offset = "0x2124200", VA = "0x2124200")]
		set
		{
		}
	}

	[Token(Token = "0x600277F")]
	[Address(RVA = "0x2123EE8", Offset = "0x2123EE8", VA = "0x2123EE8")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002780")]
	[Address(RVA = "0x2123F28", Offset = "0x2123F28", VA = "0x2123F28")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002781")]
	[Address(RVA = "0x2123F74", Offset = "0x2123F74", VA = "0x2123F74", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002782")]
	[Address(RVA = "0x2124014", Offset = "0x2124014", VA = "0x2124014", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6002783")]
	[Address(RVA = "0x2123F9C", Offset = "0x2123F9C", VA = "0x2123F9C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002784")]
	[Address(RVA = "0x2124088", Offset = "0x2124088", VA = "0x2124088", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6002787")]
	[Address(RVA = "0x21242D8", Offset = "0x21242D8", VA = "0x21242D8")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x200053A")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4002319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400231A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6002788")]
	[Address(RVA = "0x21273BC", Offset = "0x21273BC", VA = "0x21273BC")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002789")]
	[Address(RVA = "0x21273FC", Offset = "0x21273FC", VA = "0x21273FC")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600278A")]
	[Address(RVA = "0x2127448", Offset = "0x2127448", VA = "0x2127448", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600278B")]
	[Address(RVA = "0x21274E8", Offset = "0x21274E8", VA = "0x21274E8", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x600278C")]
	[Address(RVA = "0x2127470", Offset = "0x2127470", VA = "0x2127470", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600278D")]
	[Address(RVA = "0x212755C", Offset = "0x212755C", VA = "0x212755C", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600278E")]
	[Address(RVA = "0x21276D4", Offset = "0x21276D4", VA = "0x21276D4")]
	public Vector3 Position()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600278F")]
	[Address(RVA = "0x2127738", Offset = "0x2127738", VA = "0x2127738")]
	public Vector3 OrientationFront()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002790")]
	[Address(RVA = "0x212779C", Offset = "0x212779C", VA = "0x212779C")]
	public Vector3 OrientationTop()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002791")]
	[Address(RVA = "0x2127800", Offset = "0x2127800", VA = "0x2127800")]
	public void Set(Vector3 in_position, Vector3 in_orientationFront, Vector3 in_orientationTop)
	{
	}

	[Token(Token = "0x6002792")]
	[Address(RVA = "0x212790C", Offset = "0x212790C", VA = "0x212790C")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6002793")]
	[Address(RVA = "0x2127A30", Offset = "0x2127A30", VA = "0x2127A30")]
	public void SetPosition(Vector3 in_position)
	{
	}

	[Token(Token = "0x6002794")]
	[Address(RVA = "0x2127ABC", Offset = "0x2127ABC", VA = "0x2127ABC")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6002795")]
	[Address(RVA = "0x2127B48", Offset = "0x2127B48", VA = "0x2127B48")]
	public void SetOrientation(Vector3 in_orientationFront, Vector3 in_orientationTop)
	{
	}

	[Token(Token = "0x6002796")]
	[Address(RVA = "0x2127BF4", Offset = "0x2127BF4", VA = "0x2127BF4")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6002797")]
	[Address(RVA = "0x2127CA0", Offset = "0x2127CA0", VA = "0x2127CA0")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x200053B")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x400231B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400231C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170003C5")]
	public ushort point0
	{
		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x2122E0C", Offset = "0x2122E0C", VA = "0x2122E0C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x2122C3C", Offset = "0x2122C3C", VA = "0x2122C3C")]
		set
		{
		}
	}

	[Token(Token = "0x170003C6")]
	public ushort point1
	{
		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x2122E70", Offset = "0x2122E70", VA = "0x2122E70")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x2122CB0", Offset = "0x2122CB0", VA = "0x2122CB0")]
		set
		{
		}
	}

	[Token(Token = "0x170003C7")]
	public ushort point2
	{
		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x2122ED4", Offset = "0x2122ED4", VA = "0x2122ED4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x2122D24", Offset = "0x2122D24", VA = "0x2122D24")]
		set
		{
		}
	}

	[Token(Token = "0x170003C8")]
	public ushort surface
	{
		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x212815C", Offset = "0x212815C", VA = "0x212815C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x2122D98", Offset = "0x2122D98", VA = "0x2122D98")]
		set
		{
		}
	}

	[Token(Token = "0x6002798")]
	[Address(RVA = "0x2127D1C", Offset = "0x2127D1C", VA = "0x2127D1C")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002799")]
	[Address(RVA = "0x2127D5C", Offset = "0x2127D5C", VA = "0x2127D5C")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600279A")]
	[Address(RVA = "0x2127DA8", Offset = "0x2127DA8", VA = "0x2127DA8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600279B")]
	[Address(RVA = "0x2127E48", Offset = "0x2127E48", VA = "0x2127E48", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x600279C")]
	[Address(RVA = "0x2127DD0", Offset = "0x2127DD0", VA = "0x2127DD0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600279D")]
	[Address(RVA = "0x2127EBC", Offset = "0x2127EBC", VA = "0x2127EBC", Slot = "6")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600279E")]
	[Address(RVA = "0x2128034", Offset = "0x2128034", VA = "0x2128034")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x600279F")]
	[Address(RVA = "0x21280B0", Offset = "0x21280B0", VA = "0x21280B0")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x60027A8")]
	[Address(RVA = "0x21281C0", Offset = "0x21281C0", VA = "0x21281C0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60027A9")]
	[Address(RVA = "0x2128224", Offset = "0x2128224", VA = "0x2128224")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60027AA")]
	[Address(RVA = "0x212827C", Offset = "0x212827C", VA = "0x212827C")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x200053C")]
public class AkBasePathGetter
{
	[Token(Token = "0x400231D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string DefaultPlatformName;

	[Token(Token = "0x400231E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string DefaultBasePath;

	[Token(Token = "0x400231F")]
	private const string DecodedBankFolder = "DecodedBanks";

	[Token(Token = "0x4002320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool LogWarnings_Internal;

	[Token(Token = "0x4002321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static AkBasePathGetter Instance;

	[Token(Token = "0x4002322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64B10", Offset = "0xE64B10")]
	private string <SoundBankBasePath>k__BackingField;

	[Token(Token = "0x4002323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64B20", Offset = "0xE64B20")]
	private string <PersistentDataPath>k__BackingField;

	[Token(Token = "0x4002324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE64B30", Offset = "0xE64B30")]
	private string <DecodedBankFullPath>k__BackingField;

	[Token(Token = "0x170003C9")]
	public static bool LogWarnings
	{
		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x1FBB9D8", Offset = "0x1FBB9D8", VA = "0x1FBB9D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1FBBA3C", Offset = "0x1FBBA3C", VA = "0x1FBBA3C")]
		set
		{
		}
	}

	[Token(Token = "0x170003CA")]
	public string SoundBankBasePath
	{
		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x1FBC098", Offset = "0x1FBC098", VA = "0x1FBC098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E78C", Offset = "0xE6E78C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x1FBC0A0", Offset = "0x1FBC0A0", VA = "0x1FBC0A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E79C", Offset = "0xE6E79C")]
		private set
		{
		}
	}

	[Token(Token = "0x170003CB")]
	public string PersistentDataPath
	{
		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x1FBC0A8", Offset = "0x1FBC0A8", VA = "0x1FBC0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E7AC", Offset = "0xE6E7AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x1FBC0B0", Offset = "0x1FBC0B0", VA = "0x1FBC0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E7BC", Offset = "0xE6E7BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170003CC")]
	public string DecodedBankFullPath
	{
		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1FBC0B8", Offset = "0x1FBC0B8", VA = "0x1FBC0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E7CC", Offset = "0xE6E7CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1FBC0C0", Offset = "0x1FBC0C0", VA = "0x1FBC0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E7DC", Offset = "0xE6E7DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60027AB")]
	[Address(RVA = "0x1FBB940", Offset = "0x1FBB940", VA = "0x1FBB940")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x60027AE")]
	[Address(RVA = "0x1FBBAA8", Offset = "0x1FBBAA8", VA = "0x1FBBAA8")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x60027AF")]
	[Address(RVA = "0x1FBBBE0", Offset = "0x1FBBBE0", VA = "0x1FBBBE0")]
	public static AkBasePathGetter Get()
	{
		return null;
	}

	[Token(Token = "0x60027B0")]
	[Address(RVA = "0x1FBBCC8", Offset = "0x1FBBCC8", VA = "0x1FBBCC8")]
	public void EvaluateGamePaths()
	{
	}

	[Token(Token = "0x60027B7")]
	[Address(RVA = "0x1FBBCC0", Offset = "0x1FBBCC0", VA = "0x1FBBCC0")]
	public AkBasePathGetter()
	{
	}
}
[Serializable]
[Token(Token = "0x200053D")]
public class AkCommonUserSettings
{
	[Serializable]
	[Token(Token = "0x200053E")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x200053F")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x400233A")]
			UseBuiltInParam = 1,
			[Token(Token = "0x400233B")]
			UseObstruction = 2,
			[Token(Token = "0x400233C")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE64DC4", Offset = "0xE64DC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64DC4", Offset = "0xE64DC4")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xE64E18", Offset = "0xE64E18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64E18", Offset = "0xE64E18")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64E9C", Offset = "0xE64E9C")]
		public float m_MovementThreshold;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64ED4", Offset = "0xE64ED4")]
		public uint m_NumberOfPrimaryRays;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE64F0C", Offset = "0xE64F0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64F0C", Offset = "0xE64F0C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE64F0C", Offset = "0xE64F0C")]
		public uint m_MaxReflectionOrder;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64F84", Offset = "0xE64F84")]
		public float m_MaxPathLength;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE64FBC", Offset = "0xE64FBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64FBC", Offset = "0xE64FBC")]
		public bool m_EnableDiffractionOnReflections;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6501C", Offset = "0xE6501C")]
		public bool m_EnableDirectPathDiffraction;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65054", Offset = "0xE65054")]
		public bool m_EnableTransmission;

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x20EB898", Offset = "0x20EB898", VA = "0x20EB898")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4002325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64B40", Offset = "0xE64B40")]
	public string m_BasePath;

	[Token(Token = "0x4002326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64B78", Offset = "0xE64B78")]
	public string m_StartupLanguage;

	[Token(Token = "0x4002327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64BB0", Offset = "0xE64BB0")]
	public bool m_EngineLogging;

	[Token(Token = "0x4002328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64BE8", Offset = "0xE64BE8")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x4002329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64C20", Offset = "0xE64C20")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x400232A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64C58", Offset = "0xE64C58")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x400232B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64C90", Offset = "0xE64C90")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x400232C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64CC8", Offset = "0xE64CC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE64CC8", Offset = "0xE64CC8")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x400232D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64D1C", Offset = "0xE64D1C")]
	public uint m_SampleRate;

	[Token(Token = "0x400232E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64D54", Offset = "0xE64D54")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x400232F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE64D8C", Offset = "0xE64D8C")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x60027B9")]
	[Address(RVA = "0x1FC1198", Offset = "0x1FC1198", VA = "0x1FC1198")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x60027BA")]
	[Address(RVA = "0x1FC11A0", Offset = "0x1FC11A0", VA = "0x1FC11A0", Slot = "4")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60027BB")]
	[Address(RVA = "0x1FC0F40", Offset = "0x1FC0F40", VA = "0x1FC0F40")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x60027BC")]
	[Address(RVA = "0x1FC0F3C", Offset = "0x1FC0F3C", VA = "0x1FC0F3C")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x60027BD")]
	[Address(RVA = "0x1FC12E0", Offset = "0x1FC12E0", VA = "0x1FC12E0", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60027BE")]
	[Address(RVA = "0x1FC12E4", Offset = "0x1FC12E4", VA = "0x1FC12E4")]
	private void SetSampleRate(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x60027BF")]
	[Address(RVA = "0x1FC1308", Offset = "0x1FC1308", VA = "0x1FC1308", Slot = "6")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x60027C0")]
	[Address(RVA = "0x1FC134C", Offset = "0x1FC134C", VA = "0x1FC134C", Slot = "7")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x60027C1")]
	[Address(RVA = "0x1FC1448", Offset = "0x1FC1448", VA = "0x1FC1448", Slot = "8")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x60027C2")]
	[Address(RVA = "0x1FC144C", Offset = "0x1FC144C", VA = "0x1FC144C", Slot = "9")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x60027C3")]
	[Address(RVA = "0x1FB6490", Offset = "0x1FB6490", VA = "0x1FB6490")]
	public AkCommonUserSettings()
	{
	}
}
[Token(Token = "0x2000540")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000541")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000542")]
		public enum AudioAPI
		{
			[Token(Token = "0x4002343")]
			None = 0,
			[Token(Token = "0x4002344")]
			AAudio = 1,
			[Token(Token = "0x4002345")]
			OpenSL_ES = 2,
			[Token(Token = "0x4002346")]
			Default = -1
		}

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xE650BC", Offset = "0xE650BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE650BC", Offset = "0xE650BC")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65140", Offset = "0xE65140")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x20E8464", Offset = "0x20E8464", VA = "0x20E8464", Slot = "6")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x20E84A8", Offset = "0x20E84A8", VA = "0x20E84A8")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400233D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400233E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x400233F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x60027C5")]
	[Address(RVA = "0x1FB6314", Offset = "0x1FB6314", VA = "0x1FB6314")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x60027C6")]
	[Address(RVA = "0x1FB6634", Offset = "0x1FB6634", VA = "0x1FB6634", Slot = "13")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x60027C7")]
	[Address(RVA = "0x1FB663C", Offset = "0x1FB663C", VA = "0x1FB663C", Slot = "14")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x60027C8")]
	[Address(RVA = "0x1FB6644", Offset = "0x1FB6644", VA = "0x1FB6644", Slot = "15")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000543")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000544")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5613C", Offset = "0xE5613C")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000546")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE56150", Offset = "0xE56150")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4002347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4002348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4002349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x400234A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x400234B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x400234C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x60027CB")]
	[Address(RVA = "0x1FB75C4", Offset = "0x1FB75C4", VA = "0x1FB75C4")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x60027CC")]
	[Address(RVA = "0x1FB78A0", Offset = "0x1FB78A0", VA = "0x1FB78A0")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x60027CD")]
	[Address(RVA = "0x1FB79BC", Offset = "0x1FB79BC", VA = "0x1FB79BC")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x60027CE")]
	[Address(RVA = "0x1FB7380", Offset = "0x1FB7380", VA = "0x1FB7380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xE6E7EC", Offset = "0xE6E7EC")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x60027CF")]
	[Address(RVA = "0x1FB7494", Offset = "0x1FB7494", VA = "0x1FB7494")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xE6E84C", Offset = "0xE6E84C")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x60027D0")]
	[Address(RVA = "0x1FB76BC", Offset = "0x1FB76BC", VA = "0x1FB76BC")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x60027D1")]
	[Address(RVA = "0x1FB7798", Offset = "0x1FB7798", VA = "0x1FB7798")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x60027D2")]
	[Address(RVA = "0x1FB7AD8", Offset = "0x1FB7AD8", VA = "0x1FB7AD8")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x2000548")]
public static class AkBankManager
{
	[Token(Token = "0x2000549")]
	private class BankHandle
	{
		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65178", Offset = "0xE65178")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x170003CD")]
		public int RefCount
		{
			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x20E9EE8", Offset = "0x20E9EE8", VA = "0x20E9EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E8AC", Offset = "0xE6E8AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60027EE")]
			[Address(RVA = "0x20E9EF0", Offset = "0x20E9EF0", VA = "0x20E9EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E8BC", Offset = "0xE6E8BC")]
			private set
			{
			}
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x20E96AC", Offset = "0x20E96AC", VA = "0x20E96AC")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x20E9EF8", Offset = "0x20E9EF8", VA = "0x20E9EF8", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x20E9F68", Offset = "0x20E9F68", VA = "0x20E9F68")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x20EA0C8", Offset = "0x20EA0C8", VA = "0x20EA0C8", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x20EA024", Offset = "0x20EA024", VA = "0x20EA024")]
		public void IncRef()
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x20EA278", Offset = "0x20EA278", VA = "0x20EA278")]
		public void DecRef()
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x20E98E4", Offset = "0x20E98E4", VA = "0x20E98E4")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200054A")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x20E965C", Offset = "0x20E965C", VA = "0x20E965C")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x20E96E0", Offset = "0x20E96E0", VA = "0x20E96E0")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, object in_Cookie)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x20E9E04", Offset = "0x20E9E04", VA = "0x20E9E04", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200054B")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x20EA320", Offset = "0x20EA320", VA = "0x20EA320")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x20EA628", Offset = "0x20EA628", VA = "0x20EA628", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x20EA7D8", Offset = "0x20EA7D8", VA = "0x20EA7D8", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x400234D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x400234E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x60027E4")]
	[Address(RVA = "0x1FBAE1C", Offset = "0x1FBAE1C", VA = "0x1FBAE1C")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x60027E5")]
	[Address(RVA = "0x1FBAF60", Offset = "0x1FBAF60", VA = "0x1FBAF60")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x60027E6")]
	[Address(RVA = "0x1FBB010", Offset = "0x1FBB010", VA = "0x1FBB010")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x60027E7")]
	[Address(RVA = "0x1FBB18C", Offset = "0x1FBB18C", VA = "0x1FBB18C")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x60027E8")]
	[Address(RVA = "0x1FBB210", Offset = "0x1FBB210", VA = "0x1FBB210")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x60027E9")]
	[Address(RVA = "0x1FBB498", Offset = "0x1FBB498", VA = "0x1FBB498")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x60027EA")]
	[Address(RVA = "0x1FBB6E0", Offset = "0x1FBB6E0", VA = "0x1FBB6E0")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200054C")]
public static class AkCallbackManager
{
	[Token(Token = "0x200054D")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x200054E")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x200054F")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, object in_Cookie);

	[Token(Token = "0x2000550")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x20EB1CC", Offset = "0x20EB1CC", VA = "0x20EB1CC")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x20EB31C", Offset = "0x20EB31C", VA = "0x20EB31C")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000551")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x20EAC7C", Offset = "0x20EAC7C", VA = "0x20EAC7C")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000552")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000553")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x20EAB84", Offset = "0x20EAB84", VA = "0x20EAB84")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000554")]
	public class InitializationSettings
	{
		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x20EB324", Offset = "0x20EB324", VA = "0x20EB324")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x4002356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65188", Offset = "0xE65188")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x4002357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x4002358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x4002359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x400235A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x400235B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x400235C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x400235D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x400235E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x400235F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4002360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4002361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4002362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4002363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4002364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x4002365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x4002366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x170003CE")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x1FBC8CC", Offset = "0x1FBC8CC", VA = "0x1FBC8CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E8CC", Offset = "0xE6E8CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x1FBC930", Offset = "0x1FBC930", VA = "0x1FBC930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E8DC", Offset = "0xE6E8DC")]
		set
		{
		}
	}

	[Token(Token = "0x60027FD")]
	[Address(RVA = "0x1FBC99C", Offset = "0x1FBC99C", VA = "0x1FBC99C")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x60027FE")]
	[Address(RVA = "0x1FBCC70", Offset = "0x1FBCC70", VA = "0x1FBCC70")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x60027FF")]
	[Address(RVA = "0x1FBCF68", Offset = "0x1FBCF68", VA = "0x1FBCF68")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6002800")]
	[Address(RVA = "0x1FBD260", Offset = "0x1FBD260", VA = "0x1FBD260")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6002801")]
	[Address(RVA = "0x1FBD324", Offset = "0x1FBD324", VA = "0x1FBD324")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002802")]
	[Address(RVA = "0x1FBD4D8", Offset = "0x1FBD4D8", VA = "0x1FBD4D8")]
	public static void Term()
	{
	}

	[Token(Token = "0x6002803")]
	[Address(RVA = "0x1FBD624", Offset = "0x1FBD624", VA = "0x1FBD624")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6002804")]
	[Address(RVA = "0x1FBD70C", Offset = "0x1FBD70C", VA = "0x1FBD70C")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6002805")]
	[Address(RVA = "0x1FBD7D4", Offset = "0x1FBD7D4", VA = "0x1FBD7D4")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x2000555")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x170003CF")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x600281D")]
		[Address(RVA = "0x1FBC1BC", Offset = "0x1FBC1BC", VA = "0x1FBC1BC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D0")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x600281E")]
		[Address(RVA = "0x1FBC214", Offset = "0x1FBC214", VA = "0x1FBC214", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D1")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x600281F")]
		[Address(RVA = "0x1FBC26C", Offset = "0x1FBC26C", VA = "0x1FBC26C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D2")]
	public virtual string SoundBankPersistentDataPath
	{
		[Token(Token = "0x6002820")]
		[Address(RVA = "0x1FBC2C4", Offset = "0x1FBC2C4", VA = "0x1FBC2C4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D3")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6002821")]
		[Address(RVA = "0x1FBC2CC", Offset = "0x1FBC2CC", VA = "0x1FBC2CC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D4")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6002822")]
		[Address(RVA = "0x1FBC310", Offset = "0x1FBC310", VA = "0x1FBC310", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003D5")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6002823")]
		[Address(RVA = "0x1FBC318", Offset = "0x1FBC318", VA = "0x1FBC318", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D6")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6002824")]
		[Address(RVA = "0x1FBC37C", Offset = "0x1FBC37C", VA = "0x1FBC37C", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D7")]
	public virtual bool UseAsyncOpen
	{
		[Token(Token = "0x6002825")]
		[Address(RVA = "0x1FBC450", Offset = "0x1FBC450", VA = "0x1FBC450", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002826")]
	[Address(RVA = "0x1FBC458", Offset = "0x1FBC458", VA = "0x1FBC458")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000556")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x2000557")]
	public enum PanningRule
	{
		[Token(Token = "0x4002378")]
		Speakers,
		[Token(Token = "0x4002379")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x2000558")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x2000559")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x400237E")]
			Anonymous,
			[Token(Token = "0x400237F")]
			Standard,
			[Token(Token = "0x4002380")]
			Ambisonic
		}

		[Token(Token = "0x200055A")]
		public enum ChannelMask
		{
			[Token(Token = "0x4002382")]
			NONE = 0,
			[Token(Token = "0x4002383")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4002384")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4002385")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4002386")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4002387")]
			BACK_LEFT = 16,
			[Token(Token = "0x4002388")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4002389")]
			BACK_CENTER = 256,
			[Token(Token = "0x400238A")]
			SIDE_LEFT = 512,
			[Token(Token = "0x400238B")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x400238C")]
			TOP = 2048,
			[Token(Token = "0x400238D")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x400238E")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x400238F")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4002390")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4002391")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4002392")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4002393")]
			SETUP_MONO = 4,
			[Token(Token = "0x4002394")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4002395")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4002396")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4002397")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4002398")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4002399")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x400239A")]
			SETUP_4 = 1539,
			[Token(Token = "0x400239B")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x400239C")]
			SETUP_5 = 1543,
			[Token(Token = "0x400239D")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x400239E")]
			SETUP_6 = 1587,
			[Token(Token = "0x400239F")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x40023A0")]
			SETUP_7 = 1591,
			[Token(Token = "0x40023A1")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x40023A2")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x40023A3")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x40023A4")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x40023A5")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x40023A6")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x40023A7")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x40023A8")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x40023A9")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x40023AA")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x40023AB")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x40023AC")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x40023AD")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x40023AE")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x40023AF")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x40023B0")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x40023B1")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x40023B2")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x40023B3")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x40023B4")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x40023B5")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x40023B6")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x40023B7")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x40023B8")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x40023B9")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x40023BA")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x40023BB")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x40023BC")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x40023BD")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65278", Offset = "0xE65278")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE652B0", Offset = "0xE652B0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xE652B0", Offset = "0xE652B0")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65334", Offset = "0xE65334")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x20EB810", Offset = "0x20EB810", VA = "0x20EB810")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x20EB890", Offset = "0x20EB890", VA = "0x20EB890")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x4002373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65198", Offset = "0xE65198")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4002374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE651D0", Offset = "0xE651D0")]
	public uint m_DeviceID;

	[Token(Token = "0x4002375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65208", Offset = "0xE65208")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4002376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65240", Offset = "0xE65240")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6002827")]
	[Address(RVA = "0x1FC0CA8", Offset = "0x1FC0CA8", VA = "0x1FC0CA8")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6002828")]
	[Address(RVA = "0x1FB6598", Offset = "0x1FB6598", VA = "0x1FB6598")]
	public AkCommonOutputSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200055B")]
public class AkCommonAdvancedSettings
{
	[Serializable]
	[Token(Token = "0x200055C")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6567C", Offset = "0xE6567C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6567C", Offset = "0xE6567C")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE656D0", Offset = "0xE656D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE656D0", Offset = "0xE656D0")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x20EB7FC", Offset = "0x20EB7FC", VA = "0x20EB7FC")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40023BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6536C", Offset = "0xE6536C")]
	public uint m_IOMemorySize;

	[Token(Token = "0x40023BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE653A4", Offset = "0xE653A4")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x40023C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE653DC", Offset = "0xE653DC")]
	public bool m_UseStreamCache;

	[Token(Token = "0x40023C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65414", Offset = "0xE65414")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x40023C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6544C", Offset = "0xE6544C")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x40023C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65484", Offset = "0xE65484")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x40023C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE654BC", Offset = "0xE654BC")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x40023C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE654F4", Offset = "0xE654F4")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x40023C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6552C", Offset = "0xE6552C")]
	public bool m_DebugOutOfRangeCheckEnabled;

	[Token(Token = "0x40023C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65564", Offset = "0xE65564")]
	public float m_DebugOutOfRangeLimit;

	[Token(Token = "0x40023C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6559C", Offset = "0xE6559C")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x40023C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE655D4", Offset = "0xE655D4")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x40023CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6560C", Offset = "0xE6560C")]
	public string m_SoundBankPersistentDataPath;

	[Token(Token = "0x40023CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65644", Offset = "0xE65644")]
	public bool m_UseAsyncOpen;

	[Token(Token = "0x600282B")]
	[Address(RVA = "0x1FC039C", Offset = "0x1FC039C", VA = "0x1FC039C", Slot = "4")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x600282C")]
	[Address(RVA = "0x1FC05D0", Offset = "0x1FC05D0", VA = "0x1FC05D0", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x600282D")]
	[Address(RVA = "0x1FC0654", Offset = "0x1FC0654", VA = "0x1FC0654", Slot = "6")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x600282E")]
	[Address(RVA = "0x1FC0658", Offset = "0x1FC0658", VA = "0x1FC0658", Slot = "7")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x600282F")]
	[Address(RVA = "0x1FC06AC", Offset = "0x1FC06AC", VA = "0x1FC06AC", Slot = "8")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6002830")]
	[Address(RVA = "0x1FC06B0", Offset = "0x1FC06B0", VA = "0x1FC06B0", Slot = "9")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6002831")]
	[Address(RVA = "0x1FC07B8", Offset = "0x1FC07B8", VA = "0x1FC07B8")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200055D")]
public class AkCommonCommSettings
{
	[Token(Token = "0x40023CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6572C", Offset = "0xE6572C")]
	public uint m_PoolSize;

	[Token(Token = "0x40023CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x40023D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65764", Offset = "0xE65764")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x40023D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6579C", Offset = "0xE6579C")]
	public ushort m_CommandPort;

	[Token(Token = "0x40023D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE657D4", Offset = "0xE657D4")]
	public ushort m_NotificationPort;

	[Token(Token = "0x40023D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6580C", Offset = "0xE6580C")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x40023D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65844", Offset = "0xE65844")]
	public string m_NetworkName;

	[Token(Token = "0x40023D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6587C", Offset = "0xE6587C")]
	public AkCommunicationSettings.AkCommSystem m_commSystem;

	[Token(Token = "0x6002833")]
	[Address(RVA = "0x1FC07F0", Offset = "0x1FC07F0", VA = "0x1FC07F0", Slot = "4")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x6002834")]
	[Address(RVA = "0x1FC0BD0", Offset = "0x1FC0BD0", VA = "0x1FC0BD0", Slot = "5")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6002835")]
	[Address(RVA = "0x1FC0BD4", Offset = "0x1FC0BD4", VA = "0x1FC0BD4")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x200055E")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x170003D8")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x600283A")]
		[Address(RVA = "0x1FC0D94", Offset = "0x1FC0D94", VA = "0x1FC0D94", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D9")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x600283B")]
		[Address(RVA = "0x1FC0F60", Offset = "0x1FC0F60", VA = "0x1FC0F60", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003DA")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x600283C")]
		[Address(RVA = "0x1FC0FDC", Offset = "0x1FC0FDC", VA = "0x1FC0FDC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003DB")]
	public override string InitialLanguage
	{
		[Token(Token = "0x600283D")]
		[Address(RVA = "0x1FC1060", Offset = "0x1FC1060", VA = "0x1FC1060", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003DC")]
	public override string SoundBankPersistentDataPath
	{
		[Token(Token = "0x600283E")]
		[Address(RVA = "0x1FC108C", Offset = "0x1FC108C", VA = "0x1FC108C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003DD")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x600283F")]
		[Address(RVA = "0x1FC10B8", Offset = "0x1FC10B8", VA = "0x1FC10B8", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003DE")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6002840")]
		[Address(RVA = "0x1FC10E4", Offset = "0x1FC10E4", VA = "0x1FC10E4", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003DF")]
	public override bool UseAsyncOpen
	{
		[Token(Token = "0x6002841")]
		[Address(RVA = "0x1FC1110", Offset = "0x1FC1110", VA = "0x1FC1110", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003E0")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6002842")]
		[Address(RVA = "0x1FC113C", Offset = "0x1FC113C", VA = "0x1FC113C", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002837")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6002838")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6002839")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6002843")]
	[Address(RVA = "0x1FC1190", Offset = "0x1FC1190", VA = "0x1FC1190")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x200055F")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE56164", Offset = "0xE56164")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x40023D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x6002844")]
	[Address(RVA = "0x23DBF78", Offset = "0x23DBF78", VA = "0x23DBF78")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000560")]
public class AkLogger
{
	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5619C", Offset = "0xE5619C")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x40023D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x40023D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x170003E1")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6002846")]
		[Address(RVA = "0x23E642C", Offset = "0x23E642C", VA = "0x23E642C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002845")]
	[Address(RVA = "0x23E6290", Offset = "0x23E6290", VA = "0x23E6290")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6002847")]
	[Address(RVA = "0x23E6490", Offset = "0x23E6490", VA = "0x23E6490", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6002848")]
	[Address(RVA = "0x23E6610", Offset = "0x23E6610", VA = "0x23E6610")]
	public void Init()
	{
	}

	[Token(Token = "0x6002849")]
	[Address(RVA = "0x23E61A0", Offset = "0x23E61A0", VA = "0x23E61A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xE6E8EC", Offset = "0xE6E8EC")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x600284A")]
	[Address(RVA = "0x23E6614", Offset = "0x23E6614", VA = "0x23E6614")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x600284B")]
	[Address(RVA = "0x23E6704", Offset = "0x23E6704", VA = "0x23E6704")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x600284C")]
	[Address(RVA = "0x23E67F4", Offset = "0x23E67F4", VA = "0x23E67F4")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x2000562")]
public static class AkRoomAwareManager
{
	[Token(Token = "0x40023D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<AkRoomAwareObject> m_RoomAwareObjects;

	[Token(Token = "0x40023DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<AkRoomAwareObject> m_RoomAwareObjectToUpdate;

	[Token(Token = "0x6002852")]
	[Address(RVA = "0x23F66A4", Offset = "0x23F66A4", VA = "0x23F66A4")]
	public static void RegisterRoomAwareObject(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6002853")]
	[Address(RVA = "0x23F6738", Offset = "0x23F6738", VA = "0x23F6738")]
	public static void UnregisterRoomAwareObject(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6002854")]
	[Address(RVA = "0x23F6010", Offset = "0x23F6010", VA = "0x23F6010")]
	public static void RegisterRoomAwareObjectForUpdate(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6002855")]
	[Address(RVA = "0x23F6170", Offset = "0x23F6170", VA = "0x23F6170")]
	public static void ObjectEnteredRoom(Collider collider, AkRoom room)
	{
	}

	[Token(Token = "0x6002856")]
	[Address(RVA = "0x23F5C58", Offset = "0x23F5C58", VA = "0x23F5C58")]
	public static void ObjectEnteredRoom(AkRoomAwareObject roomAwareObject, AkRoom room)
	{
	}

	[Token(Token = "0x6002857")]
	[Address(RVA = "0x23F62D8", Offset = "0x23F62D8", VA = "0x23F62D8")]
	public static void ObjectExitedRoom(Collider collider, AkRoom room)
	{
	}

	[Token(Token = "0x6002858")]
	[Address(RVA = "0x23F68B0", Offset = "0x23F68B0", VA = "0x23F68B0")]
	public static void ObjectExitedRoom(AkRoomAwareObject roomAwareObject, AkRoom room)
	{
	}

	[Token(Token = "0x6002859")]
	[Address(RVA = "0x23F69BC", Offset = "0x23F69BC", VA = "0x23F69BC")]
	public static void UpdateRoomAwareObjects()
	{
	}
}
[Token(Token = "0x2000563")]
public class AkRoomManager
{
	[Token(Token = "0x40023DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x40023DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x40023DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkSurfaceReflector> m_Reflectors;

	[Token(Token = "0x40023DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<AkSurfaceReflector> m_ReflectorsToUpdate;

	[Token(Token = "0x40023DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkRoomManager m_Instance;

	[Token(Token = "0x600285B")]
	[Address(RVA = "0x23F727C", Offset = "0x23F727C", VA = "0x23F727C")]
	public static void Init()
	{
	}

	[Token(Token = "0x600285C")]
	[Address(RVA = "0x23F7414", Offset = "0x23F7414", VA = "0x23F7414")]
	public static void Terminate()
	{
	}

	[Token(Token = "0x600285D")]
	[Address(RVA = "0x23F7478", Offset = "0x23F7478", VA = "0x23F7478")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x600285E")]
	[Address(RVA = "0x23F759C", Offset = "0x23F759C", VA = "0x23F759C")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x600285F")]
	[Address(RVA = "0x23F7654", Offset = "0x23F7654", VA = "0x23F7654")]
	public static void RegisterReflector(AkSurfaceReflector reflector)
	{
	}

	[Token(Token = "0x6002860")]
	[Address(RVA = "0x23F7778", Offset = "0x23F7778", VA = "0x23F7778")]
	public static void UnregisterReflector(AkSurfaceReflector reflector)
	{
	}

	[Token(Token = "0x6002861")]
	[Address(RVA = "0x23F7830", Offset = "0x23F7830", VA = "0x23F7830")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6002862")]
	[Address(RVA = "0x23F5960", Offset = "0x23F5960", VA = "0x23F5960")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6002863")]
	[Address(RVA = "0x23F7A24", Offset = "0x23F7A24", VA = "0x23F7A24")]
	public static void Update()
	{
	}

	[Token(Token = "0x6002864")]
	[Address(RVA = "0x23F72F4", Offset = "0x23F72F4", VA = "0x23F72F4")]
	public AkRoomManager()
	{
	}
}
[Token(Token = "0x2000564")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6002865")]
	[Address(RVA = "0x23FA94C", Offset = "0x23FA94C", VA = "0x23FA94C")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000565")]
public class AkUtilities
{
	[Token(Token = "0x2000566")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x40023E0")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x40023E1")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x170003E2")]
		public static byte HashSize
		{
			[Token(Token = "0x600286A")]
			[Address(RVA = "0x20EFAE0", Offset = "0x20EFAE0", VA = "0x20EFAE0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600286B")]
			[Address(RVA = "0x20EFA5C", Offset = "0x20EFA5C", VA = "0x20EFA5C")]
			set
			{
			}
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x20EFA54", Offset = "0x20EFA54", VA = "0x20EFA54")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x20EFB44", Offset = "0x20EFB44", VA = "0x20EFB44")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x20EFC80", Offset = "0x20EFC80", VA = "0x20EFC80")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x6002866")]
	[Address(RVA = "0x2129D6C", Offset = "0x2129D6C", VA = "0x2129D6C")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6002867")]
	[Address(RVA = "0x2129EBC", Offset = "0x2129EBC", VA = "0x2129EBC")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6002868")]
	[Address(RVA = "0x2129F3C", Offset = "0x2129F3C", VA = "0x2129F3C")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000567")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE561B0", Offset = "0xE561B0")]
public class AkVector
{
	[Token(Token = "0x40023E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 Vector;

	[Token(Token = "0x170003E3")]
	public float X
	{
		[Token(Token = "0x6002870")]
		[Address(RVA = "0x2129F58", Offset = "0x2129F58", VA = "0x2129F58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600286F")]
		[Address(RVA = "0x2129F50", Offset = "0x2129F50", VA = "0x2129F50")]
		set
		{
		}
	}

	[Token(Token = "0x170003E4")]
	public float Y
	{
		[Token(Token = "0x6002872")]
		[Address(RVA = "0x2129F68", Offset = "0x2129F68", VA = "0x2129F68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002871")]
		[Address(RVA = "0x2129F60", Offset = "0x2129F60", VA = "0x2129F60")]
		set
		{
		}
	}

	[Token(Token = "0x170003E5")]
	public float Z
	{
		[Token(Token = "0x6002874")]
		[Address(RVA = "0x2129F78", Offset = "0x2129F78", VA = "0x2129F78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002873")]
		[Address(RVA = "0x2129F70", Offset = "0x2129F70", VA = "0x2129F70")]
		set
		{
		}
	}

	[Token(Token = "0x600286E")]
	[Address(RVA = "0x2129F44", Offset = "0x2129F44", VA = "0x2129F44")]
	public void Zero()
	{
	}

	[Token(Token = "0x6002875")]
	[Address(RVA = "0x2129F80", Offset = "0x2129F80", VA = "0x2129F80")]
	public static implicit operator Vector3(AkVector vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002876")]
	[Address(RVA = "0x2129F9C", Offset = "0x2129F9C", VA = "0x2129F9C")]
	public AkVector()
	{
	}
}
[Token(Token = "0x2000568")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE561E8", Offset = "0xE561E8")]
public class AkVertex
{
	[Token(Token = "0x40023E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 Vector;

	[Token(Token = "0x170003E6")]
	public float X
	{
		[Token(Token = "0x6002879")]
		[Address(RVA = "0x2129FE4", Offset = "0x2129FE4", VA = "0x2129FE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002878")]
		[Address(RVA = "0x2129FDC", Offset = "0x2129FDC", VA = "0x2129FDC")]
		set
		{
		}
	}

	[Token(Token = "0x170003E7")]
	public float Y
	{
		[Token(Token = "0x600287B")]
		[Address(RVA = "0x2129FF4", Offset = "0x2129FF4", VA = "0x2129FF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600287A")]
		[Address(RVA = "0x2129FEC", Offset = "0x2129FEC", VA = "0x2129FEC")]
		set
		{
		}
	}

	[Token(Token = "0x170003E8")]
	public float Z
	{
		[Token(Token = "0x600287D")]
		[Address(RVA = "0x212A004", Offset = "0x212A004", VA = "0x212A004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600287C")]
		[Address(RVA = "0x2129FFC", Offset = "0x2129FFC", VA = "0x2129FFC")]
		set
		{
		}
	}

	[Token(Token = "0x6002877")]
	[Address(RVA = "0x2129FD0", Offset = "0x2129FD0", VA = "0x2129FD0")]
	public void Zero()
	{
	}

	[Token(Token = "0x600287E")]
	[Address(RVA = "0x212A00C", Offset = "0x212A00C", VA = "0x212A00C")]
	public static implicit operator Vector3(AkVertex vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600287F")]
	[Address(RVA = "0x212A028", Offset = "0x212A028", VA = "0x212A028")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6002880")]
	[Address(RVA = "0x212A05C", Offset = "0x212A05C", VA = "0x212A05C")]
	public AkVertex(float x, float y, float z)
	{
	}

	[Token(Token = "0x6002881")]
	[Address(RVA = "0x212A0B8", Offset = "0x212A0B8", VA = "0x212A0B8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002882")]
	[Address(RVA = "0x212A0C4", Offset = "0x212A0C4", VA = "0x212A0C4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002883")]
	[Address(RVA = "0x212A0CC", Offset = "0x212A0CC", VA = "0x212A0CC")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000569")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56220", Offset = "0xE56220")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x170003E9")]
	protected override int StructureSize
	{
		[Token(Token = "0x6002885")]
		[Address(RVA = "0x212A14C", Offset = "0x212A14C", VA = "0x212A14C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002884")]
	[Address(RVA = "0x212A0F0", Offset = "0x212A0F0", VA = "0x212A0F0")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6002886")]
	[Address(RVA = "0x212A154", Offset = "0x212A154", VA = "0x212A154", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6002887")]
	[Address(RVA = "0x212A15C", Offset = "0x212A15C", VA = "0x212A15C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x200056A")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x200056B")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x170003EE")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0x20F02F0", Offset = "0x20F02F0", VA = "0x20F02F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600289E")]
			[Address(RVA = "0x20F038C", Offset = "0x20F038C", VA = "0x20F038C")]
			set
			{
			}
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x20EFDB0", Offset = "0x20EFDB0", VA = "0x20EFDB0")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x20EFE44", Offset = "0x20EFE44", VA = "0x20EFE44")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x20EFCC0", Offset = "0x20EFCC0", VA = "0x20EFCC0")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x20EFEA8", Offset = "0x20EFEA8", VA = "0x20EFEA8")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x20EFF6C", Offset = "0x20EFF6C", VA = "0x20EFF6C")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x20F028C", Offset = "0x20F028C", VA = "0x20F028C")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200056C")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x20EFCA4", Offset = "0x20EFCA4", VA = "0x20EFCA4", Slot = "13")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x20EFCAC", Offset = "0x20EFCAC", VA = "0x20EFCAC", Slot = "14")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x20EFCB4", Offset = "0x20EFCB4", VA = "0x20EFCB4", Slot = "15")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x20EFCBC", Offset = "0x20EFCBC", VA = "0x20EFCBC")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x40023E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x40023E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x40023E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x40023E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40023EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40023EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x40023EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x40023ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x40023EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x170003EA")]
	public bool IsValid
	{
		[Token(Token = "0x6002888")]
		[Address(RVA = "0x212A180", Offset = "0x212A180", VA = "0x212A180")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003EB")]
	public int Count
	{
		[Token(Token = "0x6002889")]
		[Address(RVA = "0x212A1EC", Offset = "0x212A1EC", VA = "0x212A1EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170003EC")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x600288D")]
		[Address(RVA = "0x212A250", Offset = "0x212A250", VA = "0x212A250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003ED")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x600288F")]
		[Address(RVA = "0x212A5AC", Offset = "0x212A5AC", VA = "0x212A5AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600288A")]
	[Address(RVA = "0x212A238", Offset = "0x212A238", VA = "0x212A238", Slot = "13")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600288B")]
	[Address(RVA = "0x212A240", Offset = "0x212A240", VA = "0x212A240", Slot = "14")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600288C")]
	[Address(RVA = "0x212A248", Offset = "0x212A248", VA = "0x212A248", Slot = "15")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x600288E")]
	[Address(RVA = "0x212A3B8", Offset = "0x212A3B8", VA = "0x212A3B8")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6002890")]
	[Address(RVA = "0x212A6EC", Offset = "0x212A6EC", VA = "0x212A6EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002891")]
	[Address(RVA = "0x20F9CB8", Offset = "0x20F9CB8", VA = "0x20F9CB8")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6002892")]
	[Address(RVA = "0x212A880", Offset = "0x212A880", VA = "0x212A880")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6002893")]
	[Address(RVA = "0x20FA350", Offset = "0x20FA350", VA = "0x20FA350")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6002894")]
	[Address(RVA = "0x212A9A8", Offset = "0x212A9A8", VA = "0x212A9A8")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6002895")]
	[Address(RVA = "0x212AB58", Offset = "0x212AB58", VA = "0x212AB58")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x200056D")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x170003EF")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x1FB5240", Offset = "0x1FB5240", VA = "0x1FB5240", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028A3")]
	[Address(RVA = "0x1FB51E4", Offset = "0x1FB51E4", VA = "0x1FB51E4")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x60028A5")]
	[Address(RVA = "0x1FB529C", Offset = "0x1FB529C", VA = "0x1FB529C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028A6")]
	[Address(RVA = "0x1FB5300", Offset = "0x1FB5300", VA = "0x1FB5300", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028A7")]
	[Address(RVA = "0x1FB5364", Offset = "0x1FB5364", VA = "0x1FB5364", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200056E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE56258", Offset = "0xE56258")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x40023F5")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x40023F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x40023F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x40023F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x170003F0")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x1FB94A0", Offset = "0x1FB94A0", VA = "0x1FB94A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003F1")]
	public bool isFull
	{
		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x1FB9608", Offset = "0x1FB9608", VA = "0x1FB9608")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60028A8")]
	[Address(RVA = "0x1FB93E8", Offset = "0x1FB93E8", VA = "0x1FB93E8")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x60028AB")]
	[Address(RVA = "0x1FB966C", Offset = "0x1FB966C", VA = "0x1FB966C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60028AC")]
	[Address(RVA = "0x1FB9700", Offset = "0x1FB9700", VA = "0x1FB9700", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x60028AD")]
	[Address(RVA = "0x1FB9768", Offset = "0x1FB9768", VA = "0x1FB9768")]
	public void Reset()
	{
	}

	[Token(Token = "0x60028AE")]
	[Address(RVA = "0x1FB9770", Offset = "0x1FB9770", VA = "0x1FB9770")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60028AF")]
	[Address(RVA = "0x1FB9890", Offset = "0x1FB9890", VA = "0x1FB9890")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60028B0")]
	[Address(RVA = "0x1FB996C", Offset = "0x1FB996C", VA = "0x1FB996C")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x60028B1")]
	[Address(RVA = "0x1FB9AC0", Offset = "0x1FB9AC0", VA = "0x1FB9AC0")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x60028B2")]
	[Address(RVA = "0x1FB9BC0", Offset = "0x1FB9BC0", VA = "0x1FB9BC0")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60028B3")]
	[Address(RVA = "0x1FB9C80", Offset = "0x1FB9C80", VA = "0x1FB9C80")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60028B4")]
	[Address(RVA = "0x1FB9D50", Offset = "0x1FB9D50", VA = "0x1FB9D50")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60028B5")]
	[Address(RVA = "0x1FB9D58", Offset = "0x1FB9D58", VA = "0x1FB9D58")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60028B6")]
	[Address(RVA = "0x1FB958C", Offset = "0x1FB958C", VA = "0x1FB958C")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200056F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE56290", Offset = "0xE56290")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x40023F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE659B4", Offset = "0xE659B4")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x40023FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x170003F2")]
	public int Capacity
	{
		[Token(Token = "0x60028BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E94C", Offset = "0xE6E94C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60028BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E95C", Offset = "0xE6E95C")]
		private set
		{
		}
	}

	[Token(Token = "0x170003F3")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x60028BD")]
		get;
	}

	[Token(Token = "0x170003F4")]
	public T Item
	{
		[Token(Token = "0x60028C2")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60028C3")]
		set
		{
		}
	}

	[Token(Token = "0x60028B7")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x60028B8")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60028B9")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x60028BC")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60028BE")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028BF")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028C0")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x60028C1")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x60028C4")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60028C5")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000570")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x40023FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x40023FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x40023FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x40023FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE659C4", Offset = "0xE659C4")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x170003F5")]
	public uint Count
	{
		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x1FBFE84", Offset = "0x1FBFE84", VA = "0x1FBFE84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E96C", Offset = "0xE6E96C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x1FBFE8C", Offset = "0x1FBFE8C", VA = "0x1FBFE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E97C", Offset = "0xE6E97C")]
		private set
		{
		}
	}

	[Token(Token = "0x60028C6")]
	[Address(RVA = "0x1FBFDF8", Offset = "0x1FBFDF8", VA = "0x1FBFDF8")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x60028C9")]
	[Address(RVA = "0x1FBFE94", Offset = "0x1FBFE94", VA = "0x1FBFE94", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60028CA")]
	[Address(RVA = "0x1FBFF28", Offset = "0x1FBFF28", VA = "0x1FBFF28", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x60028CB")]
	[Address(RVA = "0x1FBFF90", Offset = "0x1FBFF90", VA = "0x1FBFF90")]
	public void Reset()
	{
	}

	[Token(Token = "0x60028CC")]
	[Address(RVA = "0x1FBFFA0", Offset = "0x1FBFFA0", VA = "0x1FBFFA0")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x2000571")]
public class AkDeviceDescriptionArray : AkBaseArray<AkDeviceDescription>
{
	[Token(Token = "0x170003F6")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x1FC23E0", Offset = "0x1FC23E0", VA = "0x1FC23E0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028CD")]
	[Address(RVA = "0x1FC2384", Offset = "0x1FC2384", VA = "0x1FC2384")]
	public AkDeviceDescriptionArray(int count)
	{
	}

	[Token(Token = "0x60028CF")]
	[Address(RVA = "0x1FC243C", Offset = "0x1FC243C", VA = "0x1FC243C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028D0")]
	[Address(RVA = "0x1FC24A0", Offset = "0x1FC24A0", VA = "0x1FC24A0", Slot = "9")]
	protected override AkDeviceDescription CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028D1")]
	[Address(RVA = "0x1FC2504", Offset = "0x1FC2504", VA = "0x1FC2504", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDeviceDescription other)
	{
	}
}
[Token(Token = "0x2000572")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x170003F7")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x23DA5E8", Offset = "0x23DA5E8", VA = "0x23DA5E8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028D2")]
	[Address(RVA = "0x23DA58C", Offset = "0x23DA58C", VA = "0x23DA58C")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60028D4")]
	[Address(RVA = "0x23DA644", Offset = "0x23DA644", VA = "0x23DA644", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028D5")]
	[Address(RVA = "0x23DA6A8", Offset = "0x23DA6A8", VA = "0x23DA6A8", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x2000573")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x170003F8")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x23DF300", Offset = "0x23DF300", VA = "0x23DF300", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028D6")]
	[Address(RVA = "0x23DF2A4", Offset = "0x23DF2A4", VA = "0x23DF2A4")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x60028D8")]
	[Address(RVA = "0x23DF35C", Offset = "0x23DF35C", VA = "0x23DF35C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028D9")]
	[Address(RVA = "0x23DF3C0", Offset = "0x23DF3C0", VA = "0x23DF3C0", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028DA")]
	[Address(RVA = "0x23DF428", Offset = "0x23DF428", VA = "0x23DF428", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028DB")]
	[Address(RVA = "0x23DF48C", Offset = "0x23DF48C", VA = "0x23DF48C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x2000574")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE562C8", Offset = "0xE562C8")]
public class AkMIDIPostArray
{
	[Token(Token = "0x40023FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x4002400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4002401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x170003F9")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x23E9170", Offset = "0x23E9170", VA = "0x23E9170")]
		get
		{
			return null;
		}
		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x23E9294", Offset = "0x23E9294", VA = "0x23E9294")]
		set
		{
		}
	}

	[Token(Token = "0x60028DC")]
	[Address(RVA = "0x23E909C", Offset = "0x23E909C", VA = "0x23E909C")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x60028DF")]
	[Address(RVA = "0x23E93AC", Offset = "0x23E93AC", VA = "0x23E93AC", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x60028E0")]
	[Address(RVA = "0x23E9470", Offset = "0x23E9470", VA = "0x23E9470")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x60028E1")]
	[Address(RVA = "0x23E953C", Offset = "0x23E953C", VA = "0x23E953C")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x60028E2")]
	[Address(RVA = "0x23E9664", Offset = "0x23E9664", VA = "0x23E9664")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60028E3")]
	[Address(RVA = "0x23E966C", Offset = "0x23E966C", VA = "0x23E966C")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60028E4")]
	[Address(RVA = "0x23E9258", Offset = "0x23E9258", VA = "0x23E9258")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000575")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x170003FA")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x23EC24C", Offset = "0x23EC24C", VA = "0x23EC24C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028E5")]
	[Address(RVA = "0x23EC1F0", Offset = "0x23EC1F0", VA = "0x23EC1F0")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x60028E7")]
	[Address(RVA = "0x23EC2A8", Offset = "0x23EC2A8", VA = "0x23EC2A8", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028E8")]
	[Address(RVA = "0x23EC30C", Offset = "0x23EC30C", VA = "0x23EC30C", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028E9")]
	[Address(RVA = "0x23EC370", Offset = "0x23EC370", VA = "0x23EC370", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x2000576")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x170003FB")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x23ED2E4", Offset = "0x23ED2E4", VA = "0x23ED2E4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028EA")]
	[Address(RVA = "0x23ED288", Offset = "0x23ED288", VA = "0x23ED288")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x60028EC")]
	[Address(RVA = "0x23ED340", Offset = "0x23ED340", VA = "0x23ED340", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028ED")]
	[Address(RVA = "0x23ED3A4", Offset = "0x23ED3A4", VA = "0x23ED3A4", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028EE")]
	[Address(RVA = "0x23ED408", Offset = "0x23ED408", VA = "0x23ED408", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x2000577")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4002402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4002403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4002404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4002405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE659D4", Offset = "0xE659D4")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x170003FC")]
	public uint Count
	{
		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x23F0EC4", Offset = "0x23F0EC4", VA = "0x23F0EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E98C", Offset = "0xE6E98C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x23F0ECC", Offset = "0x23F0ECC", VA = "0x23F0ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E99C", Offset = "0xE6E99C")]
		private set
		{
		}
	}

	[Token(Token = "0x60028EF")]
	[Address(RVA = "0x23F0E38", Offset = "0x23F0E38", VA = "0x23F0E38")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x60028F2")]
	[Address(RVA = "0x23F0ED4", Offset = "0x23F0ED4", VA = "0x23F0ED4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60028F3")]
	[Address(RVA = "0x23F0F68", Offset = "0x23F0F68", VA = "0x23F0F68", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x60028F4")]
	[Address(RVA = "0x23F0FD0", Offset = "0x23F0FD0", VA = "0x23F0FD0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60028F5")]
	[Address(RVA = "0x23F0FE0", Offset = "0x23F0FE0", VA = "0x23F0FE0")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x2000578")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x170003FD")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x23F43C0", Offset = "0x23F43C0", VA = "0x23F43C0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028F6")]
	[Address(RVA = "0x23F4364", Offset = "0x23F4364", VA = "0x23F4364")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60028F8")]
	[Address(RVA = "0x23F441C", Offset = "0x23F441C", VA = "0x23F441C", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028F9")]
	[Address(RVA = "0x23F4480", Offset = "0x23F4480", VA = "0x23F4480", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000579")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x170003FE")]
	protected override int StructureSize
	{
		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x2120288", Offset = "0x2120288", VA = "0x2120288", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028FA")]
	[Address(RVA = "0x212022C", Offset = "0x212022C", VA = "0x212022C")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x60028FC")]
	[Address(RVA = "0x21202E0", Offset = "0x21202E0", VA = "0x21202E0", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60028FD")]
	[Address(RVA = "0x2120340", Offset = "0x2120340", VA = "0x2120340", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60028FE")]
	[Address(RVA = "0x21203A4", Offset = "0x21203A4", VA = "0x21203A4", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x200057A")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x170003FF")]
	protected override int StructureSize
	{
		[Token(Token = "0x6002900")]
		[Address(RVA = "0x2128318", Offset = "0x2128318", VA = "0x2128318", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60028FF")]
	[Address(RVA = "0x2122BE0", Offset = "0x2122BE0", VA = "0x2122BE0")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6002901")]
	[Address(RVA = "0x2128370", Offset = "0x2128370", VA = "0x2128370", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6002902")]
	[Address(RVA = "0x21283D0", Offset = "0x21283D0", VA = "0x21283D0", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6002903")]
	[Address(RVA = "0x2128434", Offset = "0x2128434", VA = "0x2128434", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x200057B")]
public class AkTimelineEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x200057C")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x400241F")]
		None = 0,
		[Token(Token = "0x4002420")]
		Playback = 1,
		[Token(Token = "0x4002421")]
		Retrigger = 2,
		[Token(Token = "0x4002422")]
		DelayedStop = 4,
		[Token(Token = "0x4002423")]
		Seek = 8,
		[Token(Token = "0x4002424")]
		FadeIn = 0x10,
		[Token(Token = "0x4002425")]
		FadeOut = 0x20
	}

	[Token(Token = "0x4002406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x4002407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4002408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4002409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x400240A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x400240B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x400240C")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x400240D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x400240E")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x400240F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event akEvent;

	[Token(Token = "0x4002410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4002411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4002412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x4002413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x4002414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4002415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4002416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4002417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4002418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4002419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x400241A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x400241B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x400241C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool PrintDebugInformation;

	[Token(Token = "0x400241D")]
	private const float alph = 0.05f;

	[Token(Token = "0x6002904")]
	[Address(RVA = "0x2124CFC", Offset = "0x2124CFC", VA = "0x2124CFC")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6002905")]
	[Address(RVA = "0x2124DC4", Offset = "0x2124DC4", VA = "0x2124DC4")]
	private bool IsScrubbing(Playable playable, FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6002906")]
	[Address(RVA = "0x2124ECC", Offset = "0x2124ECC", VA = "0x2124ECC")]
	private void PrintInfo(string FunctionName, Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6002907")]
	[Address(RVA = "0x21256A0", Offset = "0x21256A0", VA = "0x21256A0", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6002908")]
	[Address(RVA = "0x2125A6C", Offset = "0x2125A6C", VA = "0x2125A6C", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6002909")]
	[Address(RVA = "0x2125C9C", Offset = "0x2125C9C", VA = "0x2125C9C", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600290A")]
	[Address(RVA = "0x2125DF0", Offset = "0x2125DF0", VA = "0x2125DF0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600290B")]
	[Address(RVA = "0x212581C", Offset = "0x212581C", VA = "0x212581C")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x600290C")]
	[Address(RVA = "0x2125930", Offset = "0x2125930", VA = "0x2125930")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x600290D")]
	[Address(RVA = "0x21259CC", Offset = "0x21259CC", VA = "0x21259CC")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x600290E")]
	[Address(RVA = "0x21261B8", Offset = "0x21261B8", VA = "0x21261B8")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x600290F")]
	[Address(RVA = "0x21262C8", Offset = "0x21262C8", VA = "0x21262C8")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6002910")]
	[Address(RVA = "0x2125DB8", Offset = "0x2125DB8", VA = "0x2125DB8")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6002911")]
	[Address(RVA = "0x21263A8", Offset = "0x21263A8", VA = "0x21263A8")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6002912")]
	[Address(RVA = "0x212601C", Offset = "0x212601C", VA = "0x212601C")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6002913")]
	[Address(RVA = "0x2126120", Offset = "0x2126120", VA = "0x2126120")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6002914")]
	[Address(RVA = "0x2125BB8", Offset = "0x2125BB8", VA = "0x2125BB8")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6002915")]
	[Address(RVA = "0x212604C", Offset = "0x212604C", VA = "0x212604C")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6002916")]
	[Address(RVA = "0x2126460", Offset = "0x2126460", VA = "0x2126460")]
	public AkTimelineEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x200057D")]
public class AkTimelineEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4002426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event akEvent;

	[Token(Token = "0x4002427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4002428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4002429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eventDurationMax;

	[Token(Token = "0x400242A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x400242B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineClip owningClip;

	[Token(Token = "0x400242C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x400242D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x400242E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool PrintDebugInformation;

	[Token(Token = "0x400242F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x17000400")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6002917")]
		[Address(RVA = "0x2124A50", Offset = "0x2124A50", VA = "0x2124A50", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6002918")]
	[Address(RVA = "0x2124A58", Offset = "0x2124A58", VA = "0x2124A58", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6002919")]
	[Address(RVA = "0x2124C74", Offset = "0x2124C74", VA = "0x2124C74")]
	public AkTimelineEventPlayable()
	{
	}
}
[Token(Token = "0x200057E")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE56310", Offset = "0xE56310")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE56310", Offset = "0xE56310")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE56310", Offset = "0xE56310")]
public class AkTimelineEventTrack : TrackAsset
{
	[Token(Token = "0x600291A")]
	[Address(RVA = "0x2126474", Offset = "0x2126474", VA = "0x2126474", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600291B")]
	[Address(RVA = "0x212688C", Offset = "0x212688C", VA = "0x212688C")]
	public AkTimelineEventTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200057F")]
public class AkTimelineRtpcPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4002430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float value;

	[Token(Token = "0x4002431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65A34", Offset = "0xE65A34")]
	private RTPC <RTPC>k__BackingField;

	[Token(Token = "0x4002432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65A44", Offset = "0xE65A44")]
	private bool <setGlobally>k__BackingField;

	[Token(Token = "0x4002433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65A54", Offset = "0xE65A54")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x17000401")]
	public RTPC RTPC
	{
		[Token(Token = "0x600291D")]
		[Address(RVA = "0x2126AF0", Offset = "0x2126AF0", VA = "0x2126AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E9BC", Offset = "0xE6E9BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600291C")]
		[Address(RVA = "0x2126AE8", Offset = "0x2126AE8", VA = "0x2126AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E9AC", Offset = "0xE6E9AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000402")]
	public bool setGlobally
	{
		[Token(Token = "0x600291F")]
		[Address(RVA = "0x2126B04", Offset = "0x2126B04", VA = "0x2126B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E9DC", Offset = "0xE6E9DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600291E")]
		[Address(RVA = "0x2126AF8", Offset = "0x2126AF8", VA = "0x2126AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E9CC", Offset = "0xE6E9CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000403")]
	public GameObject gameObject
	{
		[Token(Token = "0x6002921")]
		[Address(RVA = "0x2126B14", Offset = "0x2126B14", VA = "0x2126B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E9FC", Offset = "0xE6E9FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002920")]
		[Address(RVA = "0x2126B0C", Offset = "0x2126B0C", VA = "0x2126B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6E9EC", Offset = "0xE6E9EC")]
		set
		{
		}
	}

	[Token(Token = "0x6002922")]
	[Address(RVA = "0x2126B1C", Offset = "0x2126B1C", VA = "0x2126B1C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData frameData, object playerData)
	{
	}

	[Token(Token = "0x6002923")]
	[Address(RVA = "0x2126AE0", Offset = "0x2126AE0", VA = "0x2126AE0")]
	public AkTimelineRtpcPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000580")]
public class AkTimelineRtpcPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4002434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPC RTPC;

	[Token(Token = "0x4002435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setGlobally;

	[Token(Token = "0x4002436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkTimelineRtpcPlayableBehaviour template;

	[Token(Token = "0x4002437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65A64", Offset = "0xE65A64")]
	private TimelineClip <owningClip>k__BackingField;

	[Token(Token = "0x17000404")]
	public TimelineClip owningClip
	{
		[Token(Token = "0x6002925")]
		[Address(RVA = "0x21268F4", Offset = "0x21268F4", VA = "0x21268F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EA0C", Offset = "0xE6EA0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002926")]
		[Address(RVA = "0x21268FC", Offset = "0x21268FC", VA = "0x21268FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EA1C", Offset = "0xE6EA1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000405")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6002927")]
		[Address(RVA = "0x2126904", Offset = "0x2126904", VA = "0x2126904", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6002924")]
	[Address(RVA = "0x21268F0", Offset = "0x21268F0", VA = "0x21268F0")]
	public void SetupClipDisplay()
	{
	}

	[Token(Token = "0x6002928")]
	[Address(RVA = "0x212690C", Offset = "0x212690C", VA = "0x212690C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject gameObject)
	{
		return default(Playable);
	}

	[Token(Token = "0x6002929")]
	[Address(RVA = "0x2126A38", Offset = "0x2126A38", VA = "0x2126A38")]
	public AkTimelineRtpcPlayable()
	{
	}
}
[Token(Token = "0x2000581")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE563CC", Offset = "0xE563CC")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE563CC", Offset = "0xE563CC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE563CC", Offset = "0xE563CC")]
public class AkTimelineRtpcTrack : TrackAsset
{
	[Token(Token = "0x600292A")]
	[Address(RVA = "0x2126C88", Offset = "0x2126C88", VA = "0x2126C88", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject gameObject, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600292B")]
	[Address(RVA = "0x2127050", Offset = "0x2127050", VA = "0x2127050")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x600292C")]
	[Address(RVA = "0x2127358", Offset = "0x2127358", VA = "0x2127358")]
	public AkTimelineRtpcTrack()
	{
	}
}
[Token(Token = "0x2000582")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x17000406")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600292D")]
		[Address(RVA = "0x2B5C340", Offset = "0x2B5C340", VA = "0x2B5C340", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600292E")]
	[Address(RVA = "0x2B5C348", Offset = "0x2B5C348", VA = "0x2B5C348")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000583")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x17000407")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600292F")]
		[Address(RVA = "0x2B5DF20", Offset = "0x2B5DF20", VA = "0x2B5DF20", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002930")]
	[Address(RVA = "0x2B5DF28", Offset = "0x2B5DF28", VA = "0x2B5DF28")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x2000584")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x17000408")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002931")]
		[Address(RVA = "0x2B5DF2C", Offset = "0x2B5DF2C", VA = "0x2B5DF2C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002932")]
	[Address(RVA = "0x2B5DF34", Offset = "0x2B5DF34", VA = "0x2B5DF34")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x2000585")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x17000409")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002933")]
		[Address(RVA = "0x2B5F560", Offset = "0x2B5F560", VA = "0x2B5F560", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002934")]
	[Address(RVA = "0x2B5F568", Offset = "0x2B5F568", VA = "0x2B5F568")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x2000586")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4002438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x4002439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AkShowOnly]
	private uint id;

	[Token(Token = "0x400243A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x1700040A")]
	public Guid Guid
	{
		[Token(Token = "0x6002935")]
		[Address(RVA = "0x2B6060C", Offset = "0x2B6060C", VA = "0x2B6060C")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x1700040B")]
	public string ObjectName
	{
		[Token(Token = "0x6002936")]
		[Address(RVA = "0x2B606AC", Offset = "0x2B606AC", VA = "0x2B606AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700040C")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6002937")]
		[Address(RVA = "0x2B606B4", Offset = "0x2B606B4", VA = "0x2B606B4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700040D")]
	public uint Id
	{
		[Token(Token = "0x6002938")]
		[Address(RVA = "0x2B606BC", Offset = "0x2B606BC", VA = "0x2B606BC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700040E")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002939")]
		get;
	}

	[Token(Token = "0x600293A")]
	[Address(RVA = "0x2B5C34C", Offset = "0x2B5C34C", VA = "0x2B5C34C")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x2000587")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x1700040F")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x600293B")]
		get;
		[Token(Token = "0x600293C")]
		set;
	}

	[Token(Token = "0x17000410")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x600293D")]
		get;
	}

	[Token(Token = "0x17000411")]
	public override string DisplayName
	{
		[Token(Token = "0x600293E")]
		[Address(RVA = "0x2B5F56C", Offset = "0x2B5F56C", VA = "0x2B5F56C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600293F")]
	[Address(RVA = "0x2B5F62C", Offset = "0x2B5F62C", VA = "0x2B5F62C")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x2000588")]
public enum WwiseObjectType
{
	[Token(Token = "0x400243C")]
	None,
	[Token(Token = "0x400243D")]
	AuxBus,
	[Token(Token = "0x400243E")]
	Bus,
	[Token(Token = "0x400243F")]
	Event,
	[Token(Token = "0x4002440")]
	Folder,
	[Token(Token = "0x4002441")]
	PhysicalFolder,
	[Token(Token = "0x4002442")]
	Project,
	[Token(Token = "0x4002443")]
	Soundbank,
	[Token(Token = "0x4002444")]
	State,
	[Token(Token = "0x4002445")]
	StateGroup,
	[Token(Token = "0x4002446")]
	Switch,
	[Token(Token = "0x4002447")]
	SwitchGroup,
	[Token(Token = "0x4002448")]
	WorkUnit,
	[Token(Token = "0x4002449")]
	GameParameter,
	[Token(Token = "0x400244A")]
	Trigger,
	[Token(Token = "0x400244B")]
	AcousticTexture
}
[Token(Token = "0x2000589")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x17000412")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002940")]
		[Address(RVA = "0x2B60E90", Offset = "0x2B60E90", VA = "0x2B60E90", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002941")]
	[Address(RVA = "0x2B60E98", Offset = "0x2B60E98", VA = "0x2B60E98")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x200058A")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x17000413")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002942")]
		[Address(RVA = "0x2B60E9C", Offset = "0x2B60E9C", VA = "0x2B60E9C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002943")]
	[Address(RVA = "0x2B60EA4", Offset = "0x2B60EA4", VA = "0x2B60EA4")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x200058B")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x400244C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AkShowOnly]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000414")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002944")]
		[Address(RVA = "0x2B60EA8", Offset = "0x2B60EA8", VA = "0x2B60EA8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000415")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6002945")]
		[Address(RVA = "0x2B60EB0", Offset = "0x2B60EB0", VA = "0x2B60EB0", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002946")]
		[Address(RVA = "0x2B60EB8", Offset = "0x2B60EB8", VA = "0x2B60EB8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000416")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6002947")]
		[Address(RVA = "0x2B60F48", Offset = "0x2B60F48", VA = "0x2B60F48", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002948")]
	[Address(RVA = "0x2B60F50", Offset = "0x2B60F50", VA = "0x2B60F50")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x200058C")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x17000417")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002949")]
		[Address(RVA = "0x2B60F54", Offset = "0x2B60F54", VA = "0x2B60F54", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600294A")]
	[Address(RVA = "0x2B60F5C", Offset = "0x2B60F5C", VA = "0x2B60F5C")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x200058D")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x400244D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x17000418")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600294B")]
		[Address(RVA = "0x2B60F60", Offset = "0x2B60F60", VA = "0x2B60F60", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000419")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x600294C")]
		[Address(RVA = "0x2B60F68", Offset = "0x2B60F68", VA = "0x2B60F68", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600294D")]
		[Address(RVA = "0x2B60F70", Offset = "0x2B60F70", VA = "0x2B60F70", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700041A")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x600294E")]
		[Address(RVA = "0x2B61000", Offset = "0x2B61000", VA = "0x2B61000", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600294F")]
	[Address(RVA = "0x2B61008", Offset = "0x2B61008", VA = "0x2B61008")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x200058E")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x1700041B")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002950")]
		[Address(RVA = "0x2B6100C", Offset = "0x2B6100C", VA = "0x2B6100C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002951")]
	[Address(RVA = "0x2B61014", Offset = "0x2B61014", VA = "0x2B61014")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x200058F")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6002952")]
	[Address(RVA = "0x23E9674", Offset = "0x23E9674", VA = "0x23E9674")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000590")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000591")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000592")]
		public enum AudioAPI
		{
			[Token(Token = "0x4002454")]
			None = 0,
			[Token(Token = "0x4002455")]
			Wasapi = 1,
			[Token(Token = "0x4002456")]
			XAudio2 = 2,
			[Token(Token = "0x4002457")]
			DirectSound = 4,
			[Token(Token = "0x4002458")]
			Default = -1
		}

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65BBC", Offset = "0xE65BBC")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xE65BBC", Offset = "0xE65BBC")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65C40", Offset = "0xE65C40")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x20EFC88", Offset = "0x20EFC88", VA = "0x20EFC88", Slot = "6")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x20EFC8C", Offset = "0x20EFC8C", VA = "0x20EFC8C")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400244E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400244F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4002450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6002953")]
	[Address(RVA = "0x212A160", Offset = "0x212A160", VA = "0x212A160", Slot = "13")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6002954")]
	[Address(RVA = "0x212A168", Offset = "0x212A168", VA = "0x212A168", Slot = "14")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6002955")]
	[Address(RVA = "0x212A170", Offset = "0x212A170", VA = "0x212A170", Slot = "15")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6002956")]
	[Address(RVA = "0x212A178", Offset = "0x212A178", VA = "0x212A178")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000593")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x400245A")]
	Simple_Mode,
	[Token(Token = "0x400245B")]
	Large_Mode,
	[Token(Token = "0x400245C")]
	MultiPosition_Mode
}
[Token(Token = "0x2000594")]
public class AkMultiPosEvent
{
	[Token(Token = "0x400245D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x400245E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6002959")]
	[Address(RVA = "0x23EA8D4", Offset = "0x23EA8D4", VA = "0x23EA8D4")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x600295A")]
	[Address(RVA = "0x23EA8DC", Offset = "0x23EA8DC", VA = "0x23EA8DC")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000595")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56484", Offset = "0xE56484")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x400245F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x4002460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x4002461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x4002462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x4002463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[HideInInspector]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x600295B")]
	[Address(RVA = "0x1FB5400", Offset = "0x1FB5400", VA = "0x1FB5400", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600295C")]
	[Address(RVA = "0x1FB58E8", Offset = "0x1FB58E8", VA = "0x1FB58E8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600295D")]
	[Address(RVA = "0x1FB5D6C", Offset = "0x1FB5D6C", VA = "0x1FB5D6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600295E")]
	[Address(RVA = "0x1FB5F80", Offset = "0x1FB5F80", VA = "0x1FB5F80", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600295F")]
	[Address(RVA = "0x1FB6198", Offset = "0x1FB6198", VA = "0x1FB6198")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6002960")]
	[Address(RVA = "0x1FB5714", Offset = "0x1FB5714", VA = "0x1FB5714")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6002961")]
	[Address(RVA = "0x1FB5AA0", Offset = "0x1FB5AA0", VA = "0x1FB5AA0")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6002962")]
	[Address(RVA = "0x1FB6270", Offset = "0x1FB6270", VA = "0x1FB6270")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x2000596")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x1700041C")]
	public Vector3 Position
	{
		[Token(Token = "0x6002964")]
		[Address(RVA = "0x1FB6204", Offset = "0x1FB6204", VA = "0x1FB6204")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700041D")]
	public Vector3 Forward
	{
		[Token(Token = "0x6002965")]
		[Address(RVA = "0x1FB6228", Offset = "0x1FB6228", VA = "0x1FB6228")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700041E")]
	public Vector3 Up
	{
		[Token(Token = "0x6002966")]
		[Address(RVA = "0x1FB624C", Offset = "0x1FB624C", VA = "0x1FB624C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6002967")]
	[Address(RVA = "0x1FB630C", Offset = "0x1FB630C", VA = "0x1FB630C")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x2000597")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE564BC", Offset = "0xE564BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE564BC", Offset = "0xE564BC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE564BC", Offset = "0xE564BC")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x2000598")]
	public class BaseListenerList
	{
		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x17000420")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6002974")]
			[Address(RVA = "0x20E9198", Offset = "0x20E9198", VA = "0x20E9198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x20E91A0", Offset = "0x20E91A0", VA = "0x20E91A0", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x20E92B0", Offset = "0x20E92B0", VA = "0x20E92B0", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x20E9394", Offset = "0x20E9394", VA = "0x20E9394")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x20E93E8", Offset = "0x20E93E8", VA = "0x20E93E8")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x2000599")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6002979")]
		[Address(RVA = "0x20E94B8", Offset = "0x20E94B8", VA = "0x20E94B8", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x20E9588", Offset = "0x20E9588", VA = "0x20E9588", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x20E9658", Offset = "0x20E9658", VA = "0x20E9658")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x4002464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x4002465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x4002466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x4002467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x4002468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x4002469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x1700041F")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6002968")]
		[Address(RVA = "0x1FB81EC", Offset = "0x1FB81EC", VA = "0x1FB81EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002969")]
	[Address(RVA = "0x1FB8250", Offset = "0x1FB8250", VA = "0x1FB8250")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600296A")]
	[Address(RVA = "0x1FB82DC", Offset = "0x1FB82DC", VA = "0x1FB82DC")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600296B")]
	[Address(RVA = "0x1FB8368", Offset = "0x1FB8368", VA = "0x1FB8368")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x600296C")]
	[Address(RVA = "0x1FB84BC", Offset = "0x1FB84BC", VA = "0x1FB84BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600296D")]
	[Address(RVA = "0x1FB85B4", Offset = "0x1FB85B4", VA = "0x1FB85B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600296E")]
	[Address(RVA = "0x1FB8688", Offset = "0x1FB8688", VA = "0x1FB8688")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600296F")]
	[Address(RVA = "0x1FB875C", Offset = "0x1FB875C", VA = "0x1FB875C")]
	private void Update()
	{
	}

	[Token(Token = "0x6002970")]
	[Address(RVA = "0x1FB887C", Offset = "0x1FB887C", VA = "0x1FB887C")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6002971")]
	[Address(RVA = "0x1FB8884", Offset = "0x1FB8884", VA = "0x1FB8884")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6002972")]
	[Address(RVA = "0x1FB8950", Offset = "0x1FB8950", VA = "0x1FB8950")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x200059A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56564", Offset = "0xE56564")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE56564", Offset = "0xE56564")]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x400246C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x400246D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x400246E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x400246F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x4002470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x4002471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65CC0", Offset = "0xE65CC0")]
	[HideInInspector]
	[SerializeField]
	private string bankNameInternal;

	[Token(Token = "0x4002472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65D1C", Offset = "0xE65D1C")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000421")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE7057C", Offset = "0xE7057C")]
	public string bankName
	{
		[Token(Token = "0x6002981")]
		[Address(RVA = "0x1FBA704", Offset = "0x1FBA704", VA = "0x1FBA704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000422")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE705B4", Offset = "0xE705B4")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6002982")]
		[Address(RVA = "0x1FBA770", Offset = "0x1FBA770", VA = "0x1FBA770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600297C")]
	[Address(RVA = "0x1FBA4E0", Offset = "0x1FBA4E0", VA = "0x1FBA4E0", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600297D")]
	[Address(RVA = "0x1FBA57C", Offset = "0x1FBA57C", VA = "0x1FBA57C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600297E")]
	[Address(RVA = "0x1FBA620", Offset = "0x1FBA620", VA = "0x1FBA620", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600297F")]
	[Address(RVA = "0x1FBA604", Offset = "0x1FBA604", VA = "0x1FBA604")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002980")]
	[Address(RVA = "0x1FBA668", Offset = "0x1FBA668", VA = "0x1FBA668", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6002983")]
	[Address(RVA = "0x1FBA830", Offset = "0x1FBA830", VA = "0x1FBA830")]
	public AkBank()
	{
	}
}
[Token(Token = "0x200059B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE565C4", Offset = "0xE565C4")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE565C4", Offset = "0xE565C4")]
public class AkEarlyReflections : MonoBehaviour
{
	[Token(Token = "0x4002473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65D78", Offset = "0xE65D78")]
	public AuxBus reflectionsAuxBus;

	[Token(Token = "0x4002474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE65DB0", Offset = "0xE65DB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE65DB0", Offset = "0xE65DB0")]
	public float reflectionsVolume;

	[Token(Token = "0x6002984")]
	[Address(RVA = "0x23DB470", Offset = "0x23DB470", VA = "0x23DB470")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002985")]
	[Address(RVA = "0x23DB6D0", Offset = "0x23DB6D0", VA = "0x23DB6D0")]
	public void SetEarlyReflectionsVolume(float volume)
	{
	}

	[Token(Token = "0x6002986")]
	[Address(RVA = "0x23DB768", Offset = "0x23DB768", VA = "0x23DB768")]
	public AkEarlyReflections()
	{
	}
}
[Token(Token = "0x200059C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56658", Offset = "0xE56658")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56658", Offset = "0xE56658")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x4002475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6002987")]
	[Address(RVA = "0x23DB7E0", Offset = "0x23DB7E0", VA = "0x23DB7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002988")]
	[Address(RVA = "0x23DB8A0", Offset = "0x23DB8A0", VA = "0x23DB8A0", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6002989")]
	[Address(RVA = "0x23DBB44", Offset = "0x23DBB44", VA = "0x23DBB44", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x600298A")]
	[Address(RVA = "0x23DBE54", Offset = "0x23DBE54", VA = "0x23DBE54")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x200059D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE566DC", Offset = "0xE566DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE566DC", Offset = "0xE566DC")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x6002994")]
		[Address(RVA = "0x20EB8DC", Offset = "0x20EB8DC", VA = "0x20EB8DC", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x20EB978", Offset = "0x20EB978", VA = "0x20EB978")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x200059F")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6002996")]
		[Address(RVA = "0x20EB980", Offset = "0x20EB980", VA = "0x20EB980", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x20EB9DC", Offset = "0x20EB9DC", VA = "0x20EB9DC")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x4002476")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x4002477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x4002478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x4002479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x400247A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x400247B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x400247C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE65E04", Offset = "0xE65E04")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x400247D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x400247E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65E14", Offset = "0xE65E14")]
	private int auxBusIdInternal;

	[Token(Token = "0x400247F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65E70", Offset = "0xE65E70")]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000423")]
	public Collider Collider
	{
		[Token(Token = "0x600298B")]
		[Address(RVA = "0x23DBFAC", Offset = "0x23DBFAC", VA = "0x23DBFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EA2C", Offset = "0xE6EA2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600298C")]
		[Address(RVA = "0x23DBFB4", Offset = "0x23DBFB4", VA = "0x23DBFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EA3C", Offset = "0xE6EA3C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000424")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE705EC", Offset = "0xE705EC")]
	public int m_auxBusID
	{
		[Token(Token = "0x600298E")]
		[Address(RVA = "0x23DC018", Offset = "0x23DC018", VA = "0x23DC018")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000425")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE70624", Offset = "0xE70624")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600298F")]
		[Address(RVA = "0x23DC02C", Offset = "0x23DC02C", VA = "0x23DC02C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600298D")]
	[Address(RVA = "0x23DBFBC", Offset = "0x23DBFBC", VA = "0x23DBFBC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6002990")]
	[Address(RVA = "0x23DC0EC", Offset = "0x23DC0EC", VA = "0x23DC0EC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6EA4C", Offset = "0xE6EA4C")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x6002991")]
	[Address(RVA = "0x23DC108", Offset = "0x23DC108", VA = "0x23DC108")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6EA84", Offset = "0xE6EA84")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6002992")]
	[Address(RVA = "0x23DC110", Offset = "0x23DC110", VA = "0x23DC110")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x20005A0")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56770", Offset = "0xE56770")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56770", Offset = "0xE56770")]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x4002480")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x4002481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x4002482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x4002483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x17000426")]
	private BoxCollider BoxCollider
	{
		[Token(Token = "0x6002998")]
		[Address(RVA = "0x23DC234", Offset = "0x23DC234", VA = "0x23DC234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000427")]
	public bool EnvironmentsShareAuxBus
	{
		[Token(Token = "0x6002999")]
		[Address(RVA = "0x23DC2E4", Offset = "0x23DC2E4", VA = "0x23DC2E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600299A")]
	[Address(RVA = "0x23DC484", Offset = "0x23DC484", VA = "0x23DC484")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x600299B")]
	[Address(RVA = "0x23DC624", Offset = "0x23DC624", VA = "0x23DC624")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x20005A1")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x4002484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x4002485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x4002486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x600299C")]
	[Address(RVA = "0x23DC740", Offset = "0x23DC740", VA = "0x23DC740")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x20005A2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56804", Offset = "0xE56804")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56804", Offset = "0xE56804")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x20005A3")]
	public class CallbackData
	{
		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x20EB9E4", Offset = "0x20EB9E4", VA = "0x20EB9E4")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x20EBAA4", Offset = "0x20EBAA4", VA = "0x20EBAA4")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x4002487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x4002488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x4002489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x400248A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Event data;

	[Token(Token = "0x400248B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x400248C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x400248D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x400248E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x400248F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x4002490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x4002491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65ECC", Offset = "0xE65ECC")]
	[HideInInspector]
	private int eventIdInternal;

	[Token(Token = "0x4002492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65F28", Offset = "0xE65F28")]
	[SerializeField]
	[HideInInspector]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4002493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE65F84", Offset = "0xE65F84")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x17000428")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x600299D")]
		[Address(RVA = "0x23DC69C", Offset = "0x23DC69C", VA = "0x23DC69C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000429")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE7065C", Offset = "0xE7065C")]
	public int eventID
	{
		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x23DCAF8", Offset = "0x23DCAF8", VA = "0x23DCAF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700042A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE70694", Offset = "0xE70694")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x23DCB0C", Offset = "0x23DCB0C", VA = "0x23DCB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700042B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE706CC", Offset = "0xE706CC")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x23DCBCC", Offset = "0x23DCBCC", VA = "0x23DCBCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600299E")]
	[Address(RVA = "0x23DC6A4", Offset = "0x23DC6A4", VA = "0x23DC6A4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600299F")]
	[Address(RVA = "0x23DC748", Offset = "0x23DC748", VA = "0x23DC748")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60029A0")]
	[Address(RVA = "0x23DC814", Offset = "0x23DC814", VA = "0x23DC814", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60029A1")]
	[Address(RVA = "0x23DCAC4", Offset = "0x23DCAC4", VA = "0x23DCAC4")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x60029A2")]
	[Address(RVA = "0x23DCACC", Offset = "0x23DCACC", VA = "0x23DCACC")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x60029A6")]
	[Address(RVA = "0x23DCBD4", Offset = "0x23DCBD4", VA = "0x23DCBD4")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x20005A4")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x4002497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x4002498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x4002499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x400249A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x60029A9")]
	[Address(RVA = "0x23DCC94", Offset = "0x23DCC94", VA = "0x23DCC94")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x20005A5")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56888", Offset = "0xE56888")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400249B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event akEvent;

	[Token(Token = "0x400249C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x400249D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x400249E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x400249F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x40024A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x40024A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x40024A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x40024A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x40024A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x1700042C")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x23DCF3C", Offset = "0x23DCF3C", VA = "0x23DCF3C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60029AB")]
	[Address(RVA = "0x23DCF44", Offset = "0x23DCF44", VA = "0x23DCF44", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60029AC")]
	[Address(RVA = "0x23DD208", Offset = "0x23DD208", VA = "0x23DD208")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x20005A6")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE568C0", Offset = "0xE568C0")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20005A7")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x40024BE")]
		None = 0,
		[Token(Token = "0x40024BF")]
		Playback = 1,
		[Token(Token = "0x40024C0")]
		Retrigger = 2,
		[Token(Token = "0x40024C1")]
		DelayedStop = 4,
		[Token(Token = "0x40024C2")]
		Seek = 8,
		[Token(Token = "0x40024C3")]
		FadeIn = 0x10,
		[Token(Token = "0x40024C4")]
		FadeOut = 0x20
	}

	[Token(Token = "0x40024A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x40024A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x40024A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x40024A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x40024A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x40024AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x40024AB")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x40024AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x40024AD")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x40024AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event akEvent;

	[Token(Token = "0x40024AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x40024B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x40024B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x40024B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x40024B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x40024B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x40024B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40024B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40024B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x40024B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x40024B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x40024BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x40024BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x40024BC")]
	private const float alph = 0.05f;

	[Token(Token = "0x60029AD")]
	[Address(RVA = "0x23DD290", Offset = "0x23DD290", VA = "0x23DD290")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60029AE")]
	[Address(RVA = "0x23DD354", Offset = "0x23DD354", VA = "0x23DD354")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x60029AF")]
	[Address(RVA = "0x23DD378", Offset = "0x23DD378", VA = "0x23DD378", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60029B0")]
	[Address(RVA = "0x23DD74C", Offset = "0x23DD74C", VA = "0x23DD74C", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60029B1")]
	[Address(RVA = "0x23DD91C", Offset = "0x23DD91C", VA = "0x23DD91C", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60029B2")]
	[Address(RVA = "0x23DDA34", Offset = "0x23DDA34", VA = "0x23DDA34", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60029B3")]
	[Address(RVA = "0x23DD4B4", Offset = "0x23DD4B4", VA = "0x23DD4B4")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60029B4")]
	[Address(RVA = "0x23DD610", Offset = "0x23DD610", VA = "0x23DD610")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60029B5")]
	[Address(RVA = "0x23DD6AC", Offset = "0x23DD6AC", VA = "0x23DD6AC")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x60029B6")]
	[Address(RVA = "0x23DDDC8", Offset = "0x23DDDC8", VA = "0x23DDDC8")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x60029B7")]
	[Address(RVA = "0x23DDED8", Offset = "0x23DDED8", VA = "0x23DDED8")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60029B8")]
	[Address(RVA = "0x23DD9FC", Offset = "0x23DD9FC", VA = "0x23DD9FC")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x60029B9")]
	[Address(RVA = "0x23DDFB8", Offset = "0x23DDFB8", VA = "0x23DDFB8")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x60029BA")]
	[Address(RVA = "0x23DDC30", Offset = "0x23DDC30", VA = "0x23DDC30")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x60029BB")]
	[Address(RVA = "0x23DDD30", Offset = "0x23DDD30", VA = "0x23DDD30")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x60029BC")]
	[Address(RVA = "0x23DD838", Offset = "0x23DD838", VA = "0x23DD838")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60029BD")]
	[Address(RVA = "0x23DDC60", Offset = "0x23DDC60", VA = "0x23DDC60")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60029BE")]
	[Address(RVA = "0x23DE138", Offset = "0x23DE138", VA = "0x23DE138")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x20005A8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE56908", Offset = "0xE56908")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE56908", Offset = "0xE56908")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE56908", Offset = "0xE56908")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56908", Offset = "0xE56908")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x60029BF")]
	[Address(RVA = "0x23DE14C", Offset = "0x23DE14C", VA = "0x23DE14C", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60029C0")]
	[Address(RVA = "0x23DE564", Offset = "0x23DE564", VA = "0x23DE564")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x20005A9")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x40024C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x40024C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x40024C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x40024C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x40024C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x40024CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x40024CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x40024CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x60029C1")]
	[Address(RVA = "0x23E15B4", Offset = "0x23E15B4", VA = "0x23E15B4")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x60029C2")]
	[Address(RVA = "0x23E18D4", Offset = "0x23E18D4", VA = "0x23E18D4")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x60029C3")]
	[Address(RVA = "0x23E0C38", Offset = "0x23E0C38", VA = "0x23E0C38")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x60029C4")]
	[Address(RVA = "0x23E1A18", Offset = "0x23E1A18", VA = "0x23E1A18")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x60029C5")]
	[Address(RVA = "0x23E1B9C", Offset = "0x23E1B9C", VA = "0x23E1B9C")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x60029C6")]
	[Address(RVA = "0x23E0AE0", Offset = "0x23E0AE0", VA = "0x23E0AE0")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x60029C7")]
	[Address(RVA = "0x23E1C20", Offset = "0x23E1C20", VA = "0x23E1C20")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x60029C8")]
	[Address(RVA = "0x23E1260", Offset = "0x23E1260", VA = "0x23E1260")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x60029C9")]
	[Address(RVA = "0x23E0994", Offset = "0x23E0994", VA = "0x23E0994")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20005AA")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x40024CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x40024CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x40024CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x60029CA")]
	[Address(RVA = "0x23E1D64", Offset = "0x23E1D64", VA = "0x23E1D64")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x60029CB")]
	[Address(RVA = "0x23E0D18", Offset = "0x23E0D18", VA = "0x23E0D18")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x60029CC")]
	[Address(RVA = "0x23E20D4", Offset = "0x23E20D4", VA = "0x23E20D4", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x60029CD")]
	[Address(RVA = "0x23E21B8", Offset = "0x23E21B8", VA = "0x23E21B8", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x60029CE")]
	[Address(RVA = "0x23E1518", Offset = "0x23E1518", VA = "0x23E1518")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x20005AB")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x40024D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x60029CF")]
	[Address(RVA = "0x23E236C", Offset = "0x23E236C", VA = "0x23E236C")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x20005AC")]
public class AkGameObjPositionData
{
	[Token(Token = "0x40024D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x40024D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x40024D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x60029D0")]
	[Address(RVA = "0x23E098C", Offset = "0x23E098C", VA = "0x23E098C")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20005AD")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x40024D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x40024D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x60029D1")]
	[Address(RVA = "0x23E2374", Offset = "0x23E2374", VA = "0x23E2374")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x20005AE")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE569E8", Offset = "0xE569E8")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE569E8", Offset = "0xE569E8")]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x40024D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x40024D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x60029D2")]
	[Address(RVA = "0x23E5340", Offset = "0x23E5340", VA = "0x23E5340")]
	private void Awake()
	{
	}

	[Token(Token = "0x60029D3")]
	[Address(RVA = "0x23E5414", Offset = "0x23E5414", VA = "0x23E5414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60029D4")]
	[Address(RVA = "0x23E5484", Offset = "0x23E5484", VA = "0x23E5484")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60029D5")]
	[Address(RVA = "0x23E5534", Offset = "0x23E5534", VA = "0x23E5534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60029D6")]
	[Address(RVA = "0x23E55EC", Offset = "0x23E55EC", VA = "0x23E55EC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60029D7")]
	[Address(RVA = "0x23E56B0", Offset = "0x23E56B0", VA = "0x23E56B0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60029D8")]
	[Address(RVA = "0x23E5774", Offset = "0x23E5774", VA = "0x23E5774")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60029D9")]
	[Address(RVA = "0x23E5824", Offset = "0x23E5824", VA = "0x23E5824")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60029DA")]
	[Address(RVA = "0x23E58D4", Offset = "0x23E58D4", VA = "0x23E58D4")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x20005AF")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE56A58", Offset = "0xE56A58")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x1700042D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x20EE488", Offset = "0x20EE488", VA = "0x20EE488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x20EE4D0", Offset = "0x20EE4D0", VA = "0x20EE4D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x20EE26C", Offset = "0x20EE26C", VA = "0x20EE26C")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x20EE298", Offset = "0x20EE298", VA = "0x20EE298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x20EE29C", Offset = "0x20EE29C", VA = "0x20EE29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x20EE490", Offset = "0x20EE490", VA = "0x20EE490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40024D8")]
	private const int WaitMs = 50;

	[Token(Token = "0x40024D9")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x40024DA")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x40024DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x40024DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x40024DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x40024DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x40024DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x40024E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x40024E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x60029DB")]
	[Address(RVA = "0x23E9BB0", Offset = "0x23E9BB0", VA = "0x23E9BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60029DC")]
	[Address(RVA = "0x23E9CF4", Offset = "0x23E9CF4", VA = "0x23E9CF4")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x60029DD")]
	[Address(RVA = "0x23E9BC4", Offset = "0x23E9BC4", VA = "0x23E9BC4")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x60029DE")]
	[Address(RVA = "0x23E9EB0", Offset = "0x23E9EB0", VA = "0x23E9EB0")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x60029DF")]
	[Address(RVA = "0x23EA0E4", Offset = "0x23EA0E4", VA = "0x23EA0E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6EABC", Offset = "0xE6EABC")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x60029E0")]
	[Address(RVA = "0x23E9DE0", Offset = "0x23E9DE0", VA = "0x23E9DE0")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x60029E1")]
	[Address(RVA = "0x23EA15C", Offset = "0x23EA15C", VA = "0x23EA15C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60029E2")]
	[Address(RVA = "0x23EA288", Offset = "0x23EA288", VA = "0x23EA288")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x20005B1")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x20005B2")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x20EE4D8", Offset = "0x20EE4D8", VA = "0x20EE4D8")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x20EE568", Offset = "0x20EE568", VA = "0x20EE568")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x40024E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x40024E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly List<AkAudioListener> currentListenerList;

	[Token(Token = "0x40024E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x40024E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float fadeRate;

	[Token(Token = "0x40024E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66060", Offset = "0xE66060")]
	public float fadeTime;

	[Token(Token = "0x40024EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66098", Offset = "0xE66098")]
	public LayerMask LayerMask;

	[Token(Token = "0x40024EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE660D0", Offset = "0xE660D0")]
	public float maxDistance;

	[Token(Token = "0x40024EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66108", Offset = "0xE66108")]
	public float refreshInterval;

	[Token(Token = "0x40024ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float refreshTime;

	[Token(Token = "0x60029E9")]
	[Address(RVA = "0x23DB860", Offset = "0x23DB860", VA = "0x23DB860")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x60029EA")]
	protected abstract void UpdateCurrentListenerList();

	[Token(Token = "0x60029EB")]
	[Address(RVA = "0x23EC40C", Offset = "0x23EC40C", VA = "0x23EC40C")]
	private void UpdateObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x60029EC")]
	[Address(RVA = "0x23EC748", Offset = "0x23EC748", VA = "0x23EC748")]
	private void CastRays()
	{
	}

	[Token(Token = "0x60029ED")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x60029EE")]
	[Address(RVA = "0x23ECA24", Offset = "0x23ECA24", VA = "0x23ECA24")]
	private void Update()
	{
	}

	[Token(Token = "0x60029EF")]
	[Address(RVA = "0x23DBE58", Offset = "0x23DBE58", VA = "0x23DBE58")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x20005B3")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56A68", Offset = "0xE56A68")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40024F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x40024F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x40024F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x40024F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x40024F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66140", Offset = "0xE66140")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x40024F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66150", Offset = "0xE66150")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x1700042F")]
	public RTPC Parameter
	{
		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x23F270C", Offset = "0x23F270C", VA = "0x23F270C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EB6C", Offset = "0xE6EB6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x23F2714", Offset = "0x23F2714", VA = "0x23F2714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EB7C", Offset = "0xE6EB7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000430")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x23F271C", Offset = "0x23F271C", VA = "0x23F271C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EB8C", Offset = "0xE6EB8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x23F2724", Offset = "0x23F2724", VA = "0x23F2724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EB9C", Offset = "0xE6EB9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000431")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x23F272C", Offset = "0x23F272C", VA = "0x23F272C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60029F7")]
	[Address(RVA = "0x23F2734", Offset = "0x23F2734", VA = "0x23F2734", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60029F8")]
	[Address(RVA = "0x23F28D0", Offset = "0x23F28D0", VA = "0x23F28D0")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x20005B4")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56AA0", Offset = "0xE56AA0")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40024F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x40024F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66170", Offset = "0xE66170")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x40024F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66180", Offset = "0xE66180")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x40024F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66190", Offset = "0xE66190")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x40024FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE661A0", Offset = "0xE661A0")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x17000432")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x23F2954", Offset = "0x23F2954", VA = "0x23F2954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EBBC", Offset = "0xE6EBBC")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x23F2948", Offset = "0x23F2948", VA = "0x23F2948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EBAC", Offset = "0xE6EBAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000433")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x23F2968", Offset = "0x23F2968", VA = "0x23F2968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EBDC", Offset = "0xE6EBDC")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x23F295C", Offset = "0x23F295C", VA = "0x23F295C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EBCC", Offset = "0xE6EBCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000434")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x23F2978", Offset = "0x23F2978", VA = "0x23F2978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EBFC", Offset = "0xE6EBFC")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x23F2970", Offset = "0x23F2970", VA = "0x23F2970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EBEC", Offset = "0xE6EBEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000435")]
	public RTPC parameter
	{
		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x23F2988", Offset = "0x23F2988", VA = "0x23F2988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EC1C", Offset = "0xE6EC1C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x23F2980", Offset = "0x23F2980", VA = "0x23F2980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EC0C", Offset = "0xE6EC0C")]
		set
		{
		}
	}

	[Token(Token = "0x6002A01")]
	[Address(RVA = "0x23F2990", Offset = "0x23F2990", VA = "0x23F2990", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6002A02")]
	[Address(RVA = "0x23F2940", Offset = "0x23F2940", VA = "0x23F2940")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x20005B5")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xE56AD8", Offset = "0xE56AD8")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xE56AD8", Offset = "0xE56AD8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xE56AD8", Offset = "0xE56AD8")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56AD8", Offset = "0xE56AD8")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x40024FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x6002A03")]
	[Address(RVA = "0x23F2B18", Offset = "0x23F2B18", VA = "0x23F2B18", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6002A04")]
	[Address(RVA = "0x23F2BE8", Offset = "0x23F2BE8", VA = "0x23F2BE8")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6002A05")]
	[Address(RVA = "0x23F2F34", Offset = "0x23F2F34", VA = "0x23F2F34")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6002A06")]
	[Address(RVA = "0x23F3254", Offset = "0x23F3254", VA = "0x23F3254")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x20005B6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56BB4", Offset = "0xE56BB4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56BB4", Offset = "0xE56BB4")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE56C48", Offset = "0xE56C48")]
	public class PriorityList
	{
		[Token(Token = "0x20005B8")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x320EA2C", Offset = "0x320EA2C", VA = "0x320EA2C", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x320EAD8", Offset = "0x320EAD8", VA = "0x320EAD8")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<AkRoom> rooms;

		[Token(Token = "0x17000437")]
		public int Count
		{
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x20EE718", Offset = "0x20EE718", VA = "0x20EE718")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000438")]
		public AkRoom Item
		{
			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0x20EEA4C", Offset = "0x20EEA4C", VA = "0x20EEA4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x20EE570", Offset = "0x20EE570", VA = "0x20EE570")]
		public ulong GetHighestPriorityActiveAndEnabledRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x20EE644", Offset = "0x20EE644", VA = "0x20EE644")]
		public AkRoom GetHighestPriorityActiveAndEnabledRoom()
		{
			return null;
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x20EE764", Offset = "0x20EE764", VA = "0x20EE764")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x20EE7B8", Offset = "0x20EE7B8", VA = "0x20EE7B8")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x20EE934", Offset = "0x20EE934", VA = "0x20EE934")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x20EE998", Offset = "0x20EE998", VA = "0x20EE998")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x20EE844", Offset = "0x20EE844", VA = "0x20EE844")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x20EEAC0", Offset = "0x20EEAC0", VA = "0x20EEAC0")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x40024FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x40024FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE661B0", Offset = "0xE661B0")]
	private static int <RoomCount>k__BackingField;

	[Token(Token = "0x40024FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE661C0", Offset = "0xE661C0")]
	public int priority;

	[Token(Token = "0x40024FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x4002500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE661F8", Offset = "0xE661F8")]
	public float reverbLevel;

	[Token(Token = "0x4002501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE66210", Offset = "0xE66210")]
	public float wallOcclusion;

	[Token(Token = "0x4002502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Event roomToneEvent;

	[Token(Token = "0x4002503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE66228", Offset = "0xE66228")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66228", Offset = "0xE66228")]
	public float roomToneAuxSend;

	[Token(Token = "0x4002504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<AkRoomAwareObject> roomAwareObjectsEntered;

	[Token(Token = "0x4002505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AkRoomAwareObject> roomAwareObjectsDetectedWhileDisabled;

	[Token(Token = "0x17000436")]
	public static int RoomCount
	{
		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x23F4F2C", Offset = "0x23F4F2C", VA = "0x23F4F2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EC2C", Offset = "0xE6EC2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x23F4F90", Offset = "0x23F4F90", VA = "0x23F4F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EC3C", Offset = "0xE6EC3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6002A07")]
	[Address(RVA = "0x23F4DF8", Offset = "0x23F4DF8", VA = "0x23F4DF8")]
	public static ulong GetAkRoomID(AkRoom room)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002A0A")]
	[Address(RVA = "0x23F4FF8", Offset = "0x23F4FF8", VA = "0x23F4FF8")]
	public bool TryEnter(AkRoomAwareObject roomAwareObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6002A0B")]
	[Address(RVA = "0x23F5120", Offset = "0x23F5120", VA = "0x23F5120")]
	public void Exit(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6002A0C")]
	[Address(RVA = "0x23F4EB8", Offset = "0x23F4EB8", VA = "0x23F4EB8")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6002A0D")]
	[Address(RVA = "0x23F51E4", Offset = "0x23F51E4", VA = "0x23F51E4", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6002A0E")]
	[Address(RVA = "0x23F5D68", Offset = "0x23F5D68", VA = "0x23F5D68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002A0F")]
	[Address(RVA = "0x23F6100", Offset = "0x23F6100", VA = "0x23F6100")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6002A10")]
	[Address(RVA = "0x23F6268", Offset = "0x23F6268", VA = "0x23F6268")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6002A11")]
	[Address(RVA = "0x23F63D0", Offset = "0x23F63D0", VA = "0x23F63D0")]
	public void PostRoomTone()
	{
	}

	[Token(Token = "0x6002A12")]
	[Address(RVA = "0x23F653C", Offset = "0x23F653C", VA = "0x23F653C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002A13")]
	[Address(RVA = "0x23F6540", Offset = "0x23F6540", VA = "0x23F6540")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x20005B9")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56C80", Offset = "0xE56C80")]
public class AkRoomAwareObject : MonoBehaviour
{
	[Token(Token = "0x4002508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<Collider, AkRoomAwareObject> ColliderToRoomAwareObjectMap;

	[Token(Token = "0x4002509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider m_Collider;

	[Token(Token = "0x400250A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6002A22")]
	[Address(RVA = "0x23F67E8", Offset = "0x23F67E8", VA = "0x23F67E8")]
	public static AkRoomAwareObject GetAkRoomAwareObjectFromCollider(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6002A23")]
	[Address(RVA = "0x23F6CB0", Offset = "0x23F6CB0", VA = "0x23F6CB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002A24")]
	[Address(RVA = "0x23F6DC0", Offset = "0x23F6DC0", VA = "0x23F6DC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002A25")]
	[Address(RVA = "0x23F6E70", Offset = "0x23F6E70", VA = "0x23F6E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002A26")]
	[Address(RVA = "0x23F703C", Offset = "0x23F703C", VA = "0x23F703C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002A27")]
	[Address(RVA = "0x23F6BBC", Offset = "0x23F6BBC", VA = "0x23F6BBC")]
	public void SetGameObjectInHighestPriorityActiveAndEnabledRoom()
	{
	}

	[Token(Token = "0x6002A28")]
	[Address(RVA = "0x23F6F28", Offset = "0x23F6F28", VA = "0x23F6F28")]
	private void SetGameObjectInRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002A29")]
	[Address(RVA = "0x23F6894", Offset = "0x23F6894", VA = "0x23F6894")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002A2A")]
	[Address(RVA = "0x23F5FF4", Offset = "0x23F5FF4", VA = "0x23F5FF4")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002A2B")]
	[Address(RVA = "0x23F7180", Offset = "0x23F7180", VA = "0x23F7180")]
	public AkRoomAwareObject()
	{
	}
}
[Token(Token = "0x20005BA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56CF0", Offset = "0xE56CF0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56CF0", Offset = "0xE56CF0")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x20005BB")]
	public enum State
	{
		[Token(Token = "0x4002515")]
		Closed,
		[Token(Token = "0x4002516")]
		Open
	}

	[Token(Token = "0x400250B")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x400250C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x400250D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool active;

	[Token(Token = "0x400250E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x400250F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x4002510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoom.PriorityList[] roomList;

	[Token(Token = "0x4002511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AkTransform portalTransform;

	[Token(Token = "0x4002512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxCollider portalCollider;

	[Token(Token = "0x4002513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool portalSet;

	[Token(Token = "0x17000439")]
	public bool portalActive
	{
		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x23F8290", Offset = "0x23F8290", VA = "0x23F8290")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x23F8298", Offset = "0x23F8298", VA = "0x23F8298")]
		set
		{
		}
	}

	[Token(Token = "0x1700043A")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x23F82A4", Offset = "0x23F82A4", VA = "0x23F82A4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700043B")]
	private ulong backRoomID
	{
		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x23F83CC", Offset = "0x23F83CC", VA = "0x23F83CC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700043C")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x23F7928", Offset = "0x23F7928", VA = "0x23F7928")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700043D")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x23F7960", Offset = "0x23F7960", VA = "0x23F7960")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700043E")]
	public bool IsValid
	{
		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x23F877C", Offset = "0x23F877C", VA = "0x23F877C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002A31")]
	[Address(RVA = "0x23F8464", Offset = "0x23F8464", VA = "0x23F8464")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6002A34")]
	[Address(RVA = "0x23F84A0", Offset = "0x23F84A0", VA = "0x23F84A0")]
	private void SetRoomPortal()
	{
	}

	[Token(Token = "0x6002A35")]
	[Address(RVA = "0x23F7BC0", Offset = "0x23F7BC0", VA = "0x23F7BC0")]
	public void UpdateRoomPortal()
	{
	}

	[Token(Token = "0x6002A36")]
	[Address(RVA = "0x23F7994", Offset = "0x23F7994", VA = "0x23F7994")]
	public bool Overlaps(AkRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6002A38")]
	[Address(RVA = "0x23F87B0", Offset = "0x23F87B0", VA = "0x23F87B0")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6002A39")]
	[Address(RVA = "0x23F8BC4", Offset = "0x23F8BC4", VA = "0x23F8BC4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002A3A")]
	[Address(RVA = "0x23F8CF8", Offset = "0x23F8CF8", VA = "0x23F8CF8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6002A3B")]
	[Address(RVA = "0x23F8D84", Offset = "0x23F8D84", VA = "0x23F8D84", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002A3C")]
	[Address(RVA = "0x23F8D7C", Offset = "0x23F8D7C", VA = "0x23F8D7C")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002A3D")]
	[Address(RVA = "0x23F8DA4", Offset = "0x23F8DA4", VA = "0x23F8DA4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6002A3E")]
	[Address(RVA = "0x23F8E40", Offset = "0x23F8E40", VA = "0x23F8E40", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6002A3F")]
	[Address(RVA = "0x23F8E70", Offset = "0x23F8E70", VA = "0x23F8E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002A40")]
	[Address(RVA = "0x23F833C", Offset = "0x23F833C", VA = "0x23F833C")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x6002A41")]
	[Address(RVA = "0x23F8D90", Offset = "0x23F8D90", VA = "0x23F8D90")]
	public void Open()
	{
	}

	[Token(Token = "0x6002A42")]
	[Address(RVA = "0x23F8D9C", Offset = "0x23F8D9C", VA = "0x23F8D9C")]
	public void Close()
	{
	}

	[Token(Token = "0x6002A43")]
	[Address(RVA = "0x23F8A70", Offset = "0x23F8A70", VA = "0x23F8A70")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6002A44")]
	[Address(RVA = "0x23F8EFC", Offset = "0x23F8EFC", VA = "0x23F8EFC")]
	private void FillRoomList(Vector3 position, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6002A45")]
	[Address(RVA = "0x23F8900", Offset = "0x23F8900", VA = "0x23F8900")]
	public void UpdateRooms()
	{
	}

	[Token(Token = "0x6002A46")]
	[Address(RVA = "0x23F9084", Offset = "0x23F9084", VA = "0x23F9084")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6EC4C", Offset = "0xE6EC4C")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x6002A47")]
	[Address(RVA = "0x23F9194", Offset = "0x23F9194", VA = "0x23F9194")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6EC84", Offset = "0xE6EC84")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002A48")]
	[Address(RVA = "0x23F92A4", Offset = "0x23F92A4", VA = "0x23F92A4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6ECBC", Offset = "0xE6ECBC")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002A49")]
	[Address(RVA = "0x23F93B4", Offset = "0x23F93B4", VA = "0x23F93B4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6ECF4", Offset = "0xE6ECF4")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6002A4A")]
	[Address(RVA = "0x23F93D8", Offset = "0x23F93D8", VA = "0x23F93D8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6ED2C", Offset = "0xE6ED2C")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x6002A4B")]
	[Address(RVA = "0x23F93DC", Offset = "0x23F93DC", VA = "0x23F93DC")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x20005BC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56D84", Offset = "0xE56D84")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56D84", Offset = "0xE56D84")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x4002517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6002A4C")]
	[Address(RVA = "0x23F95C4", Offset = "0x23F95C4", VA = "0x23F95C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002A4D")]
	[Address(RVA = "0x23F9644", Offset = "0x23F9644", VA = "0x23F9644", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6002A4E")]
	[Address(RVA = "0x23F96D4", Offset = "0x23F96D4", VA = "0x23F96D4", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6002A4F")]
	[Address(RVA = "0x23F9834", Offset = "0x23F9834", VA = "0x23F9834")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x20005BD")]
public class AkSoundEngineController
{
	[Token(Token = "0x4002518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x1700043F")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x20F9884", Offset = "0x20F9884", VA = "0x20F9884")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002A51")]
	[Address(RVA = "0x20F9908", Offset = "0x20F9908", VA = "0x20F9908")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6002A52")]
	[Address(RVA = "0x20F9910", Offset = "0x20F9910", VA = "0x20F9910", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6002A53")]
	[Address(RVA = "0x20F99BC", Offset = "0x20F99BC", VA = "0x20F99BC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6002A54")]
	[Address(RVA = "0x20F9ABC", Offset = "0x20F9ABC", VA = "0x20F9ABC")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6002A55")]
	[Address(RVA = "0x20FA2EC", Offset = "0x20FA2EC", VA = "0x20FA2EC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6002A56")]
	[Address(RVA = "0x20FA2F0", Offset = "0x20FA2F0", VA = "0x20FA2F0")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6002A57")]
	[Address(RVA = "0x20FA524", Offset = "0x20FA524", VA = "0x20FA524")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6002A58")]
	[Address(RVA = "0x20FA618", Offset = "0x20FA618", VA = "0x20FA618")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6002A59")]
	[Address(RVA = "0x20FA534", Offset = "0x20FA534", VA = "0x20FA534")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x20005BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56E08", Offset = "0xE56E08")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56E08", Offset = "0xE56E08")]
public class AkSpatialAudioDebugDraw : MonoBehaviour
{
	[Token(Token = "0x6002A5A")]
	[Address(RVA = "0x212043C", Offset = "0x212043C", VA = "0x212043C")]
	public AkSpatialAudioDebugDraw()
	{
	}
}
[Token(Token = "0x20005BF")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE56E8C", Offset = "0xE56E8C")]
public class AkSpatialAudioEmitter : MonoBehaviour
{
	[Token(Token = "0x4002519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6628C", Offset = "0xE6628C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE6628C", Offset = "0xE6628C")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x400251A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE662EC", Offset = "0xE662EC")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x400251B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66324", Offset = "0xE66324")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE66324", Offset = "0xE66324")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x400251C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66378", Offset = "0xE66378")]
	public uint reflectionsOrder;

	[Token(Token = "0x400251D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE663B0", Offset = "0xE663B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE663B0", Offset = "0xE663B0")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x400251E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE66410", Offset = "0xE66410")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66410", Offset = "0xE66410")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x400251F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66470", Offset = "0xE66470")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4002520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE664A8", Offset = "0xE664A8")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6002A5B")]
	[Address(RVA = "0x2120444", Offset = "0x2120444", VA = "0x2120444")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x20005C0")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56EC4", Offset = "0xE56EC4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE56EC4", Offset = "0xE56EC4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56EC4", Offset = "0xE56EC4")]
public class AkSpatialAudioListener : MonoBehaviour
{
	[Token(Token = "0x20005C1")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000442")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x20EF184", Offset = "0x20EF184", VA = "0x20EF184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x20EF18C", Offset = "0x20EF18C", VA = "0x20EF18C")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x20EF558", Offset = "0x20EF558", VA = "0x20EF558")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x20EF274", Offset = "0x20EF274", VA = "0x20EF274")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x20EF618", Offset = "0x20EF618", VA = "0x20EF618")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4002521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4002522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4002523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x17000440")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x21211A8", Offset = "0x21211A8", VA = "0x21211A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000441")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x2121288", Offset = "0x2121288", VA = "0x2121288")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002A5E")]
	[Address(RVA = "0x21212EC", Offset = "0x21212EC", VA = "0x21212EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002A5F")]
	[Address(RVA = "0x2121348", Offset = "0x2121348", VA = "0x2121348")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002A60")]
	[Address(RVA = "0x21213C0", Offset = "0x21213C0", VA = "0x21213C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002A61")]
	[Address(RVA = "0x2121438", Offset = "0x2121438", VA = "0x2121438")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x20005C2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56F8C", Offset = "0xE56F8C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE56F8C", Offset = "0xE56F8C")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4002525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x4002526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE664E0", Offset = "0xE664E0")]
	[HideInInspector]
	[SerializeField]
	private int valueIdInternal;

	[Token(Token = "0x4002527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE6653C", Offset = "0xE6653C")]
	[HideInInspector]
	[SerializeField]
	private int groupIdInternal;

	[Token(Token = "0x4002528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE66598", Offset = "0xE66598")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4002529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE665F4", Offset = "0xE665F4")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000443")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x21214B8", Offset = "0x21214B8", VA = "0x21214B8", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000444")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE70704", Offset = "0xE70704")]
	public int valueID
	{
		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x21214DC", Offset = "0x21214DC", VA = "0x21214DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000445")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE7073C", Offset = "0xE7073C")]
	public int groupID
	{
		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x21214F0", Offset = "0x21214F0", VA = "0x21214F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000446")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE70774", Offset = "0xE70774")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x2121504", Offset = "0x2121504", VA = "0x2121504")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000447")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE707AC", Offset = "0xE707AC")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x21215C4", Offset = "0x21215C4", VA = "0x21215C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002A69")]
	[Address(RVA = "0x21214C0", Offset = "0x21214C0", VA = "0x21214C0", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002A6E")]
	[Address(RVA = "0x2121680", Offset = "0x2121680", VA = "0x2121680")]
	public AkState()
	{
	}
}
[Token(Token = "0x20005C3")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE56FDC", Offset = "0xE56FDC")]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x400252A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66650", Offset = "0xE66650")]
	public Mesh Mesh;

	[Token(Token = "0x400252B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66688", Offset = "0xE66688")]
	public AcousticTexture[] AcousticTextures;

	[Token(Token = "0x400252C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE666C0", Offset = "0xE666C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE666C0", Offset = "0xE666C0")]
	public float[] OcclusionValues;

	[Token(Token = "0x400252D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66714", Offset = "0xE66714")]
	public bool EnableDiffraction;

	[Token(Token = "0x400252E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6674C", Offset = "0xE6674C")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x400252F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66784", Offset = "0xE66784")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4002530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE667BC", Offset = "0xE667BC")]
	[HideInInspector]
	[SerializeField]
	private AcousticTexture AcousticTextureInternal;

	[Token(Token = "0x17000448")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE707E4", Offset = "0xE707E4")]
	public AcousticTexture AcousticTexture
	{
		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x2123950", Offset = "0x2123950", VA = "0x2123950")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x2123974", Offset = "0x2123974", VA = "0x2123974")]
		set
		{
		}
	}

	[Token(Token = "0x6002A6F")]
	[Address(RVA = "0x2121A08", Offset = "0x2121A08", VA = "0x2121A08")]
	private ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6002A70")]
	[Address(RVA = "0x2121A24", Offset = "0x2121A24", VA = "0x2121A24")]
	private static void SetGeometryFromMesh(Mesh mesh, AcousticTexture[] acousticTextures, float[] occlusionValues, Transform transform, ulong geometryID, ulong associatedRoomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges, string name = "")
	{
	}

	[Token(Token = "0x6002A71")]
	[Address(RVA = "0x2122F38", Offset = "0x2122F38", VA = "0x2122F38")]
	public void SetAssociatedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6002A72")]
	[Address(RVA = "0x2123070", Offset = "0x2123070", VA = "0x2123070")]
	public void SetGeometry()
	{
	}

	[Token(Token = "0x6002A73")]
	[Address(RVA = "0x212304C", Offset = "0x212304C", VA = "0x212304C")]
	public void UpdateGeometry()
	{
	}

	[Token(Token = "0x6002A74")]
	[Address(RVA = "0x2123334", Offset = "0x2123334", VA = "0x2123334")]
	public void RemoveGeometry()
	{
	}

	[Token(Token = "0x6002A75")]
	[Address(RVA = "0x21233AC", Offset = "0x21233AC", VA = "0x21233AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6ED64", Offset = "0xE6ED64")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6002A76")]
	[Address(RVA = "0x212349C", Offset = "0x212349C", VA = "0x212349C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002A77")]
	[Address(RVA = "0x21235A0", Offset = "0x21235A0", VA = "0x21235A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002A78")]
	[Address(RVA = "0x2123630", Offset = "0x2123630", VA = "0x2123630")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002A79")]
	[Address(RVA = "0x2123478", Offset = "0x2123478", VA = "0x2123478")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6ED9C", Offset = "0xE6ED9C")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002A7A")]
	[Address(RVA = "0x2123658", Offset = "0x2123658", VA = "0x2123658")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6EDD4", Offset = "0xE6EDD4")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6002A7D")]
	[Address(RVA = "0x2123B2C", Offset = "0x2123B2C", VA = "0x2123B2C")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x20005C4")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE57028", Offset = "0xE57028")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE57028", Offset = "0xE57028")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4002531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Switch data;

	[Token(Token = "0x4002532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE66818", Offset = "0xE66818")]
	private int valueIdInternal;

	[Token(Token = "0x4002533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE66874", Offset = "0xE66874")]
	private int groupIdInternal;

	[Token(Token = "0x4002534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE668D0", Offset = "0xE668D0")]
	[HideInInspector]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4002535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE6692C", Offset = "0xE6692C")]
	[SerializeField]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000449")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x2123C20", Offset = "0x2123C20", VA = "0x2123C20", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700044A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE7081C", Offset = "0xE7081C")]
	public int valueID
	{
		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x2123CD4", Offset = "0x2123CD4", VA = "0x2123CD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700044B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE70854", Offset = "0xE70854")]
	public int groupID
	{
		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x2123CE8", Offset = "0x2123CE8", VA = "0x2123CE8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700044C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE7088C", Offset = "0xE7088C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x2123CFC", Offset = "0x2123CFC", VA = "0x2123CFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700044D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE708C4", Offset = "0xE708C4")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x2123DBC", Offset = "0x2123DBC", VA = "0x2123DBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002A7F")]
	[Address(RVA = "0x2123C28", Offset = "0x2123C28", VA = "0x2123C28", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002A84")]
	[Address(RVA = "0x2123E78", Offset = "0x2123E78", VA = "0x2123E78")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x20005C5")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6002A85")]
	[Address(RVA = "0x2124354", Offset = "0x2124354", VA = "0x2124354")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x20005C6")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x20005C7")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4002536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6002A86")]
	[Address(RVA = "0x21284CC", Offset = "0x21284CC", VA = "0x21284CC")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6002A87")]
	[Address(RVA = "0x2128814", Offset = "0x2128814", VA = "0x2128814")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x20005C8")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4002537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002A8C")]
	[Address(RVA = "0x212881C", Offset = "0x212881C", VA = "0x212881C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6002A8D")]
	[Address(RVA = "0x2128928", Offset = "0x2128928", VA = "0x2128928")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6002A8E")]
	[Address(RVA = "0x2128A34", Offset = "0x2128A34", VA = "0x2128A34")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x20005C9")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4002538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002A8F")]
	[Address(RVA = "0x2128A3C", Offset = "0x2128A3C", VA = "0x2128A3C")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6002A90")]
	[Address(RVA = "0x2128B48", Offset = "0x2128B48", VA = "0x2128B48")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x20005CA")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6002A91")]
	[Address(RVA = "0x2128B50", Offset = "0x2128B50", VA = "0x2128B50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002A92")]
	[Address(RVA = "0x2128B68", Offset = "0x2128B68", VA = "0x2128B68")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x20005CB")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE57088", Offset = "0xE57088")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6002A93")]
	[Address(RVA = "0x2128B70", Offset = "0x2128B70", VA = "0x2128B70")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x20005CC")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4002539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002A94")]
	[Address(RVA = "0x2128B78", Offset = "0x2128B78", VA = "0x2128B78")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6002A95")]
	[Address(RVA = "0x2128C84", Offset = "0x2128C84", VA = "0x2128C84")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x20005CD")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x400253A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002A96")]
	[Address(RVA = "0x2128C8C", Offset = "0x2128C8C", VA = "0x2128C8C")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6002A97")]
	[Address(RVA = "0x2128D98", Offset = "0x2128D98", VA = "0x2128D98")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x20005CE")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x400253B")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x400253C")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x400253D")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x400253E")]
	public const int ON_ENABLE_TRIGGER_ID = -320808462;

	[Token(Token = "0x400253F")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4002540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4002541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4002542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4002543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6002A98")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6002A99")]
	[Address(RVA = "0x2128DA0", Offset = "0x2128DA0", VA = "0x2128DA0", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6002A9A")]
	[Address(RVA = "0x21292E8", Offset = "0x21292E8", VA = "0x21292E8", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6002A9B")]
	[Address(RVA = "0x2129368", Offset = "0x2129368", VA = "0x2129368", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6002A9C")]
	[Address(RVA = "0x2129378", Offset = "0x2129378", VA = "0x2129378")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6002A9D")]
	[Address(RVA = "0x2129848", Offset = "0x2129848", VA = "0x2129848", Slot = "8")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6002A9E")]
	[Address(RVA = "0x2128E24", Offset = "0x2128E24", VA = "0x2128E24")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6002A9F")]
	[Address(RVA = "0x2129408", Offset = "0x2129408", VA = "0x2129408")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6002AA0")]
	[Address(RVA = "0x21298C8", Offset = "0x21298C8", VA = "0x21298C8")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x20005CF")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x1700044E")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6002AA2")]
		get;
	}

	[Token(Token = "0x6002AA3")]
	[Address(RVA = "0x23DA744", Offset = "0x23DA744", VA = "0x23DA744", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002AA4")]
	[Address(RVA = "0x23DA74C", Offset = "0x23DA74C", VA = "0x23DA74C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6002AA5")]
	[Address(RVA = "0x23DA754", Offset = "0x23DA754", VA = "0x23DA754", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6002AA6")]
	[Address(RVA = "0x23DA75C", Offset = "0x23DA75C", VA = "0x23DA75C")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x20005D0")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6002AA7")]
	[Address(RVA = "0x21299D4", Offset = "0x21299D4", VA = "0x21299D4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6002AA8")]
	[Address(RVA = "0x21299EC", Offset = "0x21299EC", VA = "0x21299EC")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x20005D1")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6002AA9")]
	[Address(RVA = "0x21299F4", Offset = "0x21299F4", VA = "0x21299F4")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6002AAA")]
	[Address(RVA = "0x2129A0C", Offset = "0x2129A0C", VA = "0x2129A0C")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x20005D2")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6002AAB")]
	[Address(RVA = "0x2129A14", Offset = "0x2129A14", VA = "0x2129A14")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6002AAC")]
	[Address(RVA = "0x2129A2C", Offset = "0x2129A2C", VA = "0x2129A2C")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x20005D3")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6002AAD")]
	[Address(RVA = "0x2129A34", Offset = "0x2129A34", VA = "0x2129A34")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6002AAE")]
	[Address(RVA = "0x2129A4C", Offset = "0x2129A4C", VA = "0x2129A4C")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x20005D4")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x1700044F")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x1FB25B8", Offset = "0x1FB25B8", VA = "0x1FB25B8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x1FB25C0", Offset = "0x1FB25C0", VA = "0x1FB25C0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000450")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x1FB2650", Offset = "0x1FB2650", VA = "0x1FB2650", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x1FB2658", Offset = "0x1FB2658", VA = "0x1FB2658")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D5")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x17000451")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x29003B8", Offset = "0x29003B8", VA = "0x29003B8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x29003C0", Offset = "0x29003C0", VA = "0x29003C0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x2900450", Offset = "0x2900450", VA = "0x2900450", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x2900458", Offset = "0x2900458", VA = "0x2900458")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D6")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x17000453")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x2900DD0", Offset = "0x2900DD0", VA = "0x2900DD0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x2900DD8", Offset = "0x2900DD8", VA = "0x2900DD8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x2900E68", Offset = "0x2900E68", VA = "0x2900E68", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x2900E70", Offset = "0x2900E70", VA = "0x2900E70")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x2900F28", Offset = "0x2900F28", VA = "0x2900F28")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x2900FD8", Offset = "0x2900FD8", VA = "0x2900FD8")]
		public void Unload()
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x2901074", Offset = "0x2901074", VA = "0x2901074")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D7")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE66988", Offset = "0xE66988")]
		[SerializeField]
		[HideInInspector]
		private int groupIdInternal;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE669E4", Offset = "0xE669E4")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x17000455")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x2901358", Offset = "0x2901358", VA = "0x2901358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002ABF")]
			get;
		}

		[Token(Token = "0x17000457")]
		public uint GroupId
		{
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x2901444", Offset = "0x2901444", VA = "0x2901444")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000458")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE708FC", Offset = "0xE708FC")]
		public int groupID
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x29015F0", Offset = "0x29015F0", VA = "0x29015F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000459")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE70934", Offset = "0xE70934")]
		public byte[] groupGuid
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x29015F4", Offset = "0x29015F4", VA = "0x29015F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x29014DC", Offset = "0x29014DC", VA = "0x29014DC", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0x29016B0", Offset = "0x29016B0", VA = "0x29016B0")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D8")]
	public abstract class BaseType
	{
		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE66A40", Offset = "0xE66A40")]
		[HideInInspector]
		[SerializeField]
		private int idInternal;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE66A9C", Offset = "0xE66A9C")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x1700045A")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AC5")]
			get;
			[Token(Token = "0x6002AC6")]
			set;
		}

		[Token(Token = "0x1700045B")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AC7")]
			get;
		}

		[Token(Token = "0x1700045C")]
		public virtual string Name
		{
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x2901B24", Offset = "0x2901B24", VA = "0x2901B24", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		public uint Id
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x2901BB4", Offset = "0x2901BB4", VA = "0x2901BB4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700045E")]
		public static uint InvalidId
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x2901C04", Offset = "0x2901C04", VA = "0x2901C04")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700045F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE7096C", Offset = "0xE7096C")]
		public int ID
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x2901DAC", Offset = "0x2901DAC", VA = "0x2901DAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000460")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE709A4", Offset = "0xE709A4")]
		public byte[] valueGuid
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x2901DB0", Offset = "0x2901DB0", VA = "0x2901DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0x2901570", Offset = "0x2901570", VA = "0x2901570", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x2901C0C", Offset = "0x2901C0C", VA = "0x2901C0C")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x2901CFC", Offset = "0x2901CFC", VA = "0x2901CFC")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x2901D00", Offset = "0x2901D00", VA = "0x2901D00", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x2900460", Offset = "0x2900460", VA = "0x2900460")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D9")]
	public class CallbackFlags
	{
		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x243E554", Offset = "0x243E554", VA = "0x243E554")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DA")]
	public class Event : BaseType
	{
		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x17000461")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0x24F2F20", Offset = "0x24F2F20", VA = "0x24F2F20", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x24F2F28", Offset = "0x24F2F28", VA = "0x24F2F28", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x24F2FB8", Offset = "0x24F2FB8", VA = "0x24F2FB8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x24F2FC0", Offset = "0x24F2FC0", VA = "0x24F2FC0")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x24F2FC4", Offset = "0x24F2FC4", VA = "0x24F2FC4")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x24F3074", Offset = "0x24F3074", VA = "0x24F3074")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x24F3150", Offset = "0x24F3150", VA = "0x24F3150")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x24F3224", Offset = "0x24F3224", VA = "0x24F3224")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x24F3234", Offset = "0x24F3234", VA = "0x24F3234")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x24F3314", Offset = "0x24F3314", VA = "0x24F3314")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x24F3388", Offset = "0x24F3388", VA = "0x24F3388")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x24F3404", Offset = "0x24F3404", VA = "0x24F3404")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x24F34B0", Offset = "0x24F34B0", VA = "0x24F34B0")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x24F3548", Offset = "0x24F3548", VA = "0x24F3548")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DB")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x17000463")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0x271360C", Offset = "0x271360C", VA = "0x271360C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0x2713614", Offset = "0x2713614", VA = "0x2713614", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x27136A4", Offset = "0x27136A4", VA = "0x27136A4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x27136AC", Offset = "0x27136AC", VA = "0x27136AC")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x271377C", Offset = "0x271377C", VA = "0x271377C")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x271388C", Offset = "0x271388C", VA = "0x271388C")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x2713948", Offset = "0x2713948", VA = "0x2713948")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x2713950", Offset = "0x2713950", VA = "0x2713950")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DC")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x17000465")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x21659F4", Offset = "0x21659F4", VA = "0x21659F4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x21659FC", Offset = "0x21659FC", VA = "0x21659FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x2165A8C", Offset = "0x2165A8C", VA = "0x2165A8C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000467")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x2165A94", Offset = "0x2165A94", VA = "0x2165A94", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x2165A9C", Offset = "0x2165A9C", VA = "0x2165A9C")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x2165B64", Offset = "0x2165B64", VA = "0x2165B64")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DD")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x17000468")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x225BAF0", Offset = "0x225BAF0", VA = "0x225BAF0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x225BAF8", Offset = "0x225BAF8", VA = "0x225BAF8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x225BB88", Offset = "0x225BB88", VA = "0x225BB88", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x1700046A")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x225BB90", Offset = "0x225BB90", VA = "0x225BB90", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x225BB98", Offset = "0x225BB98", VA = "0x225BB98")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x225BC68", Offset = "0x225BC68", VA = "0x225BC68")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DE")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x1700046B")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x236667C", Offset = "0x236667C", VA = "0x236667C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x2366684", Offset = "0x2366684", VA = "0x2366684", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0x2366714", Offset = "0x2366714", VA = "0x2366714", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x236671C", Offset = "0x236671C", VA = "0x236671C")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x23667D8", Offset = "0x23667D8", VA = "0x23667D8")]
		public Trigger()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20005DF")]
	public static class TweenCustomExtensions
	{
		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x2367C04", Offset = "0x2367C04", VA = "0x2367C04")]
		public static float PathGetTime(this Tween t, int index)
		{
			return default(float);
		}
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x20005E0")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x24EEB04", Offset = "0x24EEB04", VA = "0x24EEB04")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66AF8", Offset = "0xE66AF8")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66B08", Offset = "0xE66B08")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66B18", Offset = "0xE66B18")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x1700046D")]
		public string ElementHeader
		{
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0x2720E00", Offset = "0x2720E00", VA = "0x2720E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE1C", Offset = "0xE6EE1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x2720E08", Offset = "0x2720E08", VA = "0x2720E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE2C", Offset = "0xE6EE2C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0x2720E10", Offset = "0x2720E10", VA = "0x2720E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE3C", Offset = "0xE6EE3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x2720E18", Offset = "0x2720E18", VA = "0x2720E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE4C", Offset = "0xE6EE4C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x2720E24", Offset = "0x2720E24", VA = "0x2720E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE5C", Offset = "0xE6EE5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x2720E2C", Offset = "0x2720E2C", VA = "0x2720E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE6C", Offset = "0xE6EE6C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x2720E38", Offset = "0x2720E38", VA = "0x2720E38")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x2720EA4", Offset = "0x2720EA4", VA = "0x2720EA4")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace MK.Glow
{
	[Token(Token = "0x20005E2")]
	public sealed class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minLimit;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxLimit;

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x279BEE0", Offset = "0x279BEE0", VA = "0x279BEE0")]
		public MinMaxRangeAttribute(float minLimit, float maxLimit)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E3")]
	public struct MinMaxRange
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minValue;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxValue;

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x279BED8", Offset = "0x279BED8", VA = "0x279BED8")]
		public MinMaxRange(float minValue, float maxValue)
		{
		}
	}
}
namespace MK.Glow.Example
{
	[Token(Token = "0x20005E4")]
	public class Cube : MonoBehaviour
	{
		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MinMaxRange _minMaxSpeed;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MinMaxRange _directionSwitchTime;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _nextColorChangeTime;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _nextColorIndex;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensity;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _nextDirectionChangeTime;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentSpeed;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _baseMaterial;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _emissionColorId;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _colorId;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _startPos;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector3 _endPos;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _forward;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _forwardDirection;

		[Token(Token = "0x17000470")]
		private Vector3 _targetPosition
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x21C16CC", Offset = "0x21C16CC", VA = "0x21C16CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x21C1708", Offset = "0x21C1708", VA = "0x21C1708")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x21C1994", Offset = "0x21C1994", VA = "0x21C1994")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x21C1B70", Offset = "0x21C1B70", VA = "0x21C1B70")]
		public Cube()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE570E0", Offset = "0xE570E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE570E0", Offset = "0xE570E0")]
	public class CrowTweenMove : ActionTask<Transform>
	{
		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE66B58", Offset = "0xE66B58")]
		public BBParameter<GameObject> player;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> minMiddleRadius;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> maxMiddleRadius;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> hoverHeight;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<GoTween> saveAsTween;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<float> highPercent;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BBParameter<Transform> area1;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BBParameter<Transform> area2;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BBParameter<List<Transform>> areas;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float duration;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<GameObject> pointList;

		[Token(Token = "0x17000471")]
		protected override string info
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0x21BFEC4", Offset = "0x21BFEC4", VA = "0x21BFEC4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x21BFF08", Offset = "0x21BFF08", VA = "0x21BFF08")]
		public CrowTweenMove()
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x21BFFD0", Offset = "0x21BFFD0", VA = "0x21BFFD0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x21C05D0", Offset = "0x21C05D0", VA = "0x21C05D0", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x21C0614", Offset = "0x21C0614", VA = "0x21C0614")]
		private Vector3 RandomMiddlePoint(Vector3 pointA, Vector3 pointB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x21C04E0", Offset = "0x21C04E0", VA = "0x21C04E0")]
		private Vector3 RandomMiddlePoint2(Vector3 pointBegin, Vector3 pointEnd)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005E6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57140", Offset = "0xE57140")]
	public class GetLerpTwoVector3 : ActionTask<Transform>
	{
		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE66B68", Offset = "0xE66B68")]
		public BBParameter<float> ratio;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x17000472")]
		protected override string info
		{
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0x2255FAC", Offset = "0x2255FAC", VA = "0x2255FAC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x225608C", Offset = "0x225608C", VA = "0x225608C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x22561B0", Offset = "0x22561B0", VA = "0x22561B0")]
		public GetLerpTwoVector3()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57178", Offset = "0xE57178")]
	public class LerpTwoVector3 : ActionTask<Transform>
	{
		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE66B90", Offset = "0xE66B90")]
		public BBParameter<float> time;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float timer;

		[Token(Token = "0x17000473")]
		protected override string info
		{
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x20BC65C", Offset = "0x20BC65C", VA = "0x20BC65C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x20BC73C", Offset = "0x20BC73C", VA = "0x20BC73C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x20BC744", Offset = "0x20BC744", VA = "0x20BC744", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x20BC8D4", Offset = "0x20BC8D4", VA = "0x20BC8D4")]
		public LerpTwoVector3()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE571B0", Offset = "0xE571B0")]
	public class GetRandomClosePoint : ActionTask
	{
		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> orignal;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> radius;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isXY;

		[Token(Token = "0x17000474")]
		protected override string info
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x2257C8C", Offset = "0x2257C8C", VA = "0x2257C8C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x2257D6C", Offset = "0x2257D6C", VA = "0x2257D6C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x2257E94", Offset = "0x2257E94", VA = "0x2257E94")]
		public GetRandomClosePoint()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE571E8", Offset = "0xE571E8")]
	public class GetRangeRealValue : ActionTask<Transform>
	{
		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> ratio;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> oldValue;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> resultValue;

		[Token(Token = "0x17000475")]
		protected override string info
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0x2257F78", Offset = "0x2257F78", VA = "0x2257F78", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x2258058", Offset = "0x2258058", VA = "0x2258058", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x2258108", Offset = "0x2258108", VA = "0x2258108")]
		public GetRangeRealValue()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57220", Offset = "0xE57220")]
	public class GetRealBulletOffsetDisntance : ActionTask<Transform>
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> BulletV;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> MovePanV;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> MaxDistance;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> beginPoint;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<GameObject> endPoint;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> orignalDir;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<Vector3> resultDirOffset;

		[Token(Token = "0x17000476")]
		protected override string info
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x2258154", Offset = "0x2258154", VA = "0x2258154", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x2258234", Offset = "0x2258234", VA = "0x2258234", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x22583EC", Offset = "0x22583EC", VA = "0x22583EC")]
		public GetRealBulletOffsetDisntance()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57258", Offset = "0xE57258")]
	public class GetTwoPointDirection : ActionTask<Transform>
	{
		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x17000477")]
		protected override string info
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x251EF28", Offset = "0x251EF28", VA = "0x251EF28", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x251F008", Offset = "0x251F008", VA = "0x251F008", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x251F110", Offset = "0x251F110", VA = "0x251F110")]
		public GetTwoPointDirection()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57290", Offset = "0xE57290")]
	public class GetTwoPointLimitRatioDisntance : ActionTask<Transform>
	{
		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<AnimationCurve> RatioCurve;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> baseDis;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> beginPoint;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<GameObject> endPoint;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> resultDis;

		[Token(Token = "0x17000478")]
		protected override string info
		{
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x251F15C", Offset = "0x251F15C", VA = "0x251F15C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x251F23C", Offset = "0x251F23C", VA = "0x251F23C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x251F3C8", Offset = "0x251F3C8", VA = "0x251F3C8")]
		public GetTwoPointLimitRatioDisntance()
		{
		}
	}
}
namespace PVE.Tasks.Actions
{
	[Token(Token = "0x20005ED")]
	public enum e_Direction_Type
	{
		[Token(Token = "0x400259C")]
		Forward,
		[Token(Token = "0x400259D")]
		Back,
		[Token(Token = "0x400259E")]
		Right,
		[Token(Token = "0x400259F")]
		Left
	}
	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE572C8", Offset = "0xE572C8")]
	public class Avoid : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<GameObject> enemy;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> shelterList;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> speed;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float keepDistance;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 pointToMove;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastEnemyPostion;

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x2900468", Offset = "0x2900468", VA = "0x2900468")]
		private void CalculatePointToMove()
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x2900A28", Offset = "0x2900A28", VA = "0x2900A28", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x2900A10", Offset = "0x2900A10", VA = "0x2900A10")]
		private float GetDot(Vector3 _lhs, Vector3 _rhs)
		{
			return default(float);
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x2900B50", Offset = "0x2900B50", VA = "0x2900B50", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x2900C90", Offset = "0x2900C90", VA = "0x2900C90", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x2900D20", Offset = "0x2900D20", VA = "0x2900D20", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x2900D30", Offset = "0x2900D30", VA = "0x2900D30", Slot = "14")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x2900D40", Offset = "0x2900D40", VA = "0x2900D40")]
		public Avoid()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57300", Offset = "0xE57300")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57300", Offset = "0xE57300")]
	public class FindMovePoint : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> pointToMove;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<int> radius;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 bornPos;

		[Token(Token = "0x17000479")]
		protected override string info
		{
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x24F8EB0", Offset = "0x24F8EB0", VA = "0x24F8EB0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x24F8E38", Offset = "0x24F8E38", VA = "0x24F8E38", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x24F8F00", Offset = "0x24F8F00", VA = "0x24F8F00", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x24F8FB8", Offset = "0x24F8FB8", VA = "0x24F8FB8")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x24F90F8", Offset = "0x24F90F8", VA = "0x24F90F8")]
		public FindMovePoint()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57360", Offset = "0xE57360")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57360", Offset = "0xE57360")]
	public class FindRandomMovePoint : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> pointToMove;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> pathMaxDis;

		[Token(Token = "0x1700047A")]
		protected override string info
		{
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x24FB5AC", Offset = "0x24FB5AC", VA = "0x24FB5AC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x24FB5FC", Offset = "0x24FB5FC", VA = "0x24FB5FC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x24FB6F4", Offset = "0x24FB6F4", VA = "0x24FB6F4")]
		private Vector3 RandomPoint(Vector3 center, float range)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x24FB830", Offset = "0x24FB830", VA = "0x24FB830")]
		public FindRandomMovePoint()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE573C0", Offset = "0xE573C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE573C0", Offset = "0xE573C0")]
	public class FindRandomPointList : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<List<Vector3>> PointList;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> pathMaxDis;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> PointCount;

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x223DF8C", Offset = "0x223DF8C", VA = "0x223DF8C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x223E088", Offset = "0x223E088", VA = "0x223E088")]
		private List<Vector3> RandomPoint(Vector3 center, float range)
		{
			return null;
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x223E290", Offset = "0x223E290", VA = "0x223E290")]
		public FindRandomPointList()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57420", Offset = "0xE57420")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57420", Offset = "0xE57420")]
	public class GetPointRot : ActionTask
	{
		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<NavPointCell> FightPointCell;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> Rot;

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x2257B5C", Offset = "0x2257B5C", VA = "0x2257B5C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x2257C84", Offset = "0x2257C84", VA = "0x2257C84")]
		public GetPointRot()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57480", Offset = "0xE57480")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57480", Offset = "0xE57480")]
	public class ResetMonsterWarning : ActionTask
	{
		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x2720EFC", Offset = "0x2720EFC", VA = "0x2720EFC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x2721070", Offset = "0x2721070", VA = "0x2721070")]
		public ResetMonsterWarning()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE574E0", Offset = "0xE574E0")]
	public class SetBossBrith : ActionTask
	{
		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x215495C", Offset = "0x215495C", VA = "0x215495C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x2154B00", Offset = "0x2154B00", VA = "0x2154B00")]
		public SetBossBrith()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57518", Offset = "0xE57518")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57518", Offset = "0xE57518")]
	public class UseFightPoint : ActionTask
	{
		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<NavPointCell> FightPointCell;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<List<NavPointCell>> FightPointList;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<MoveTargetType> moveTargetType;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<IntervalActionType> IntervalActionType;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<float> speed;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<int> Shots;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BBParameter<float> ShotTime;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BBParameter<int> Fightindex;

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x23721A8", Offset = "0x23721A8", VA = "0x23721A8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x237263C", Offset = "0x237263C", VA = "0x237263C")]
		public UseFightPoint()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57578", Offset = "0xE57578")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57578", Offset = "0xE57578")]
	public class UsePatrolPoint : ActionTask
	{
		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<NavPointCell> PatrolPointCell;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<List<NavPointCell>> PatrolPointList;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<MoveTargetType> moveTargetType;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<IntervalActionType> intervalActionType;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<float> speed;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<int> Patrolindex;

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x23726A4", Offset = "0x23726A4", VA = "0x23726A4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x23729C4", Offset = "0x23729C4", VA = "0x23729C4")]
		public UsePatrolPoint()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE575D8", Offset = "0xE575D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE575D8", Offset = "0xE575D8")]
	public class PVERotateTowards : ActionTask<Transform>
	{
		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool alreadyRotate;

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x230B34C", Offset = "0x230B34C", VA = "0x230B34C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x230B4D0", Offset = "0x230B4D0", VA = "0x230B4D0")]
		public PVERotateTowards()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57638", Offset = "0xE57638")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57638", Offset = "0xE57638")]
	public class SetBornPosition : ActionTask
	{
		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> bornPosition;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x1700047B")]
		protected override string info
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x21545AC", Offset = "0x21545AC", VA = "0x21545AC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x21545F0", Offset = "0x21545F0", VA = "0x21545F0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x2154700", Offset = "0x2154700", VA = "0x2154700")]
		public SetBornPosition()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57698", Offset = "0xE57698")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57698", Offset = "0xE57698")]
	public class SetDirection : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> directionV3;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Direction direction;

		[Token(Token = "0x1700047C")]
		protected override string info
		{
			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x2155718", Offset = "0x2155718", VA = "0x2155718", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x2155680", Offset = "0x2155680", VA = "0x2155680", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x215575C", Offset = "0x215575C", VA = "0x215575C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x21557A8", Offset = "0x21557A8", VA = "0x21557A8")]
		private bool CalculatePath(Direction _dir, int _calculationTimes)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x2155AC4", Offset = "0x2155AC4", VA = "0x2155AC4")]
		private void DrawPathLine(NavMeshPath _path, Vector3[] _allWayPoints)
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x2155C2C", Offset = "0x2155C2C", VA = "0x2155C2C")]
		public SetDirection()
		{
		}
	}
}
namespace PVE.Tasks.Conditions
{
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE576F8", Offset = "0xE576F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE576F8", Offset = "0xE576F8")]
	public class AlreadyMove : ConditionTask<Transform>
	{
		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float limitDistance;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 startAgainPos;

		[Token(Token = "0x1700047D")]
		protected override string info
		{
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x212BE34", Offset = "0x212BE34", VA = "0x212BE34", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x212BF08", Offset = "0x212BF08", VA = "0x212BF08", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x212BF80", Offset = "0x212BF80", VA = "0x212BF80", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x212C06C", Offset = "0x212C06C", VA = "0x212C06C", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x212C1B0", Offset = "0x212C1B0", VA = "0x212C1B0")]
		public AlreadyMove()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57758", Offset = "0xE57758")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57758", Offset = "0xE57758")]
	public class CheckWarningActive : ConditionTask
	{
		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x1700047E")]
		protected override string info
		{
			[Token(Token = "0x6002B54")]
			[Address(RVA = "0x2667960", Offset = "0x2667960", VA = "0x2667960", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x2667A40", Offset = "0x2667A40", VA = "0x2667A40", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x2667BAC", Offset = "0x2667BAC", VA = "0x2667BAC")]
		public CheckWarningActive()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE577B8", Offset = "0xE577B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE577B8", Offset = "0xE577B8")]
	public class SetWarningActive : ActionTask
	{
		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<bool> IsWarningActive;

		[Token(Token = "0x1700047F")]
		protected override string info
		{
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x2157CD4", Offset = "0x2157CD4", VA = "0x2157CD4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x2157DB4", Offset = "0x2157DB4", VA = "0x2157DB4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x2157F50", Offset = "0x2157F50", VA = "0x2157F50")]
		public SetWarningActive()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57818", Offset = "0xE57818")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57818", Offset = "0xE57818")]
	public class HoldGround : ConditionTask<Transform>
	{
		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float limitDistance;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float currentDistance;

		[Token(Token = "0x17000480")]
		protected override string info
		{
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0x2529268", Offset = "0x2529268", VA = "0x2529268", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0x25292F0", Offset = "0x25292F0", VA = "0x25292F0", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x25293DC", Offset = "0x25293DC", VA = "0x25293DC")]
		public HoldGround()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57878", Offset = "0xE57878")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57878", Offset = "0xE57878")]
	public class IsRoomMonsterActive : ConditionTask
	{
		[Token(Token = "0x17000481")]
		protected override string info
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x20B34C0", Offset = "0x20B34C0", VA = "0x20B34C0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x20B35A0", Offset = "0x20B35A0", VA = "0x20B35A0", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x20B3620", Offset = "0x20B3620", VA = "0x20B3620")]
		public IsRoomMonsterActive()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE578D8", Offset = "0xE578D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE578D8", Offset = "0xE578D8")]
	public class JudgeBeHit : ConditionTask
	{
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<WUnit> selfUnit;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<bool> isBeHit;

		[Token(Token = "0x17000482")]
		protected override string info
		{
			[Token(Token = "0x6002B61")]
			[Address(RVA = "0x20B3758", Offset = "0x20B3758", VA = "0x20B3758", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x20B3638", Offset = "0x20B3638", VA = "0x20B3638", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x20B381C", Offset = "0x20B381C", VA = "0x20B381C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x20B3870", Offset = "0x20B3870", VA = "0x20B3870")]
		private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x20B39B8", Offset = "0x20B39B8", VA = "0x20B39B8")]
		public JudgeBeHit()
		{
		}
	}
	[Token(Token = "0x2000600")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57938", Offset = "0xE57938")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57938", Offset = "0xE57938")]
	public class JudgeHit : ConditionTask
	{
		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<WUnit> selfUnit;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<bool> isItHit;

		[Token(Token = "0x17000483")]
		protected override string info
		{
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0x20B3AE0", Offset = "0x20B3AE0", VA = "0x20B3AE0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x20B39C0", Offset = "0x20B39C0", VA = "0x20B39C0", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x20B3BA4", Offset = "0x20B3BA4", VA = "0x20B3BA4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x20B3BF8", Offset = "0x20B3BF8", VA = "0x20B3BF8")]
		private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x20B3D48", Offset = "0x20B3D48", VA = "0x20B3D48")]
		public JudgeHit()
		{
		}
	}
	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE57998", Offset = "0xE57998")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE57998", Offset = "0xE57998")]
	public class CheckWarningTime : ConditionTask
	{
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> warningTime;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CompareMethod checkType;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE66C68", Offset = "0xE66C68")]
		public float differenceThreshold;

		[Token(Token = "0x17000484")]
		protected override string info
		{
			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x2667BB4", Offset = "0x2667BB4", VA = "0x2667BB4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x2667C94", Offset = "0x2667C94", VA = "0x2667C94", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x2667E48", Offset = "0x2667E48", VA = "0x2667E48")]
		public CheckWarningTime()
		{
		}
	}
}
namespace ParagonAI
{
	[Token(Token = "0x2000602")]
	public class RotateToAimGunScript : MonoBehaviour
	{
		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spineBone;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bulletSpawnTransform;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetTransform;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetTransformOffset;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool shouldDebug;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 maximumRotationAngles;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rotationSpeed;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion spineRotationLastFrame;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 tempSpineLocalEulerAngles;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isEnabled;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float minDistToAim;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion targetRot;

		[Token(Token = "0x17000485")]
		private Vector3 targetTransformPos
		{
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x24BBFF8", Offset = "0x24BBFF8", VA = "0x24BBFF8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x24BC0A0", Offset = "0x24BC0A0", VA = "0x24BC0A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x24BC144", Offset = "0x24BC144", VA = "0x24BC144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x24BC1E8", Offset = "0x24BC1E8", VA = "0x24BC1E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x24BC200", Offset = "0x24BC200", VA = "0x24BC200")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x24BC6CC", Offset = "0x24BC6CC", VA = "0x24BC6CC")]
		public void Activate()
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x24BC1F8", Offset = "0x24BC1F8", VA = "0x24BC1F8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x24BC70C", Offset = "0x24BC70C", VA = "0x24BC70C")]
		public void SetTargetTransform(Transform x, Vector3 offset)
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x24BC6A0", Offset = "0x24BC6A0", VA = "0x24BC6A0")]
		private float ClampEulerAngles(float r, float lim)
		{
			return default(float);
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x24BC758", Offset = "0x24BC758", VA = "0x24BC758")]
		private float ResetIfTooHigh(float r, float lim)
		{
			return default(float);
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x24BC798", Offset = "0x24BC798", VA = "0x24BC798")]
		public RotateToAimGunScript()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000603")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE579F8", Offset = "0xE579F8")]
		private sealed class <>c
		{
			[Token(Token = "0x40025F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x20F4260", Offset = "0x20F4260", VA = "0x20F4260")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B82")]
			[Address(RVA = "0x20F4268", Offset = "0x20F4268", VA = "0x20F4268")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x40025E7")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x17000486")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x243CD7C", Offset = "0x243CD7C", VA = "0x243CD7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000487")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x243CDE4", Offset = "0x243CDE4", VA = "0x243CDE4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1400000A")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x243CB94", Offset = "0x243CB94", VA = "0x243CB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE7C", Offset = "0xE6EE7C")]
			add
			{
			}
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x243CC88", Offset = "0x243CC88", VA = "0x243CC88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EE8C", Offset = "0xE6EE8C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x243CE50", Offset = "0x243CE50", VA = "0x243CE50")]
		static Calibration()
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x243D90C", Offset = "0x243D90C", VA = "0x243D90C")]
		private static void Reset()
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x243D0CC", Offset = "0x243D0CC", VA = "0x243D0CC")]
		public static void Read()
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x243D9D0", Offset = "0x243D9D0", VA = "0x243D9D0")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000605")]
	public static class Extensions
	{
		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x24F5760", Offset = "0x24F5760", VA = "0x24F5760")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x24F57B4", Offset = "0x24F57B4", VA = "0x24F57B4")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x24F59A4", Offset = "0x24F59A4", VA = "0x24F59A4")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE57A18", Offset = "0xE57A18")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE57A50", Offset = "0xE57A50")]
		private sealed class <>c
		{
			[Token(Token = "0x40025FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x40025FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x40025FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x40025FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x40025FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x4002600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x20F66F8", Offset = "0x20F66F8", VA = "0x20F66F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x20F6700", Offset = "0x20F6700", VA = "0x20F6700")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0x20F67B4", Offset = "0x20F67B4", VA = "0x20F67B4")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B98")]
			[Address(RVA = "0x20F6804", Offset = "0x20F6804", VA = "0x20F6804")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6002B99")]
			[Address(RVA = "0x20F6928", Offset = "0x20F6928", VA = "0x20F6928")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0x20F697C", Offset = "0x20F697C", VA = "0x20F697C")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x20F6AF8", Offset = "0x20F6AF8", VA = "0x20F6AF8")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66C94", Offset = "0xE66C94")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x17000488")]
		public bool IsValid
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0x24F59B0", Offset = "0x24F59B0", VA = "0x24F59B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000489")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x24F59C0", Offset = "0x24F59C0", VA = "0x24F59C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EEBC", Offset = "0xE6EEBC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002B88")]
			[Address(RVA = "0x24F59C8", Offset = "0x24F59C8", VA = "0x24F59C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6EECC", Offset = "0xE6EECC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x24F59D0", Offset = "0x24F59D0", VA = "0x24F59D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x24F5A5C", Offset = "0x24F5A5C", VA = "0x24F5A5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x24F5AAC", Offset = "0x24F5AAC", VA = "0x24F5AAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x24F5B28", Offset = "0x24F5B28", VA = "0x24F5B28")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x24F5AB0", Offset = "0x24F5AB0", VA = "0x24F5AB0")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x24F5B2C", Offset = "0x24F5B2C", VA = "0x24F5B2C")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x24F5BE4", Offset = "0x24F5BE4", VA = "0x24F5BE4")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x24F5A38", Offset = "0x24F5A38", VA = "0x24F5A38")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x24F5DC4", Offset = "0x24F5DC4", VA = "0x24F5DC4")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x24F64A0", Offset = "0x24F64A0", VA = "0x24F64A0")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x24F6658", Offset = "0x24F6658", VA = "0x24F6658")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE57A60", Offset = "0xE57A60")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x2528158", Offset = "0x2528158", VA = "0x2528158")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE57A98", Offset = "0xE57A98")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66CA4", Offset = "0xE66CA4")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE66CDC", Offset = "0xE66CDC")]
		public Camera HMDCamera;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE66CEC", Offset = "0xE66CEC")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE66CFC", Offset = "0xE66CFC")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x1700048A")]
		public Transform Origin
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x20B9220", Offset = "0x20B9220", VA = "0x20B9220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x20B92BC", Offset = "0x20B92BC", VA = "0x20B92BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x20B960C", Offset = "0x20B960C", VA = "0x20B960C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x20B9814", Offset = "0x20B9814", VA = "0x20B9814")]
		private void Update()
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x20B9870", Offset = "0x20B9870", VA = "0x20B9870")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x20B96A0", Offset = "0x20B96A0", VA = "0x20B96A0")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x20B9A08", Offset = "0x20B9A08", VA = "0x20B9A08")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x20B9EC0", Offset = "0x20B9EC0", VA = "0x20B9EC0")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x20B9A74", Offset = "0x20B9A74", VA = "0x20B9A74")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x20BA058", Offset = "0x20BA058", VA = "0x20BA058")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x20B9B4C", Offset = "0x20B9B4C", VA = "0x20B9B4C")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x20B9F80", Offset = "0x20B9F80", VA = "0x20B9F80")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x20BA130", Offset = "0x20BA130", VA = "0x20BA130")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE57AD0", Offset = "0xE57AD0")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE57B08", Offset = "0xE57B08")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x1700048B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB9")]
				[Address(RVA = "0x205ADDC", Offset = "0x205ADDC", VA = "0x205ADDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BBB")]
				[Address(RVA = "0x205AE24", Offset = "0x205AE24", VA = "0x205AE24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x205AC88", Offset = "0x205AC88", VA = "0x205AC88")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x205ACB4", Offset = "0x205ACB4", VA = "0x205ACB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x205ACB8", Offset = "0x205ACB8", VA = "0x205ACB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x205ADE4", Offset = "0x205ADE4", VA = "0x205ADE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x279C088", Offset = "0x279C088", VA = "0x279C088")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x279C268", Offset = "0x279C268", VA = "0x279C268")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x279C450", Offset = "0x279C450", VA = "0x279C450")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x279C5D8", Offset = "0x279C5D8", VA = "0x279C5D8")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x279C918", Offset = "0x279C918", VA = "0x279C918")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x279CB40", Offset = "0x279CB40", VA = "0x279CB40")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x279CD0C", Offset = "0x279CD0C", VA = "0x279CD0C")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x279D00C", Offset = "0x279D00C", VA = "0x279D00C")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x279D064", Offset = "0x279D064", VA = "0x279D064")]
		private void Composite()
		{
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x279D15C", Offset = "0x279D15C", VA = "0x279D15C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x279D188", Offset = "0x279D188", VA = "0x279D188")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6EEDC", Offset = "0xE6EEDC")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x279D200", Offset = "0x279D200", VA = "0x279D200")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE57B18", Offset = "0xE57B18")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE57B50", Offset = "0xE57B50")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400261A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x17000490")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BCC")]
				[Address(RVA = "0x206153C", Offset = "0x206153C", VA = "0x206153C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000491")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCE")]
				[Address(RVA = "0x2061584", Offset = "0x2061584", VA = "0x2061584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0x206143C", Offset = "0x206143C", VA = "0x206143C")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0x2061468", Offset = "0x2061468", VA = "0x2061468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0x206146C", Offset = "0x206146C", VA = "0x206146C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0x2061544", Offset = "0x2061544", VA = "0x2061544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x1700048D")]
		public static bool IsActive
		{
			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x21594B0", Offset = "0x21594B0", VA = "0x21594B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048E")]
		public static int TextureWidth
		{
			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x21594B4", Offset = "0x21594B4", VA = "0x21594B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048F")]
		public static int TextureHeight
		{
			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0x21594B8", Offset = "0x21594B8", VA = "0x21594B8")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x2159258", Offset = "0x2159258", VA = "0x2159258")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x21592CC", Offset = "0x21592CC", VA = "0x21592CC")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x2159348", Offset = "0x2159348", VA = "0x2159348")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x21593BC", Offset = "0x21593BC", VA = "0x21593BC")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x2159430", Offset = "0x2159430", VA = "0x2159430")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x21594BC", Offset = "0x21594BC", VA = "0x21594BC")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x2159500", Offset = "0x2159500", VA = "0x2159500")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x215952C", Offset = "0x215952C", VA = "0x215952C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6EF8C", Offset = "0xE6EF8C")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x21595A4", Offset = "0x21595A4", VA = "0x21595A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x21595E0", Offset = "0x21595E0", VA = "0x21595E0")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x200060E")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x2258784", Offset = "0x2258784", VA = "0x2258784")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x22587D8", Offset = "0x22587D8", VA = "0x22587D8")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x200060F")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57B60", Offset = "0xE57B60")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57B74", Offset = "0xE57B74")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57B88", Offset = "0xE57B88")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57B9C", Offset = "0xE57B9C")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57BB0", Offset = "0xE57BB0")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57BC4", Offset = "0xE57BC4")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57BD8", Offset = "0xE57BD8")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57BEC", Offset = "0xE57BEC")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C00", Offset = "0xE57C00")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C14", Offset = "0xE57C14")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C28", Offset = "0xE57C28")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C3C", Offset = "0xE57C3C")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C50", Offset = "0xE57C50")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C64", Offset = "0xE57C64")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C78", Offset = "0xE57C78")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57C8C", Offset = "0xE57C8C")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57CA0", Offset = "0xE57CA0")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57CB4", Offset = "0xE57CB4")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57CC8", Offset = "0xE57CC8")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57CDC", Offset = "0xE57CDC")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57CF0", Offset = "0xE57CF0")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D04", Offset = "0xE57D04")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D18", Offset = "0xE57D18")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D2C", Offset = "0xE57D2C")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D40", Offset = "0xE57D40")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D54", Offset = "0xE57D54")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D68", Offset = "0xE57D68")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D7C", Offset = "0xE57D7C")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57D90", Offset = "0xE57D90")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57DA4", Offset = "0xE57DA4")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57DB8", Offset = "0xE57DB8")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57DCC", Offset = "0xE57DCC")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57DE0", Offset = "0xE57DE0")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57DF4", Offset = "0xE57DF4")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E08", Offset = "0xE57E08")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E1C", Offset = "0xE57E1C")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E30", Offset = "0xE57E30")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E44", Offset = "0xE57E44")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E58", Offset = "0xE57E58")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E6C", Offset = "0xE57E6C")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E80", Offset = "0xE57E80")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57E94", Offset = "0xE57E94")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57EA8", Offset = "0xE57EA8")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57EBC", Offset = "0xE57EBC")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57ED0", Offset = "0xE57ED0")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57EE4", Offset = "0xE57EE4")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57EF8", Offset = "0xE57EF8")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x200063F")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F0C", Offset = "0xE57F0C")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F20", Offset = "0xE57F20")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F34", Offset = "0xE57F34")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x2000643")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F48", Offset = "0xE57F48")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F5C", Offset = "0xE57F5C")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F70", Offset = "0xE57F70")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F84", Offset = "0xE57F84")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57F98", Offset = "0xE57F98")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57FAC", Offset = "0xE57FAC")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57FC0", Offset = "0xE57FC0")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57FD4", Offset = "0xE57FD4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57FE8", Offset = "0xE57FE8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE57FFC", Offset = "0xE57FFC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58010", Offset = "0xE58010")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58024", Offset = "0xE58024")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000650")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58038", Offset = "0xE58038")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5804C", Offset = "0xE5804C")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58060", Offset = "0xE58060")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58074", Offset = "0xE58074")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58088", Offset = "0xE58088")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5809C", Offset = "0xE5809C")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE580B0", Offset = "0xE580B0")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE580C4", Offset = "0xE580C4")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE580D8", Offset = "0xE580D8")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE580EC", Offset = "0xE580EC")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58100", Offset = "0xE58100")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58114", Offset = "0xE58114")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58128", Offset = "0xE58128")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5813C", Offset = "0xE5813C")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58150", Offset = "0xE58150")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58164", Offset = "0xE58164")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58178", Offset = "0xE58178")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5818C", Offset = "0xE5818C")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE581A0", Offset = "0xE581A0")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE581B4", Offset = "0xE581B4")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE581C8", Offset = "0xE581C8")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE581DC", Offset = "0xE581DC")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE581F0", Offset = "0xE581F0")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58204", Offset = "0xE58204")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58218", Offset = "0xE58218")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5822C", Offset = "0xE5822C")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58240", Offset = "0xE58240")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58254", Offset = "0xE58254")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58268", Offset = "0xE58268")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5827C", Offset = "0xE5827C")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58290", Offset = "0xE58290")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000670")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE582A4", Offset = "0xE582A4")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE582B8", Offset = "0xE582B8")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE582CC", Offset = "0xE582CC")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE582E0", Offset = "0xE582E0")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE582F4", Offset = "0xE582F4")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58308", Offset = "0xE58308")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5831C", Offset = "0xE5831C")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58330", Offset = "0xE58330")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000679")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58344", Offset = "0xE58344")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58358", Offset = "0xE58358")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5836C", Offset = "0xE5836C")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58380", Offset = "0xE58380")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58394", Offset = "0xE58394")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE583A8", Offset = "0xE583A8")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE583BC", Offset = "0xE583BC")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE583D0", Offset = "0xE583D0")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE583E4", Offset = "0xE583E4")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE583F8", Offset = "0xE583F8")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5840C", Offset = "0xE5840C")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58420", Offset = "0xE58420")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58434", Offset = "0xE58434")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58448", Offset = "0xE58448")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5845C", Offset = "0xE5845C")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58470", Offset = "0xE58470")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58484", Offset = "0xE58484")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58498", Offset = "0xE58498")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE584AC", Offset = "0xE584AC")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE584C0", Offset = "0xE584C0")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200068E")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE584D4", Offset = "0xE584D4")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE584E8", Offset = "0xE584E8")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE584FC", Offset = "0xE584FC")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58510", Offset = "0xE58510")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58524", Offset = "0xE58524")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58538", Offset = "0xE58538")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5854C", Offset = "0xE5854C")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58560", Offset = "0xE58560")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58574", Offset = "0xE58574")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58588", Offset = "0xE58588")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5859C", Offset = "0xE5859C")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE585B0", Offset = "0xE585B0")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE585C4", Offset = "0xE585C4")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE585D8", Offset = "0xE585D8")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE585EC", Offset = "0xE585EC")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58600", Offset = "0xE58600")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58614", Offset = "0xE58614")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58628", Offset = "0xE58628")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5863C", Offset = "0xE5863C")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58650", Offset = "0xE58650")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58664", Offset = "0xE58664")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58678", Offset = "0xE58678")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5868C", Offset = "0xE5868C")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE586A0", Offset = "0xE586A0")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE586B4", Offset = "0xE586B4")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE586C8", Offset = "0xE586C8")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20006A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE586DC", Offset = "0xE586DC")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE586F0", Offset = "0xE586F0")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58704", Offset = "0xE58704")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58718", Offset = "0xE58718")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5872C", Offset = "0xE5872C")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58740", Offset = "0xE58740")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58754", Offset = "0xE58754")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58768", Offset = "0xE58768")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5877C", Offset = "0xE5877C")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58790", Offset = "0xE58790")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE587A4", Offset = "0xE587A4")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE587B8", Offset = "0xE587B8")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE587CC", Offset = "0xE587CC")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE587E0", Offset = "0xE587E0")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE587F4", Offset = "0xE587F4")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58808", Offset = "0xE58808")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5881C", Offset = "0xE5881C")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x20006BA")]
	public struct IVROverlay
	{
		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58830", Offset = "0xE58830")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58844", Offset = "0xE58844")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58858", Offset = "0xE58858")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5886C", Offset = "0xE5886C")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58880", Offset = "0xE58880")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58894", Offset = "0xE58894")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE588A8", Offset = "0xE588A8")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE588BC", Offset = "0xE588BC")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE588D0", Offset = "0xE588D0")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE588E4", Offset = "0xE588E4")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE588F8", Offset = "0xE588F8")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5890C", Offset = "0xE5890C")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58920", Offset = "0xE58920")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58934", Offset = "0xE58934")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58948", Offset = "0xE58948")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5895C", Offset = "0xE5895C")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58970", Offset = "0xE58970")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58984", Offset = "0xE58984")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58998", Offset = "0xE58998")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE589AC", Offset = "0xE589AC")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE589C0", Offset = "0xE589C0")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE589D4", Offset = "0xE589D4")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE589E8", Offset = "0xE589E8")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE589FC", Offset = "0xE589FC")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A10", Offset = "0xE58A10")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A24", Offset = "0xE58A24")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A38", Offset = "0xE58A38")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A4C", Offset = "0xE58A4C")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A60", Offset = "0xE58A60")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A74", Offset = "0xE58A74")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A88", Offset = "0xE58A88")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58A9C", Offset = "0xE58A9C")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58AB0", Offset = "0xE58AB0")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58AC4", Offset = "0xE58AC4")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58AD8", Offset = "0xE58AD8")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58AEC", Offset = "0xE58AEC")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B00", Offset = "0xE58B00")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B14", Offset = "0xE58B14")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B28", Offset = "0xE58B28")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B3C", Offset = "0xE58B3C")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B50", Offset = "0xE58B50")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B64", Offset = "0xE58B64")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B78", Offset = "0xE58B78")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58B8C", Offset = "0xE58B8C")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58BA0", Offset = "0xE58BA0")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58BB4", Offset = "0xE58BB4")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58BC8", Offset = "0xE58BC8")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58BDC", Offset = "0xE58BDC")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58BF0", Offset = "0xE58BF0")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C04", Offset = "0xE58C04")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C18", Offset = "0xE58C18")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C2C", Offset = "0xE58C2C")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C40", Offset = "0xE58C40")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C54", Offset = "0xE58C54")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C68", Offset = "0xE58C68")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C7C", Offset = "0xE58C7C")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58C90", Offset = "0xE58C90")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58CA4", Offset = "0xE58CA4")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58CB8", Offset = "0xE58CB8")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58CCC", Offset = "0xE58CCC")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58CE0", Offset = "0xE58CE0")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58CF4", Offset = "0xE58CF4")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D08", Offset = "0xE58D08")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D1C", Offset = "0xE58D1C")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D30", Offset = "0xE58D30")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D44", Offset = "0xE58D44")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D58", Offset = "0xE58D58")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D6C", Offset = "0xE58D6C")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D80", Offset = "0xE58D80")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58D94", Offset = "0xE58D94")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58DA8", Offset = "0xE58DA8")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58DBC", Offset = "0xE58DBC")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58DD0", Offset = "0xE58DD0")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58DE4", Offset = "0xE58DE4")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58DF8", Offset = "0xE58DF8")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E0C", Offset = "0xE58E0C")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E20", Offset = "0xE58E20")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E34", Offset = "0xE58E34")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E48", Offset = "0xE58E48")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E5C", Offset = "0xE58E5C")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E70", Offset = "0xE58E70")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E84", Offset = "0xE58E84")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x200070D")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58E98", Offset = "0xE58E98")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58EAC", Offset = "0xE58EAC")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58EC0", Offset = "0xE58EC0")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58ED4", Offset = "0xE58ED4")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58EE8", Offset = "0xE58EE8")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58EFC", Offset = "0xE58EFC")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F10", Offset = "0xE58F10")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F24", Offset = "0xE58F24")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F38", Offset = "0xE58F38")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000717")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F4C", Offset = "0xE58F4C")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F60", Offset = "0xE58F60")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000719")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F74", Offset = "0xE58F74")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F88", Offset = "0xE58F88")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58F9C", Offset = "0xE58F9C")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58FB0", Offset = "0xE58FB0")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58FC4", Offset = "0xE58FC4")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58FD8", Offset = "0xE58FD8")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE58FEC", Offset = "0xE58FEC")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x2000720")]
	public struct IVRNotifications
	{
		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59000", Offset = "0xE59000")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59014", Offset = "0xE59014")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x2000723")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59028", Offset = "0xE59028")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5903C", Offset = "0xE5903C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59050", Offset = "0xE59050")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59064", Offset = "0xE59064")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59078", Offset = "0xE59078")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5908C", Offset = "0xE5908C")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE590A0", Offset = "0xE590A0")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE590B4", Offset = "0xE590B4")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE590C8", Offset = "0xE590C8")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE590DC", Offset = "0xE590DC")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE590F0", Offset = "0xE590F0")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59104", Offset = "0xE59104")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x2000730")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59118", Offset = "0xE59118")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5912C", Offset = "0xE5912C")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59140", Offset = "0xE59140")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59154", Offset = "0xE59154")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59168", Offset = "0xE59168")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5917C", Offset = "0xE5917C")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59190", Offset = "0xE59190")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000738")]
	public struct IVRResources
	{
		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE591A4", Offset = "0xE591A4")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE591B8", Offset = "0xE591B8")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x200073B")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE591CC", Offset = "0xE591CC")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE591E0", Offset = "0xE591E0")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE591F4", Offset = "0xE591F4")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x200073F")]
	public class CVRSystem
	{
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59208", Offset = "0xE59208")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000741")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4002743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE5921C", Offset = "0xE5921C")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000743")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4002744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4002745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59230", Offset = "0xE59230")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000745")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4002746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4002747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6003059")]
		[Address(RVA = "0x243BA0C", Offset = "0x243BA0C", VA = "0x243BA0C")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600305A")]
		[Address(RVA = "0x243BB40", Offset = "0x243BB40", VA = "0x243BB40")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0x243BB64", Offset = "0x243BB64", VA = "0x243BB64")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x600305C")]
		[Address(RVA = "0x243BBB0", Offset = "0x243BBB0", VA = "0x243BBB0")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x600305D")]
		[Address(RVA = "0x243BBDC", Offset = "0x243BBDC", VA = "0x243BBDC")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x600305E")]
		[Address(RVA = "0x243BBF8", Offset = "0x243BBF8", VA = "0x243BBF8")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600305F")]
		[Address(RVA = "0x243BC44", Offset = "0x243BC44", VA = "0x243BC44")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6003060")]
		[Address(RVA = "0x243BC68", Offset = "0x243BC68", VA = "0x243BC68")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6003061")]
		[Address(RVA = "0x243BC84", Offset = "0x243BC84", VA = "0x243BC84")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6003062")]
		[Address(RVA = "0x243BCA4", Offset = "0x243BCA4", VA = "0x243BCA4")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0x243BCC4", Offset = "0x243BCC4", VA = "0x243BCC4")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6003064")]
		[Address(RVA = "0x243BCE0", Offset = "0x243BCE0", VA = "0x243BCE0")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6003065")]
		[Address(RVA = "0x243BD00", Offset = "0x243BD00", VA = "0x243BD00")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6003066")]
		[Address(RVA = "0x243BD28", Offset = "0x243BD28", VA = "0x243BD28")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6003067")]
		[Address(RVA = "0x243BD44", Offset = "0x243BD44", VA = "0x243BD44")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6003068")]
		[Address(RVA = "0x243BD90", Offset = "0x243BD90", VA = "0x243BD90")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x243BDDC", Offset = "0x243BDDC", VA = "0x243BDDC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x600306A")]
		[Address(RVA = "0x243BE08", Offset = "0x243BE08", VA = "0x243BE08")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x243BE24", Offset = "0x243BE24", VA = "0x243BE24")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x243BE40", Offset = "0x243BE40", VA = "0x243BE40")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x243BE5C", Offset = "0x243BE5C", VA = "0x243BE5C")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x600306E")]
		[Address(RVA = "0x243BE78", Offset = "0x243BE78", VA = "0x243BE78")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x243BE94", Offset = "0x243BE94", VA = "0x243BE94")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0x243BEB0", Offset = "0x243BEB0", VA = "0x243BEB0")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x243BECC", Offset = "0x243BECC", VA = "0x243BECC")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6003072")]
		[Address(RVA = "0x243BEE8", Offset = "0x243BEE8", VA = "0x243BEE8")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x243BF04", Offset = "0x243BF04", VA = "0x243BF04")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x243BF20", Offset = "0x243BF20", VA = "0x243BF20")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x243BF6C", Offset = "0x243BF6C", VA = "0x243BF6C")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x243BF88", Offset = "0x243BF88", VA = "0x243BF88")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x243BFA4", Offset = "0x243BFA4", VA = "0x243BFA4")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0x243C034", Offset = "0x243C034", VA = "0x243C034")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x243C1E0", Offset = "0x243C1E0", VA = "0x243C1E0")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600307A")]
		[Address(RVA = "0x243C1FC", Offset = "0x243C1FC", VA = "0x243C1FC")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x243C28C", Offset = "0x243C28C", VA = "0x243C28C")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x243C2A8", Offset = "0x243C2A8", VA = "0x243C2A8")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x243C474", Offset = "0x243C474", VA = "0x243C474")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600307E")]
		[Address(RVA = "0x243C660", Offset = "0x243C660", VA = "0x243C660")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x600307F")]
		[Address(RVA = "0x243C67C", Offset = "0x243C67C", VA = "0x243C67C")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x6003080")]
		[Address(RVA = "0x243C70C", Offset = "0x243C70C", VA = "0x243C70C")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6003081")]
		[Address(RVA = "0x243C79C", Offset = "0x243C79C", VA = "0x243C79C")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6003082")]
		[Address(RVA = "0x243C7B8", Offset = "0x243C7B8", VA = "0x243C7B8")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6003083")]
		[Address(RVA = "0x243C7D4", Offset = "0x243C7D4", VA = "0x243C7D4")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6003084")]
		[Address(RVA = "0x243C7F0", Offset = "0x243C7F0", VA = "0x243C7F0")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6003085")]
		[Address(RVA = "0x243C80C", Offset = "0x243C80C", VA = "0x243C80C")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6003086")]
		[Address(RVA = "0x243C828", Offset = "0x243C828", VA = "0x243C828")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6003087")]
		[Address(RVA = "0x243C844", Offset = "0x243C844", VA = "0x243C844")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6003088")]
		[Address(RVA = "0x243C860", Offset = "0x243C860", VA = "0x243C860")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x2000746")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6003095")]
		[Address(RVA = "0x2439EF4", Offset = "0x2439EF4", VA = "0x2439EF4")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6003096")]
		[Address(RVA = "0x243A024", Offset = "0x243A024", VA = "0x243A024")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6003097")]
		[Address(RVA = "0x243A050", Offset = "0x243A050", VA = "0x243A050")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6003098")]
		[Address(RVA = "0x243A07C", Offset = "0x243A07C", VA = "0x243A07C")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000747")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x6003099")]
		[Address(RVA = "0x243C87C", Offset = "0x243C87C", VA = "0x243C87C")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600309A")]
		[Address(RVA = "0x243C9B0", Offset = "0x243C9B0", VA = "0x243C9B0")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0x243CA40", Offset = "0x243CA40", VA = "0x243CA40")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600309C")]
		[Address(RVA = "0x243CA60", Offset = "0x243CA60", VA = "0x243CA60")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600309D")]
		[Address(RVA = "0x243CA88", Offset = "0x243CA88", VA = "0x243CA88")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x243CAA4", Offset = "0x243CAA4", VA = "0x243CAA4")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600309F")]
		[Address(RVA = "0x243CAC0", Offset = "0x243CAC0", VA = "0x243CAC0")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x243CAE0", Offset = "0x243CAE0", VA = "0x243CAE0")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x243CAFC", Offset = "0x243CAFC", VA = "0x243CAFC")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x243CB18", Offset = "0x243CB18", VA = "0x243CB18")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60030A3")]
		[Address(RVA = "0x243CB3C", Offset = "0x243CB3C", VA = "0x243CB3C")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x243CB58", Offset = "0x243CB58", VA = "0x243CB58")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0x243CB78", Offset = "0x243CB78", VA = "0x243CB78")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x2000748")]
	public class CVRApplications
	{
		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60030A6")]
		[Address(RVA = "0x24389BC", Offset = "0x24389BC", VA = "0x24389BC")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x2438AF0", Offset = "0x2438AF0", VA = "0x2438AF0")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x2438B10", Offset = "0x2438B10", VA = "0x2438B10")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0x2438B2C", Offset = "0x2438B2C", VA = "0x2438B2C")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x2438B48", Offset = "0x2438B48", VA = "0x2438B48")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0x2438B64", Offset = "0x2438B64", VA = "0x2438B64")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x2438B80", Offset = "0x2438B80", VA = "0x2438B80")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x2438B9C", Offset = "0x2438B9C", VA = "0x2438B9C")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x2438BB8", Offset = "0x2438BB8", VA = "0x2438BB8")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0x2438BE0", Offset = "0x2438BE0", VA = "0x2438BE0")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x2438BFC", Offset = "0x2438BFC", VA = "0x2438BFC")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030B1")]
		[Address(RVA = "0x2438C18", Offset = "0x2438C18", VA = "0x2438C18")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0x2438C34", Offset = "0x2438C34", VA = "0x2438C34")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x2438C50", Offset = "0x2438C50", VA = "0x2438C50")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x2438C6C", Offset = "0x2438C6C", VA = "0x2438C6C")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x2438CFC", Offset = "0x2438CFC", VA = "0x2438CFC")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0x2438D18", Offset = "0x2438D18", VA = "0x2438D18")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x2438D34", Offset = "0x2438D34", VA = "0x2438D34")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x2438D50", Offset = "0x2438D50", VA = "0x2438D50")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x2438D70", Offset = "0x2438D70", VA = "0x2438D70")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x2438D8C", Offset = "0x2438D8C", VA = "0x2438D8C")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x2438DA8", Offset = "0x2438DA8", VA = "0x2438DA8")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x2438DC4", Offset = "0x2438DC4", VA = "0x2438DC4")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0x2438DE0", Offset = "0x2438DE0", VA = "0x2438DE0")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x2438DFC", Offset = "0x2438DFC", VA = "0x2438DFC")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60030BF")]
		[Address(RVA = "0x2438E18", Offset = "0x2438E18", VA = "0x2438E18")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0x2438E34", Offset = "0x2438E34", VA = "0x2438E34")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0x2438E50", Offset = "0x2438E50", VA = "0x2438E50")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0x2438E6C", Offset = "0x2438E6C", VA = "0x2438E6C")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0x2438EFC", Offset = "0x2438EFC", VA = "0x2438EFC")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0x2438F18", Offset = "0x2438F18", VA = "0x2438F18")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60030C5")]
		[Address(RVA = "0x2438F34", Offset = "0x2438F34", VA = "0x2438F34")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000749")]
	public class CVRChaperone
	{
		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0x2438F50", Offset = "0x2438F50", VA = "0x2438F50")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60030C7")]
		[Address(RVA = "0x2439084", Offset = "0x2439084", VA = "0x2439084")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60030C8")]
		[Address(RVA = "0x24390A0", Offset = "0x24390A0", VA = "0x24390A0")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60030C9")]
		[Address(RVA = "0x24390C4", Offset = "0x24390C4", VA = "0x24390C4")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60030CA")]
		[Address(RVA = "0x24390E0", Offset = "0x24390E0", VA = "0x24390E0")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60030CB")]
		[Address(RVA = "0x24390FC", Offset = "0x24390FC", VA = "0x24390FC")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0x2439118", Offset = "0x2439118", VA = "0x2439118")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60030CD")]
		[Address(RVA = "0x2439134", Offset = "0x2439134", VA = "0x2439134")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60030CE")]
		[Address(RVA = "0x2439150", Offset = "0x2439150", VA = "0x2439150")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x200074A")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x2439170", Offset = "0x2439170", VA = "0x2439170")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60030D0")]
		[Address(RVA = "0x24392A4", Offset = "0x24392A4", VA = "0x24392A4")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0x24392C0", Offset = "0x24392C0", VA = "0x24392C0")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0x24392DC", Offset = "0x24392DC", VA = "0x24392DC")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D3")]
		[Address(RVA = "0x2439300", Offset = "0x2439300", VA = "0x2439300")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0x243931C", Offset = "0x243931C", VA = "0x243931C")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0x24393C4", Offset = "0x24393C4", VA = "0x24393C4")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0x243946C", Offset = "0x243946C", VA = "0x243946C")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0x2439488", Offset = "0x2439488", VA = "0x2439488")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D8")]
		[Address(RVA = "0x24394A4", Offset = "0x24394A4", VA = "0x24394A4")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0x24394C0", Offset = "0x24394C0", VA = "0x24394C0")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0x24394E8", Offset = "0x24394E8", VA = "0x24394E8")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60030DB")]
		[Address(RVA = "0x2439504", Offset = "0x2439504", VA = "0x2439504")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60030DC")]
		[Address(RVA = "0x2439520", Offset = "0x2439520", VA = "0x2439520")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0x243953C", Offset = "0x243953C", VA = "0x243953C")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0x2439558", Offset = "0x2439558", VA = "0x2439558")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0x2439580", Offset = "0x2439580", VA = "0x2439580")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0x2439628", Offset = "0x2439628", VA = "0x2439628")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0x2439650", Offset = "0x2439650", VA = "0x2439650")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0x24396F8", Offset = "0x24396F8", VA = "0x24396F8")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0x2439718", Offset = "0x2439718", VA = "0x2439718")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200074B")]
	public class CVRCompositor
	{
		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0x2439734", Offset = "0x2439734", VA = "0x2439734")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0x2439868", Offset = "0x2439868", VA = "0x2439868")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0x2439884", Offset = "0x2439884", VA = "0x2439884")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x60030E7")]
		[Address(RVA = "0x24398A0", Offset = "0x24398A0", VA = "0x24398A0")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0x24398D4", Offset = "0x24398D4", VA = "0x24398D4")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0x2439908", Offset = "0x2439908", VA = "0x2439908")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60030EA")]
		[Address(RVA = "0x2439924", Offset = "0x2439924", VA = "0x2439924")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60030EB")]
		[Address(RVA = "0x2439940", Offset = "0x2439940", VA = "0x2439940")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x60030EC")]
		[Address(RVA = "0x243995C", Offset = "0x243995C", VA = "0x243995C")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x60030ED")]
		[Address(RVA = "0x2439978", Offset = "0x2439978", VA = "0x2439978")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x60030EE")]
		[Address(RVA = "0x2439994", Offset = "0x2439994", VA = "0x2439994")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x60030EF")]
		[Address(RVA = "0x24399B0", Offset = "0x24399B0", VA = "0x24399B0")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x60030F0")]
		[Address(RVA = "0x24399CC", Offset = "0x24399CC", VA = "0x24399CC")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0x24399E8", Offset = "0x24399E8", VA = "0x24399E8")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x60030F2")]
		[Address(RVA = "0x2439A08", Offset = "0x2439A08", VA = "0x2439A08")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0x2439A28", Offset = "0x2439A28", VA = "0x2439A28")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x60030F4")]
		[Address(RVA = "0x2439A48", Offset = "0x2439A48", VA = "0x2439A48")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x60030F5")]
		[Address(RVA = "0x2439A64", Offset = "0x2439A64", VA = "0x2439A64")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0x2439A8C", Offset = "0x2439A8C", VA = "0x2439A8C")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x60030F7")]
		[Address(RVA = "0x2439AA8", Offset = "0x2439AA8", VA = "0x2439AA8")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x60030F8")]
		[Address(RVA = "0x2439AC4", Offset = "0x2439AC4", VA = "0x2439AC4")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x60030F9")]
		[Address(RVA = "0x2439AE0", Offset = "0x2439AE0", VA = "0x2439AE0")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x60030FA")]
		[Address(RVA = "0x2439AFC", Offset = "0x2439AFC", VA = "0x2439AFC")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0x2439B18", Offset = "0x2439B18", VA = "0x2439B18")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x60030FC")]
		[Address(RVA = "0x2439B34", Offset = "0x2439B34", VA = "0x2439B34")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x60030FD")]
		[Address(RVA = "0x2439B50", Offset = "0x2439B50", VA = "0x2439B50")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0x2439B6C", Offset = "0x2439B6C", VA = "0x2439B6C")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x2439B88", Offset = "0x2439B88", VA = "0x2439B88")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6003100")]
		[Address(RVA = "0x2439BA4", Offset = "0x2439BA4", VA = "0x2439BA4")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6003101")]
		[Address(RVA = "0x2439BC0", Offset = "0x2439BC0", VA = "0x2439BC0")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6003102")]
		[Address(RVA = "0x2439BDC", Offset = "0x2439BDC", VA = "0x2439BDC")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003103")]
		[Address(RVA = "0x2439BF8", Offset = "0x2439BF8", VA = "0x2439BF8")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6003104")]
		[Address(RVA = "0x2439C18", Offset = "0x2439C18", VA = "0x2439C18")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6003105")]
		[Address(RVA = "0x2439C34", Offset = "0x2439C34", VA = "0x2439C34")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6003106")]
		[Address(RVA = "0x2439C54", Offset = "0x2439C54", VA = "0x2439C54")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6003107")]
		[Address(RVA = "0x2439C70", Offset = "0x2439C70", VA = "0x2439C70")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6003108")]
		[Address(RVA = "0x2439C8C", Offset = "0x2439C8C", VA = "0x2439C8C")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6003109")]
		[Address(RVA = "0x2439CAC", Offset = "0x2439CAC", VA = "0x2439CAC")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600310A")]
		[Address(RVA = "0x2439CC8", Offset = "0x2439CC8", VA = "0x2439CC8")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0x2439CE4", Offset = "0x2439CE4", VA = "0x2439CE4")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x600310C")]
		[Address(RVA = "0x2439D00", Offset = "0x2439D00", VA = "0x2439D00")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600310D")]
		[Address(RVA = "0x2439D1C", Offset = "0x2439D1C", VA = "0x2439D1C")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600310E")]
		[Address(RVA = "0x2439D38", Offset = "0x2439D38", VA = "0x2439D38")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x600310F")]
		[Address(RVA = "0x2439D54", Offset = "0x2439D54", VA = "0x2439D54")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x200074C")]
	public class CVROverlay
	{
		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59244", Offset = "0xE59244")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x200074E")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x400274F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4002750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6003110")]
		[Address(RVA = "0x243A208", Offset = "0x243A208", VA = "0x243A208")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6003111")]
		[Address(RVA = "0x243A33C", Offset = "0x243A33C", VA = "0x243A33C")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003112")]
		[Address(RVA = "0x243A35C", Offset = "0x243A35C", VA = "0x243A35C")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003113")]
		[Address(RVA = "0x243A37C", Offset = "0x243A37C", VA = "0x243A37C")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003114")]
		[Address(RVA = "0x243A398", Offset = "0x243A398", VA = "0x243A398")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003115")]
		[Address(RVA = "0x243A3B4", Offset = "0x243A3B4", VA = "0x243A3B4")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6003116")]
		[Address(RVA = "0x243A3D0", Offset = "0x243A3D0", VA = "0x243A3D0")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003117")]
		[Address(RVA = "0x243A3EC", Offset = "0x243A3EC", VA = "0x243A3EC")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003118")]
		[Address(RVA = "0x243A408", Offset = "0x243A408", VA = "0x243A408")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003119")]
		[Address(RVA = "0x243A424", Offset = "0x243A424", VA = "0x243A424")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600311A")]
		[Address(RVA = "0x243A448", Offset = "0x243A448", VA = "0x243A448")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0x243A4D8", Offset = "0x243A4D8", VA = "0x243A4D8")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0x243A4F4", Offset = "0x243A4F4", VA = "0x243A4F4")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x600311D")]
		[Address(RVA = "0x243A510", Offset = "0x243A510", VA = "0x243A510")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600311E")]
		[Address(RVA = "0x243A530", Offset = "0x243A530", VA = "0x243A530")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600311F")]
		[Address(RVA = "0x243A550", Offset = "0x243A550", VA = "0x243A550")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003120")]
		[Address(RVA = "0x243A56C", Offset = "0x243A56C", VA = "0x243A56C")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003121")]
		[Address(RVA = "0x243A594", Offset = "0x243A594", VA = "0x243A594")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003122")]
		[Address(RVA = "0x243A5B0", Offset = "0x243A5B0", VA = "0x243A5B0")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0x243A5D0", Offset = "0x243A5D0", VA = "0x243A5D0")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003124")]
		[Address(RVA = "0x243A5EC", Offset = "0x243A5EC", VA = "0x243A5EC")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003125")]
		[Address(RVA = "0x243A60C", Offset = "0x243A60C", VA = "0x243A60C")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003126")]
		[Address(RVA = "0x243A628", Offset = "0x243A628", VA = "0x243A628")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003127")]
		[Address(RVA = "0x243A648", Offset = "0x243A648", VA = "0x243A648")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003128")]
		[Address(RVA = "0x243A664", Offset = "0x243A664", VA = "0x243A664")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003129")]
		[Address(RVA = "0x243A684", Offset = "0x243A684", VA = "0x243A684")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600312A")]
		[Address(RVA = "0x243A6A0", Offset = "0x243A6A0", VA = "0x243A6A0")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600312B")]
		[Address(RVA = "0x243A6C4", Offset = "0x243A6C4", VA = "0x243A6C4")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600312C")]
		[Address(RVA = "0x243A6E0", Offset = "0x243A6E0", VA = "0x243A6E0")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600312D")]
		[Address(RVA = "0x243A6FC", Offset = "0x243A6FC", VA = "0x243A6FC")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600312E")]
		[Address(RVA = "0x243A718", Offset = "0x243A718", VA = "0x243A718")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600312F")]
		[Address(RVA = "0x243A734", Offset = "0x243A734", VA = "0x243A734")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003130")]
		[Address(RVA = "0x243A750", Offset = "0x243A750", VA = "0x243A750")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003131")]
		[Address(RVA = "0x243A76C", Offset = "0x243A76C", VA = "0x243A76C")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003132")]
		[Address(RVA = "0x243A788", Offset = "0x243A788", VA = "0x243A788")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003133")]
		[Address(RVA = "0x243A7A4", Offset = "0x243A7A4", VA = "0x243A7A4")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003134")]
		[Address(RVA = "0x243A7C0", Offset = "0x243A7C0", VA = "0x243A7C0")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003135")]
		[Address(RVA = "0x243A7DC", Offset = "0x243A7DC", VA = "0x243A7DC")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003136")]
		[Address(RVA = "0x243A7FC", Offset = "0x243A7FC", VA = "0x243A7FC")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003137")]
		[Address(RVA = "0x243A818", Offset = "0x243A818", VA = "0x243A818")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003138")]
		[Address(RVA = "0x243A838", Offset = "0x243A838", VA = "0x243A838")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0x243A858", Offset = "0x243A858", VA = "0x243A858")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600313A")]
		[Address(RVA = "0x243A874", Offset = "0x243A874", VA = "0x243A874")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600313B")]
		[Address(RVA = "0x243A890", Offset = "0x243A890", VA = "0x243A890")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600313C")]
		[Address(RVA = "0x243A8AC", Offset = "0x243A8AC", VA = "0x243A8AC")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0x243A8C8", Offset = "0x243A8C8", VA = "0x243A8C8")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600313E")]
		[Address(RVA = "0x243A8E4", Offset = "0x243A8E4", VA = "0x243A8E4")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600313F")]
		[Address(RVA = "0x243AA9C", Offset = "0x243AA9C", VA = "0x243AA9C")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003140")]
		[Address(RVA = "0x243AAB8", Offset = "0x243AAB8", VA = "0x243AAB8")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003141")]
		[Address(RVA = "0x243AAD4", Offset = "0x243AAD4", VA = "0x243AAD4")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003142")]
		[Address(RVA = "0x243AAF0", Offset = "0x243AAF0", VA = "0x243AAF0")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003143")]
		[Address(RVA = "0x243AB0C", Offset = "0x243AB0C", VA = "0x243AB0C")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6003144")]
		[Address(RVA = "0x243AB28", Offset = "0x243AB28", VA = "0x243AB28")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6003145")]
		[Address(RVA = "0x243AB44", Offset = "0x243AB44", VA = "0x243AB44")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6003146")]
		[Address(RVA = "0x243AB60", Offset = "0x243AB60", VA = "0x243AB60")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003147")]
		[Address(RVA = "0x243AB7C", Offset = "0x243AB7C", VA = "0x243AB7C")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003148")]
		[Address(RVA = "0x243AB98", Offset = "0x243AB98", VA = "0x243AB98")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003149")]
		[Address(RVA = "0x243ABB4", Offset = "0x243ABB4", VA = "0x243ABB4")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600314A")]
		[Address(RVA = "0x243ABD0", Offset = "0x243ABD0", VA = "0x243ABD0")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600314B")]
		[Address(RVA = "0x243ABF0", Offset = "0x243ABF0", VA = "0x243ABF0")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600314C")]
		[Address(RVA = "0x243AC0C", Offset = "0x243AC0C", VA = "0x243AC0C")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600314D")]
		[Address(RVA = "0x243AC28", Offset = "0x243AC28", VA = "0x243AC28")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600314E")]
		[Address(RVA = "0x243AC44", Offset = "0x243AC44", VA = "0x243AC44")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600314F")]
		[Address(RVA = "0x243AC60", Offset = "0x243AC60", VA = "0x243AC60")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003150")]
		[Address(RVA = "0x243AC94", Offset = "0x243AC94", VA = "0x243AC94")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003151")]
		[Address(RVA = "0x243ACB0", Offset = "0x243ACB0", VA = "0x243ACB0")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003152")]
		[Address(RVA = "0x243ACD4", Offset = "0x243ACD4", VA = "0x243ACD4")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003153")]
		[Address(RVA = "0x243ACF8", Offset = "0x243ACF8", VA = "0x243ACF8")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6003154")]
		[Address(RVA = "0x243AD14", Offset = "0x243AD14", VA = "0x243AD14")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6003155")]
		[Address(RVA = "0x243AD30", Offset = "0x243AD30", VA = "0x243AD30")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003156")]
		[Address(RVA = "0x243AD4C", Offset = "0x243AD4C", VA = "0x243AD4C")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003157")]
		[Address(RVA = "0x243AD6C", Offset = "0x243AD6C", VA = "0x243AD6C")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6003158")]
		[Address(RVA = "0x243AD88", Offset = "0x243AD88", VA = "0x243AD88")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6003159")]
		[Address(RVA = "0x243ADA4", Offset = "0x243ADA4", VA = "0x243ADA4")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600315A")]
		[Address(RVA = "0x243ADC8", Offset = "0x243ADC8", VA = "0x243ADC8")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600315B")]
		[Address(RVA = "0x243ADF0", Offset = "0x243ADF0", VA = "0x243ADF0")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x600315C")]
		[Address(RVA = "0x243AE0C", Offset = "0x243AE0C", VA = "0x243AE0C")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x600315D")]
		[Address(RVA = "0x243AE28", Offset = "0x243AE28", VA = "0x243AE28")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x600315E")]
		[Address(RVA = "0x243AE44", Offset = "0x243AE44", VA = "0x243AE44")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x600315F")]
		[Address(RVA = "0x243AE60", Offset = "0x243AE60", VA = "0x243AE60")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003160")]
		[Address(RVA = "0x243AE7C", Offset = "0x243AE7C", VA = "0x243AE7C")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6003161")]
		[Address(RVA = "0x243AE9C", Offset = "0x243AE9C", VA = "0x243AE9C")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6003162")]
		[Address(RVA = "0x243AEB8", Offset = "0x243AEB8", VA = "0x243AEB8")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x200074F")]
	public class CVRRenderModels
	{
		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xE59258", Offset = "0xE59258")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000751")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4002752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4002753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6003167")]
		[Address(RVA = "0x243AED4", Offset = "0x243AED4", VA = "0x243AED4")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6003168")]
		[Address(RVA = "0x243B008", Offset = "0x243B008", VA = "0x243B008")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6003169")]
		[Address(RVA = "0x243B024", Offset = "0x243B024", VA = "0x243B024")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x600316A")]
		[Address(RVA = "0x243B040", Offset = "0x243B040", VA = "0x243B040")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600316B")]
		[Address(RVA = "0x243B05C", Offset = "0x243B05C", VA = "0x243B05C")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x600316C")]
		[Address(RVA = "0x243B078", Offset = "0x243B078", VA = "0x243B078")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600316D")]
		[Address(RVA = "0x243B094", Offset = "0x243B094", VA = "0x243B094")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600316E")]
		[Address(RVA = "0x243B0B0", Offset = "0x243B0B0", VA = "0x243B0B0")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x600316F")]
		[Address(RVA = "0x243B0CC", Offset = "0x243B0CC", VA = "0x243B0CC")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6003170")]
		[Address(RVA = "0x243B0E8", Offset = "0x243B0E8", VA = "0x243B0E8")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6003171")]
		[Address(RVA = "0x243B104", Offset = "0x243B104", VA = "0x243B104")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6003172")]
		[Address(RVA = "0x243B120", Offset = "0x243B120", VA = "0x243B120")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6003173")]
		[Address(RVA = "0x243B13C", Offset = "0x243B13C", VA = "0x243B13C")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6003174")]
		[Address(RVA = "0x243B158", Offset = "0x243B158", VA = "0x243B158")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6003175")]
		[Address(RVA = "0x243B174", Offset = "0x243B174", VA = "0x243B174")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6003176")]
		[Address(RVA = "0x243B2B4", Offset = "0x243B2B4", VA = "0x243B2B4")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003177")]
		[Address(RVA = "0x243B2D0", Offset = "0x243B2D0", VA = "0x243B2D0")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003178")]
		[Address(RVA = "0x243B2EC", Offset = "0x243B2EC", VA = "0x243B2EC")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003179")]
		[Address(RVA = "0x243B308", Offset = "0x243B308", VA = "0x243B308")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000752")]
	public class CVRNotifications
	{
		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x600317E")]
		[Address(RVA = "0x243A0A0", Offset = "0x243A0A0", VA = "0x243A0A0")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600317F")]
		[Address(RVA = "0x243A1C8", Offset = "0x243A1C8", VA = "0x243A1C8")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6003180")]
		[Address(RVA = "0x243A1EC", Offset = "0x243A1EC", VA = "0x243A1EC")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000753")]
	public class CVRSettings
	{
		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6003181")]
		[Address(RVA = "0x243B70C", Offset = "0x243B70C", VA = "0x243B70C")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6003182")]
		[Address(RVA = "0x243B840", Offset = "0x243B840", VA = "0x243B840")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6003183")]
		[Address(RVA = "0x243B8D0", Offset = "0x243B8D0", VA = "0x243B8D0")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6003184")]
		[Address(RVA = "0x243B8F0", Offset = "0x243B8F0", VA = "0x243B8F0")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6003185")]
		[Address(RVA = "0x243B910", Offset = "0x243B910", VA = "0x243B910")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6003186")]
		[Address(RVA = "0x243B92C", Offset = "0x243B92C", VA = "0x243B92C")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6003187")]
		[Address(RVA = "0x243B948", Offset = "0x243B948", VA = "0x243B948")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6003188")]
		[Address(RVA = "0x243B964", Offset = "0x243B964", VA = "0x243B964")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6003189")]
		[Address(RVA = "0x243B980", Offset = "0x243B980", VA = "0x243B980")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x600318A")]
		[Address(RVA = "0x243B99C", Offset = "0x243B99C", VA = "0x243B99C")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x600318B")]
		[Address(RVA = "0x243B9B8", Offset = "0x243B9B8", VA = "0x243B9B8")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600318C")]
		[Address(RVA = "0x243B9D4", Offset = "0x243B9D4", VA = "0x243B9D4")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600318D")]
		[Address(RVA = "0x243B9F0", Offset = "0x243B9F0", VA = "0x243B9F0")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000754")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x600318E")]
		[Address(RVA = "0x243B4F8", Offset = "0x243B4F8", VA = "0x243B4F8")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600318F")]
		[Address(RVA = "0x243B634", Offset = "0x243B634", VA = "0x243B634")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6003190")]
		[Address(RVA = "0x243B654", Offset = "0x243B654", VA = "0x243B654")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6003191")]
		[Address(RVA = "0x243B67C", Offset = "0x243B67C", VA = "0x243B67C")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6003192")]
		[Address(RVA = "0x243B698", Offset = "0x243B698", VA = "0x243B698")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6003193")]
		[Address(RVA = "0x243B6B4", Offset = "0x243B6B4", VA = "0x243B6B4")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6003194")]
		[Address(RVA = "0x243B6D0", Offset = "0x243B6D0", VA = "0x243B6D0")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6003195")]
		[Address(RVA = "0x243B6F0", Offset = "0x243B6F0", VA = "0x243B6F0")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000755")]
	public class CVRResources
	{
		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6003196")]
		[Address(RVA = "0x243B398", Offset = "0x243B398", VA = "0x243B398")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6003197")]
		[Address(RVA = "0x243B4C0", Offset = "0x243B4C0", VA = "0x243B4C0")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6003198")]
		[Address(RVA = "0x243B4DC", Offset = "0x243B4DC", VA = "0x243B4DC")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000756")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6003199")]
		[Address(RVA = "0x2439D70", Offset = "0x2439D70", VA = "0x2439D70")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600319A")]
		[Address(RVA = "0x2439EA0", Offset = "0x2439EA0", VA = "0x2439EA0")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600319B")]
		[Address(RVA = "0x2439EBC", Offset = "0x2439EBC", VA = "0x2439EBC")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600319C")]
		[Address(RVA = "0x2439ED8", Offset = "0x2439ED8", VA = "0x2439ED8")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000757")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x600319D")]
		[Address(RVA = "0x2307900", Offset = "0x2307900", VA = "0x2307900")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x600319E")]
		[Address(RVA = "0x2307994", Offset = "0x2307994", VA = "0x2307994")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x600319F")]
		[Address(RVA = "0x2307A08", Offset = "0x2307A08", VA = "0x2307A08")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60031A0")]
		[Address(RVA = "0x2307A88", Offset = "0x2307A88", VA = "0x2307A88")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60031A1")]
		[Address(RVA = "0x2307B78", Offset = "0x2307B78", VA = "0x2307B78")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60031A2")]
		[Address(RVA = "0x2307BFC", Offset = "0x2307BFC", VA = "0x2307BFC")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60031A3")]
		[Address(RVA = "0x2307CA8", Offset = "0x2307CA8", VA = "0x2307CA8")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60031A4")]
		[Address(RVA = "0x2307D48", Offset = "0x2307D48", VA = "0x2307D48")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60031A5")]
		[Address(RVA = "0x23085A4", Offset = "0x23085A4", VA = "0x23085A4")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000758")]
	public enum EVREye
	{
		[Token(Token = "0x400275A")]
		Eye_Left,
		[Token(Token = "0x400275B")]
		Eye_Right
	}
	[Token(Token = "0x2000759")]
	public enum ETextureType
	{
		[Token(Token = "0x400275D")]
		DirectX,
		[Token(Token = "0x400275E")]
		OpenGL,
		[Token(Token = "0x400275F")]
		Vulkan,
		[Token(Token = "0x4002760")]
		IOSurface,
		[Token(Token = "0x4002761")]
		DirectX12,
		[Token(Token = "0x4002762")]
		DXGISharedHandle
	}
	[Token(Token = "0x200075A")]
	public enum EColorSpace
	{
		[Token(Token = "0x4002764")]
		Auto,
		[Token(Token = "0x4002765")]
		Gamma,
		[Token(Token = "0x4002766")]
		Linear
	}
	[Token(Token = "0x200075B")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4002768")]
		Uninitialized = 1,
		[Token(Token = "0x4002769")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x400276A")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x400276B")]
		Running_OK = 200,
		[Token(Token = "0x400276C")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x200075C")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x400276E")]
		Invalid,
		[Token(Token = "0x400276F")]
		HMD,
		[Token(Token = "0x4002770")]
		Controller,
		[Token(Token = "0x4002771")]
		GenericTracker,
		[Token(Token = "0x4002772")]
		TrackingReference,
		[Token(Token = "0x4002773")]
		DisplayRedirect
	}
	[Token(Token = "0x200075D")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4002775")]
		Invalid,
		[Token(Token = "0x4002776")]
		LeftHand,
		[Token(Token = "0x4002777")]
		RightHand,
		[Token(Token = "0x4002778")]
		OptOut
	}
	[Token(Token = "0x200075E")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x400277A")]
		TrackingUniverseSeated,
		[Token(Token = "0x400277B")]
		TrackingUniverseStanding,
		[Token(Token = "0x400277C")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x200075F")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x400277E")]
		Prop_Invalid = 0,
		[Token(Token = "0x400277F")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4002780")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4002781")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4002782")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4002783")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4002784")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4002785")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4002786")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4002787")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4002788")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4002789")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x400278A")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x400278B")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x400278C")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x400278D")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x400278E")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x400278F")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4002790")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4002791")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4002792")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4002793")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4002794")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4002795")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4002796")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4002797")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4002798")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4002799")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x400279A")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x400279B")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x400279C")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x400279D")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x400279E")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x400279F")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x40027A0")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x40027A1")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x40027A2")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x40027A3")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x40027A4")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x40027A5")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x40027A6")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x40027A7")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x40027A8")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x40027A9")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x40027AA")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x40027AB")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x40027AC")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x40027AD")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x40027AE")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x40027AF")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x40027B0")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x40027B1")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x40027B2")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x40027B3")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x40027B4")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x40027B5")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x40027B6")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x40027B7")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x40027B8")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x40027B9")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x40027BA")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x40027BB")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x40027BC")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x40027BD")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x40027BE")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x40027BF")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x40027C0")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x40027C1")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x40027C2")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x40027C3")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x40027C4")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x40027C5")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x40027C6")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x40027C7")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x40027C8")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x40027C9")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x40027CA")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x40027CB")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x40027CC")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x40027CD")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x40027CE")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x40027CF")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x40027D0")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x40027D1")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x40027D2")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x40027D3")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x40027D4")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x40027D5")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x40027D6")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x40027D7")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x40027D8")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x40027D9")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x40027DA")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x40027DB")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x40027DC")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x40027DD")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x40027DE")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x40027DF")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x40027E0")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x40027E1")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x40027E2")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x40027E3")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x40027E4")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x40027E5")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x40027E6")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x40027E7")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x40027E8")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x40027E9")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x40027EA")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x40027EB")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x40027EC")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x40027ED")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x40027EE")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x40027EF")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x40027F0")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x40027F1")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x40027F2")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x40027F3")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x40027F4")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x40027F5")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x40027F6")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x40027F7")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x40027F8")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x40027F9")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x40027FA")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x40027FB")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x40027FC")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x40027FD")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x40027FE")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x40027FF")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4002800")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4002801")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4002802")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4002803")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4002804")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4002805")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4002806")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4002807")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4002808")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4002809")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000760")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x400280B")]
		TrackedProp_Success,
		[Token(Token = "0x400280C")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x400280D")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x400280E")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x400280F")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4002810")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4002811")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4002812")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4002813")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4002814")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4002815")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4002816")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4002817")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000761")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4002819")]
		Submit_Default = 0,
		[Token(Token = "0x400281A")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x400281B")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x400281C")]
		Submit_Reserved = 4,
		[Token(Token = "0x400281D")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x400281E")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000762")]
	public enum EVRState
	{
		[Token(Token = "0x4002820")]
		Undefined = -1,
		[Token(Token = "0x4002821")]
		Off,
		[Token(Token = "0x4002822")]
		Searching,
		[Token(Token = "0x4002823")]
		Searching_Alert,
		[Token(Token = "0x4002824")]
		Ready,
		[Token(Token = "0x4002825")]
		Ready_Alert,
		[Token(Token = "0x4002826")]
		NotReady,
		[Token(Token = "0x4002827")]
		Standby,
		[Token(Token = "0x4002828")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000763")]
	public enum EVREventType
	{
		[Token(Token = "0x400282A")]
		VREvent_None = 0,
		[Token(Token = "0x400282B")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x400282C")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x400282D")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x400282E")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x400282F")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4002830")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4002831")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4002832")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4002833")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4002834")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4002835")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4002836")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4002837")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4002838")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4002839")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x400283A")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x400283B")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x400283C")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x400283D")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x400283E")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x400283F")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4002840")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4002841")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4002842")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4002843")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4002844")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4002845")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4002846")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4002847")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4002848")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4002849")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x400284A")]
		VREvent_Scroll = 305,
		[Token(Token = "0x400284B")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x400284C")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x400284D")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x400284E")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x400284F")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4002850")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4002851")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4002852")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4002853")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4002854")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4002855")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4002856")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4002857")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4002858")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4002859")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x400285A")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x400285B")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x400285C")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x400285D")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x400285E")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x400285F")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4002860")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4002861")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4002862")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4002863")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4002864")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4002865")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4002866")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4002867")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4002868")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4002869")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x400286A")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x400286B")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x400286C")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x400286D")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x400286E")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x400286F")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4002870")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4002871")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4002872")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4002873")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4002874")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4002875")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4002876")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4002877")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4002878")]
		VREvent_Quit = 700,
		[Token(Token = "0x4002879")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x400287A")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x400287B")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x400287C")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x400287D")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x400287E")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x400287F")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4002880")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4002881")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4002882")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4002883")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4002884")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4002885")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4002886")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4002887")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4002888")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4002889")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x400288A")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x400288B")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x400288C")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x400288D")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x400288E")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x400288F")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4002890")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4002891")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4002892")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4002893")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4002894")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4002895")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4002896")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4002897")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4002898")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4002899")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x400289A")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x400289B")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x400289C")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x400289D")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x400289E")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x400289F")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x40028A0")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x40028A1")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x40028A2")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x40028A3")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x40028A4")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x40028A5")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x40028A6")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x40028A7")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x40028A8")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x40028A9")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x40028AA")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x40028AB")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x40028AC")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x40028AD")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x40028AE")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x40028AF")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x40028B0")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x40028B1")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x40028B2")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40028B3")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000764")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x40028B5")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x40028B6")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x40028B7")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x40028B8")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x40028B9")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000765")]
	public enum EVRButtonId
	{
		[Token(Token = "0x40028BB")]
		k_EButton_System = 0,
		[Token(Token = "0x40028BC")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x40028BD")]
		k_EButton_Grip = 2,
		[Token(Token = "0x40028BE")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x40028BF")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x40028C0")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x40028C1")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x40028C2")]
		k_EButton_A = 7,
		[Token(Token = "0x40028C3")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x40028C4")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x40028C5")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x40028C6")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x40028C7")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x40028C8")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x40028C9")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x40028CA")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x40028CB")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x40028CC")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000766")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x40028CE")]
		Left = 1,
		[Token(Token = "0x40028CF")]
		Right = 2,
		[Token(Token = "0x40028D0")]
		Middle = 4
	}
	[Token(Token = "0x2000767")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x40028D2")]
		k_EDualAnalog_Left,
		[Token(Token = "0x40028D3")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000768")]
	public enum EVRInputError
	{
		[Token(Token = "0x40028D5")]
		None,
		[Token(Token = "0x40028D6")]
		NameNotFound,
		[Token(Token = "0x40028D7")]
		WrongType,
		[Token(Token = "0x40028D8")]
		InvalidHandle,
		[Token(Token = "0x40028D9")]
		InvalidParam,
		[Token(Token = "0x40028DA")]
		NoSteam,
		[Token(Token = "0x40028DB")]
		MaxCapacityReached,
		[Token(Token = "0x40028DC")]
		IPCError,
		[Token(Token = "0x40028DD")]
		NoActiveActionSet,
		[Token(Token = "0x40028DE")]
		InvalidDevice
	}
	[Token(Token = "0x2000769")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x40028E0")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x40028E1")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x40028E2")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x40028E3")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x200076A")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x40028E5")]
		k_eControllerAxis_None,
		[Token(Token = "0x40028E6")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x40028E7")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x40028E8")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x200076B")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x40028EA")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x40028EB")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x200076C")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x40028ED")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x40028EE")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x40028EF")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x40028F0")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x40028F1")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x40028F2")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x200076D")]
	public enum EVROverlayError
	{
		[Token(Token = "0x40028F4")]
		None = 0,
		[Token(Token = "0x40028F5")]
		UnknownOverlay = 10,
		[Token(Token = "0x40028F6")]
		InvalidHandle = 11,
		[Token(Token = "0x40028F7")]
		PermissionDenied = 12,
		[Token(Token = "0x40028F8")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x40028F9")]
		WrongVisibilityType = 14,
		[Token(Token = "0x40028FA")]
		KeyTooLong = 15,
		[Token(Token = "0x40028FB")]
		NameTooLong = 16,
		[Token(Token = "0x40028FC")]
		KeyInUse = 17,
		[Token(Token = "0x40028FD")]
		WrongTransformType = 18,
		[Token(Token = "0x40028FE")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x40028FF")]
		InvalidParameter = 20,
		[Token(Token = "0x4002900")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4002901")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4002902")]
		RequestFailed = 23,
		[Token(Token = "0x4002903")]
		InvalidTexture = 24,
		[Token(Token = "0x4002904")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4002905")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4002906")]
		NoNeighbor = 27,
		[Token(Token = "0x4002907")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4002908")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4002909")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x400290A")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x400290B")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x200076E")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x400290D")]
		VRApplication_Other,
		[Token(Token = "0x400290E")]
		VRApplication_Scene,
		[Token(Token = "0x400290F")]
		VRApplication_Overlay,
		[Token(Token = "0x4002910")]
		VRApplication_Background,
		[Token(Token = "0x4002911")]
		VRApplication_Utility,
		[Token(Token = "0x4002912")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4002913")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4002914")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4002915")]
		VRApplication_Max
	}
	[Token(Token = "0x200076F")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4002917")]
		None,
		[Token(Token = "0x4002918")]
		Success,
		[Token(Token = "0x4002919")]
		Fail
	}
	[Token(Token = "0x2000770")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x400291B")]
		OK = 0,
		[Token(Token = "0x400291C")]
		InvalidNotificationId = 100,
		[Token(Token = "0x400291D")]
		NotificationQueueFull = 101,
		[Token(Token = "0x400291E")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x400291F")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000771")]
	public enum EVRInitError
	{
		[Token(Token = "0x4002921")]
		None = 0,
		[Token(Token = "0x4002922")]
		Unknown = 1,
		[Token(Token = "0x4002923")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4002924")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4002925")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4002926")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4002927")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4002928")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4002929")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x400292A")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x400292B")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x400292C")]
		Init_NotInitialized = 109,
		[Token(Token = "0x400292D")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x400292E")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x400292F")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4002930")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4002931")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4002932")]
		Init_Retry = 115,
		[Token(Token = "0x4002933")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4002934")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4002935")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4002936")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4002937")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4002938")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4002939")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x400293A")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x400293B")]
		Init_Internal = 124,
		[Token(Token = "0x400293C")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x400293D")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x400293E")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x400293F")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4002940")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4002941")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4002942")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4002943")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4002944")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4002945")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4002946")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4002947")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4002948")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4002949")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x400294A")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x400294B")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x400294C")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x400294D")]
		Driver_Failed = 200,
		[Token(Token = "0x400294E")]
		Driver_Unknown = 201,
		[Token(Token = "0x400294F")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4002950")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4002951")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4002952")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4002953")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4002954")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4002955")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4002956")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4002957")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4002958")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4002959")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x400295A")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x400295B")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x400295C")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x400295D")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x400295E")]
		IPC_Failed = 305,
		[Token(Token = "0x400295F")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4002960")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4002961")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4002962")]
		Compositor_Failed = 400,
		[Token(Token = "0x4002963")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4002964")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4002965")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4002966")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4002967")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4002968")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4002969")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x400296A")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x400296B")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x400296C")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x400296D")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x400296E")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x400296F")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4002970")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4002971")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4002972")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4002973")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4002974")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4002975")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4002976")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4002977")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000772")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4002979")]
		None,
		[Token(Token = "0x400297A")]
		Mono,
		[Token(Token = "0x400297B")]
		Stereo,
		[Token(Token = "0x400297C")]
		Cubemap,
		[Token(Token = "0x400297D")]
		MonoPanorama,
		[Token(Token = "0x400297E")]
		StereoPanorama
	}
	[Token(Token = "0x2000773")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4002980")]
		Preview,
		[Token(Token = "0x4002981")]
		VR
	}
	[Token(Token = "0x2000774")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4002983")]
		None = 0,
		[Token(Token = "0x4002984")]
		OperationFailed = 100,
		[Token(Token = "0x4002985")]
		InvalidHandle = 101,
		[Token(Token = "0x4002986")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4002987")]
		OutOfHandles = 103,
		[Token(Token = "0x4002988")]
		IPCFailure = 104,
		[Token(Token = "0x4002989")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x400298A")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x400298B")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x400298C")]
		StreamSetupFailure = 108,
		[Token(Token = "0x400298D")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x400298E")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x400298F")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4002990")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4002991")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4002992")]
		InvalidArgument = 114,
		[Token(Token = "0x4002993")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000775")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4002995")]
		Distorted,
		[Token(Token = "0x4002996")]
		Undistorted,
		[Token(Token = "0x4002997")]
		MaximumUndistorted,
		[Token(Token = "0x4002998")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000776")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x400299A")]
		None = 0,
		[Token(Token = "0x400299B")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x400299C")]
		NoManifest = 101,
		[Token(Token = "0x400299D")]
		NoApplication = 102,
		[Token(Token = "0x400299E")]
		InvalidIndex = 103,
		[Token(Token = "0x400299F")]
		UnknownApplication = 104,
		[Token(Token = "0x40029A0")]
		IPCFailed = 105,
		[Token(Token = "0x40029A1")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x40029A2")]
		InvalidManifest = 107,
		[Token(Token = "0x40029A3")]
		InvalidApplication = 108,
		[Token(Token = "0x40029A4")]
		LaunchFailed = 109,
		[Token(Token = "0x40029A5")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x40029A6")]
		LaunchInProgress = 111,
		[Token(Token = "0x40029A7")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x40029A8")]
		TransitionAborted = 113,
		[Token(Token = "0x40029A9")]
		IsTemplate = 114,
		[Token(Token = "0x40029AA")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x40029AB")]
		BufferTooSmall = 200,
		[Token(Token = "0x40029AC")]
		PropertyNotSet = 201,
		[Token(Token = "0x40029AD")]
		UnknownProperty = 202,
		[Token(Token = "0x40029AE")]
		InvalidParameter = 203
	}
	[Token(Token = "0x2000777")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x40029B0")]
		Name_String = 0,
		[Token(Token = "0x40029B1")]
		LaunchType_String = 11,
		[Token(Token = "0x40029B2")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x40029B3")]
		BinaryPath_String = 13,
		[Token(Token = "0x40029B4")]
		Arguments_String = 14,
		[Token(Token = "0x40029B5")]
		URL_String = 15,
		[Token(Token = "0x40029B6")]
		Description_String = 50,
		[Token(Token = "0x40029B7")]
		NewsURL_String = 51,
		[Token(Token = "0x40029B8")]
		ImagePath_String = 52,
		[Token(Token = "0x40029B9")]
		Source_String = 53,
		[Token(Token = "0x40029BA")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x40029BB")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x40029BC")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x40029BD")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x40029BE")]
		IsInternal_Bool = 63,
		[Token(Token = "0x40029BF")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x40029C0")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x2000778")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x40029C2")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x40029C3")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x40029C4")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x40029C5")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x2000779")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x40029C7")]
		OK = 1,
		[Token(Token = "0x40029C8")]
		Warning = 100,
		[Token(Token = "0x40029C9")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x40029CA")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x40029CB")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x40029CC")]
		Error = 200,
		[Token(Token = "0x40029CD")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x40029CE")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x40029CF")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x40029D0")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x200077A")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x40029D2")]
		Live = 1,
		[Token(Token = "0x40029D3")]
		Temp
	}
	[Token(Token = "0x200077B")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x40029D5")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x200077C")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x40029D7")]
		None = 0,
		[Token(Token = "0x40029D8")]
		RequestFailed = 1,
		[Token(Token = "0x40029D9")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40029DA")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x40029DB")]
		InvalidTexture = 102,
		[Token(Token = "0x40029DC")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x40029DD")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x40029DE")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x40029DF")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x40029E0")]
		IndexOutOfRange = 107,
		[Token(Token = "0x40029E1")]
		AlreadySubmitted = 108,
		[Token(Token = "0x40029E2")]
		InvalidBounds = 109
	}
	[Token(Token = "0x200077D")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x40029E4")]
		Implicit,
		[Token(Token = "0x40029E5")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x40029E6")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x200077E")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x40029E8")]
		None,
		[Token(Token = "0x40029E9")]
		Mouse,
		[Token(Token = "0x40029EA")]
		DualAnalog
	}
	[Token(Token = "0x200077F")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x40029EC")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x40029ED")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x40029EE")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x40029EF")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000780")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x40029F1")]
		None,
		[Token(Token = "0x40029F2")]
		Curved,
		[Token(Token = "0x40029F3")]
		RGSS4X,
		[Token(Token = "0x40029F4")]
		NoDashboardTab,
		[Token(Token = "0x40029F5")]
		AcceptsGamepadEvents,
		[Token(Token = "0x40029F6")]
		ShowGamepadFocus,
		[Token(Token = "0x40029F7")]
		SendVRScrollEvents,
		[Token(Token = "0x40029F8")]
		SendVRTouchpadEvents,
		[Token(Token = "0x40029F9")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x40029FA")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x40029FB")]
		SideBySide_Parallel,
		[Token(Token = "0x40029FC")]
		SideBySide_Crossed,
		[Token(Token = "0x40029FD")]
		Panorama,
		[Token(Token = "0x40029FE")]
		StereoPanorama,
		[Token(Token = "0x40029FF")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4002A00")]
		VisibleInDashboard
	}
	[Token(Token = "0x2000781")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4002A02")]
		ButtonPress_0,
		[Token(Token = "0x4002A03")]
		ButtonPress_1,
		[Token(Token = "0x4002A04")]
		ButtonPress_2,
		[Token(Token = "0x4002A05")]
		ButtonPress_3,
		[Token(Token = "0x4002A06")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4002A07")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4002A08")]
		ApplicationQuit
	}
	[Token(Token = "0x2000782")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4002A0A")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4002A0B")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4002A0C")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000783")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4002A0E")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4002A0F")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000784")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4002A11")]
		Up,
		[Token(Token = "0x4002A12")]
		Down,
		[Token(Token = "0x4002A13")]
		Left,
		[Token(Token = "0x4002A14")]
		Right,
		[Token(Token = "0x4002A15")]
		Count
	}
	[Token(Token = "0x2000785")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4002A17")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4002A18")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x2000786")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4002A1A")]
		None = 0,
		[Token(Token = "0x4002A1B")]
		Loading = 100,
		[Token(Token = "0x4002A1C")]
		NotSupported = 200,
		[Token(Token = "0x4002A1D")]
		InvalidArg = 300,
		[Token(Token = "0x4002A1E")]
		InvalidModel = 301,
		[Token(Token = "0x4002A1F")]
		NoShapes = 302,
		[Token(Token = "0x4002A20")]
		MultipleShapes = 303,
		[Token(Token = "0x4002A21")]
		TooManyVertices = 304,
		[Token(Token = "0x4002A22")]
		MultipleTextures = 305,
		[Token(Token = "0x4002A23")]
		BufferTooSmall = 306,
		[Token(Token = "0x4002A24")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4002A25")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4002A26")]
		InvalidTexture = 400
	}
	[Token(Token = "0x2000787")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4002A28")]
		IsStatic = 1,
		[Token(Token = "0x4002A29")]
		IsVisible = 2,
		[Token(Token = "0x4002A2A")]
		IsTouched = 4,
		[Token(Token = "0x4002A2B")]
		IsPressed = 8,
		[Token(Token = "0x4002A2C")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x2000788")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4002A2E")]
		Transient,
		[Token(Token = "0x4002A2F")]
		Persistent,
		[Token(Token = "0x4002A30")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x2000789")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4002A32")]
		None = 0,
		[Token(Token = "0x4002A33")]
		Application = 100,
		[Token(Token = "0x4002A34")]
		Contact_Disabled = 200,
		[Token(Token = "0x4002A35")]
		Contact_Enabled = 201,
		[Token(Token = "0x4002A36")]
		Contact_Active = 202
	}
	[Token(Token = "0x200078A")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4002A38")]
		None,
		[Token(Token = "0x4002A39")]
		IPCFailed,
		[Token(Token = "0x4002A3A")]
		WriteFailed,
		[Token(Token = "0x4002A3B")]
		ReadFailed,
		[Token(Token = "0x4002A3C")]
		JsonParseFailed,
		[Token(Token = "0x4002A3D")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x200078B")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4002A3F")]
		None = 0,
		[Token(Token = "0x4002A40")]
		RequestFailed = 1,
		[Token(Token = "0x4002A41")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4002A42")]
		NotFound = 101,
		[Token(Token = "0x4002A43")]
		BufferTooSmall = 102,
		[Token(Token = "0x4002A44")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200078C")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200078D")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x200078E")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x200078F")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000790")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000791")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000792")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000793")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000794")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000795")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000796")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000797")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000798")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000799")]
	public struct Texture_t
	{
		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x200079A")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x200079B")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x200079C")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x200079D")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x200079E")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200079F")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20007A0")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20007A1")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20007A2")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20007A3")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20007A4")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20007A5")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20007A6")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x20007A7")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x20007A8")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x20007A9")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x20007AA")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x20007AB")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x20007AC")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x20007AD")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x20007AE")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x20007AF")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x20007B0")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x20007B1")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x20007B2")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x20007B3")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x20007B4")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x20007B5")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x20007B6")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x20007B7")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x20007B8")]
	public struct VREvent_t
	{
		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x20007B9")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60031A6")]
		[Address(RVA = "0x23770F0", Offset = "0x23770F0", VA = "0x23770F0")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60031A7")]
		[Address(RVA = "0x2377130", Offset = "0x2377130", VA = "0x2377130")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x20007BA")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x20007BB")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x20007BC")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x20007BD")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60031A8")]
		[Address(RVA = "0x2375AC0", Offset = "0x2375AC0", VA = "0x2375AC0")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60031A9")]
		[Address(RVA = "0x2375B04", Offset = "0x2375B04", VA = "0x2375B04")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4002B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x20007BF")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x20007C0")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x20007C1")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x20007C2")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4002B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4002B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4002B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4002B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4002B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x20007C3")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x20007C4")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4002B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4002B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x20007C5")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x20007C6")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x20007C7")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x20007C8")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x20007C9")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x20007CA")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x20007CB")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x20007CC")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60031AA")]
		[Address(RVA = "0x2720A4C", Offset = "0x2720A4C", VA = "0x2720A4C")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60031AB")]
		[Address(RVA = "0x2720A60", Offset = "0x2720A60", VA = "0x2720A60")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x20007CD")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4002B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x20007CE")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4002B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4002B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60031AC")]
		[Address(RVA = "0x2720A7C", Offset = "0x2720A7C", VA = "0x2720A7C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60031AD")]
		[Address(RVA = "0x2720AA8", Offset = "0x2720AA8", VA = "0x2720AA8")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x20007CF")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x20007D0")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x20007D1")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x20007D2")]
	public class OpenVR
	{
		[Token(Token = "0x20007D3")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4002C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4002C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4002C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60031C8")]
			[Address(RVA = "0x205D140", Offset = "0x205D140", VA = "0x205D140")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60031C9")]
			[Address(RVA = "0x205D168", Offset = "0x205D168", VA = "0x205D168")]
			public void Clear()
			{
			}

			[Token(Token = "0x60031CA")]
			[Address(RVA = "0x205D22C", Offset = "0x205D22C", VA = "0x205D22C")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60031CB")]
			[Address(RVA = "0x205D354", Offset = "0x205D354", VA = "0x205D354")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60031CC")]
			[Address(RVA = "0x205D430", Offset = "0x205D430", VA = "0x205D430")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0x205D50C", Offset = "0x205D50C", VA = "0x205D50C")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60031CE")]
			[Address(RVA = "0x205D5E8", Offset = "0x205D5E8", VA = "0x205D5E8")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60031CF")]
			[Address(RVA = "0x205D6C4", Offset = "0x205D6C4", VA = "0x205D6C4")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60031D0")]
			[Address(RVA = "0x205D7A0", Offset = "0x205D7A0", VA = "0x205D7A0")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60031D1")]
			[Address(RVA = "0x205D87C", Offset = "0x205D87C", VA = "0x205D87C")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60031D2")]
			[Address(RVA = "0x205D958", Offset = "0x205D958", VA = "0x205D958")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60031D3")]
			[Address(RVA = "0x205DA34", Offset = "0x205DA34", VA = "0x205DA34")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60031D4")]
			[Address(RVA = "0x205DB10", Offset = "0x205DB10", VA = "0x205DB10")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0x205DBEC", Offset = "0x205DBEC", VA = "0x205DBEC")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4002B8A")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4002B8B")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4002B8C")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4002B8D")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4002B8E")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4002B8F")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4002B90")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4002B91")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4002B92")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4002B93")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4002B94")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4002B95")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4002B96")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4002B97")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4002B98")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4002B99")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4002B9A")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4002B9B")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4002B9C")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4002B9D")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4002B9E")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4002B9F")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4002BA0")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4002BA1")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4002BA2")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4002BA3")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4002BA4")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4002BA5")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4002BA6")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4002BA7")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4002BA8")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4002BA9")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4002BAA")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4002BAB")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4002BAC")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4002BAD")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4002BAE")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4002BAF")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4002BB0")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4002BB1")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4002BB2")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4002BB3")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4002BB4")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4002BB5")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4002BB6")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4002BB7")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4002BB8")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4002BB9")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4002BBA")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4002BBB")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4002BBC")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4002BBD")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4002BBE")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4002BBF")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4002BC0")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4002BC1")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4002BC2")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4002BC3")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4002BC4")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4002BC5")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4002BC6")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4002BC7")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4002BC8")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4002BC9")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4002BCA")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4002BCB")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4002BCC")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4002BCD")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4002BCE")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4002BCF")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4002BD0")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4002BD1")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4002BD2")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4002BD3")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4002BD4")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4002BD5")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4002BD6")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4002BD7")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4002BD8")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4002BD9")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4002BDA")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4002BDB")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4002BDC")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4002BDD")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4002BDE")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4002BDF")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4002BE0")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4002BE1")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4002BE2")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4002BE3")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4002BE4")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4002BE5")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4002BE6")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4002BE7")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4002BE8")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4002BE9")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4002BEA")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4002BEB")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4002BEC")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4002BED")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4002BEE")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4002BEF")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4002BF0")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4002BF1")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4002BF2")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4002BF3")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4002BF4")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4002BF5")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4002BF6")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4002BF7")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4002BF8")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4002BF9")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4002BFA")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4002BFB")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4002BFC")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4002BFD")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4002BFE")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4002BFF")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4002C00")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4002C01")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4002C02")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4002C03")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4002C04")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4002C05")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4002C06")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4002C07")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4002C08")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4002C09")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4002C0A")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4002C0B")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4002C0C")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4002C0D")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4002C0E")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4002C0F")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4002C10")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4002C11")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4002C12")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4002C13")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4002C14")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4002C15")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4002C16")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4002C17")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4002C18")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4002C19")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4002C1A")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4002C1B")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4002C1C")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4002C1D")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4002C1E")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4002C1F")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4002C20")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4002C21")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4002C22")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4002C23")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4002C24")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4002C25")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4002C26")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4002C27")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4002C28")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4002C29")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4002C2A")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4002C2B")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4002C2C")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4002C2D")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4002C2E")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4002C2F")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4002C30")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4002C31")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4002C32")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4002C33")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4002C34")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4002C35")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4002C36")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4002C37")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4002C38")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4002C39")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4002C3A")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4002C3B")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4002C3C")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4002C3D")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4002C3E")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4002C3F")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4002C40")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4002C41")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4002C42")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4002C43")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4002C44")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4002C45")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4002C46")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4002C47")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4002C48")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE66D0C", Offset = "0xE66D0C")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4002C4A")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x17000492")]
		private static uint VRToken
		{
			[Token(Token = "0x60031B6")]
			[Address(RVA = "0x2307DBC", Offset = "0x2307DBC", VA = "0x2307DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F03C", Offset = "0xE6F03C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x2307E20", Offset = "0x2307E20", VA = "0x2307E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F04C", Offset = "0xE6F04C")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x2307E88", Offset = "0x2307E88", VA = "0x2307E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		public static CVRSystem System
		{
			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x2307F68", Offset = "0x2307F68", VA = "0x2307F68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x2307FD0", Offset = "0x2307FD0", VA = "0x2307FD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60031BB")]
			[Address(RVA = "0x2308038", Offset = "0x2308038", VA = "0x2308038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000497")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60031BC")]
			[Address(RVA = "0x23080A0", Offset = "0x23080A0", VA = "0x23080A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60031BD")]
			[Address(RVA = "0x2308108", Offset = "0x2308108", VA = "0x2308108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000499")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60031BE")]
			[Address(RVA = "0x2308170", Offset = "0x2308170", VA = "0x2308170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60031BF")]
			[Address(RVA = "0x23081D8", Offset = "0x23081D8", VA = "0x23081D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049B")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60031C0")]
			[Address(RVA = "0x2308240", Offset = "0x2308240", VA = "0x2308240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60031C1")]
			[Address(RVA = "0x23082A8", Offset = "0x23082A8", VA = "0x23082A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049D")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60031C2")]
			[Address(RVA = "0x2308310", Offset = "0x2308310", VA = "0x2308310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60031C3")]
			[Address(RVA = "0x2308378", Offset = "0x2308378", VA = "0x2308378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031AE")]
		[Address(RVA = "0x23078FC", Offset = "0x23078FC", VA = "0x23078FC")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60031AF")]
		[Address(RVA = "0x2307990", Offset = "0x2307990", VA = "0x2307990")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60031B0")]
		[Address(RVA = "0x2307A04", Offset = "0x2307A04", VA = "0x2307A04")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60031B1")]
		[Address(RVA = "0x2307A84", Offset = "0x2307A84", VA = "0x2307A84")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60031B2")]
		[Address(RVA = "0x2307B04", Offset = "0x2307B04", VA = "0x2307B04")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60031B3")]
		[Address(RVA = "0x2307BF8", Offset = "0x2307BF8", VA = "0x2307BF8")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60031B4")]
		[Address(RVA = "0x2307CA4", Offset = "0x2307CA4", VA = "0x2307CA4")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60031B5")]
		[Address(RVA = "0x2307D44", Offset = "0x2307D44", VA = "0x2307D44")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60031C4")]
		[Address(RVA = "0x23083E0", Offset = "0x23083E0", VA = "0x23083E0")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60031C5")]
		[Address(RVA = "0x2308540", Offset = "0x2308540", VA = "0x2308540")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60031C6")]
		[Address(RVA = "0x2308598", Offset = "0x2308598", VA = "0x2308598")]
		public OpenVR()
		{
		}
	}
}
namespace ReachableGames.AutoProbe
{
	[Token(Token = "0x20007D4")]
	[ExecuteInEditMode]
	public class AutoProbe : MonoBehaviour
	{
		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x29002F0", Offset = "0x29002F0", VA = "0x29002F0")]
		public AutoProbe()
		{
		}
	}
	[Token(Token = "0x20007D5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5927C", Offset = "0xE5927C")]
	public class ForceLightProbeHere : MonoBehaviour
	{
		[Token(Token = "0x60031D7")]
		[Address(RVA = "0x2243AC4", Offset = "0x2243AC4", VA = "0x2243AC4")]
		public ForceLightProbeHere()
		{
		}
	}
}
namespace Knife.RealBlood
{
	[Token(Token = "0x20007D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE592EC", Offset = "0xE592EC")]
	public class DecalsOnParticleCollision : MonoBehaviour
	{
		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject DecalPrefab;

		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] DecalPrefabs;

		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool randomPrefab;

		[Token(Token = "0x4002C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool randomRotation;

		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minScale;

		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxScale;

		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4002C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scaleOverTime;

		[Token(Token = "0x4002C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float destroyDelay;

		[Token(Token = "0x4002C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem system;

		[Token(Token = "0x4002C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float enabledTime;

		[Token(Token = "0x4002C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float scale;

		[Token(Token = "0x60031D8")]
		[Address(RVA = "0x21CDB24", Offset = "0x21CDB24", VA = "0x21CDB24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60031D9")]
		[Address(RVA = "0x21CDB80", Offset = "0x21CDB80", VA = "0x21CDB80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x21CDBA8", Offset = "0x21CDBA8", VA = "0x21CDBA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60031DB")]
		[Address(RVA = "0x21CDBF4", Offset = "0x21CDBF4", VA = "0x21CDBF4")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x21CDF70", Offset = "0x21CDF70", VA = "0x21CDF70")]
		public DecalsOnParticleCollision()
		{
		}
	}
}
namespace Knife.Effects
{
	[Token(Token = "0x20007D7")]
	[ExecuteInEditMode]
	public class AutoFire : MonoBehaviour
	{
		[Token(Token = "0x4002C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66D1C", Offset = "0xE66D1C")]
		private float bulletSize;

		[Token(Token = "0x4002C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66D68", Offset = "0xE66D68")]
		[SerializeField]
		private GameObject enableOnFire;

		[Token(Token = "0x4002C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66DB4", Offset = "0xE66DB4")]
		private bool saveHitPoint;

		[Token(Token = "0x4002C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66E00", Offset = "0xE66E00")]
		private bool loadHitPoint;

		[Token(Token = "0x4002C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66E4C", Offset = "0xE66E4C")]
		private Vector3 savedHitPoint;

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66E98", Offset = "0xE66E98")]
		private Vector3 lastHitPoint;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject projectile;

		[Token(Token = "0x60031DD")]
		[Address(RVA = "0x28FFC44", Offset = "0x28FFC44", VA = "0x28FFC44")]
		public void Fire()
		{
		}

		[Token(Token = "0x60031DE")]
		[Address(RVA = "0x29000AC", Offset = "0x29000AC", VA = "0x29000AC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60031DF")]
		[Address(RVA = "0x29000C8", Offset = "0x29000C8", VA = "0x29000C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60031E0")]
		[Address(RVA = "0x2900114", Offset = "0x2900114", VA = "0x2900114")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60031E1")]
		[Address(RVA = "0x28FFFA0", Offset = "0x28FFFA0", VA = "0x28FFFA0")]
		private RaycastHit Raycast()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60031E2")]
		[Address(RVA = "0x29002E0", Offset = "0x29002E0", VA = "0x29002E0")]
		public AutoFire()
		{
		}
	}
	[Token(Token = "0x20007D8")]
	public class AutofireRunner : MonoBehaviour
	{
		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5935C", Offset = "0xE5935C")]
		private sealed class <AutofireWithInterval>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutofireRunner <>4__this;

			[Token(Token = "0x4002C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AutoFire[] <>7__wrap1;

			[Token(Token = "0x4002C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x1700049F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031EA")]
				[Address(RVA = "0x20F1654", Offset = "0x20F1654", VA = "0x20F1654", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031EC")]
				[Address(RVA = "0x20F169C", Offset = "0x20F169C", VA = "0x20F169C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E7")]
			[Address(RVA = "0x20F14EC", Offset = "0x20F14EC", VA = "0x20F14EC")]
			[DebuggerHidden]
			public <AutofireWithInterval>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60031E8")]
			[Address(RVA = "0x20F1518", Offset = "0x20F1518", VA = "0x20F1518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E9")]
			[Address(RVA = "0x20F151C", Offset = "0x20F151C", VA = "0x20F151C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031EB")]
			[Address(RVA = "0x20F165C", Offset = "0x20F165C", VA = "0x20F165C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66EF4", Offset = "0xE66EF4")]
		[SerializeField]
		private AutoFire[] autoFires;

		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66F40", Offset = "0xE66F40")]
		[SerializeField]
		private float interval;

		[Token(Token = "0x60031E3")]
		[Address(RVA = "0x29002F8", Offset = "0x29002F8", VA = "0x29002F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60031E4")]
		[Address(RVA = "0x290039C", Offset = "0x290039C", VA = "0x290039C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60031E5")]
		[Address(RVA = "0x2900324", Offset = "0x2900324", VA = "0x2900324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F05C", Offset = "0xE6F05C")]
		private IEnumerator AutofireWithInterval()
		{
			return null;
		}

		[Token(Token = "0x60031E6")]
		[Address(RVA = "0x29003A4", Offset = "0x29003A4", VA = "0x29003A4")]
		public AutofireRunner()
		{
		}
	}
	[Token(Token = "0x20007DA")]
	public struct DamageData
	{
		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float amount;

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 point;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 normal;

		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 direction;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float size;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public DamageTypes damageType;
	}
	[Token(Token = "0x20007DB")]
	public enum DamageTypes
	{
		[Token(Token = "0x4002C79")]
		Bullet,
		[Token(Token = "0x4002C7A")]
		Explosion
	}
	[Token(Token = "0x20007DC")]
	public interface IAutoPlacer
	{
		[Token(Token = "0x60031ED")]
		void AutoPlace();
	}
	[Token(Token = "0x20007DD")]
	public interface IBlinder
	{
		[Token(Token = "0x60031EE")]
		void Blind(float amount, Vector3 point);
	}
	[Token(Token = "0x20007DE")]
	public interface ICollisionHandler
	{
		[Token(Token = "0x60031EF")]
		void CollisionEnter(Collision collision);
	}
	[Token(Token = "0x20007DF")]
	public interface IHittable
	{
		[Token(Token = "0x60031F0")]
		void TakeDamage(DamageData[] damage);
	}
	[Token(Token = "0x20007E0")]
	public class RadialMover : MonoBehaviour, ISmoothPhysics
	{
		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float fullRadiusTime;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float animationDuration;

		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool fixedUpdate;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool smoothPhysics;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[SerializeField]
		private bool randomStartOffset;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[SerializeField]
		private bool randomDirection;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float elapsedTime;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float offset;

		[Token(Token = "0x4002C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float direction;

		[Token(Token = "0x60031F1")]
		[Address(RVA = "0x2713958", Offset = "0x2713958", VA = "0x2713958", Slot = "4")]
		public void UpdateSmoothly(float deltaTime)
		{
		}

		[Token(Token = "0x60031F2")]
		[Address(RVA = "0x2713A7C", Offset = "0x2713A7C", VA = "0x2713A7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60031F3")]
		[Address(RVA = "0x2713AD8", Offset = "0x2713AD8", VA = "0x2713AD8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60031F4")]
		[Address(RVA = "0x2713B1C", Offset = "0x2713B1C", VA = "0x2713B1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60031F5")]
		[Address(RVA = "0x2713968", Offset = "0x2713968", VA = "0x2713968")]
		private void UpdateTrail(float deltaTime)
		{
		}

		[Token(Token = "0x60031F6")]
		[Address(RVA = "0x2713B60", Offset = "0x2713B60", VA = "0x2713B60")]
		public RadialMover()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public class SimpleDecal : MonoBehaviour, IDecal
	{
		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE66FFC", Offset = "0xE66FFC")]
		private bool canRotate;

		[Token(Token = "0x170004A1")]
		public bool CanRotate
		{
			[Token(Token = "0x60031F7")]
			[Address(RVA = "0x215EBF8", Offset = "0x215EBF8", VA = "0x215EBF8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60031F8")]
		[Address(RVA = "0x215EC00", Offset = "0x215EC00", VA = "0x215EC00")]
		public SimpleDecal()
		{
		}
	}
	[Token(Token = "0x20007E2")]
	public interface IDecal
	{
		[Token(Token = "0x170004A2")]
		bool CanRotate
		{
			[Token(Token = "0x60031F9")]
			get;
		}
	}
	[Token(Token = "0x20007E3")]
	public class TimeController : MonoBehaviour
	{
		[Token(Token = "0x4002C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67048", Offset = "0xE67048")]
		private float targetScale;

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67094", Offset = "0xE67094")]
		private float blendSpeed;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isActivated;

		[Token(Token = "0x60031FA")]
		[Address(RVA = "0x2AB609C", Offset = "0x2AB609C", VA = "0x2AB609C")]
		private void Update()
		{
		}

		[Token(Token = "0x60031FB")]
		[Address(RVA = "0x2AB613C", Offset = "0x2AB613C", VA = "0x2AB613C")]
		public TimeController()
		{
		}
	}
	[Token(Token = "0x20007E4")]
	public class CollisionPlacer : MonoBehaviour, ICollisionHandler
	{
		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE670E0", Offset = "0xE670E0")]
		[SerializeField]
		private LayerMask mask;

		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6712C", Offset = "0xE6712C")]
		[SerializeField]
		private float autoPlaceMaxDistance;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool rotateAlongNormal;

		[Token(Token = "0x60031FC")]
		[Address(RVA = "0x21BBB48", Offset = "0x21BBB48", VA = "0x21BBB48", Slot = "4")]
		public void CollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60031FD")]
		[Address(RVA = "0x21BBDB4", Offset = "0x21BBDB4", VA = "0x21BBDB4")]
		public void AutoPlace()
		{
		}

		[Token(Token = "0x60031FE")]
		[Address(RVA = "0x21BBFA8", Offset = "0x21BBFA8", VA = "0x21BBFA8")]
		public CollisionPlacer()
		{
		}
	}
	[Token(Token = "0x20007E5")]
	public class ParticleGroupEmitter : MonoBehaviour
	{
		[Token(Token = "0x20007E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5936C", Offset = "0xE5936C")]
		private sealed class <PlayDelayed>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystem particleSystem;

			[Token(Token = "0x4002C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ParticleGroupEmitter <>4__this;

			[Token(Token = "0x4002C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int count;

			[Token(Token = "0x170004A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600320D")]
				[Address(RVA = "0x205DE08", Offset = "0x205DE08", VA = "0x205DE08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600320F")]
				[Address(RVA = "0x205DE50", Offset = "0x205DE50", VA = "0x205DE50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600320A")]
			[Address(RVA = "0x205DCC8", Offset = "0x205DCC8", VA = "0x205DCC8")]
			[DebuggerHidden]
			public <PlayDelayed>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600320B")]
			[Address(RVA = "0x205DCF4", Offset = "0x205DCF4", VA = "0x205DCF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600320C")]
			[Address(RVA = "0x205DCF8", Offset = "0x205DCF8", VA = "0x205DCF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600320E")]
			[Address(RVA = "0x205DE10", Offset = "0x205DE10", VA = "0x205DE10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67188", Offset = "0xE67188")]
		[SerializeField]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE671D4", Offset = "0xE671D4")]
		private RendererFade[] fadeRenderers;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float fadeDuration;

		[Token(Token = "0x4002C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67230", Offset = "0xE67230")]
		private int countMultiplier;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool emissionEnabled;

		[Token(Token = "0x4002C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float simulationSpeed;

		[Token(Token = "0x170004A3")]
		public float SimulationSpeed
		{
			[Token(Token = "0x60031FF")]
			[Address(RVA = "0x230B59C", Offset = "0x230B59C", VA = "0x230B59C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003200")]
			[Address(RVA = "0x230B5A4", Offset = "0x230B5A4", VA = "0x230B5A4")]
			set
			{
			}
		}

		[Token(Token = "0x6003201")]
		[Address(RVA = "0x230B638", Offset = "0x230B638", VA = "0x230B638")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003202")]
		[Address(RVA = "0x230B6D0", Offset = "0x230B6D0", VA = "0x230B6D0")]
		public void Emit(int count)
		{
		}

		[Token(Token = "0x6003203")]
		[Address(RVA = "0x230B640", Offset = "0x230B640", VA = "0x230B640")]
		public void EnableEmission(bool enabled)
		{
		}

		[Token(Token = "0x6003204")]
		[Address(RVA = "0x230BA30", Offset = "0x230BA30", VA = "0x230BA30")]
		public void Show()
		{
		}

		[Token(Token = "0x6003205")]
		[Address(RVA = "0x230BB0C", Offset = "0x230BB0C", VA = "0x230BB0C")]
		public void Fade()
		{
		}

		[Token(Token = "0x6003206")]
		[Address(RVA = "0x230BBE8", Offset = "0x230BBE8", VA = "0x230BBE8")]
		public void ClearParticles()
		{
		}

		[Token(Token = "0x6003207")]
		[Address(RVA = "0x230B994", Offset = "0x230B994", VA = "0x230B994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F10C", Offset = "0xE6F10C")]
		private IEnumerator PlayDelayed(ParticleSystem particleSystem, int count)
		{
			return null;
		}

		[Token(Token = "0x6003208")]
		[Address(RVA = "0x230B7D4", Offset = "0x230B7D4", VA = "0x230B7D4")]
		private void Emit(ParticleSystem particleSystem, int count)
		{
		}

		[Token(Token = "0x6003209")]
		[Address(RVA = "0x230BC54", Offset = "0x230BC54", VA = "0x230BC54")]
		public ParticleGroupEmitter()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	public class ParticleGroupPlayer : MonoBehaviour
	{
		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6728C", Offset = "0xE6728C")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x6003210")]
		[Address(RVA = "0x230BC70", Offset = "0x230BC70", VA = "0x230BC70")]
		public void Play()
		{
		}

		[Token(Token = "0x6003211")]
		[Address(RVA = "0x230BCDC", Offset = "0x230BCDC", VA = "0x230BCDC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6003212")]
		[Address(RVA = "0x230BD60", Offset = "0x230BD60", VA = "0x230BD60")]
		public ParticleGroupPlayer()
		{
		}
	}
}
namespace Knife.Effects.SimpleController
{
	[Token(Token = "0x20007E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5937C", Offset = "0xE5937C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5937C", Offset = "0xE5937C")]
	public class Cursor : MonoBehaviour
	{
		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Graphic graphic;

		[Token(Token = "0x4002C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectTransform;

		[Token(Token = "0x170004A6")]
		public static CursorLockMode lockState
		{
			[Token(Token = "0x6003213")]
			[Address(RVA = "0x21C4738", Offset = "0x21C4738", VA = "0x21C4738")]
			get
			{
				return default(CursorLockMode);
			}
			[Token(Token = "0x6003214")]
			[Address(RVA = "0x21C4740", Offset = "0x21C4740", VA = "0x21C4740")]
			set
			{
			}
		}

		[Token(Token = "0x170004A7")]
		public static bool visible
		{
			[Token(Token = "0x6003215")]
			[Address(RVA = "0x21C4748", Offset = "0x21C4748", VA = "0x21C4748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003216")]
			[Address(RVA = "0x21C4750", Offset = "0x21C4750", VA = "0x21C4750")]
			set
			{
			}
		}

		[Token(Token = "0x1400000B")]
		private static event UnityAction<bool> OnVisibleChangedEvent
		{
			[Token(Token = "0x6003217")]
			[Address(RVA = "0x21C47E4", Offset = "0x21C47E4", VA = "0x21C47E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F1BC", Offset = "0xE6F1BC")]
			add
			{
			}
			[Token(Token = "0x6003218")]
			[Address(RVA = "0x21C48A0", Offset = "0x21C48A0", VA = "0x21C48A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F1CC", Offset = "0xE6F1CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6003219")]
		[Address(RVA = "0x21C495C", Offset = "0x21C495C", VA = "0x21C495C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600321A")]
		[Address(RVA = "0x21C4A48", Offset = "0x21C4A48", VA = "0x21C4A48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600321B")]
		[Address(RVA = "0x21C4AD4", Offset = "0x21C4AD4", VA = "0x21C4AD4")]
		private void OnVisibleChanged(bool value)
		{
		}

		[Token(Token = "0x600321C")]
		[Address(RVA = "0x21C4AF4", Offset = "0x21C4AF4", VA = "0x21C4AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600321D")]
		[Address(RVA = "0x21C4B28", Offset = "0x21C4B28", VA = "0x21C4B28")]
		public Cursor()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	public enum DamageMethod
	{
		[Token(Token = "0x4002C9C")]
		Disable,
		[Token(Token = "0x4002C9D")]
		OverlapSphere
	}
	[Token(Token = "0x20007EA")]
	public class EmptyWeapon : Weapon
	{
		[Token(Token = "0x600321E")]
		[Address(RVA = "0x24F1A20", Offset = "0x24F1A20", VA = "0x24F1A20", Slot = "13")]
		protected override void EndFire()
		{
		}

		[Token(Token = "0x600321F")]
		[Address(RVA = "0x24F1A24", Offset = "0x24F1A24", VA = "0x24F1A24", Slot = "14")]
		protected override void Shot()
		{
		}

		[Token(Token = "0x6003220")]
		[Address(RVA = "0x24F1A28", Offset = "0x24F1A28", VA = "0x24F1A28")]
		public EmptyWeapon()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	public class FlamethrowerWeapon : Weapon
	{
		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE672E8", Offset = "0xE672E8")]
		private ParticleSystem[] fire;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool isFire;

		[Token(Token = "0x6003221")]
		[Address(RVA = "0x223F940", Offset = "0x223F940", VA = "0x223F940", Slot = "14")]
		protected override void Shot()
		{
		}

		[Token(Token = "0x6003222")]
		[Address(RVA = "0x223FA34", Offset = "0x223FA34", VA = "0x223FA34", Slot = "13")]
		protected override void EndFire()
		{
		}

		[Token(Token = "0x6003223")]
		[Address(RVA = "0x223FB1C", Offset = "0x223FB1C", VA = "0x223FB1C")]
		public FlamethrowerWeapon()
		{
		}
	}
	[Token(Token = "0x20007EC")]
	public class Grenade : MonoBehaviour, ICollisionIgnore
	{
		[Token(Token = "0x20007ED")]
		public enum ExplodeEvent
		{
			[Token(Token = "0x4002CB6")]
			Time,
			[Token(Token = "0x4002CB7")]
			Collision
		}

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67334", Offset = "0xE67334")]
		[SerializeField]
		private float damage;

		[Token(Token = "0x4002CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67380", Offset = "0xE67380")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE673CC", Offset = "0xE673CC")]
		private Vector3 angularSpeed;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67418", Offset = "0xE67418")]
		private float fragSize;

		[Token(Token = "0x4002CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67464", Offset = "0xE67464")]
		private DamageTypes damageType;

		[Token(Token = "0x4002CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE674B0", Offset = "0xE674B0")]
		private ExplodeEvent explodeEvent;

		[Token(Token = "0x4002CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE674FC", Offset = "0xE674FC")]
		private DamageMethod damageMethod;

		[Token(Token = "0x4002CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67548", Offset = "0xE67548")]
		private GameObject explosionPrefab;

		[Token(Token = "0x4002CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67594", Offset = "0xE67594")]
		private float explodeTime;

		[Token(Token = "0x4002CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE675E0", Offset = "0xE675E0")]
		private float explosionRadius;

		[Token(Token = "0x4002CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6762C", Offset = "0xE6762C")]
		[SerializeField]
		private bool rotateAlongVelocity;

		[Token(Token = "0x4002CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67678", Offset = "0xE67678")]
		[SerializeField]
		private Transform detachOnDestroy;

		[Token(Token = "0x4002CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool freezeOnTimerEnd;

		[Token(Token = "0x4002CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float destroyDelay;

		[Token(Token = "0x4002CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody body;

		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float elapsedTime;

		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isExploded;

		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Collider grenadeCollider;

		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 oldPosition;

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit hit;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool hasHit;

		[Token(Token = "0x6003224")]
		[Address(RVA = "0x2521EF0", Offset = "0x2521EF0", VA = "0x2521EF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003225")]
		[Address(RVA = "0x252206C", Offset = "0x252206C", VA = "0x252206C", Slot = "4")]
		public void IgnoreCollision(Collider collider)
		{
		}

		[Token(Token = "0x6003226")]
		[Address(RVA = "0x2522080", Offset = "0x2522080", VA = "0x2522080")]
		private void Update()
		{
		}

		[Token(Token = "0x6003227")]
		[Address(RVA = "0x25229D0", Offset = "0x25229D0", VA = "0x25229D0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003228")]
		[Address(RVA = "0x2522A0C", Offset = "0x2522A0C", VA = "0x2522A0C")]
		private void Raycast()
		{
		}

		[Token(Token = "0x6003229")]
		[Address(RVA = "0x2522BBC", Offset = "0x2522BBC", VA = "0x2522BBC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600322A")]
		[Address(RVA = "0x252214C", Offset = "0x252214C", VA = "0x252214C")]
		private void Explode(Collision collision)
		{
		}

		[Token(Token = "0x600322B")]
		[Address(RVA = "0x2522BD8", Offset = "0x2522BD8", VA = "0x2522BD8")]
		public Grenade()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	public class GrenadeWeapon : MonoBehaviour, IWeapon
	{
		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE676E4", Offset = "0xE676E4")]
		private GameObject grenadePrefab;

		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67730", Offset = "0xE67730")]
		private Transform grenadeSpawnPoint;

		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6777C", Offset = "0xE6777C")]
		private GameObject playerRoot;

		[Token(Token = "0x4002CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE677C8", Offset = "0xE677C8")]
		private GameObject handProp;

		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67814", Offset = "0xE67814")]
		[SerializeField]
		private float enableHandPropDelay;

		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67860", Offset = "0xE67860")]
		[SerializeField]
		private Camera playerCamera;

		[Token(Token = "0x4002CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float throwInterval;

		[Token(Token = "0x4002CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE678BC", Offset = "0xE678BC")]
		public float DefaultFov;

		[Token(Token = "0x4002CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE678F4", Offset = "0xE678F4")]
		public float AimFov;

		[Token(Token = "0x4002CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider[] playerColliders;

		[Token(Token = "0x4002CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float elapsedTime;

		[Token(Token = "0x4002CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isHandPropDisabled;

		[Token(Token = "0x4002CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator handsAnimator;

		[Token(Token = "0x4002CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float currentFov;

		[Token(Token = "0x4002CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isFreezed;

		[Token(Token = "0x4002CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastThrowTime;

		[Token(Token = "0x4002CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isAiming;

		[Token(Token = "0x170004A8")]
		public float CurrentFov
		{
			[Token(Token = "0x600322C")]
			[Address(RVA = "0x2522C08", Offset = "0x2522C08", VA = "0x2522C08", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A9")]
		public bool isActive
		{
			[Token(Token = "0x600322D")]
			[Address(RVA = "0x2522C10", Offset = "0x2522C10", VA = "0x2522C10", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action<Vector2> OnFire
		{
			[Token(Token = "0x600322E")]
			[Address(RVA = "0x2522C34", Offset = "0x2522C34", VA = "0x2522C34", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F1DC", Offset = "0xE6F1DC")]
			add
			{
			}
			[Token(Token = "0x600322F")]
			[Address(RVA = "0x2522CD4", Offset = "0x2522CD4", VA = "0x2522CD4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F1EC", Offset = "0xE6F1EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6003230")]
		[Address(RVA = "0x2522D74", Offset = "0x2522D74", VA = "0x2522D74")]
		private void Start()
		{
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0x2522E08", Offset = "0x2522E08", VA = "0x2522E08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003232")]
		[Address(RVA = "0x2522E54", Offset = "0x2522E54", VA = "0x2522E54")]
		private void Shot()
		{
		}

		[Token(Token = "0x6003233")]
		[Address(RVA = "0x2522EB0", Offset = "0x2522EB0", VA = "0x2522EB0")]
		private void EndFire()
		{
		}

		[Token(Token = "0x6003234")]
		[Address(RVA = "0x2522F1C", Offset = "0x2522F1C", VA = "0x2522F1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003235")]
		[Address(RVA = "0x2523044", Offset = "0x2523044", VA = "0x2523044")]
		private void SpawnGrenade()
		{
		}

		[Token(Token = "0x6003236")]
		[Address(RVA = "0x252326C", Offset = "0x252326C", VA = "0x252326C", Slot = "7")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6003237")]
		[Address(RVA = "0x25232A0", Offset = "0x25232A0", VA = "0x25232A0", Slot = "9")]
		public void Freeze(bool value)
		{
		}

		[Token(Token = "0x6003238")]
		[Address(RVA = "0x25232AC", Offset = "0x25232AC", VA = "0x25232AC")]
		public GrenadeWeapon()
		{
		}
	}
	[Token(Token = "0x20007EF")]
	public class Hands : MonoBehaviour
	{
		[Token(Token = "0x4002CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6793C", Offset = "0xE6793C")]
		public GameObject[] WeaponsObjects;

		[Token(Token = "0x4002CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67974", Offset = "0xE67974")]
		public Camera Cam;

		[Token(Token = "0x4002CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE679AC", Offset = "0xE679AC")]
		public int[] Indices;

		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE679E4", Offset = "0xE679E4")]
		public WeaponSelector weaponSelector;

		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerController player;

		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float startFov;

		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int currentWeaponIndex;

		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IWeapon[] weapons;

		[Token(Token = "0x6003239")]
		[Address(RVA = "0x2527830", Offset = "0x2527830", VA = "0x2527830")]
		private void Start()
		{
		}

		[Token(Token = "0x600323A")]
		[Address(RVA = "0x2527AA0", Offset = "0x2527AA0", VA = "0x2527AA0")]
		private void OnWeaponSelected(int index)
		{
		}

		[Token(Token = "0x600323B")]
		[Address(RVA = "0x2527E24", Offset = "0x2527E24", VA = "0x2527E24")]
		private void Update()
		{
		}

		[Token(Token = "0x600323C")]
		[Address(RVA = "0x2527B04", Offset = "0x2527B04", VA = "0x2527B04")]
		private void Deploy(int index)
		{
		}

		[Token(Token = "0x600323D")]
		[Address(RVA = "0x2527FB0", Offset = "0x2527FB0", VA = "0x2527FB0")]
		private void OnFire(Vector2 recoilDelta)
		{
		}

		[Token(Token = "0x600323E")]
		[Address(RVA = "0x2527FD8", Offset = "0x2527FD8", VA = "0x2527FD8")]
		public Hands()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	public class HittableSurface : MonoBehaviour, IHittable
	{
		[Serializable]
		[Token(Token = "0x20007F1")]
		private class DecalGroup
		{
			[Token(Token = "0x4002CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private GameObject[] prefabs;

			[Token(Token = "0x4002CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE67CAC", Offset = "0xE67CAC")]
			private float angleTreshold;

			[Token(Token = "0x4002CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67CEC", Offset = "0xE67CEC")]
			private float offsetMin;

			[Token(Token = "0x4002CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67D38", Offset = "0xE67D38")]
			private float offsetMax;

			[Token(Token = "0x4002CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67D84", Offset = "0xE67D84")]
			private bool autoParent;

			[Token(Token = "0x4002CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67DD0", Offset = "0xE67DD0")]
			private float size;

			[Token(Token = "0x4002CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			private bool randomRotation;

			[Token(Token = "0x4002CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			[SerializeField]
			private bool upRotationAlongDirection;

			[Token(Token = "0x4002CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE67E3C", Offset = "0xE67E3C")]
			[SerializeField]
			private float scaleAlongDirectionFactor;

			[Token(Token = "0x6003241")]
			[Address(RVA = "0x2844508", Offset = "0x2844508", VA = "0x2844508")]
			public bool NeedSpawn(DamageData damage)
			{
				return default(bool);
			}

			[Token(Token = "0x6003242")]
			[Address(RVA = "0x2844540", Offset = "0x2844540", VA = "0x2844540")]
			public void Spawn(DamageData damage, Transform surface)
			{
			}

			[Token(Token = "0x6003243")]
			[Address(RVA = "0x28449B0", Offset = "0x28449B0", VA = "0x28449B0")]
			public DecalGroup()
			{
			}
		}

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67A2C", Offset = "0xE67A2C")]
		private GameObject[] decalPrefabs;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DecalGroup[] groups;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67A88", Offset = "0xE67A88")]
		[SerializeField]
		private GameObject[] impactPrefabs;

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67AD4", Offset = "0xE67AD4")]
		[SerializeField]
		private float offsetMin;

		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67B20", Offset = "0xE67B20")]
		private float offsetMax;

		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67B6C", Offset = "0xE67B6C")]
		private float size;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67BB8", Offset = "0xE67BB8")]
		[SerializeField]
		private float impactSize;

		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67C04", Offset = "0xE67C04")]
		private bool autoParent;

		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67C50", Offset = "0xE67C50")]
		private bool randomRotation;

		[Token(Token = "0x600323F")]
		[Address(RVA = "0x2528EA4", Offset = "0x2528EA4", VA = "0x2528EA4", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6003240")]
		[Address(RVA = "0x252924C", Offset = "0x252924C", VA = "0x252924C")]
		public HittableSurface()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	public interface ICollisionIgnore
	{
		[Token(Token = "0x6003244")]
		void IgnoreCollision(Collider collider);
	}
	[Token(Token = "0x20007F3")]
	public interface ICustomActiveState
	{
		[Token(Token = "0x6003245")]
		void SetCustomActive(bool value);
	}
	[Token(Token = "0x20007F4")]
	public interface IWeapon
	{
		[Token(Token = "0x170004AA")]
		float CurrentFov
		{
			[Token(Token = "0x6003248")]
			get;
		}

		[Token(Token = "0x170004AB")]
		bool isActive
		{
			[Token(Token = "0x600324A")]
			get;
		}

		[Token(Token = "0x1400000D")]
		event Action<Vector2> OnFire;

		[Token(Token = "0x6003249")]
		void SetActive(bool value);

		[Token(Token = "0x600324B")]
		void Freeze(bool value);
	}
	[Token(Token = "0x20007F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59410", Offset = "0xE59410")]
	public class PlayerController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007F6")]
		public class PlayerStandState
		{
			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ControlCameraHeight;

			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float ColliderHeight;

			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float ColliderCenterHeight;

			[Token(Token = "0x600325F")]
			[Address(RVA = "0x205E808", Offset = "0x205E808", VA = "0x205E808")]
			public PlayerStandState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007F7")]
		public class Headbob
		{
			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enabled;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float HeadBobWeight;

			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 HeadBobAmount;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float HeadBobPeriod;

			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve HeadBobCurveX;

			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve HeadBobCurveY;

			[Token(Token = "0x4002D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 resultHeadbob;

			[Token(Token = "0x170004B2")]
			public Vector3 HeadBobPos
			{
				[Token(Token = "0x6003260")]
				[Address(RVA = "0x205E290", Offset = "0x205E290", VA = "0x205E290")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6003261")]
			[Address(RVA = "0x205E29C", Offset = "0x205E29C", VA = "0x205E29C")]
			public void CalcHeadbob(float currentTime)
			{
			}

			[Token(Token = "0x6003262")]
			[Address(RVA = "0x205E39C", Offset = "0x205E39C", VA = "0x205E39C")]
			public Headbob()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007F8")]
		public class MouseLook
		{
			[Token(Token = "0x4002D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enabled;

			[Token(Token = "0x4002D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float XSensitivity;

			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float YSensitivity;

			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float SensivityMultiplier;

			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float MinimumX;

			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float MaximumX;

			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float SmoothTime;

			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool ClampVerticalRotation;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string AxisXName;

			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string AxisYName;

			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion characterTargetRot;

			[Token(Token = "0x4002D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Quaternion cameraTargetRot;

			[Token(Token = "0x4002D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform character;

			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Transform camera;

			[Token(Token = "0x6003263")]
			[Address(RVA = "0x205E3B8", Offset = "0x205E3B8", VA = "0x205E3B8")]
			public void Init(Transform character, Transform camera)
			{
			}

			[Token(Token = "0x6003264")]
			[Address(RVA = "0x205E434", Offset = "0x205E434", VA = "0x205E434")]
			public void ApplyDelta(Vector2 delta)
			{
			}

			[Token(Token = "0x6003265")]
			[Address(RVA = "0x205E5E4", Offset = "0x205E5E4", VA = "0x205E5E4")]
			public void LookRotation(float deltaTime)
			{
			}

			[Token(Token = "0x6003266")]
			[Address(RVA = "0x205E478", Offset = "0x205E478", VA = "0x205E478")]
			public void LookRotation(float yRot, float xRot, float deltaTime)
			{
			}

			[Token(Token = "0x6003267")]
			[Address(RVA = "0x205E6CC", Offset = "0x205E6CC", VA = "0x205E6CC")]
			public void RotateCameraSmoothlyTo(float xRot, float deltaTime)
			{
			}

			[Token(Token = "0x6003268")]
			[Address(RVA = "0x205E664", Offset = "0x205E664", VA = "0x205E664")]
			private Quaternion ClampRotationAroundXAxis(Quaternion q)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6003269")]
			[Address(RVA = "0x205E768", Offset = "0x205E768", VA = "0x205E768")]
			public MouseLook()
			{
			}
		}

		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject control;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MouseLook Look;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Headbob HeadBob;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve HeadBobBlendCurve;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve HeadBobPeriodBlendCurve;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ForwardAxis;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string StrafeAxis;

		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform DirectionReference;

		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float CrouchSpeedMultiplier;

		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float RunSpeedMultiplier;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float RunIncreaseSpeedTime;

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float RunSpeedThreshold;

		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve RunIncreaseSpeedCurve;

		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float CollisionScale;

		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float Speed;

		[Token(Token = "0x4002CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask GroundLayer;

		[Token(Token = "0x4002CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float Threshold;

		[Token(Token = "0x4002CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float Gravity;

		[Token(Token = "0x4002CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float StickToGround;

		[Token(Token = "0x4002CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlayerStandState StandState;

		[Token(Token = "0x4002CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlayerStandState CrouchState;

		[Token(Token = "0x4002CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float StateChangeSpeed;

		[Token(Token = "0x4002CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve StateChangeCurve;

		[Token(Token = "0x4002CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float MaxSpeed;

		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float WeightSmooth;

		[Token(Token = "0x4002CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float JumpSpeed;

		[Token(Token = "0x4002CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Camera PlayerCamera;

		[Token(Token = "0x4002CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform ControlCamera;

		[Token(Token = "0x4002D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform HandsHeadBobTarget;

		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float CameraHeadbobWeight;

		[Token(Token = "0x4002D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float HandsHeadbobWeight;

		[Token(Token = "0x4002D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float HandsHeadbobMultiplier;

		[Token(Token = "0x4002D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PlayerFreezeChangedEvent PlayerFreezeChanged;

		[Token(Token = "0x4002D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityAction RunStartEvent;

		[Token(Token = "0x4002D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityAction JumpStartEvent;

		[Token(Token = "0x4002D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityAction JumpFallEvent;

		[Token(Token = "0x4002D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UnityAction JumpEndEvent;

		[Token(Token = "0x4002D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UnityAction CrouchEvent;

		[Token(Token = "0x4002D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UnityAction StandUpEvent;

		[Token(Token = "0x4002D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private CapsuleCollider characterCollider;

		[Token(Token = "0x4002D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CharacterController controller;

		[Token(Token = "0x4002D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 playerVelocity;

		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 oldPlayerVelocity;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 oldHandHeadBobPos;

		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 oldCameraHeadBobPos;

		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 controlCameraPosition;

		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float standStateBlend;

		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float runTime;

		[Token(Token = "0x4002D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float standChangeTime;

		[Token(Token = "0x4002D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float defaultHandsHeadbobWeight;

		[Token(Token = "0x4002D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool freezeControl;

		[Token(Token = "0x4002D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		private bool isRunning;

		[Token(Token = "0x4002D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
		private bool oldIsGrounded;

		[Token(Token = "0x4002D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x177")]
		private bool isCrouching;

		[Token(Token = "0x4002D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool isPaused;

		[Token(Token = "0x170004AC")]
		public Vector3 PlayerVelocity
		{
			[Token(Token = "0x600324C")]
			[Address(RVA = "0x230D5B0", Offset = "0x230D5B0", VA = "0x230D5B0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004AD")]
		public bool IsRunning
		{
			[Token(Token = "0x600324D")]
			[Address(RVA = "0x230D5CC", Offset = "0x230D5CC", VA = "0x230D5CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AE")]
		public bool IsCrouching
		{
			[Token(Token = "0x600324E")]
			[Address(RVA = "0x230D5D4", Offset = "0x230D5D4", VA = "0x230D5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AF")]
		public bool IsGrounded
		{
			[Token(Token = "0x600324F")]
			[Address(RVA = "0x230D5DC", Offset = "0x230D5DC", VA = "0x230D5DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B0")]
		public float DefaultHandsHeadbobWeight
		{
			[Token(Token = "0x6003250")]
			[Address(RVA = "0x230D5F8", Offset = "0x230D5F8", VA = "0x230D5F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004B1")]
		public bool IsFreezed
		{
			[Token(Token = "0x6003251")]
			[Address(RVA = "0x230D600", Offset = "0x230D600", VA = "0x230D600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003252")]
		[Address(RVA = "0x230D608", Offset = "0x230D608", VA = "0x230D608")]
		private void Start()
		{
		}

		[Token(Token = "0x6003253")]
		[Address(RVA = "0x230D75C", Offset = "0x230D75C", VA = "0x230D75C")]
		public void UpdateDefaultDeath()
		{
		}

		[Token(Token = "0x6003254")]
		[Address(RVA = "0x230D6FC", Offset = "0x230D6FC", VA = "0x230D6FC")]
		private void PausePlayer()
		{
		}

		[Token(Token = "0x6003255")]
		[Address(RVA = "0x230D908", Offset = "0x230D908", VA = "0x230D908")]
		private void UnpausePlayer()
		{
		}

		[Token(Token = "0x6003256")]
		[Address(RVA = "0x230D964", Offset = "0x230D964", VA = "0x230D964")]
		private void Update()
		{
		}

		[Token(Token = "0x6003257")]
		[Address(RVA = "0x230D9B0", Offset = "0x230D9B0", VA = "0x230D9B0")]
		private void UpdatePlayer()
		{
		}

		[Token(Token = "0x6003258")]
		[Address(RVA = "0x230D798", Offset = "0x230D798", VA = "0x230D798")]
		public void Freeze(bool value)
		{
		}

		[Token(Token = "0x6003259")]
		[Address(RVA = "0x230DA90", Offset = "0x230DA90", VA = "0x230DA90")]
		private void move()
		{
		}

		[Token(Token = "0x600325A")]
		[Address(RVA = "0x230E180", Offset = "0x230E180", VA = "0x230E180")]
		private void standStateChange()
		{
		}

		[Token(Token = "0x600325B")]
		[Address(RVA = "0x230E340", Offset = "0x230E340", VA = "0x230E340")]
		public void SetSensivityMultiplier(float multiplier)
		{
		}

		[Token(Token = "0x600325C")]
		[Address(RVA = "0x230E0D0", Offset = "0x230E0D0", VA = "0x230E0D0")]
		private void applyGravity()
		{
		}

		[Token(Token = "0x600325D")]
		[Address(RVA = "0x230E35C", Offset = "0x230E35C", VA = "0x230E35C")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600325E")]
		[Address(RVA = "0x230E524", Offset = "0x230E524", VA = "0x230E524")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	public class PlayerFreezeChangedEvent : UnityEvent<bool>
	{
		[Token(Token = "0x600326A")]
		[Address(RVA = "0x230E660", Offset = "0x230E660", VA = "0x230E660")]
		public PlayerFreezeChangedEvent()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	public class Projectile : MonoBehaviour, ICollisionIgnore
	{
		[Token(Token = "0x4002D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67E7C", Offset = "0xE67E7C")]
		private float damage;

		[Token(Token = "0x4002D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67EC8", Offset = "0xE67EC8")]
		[SerializeField]
		private float fragSize;

		[Token(Token = "0x4002D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67F14", Offset = "0xE67F14")]
		[SerializeField]
		private DamageTypes damageType;

		[Token(Token = "0x4002D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67F60", Offset = "0xE67F60")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4002D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67FAC", Offset = "0xE67FAC")]
		[SerializeField]
		private GameObject explosionPrefab;

		[Token(Token = "0x4002D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE67FF8", Offset = "0xE67FF8")]
		private float exlposionScale;

		[Token(Token = "0x4002D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68044", Offset = "0xE68044")]
		[SerializeField]
		private Transform detachOnDestroy;

		[Token(Token = "0x4002D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68090", Offset = "0xE68090")]
		[SerializeField]
		private DamageMethod damageMethod;

		[Token(Token = "0x4002D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE680DC", Offset = "0xE680DC")]
		[SerializeField]
		private float explosionRadius;

		[Token(Token = "0x4002D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody body;

		[Token(Token = "0x4002D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider projectileCollider;

		[Token(Token = "0x600326B")]
		[Address(RVA = "0x27113A8", Offset = "0x27113A8", VA = "0x27113A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600326C")]
		[Address(RVA = "0x2711474", Offset = "0x2711474", VA = "0x2711474", Slot = "4")]
		public void IgnoreCollision(Collider collider)
		{
		}

		[Token(Token = "0x600326D")]
		[Address(RVA = "0x2711488", Offset = "0x2711488", VA = "0x2711488")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600326E")]
		[Address(RVA = "0x2711A14", Offset = "0x2711A14", VA = "0x2711A14")]
		public Projectile()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	public class RPG : Weapon
	{
		[Token(Token = "0x4002D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68128", Offset = "0xE68128")]
		private Transform projectilesSpawnPoint;

		[Token(Token = "0x4002D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68174", Offset = "0xE68174")]
		private GameObject projectilesPrefab;

		[Token(Token = "0x4002D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE681C0", Offset = "0xE681C0")]
		[SerializeField]
		private GameObject playersRoot;

		[Token(Token = "0x4002D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Collider[] playerColliders;

		[Token(Token = "0x600326F")]
		[Address(RVA = "0x2713340", Offset = "0x2713340", VA = "0x2713340", Slot = "10")]
		protected override void OnEnableHook()
		{
		}

		[Token(Token = "0x6003270")]
		[Address(RVA = "0x27133A4", Offset = "0x27133A4", VA = "0x27133A4", Slot = "14")]
		protected override void Shot()
		{
		}

		[Token(Token = "0x6003271")]
		[Address(RVA = "0x2713604", Offset = "0x2713604", VA = "0x2713604")]
		public RPG()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	public class ShotgunWeapon : Weapon
	{
		[Token(Token = "0x4002D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6820C", Offset = "0xE6820C")]
		public int Bullets;

		[Token(Token = "0x4002D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68244", Offset = "0xE68244")]
		public float RandomAngle;

		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Dictionary<IHittable, List<DamageData>> damages;

		[Token(Token = "0x6003272")]
		[Address(RVA = "0x215D7C0", Offset = "0x215D7C0", VA = "0x215D7C0", Slot = "14")]
		protected override void Shot()
		{
		}

		[Token(Token = "0x6003273")]
		[Address(RVA = "0x215DDCC", Offset = "0x215DDCC", VA = "0x215DDCC")]
		public ShotgunWeapon()
		{
		}
	}
	[Token(Token = "0x20007FD")]
	public class SmokeGrenade : MonoBehaviour, ICollisionIgnore
	{
		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6827C", Offset = "0xE6827C")]
		private float activateTimer;

		[Token(Token = "0x4002D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE682C8", Offset = "0xE682C8")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4002D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68314", Offset = "0xE68314")]
		[SerializeField]
		private ParticleSystem[] particles;

		[Token(Token = "0x4002D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68360", Offset = "0xE68360")]
		private float speed;

		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE683AC", Offset = "0xE683AC")]
		private Vector3 angularSpeed;

		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody body;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider grenadeCollider;

		[Token(Token = "0x4002D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float elapsedTime;

		[Token(Token = "0x4002D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isActivated;

		[Token(Token = "0x4002D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool isEnded;

		[Token(Token = "0x6003274")]
		[Address(RVA = "0x2162360", Offset = "0x2162360", VA = "0x2162360")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003275")]
		[Address(RVA = "0x21624B4", Offset = "0x21624B4", VA = "0x21624B4", Slot = "4")]
		public void IgnoreCollision(Collider collider)
		{
		}

		[Token(Token = "0x6003276")]
		[Address(RVA = "0x21624C8", Offset = "0x21624C8", VA = "0x21624C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003277")]
		[Address(RVA = "0x21625E4", Offset = "0x21625E4", VA = "0x21625E4")]
		private void Activate()
		{
		}

		[Token(Token = "0x6003278")]
		[Address(RVA = "0x2162550", Offset = "0x2162550", VA = "0x2162550")]
		private void Deactivate()
		{
		}

		[Token(Token = "0x6003279")]
		[Address(RVA = "0x216266C", Offset = "0x216266C", VA = "0x216266C")]
		public SmokeGrenade()
		{
		}
	}
	[Token(Token = "0x20007FE")]
	public class Weapon : MonoBehaviour, IWeapon
	{
		[Token(Token = "0x20007FF")]
		public enum FireType
		{
			[Token(Token = "0x4002D82")]
			Bullets,
			[Token(Token = "0x4002D83")]
			Constant
		}

		[Token(Token = "0x2000800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59470", Offset = "0xE59470")]
		private sealed class <ConstantShot>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x170004B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600329C")]
				[Address(RVA = "0x2065A1C", Offset = "0x2065A1C", VA = "0x2065A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600329E")]
				[Address(RVA = "0x2065A64", Offset = "0x2065A64", VA = "0x2065A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003299")]
			[Address(RVA = "0x206524C", Offset = "0x206524C", VA = "0x206524C")]
			[DebuggerHidden]
			public <ConstantShot>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x600329A")]
			[Address(RVA = "0x2065278", Offset = "0x2065278", VA = "0x2065278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600329B")]
			[Address(RVA = "0x206527C", Offset = "0x206527C", VA = "0x206527C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600329D")]
			[Address(RVA = "0x2065A24", Offset = "0x2065A24", VA = "0x2065A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000801")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59480", Offset = "0xE59480")]
		private sealed class <GunShot>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170004BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A2")]
				[Address(RVA = "0x2065E5C", Offset = "0x2065E5C", VA = "0x2065E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A4")]
				[Address(RVA = "0x2065EA4", Offset = "0x2065EA4", VA = "0x2065EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600329F")]
			[Address(RVA = "0x2065BC8", Offset = "0x2065BC8", VA = "0x2065BC8")]
			[DebuggerHidden]
			public <GunShot>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x60032A0")]
			[Address(RVA = "0x2065BF4", Offset = "0x2065BF4", VA = "0x2065BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A1")]
			[Address(RVA = "0x2065BF8", Offset = "0x2065BF8", VA = "0x2065BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A3")]
			[Address(RVA = "0x2065E64", Offset = "0x2065E64", VA = "0x2065E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000802")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59490", Offset = "0xE59490")]
		private sealed class <DisableChargeEffect>d__81 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x170004BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A8")]
				[Address(RVA = "0x2065B78", Offset = "0x2065B78", VA = "0x2065B78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032AA")]
				[Address(RVA = "0x2065BC0", Offset = "0x2065BC0", VA = "0x2065BC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0x2065A6C", Offset = "0x2065A6C", VA = "0x2065A6C")]
			[DebuggerHidden]
			public <DisableChargeEffect>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x60032A6")]
			[Address(RVA = "0x2065A98", Offset = "0x2065A98", VA = "0x2065A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A7")]
			[Address(RVA = "0x2065A9C", Offset = "0x2065A9C", VA = "0x2065A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A9")]
			[Address(RVA = "0x2065B80", Offset = "0x2065B80", VA = "0x2065B80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000803")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE594A0", Offset = "0xE594A0")]
		private sealed class <SpawnBullets>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x4002D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool useProjectilesSpawnPointsArray;

			[Token(Token = "0x4002D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int count;

			[Token(Token = "0x4002D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <spreadValue>5__2;

			[Token(Token = "0x4002D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <recoilValue>5__3;

			[Token(Token = "0x4002D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <forward>5__4;

			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <i>5__5;

			[Token(Token = "0x170004BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032AE")]
				[Address(RVA = "0x2066C3C", Offset = "0x2066C3C", VA = "0x2066C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032B0")]
				[Address(RVA = "0x2066C84", Offset = "0x2066C84", VA = "0x2066C84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032AB")]
			[Address(RVA = "0x2065EAC", Offset = "0x2065EAC", VA = "0x2065EAC")]
			[DebuggerHidden]
			public <SpawnBullets>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0x2065ED8", Offset = "0x2065ED8", VA = "0x2065ED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032AD")]
			[Address(RVA = "0x2065EDC", Offset = "0x2065EDC", VA = "0x2065EDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032AF")]
			[Address(RVA = "0x2066C44", Offset = "0x2066C44", VA = "0x2066C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FireType fireType;

		[Token(Token = "0x4002D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float constantFireDelay;

		[Token(Token = "0x4002D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject projectilePrefab;

		[Token(Token = "0x4002D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] constantFire;

		[Token(Token = "0x4002D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform projectileSpawnPoint;

		[Token(Token = "0x4002D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform[] projectileSpawnPoints;

		[Token(Token = "0x4002D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool useProjectilesPool;

		[Token(Token = "0x4002D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject playerRoot;

		[Token(Token = "0x4002D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool parentProjectile;

		[Token(Token = "0x4002D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float spreadAcceleration;

		[Token(Token = "0x4002D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float spreadDecceleration;

		[Token(Token = "0x4002D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationCurve spreadCurve;

		[Token(Token = "0x4002D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve recoilCurve;

		[Token(Token = "0x4002D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE684D8", Offset = "0xE684D8")]
		private int bulletsCountPerShot;

		[Token(Token = "0x4002D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float spreadRayFactor;

		[Token(Token = "0x4002D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float bulletsInterval;

		[Token(Token = "0x4002D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private bool playFXOnce;

		[Token(Token = "0x4002D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float chargeTime;

		[Token(Token = "0x4002D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float chargeDisableDelay;

		[Token(Token = "0x4002D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ParticleGroupEmitter chargeEffectEmitter;

		[Token(Token = "0x4002D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ParticleGroupEmitter chargeEndEffectEmitter;

		[Token(Token = "0x4002D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool targetLockerEnabled;

		[Token(Token = "0x4002D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool lockHittableTarget;

		[Token(Token = "0x4002D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE685AC", Offset = "0xE685AC")]
		private ParticleGroupEmitter[] shotEmitters;

		[Token(Token = "0x4002D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE685F8", Offset = "0xE685F8")]
		[SerializeField]
		private ParticleGroupPlayer afterFireSmoke;

		[Token(Token = "0x4002D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68644", Offset = "0xE68644")]
		[SerializeField]
		private float bulletSize;

		[Token(Token = "0x4002D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68690", Offset = "0xE68690")]
		[SerializeField]
		private DamageTypes damageType;

		[Token(Token = "0x4002D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE686DC", Offset = "0xE686DC")]
		public Camera playerCamera;

		[Token(Token = "0x4002D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68714", Offset = "0xE68714")]
		public LayerMask ShotMask;

		[Token(Token = "0x4002D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6874C", Offset = "0xE6874C")]
		public float Damage;

		[Token(Token = "0x4002D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68784", Offset = "0xE68784")]
		public float DefaultFov;

		[Token(Token = "0x4002D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE687BC", Offset = "0xE687BC")]
		public float AimFov;

		[Token(Token = "0x4002D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE687F4", Offset = "0xE687F4")]
		public bool AutomaticFire;

		[Token(Token = "0x4002D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6882C", Offset = "0xE6882C")]
		public float AutomaticFireRate;

		[Token(Token = "0x4002D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Animator handsAnimator;

		[Token(Token = "0x4002D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool isShooting;

		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool isShooted;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		private bool isFreezed;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Collider[] playerColliders;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float currentSpread;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ICustomActiveState[] constantFireCustomActiveState;

		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool isAiming;

		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float currentFov;

		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float lastFireTime;

		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private LockData lockedTarget;

		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<GameObject> projectilesPool;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int currentPoolInstanceIndex;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool isConstantFireProcessing;

		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Coroutine constantFireCoroutine;

		[Token(Token = "0x170004B3")]
		private float fireInterval
		{
			[Token(Token = "0x600327C")]
			[Address(RVA = "0x297F924", Offset = "0x297F924", VA = "0x297F924")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004B4")]
		public float CurrentFov
		{
			[Token(Token = "0x600327D")]
			[Address(RVA = "0x297F934", Offset = "0x297F934", VA = "0x297F934", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004B5")]
		public float BulletSize
		{
			[Token(Token = "0x600327E")]
			[Address(RVA = "0x297F93C", Offset = "0x297F93C", VA = "0x297F93C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600327F")]
			[Address(RVA = "0x297F944", Offset = "0x297F944", VA = "0x297F944")]
			set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public DamageTypes DamageType
		{
			[Token(Token = "0x6003280")]
			[Address(RVA = "0x297F94C", Offset = "0x297F94C", VA = "0x297F94C")]
			get
			{
				return default(DamageTypes);
			}
			[Token(Token = "0x6003281")]
			[Address(RVA = "0x297F954", Offset = "0x297F954", VA = "0x297F954")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public bool isActive
		{
			[Token(Token = "0x6003282")]
			[Address(RVA = "0x297F95C", Offset = "0x297F95C", VA = "0x297F95C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public bool IsShooting
		{
			[Token(Token = "0x6003283")]
			[Address(RVA = "0x297F980", Offset = "0x297F980", VA = "0x297F980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003284")]
			[Address(RVA = "0x297F988", Offset = "0x297F988", VA = "0x297F988")]
			private set
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action<Vector2> OnFire
		{
			[Token(Token = "0x600327A")]
			[Address(RVA = "0x297F7E4", Offset = "0x297F7E4", VA = "0x297F7E4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F21C", Offset = "0xE6F21C")]
			add
			{
			}
			[Token(Token = "0x600327B")]
			[Address(RVA = "0x297F884", Offset = "0x297F884", VA = "0x297F884", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F22C", Offset = "0xE6F22C")]
			remove
			{
			}
		}

		[Token(Token = "0x6003285")]
		[Address(RVA = "0x297F994", Offset = "0x297F994", VA = "0x297F994")]
		private void Start()
		{
		}

		[Token(Token = "0x6003286")]
		[Address(RVA = "0x297FBF0", Offset = "0x297FBF0", VA = "0x297FBF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003287")]
		[Address(RVA = "0x297FC34", Offset = "0x297FC34", VA = "0x297FC34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003288")]
		[Address(RVA = "0x297FC48", Offset = "0x297FC48", VA = "0x297FC48", Slot = "10")]
		protected virtual void OnEnableHook()
		{
		}

		[Token(Token = "0x6003289")]
		[Address(RVA = "0x297FC4C", Offset = "0x297FC4C", VA = "0x297FC4C", Slot = "11")]
		protected virtual void OnDisableHook()
		{
		}

		[Token(Token = "0x600328A")]
		[Address(RVA = "0x297FC50", Offset = "0x297FC50", VA = "0x297FC50")]
		private void Update()
		{
		}

		[Token(Token = "0x600328B")]
		[Address(RVA = "0x297FE20", Offset = "0x297FE20", VA = "0x297FE20", Slot = "12")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x600328C")]
		[Address(RVA = "0x297FE24", Offset = "0x297FE24", VA = "0x297FE24", Slot = "13")]
		protected virtual void EndFire()
		{
		}

		[Token(Token = "0x600328D")]
		[Address(RVA = "0x297FFB8", Offset = "0x297FFB8", VA = "0x297FFB8")]
		protected void PlayAfterFireFX()
		{
		}

		[Token(Token = "0x600328E")]
		[Address(RVA = "0x2980048", Offset = "0x2980048", VA = "0x2980048")]
		protected void PlayFX()
		{
		}

		[Token(Token = "0x600328F")]
		[Address(RVA = "0x298012C", Offset = "0x298012C", VA = "0x298012C", Slot = "14")]
		protected virtual void Shot()
		{
		}

		[Token(Token = "0x6003290")]
		[Address(RVA = "0x2980230", Offset = "0x2980230", VA = "0x2980230")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F23C", Offset = "0xE6F23C")]
		private IEnumerator ConstantShot()
		{
			return null;
		}

		[Token(Token = "0x6003291")]
		[Address(RVA = "0x29801B8", Offset = "0x29801B8", VA = "0x29801B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F29C", Offset = "0xE6F29C")]
		private IEnumerator GunShot()
		{
			return null;
		}

		[Token(Token = "0x6003292")]
		[Address(RVA = "0x29802A8", Offset = "0x29802A8", VA = "0x29802A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F2FC", Offset = "0xE6F2FC")]
		private IEnumerator DisableChargeEffect()
		{
			return null;
		}

		[Token(Token = "0x6003293")]
		[Address(RVA = "0x2980320", Offset = "0x2980320", VA = "0x2980320")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F35C", Offset = "0xE6F35C")]
		private IEnumerator SpawnBullets(int count, bool useProjectilesSpawnPointsArray)
		{
			return null;
		}

		[Token(Token = "0x6003294")]
		[Address(RVA = "0x29803B4", Offset = "0x29803B4", VA = "0x29803B4")]
		private GameObject Spawn()
		{
			return null;
		}

		[Token(Token = "0x6003295")]
		[Address(RVA = "0x2980478", Offset = "0x2980478", VA = "0x2980478")]
		protected void DebugShot(Ray r, RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6003296")]
		[Address(RVA = "0x29805F8", Offset = "0x29805F8", VA = "0x29805F8", Slot = "9")]
		public void Freeze(bool value)
		{
		}

		[Token(Token = "0x6003297")]
		[Address(RVA = "0x2980604", Offset = "0x2980604", VA = "0x2980604", Slot = "7")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6003298")]
		[Address(RVA = "0x2980638", Offset = "0x2980638", VA = "0x2980638")]
		public Weapon()
		{
		}
	}
	[Token(Token = "0x2000804")]
	public class WeaponData : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68884", Offset = "0xE68884")]
		private string weaponName;

		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE688D0", Offset = "0xE688D0")]
		[SerializeField]
		private Sprite[] preview;

		[Token(Token = "0x170004C1")]
		public string WeaponName
		{
			[Token(Token = "0x60032B5")]
			[Address(RVA = "0x2986A98", Offset = "0x2986A98", VA = "0x2986A98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032B6")]
			[Address(RVA = "0x2986AA0", Offset = "0x2986AA0", VA = "0x2986AA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public Sprite[] Preview
		{
			[Token(Token = "0x60032B7")]
			[Address(RVA = "0x2986AA8", Offset = "0x2986AA8", VA = "0x2986AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032B8")]
			[Address(RVA = "0x2986AB0", Offset = "0x2986AB0", VA = "0x2986AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event UnityAction OnPointerEnterEvent
		{
			[Token(Token = "0x60032B1")]
			[Address(RVA = "0x2986818", Offset = "0x2986818", VA = "0x2986818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F4FC", Offset = "0xE6F4FC")]
			add
			{
			}
			[Token(Token = "0x60032B2")]
			[Address(RVA = "0x29868B8", Offset = "0x29868B8", VA = "0x29868B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F50C", Offset = "0xE6F50C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event UnityAction OnPointerExitEvent
		{
			[Token(Token = "0x60032B3")]
			[Address(RVA = "0x2986958", Offset = "0x2986958", VA = "0x2986958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F51C", Offset = "0xE6F51C")]
			add
			{
			}
			[Token(Token = "0x60032B4")]
			[Address(RVA = "0x29869F8", Offset = "0x29869F8", VA = "0x29869F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F52C", Offset = "0xE6F52C")]
			remove
			{
			}
		}

		[Token(Token = "0x60032B9")]
		[Address(RVA = "0x2986AB8", Offset = "0x2986AB8", VA = "0x2986AB8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60032BA")]
		[Address(RVA = "0x2986ACC", Offset = "0x2986ACC", VA = "0x2986ACC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60032BB")]
		[Address(RVA = "0x2986AE0", Offset = "0x2986AE0", VA = "0x2986AE0")]
		public WeaponData()
		{
		}
	}
	[Token(Token = "0x2000805")]
	public class WeaponSelector : MonoBehaviour
	{
		[Token(Token = "0x2000806")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE594B0", Offset = "0xE594B0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4002DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WeaponSelector <>4__this;

			[Token(Token = "0x60032CA")]
			[Address(RVA = "0x2066C8C", Offset = "0x2066C8C", VA = "0x2066C8C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60032CB")]
			[Address(RVA = "0x2066C94", Offset = "0x2066C94", VA = "0x2066C94")]
			internal void <Start>b__0()
			{
			}

			[Token(Token = "0x60032CC")]
			[Address(RVA = "0x2066CB8", Offset = "0x2066CB8", VA = "0x2066CB8")]
			internal void <Start>b__1()
			{
			}

			[Token(Token = "0x60032CD")]
			[Address(RVA = "0x2066CDC", Offset = "0x2066CDC", VA = "0x2066CDC")]
			internal void <Start>b__2()
			{
			}
		}

		[Token(Token = "0x4002D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6892C", Offset = "0xE6892C")]
		[SerializeField]
		private Button[] buttons;

		[Token(Token = "0x4002D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68978", Offset = "0xE68978")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4002D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE689C4", Offset = "0xE689C4")]
		private KeyCode openCloseKey;

		[Token(Token = "0x4002D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68A10", Offset = "0xE68A10")]
		[SerializeField]
		private float defaultAlpha;

		[Token(Token = "0x4002DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68A5C", Offset = "0xE68A5C")]
		[SerializeField]
		private float selectedAlpha;

		[Token(Token = "0x4002DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68AA8", Offset = "0xE68AA8")]
		[SerializeField]
		private UIImageSpriteSequence weaponPreview;

		[Token(Token = "0x4002DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68AF4", Offset = "0xE68AF4")]
		[SerializeField]
		private Text descriptionLabel;

		[Token(Token = "0x4002DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68B40", Offset = "0xE68B40")]
		[SerializeField]
		private GameObject[] disablingObjects;

		[Token(Token = "0x4002DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68B8C", Offset = "0xE68B8C")]
		private PlayerController playerController;

		[Token(Token = "0x4002DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isOpened;

		[Token(Token = "0x4002DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isClosed;

		[Token(Token = "0x4002DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Button selected;

		[Token(Token = "0x4002DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WeaponData data;

		[Token(Token = "0x4002DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int currentWeaponIndex;

		[Token(Token = "0x4002DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int currentHoverWeaponIndex;

		[Token(Token = "0x14000011")]
		public event UnityAction<int> OnSelectedEvent
		{
			[Token(Token = "0x60032BC")]
			[Address(RVA = "0x2988BBC", Offset = "0x2988BBC", VA = "0x2988BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F53C", Offset = "0xE6F53C")]
			add
			{
			}
			[Token(Token = "0x60032BD")]
			[Address(RVA = "0x2988C5C", Offset = "0x2988C5C", VA = "0x2988C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F54C", Offset = "0xE6F54C")]
			remove
			{
			}
		}

		[Token(Token = "0x60032BE")]
		[Address(RVA = "0x2988CFC", Offset = "0x2988CFC", VA = "0x2988CFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60032BF")]
		[Address(RVA = "0x2988F2C", Offset = "0x2988F2C", VA = "0x2988F2C")]
		private void OnWeaponPointerExit(int index)
		{
		}

		[Token(Token = "0x60032C0")]
		[Address(RVA = "0x2988FCC", Offset = "0x2988FCC", VA = "0x2988FCC")]
		private void OnWeaponPointerEnter(int index)
		{
		}

		[Token(Token = "0x60032C1")]
		[Address(RVA = "0x298910C", Offset = "0x298910C", VA = "0x298910C")]
		private void OnSelected(int index)
		{
		}

		[Token(Token = "0x60032C2")]
		[Address(RVA = "0x2989268", Offset = "0x2989268", VA = "0x2989268")]
		private void ButtonClicked(int index)
		{
		}

		[Token(Token = "0x60032C3")]
		[Address(RVA = "0x298937C", Offset = "0x298937C", VA = "0x298937C")]
		public void Open()
		{
		}

		[Token(Token = "0x60032C4")]
		[Address(RVA = "0x2989178", Offset = "0x2989178", VA = "0x2989178")]
		public void SetSelected(int index)
		{
		}

		[Token(Token = "0x60032C5")]
		[Address(RVA = "0x29890B8", Offset = "0x29890B8", VA = "0x29890B8")]
		private void UpdateDescription(WeaponData data)
		{
		}

		[Token(Token = "0x60032C6")]
		[Address(RVA = "0x2989298", Offset = "0x2989298", VA = "0x2989298")]
		public void Close()
		{
		}

		[Token(Token = "0x60032C7")]
		[Address(RVA = "0x29894CC", Offset = "0x29894CC", VA = "0x29894CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60032C8")]
		[Address(RVA = "0x29895EC", Offset = "0x29895EC", VA = "0x29895EC")]
		private void Switch()
		{
		}

		[Token(Token = "0x60032C9")]
		[Address(RVA = "0x29895FC", Offset = "0x29895FC", VA = "0x29895FC")]
		public WeaponSelector()
		{
		}
	}
	[Token(Token = "0x2000807")]
	public class GravityGunWeapon : MonoBehaviour, IWeapon
	{
		[Token(Token = "0x2000808")]
		public enum FireType
		{
			[Token(Token = "0x4002DD1")]
			Bullets,
			[Token(Token = "0x4002DD2")]
			Constant
		}

		[Token(Token = "0x2000809")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE594C0", Offset = "0xE594C0")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x4002DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ray r;

			[Token(Token = "0x60032E9")]
			[Address(RVA = "0x28439AC", Offset = "0x28439AC", VA = "0x28439AC")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0x28439B4", Offset = "0x28439B4", VA = "0x28439B4")]
			internal float <SphereCastAll>b__0(RaycastHit h)
			{
				return default(float);
			}
		}

		[Token(Token = "0x200080A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE594D0", Offset = "0xE594D0")]
		private sealed class <DisableGrabParticlesWithDelay>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GravityGunWeapon <>4__this;

			[Token(Token = "0x170004C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032EE")]
				[Address(RVA = "0x2843B24", Offset = "0x2843B24", VA = "0x2843B24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F0")]
				[Address(RVA = "0x2843B6C", Offset = "0x2843B6C", VA = "0x2843B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032EB")]
			[Address(RVA = "0x2843A20", Offset = "0x2843A20", VA = "0x2843A20")]
			[DebuggerHidden]
			public <DisableGrabParticlesWithDelay>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x60032EC")]
			[Address(RVA = "0x2843A4C", Offset = "0x2843A4C", VA = "0x2843A4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032ED")]
			[Address(RVA = "0x2843A50", Offset = "0x2843A50", VA = "0x2843A50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032EF")]
			[Address(RVA = "0x2843B2C", Offset = "0x2843B2C", VA = "0x2843B2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform attractPoint;

		[Token(Token = "0x4002DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float attractForce;

		[Token(Token = "0x4002DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve attractByDistanceCurve;

		[Token(Token = "0x4002DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve dragByDistanceCurve;

		[Token(Token = "0x4002DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve angularDragByDistanceCurve;

		[Token(Token = "0x4002DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float attractMaxDistance;

		[Token(Token = "0x4002DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float throwForce;

		[Token(Token = "0x4002DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float attachDistanceThreshold;

		[Token(Token = "0x4002DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float maximumMass;

		[Token(Token = "0x4002DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float activateInterval;

		[Token(Token = "0x4002DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ParticleGroupEmitter grabEmitter;

		[Token(Token = "0x4002DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleGroupEmitter throwEmitter;

		[Token(Token = "0x4002DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68CD8", Offset = "0xE68CD8")]
		public Camera playerCamera;

		[Token(Token = "0x4002DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68D10", Offset = "0xE68D10")]
		public LayerMask RigidbodiesMask;

		[Token(Token = "0x4002DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE68D48", Offset = "0xE68D48")]
		public float DefaultFov;

		[Token(Token = "0x4002DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Animator handsAnimator;

		[Token(Token = "0x4002DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isGrabbed;

		[Token(Token = "0x4002DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool isGrabbing;

		[Token(Token = "0x4002DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool isAttached;

		[Token(Token = "0x4002DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool isThrown;

		[Token(Token = "0x4002DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool isLeaved;

		[Token(Token = "0x4002DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool isFreezed;

		[Token(Token = "0x4002DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float currentFov;

		[Token(Token = "0x4002DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Vector3> grabbedBodyPositions;

		[Token(Token = "0x4002DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Rigidbody grabbedBody;

		[Token(Token = "0x4002DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider[] grabbedBodyColliders;

		[Token(Token = "0x4002DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform grabbedBodyParent;

		[Token(Token = "0x4002DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float grabbedBodyDrag;

		[Token(Token = "0x4002DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float grabbedBodyAngularDrag;

		[Token(Token = "0x4002DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastActivationTime;

		[Token(Token = "0x4002DCF")]
		private const int maxOldPositions = 15;

		[Token(Token = "0x170004C3")]
		public float CurrentFov
		{
			[Token(Token = "0x60032D6")]
			[Address(RVA = "0x25208BC", Offset = "0x25208BC", VA = "0x25208BC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004C4")]
		public bool isActive
		{
			[Token(Token = "0x60032D7")]
			[Address(RVA = "0x25208C4", Offset = "0x25208C4", VA = "0x25208C4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<Vector2> OnFire
		{
			[Token(Token = "0x60032CE")]
			[Address(RVA = "0x252059C", Offset = "0x252059C", VA = "0x252059C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F55C", Offset = "0xE6F55C")]
			add
			{
			}
			[Token(Token = "0x60032CF")]
			[Address(RVA = "0x252063C", Offset = "0x252063C", VA = "0x252063C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F56C", Offset = "0xE6F56C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action OnGrab
		{
			[Token(Token = "0x60032D0")]
			[Address(RVA = "0x2520294", Offset = "0x2520294", VA = "0x2520294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F57C", Offset = "0xE6F57C")]
			add
			{
			}
			[Token(Token = "0x60032D1")]
			[Address(RVA = "0x25206DC", Offset = "0x25206DC", VA = "0x25206DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F58C", Offset = "0xE6F58C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action OnLeave
		{
			[Token(Token = "0x60032D2")]
			[Address(RVA = "0x2520334", Offset = "0x2520334", VA = "0x2520334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F59C", Offset = "0xE6F59C")]
			add
			{
			}
			[Token(Token = "0x60032D3")]
			[Address(RVA = "0x252077C", Offset = "0x252077C", VA = "0x252077C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F5AC", Offset = "0xE6F5AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action OnThrow
		{
			[Token(Token = "0x60032D4")]
			[Address(RVA = "0x25203D4", Offset = "0x25203D4", VA = "0x25203D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F5BC", Offset = "0xE6F5BC")]
			add
			{
			}
			[Token(Token = "0x60032D5")]
			[Address(RVA = "0x252081C", Offset = "0x252081C", VA = "0x252081C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F5CC", Offset = "0xE6F5CC")]
			remove
			{
			}
		}

		[Token(Token = "0x60032D8")]
		[Address(RVA = "0x25208E8", Offset = "0x25208E8", VA = "0x25208E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60032D9")]
		[Address(RVA = "0x2520944", Offset = "0x2520944", VA = "0x2520944")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60032DA")]
		[Address(RVA = "0x2520984", Offset = "0x2520984", VA = "0x2520984")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60032DB")]
		[Address(RVA = "0x2520998", Offset = "0x2520998", VA = "0x2520998", Slot = "10")]
		protected virtual void OnEnableHook()
		{
		}

		[Token(Token = "0x60032DC")]
		[Address(RVA = "0x252099C", Offset = "0x252099C", VA = "0x252099C", Slot = "11")]
		protected virtual void OnDisableHook()
		{
		}

		[Token(Token = "0x60032DD")]
		[Address(RVA = "0x25209A0", Offset = "0x25209A0", VA = "0x25209A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60032DE")]
		[Address(RVA = "0x25213FC", Offset = "0x25213FC", VA = "0x25213FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60032DF")]
		[Address(RVA = "0x2521160", Offset = "0x2521160", VA = "0x2521160")]
		protected void Leave()
		{
		}

		[Token(Token = "0x60032E0")]
		[Address(RVA = "0x2520A48", Offset = "0x2520A48", VA = "0x2520A48")]
		protected void Grab()
		{
		}

		[Token(Token = "0x60032E1")]
		[Address(RVA = "0x2521678", Offset = "0x2521678", VA = "0x2521678")]
		private void FindObjectToGrab()
		{
		}

		[Token(Token = "0x60032E2")]
		[Address(RVA = "0x2521950", Offset = "0x2521950", VA = "0x2521950")]
		private List<RaycastHit> SphereCastAll(Ray r, float radius, float maxDistance, int mask)
		{
			return null;
		}

		[Token(Token = "0x60032E3")]
		[Address(RVA = "0x2521B00", Offset = "0x2521B00", VA = "0x2521B00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F5DC", Offset = "0xE6F5DC")]
		private IEnumerator DisableGrabParticlesWithDelay()
		{
			return null;
		}

		[Token(Token = "0x60032E4")]
		[Address(RVA = "0x2520B64", Offset = "0x2520B64", VA = "0x2520B64")]
		private void Throw()
		{
		}

		[Token(Token = "0x60032E5")]
		[Address(RVA = "0x2521B78", Offset = "0x2521B78", VA = "0x2521B78", Slot = "9")]
		public void Freeze(bool value)
		{
		}

		[Token(Token = "0x60032E6")]
		[Address(RVA = "0x2521B84", Offset = "0x2521B84", VA = "0x2521B84", Slot = "7")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60032E7")]
		[Address(RVA = "0x2521BB8", Offset = "0x2521BB8", VA = "0x2521BB8")]
		public GravityGunWeapon()
		{
		}

		[Token(Token = "0x60032E8")]
		[Address(RVA = "0x2521CEC", Offset = "0x2521CEC", VA = "0x2521CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F63C", Offset = "0xE6F63C")]
		private bool <FindObjectToGrab>b__57_0(RaycastHit h)
		{
			return default(bool);
		}
	}
}
namespace Knife.ScifiEffects
{
	[Token(Token = "0x200080B")]
	public class AutoAim : MonoBehaviour, ITargetContainer, ISmoothPhysics
	{
		[Token(Token = "0x4002DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68D80", Offset = "0xE68D80")]
		private Transform <target>k__BackingField;

		[Token(Token = "0x4002DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68D90", Offset = "0xE68D90")]
		private Vector3 <targetPosition>k__BackingField;

		[Token(Token = "0x4002DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE68DA0", Offset = "0xE68DA0")]
		private LockData <lockTarget>k__BackingField;

		[Token(Token = "0x4002DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float smoothTime;

		[Token(Token = "0x4002DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool physics;

		[Token(Token = "0x4002DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool smoothPhysics;

		[Token(Token = "0x4002DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x4002DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4002DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float threshold;

		[Token(Token = "0x4002DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve smoothByDistanceCurve;

		[Token(Token = "0x4002DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool skipTargetOnMiss;

		[Token(Token = "0x4002DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float elapsedTime;

		[Token(Token = "0x4002DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool skipTarget;

		[Token(Token = "0x170004C7")]
		public Transform target
		{
			[Token(Token = "0x60032F1")]
			[Address(RVA = "0x28FF698", Offset = "0x28FF698", VA = "0x28FF698", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F69C", Offset = "0xE6F69C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032F2")]
			[Address(RVA = "0x28FF6A0", Offset = "0x28FF6A0", VA = "0x28FF6A0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F6AC", Offset = "0xE6F6AC")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public Vector3 targetPosition
		{
			[Token(Token = "0x60032F3")]
			[Address(RVA = "0x28FF6A8", Offset = "0x28FF6A8", VA = "0x28FF6A8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F6BC", Offset = "0xE6F6BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60032F4")]
			[Address(RVA = "0x28FF6B4", Offset = "0x28FF6B4", VA = "0x28FF6B4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F6CC", Offset = "0xE6F6CC")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public LockData lockTarget
		{
			[Token(Token = "0x60032F5")]
			[Address(RVA = "0x28FF6C0", Offset = "0x28FF6C0", VA = "0x28FF6C0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F6DC", Offset = "0xE6F6DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032F6")]
			[Address(RVA = "0x28FF6C8", Offset = "0x28FF6C8", VA = "0x28FF6C8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6F6EC", Offset = "0xE6F6EC")]
			set
			{
			}
		}

		[Token(Token = "0x60032F7")]
		[Address(RVA = "0x28FF6D0", Offset = "0x28FF6D0", VA = "0x28FF6D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60032F8")]
		[Address(RVA = "0x28FF6DC", Offset = "0x28FF6DC", VA = "0x28FF6DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60032F9")]
		[Address(RVA = "0x28FF720", Offset = "0x28FF720", VA = "0x28FF720")]
		private void Rotate(float deltaTime)
		{
		}

		[Token(Token = "0x60032FA")]
		[Address(RVA = "0x28FF9C4", Offset = "0x28FF9C4", VA = "0x28FF9C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60032FB")]
		[Address(RVA = "0x28FFA08", Offset = "0x28FFA08", VA = "0x28FFA08", Slot = "10")]
		public void UpdateSmoothly(float deltaTime)
		{
		}

		[Token(Token = "0x60032FC")]
		[Address(RVA = "0x28FFA0C", Offset = "0x28FFA0C", VA = "0x28FFA0C")]
		public AutoAim()
		{
		}
	}
	[Token(Token = "0x200080C")]
	public class DoubleBallProjectile : MonoBehaviour
	{
		[Token(Token = "0x4002DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float forwardSpeed;

		[Token(Token = "0x4002DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float expansionSpeed;

		[Token(Token = "0x4002DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve expansionCurve;

		[Token(Token = "0x4002DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lifeTime;

		[Token(Token = "0x4002DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform leftBall;

		[Token(Token = "0x4002DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform rightBall;

		[Token(Token = "0x4002DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform lightningPivotTransform;

		[Token(Token = "0x4002DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int raysCount;

		[Token(Token = "0x4002DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float baseWidth;

		[Token(Token = "0x4002DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject explosionPrefab;

		[Token(Token = "0x4002DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4002DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float elapsedTime;

		[Token(Token = "0x4002DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float bulletSize;

		[Token(Token = "0x4002DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float raycastDistanceFactor;

		[Token(Token = "0x4002DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 left;

		[Token(Token = "0x4002DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 right;

		[Token(Token = "0x4002DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lineScale;

		[Token(Token = "0x4002DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 deltaPosition;

		[Token(Token = "0x4002DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Collider, List<RaycastHit>> hits;

		[Token(Token = "0x60032FD")]
		[Address(RVA = "0x24EA4EC", Offset = "0x24EA4EC", VA = "0x24EA4EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60032FE")]
		[Address(RVA = "0x24EA5FC", Offset = "0x24EA5FC", VA = "0x24EA5FC")]
		private bool Raycast()
		{
			return default(bool);
		}

		[Token(Token = "0x60032FF")]
		[Address(RVA = "0x24EAB88", Offset = "0x24EAB88", VA = "0x24EAB88")]
		private void CollideEnd()
		{
		}

		[Token(Token = "0x6003300")]
		[Address(RVA = "0x24EA93C", Offset = "0x24EA93C", VA = "0x24EA93C")]
		private void Collide(RaycastHit hit)
		{
		}

		[Token(Token = "0x6003301")]
		[Address(RVA = "0x24EA7E8", Offset = "0x24EA7E8", VA = "0x24EA7E8")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x6003302")]
		[Address(RVA = "0x24EA918", Offset = "0x24EA918", VA = "0x24EA918")]
		private void Die()
		{
		}

		[Token(Token = "0x6003303")]
		[Address(RVA = "0x24EB08C", Offset = "0x24EB08C", VA = "0x24EB08C")]
		private GameObject SpawnExplosion()
		{
			return null;
		}

		[Token(Token = "0x6003304")]
		[Address(RVA = "0x24EA860", Offset = "0x24EA860", VA = "0x24EA860")]
		private void Move()
		{
		}

		[Token(Token = "0x6003305")]
		[Address(RVA = "0x24EA8B4", Offset = "0x24EA8B4", VA = "0x24EA8B4")]
		private void UpdateSystem()
		{
		}

		[Token(Token = "0x6003306")]
		[Address(RVA = "0x24EA5EC", Offset = "0x24EA5EC", VA = "0x24EA5EC")]
		private void CalculatePosition()
		{
		}

		[Token(Token = "0x6003307")]
		[Address(RVA = "0x24EB19C", Offset = "0x24EB19C", VA = "0x24EB19C")]
		private void CalculatePosition(out Vector3 left, out Vector3 right, out Vector3 lineScale)
		{
		}

		[Token(Token = "0x6003308")]
		[Address(RVA = "0x24EB274", Offset = "0x24EB274", VA = "0x24EB274")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6003309")]
		[Address(RVA = "0x24EB378", Offset = "0x24EB378", VA = "0x24EB378")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600330A")]
		[Address(RVA = "0x24EB418", Offset = "0x24EB418", VA = "0x24EB418")]
		public DoubleBallProjectile()
		{
		}
	}
	[Token(Token = "0x200080D")]
	public interface ITargetContainer
	{
		[Token(Token = "0x170004CA")]
		LockData lockTarget
		{
			[Token(Token = "0x600330B")]
			get;
			[Token(Token = "0x600330C")]
			set;
		}

		[Token(Token = "0x170004CB")]
		Transform target
		{
			[Token(Token = "0x600330D")]
			get;
			[Token(Token = "0x600330E")]
			set;
		}

		[Token(Token = "0x170004CC")]
		Vector3 targetPosition
		{
			[Token(Token = "0x600330F")]
			get;
			[Token(Token = "0x6003310")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x200080E")]
	public class LockData
	{
		[Token(Token = "0x4002DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 point;

		[Token(Token = "0x4002DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform transform;

		[Token(Token = "0x4002DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IHittable hittable;

		[Token(Token = "0x4002DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTarget;

		[Token(Token = "0x170004CD")]
		public IHittable Hittable
		{
			[Token(Token = "0x6003311")]
			[Address(RVA = "0x24D7CE8", Offset = "0x24D7CE8", VA = "0x24D7CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		public Transform Transform
		{
			[Token(Token = "0x6003312")]
			[Address(RVA = "0x24D7CF0", Offset = "0x24D7CF0", VA = "0x24D7CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CF")]
		public Vector3 LocalPoint
		{
			[Token(Token = "0x6003313")]
			[Address(RVA = "0x24D7CF8", Offset = "0x24D7CF8", VA = "0x24D7CF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6003314")]
			[Address(RVA = "0x24D7D04", Offset = "0x24D7D04", VA = "0x24D7D04")]
			set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		public Vector3 WorldPoint
		{
			[Token(Token = "0x6003315")]
			[Address(RVA = "0x24D7D10", Offset = "0x24D7D10", VA = "0x24D7D10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6003316")]
			[Address(RVA = "0x24D7D54", Offset = "0x24D7D54", VA = "0x24D7D54")]
			set
			{
			}
		}

		[Token(Token = "0x6003317")]
		[Address(RVA = "0x24D7D94", Offset = "0x24D7D94", VA = "0x24D7D94")]
		public void Set(Transform transform, IHittable hittable)
		{
		}

		[Token(Token = "0x6003318")]
		[Address(RVA = "0x24D7DD4", Offset = "0x24D7DD4", VA = "0x24D7DD4")]
		public LockData()
		{
		}
	}
	[Token(Token = "0x200080F")]
	public class Pause : MonoBehaviour
	{
		[Token(Token = "0x6003319")]
		[Address(RVA = "0x230C0EC", Offset = "0x230C0EC", VA = "0x230C0EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600331A")]
		[Address(RVA = "0x230C0F8", Offset = "0x230C0F8", VA = "0x230C0F8")]
		public Pause()
		{
		}
	}
	[Token(Token = "0x2000810")]
	public class RaycastHelper : MonoBehaviour
	{
		[Token(Token = "0x600331B")]
		[Address(RVA = "0x27194B8", Offset = "0x27194B8", VA = "0x27194B8")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x600331C")]
		[Address(RVA = "0x2719608", Offset = "0x2719608", VA = "0x2719608")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600331D")]
		[Address(RVA = "0x2719610", Offset = "0x2719610", VA = "0x2719610")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600331E")]
		[Address(RVA = "0x2719618", Offset = "0x2719618", VA = "0x2719618")]
		public RaycastHelper()
		{
		}
	}
	[Token(Token = "0x2000811")]
	public class RaycastProjectile : MonoBehaviour, ISmoothPhysics
	{
		[Token(Token = "0x4002DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maximumDistance;

		[Token(Token = "0x4002DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float lifeTime;

		[Token(Token = "0x4002DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4002DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4002DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject explosion;

		[Token(Token = "0x4002E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float thresholdByNormal;

		[Token(Token = "0x4002E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE68F70", Offset = "0xE68F70")]
		[SerializeField]
		private int bounceLimitMin;

		[Token(Token = "0x4002E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE68FB0", Offset = "0xE68FB0")]
		private int bounceLimitMax;

		[Token(Token = "0x4002E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE68FF0", Offset = "0xE68FF0")]
		private float bounceThreshold;

		[Token(Token = "0x4002E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69030", Offset = "0xE69030")]
		[SerializeField]
		private float bounceChance;

		[Token(Token = "0x4002E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool smoothPhysics;

		[Token(Token = "0x4002E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] disablingComponents;

		[Token(Token = "0x4002E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float bulletSize;

		[Token(Token = "0x4002E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Behaviour[] disablingBehaviours;

		[Token(Token = "0x4002E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform raycastOrigin;

		[Token(Token = "0x4002E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float explosionScale;

		[Token(Token = "0x4002E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TrailRenderer TrailRenderer;

		[Token(Token = "0x4002E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int hits;

		[Token(Token = "0x4002E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int bounceLimit;

		[Token(Token = "0x4002E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isHitted;

		[Token(Token = "0x4002E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float distance;

		[Token(Token = "0x4002E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float elapsedTime;

		[Token(Token = "0x600331F")]
		[Address(RVA = "0x2719C90", Offset = "0x2719C90", VA = "0x2719C90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003320")]
		[Address(RVA = "0x2719E70", Offset = "0x2719E70", VA = "0x2719E70")]
		private void Update()
		{
		}

		[Token(Token = "0x6003321")]
		[Address(RVA = "0x2719F94", Offset = "0x2719F94", VA = "0x2719F94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003322")]
		[Address(RVA = "0x2719FC8", Offset = "0x2719FC8", VA = "0x2719FC8")]
		private void UpdateProjectile(float deltaTime)
		{
		}

		[Token(Token = "0x6003323")]
		[Address(RVA = "0x2719EC8", Offset = "0x2719EC8", VA = "0x2719EC8")]
		private void OnHit()
		{
		}

		[Token(Token = "0x6003324")]
		[Address(RVA = "0x271A4A0", Offset = "0x271A4A0", VA = "0x271A4A0", Slot = "4")]
		public void UpdateSmoothly(float deltaTime)
		{
		}

		[Token(Token = "0x6003325")]
		[Address(RVA = "0x271A4A4", Offset = "0x271A4A4", VA = "0x271A4A4")]
		public RaycastProjectile()
		{
		}
	}
	[Token(Token = "0x2000812")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE594E0", Offset = "0xE594E0")]
	public class RendererFade : MonoBehaviour
	{
		[Token(Token = "0x2000813")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59540", Offset = "0xE59540")]
		private sealed class <Blend>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RendererFade <>4__this;

			[Token(Token = "0x4002E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4002E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetAlpha;

			[Token(Token = "0x4002E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Color <c>5__3;

			[Token(Token = "0x4002E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <startAlpha>5__4;

			[Token(Token = "0x170004D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600332E")]
				[Address(RVA = "0x206051C", Offset = "0x206051C", VA = "0x206051C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003330")]
				[Address(RVA = "0x2060564", Offset = "0x2060564", VA = "0x2060564", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600332B")]
			[Address(RVA = "0x2060354", Offset = "0x2060354", VA = "0x2060354")]
			[DebuggerHidden]
			public <Blend>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600332C")]
			[Address(RVA = "0x2060380", Offset = "0x2060380", VA = "0x2060380", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600332D")]
			[Address(RVA = "0x2060384", Offset = "0x2060384", VA = "0x2060384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600332F")]
			[Address(RVA = "0x2060524", Offset = "0x2060524", VA = "0x2060524", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer attachedRenderer;

		[Token(Token = "0x4002E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4002E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6003326")]
		[Address(RVA = "0x2720BDC", Offset = "0x2720BDC", VA = "0x2720BDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003327")]
		[Address(RVA = "0x2720C94", Offset = "0x2720C94", VA = "0x2720C94")]
		public void Fade(float time)
		{
		}

		[Token(Token = "0x6003328")]
		[Address(RVA = "0x2720D8C", Offset = "0x2720D8C", VA = "0x2720D8C")]
		public void Show(float time)
		{
		}

		[Token(Token = "0x6003329")]
		[Address(RVA = "0x2720D00", Offset = "0x2720D00", VA = "0x2720D00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F6FC", Offset = "0xE6F6FC")]
		private IEnumerator Blend(float targetAlpha, float time)
		{
			return null;
		}

		[Token(Token = "0x600332A")]
		[Address(RVA = "0x2720DF8", Offset = "0x2720DF8", VA = "0x2720DF8")]
		public RendererFade()
		{
		}
	}
	[Token(Token = "0x2000814")]
	public class RigidbodiesForceField : MonoBehaviour
	{
		[Token(Token = "0x2000815")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59550", Offset = "0xE59550")]
		private sealed class <Enable>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RigidbodiesForceField <>4__this;

			[Token(Token = "0x170004D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600333A")]
				[Address(RVA = "0x20608E8", Offset = "0x20608E8", VA = "0x20608E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600333C")]
				[Address(RVA = "0x2060930", Offset = "0x2060930", VA = "0x2060930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003337")]
			[Address(RVA = "0x206056C", Offset = "0x206056C", VA = "0x206056C")]
			[DebuggerHidden]
			public <Enable>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003338")]
			[Address(RVA = "0x2060598", Offset = "0x2060598", VA = "0x2060598", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003339")]
			[Address(RVA = "0x206059C", Offset = "0x206059C", VA = "0x206059C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600333B")]
			[Address(RVA = "0x20608F0", Offset = "0x20608F0", VA = "0x20608F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SphereCollider sphereCollider;

		[Token(Token = "0x4002E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float force;

		[Token(Token = "0x4002E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float orbitTorque;

		[Token(Token = "0x4002E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve forceByDistance;

		[Token(Token = "0x4002E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float workingTime;

		[Token(Token = "0x4002E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool continuous;

		[Token(Token = "0x4002E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float enableDelay;

		[Token(Token = "0x4002E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69150", Offset = "0xE69150")]
		[SerializeField]
		private float antiGravityFactor;

		[Token(Token = "0x4002E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> bodies;

		[Token(Token = "0x4002E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float elapsedTime;

		[Token(Token = "0x6003331")]
		[Address(RVA = "0x2721AF8", Offset = "0x2721AF8", VA = "0x2721AF8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6003332")]
		[Address(RVA = "0x2721BE0", Offset = "0x2721BE0", VA = "0x2721BE0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6003333")]
		[Address(RVA = "0x2721CC8", Offset = "0x2721CC8", VA = "0x2721CC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003334")]
		[Address(RVA = "0x2721CF8", Offset = "0x2721CF8", VA = "0x2721CF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F7AC", Offset = "0xE6F7AC")]
		private IEnumerator Enable()
		{
			return null;
		}

		[Token(Token = "0x6003335")]
		[Address(RVA = "0x2721D70", Offset = "0x2721D70", VA = "0x2721D70")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003336")]
		[Address(RVA = "0x2722154", Offset = "0x2722154", VA = "0x2722154")]
		public RigidbodiesForceField()
		{
		}
	}
	[Token(Token = "0x2000816")]
	public class TrailRendererFixedUpdate : MonoBehaviour, ISmoothPhysics
	{
		[Token(Token = "0x4002E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrailRenderer trailRenderer;

		[Token(Token = "0x4002E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool smoothPhysics;

		[Token(Token = "0x4002E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 oldPosition;

		[Token(Token = "0x600333D")]
		[Address(RVA = "0x2AB9634", Offset = "0x2AB9634", VA = "0x2AB9634", Slot = "4")]
		public void UpdateSmoothly(float deltaTime)
		{
		}

		[Token(Token = "0x600333E")]
		[Address(RVA = "0x2AB9638", Offset = "0x2AB9638", VA = "0x2AB9638")]
		private void AddCurrentPosition()
		{
		}

		[Token(Token = "0x600333F")]
		[Address(RVA = "0x2AB96C0", Offset = "0x2AB96C0", VA = "0x2AB96C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003340")]
		[Address(RVA = "0x2AB96D0", Offset = "0x2AB96D0", VA = "0x2AB96D0")]
		public TrailRendererFixedUpdate()
		{
		}
	}
	[Token(Token = "0x2000817")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59560", Offset = "0xE59560")]
	public class UIImageSpriteSequence : MonoBehaviour
	{
		[Token(Token = "0x4002E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite[] sprites;

		[Token(Token = "0x4002E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int framesPerSecond;

		[Token(Token = "0x4002E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float nextFrameTime;

		[Token(Token = "0x4002E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image image;

		[Token(Token = "0x4002E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int frame;

		[Token(Token = "0x170004D5")]
		private float frameInterval
		{
			[Token(Token = "0x6003341")]
			[Address(RVA = "0x2367E98", Offset = "0x2367E98", VA = "0x2367E98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003342")]
		[Address(RVA = "0x2367EAC", Offset = "0x2367EAC", VA = "0x2367EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6003343")]
		[Address(RVA = "0x2367F70", Offset = "0x2367F70", VA = "0x2367F70")]
		public void SetSequence(Sprite[] sequence)
		{
		}

		[Token(Token = "0x6003344")]
		[Address(RVA = "0x2367FA8", Offset = "0x2367FA8", VA = "0x2367FA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003345")]
		[Address(RVA = "0x2367F10", Offset = "0x2367F10", VA = "0x2367F10")]
		private void UpdateSprite()
		{
		}

		[Token(Token = "0x6003346")]
		[Address(RVA = "0x2368028", Offset = "0x2368028", VA = "0x2368028")]
		public UIImageSpriteSequence()
		{
		}
	}
	[Token(Token = "0x2000818")]
	public class HeatDecalFade : MonoBehaviour
	{
		[Token(Token = "0x2000819")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE595C0", Offset = "0xE595C0")]
		private sealed class <FadeAnimation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HeatDecalFade <>4__this;

			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x170004D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600334D")]
				[Address(RVA = "0x2844320", Offset = "0x2844320", VA = "0x2844320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600334F")]
				[Address(RVA = "0x2844368", Offset = "0x2844368", VA = "0x2844368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600334A")]
			[Address(RVA = "0x2844124", Offset = "0x2844124", VA = "0x2844124")]
			[DebuggerHidden]
			public <FadeAnimation>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600334B")]
			[Address(RVA = "0x2844150", Offset = "0x2844150", VA = "0x2844150", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600334C")]
			[Address(RVA = "0x2844154", Offset = "0x2844154", VA = "0x2844154", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600334E")]
			[Address(RVA = "0x2844328", Offset = "0x2844328", VA = "0x2844328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x4002E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float fadeTime;

		[Token(Token = "0x4002E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x4002E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string propertyName;

		[Token(Token = "0x4002E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] renderers;

		[Token(Token = "0x4002E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x6003347")]
		[Address(RVA = "0x2527FE8", Offset = "0x2527FE8", VA = "0x2527FE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003348")]
		[Address(RVA = "0x2528078", Offset = "0x2528078", VA = "0x2528078")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F85C", Offset = "0xE6F85C")]
		private IEnumerator FadeAnimation()
		{
			return null;
		}

		[Token(Token = "0x6003349")]
		[Address(RVA = "0x25280F0", Offset = "0x25280F0", VA = "0x25280F0")]
		public HeatDecalFade()
		{
		}
	}
	[Token(Token = "0x200081A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE595D0", Offset = "0xE595D0")]
	public class GravityGunDistortion : MonoBehaviour
	{
		[Token(Token = "0x4002E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GravityGunWeapon gravityGunWeapon;

		[Token(Token = "0x4002E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6003350")]
		[Address(RVA = "0x252014C", Offset = "0x252014C", VA = "0x252014C")]
		private void Start()
		{
		}

		[Token(Token = "0x6003351")]
		[Address(RVA = "0x2520474", Offset = "0x2520474", VA = "0x2520474")]
		private void OnThrow()
		{
		}

		[Token(Token = "0x6003352")]
		[Address(RVA = "0x25204D4", Offset = "0x25204D4", VA = "0x25204D4")]
		private void OnLeave()
		{
		}

		[Token(Token = "0x6003353")]
		[Address(RVA = "0x2520534", Offset = "0x2520534", VA = "0x2520534")]
		private void OnGrab()
		{
		}

		[Token(Token = "0x6003354")]
		[Address(RVA = "0x2520594", Offset = "0x2520594", VA = "0x2520594")]
		public GravityGunDistortion()
		{
		}
	}
	[Token(Token = "0x200081B")]
	public class Laser : MonoBehaviour
	{
		[Token(Token = "0x200081C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59630", Offset = "0xE59630")]
		private sealed class <SpawnLineParticles>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Laser <>4__this;

			[Token(Token = "0x170004D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600335C")]
				[Address(RVA = "0x20589C0", Offset = "0x20589C0", VA = "0x20589C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600335E")]
				[Address(RVA = "0x2058A08", Offset = "0x2058A08", VA = "0x2058A08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003359")]
			[Address(RVA = "0x205889C", Offset = "0x205889C", VA = "0x205889C")]
			[DebuggerHidden]
			public <SpawnLineParticles>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600335A")]
			[Address(RVA = "0x20588C8", Offset = "0x20588C8", VA = "0x20588C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0x20588CC", Offset = "0x20588CC", VA = "0x20588CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600335D")]
			[Address(RVA = "0x20589C8", Offset = "0x20589C8", VA = "0x20589C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4002E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject impactPrefab;

		[Token(Token = "0x4002E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float thresholdByNormal;

		[Token(Token = "0x4002E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer laser;

		[Token(Token = "0x4002E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform laserScalePivot;

		[Token(Token = "0x4002E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x4002E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float bulletSize;

		[Token(Token = "0x4002E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4002E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 targetPoint;

		[Token(Token = "0x4002E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IHittable hittable;

		[Token(Token = "0x4002E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Ray r;

		[Token(Token = "0x4002E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RaycastHit hit;

		[Token(Token = "0x6003355")]
		[Address(RVA = "0x20BA9F8", Offset = "0x20BA9F8", VA = "0x20BA9F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003356")]
		[Address(RVA = "0x20BAF90", Offset = "0x20BAF90", VA = "0x20BAF90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F90C", Offset = "0xE6F90C")]
		private IEnumerator SpawnLineParticles()
		{
			return null;
		}

		[Token(Token = "0x6003357")]
		[Address(RVA = "0x20BB008", Offset = "0x20BB008", VA = "0x20BB008")]
		private void Update()
		{
		}

		[Token(Token = "0x6003358")]
		[Address(RVA = "0x20BB04C", Offset = "0x20BB04C", VA = "0x20BB04C")]
		public Laser()
		{
		}
	}
	[Token(Token = "0x200081D")]
	public class LaserSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject prefab;

		[Token(Token = "0x4002E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fireRate;

		[Token(Token = "0x4002E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float nextFireTime;

		[Token(Token = "0x170004DA")]
		public float FireInterval
		{
			[Token(Token = "0x600335F")]
			[Address(RVA = "0x20BB544", Offset = "0x20BB544", VA = "0x20BB544")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003360")]
		[Address(RVA = "0x20BB554", Offset = "0x20BB554", VA = "0x20BB554")]
		private void Update()
		{
		}

		[Token(Token = "0x6003361")]
		[Address(RVA = "0x20BB5B0", Offset = "0x20BB5B0", VA = "0x20BB5B0")]
		private void Fire()
		{
		}

		[Token(Token = "0x6003362")]
		[Address(RVA = "0x20BB6C4", Offset = "0x20BB6C4", VA = "0x20BB6C4")]
		public LaserSpawner()
		{
		}
	}
	[Token(Token = "0x200081E")]
	public class Lightning : MonoBehaviour, ICustomActiveState
	{
		[Token(Token = "0x200081F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59640", Offset = "0xE59640")]
		private sealed class <ApplyDamageDelayed>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Lightning <>4__this;

			[Token(Token = "0x170004DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600336E")]
				[Address(RVA = "0x20598B8", Offset = "0x20598B8", VA = "0x20598B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003370")]
				[Address(RVA = "0x2059900", Offset = "0x2059900", VA = "0x2059900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600336B")]
			[Address(RVA = "0x20597C0", Offset = "0x20597C0", VA = "0x20597C0")]
			[DebuggerHidden]
			public <ApplyDamageDelayed>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600336C")]
			[Address(RVA = "0x20597EC", Offset = "0x20597EC", VA = "0x20597EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600336D")]
			[Address(RVA = "0x20597F0", Offset = "0x20597F0", VA = "0x20597F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600336F")]
			[Address(RVA = "0x20598C0", Offset = "0x20598C0", VA = "0x20598C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE59650", Offset = "0xE59650")]
		private sealed class <DisableWithDelay>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Lightning <>4__this;

			[Token(Token = "0x170004DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003374")]
				[Address(RVA = "0x2059B34", Offset = "0x2059B34", VA = "0x2059B34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003376")]
				[Address(RVA = "0x2059B7C", Offset = "0x2059B7C", VA = "0x2059B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003371")]
			[Address(RVA = "0x2059908", Offset = "0x2059908", VA = "0x2059908")]
			[DebuggerHidden]
			public <DisableWithDelay>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0x2059934", Offset = "0x2059934", VA = "0x2059934", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003373")]
			[Address(RVA = "0x2059938", Offset = "0x2059938", VA = "0x2059938", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003375")]
			[Address(RVA = "0x2059B3C", Offset = "0x2059B3C", VA = "0x2059B3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4002E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject impactPrefab;

		[Token(Token = "0x4002E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Light lightningLight;

		[Token(Token = "0x4002E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float damageDelay;

		[Token(Token = "0x4002E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float thresholdByNormal;

		[Token(Token = "0x4002E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool updateEveryFrame;

		[Token(Token = "0x4002E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float applyDamageInterval;

		[Token(Token = "0x4002E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool destroyAfterDamage;

		[Token(Token = "0x4002E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator[] lightningAnimators;

		[Token(Token = "0x4002E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] additionalObjects;

		[Token(Token = "0x4002E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleGroupEmitter effect;

		[Token(Token = "0x4002E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float disableDelay;

		[Token(Token = "0x4002E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4002E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float bulletSize;

		[Token(Token = "0x4002E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 targetPoint;

		[Token(Token = "0x4002E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Ray r;

		[Token(Token = "0x4002E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RaycastHit hit;

		[Token(Token = "0x4002E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float elapsedTime;

		[Token(Token = "0x4002E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool damaged;

		[Token(Token = "0x4002E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine disablingCoroutine;

		[Token(Token = "0x4002E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool isEnabled;

		[Token(Token = "0x4002E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Weapon wp_FirePoint;

		[Token(Token = "0x6003363")]
		[Address(RVA = "0x24CBCC4", Offset = "0x24CBCC4", VA = "0x24CBCC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003364")]
		[Address(RVA = "0x24CBCC8", Offset = "0x24CBCC8", VA = "0x24CBCC8")]
		public void GetTransform(bool tirgger)
		{
		}

		[Token(Token = "0x6003365")]
		[Address(RVA = "0x24CBEB8", Offset = "0x24CBEB8", VA = "0x24CBEB8")]
		private void Raycast()
		{
		}

		[Token(Token = "0x6003366")]
		[Address(RVA = "0x24CC104", Offset = "0x24CC104", VA = "0x24CC104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6F9BC", Offset = "0xE6F9BC")]
		private IEnumerator ApplyDamageDelayed()
		{
			return null;
		}

		[Token(Token = "0x6003367")]
		[Address(RVA = "0x24CC17C", Offset = "0x24CC17C", VA = "0x24CC17C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003368")]
		[Address(RVA = "0x24CC204", Offset = "0x24CC204", VA = "0x24CC204")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6FA1C", Offset = "0xE6FA1C")]
		private IEnumerator DisableWithDelay()
		{
			return null;
		}

		[Token(Token = "0x6003369")]
		[Address(RVA = "0x24CBCD0", Offset = "0x24CBCD0", VA = "0x24CBCD0", Slot = "4")]
		public void SetCustomActive(bool value)
		{
		}

		[Token(Token = "0x600336A")]
		[Address(RVA = "0x24CC27C", Offset = "0x24CC27C", VA = "0x24CC27C")]
		public Lightning()
		{
		}
	}
	[Token(Token = "0x2000821")]
	public class LocalRotator : MonoBehaviour
	{
		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxAngle;

		[Token(Token = "0x4002E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve Curve;

		[Token(Token = "0x4002E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LoopLength;

		[Token(Token = "0x4002E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Offset;

		[Token(Token = "0x4002E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 Axis;

		[Token(Token = "0x4002E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lateUpdate;

		[Token(Token = "0x4002E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE693B0", Offset = "0xE693B0")]
		private float <Speed>k__BackingField;

		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion startRotation;

		[Token(Token = "0x4002E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float elapsedTime;

		[Token(Token = "0x170004DF")]
		public float Speed
		{
			[Token(Token = "0x6003377")]
			[Address(RVA = "0x24D7B38", Offset = "0x24D7B38", VA = "0x24D7B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FB1C", Offset = "0xE6FB1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003378")]
			[Address(RVA = "0x24D7B40", Offset = "0x24D7B40", VA = "0x24D7B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FB2C", Offset = "0xE6FB2C")]
			set
			{
			}
		}

		[Token(Token = "0x6003379")]
		[Address(RVA = "0x24D7B48", Offset = "0x24D7B48", VA = "0x24D7B48")]
		private void Start()
		{
		}

		[Token(Token = "0x600337A")]
		[Address(RVA = "0x24D7B8C", Offset = "0x24D7B8C", VA = "0x24D7B8C")]
		private void Update()
		{
		}

		[Token(Token = "0x600337B")]
		[Address(RVA = "0x24D7B9C", Offset = "0x24D7B9C", VA = "0x24D7B9C")]
		private void UpdateRotator()
		{
		}

		[Token(Token = "0x600337C")]
		[Address(RVA = "0x24D7C94", Offset = "0x24D7C94", VA = "0x24D7C94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600337D")]
		[Address(RVA = "0x24D7CA4", Offset = "0x24D7CA4", VA = "0x24D7CA4")]
		public LocalRotator()
		{
		}
	}
	[Token(Token = "0x2000822")]
	public class RandomProperty : MonoBehaviour
	{
		[Token(Token = "0x4002E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string propertyName;

		[Token(Token = "0x4002E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer cachedRenderer;

		[Token(Token = "0x4002E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x600337E")]
		[Address(RVA = "0x2718660", Offset = "0x2718660", VA = "0x2718660")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600337F")]
		[Address(RVA = "0x271872C", Offset = "0x271872C", VA = "0x271872C")]
		public RandomProperty()
		{
		}
	}
	[Token(Token = "0x2000823")]
	public class RotationAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float animationDuration;

		[Token(Token = "0x4002E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x4002E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion startRotation;

		[Token(Token = "0x4002E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Quaternion endRotation;

		[Token(Token = "0x4002E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float elapsedTime;

		[Token(Token = "0x6003380")]
		[Address(RVA = "0x24BC7B4", Offset = "0x24BC7B4", VA = "0x24BC7B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003381")]
		[Address(RVA = "0x24BC7BC", Offset = "0x24BC7BC", VA = "0x24BC7BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6003382")]
		[Address(RVA = "0x24BC890", Offset = "0x24BC890", VA = "0x24BC890")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6FB3C", Offset = "0xE6FB3C")]
		private void SaveStartRotation()
		{
		}

		[Token(Token = "0x6003383")]
		[Address(RVA = "0x24BC8CC", Offset = "0x24BC8CC", VA = "0x24BC8CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6FB74", Offset = "0xE6FB74")]
		private void SaveEndRotation()
		{
		}

		[Token(Token = "0x6003384")]
		[Address(RVA = "0x24BC908", Offset = "0x24BC908", VA = "0x24BC908")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6FBAC", Offset = "0xE6FBAC")]
		private void LoadStartRotation()
		{
		}

		[Token(Token = "0x6003385")]
		[Address(RVA = "0x24BC940", Offset = "0x24BC940", VA = "0x24BC940")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE6FBE4", Offset = "0xE6FBE4")]
		private void LoadEndRotation()
		{
		}

		[Token(Token = "0x6003386")]
		[Address(RVA = "0x24BC978", Offset = "0x24BC978", VA = "0x24BC978")]
		public RotationAnimation()
		{
		}
	}
	[Token(Token = "0x2000824")]
	public class SmoothPhysics : MonoBehaviour
	{
		[Token(Token = "0x4002E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MonoBehaviour[] targets;

		[Token(Token = "0x4002E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69430", Offset = "0xE69430")]
		private int iterations;

		[Token(Token = "0x4002E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISmoothPhysics> smoothPhysicsTargets;

		[Token(Token = "0x6003387")]
		[Address(RVA = "0x216268C", Offset = "0x216268C", VA = "0x216268C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003388")]
		[Address(RVA = "0x2162784", Offset = "0x2162784", VA = "0x2162784")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003389")]
		[Address(RVA = "0x21628D8", Offset = "0x21628D8", VA = "0x21628D8")]
		public SmoothPhysics()
		{
		}
	}
	[Token(Token = "0x2000825")]
	public interface ISmoothPhysics
	{
		[Token(Token = "0x600338A")]
		void UpdateSmoothly(float deltaTime);
	}
}
namespace UnityEngine.XR.Interaction.Toolkit
{
	[Token(Token = "0x2000826")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59660", Offset = "0xE59660")]
	[DisallowMultipleComponent]
	public class XROtherController : XRControllerBase
	{
		[Token(Token = "0x4002E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ModelPrefab;

		[Token(Token = "0x4002E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_ModelTransform;

		[Token(Token = "0x4002E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_ModelGO;

		[Token(Token = "0x4002E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ModelSelectAni;

		[Token(Token = "0x4002E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string ModelDeSelectAni;

		[Token(Token = "0x4002E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IsLeftHand;

		[Token(Token = "0x4002E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool IsHideControllerModel;

		[Token(Token = "0x4002E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator aniCtrl;

		[Token(Token = "0x4002E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WUnit owner;

		[Token(Token = "0x4002E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private XRControllerCollector collector;

		[Token(Token = "0x4002E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PointToFunctionality PointToFunc;

		[Token(Token = "0x4002E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_HideControllerModel;

		[Token(Token = "0x170004E0")]
		public override bool IsLeft
		{
			[Token(Token = "0x600338B")]
			[Address(RVA = "0x20E41C0", Offset = "0x20E41C0", VA = "0x20E41C0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E1")]
		public override bool IsLocal
		{
			[Token(Token = "0x600338C")]
			[Address(RVA = "0x20E41C8", Offset = "0x20E41C8", VA = "0x20E41C8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E2")]
		public override int OwnerId
		{
			[Token(Token = "0x600338D")]
			[Address(RVA = "0x20E41D0", Offset = "0x20E41D0", VA = "0x20E41D0", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004E3")]
		public WUnit Owner
		{
			[Token(Token = "0x600338E")]
			[Address(RVA = "0x20E41EC", Offset = "0x20E41EC", VA = "0x20E41EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E4")]
		public override bool hideControllerModel
		{
			[Token(Token = "0x6003394")]
			[Address(RVA = "0x20E46A4", Offset = "0x20E46A4", VA = "0x20E46A4", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003395")]
			[Address(RVA = "0x20E46AC", Offset = "0x20E46AC", VA = "0x20E46AC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600338F")]
		[Address(RVA = "0x20E41F4", Offset = "0x20E41F4", VA = "0x20E41F4")]
		public void Init(WUnit owner, XRControllerCollector collector)
		{
		}

		[Token(Token = "0x6003390")]
		[Address(RVA = "0x20E45C0", Offset = "0x20E45C0", VA = "0x20E45C0")]
		public void DoDestroy()
		{
		}

		[Token(Token = "0x6003391")]
		[Address(RVA = "0x20E45C4", Offset = "0x20E45C4", VA = "0x20E45C4")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6003392")]
		[Address(RVA = "0x20E43C0", Offset = "0x20E43C0", VA = "0x20E43C0")]
		private void SetupModel()
		{
		}

		[Token(Token = "0x6003393")]
		[Address(RVA = "0x20E45E4", Offset = "0x20E45E4", VA = "0x20E45E4")]
		public void PlayAni(string ani, float transition, int layer)
		{
		}

		[Token(Token = "0x6003396")]
		[Address(RVA = "0x20E4764", Offset = "0x20E4764", VA = "0x20E4764")]
		public void PressTrigger(int pressedType, bool pressed)
		{
		}

		[Token(Token = "0x6003397")]
		[Address(RVA = "0x20E47C8", Offset = "0x20E47C8", VA = "0x20E47C8")]
		private void HandleInteractionAction(ref InteractionState interactionState, bool pressed)
		{
		}

		[Token(Token = "0x6003398")]
		[Address(RVA = "0x20E45D4", Offset = "0x20E45D4", VA = "0x20E45D4")]
		private void UpdateInput()
		{
		}

		[Token(Token = "0x6003399")]
		[Address(RVA = "0x20E47F4", Offset = "0x20E47F4", VA = "0x20E47F4")]
		public void ResetPointTo()
		{
		}

		[Token(Token = "0x600339A")]
		[Address(RVA = "0x20E4884", Offset = "0x20E4884", VA = "0x20E4884")]
		public XROtherController()
		{
		}
	}
}
namespace UnityEngine.XR.OpenXR.Samples.InterceptFeature
{
	[Token(Token = "0x2000827")]
	public class InterceptCreateSessionFeature : OpenXRFeature
	{
		[Token(Token = "0x2000828")]
		private delegate void OnMessageDelegate(string message);

		[Token(Token = "0x2000829")]
		internal delegate void ReceiveMessageDelegate(string message);

		[Token(Token = "0x4002E8B")]
		public const string featureId = "com.unity.openxr.feature.example.intercept";

		[Token(Token = "0x4002E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string message;

		[Token(Token = "0x4002E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69494", Offset = "0xE69494")]
		private string <receivedMessage>k__BackingField;

		[Token(Token = "0x4002E8E")]
		private const string ExtLib = "InterceptFeaturePlugin";

		[Token(Token = "0x170004E5")]
		public string receivedMessage
		{
			[Token(Token = "0x600339B")]
			[Address(RVA = "0x20B0EE0", Offset = "0x20B0EE0", VA = "0x20B0EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FC1C", Offset = "0xE6FC1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600339C")]
			[Address(RVA = "0x20B0EE8", Offset = "0x20B0EE8", VA = "0x20B0EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FC2C", Offset = "0xE6FC2C")]
			private set
			{
			}
		}

		[Token(Token = "0x600339D")]
		[Address(RVA = "0x20B0EF0", Offset = "0x20B0EF0", VA = "0x20B0EF0", Slot = "4")]
		protected override IntPtr HookGetInstanceProcAddr(IntPtr func)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600339E")]
		[Address(RVA = "0x20B0FF0", Offset = "0x20B0FF0", VA = "0x20B0FF0", Slot = "9")]
		protected override bool OnInstanceCreate(ulong xrInstance)
		{
			return default(bool);
		}

		[Token(Token = "0x600339F")]
		[Address(RVA = "0x20B0DB8", Offset = "0x20B0DB8", VA = "0x20B0DB8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xE6FC3C", Offset = "0xE6FC3C")]
		private static void OnMessage(string message)
		{
		}

		[Token(Token = "0x60033A0")]
		[Address(RVA = "0x20B121C", Offset = "0x20B121C", VA = "0x20B121C", Slot = "11")]
		protected override void OnSessionCreate(ulong xrSession)
		{
		}

		[Token(Token = "0x60033A1")]
		[Address(RVA = "0x20B12E0", Offset = "0x20B12E0", VA = "0x20B12E0", Slot = "14")]
		protected override void OnSessionBegin(ulong xrSession)
		{
		}

		[Token(Token = "0x60033A2")]
		[Address(RVA = "0x20B13A4", Offset = "0x20B13A4", VA = "0x20B13A4", Slot = "15")]
		protected override void OnSessionEnd(ulong xrSession)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60033A3")]
		[Address(RVA = "0x20B0F70", Offset = "0x20B0F70", VA = "0x20B0F70")]
		private static extern IntPtr intercept_xrCreateSession_xrGetInstanceProcAddr(IntPtr func);

		[PreserveSig]
		[Token(Token = "0x60033A4")]
		[Address(RVA = "0x20B1194", Offset = "0x20B1194", VA = "0x20B1194")]
		private static extern void Internal_SetMessage(string printString);

		[PreserveSig]
		[Token(Token = "0x60033A5")]
		[Address(RVA = "0x20B1110", Offset = "0x20B1110", VA = "0x20B1110")]
		private static extern void Internal_SetCallback(ReceiveMessageDelegate callback);

		[Token(Token = "0x60033A6")]
		[Address(RVA = "0x20B1468", Offset = "0x20B1468", VA = "0x20B1468")]
		public InterceptCreateSessionFeature()
		{
		}
	}
	[Token(Token = "0x200082A")]
	public class InterceptMessageHandler : MonoBehaviour
	{
		[Token(Token = "0x4002E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh textMesh;

		[Token(Token = "0x60033AF")]
		[Address(RVA = "0x20B14C4", Offset = "0x20B14C4", VA = "0x20B14C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60033B0")]
		[Address(RVA = "0x20B1604", Offset = "0x20B1604", VA = "0x20B1604")]
		public InterceptMessageHandler()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal
{
	[Token(Token = "0x200082B")]
	public class CustomPostProcessing : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x200082C")]
		public class CustomPostProcessingSettings
		{
			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string passTag;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderPassEvent Event;

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material blitMaterial;

			[Token(Token = "0x60033B4")]
			[Address(RVA = "0x20F52FC", Offset = "0x20F52FC", VA = "0x20F52FC")]
			public CustomPostProcessingSettings()
			{
			}
		}

		[Token(Token = "0x4002E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomPostProcessingSettings settings;

		[Token(Token = "0x4002E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomPostProcessingPass customPostProcessingPass;

		[Token(Token = "0x60033B1")]
		[Address(RVA = "0x21C4BB0", Offset = "0x21C4BB0", VA = "0x21C4BB0", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x60033B2")]
		[Address(RVA = "0x21C4D38", Offset = "0x21C4D38", VA = "0x21C4D38", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60033B3")]
		[Address(RVA = "0x21C4E4C", Offset = "0x21C4E4C", VA = "0x21C4E4C")]
		public CustomPostProcessing()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal.Internal
{
	[Token(Token = "0x200082D")]
	public class CustomPostProcessingPass : ScriptableRenderPass
	{
		[Token(Token = "0x200082E")]
		private static class ShaderConstants
		{
			[Token(Token = "0x4002E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int _MainTex;

			[Token(Token = "0x4002E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int _TintColor;

			[Token(Token = "0x4002E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int _GrayscalePower;
		}

		[Token(Token = "0x4002E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694A4", Offset = "0xE694A4")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x4002E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE694B4", Offset = "0xE694B4")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x4002E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material blitMaterial;

		[Token(Token = "0x4002E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTextureDescriptor m_Descriptor;

		[Token(Token = "0x4002E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private RenderTargetHandle m_TemporaryColorTexture;

		[Token(Token = "0x4002E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string m_ProfilerTag;

		[Token(Token = "0x4002E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ProfilingSampler m_ProfilingSampler;

		[Token(Token = "0x4002E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly GraphicsFormat m_DefaultHDRFormat;

		[Token(Token = "0x170004E6")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x60033B5")]
			[Address(RVA = "0x21C4EBC", Offset = "0x21C4EBC", VA = "0x21C4EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FC9C", Offset = "0xE6FC9C")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x60033B6")]
			[Address(RVA = "0x21C4ED4", Offset = "0x21C4ED4", VA = "0x21C4ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FCAC", Offset = "0xE6FCAC")]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x60033B7")]
			[Address(RVA = "0x21C4EEC", Offset = "0x21C4EEC", VA = "0x21C4EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FCBC", Offset = "0xE6FCBC")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x60033B8")]
			[Address(RVA = "0x21C4EF4", Offset = "0x21C4EF4", VA = "0x21C4EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FCCC", Offset = "0xE6FCCC")]
			set
			{
			}
		}

		[Token(Token = "0x60033B9")]
		[Address(RVA = "0x21C4C34", Offset = "0x21C4C34", VA = "0x21C4C34")]
		public CustomPostProcessingPass(RenderPassEvent renderPassEvent, string profilerTag)
		{
		}

		[Token(Token = "0x60033BA")]
		[Address(RVA = "0x21C4E2C", Offset = "0x21C4E2C", VA = "0x21C4E2C")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination, Material postprocessingMat)
		{
		}

		[Token(Token = "0x60033BB")]
		[Address(RVA = "0x21C4EFC", Offset = "0x21C4EFC", VA = "0x21C4EFC", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60033BC")]
		[Address(RVA = "0x21C5664", Offset = "0x21C5664", VA = "0x21C5664", Slot = "5")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}

		[Token(Token = "0x60033BD")]
		[Address(RVA = "0x21C55D0", Offset = "0x21C55D0", VA = "0x21C55D0")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor(int width, int height, GraphicsFormat format, int depthBufferBits = 0)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x60033BE")]
		[Address(RVA = "0x21C5710", Offset = "0x21C5710", VA = "0x21C5710")]
		private BuiltinRenderTextureType BlitDstDiscardContent(CommandBuffer cmd, RenderTargetIdentifier rt)
		{
			return default(BuiltinRenderTextureType);
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x200082F")]
	public enum AAMode
	{
		[Token(Token = "0x4002EA1")]
		FXAA2,
		[Token(Token = "0x4002EA2")]
		FXAA3Console,
		[Token(Token = "0x4002EA3")]
		FXAA1PresetA,
		[Token(Token = "0x4002EA4")]
		FXAA1PresetB,
		[Token(Token = "0x4002EA5")]
		NFAA,
		[Token(Token = "0x4002EA6")]
		SSAA,
		[Token(Token = "0x4002EA7")]
		DLAA
	}
	[Token(Token = "0x2000830")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE596AC", Offset = "0xE596AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE596AC", Offset = "0xE596AC")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x4002EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AAMode mode;

		[Token(Token = "0x4002EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showGeneratedNormals;

		[Token(Token = "0x4002EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float offsetScale;

		[Token(Token = "0x4002EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurRadius;

		[Token(Token = "0x4002EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeThresholdMin;

		[Token(Token = "0x4002EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float edgeThreshold;

		[Token(Token = "0x4002EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float edgeSharpness;

		[Token(Token = "0x4002EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool dlaaSharp;

		[Token(Token = "0x4002EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader ssaaShader;

		[Token(Token = "0x4002EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material ssaa;

		[Token(Token = "0x4002EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader dlaaShader;

		[Token(Token = "0x4002EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material dlaa;

		[Token(Token = "0x4002EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader nfaaShader;

		[Token(Token = "0x4002EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material nfaa;

		[Token(Token = "0x4002EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x4002EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x4002EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x4002EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x4002EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Shader shaderFXAAII;

		[Token(Token = "0x4002EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material materialFXAAII;

		[Token(Token = "0x4002EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x4002EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material materialFXAAIII;

		[Token(Token = "0x60033C0")]
		[Address(RVA = "0x2131460", Offset = "0x2131460", VA = "0x2131460")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x60033C1")]
		[Address(RVA = "0x21314C4", Offset = "0x21314C4", VA = "0x21314C4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033C2")]
		[Address(RVA = "0x2131638", Offset = "0x2131638", VA = "0x2131638")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033C3")]
		[Address(RVA = "0x2131BC4", Offset = "0x2131BC4", VA = "0x2131BC4")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x2000831")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59740", Offset = "0xE59740")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59740", Offset = "0xE59740")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x2000832")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4002EDD")]
			Ghosting,
			[Token(Token = "0x4002EDE")]
			Anamorphic,
			[Token(Token = "0x4002EDF")]
			Combined
		}

		[Token(Token = "0x2000833")]
		public enum TweakMode
		{
			[Token(Token = "0x4002EE1")]
			Basic,
			[Token(Token = "0x4002EE2")]
			Complex
		}

		[Token(Token = "0x2000834")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x4002EE4")]
			Auto,
			[Token(Token = "0x4002EE5")]
			On,
			[Token(Token = "0x4002EE6")]
			Off
		}

		[Token(Token = "0x2000835")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4002EE8")]
			Screen,
			[Token(Token = "0x4002EE9")]
			Add
		}

		[Token(Token = "0x2000836")]
		public enum BloomQuality
		{
			[Token(Token = "0x4002EEB")]
			Cheap,
			[Token(Token = "0x4002EEC")]
			High
		}

		[Token(Token = "0x4002EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode tweakMode;

		[Token(Token = "0x4002EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4002EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4002EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x4002EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x4002EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BloomQuality quality;

		[Token(Token = "0x4002EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x4002EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x4002EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color bloomThresholdColor;

		[Token(Token = "0x4002EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int bloomBlurIterations;

		[Token(Token = "0x4002EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4002EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float flareRotation;

		[Token(Token = "0x4002ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x4002ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hollyStretchWidth;

		[Token(Token = "0x4002ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareIntensity;

		[Token(Token = "0x4002ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lensflareThreshold;

		[Token(Token = "0x4002ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lensFlareSaturation;

		[Token(Token = "0x4002ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color flareColorA;

		[Token(Token = "0x4002ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color flareColorB;

		[Token(Token = "0x4002ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color flareColorC;

		[Token(Token = "0x4002ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color flareColorD;

		[Token(Token = "0x4002ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4002ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Shader lensFlareShader;

		[Token(Token = "0x4002ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4002ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader screenBlendShader;

		[Token(Token = "0x4002ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material screenBlend;

		[Token(Token = "0x4002ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x4002ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x4002EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4002EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60033C4")]
		[Address(RVA = "0x2908C14", Offset = "0x2908C14", VA = "0x2908C14", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033C5")]
		[Address(RVA = "0x2908D04", Offset = "0x2908D04", VA = "0x2908D04")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033C6")]
		[Address(RVA = "0x290A1B4", Offset = "0x290A1B4", VA = "0x290A1B4")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033C7")]
		[Address(RVA = "0x2909F34", Offset = "0x2909F34", VA = "0x2909F34")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033C8")]
		[Address(RVA = "0x2909C20", Offset = "0x2909C20", VA = "0x2909C20")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033C9")]
		[Address(RVA = "0x2909B34", Offset = "0x2909B34", VA = "0x2909B34")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033CA")]
		[Address(RVA = "0x2909D14", Offset = "0x2909D14", VA = "0x2909D14")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033CB")]
		[Address(RVA = "0x290A284", Offset = "0x290A284", VA = "0x290A284")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x2000837")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x4002EEE")]
		Ghosting,
		[Token(Token = "0x4002EEF")]
		Anamorphic,
		[Token(Token = "0x4002EF0")]
		Combined
	}
	[Token(Token = "0x2000838")]
	public enum TweakMode34
	{
		[Token(Token = "0x4002EF2")]
		Basic,
		[Token(Token = "0x4002EF3")]
		Complex
	}
	[Token(Token = "0x2000839")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x4002EF5")]
		Auto,
		[Token(Token = "0x4002EF6")]
		On,
		[Token(Token = "0x4002EF7")]
		Off
	}
	[Token(Token = "0x200083A")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x4002EF9")]
		Screen,
		[Token(Token = "0x4002EFA")]
		Add
	}
	[Token(Token = "0x200083B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE597D4", Offset = "0xE597D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE597D4", Offset = "0xE597D4")]
	[ExecuteInEditMode]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x4002EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x4002EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4002EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4002EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x4002EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x4002F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x4002F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x4002F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x4002F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int bloomBlurIterations;

		[Token(Token = "0x4002F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool lensflares;

		[Token(Token = "0x4002F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4002F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x4002F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hollyStretchWidth;

		[Token(Token = "0x4002F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float lensflareIntensity;

		[Token(Token = "0x4002F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float lensflareThreshold;

		[Token(Token = "0x4002F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color flareColorA;

		[Token(Token = "0x4002F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color flareColorB;

		[Token(Token = "0x4002F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color flareColorC;

		[Token(Token = "0x4002F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color flareColorD;

		[Token(Token = "0x4002F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4002F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shader lensFlareShader;

		[Token(Token = "0x4002F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4002F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader vignetteShader;

		[Token(Token = "0x4002F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material vignetteMaterial;

		[Token(Token = "0x4002F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader separableBlurShader;

		[Token(Token = "0x4002F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4002F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x4002F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x4002F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader screenBlendShader;

		[Token(Token = "0x4002F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material screenBlend;

		[Token(Token = "0x4002F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x4002F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x4002F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4002F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60033CC")]
		[Address(RVA = "0x290A3C4", Offset = "0x290A3C4", VA = "0x290A3C4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033CD")]
		[Address(RVA = "0x290A528", Offset = "0x290A528", VA = "0x290A528")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033CE")]
		[Address(RVA = "0x290B594", Offset = "0x290B594", VA = "0x290B594")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033CF")]
		[Address(RVA = "0x290B324", Offset = "0x290B324", VA = "0x290B324")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033D0")]
		[Address(RVA = "0x290B074", Offset = "0x290B074", VA = "0x290B074")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033D1")]
		[Address(RVA = "0x290B1B0", Offset = "0x290B1B0", VA = "0x290B1B0")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60033D2")]
		[Address(RVA = "0x290B650", Offset = "0x290B650", VA = "0x290B650")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x200083C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59868", Offset = "0xE59868")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59868", Offset = "0xE59868")]
	[ExecuteInEditMode]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x200083D")]
		public enum Resolution
		{
			[Token(Token = "0x4002F26")]
			Low,
			[Token(Token = "0x4002F27")]
			High
		}

		[Token(Token = "0x200083E")]
		public enum BlurType
		{
			[Token(Token = "0x4002F29")]
			Standard,
			[Token(Token = "0x4002F2A")]
			Sgx
		}

		[Token(Token = "0x4002F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE694C4", Offset = "0xE694C4")]
		public float threshold;

		[Token(Token = "0x4002F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE694DC", Offset = "0xE694DC")]
		public float intensity;

		[Token(Token = "0x4002F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE694F4", Offset = "0xE694F4")]
		public float blurSize;

		[Token(Token = "0x4002F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Resolution resolution;

		[Token(Token = "0x4002F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6950C", Offset = "0xE6950C")]
		public int blurIterations;

		[Token(Token = "0x4002F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlurType blurType;

		[Token(Token = "0x4002F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fastBloomShader;

		[Token(Token = "0x4002F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fastBloomMaterial;

		[Token(Token = "0x60033D3")]
		[Address(RVA = "0x290B784", Offset = "0x290B784", VA = "0x290B784", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033D4")]
		[Address(RVA = "0x290B7FC", Offset = "0x290B7FC", VA = "0x290B7FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60033D5")]
		[Address(RVA = "0x290B8A8", Offset = "0x290B8A8", VA = "0x290B8A8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033D6")]
		[Address(RVA = "0x290BC88", Offset = "0x290BC88", VA = "0x290BC88")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x200083F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE598FC", Offset = "0xE598FC")]
	[ExecuteInEditMode]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x4002F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int iterations;

		[Token(Token = "0x4002F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blurSpread;

		[Token(Token = "0x4002F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x4002F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x170004E8")]
		protected Material material
		{
			[Token(Token = "0x60033D7")]
			[Address(RVA = "0x290BCAC", Offset = "0x290BCAC", VA = "0x290BCAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60033D8")]
		[Address(RVA = "0x290BE00", Offset = "0x290BE00", VA = "0x290BE00")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60033D9")]
		[Address(RVA = "0x290BF04", Offset = "0x290BF04", VA = "0x290BF04")]
		protected void Start()
		{
		}

		[Token(Token = "0x60033DA")]
		[Address(RVA = "0x290BFC0", Offset = "0x290BFC0", VA = "0x290BFC0")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x60033DB")]
		[Address(RVA = "0x290C0E4", Offset = "0x290C0E4", VA = "0x290C0E4")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60033DC")]
		[Address(RVA = "0x290C1F4", Offset = "0x290C1F4", VA = "0x290C1F4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033DD")]
		[Address(RVA = "0x290C35C", Offset = "0x290C35C", VA = "0x290C35C")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x2000840")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59948", Offset = "0xE59948")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59948", Offset = "0xE59948")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000841")]
		public enum BlurType
		{
			[Token(Token = "0x4002F36")]
			StandardGauss,
			[Token(Token = "0x4002F37")]
			SgxGauss
		}

		[Token(Token = "0x4002F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69524", Offset = "0xE69524")]
		public int downsample;

		[Token(Token = "0x4002F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6953C", Offset = "0xE6953C")]
		public float blurSize;

		[Token(Token = "0x4002F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69554", Offset = "0xE69554")]
		public int blurIterations;

		[Token(Token = "0x4002F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlurType blurType;

		[Token(Token = "0x4002F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader blurShader;

		[Token(Token = "0x4002F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material blurMaterial;

		[Token(Token = "0x60033DF")]
		[Address(RVA = "0x290C378", Offset = "0x290C378", VA = "0x290C378", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033E0")]
		[Address(RVA = "0x290C3F0", Offset = "0x290C3F0", VA = "0x290C3F0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60033E1")]
		[Address(RVA = "0x290C49C", Offset = "0x290C49C", VA = "0x290C49C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033E2")]
		[Address(RVA = "0x290C848", Offset = "0x290C848", VA = "0x290C848")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x2000842")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE599DC", Offset = "0xE599DC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE599DC", Offset = "0xE599DC")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x2000843")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4002F57")]
			CameraMotion,
			[Token(Token = "0x4002F58")]
			LocalBlur,
			[Token(Token = "0x4002F59")]
			Reconstruction,
			[Token(Token = "0x4002F5A")]
			ReconstructionDX11,
			[Token(Token = "0x4002F5B")]
			ReconstructionDisc
		}

		[Token(Token = "0x4002F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x4002F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x4002F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preview;

		[Token(Token = "0x4002F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 previewScale;

		[Token(Token = "0x4002F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float movementScale;

		[Token(Token = "0x4002F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationScale;

		[Token(Token = "0x4002F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxVelocity;

		[Token(Token = "0x4002F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minVelocity;

		[Token(Token = "0x4002F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float velocityScale;

		[Token(Token = "0x4002F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float softZDistance;

		[Token(Token = "0x4002F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int velocityDownsample;

		[Token(Token = "0x4002F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4002F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject tmpCam;

		[Token(Token = "0x4002F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shader;

		[Token(Token = "0x4002F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4002F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader replacementClear;

		[Token(Token = "0x4002F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material motionBlurMaterial;

		[Token(Token = "0x4002F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x4002F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4002F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float jitter;

		[Token(Token = "0x4002F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool showVelocity;

		[Token(Token = "0x4002F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float showVelocityScale;

		[Token(Token = "0x4002F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x4002F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x4002F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int prevFrameCount;

		[Token(Token = "0x4002F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool wasActive;

		[Token(Token = "0x4002F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x4002F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x4002F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 prevFramePos;

		[Token(Token = "0x4002F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Camera _camera;

		[Token(Token = "0x60033E3")]
		[Address(RVA = "0x24400C4", Offset = "0x24400C4", VA = "0x24400C4")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x60033E4")]
		[Address(RVA = "0x24401D0", Offset = "0x24401D0", VA = "0x24401D0")]
		private new void Start()
		{
		}

		[Token(Token = "0x60033E5")]
		[Address(RVA = "0x244036C", Offset = "0x244036C", VA = "0x244036C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60033E6")]
		[Address(RVA = "0x2440440", Offset = "0x2440440", VA = "0x2440440")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60033E7")]
		[Address(RVA = "0x24405D8", Offset = "0x24405D8", VA = "0x24405D8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033E8")]
		[Address(RVA = "0x2440690", Offset = "0x2440690", VA = "0x2440690")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033E9")]
		[Address(RVA = "0x24402C0", Offset = "0x24402C0", VA = "0x24402C0")]
		private void Remember()
		{
		}

		[Token(Token = "0x60033EA")]
		[Address(RVA = "0x2441C64", Offset = "0x2441C64", VA = "0x2441C64")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x60033EB")]
		[Address(RVA = "0x2441BD4", Offset = "0x2441BD4", VA = "0x2441BD4")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x60033EC")]
		[Address(RVA = "0x2441C54", Offset = "0x2441C54", VA = "0x2441C54")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x60033ED")]
		[Address(RVA = "0x2442018", Offset = "0x2442018", VA = "0x2442018")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x2000844")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59A70", Offset = "0xE59A70")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x2000845")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4002F75")]
			Simple,
			[Token(Token = "0x4002F76")]
			Advanced
		}

		[Token(Token = "0x4002F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve redChannel;

		[Token(Token = "0x4002F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x4002F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x4002F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useDepthCorrection;

		[Token(Token = "0x4002F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve zCurve;

		[Token(Token = "0x4002F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x4002F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x4002F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x4002F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material ccMaterial;

		[Token(Token = "0x4002F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccDepthMaterial;

		[Token(Token = "0x4002F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x4002F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x4002F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x4002F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D zCurveTex;

		[Token(Token = "0x4002F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float saturation;

		[Token(Token = "0x4002F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool selectiveCc;

		[Token(Token = "0x4002F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color selectiveFromColor;

		[Token(Token = "0x4002F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color selectiveToColor;

		[Token(Token = "0x4002F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4002F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool updateTextures;

		[Token(Token = "0x4002F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x4002F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x4002F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x4002F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x60033EF")]
		[Address(RVA = "0x21BBFE0", Offset = "0x21BBFE0", VA = "0x21BBFE0")]
		private new void Start()
		{
		}

		[Token(Token = "0x60033F0")]
		[Address(RVA = "0x21BC00C", Offset = "0x21BC00C", VA = "0x21BC00C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60033F1")]
		[Address(RVA = "0x21BC010", Offset = "0x21BC010", VA = "0x21BC010", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033F2")]
		[Address(RVA = "0x21BC2F4", Offset = "0x21BC2F4", VA = "0x21BC2F4")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x60033F3")]
		[Address(RVA = "0x21BC6B4", Offset = "0x21BC6B4", VA = "0x21BC6B4")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60033F4")]
		[Address(RVA = "0x21BC6B8", Offset = "0x21BC6B8", VA = "0x21BC6B8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033F5")]
		[Address(RVA = "0x21BCA04", Offset = "0x21BCA04", VA = "0x21BCA04")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x2000846")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59ABC", Offset = "0xE59ABC")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x4002F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader shader;

		[Token(Token = "0x4002F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x4002F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture3D converted3DLut;

		[Token(Token = "0x4002F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string basedOnTempTex;

		[Token(Token = "0x60033F6")]
		[Address(RVA = "0x21BD094", Offset = "0x21BD094", VA = "0x21BD094", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60033F7")]
		[Address(RVA = "0x21BD108", Offset = "0x21BD108", VA = "0x21BD108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60033F8")]
		[Address(RVA = "0x21BD1C4", Offset = "0x21BD1C4", VA = "0x21BD1C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60033F9")]
		[Address(RVA = "0x21BD270", Offset = "0x21BD270", VA = "0x21BD270")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x60033FA")]
		[Address(RVA = "0x21BD4A4", Offset = "0x21BD4A4", VA = "0x21BD4A4")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x60033FB")]
		[Address(RVA = "0x21BD56C", Offset = "0x21BD56C", VA = "0x21BD56C")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x60033FC")]
		[Address(RVA = "0x21BD8F0", Offset = "0x21BD8F0", VA = "0x21BD8F0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033FD")]
		[Address(RVA = "0x21BDB08", Offset = "0x21BDB08", VA = "0x21BDB08")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x2000847")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59B08", Offset = "0xE59B08")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x4002F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x60033FE")]
		[Address(RVA = "0x21BDB64", Offset = "0x21BDB64", VA = "0x21BDB64")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60033FF")]
		[Address(RVA = "0x21BDC2C", Offset = "0x21BDC2C", VA = "0x21BDC2C")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x2000848")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59B54", Offset = "0xE59B54")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59B54", Offset = "0xE59B54")]
	internal class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x4002F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensity;

		[Token(Token = "0x4002F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float threshold;

		[Token(Token = "0x4002F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4002F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x4002F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blurSpread;

		[Token(Token = "0x4002F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader separableBlurShader;

		[Token(Token = "0x4002F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x6003400")]
		[Address(RVA = "0x21BE3D8", Offset = "0x21BE3D8", VA = "0x21BE3D8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003401")]
		[Address(RVA = "0x21BE478", Offset = "0x21BE478", VA = "0x21BE478")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003402")]
		[Address(RVA = "0x21BE80C", Offset = "0x21BE80C", VA = "0x21BE80C")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x2000849")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59BE8", Offset = "0xE59BE8")]
	[ExecuteInEditMode]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x4002F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float adaptationSpeed;

		[Token(Token = "0x4002F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float limitMinimum;

		[Token(Token = "0x4002F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float limitMaximum;

		[Token(Token = "0x4002F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x4002F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x4002F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x4002F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x4002F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x4002F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x4002F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x4002F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x4002F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x4002F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x170004E9")]
		protected Material materialLum
		{
			[Token(Token = "0x6003403")]
			[Address(RVA = "0x21BE824", Offset = "0x21BE824", VA = "0x21BE824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		protected Material materialReduce
		{
			[Token(Token = "0x6003404")]
			[Address(RVA = "0x21BE900", Offset = "0x21BE900", VA = "0x21BE900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EB")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6003405")]
			[Address(RVA = "0x21BE9DC", Offset = "0x21BE9DC", VA = "0x21BE9DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EC")]
		protected Material materialApply
		{
			[Token(Token = "0x6003406")]
			[Address(RVA = "0x21BEAB8", Offset = "0x21BEAB8", VA = "0x21BEAB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003407")]
		[Address(RVA = "0x21BEB94", Offset = "0x21BEB94", VA = "0x21BEB94")]
		private void Start()
		{
		}

		[Token(Token = "0x6003408")]
		[Address(RVA = "0x21BEC28", Offset = "0x21BEC28", VA = "0x21BEC28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003409")]
		[Address(RVA = "0x21BED88", Offset = "0x21BED88", VA = "0x21BED88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600340A")]
		[Address(RVA = "0x21BEFB4", Offset = "0x21BEFB4", VA = "0x21BEFB4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600340B")]
		[Address(RVA = "0x21BF218", Offset = "0x21BF218", VA = "0x21BF218")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x600340C")]
		[Address(RVA = "0x21BF414", Offset = "0x21BF414", VA = "0x21BF414")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x200084A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59C34", Offset = "0xE59C34")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59C34", Offset = "0xE59C34")]
	internal class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x4002F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensity;

		[Token(Token = "0x4002F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int softness;

		[Token(Token = "0x4002F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spread;

		[Token(Token = "0x4002F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader blurShader;

		[Token(Token = "0x4002F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x4002F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader depthFetchShader;

		[Token(Token = "0x4002F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material depthFetchMaterial;

		[Token(Token = "0x4002F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader creaseApplyShader;

		[Token(Token = "0x4002F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x600340D")]
		[Address(RVA = "0x21BF8F4", Offset = "0x21BF8F4", VA = "0x21BF8F4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600340E")]
		[Address(RVA = "0x21BF9C4", Offset = "0x21BF9C4", VA = "0x21BF9C4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600340F")]
		[Address(RVA = "0x21BFD98", Offset = "0x21BFD98", VA = "0x21BFD98")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x200084B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59CC8", Offset = "0xE59CC8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59CC8", Offset = "0xE59CC8")]
	[ExecuteInEditMode]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x200084C")]
		public enum BlurType
		{
			[Token(Token = "0x4002FB2")]
			DiscBlur,
			[Token(Token = "0x4002FB3")]
			DX11
		}

		[Token(Token = "0x200084D")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x4002FB5")]
			Low,
			[Token(Token = "0x4002FB6")]
			Medium,
			[Token(Token = "0x4002FB7")]
			High
		}

		[Token(Token = "0x4002F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool visualizeFocus;

		[Token(Token = "0x4002F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float focalLength;

		[Token(Token = "0x4002F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float focalSize;

		[Token(Token = "0x4002F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float aperture;

		[Token(Token = "0x4002F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform focalTransform;

		[Token(Token = "0x4002F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxBlurSize;

		[Token(Token = "0x4002F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool highResolution;

		[Token(Token = "0x4002FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BlurType blurType;

		[Token(Token = "0x4002FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x4002FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool nearBlur;

		[Token(Token = "0x4002FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float foregroundOverlap;

		[Token(Token = "0x4002FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader dofHdrShader;

		[Token(Token = "0x4002FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material dofHdrMaterial;

		[Token(Token = "0x4002FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dx11BokehShader;

		[Token(Token = "0x4002FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x4002FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float dx11BokehThreshold;

		[Token(Token = "0x4002FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x4002FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x4002FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float dx11BokehScale;

		[Token(Token = "0x4002FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float dx11BokehIntensity;

		[Token(Token = "0x4002FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float focalDistance01;

		[Token(Token = "0x4002FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x4002FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x4002FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float internalBlurWidth;

		[Token(Token = "0x6003410")]
		[Address(RVA = "0x21CE0D4", Offset = "0x21CE0D4", VA = "0x21CE0D4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003411")]
		[Address(RVA = "0x21CE2E4", Offset = "0x21CE2E4", VA = "0x21CE2E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003412")]
		[Address(RVA = "0x21CE354", Offset = "0x21CE354", VA = "0x21CE354")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003413")]
		[Address(RVA = "0x21CE470", Offset = "0x21CE470", VA = "0x21CE470")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x6003414")]
		[Address(RVA = "0x21CE190", Offset = "0x21CE190", VA = "0x21CE190")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x6003415")]
		[Address(RVA = "0x21CE4CC", Offset = "0x21CE4CC", VA = "0x21CE4CC")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6003416")]
		[Address(RVA = "0x21CE624", Offset = "0x21CE624", VA = "0x21CE624")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x6003417")]
		[Address(RVA = "0x21CE958", Offset = "0x21CE958", VA = "0x21CE958")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003418")]
		[Address(RVA = "0x21CFF9C", Offset = "0x21CFF9C", VA = "0x21CFF9C")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x200084E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59D5C", Offset = "0xE59D5C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59D5C", Offset = "0xE59D5C")]
	[ExecuteInEditMode]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x200084F")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4002FE4")]
			OnlyBackground = 1,
			[Token(Token = "0x4002FE5")]
			BackgroundAndForeground
		}

		[Token(Token = "0x2000850")]
		public enum DofResolution
		{
			[Token(Token = "0x4002FE7")]
			High = 2,
			[Token(Token = "0x4002FE8")]
			Medium,
			[Token(Token = "0x4002FE9")]
			Low
		}

		[Token(Token = "0x2000851")]
		public enum DofBlurriness
		{
			[Token(Token = "0x4002FEB")]
			Low = 1,
			[Token(Token = "0x4002FEC")]
			High = 2,
			[Token(Token = "0x4002FED")]
			VeryHigh = 4
		}

		[Token(Token = "0x2000852")]
		public enum BokehDestination
		{
			[Token(Token = "0x4002FEF")]
			Background = 1,
			[Token(Token = "0x4002FF0")]
			Foreground,
			[Token(Token = "0x4002FF1")]
			BackgroundAndForeground
		}

		[Token(Token = "0x4002FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x4002FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4002FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4002FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DofResolution resolution;

		[Token(Token = "0x4002FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool simpleTweakMode;

		[Token(Token = "0x4002FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float focalPoint;

		[Token(Token = "0x4002FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float smoothness;

		[Token(Token = "0x4002FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalZDistance;

		[Token(Token = "0x4002FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalZStartCurve;

		[Token(Token = "0x4002FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float focalZEndCurve;

		[Token(Token = "0x4002FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float focalStartCurve;

		[Token(Token = "0x4002FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float focalEndCurve;

		[Token(Token = "0x4002FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float focalDistance01;

		[Token(Token = "0x4002FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform objectFocus;

		[Token(Token = "0x4002FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float focalSize;

		[Token(Token = "0x4002FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public DofBlurriness bluriness;

		[Token(Token = "0x4002FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxBlurSpread;

		[Token(Token = "0x4002FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4002FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dofBlurShader;

		[Token(Token = "0x4002FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4002FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofShader;

		[Token(Token = "0x4002FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofMaterial;

		[Token(Token = "0x4002FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool visualize;

		[Token(Token = "0x4002FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x4002FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float widthOverHeight;

		[Token(Token = "0x4002FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float oneOverBaseSize;

		[Token(Token = "0x4002FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool bokeh;

		[Token(Token = "0x4002FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool bokehSupport;

		[Token(Token = "0x4002FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader bokehShader;

		[Token(Token = "0x4002FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x4002FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float bokehScale;

		[Token(Token = "0x4002FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float bokehIntensity;

		[Token(Token = "0x4002FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x4002FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x4002FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int bokehDownsample;

		[Token(Token = "0x4002FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material bokehMaterial;

		[Token(Token = "0x4002FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Camera _camera;

		[Token(Token = "0x4002FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x4002FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x4002FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x4002FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x4002FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture bokehSource;

		[Token(Token = "0x4002FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6003419")]
		[Address(RVA = "0x24E5E24", Offset = "0x24E5E24", VA = "0x24E5E24")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x600341A")]
		[Address(RVA = "0x24E5F3C", Offset = "0x24E5F3C", VA = "0x24E5F3C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600341B")]
		[Address(RVA = "0x24E6084", Offset = "0x24E6084", VA = "0x24E6084")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600341C")]
		[Address(RVA = "0x24E60E0", Offset = "0x24E60E0", VA = "0x24E60E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600341D")]
		[Address(RVA = "0x24E6164", Offset = "0x24E6164", VA = "0x24E6164")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x600341E")]
		[Address(RVA = "0x24E6254", Offset = "0x24E6254", VA = "0x24E6254")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x600341F")]
		[Address(RVA = "0x24E6278", Offset = "0x24E6278", VA = "0x24E6278")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x6003420")]
		[Address(RVA = "0x24E629C", Offset = "0x24E629C", VA = "0x24E629C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003421")]
		[Address(RVA = "0x24E7174", Offset = "0x24E7174", VA = "0x24E7174")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6003422")]
		[Address(RVA = "0x24E7868", Offset = "0x24E7868", VA = "0x24E7868")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6003423")]
		[Address(RVA = "0x24E7CE0", Offset = "0x24E7CE0", VA = "0x24E7CE0")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x6003424")]
		[Address(RVA = "0x24E7014", Offset = "0x24E7014", VA = "0x24E7014")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6003425")]
		[Address(RVA = "0x24E7418", Offset = "0x24E7418", VA = "0x24E7418")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x6003426")]
		[Address(RVA = "0x24E7B38", Offset = "0x24E7B38", VA = "0x24E7B38")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x6003427")]
		[Address(RVA = "0x24E6C48", Offset = "0x24E6C48", VA = "0x24E6C48")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x6003428")]
		[Address(RVA = "0x24E7F10", Offset = "0x24E7F10", VA = "0x24E7F10")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x2000853")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59DF0", Offset = "0xE59DF0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59DF0", Offset = "0xE59DF0")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x2000854")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4002FFE")]
			TriangleDepthNormals,
			[Token(Token = "0x4002FFF")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x4003000")]
			SobelDepth,
			[Token(Token = "0x4003001")]
			SobelDepthThin,
			[Token(Token = "0x4003002")]
			TriangleLuminance
		}

		[Token(Token = "0x4002FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EdgeDetectMode mode;

		[Token(Token = "0x4002FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityDepth;

		[Token(Token = "0x4002FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sensitivityNormals;

		[Token(Token = "0x4002FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lumThreshold;

		[Token(Token = "0x4002FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeExp;

		[Token(Token = "0x4002FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sampleDist;

		[Token(Token = "0x4002FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float edgesOnly;

		[Token(Token = "0x4002FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x4002FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader edgeDetectShader;

		[Token(Token = "0x4002FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x4002FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x600342A")]
		[Address(RVA = "0x24EE724", Offset = "0x24EE724", VA = "0x24EE724", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600342B")]
		[Address(RVA = "0x24EE878", Offset = "0x24EE878", VA = "0x24EE878")]
		private new void Start()
		{
		}

		[Token(Token = "0x600342C")]
		[Address(RVA = "0x24EE7BC", Offset = "0x24EE7BC", VA = "0x24EE7BC")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x600342D")]
		[Address(RVA = "0x24EE884", Offset = "0x24EE884", VA = "0x24EE884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600342E")]
		[Address(RVA = "0x24EE888", Offset = "0x24EE888", VA = "0x24EE888")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600342F")]
		[Address(RVA = "0x24EEAB0", Offset = "0x24EEAB0", VA = "0x24EEAB0")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x2000855")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59E84", Offset = "0xE59E84")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59E84", Offset = "0xE59E84")]
	[ExecuteInEditMode]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x4003003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float strengthX;

		[Token(Token = "0x4003004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float strengthY;

		[Token(Token = "0x4003005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader fishEyeShader;

		[Token(Token = "0x4003006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material fisheyeMaterial;

		[Token(Token = "0x6003430")]
		[Address(RVA = "0x223F080", Offset = "0x223F080", VA = "0x223F080", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003431")]
		[Address(RVA = "0x223F0F8", Offset = "0x223F0F8", VA = "0x223F0F8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003432")]
		[Address(RVA = "0x223F270", Offset = "0x223F270", VA = "0x223F270")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x2000856")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59F18", Offset = "0xE59F18")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59F18", Offset = "0xE59F18")]
	[ExecuteInEditMode]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x4003007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE6956C", Offset = "0xE6956C")]
		public bool distanceFog;

		[Token(Token = "0x4003008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE695A4", Offset = "0xE695A4")]
		public bool useRadialDistance;

		[Token(Token = "0x4003009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE695DC", Offset = "0xE695DC")]
		public bool heightFog;

		[Token(Token = "0x400300A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE69614", Offset = "0xE69614")]
		public float height;

		[Token(Token = "0x400300B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6964C", Offset = "0xE6964C")]
		public float heightDensity;

		[Token(Token = "0x400300C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE69668", Offset = "0xE69668")]
		public float startDistance;

		[Token(Token = "0x400300D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fogShader;

		[Token(Token = "0x400300E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fogMaterial;

		[Token(Token = "0x6003433")]
		[Address(RVA = "0x251F7D4", Offset = "0x251F7D4", VA = "0x251F7D4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003434")]
		[Address(RVA = "0x251F854", Offset = "0x251F854", VA = "0x251F854")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003435")]
		[Address(RVA = "0x251FF3C", Offset = "0x251FF3C", VA = "0x251FF3C")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x6003436")]
		[Address(RVA = "0x25200A8", Offset = "0x25200A8", VA = "0x25200A8")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x2000857")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59FAC", Offset = "0xE59FAC")]
	[ExecuteInEditMode]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x400300F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x4003010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rampOffset;

		[Token(Token = "0x6003437")]
		[Address(RVA = "0x2521DEC", Offset = "0x2521DEC", VA = "0x2521DEC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003438")]
		[Address(RVA = "0x2521EE8", Offset = "0x2521EE8", VA = "0x2521EE8")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x2000858")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE59FF8", Offset = "0xE59FF8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE59FF8", Offset = "0xE59FF8")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x4003011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x4003012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x170004ED")]
		protected Material material
		{
			[Token(Token = "0x600343A")]
			[Address(RVA = "0x20ACCB8", Offset = "0x20ACCB8", VA = "0x20ACCB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003439")]
		[Address(RVA = "0x20ACC0C", Offset = "0x20ACC0C", VA = "0x20ACC0C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600343B")]
		[Address(RVA = "0x20ACD94", Offset = "0x20ACD94", VA = "0x20ACD94", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600343C")]
		[Address(RVA = "0x20ACE40", Offset = "0x20ACE40", VA = "0x20ACE40")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x2000859")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A07C", Offset = "0xE5A07C")]
	public class ImageEffects
	{
		[Token(Token = "0x600343D")]
		[Address(RVA = "0x20ACE48", Offset = "0x20ACE48", VA = "0x20ACE48")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x600343E")]
		[Address(RVA = "0x20AD094", Offset = "0x20AD094", VA = "0x20AD094")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6FCFC", Offset = "0xE6FCFC")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600343F")]
		[Address(RVA = "0x20AD108", Offset = "0x20AD108", VA = "0x20AD108")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE6FD34", Offset = "0xE6FD34")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6003440")]
		[Address(RVA = "0x20AD184", Offset = "0x20AD184", VA = "0x20AD184")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x200085A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A0B4", Offset = "0xE5A0B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A0B4", Offset = "0xE5A0B4")]
	[ExecuteInEditMode]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x4003013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurAmount;

		[Token(Token = "0x4003014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x4003015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x6003441")]
		[Address(RVA = "0x2657B84", Offset = "0x2657B84", VA = "0x2657B84", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6003442")]
		[Address(RVA = "0x2657BCC", Offset = "0x2657BCC", VA = "0x2657BCC", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6003443")]
		[Address(RVA = "0x2657C40", Offset = "0x2657C40", VA = "0x2657C40")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003444")]
		[Address(RVA = "0x2657FE8", Offset = "0x2657FE8", VA = "0x2657FE8")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x200085B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A148", Offset = "0xE5A148")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A148", Offset = "0xE5A148")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x4003016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensityMultiplier;

		[Token(Token = "0x4003017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float generalIntensity;

		[Token(Token = "0x4003018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float blackIntensity;

		[Token(Token = "0x4003019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float whiteIntensity;

		[Token(Token = "0x400301A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float midGrey;

		[Token(Token = "0x400301B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool dx11Grain;

		[Token(Token = "0x400301C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float softness;

		[Token(Token = "0x400301D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool monochrome;

		[Token(Token = "0x400301E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 intensities;

		[Token(Token = "0x400301F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 tiling;

		[Token(Token = "0x4003020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float monochromeTiling;

		[Token(Token = "0x4003021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FilterMode filterMode;

		[Token(Token = "0x4003022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4003023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader noiseShader;

		[Token(Token = "0x4003024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material noiseMaterial;

		[Token(Token = "0x4003025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x4003026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x4003027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x6003445")]
		[Address(RVA = "0x2302734", Offset = "0x2302734", VA = "0x2302734", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003446")]
		[Address(RVA = "0x2302DCC", Offset = "0x2302DCC", VA = "0x2302DCC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003447")]
		[Address(RVA = "0x23035D0", Offset = "0x23035D0", VA = "0x23035D0")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x6003448")]
		[Address(RVA = "0x2303924", Offset = "0x2303924", VA = "0x2303924")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x200085C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A1DC", Offset = "0xE5A1DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A1DC", Offset = "0xE5A1DC")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x4003028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x4003029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x400302A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float grainIntensityMin;

		[Token(Token = "0x400302B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float grainIntensityMax;

		[Token(Token = "0x400302C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float grainSize;

		[Token(Token = "0x400302D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scratchIntensityMin;

		[Token(Token = "0x400302E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scratchIntensityMax;

		[Token(Token = "0x400302F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scratchFPS;

		[Token(Token = "0x4003030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float scratchJitter;

		[Token(Token = "0x4003031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x4003032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x4003033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x4003034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x4003035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x4003036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x4003037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x4003038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x4003039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x170004EE")]
		protected Material material
		{
			[Token(Token = "0x600344B")]
			[Address(RVA = "0x2303B2C", Offset = "0x2303B2C", VA = "0x2303B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600344A")]
		[Address(RVA = "0x23039D8", Offset = "0x23039D8", VA = "0x23039D8")]
		protected void Start()
		{
		}

		[Token(Token = "0x600344C")]
		[Address(RVA = "0x2303CA8", Offset = "0x2303CA8", VA = "0x2303CA8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600344D")]
		[Address(RVA = "0x2303DA8", Offset = "0x2303DA8", VA = "0x2303DA8")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x600344E")]
		[Address(RVA = "0x2303E9C", Offset = "0x2303E9C", VA = "0x2303E9C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600344F")]
		[Address(RVA = "0x230421C", Offset = "0x230421C", VA = "0x230421C")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x200085D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A270", Offset = "0xE5A270")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x400303A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x400303B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x400303C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x6003450")]
		[Address(RVA = "0x23028E4", Offset = "0x23028E4", VA = "0x23028E4")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6003451")]
		[Address(RVA = "0x2313A7C", Offset = "0x2313A7C", VA = "0x2313A7C")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6003452")]
		[Address(RVA = "0x2313C8C", Offset = "0x2313C8C", VA = "0x2313C8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003453")]
		[Address(RVA = "0x2313C98", Offset = "0x2313C98", VA = "0x2313C98")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6003454")]
		[Address(RVA = "0x2313CA0", Offset = "0x2313CA0", VA = "0x2313CA0", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003455")]
		[Address(RVA = "0x2313D64", Offset = "0x2313D64", VA = "0x2313D64")]
		protected void Start()
		{
		}

		[Token(Token = "0x6003456")]
		[Address(RVA = "0x23027D4", Offset = "0x23027D4", VA = "0x23027D4")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6003457")]
		[Address(RVA = "0x2313D70", Offset = "0x2313D70", VA = "0x2313D70")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6003458")]
		[Address(RVA = "0x2313DCC", Offset = "0x2313DCC", VA = "0x2313DCC")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6003459")]
		[Address(RVA = "0x2302D10", Offset = "0x2302D10", VA = "0x2302D10")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x600345A")]
		[Address(RVA = "0x2313DD4", Offset = "0x2313DD4", VA = "0x2313DD4")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x600345B")]
		[Address(RVA = "0x2313A50", Offset = "0x2313A50", VA = "0x2313A50")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x600345C")]
		[Address(RVA = "0x2314048", Offset = "0x2314048", VA = "0x2314048")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600345D")]
		[Address(RVA = "0x2303974", Offset = "0x2303974", VA = "0x2303974")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x200085E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A2E0", Offset = "0xE5A2E0")]
	[ExecuteInEditMode]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x600345E")]
		[Address(RVA = "0x23143C4", Offset = "0x23143C4", VA = "0x23143C4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600345F")]
		[Address(RVA = "0x2314438", Offset = "0x2314438", VA = "0x2314438")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x6003460")]
		[Address(RVA = "0x2314690", Offset = "0x2314690", VA = "0x2314690")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6003461")]
		[Address(RVA = "0x2314A08", Offset = "0x2314A08", VA = "0x2314A08")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6003462")]
		[Address(RVA = "0x2314BB0", Offset = "0x2314BB0", VA = "0x2314BB0")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x200085F")]
	internal class Quads
	{
		[Token(Token = "0x400303D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x400303E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x6003463")]
		[Address(RVA = "0x2712358", Offset = "0x2712358", VA = "0x2712358")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6003464")]
		[Address(RVA = "0x2712484", Offset = "0x2712484", VA = "0x2712484")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6003465")]
		[Address(RVA = "0x271267C", Offset = "0x271267C", VA = "0x271267C")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6003466")]
		[Address(RVA = "0x2712918", Offset = "0x2712918", VA = "0x2712918")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6003467")]
		[Address(RVA = "0x2712CD8", Offset = "0x2712CD8", VA = "0x2712CD8")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x2000860")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A350", Offset = "0xE5A350")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A350", Offset = "0xE5A350")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x2000861")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x4003045")]
			Additive,
			[Token(Token = "0x4003046")]
			ScreenBlend,
			[Token(Token = "0x4003047")]
			Multiply,
			[Token(Token = "0x4003048")]
			Overlay,
			[Token(Token = "0x4003049")]
			AlphaBlend
		}

		[Token(Token = "0x400303F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x4003040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x4003041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D texture;

		[Token(Token = "0x4003042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader overlayShader;

		[Token(Token = "0x4003043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material overlayMaterial;

		[Token(Token = "0x6003469")]
		[Address(RVA = "0x24BECA0", Offset = "0x24BECA0", VA = "0x24BECA0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600346A")]
		[Address(RVA = "0x24BED18", Offset = "0x24BED18", VA = "0x24BED18")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600346B")]
		[Address(RVA = "0x24BEEA0", Offset = "0x24BEEA0", VA = "0x24BEEA0")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x2000862")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A3E4", Offset = "0xE5A3E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A3E4", Offset = "0xE5A3E4")]
	[ExecuteInEditMode]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x400304A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE696A0", Offset = "0xE696A0")]
		public float intensity;

		[Token(Token = "0x400304B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE696B8", Offset = "0xE696B8")]
		public float radius;

		[Token(Token = "0x400304C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE696D4", Offset = "0xE696D4")]
		public int blurIterations;

		[Token(Token = "0x400304D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE696EC", Offset = "0xE696EC")]
		public float blurFilterDistance;

		[Token(Token = "0x400304E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69704", Offset = "0xE69704")]
		public int downsample;

		[Token(Token = "0x400304F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D rand;

		[Token(Token = "0x4003050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader aoShader;

		[Token(Token = "0x4003051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material aoMaterial;

		[Token(Token = "0x600346C")]
		[Address(RVA = "0x24BEEB4", Offset = "0x24BEEB4", VA = "0x24BEEB4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600346D")]
		[Address(RVA = "0x24BEF34", Offset = "0x24BEF34", VA = "0x24BEF34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600346E")]
		[Address(RVA = "0x24BEFE0", Offset = "0x24BEFE0", VA = "0x24BEFE0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600346F")]
		[Address(RVA = "0x24BF5D0", Offset = "0x24BF5D0", VA = "0x24BF5D0")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x2000863")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A478", Offset = "0xE5A478")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A478", Offset = "0xE5A478")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000864")]
		public enum SSAOSamples
		{
			[Token(Token = "0x400305E")]
			Low,
			[Token(Token = "0x400305F")]
			Medium,
			[Token(Token = "0x4003060")]
			High
		}

		[Token(Token = "0x4003052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_Radius;

		[Token(Token = "0x4003053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x4003054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x4003055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_Blur;

		[Token(Token = "0x4003056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_Downsampling;

		[Token(Token = "0x4003057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x4003058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_MinZ;

		[Token(Token = "0x4003059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x400305A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x400305B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x400305C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x6003470")]
		[Address(RVA = "0x24BF5F0", Offset = "0x24BF5F0", VA = "0x24BF5F0")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6003471")]
		[Address(RVA = "0x24BF6A8", Offset = "0x24BF6A8", VA = "0x24BF6A8")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6003472")]
		[Address(RVA = "0x24BF740", Offset = "0x24BF740", VA = "0x24BF740")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003473")]
		[Address(RVA = "0x24BF748", Offset = "0x24BF748", VA = "0x24BF748")]
		private void Start()
		{
		}

		[Token(Token = "0x6003474")]
		[Address(RVA = "0x24BF900", Offset = "0x24BF900", VA = "0x24BF900")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003475")]
		[Address(RVA = "0x24BF81C", Offset = "0x24BF81C", VA = "0x24BF81C")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6003476")]
		[Address(RVA = "0x24BF970", Offset = "0x24BF970", VA = "0x24BF970")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003477")]
		[Address(RVA = "0x24BFFE8", Offset = "0x24BFFE8", VA = "0x24BFFE8")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x2000865")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A50C", Offset = "0xE5A50C")]
	[ExecuteInEditMode]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x6003478")]
		[Address(RVA = "0x24C13C4", Offset = "0x24C13C4", VA = "0x24C13C4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003479")]
		[Address(RVA = "0x24C1454", Offset = "0x24C1454", VA = "0x24C1454")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x2000866")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A558", Offset = "0xE5A558")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A558", Offset = "0xE5A558")]
	[ExecuteInEditMode]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x2000867")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4003070")]
			Low,
			[Token(Token = "0x4003071")]
			Normal,
			[Token(Token = "0x4003072")]
			High
		}

		[Token(Token = "0x2000868")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x4003074")]
			Screen,
			[Token(Token = "0x4003075")]
			Add
		}

		[Token(Token = "0x4003061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x4003062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x4003063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform sunTransform;

		[Token(Token = "0x4003064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int radialBlurIterations;

		[Token(Token = "0x4003065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color sunColor;

		[Token(Token = "0x4003066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color sunThreshold;

		[Token(Token = "0x4003067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4003068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sunShaftIntensity;

		[Token(Token = "0x4003069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float maxRadius;

		[Token(Token = "0x400306A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useDepthTexture;

		[Token(Token = "0x400306B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader sunShaftsShader;

		[Token(Token = "0x400306C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x400306D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader simpleClearShader;

		[Token(Token = "0x400306E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material simpleClearMaterial;

		[Token(Token = "0x600347A")]
		[Address(RVA = "0x225A678", Offset = "0x225A678", VA = "0x225A678", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600347B")]
		[Address(RVA = "0x225A718", Offset = "0x225A718", VA = "0x225A718")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600347C")]
		[Address(RVA = "0x225AF00", Offset = "0x225AF00", VA = "0x225AF00")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x2000869")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A5EC", Offset = "0xE5A5EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A5EC", Offset = "0xE5A5EC")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x200086A")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x400307E")]
			TiltShiftMode,
			[Token(Token = "0x400307F")]
			IrisMode
		}

		[Token(Token = "0x200086B")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4003081")]
			Preview,
			[Token(Token = "0x4003082")]
			Normal,
			[Token(Token = "0x4003083")]
			High
		}

		[Token(Token = "0x4003076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TiltShiftMode mode;

		[Token(Token = "0x4003077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltShiftQuality quality;

		[Token(Token = "0x4003078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6971C", Offset = "0xE6971C")]
		public float blurArea;

		[Token(Token = "0x4003079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE69734", Offset = "0xE69734")]
		public float maxBlurSize;

		[Token(Token = "0x400307A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE6974C", Offset = "0xE6974C")]
		public int downsample;

		[Token(Token = "0x400307B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader tiltShiftShader;

		[Token(Token = "0x400307C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x600347D")]
		[Address(RVA = "0x2AB5D44", Offset = "0x2AB5D44", VA = "0x2AB5D44", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600347E")]
		[Address(RVA = "0x2AB5DC4", Offset = "0x2AB5DC4", VA = "0x2AB5DC4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600347F")]
		[Address(RVA = "0x2AB6080", Offset = "0x2AB6080", VA = "0x2AB6080")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x200086C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A670", Offset = "0xE5A670")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A670", Offset = "0xE5A670")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x200086D")]
		public enum TonemapperType
		{
			[Token(Token = "0x4003092")]
			SimpleReinhard,
			[Token(Token = "0x4003093")]
			UserCurve,
			[Token(Token = "0x4003094")]
			Hable,
			[Token(Token = "0x4003095")]
			Photographic,
			[Token(Token = "0x4003096")]
			OptimizedHejiDawson,
			[Token(Token = "0x4003097")]
			AdaptiveReinhard,
			[Token(Token = "0x4003098")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x200086E")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x400309A")]
			Square16 = 0x10,
			[Token(Token = "0x400309B")]
			Square32 = 0x20,
			[Token(Token = "0x400309C")]
			Square64 = 0x40,
			[Token(Token = "0x400309D")]
			Square128 = 0x80,
			[Token(Token = "0x400309E")]
			Square256 = 0x100,
			[Token(Token = "0x400309F")]
			Square512 = 0x200,
			[Token(Token = "0x40030A0")]
			Square1024 = 0x400
		}

		[Token(Token = "0x4003084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TonemapperType type;

		[Token(Token = "0x4003085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4003086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4003087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D curveTex;

		[Token(Token = "0x4003088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float exposureAdjustment;

		[Token(Token = "0x4003089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float middleGrey;

		[Token(Token = "0x400308A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float white;

		[Token(Token = "0x400308B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float adaptionSpeed;

		[Token(Token = "0x400308C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader tonemapper;

		[Token(Token = "0x400308D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x400308E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material tonemapMaterial;

		[Token(Token = "0x400308F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture rt;

		[Token(Token = "0x4003090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x6003480")]
		[Address(RVA = "0x2AB86E0", Offset = "0x2AB86E0", VA = "0x2AB86E0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6003481")]
		[Address(RVA = "0x2AB8858", Offset = "0x2AB8858", VA = "0x2AB8858")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x6003482")]
		[Address(RVA = "0x2AB8B0C", Offset = "0x2AB8B0C", VA = "0x2AB8B0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003483")]
		[Address(RVA = "0x2AB8C98", Offset = "0x2AB8C98", VA = "0x2AB8C98")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6003484")]
		[Address(RVA = "0x2AB8DA0", Offset = "0x2AB8DA0", VA = "0x2AB8DA0")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003485")]
		[Address(RVA = "0x2AB9604", Offset = "0x2AB9604", VA = "0x2AB9604")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x200086F")]
	internal class Triangles
	{
		[Token(Token = "0x40030A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x40030A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x6003486")]
		[Address(RVA = "0x2365D7C", Offset = "0x2365D7C", VA = "0x2365D7C")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6003487")]
		[Address(RVA = "0x2365EC0", Offset = "0x2365EC0", VA = "0x2365EC0")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x6003488")]
		[Address(RVA = "0x23660B8", Offset = "0x23660B8", VA = "0x23660B8")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6003489")]
		[Address(RVA = "0x2366354", Offset = "0x2366354", VA = "0x2366354")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600348A")]
		[Address(RVA = "0x2366670", Offset = "0x2366670", VA = "0x2366670")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x2000870")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A704", Offset = "0xE5A704")]
	[ExecuteInEditMode]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x40030A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x40030A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x40030A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x600348C")]
		[Address(RVA = "0x2367DB8", Offset = "0x2367DB8", VA = "0x2367DB8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600348D")]
		[Address(RVA = "0x2367E04", Offset = "0x2367E04", VA = "0x2367E04")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x2000871")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A750", Offset = "0xE5A750")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A750", Offset = "0xE5A750")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x2000872")]
		public enum AberrationMode
		{
			[Token(Token = "0x40030B5")]
			Simple,
			[Token(Token = "0x40030B6")]
			Advanced
		}

		[Token(Token = "0x40030A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AberrationMode mode;

		[Token(Token = "0x40030A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x40030A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float chromaticAberration;

		[Token(Token = "0x40030A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float axialAberration;

		[Token(Token = "0x40030AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float blur;

		[Token(Token = "0x40030AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blurSpread;

		[Token(Token = "0x40030AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float luminanceDependency;

		[Token(Token = "0x40030AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blurDistance;

		[Token(Token = "0x40030AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader vignetteShader;

		[Token(Token = "0x40030AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x40030B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader chromAberrationShader;

		[Token(Token = "0x40030B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x40030B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x40030B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x600348E")]
		[Address(RVA = "0x29767F0", Offset = "0x29767F0", VA = "0x29767F0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600348F")]
		[Address(RVA = "0x29768B8", Offset = "0x29768B8", VA = "0x29768B8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003490")]
		[Address(RVA = "0x2976E88", Offset = "0x2976E88", VA = "0x2976E88")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x2000873")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A7E4", Offset = "0xE5A7E4")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x40030B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x40030B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x40030B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6003491")]
		[Address(RVA = "0x2976EB8", Offset = "0x2976EB8", VA = "0x2976EB8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003492")]
		[Address(RVA = "0x2976F04", Offset = "0x2976F04", VA = "0x2976F04")]
		public Vortex()
		{
		}
	}
}
namespace Runemark.DeadlyDungeonTraps
{
	[Token(Token = "0x2000874")]
	public class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x40030BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isInt;

		[Token(Token = "0x40030BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int minValueInt;

		[Token(Token = "0x40030BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minValueFloat;

		[Token(Token = "0x6003493")]
		[Address(RVA = "0x279BE6C", Offset = "0x279BE6C", VA = "0x279BE6C")]
		public MinAttribute(int min)
		{
		}

		[Token(Token = "0x6003494")]
		[Address(RVA = "0x279BEA0", Offset = "0x279BEA0", VA = "0x279BEA0")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000875")]
	public class TagFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x6003495")]
		[Address(RVA = "0x2AB02A4", Offset = "0x2AB02A4", VA = "0x2AB02A4")]
		public TagFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000876")]
	public interface IDamageable
	{
		[Token(Token = "0x170004EF")]
		Transform transform
		{
			[Token(Token = "0x6003496")]
			get;
		}

		[Token(Token = "0x6003497")]
		void TakeDamage(DamageResult result);
	}
	[Token(Token = "0x2000877")]
	public class ListElementWithDelay<T> where T : UnityEngine.Object
	{
		[Token(Token = "0x40030BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Element;

		[Token(Token = "0x40030BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Delay;

		[Token(Token = "0x6003498")]
		public ListElementWithDelay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000878")]
	public class TrapMechanismElement : ListElementWithDelay<TrapMechanism>
	{
		[Token(Token = "0x6003499")]
		[Address(RVA = "0x2364F5C", Offset = "0x2364F5C", VA = "0x2364F5C")]
		public TrapMechanismElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000879")]
	public class ParticleElement : ListElementWithDelay<ParticleSystem>
	{
		[Token(Token = "0x40030BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPoint;

		[Token(Token = "0x600349A")]
		[Address(RVA = "0x230B550", Offset = "0x230B550", VA = "0x230B550")]
		public ParticleElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200087A")]
	public class AudioElement : ListElementWithDelay<AudioClip>
	{
		[Token(Token = "0x600349B")]
		[Address(RVA = "0x28FD0B8", Offset = "0x28FD0B8", VA = "0x28FD0B8")]
		public AudioElement()
		{
		}
	}
	[Token(Token = "0x200087B")]
	public enum MechanismEvents
	{
		[Token(Token = "0x40030C1")]
		Activate,
		[Token(Token = "0x40030C2")]
		Deactivate,
		[Token(Token = "0x40030C3")]
		LoopStart,
		[Token(Token = "0x40030C4")]
		LoopEnd,
		[Token(Token = "0x40030C5")]
		LoopReverseStart,
		[Token(Token = "0x40030C6")]
		LoopReverseEnd
	}
	[Token(Token = "0x200087C")]
	public abstract class TrapMechanism : MonoBehaviour
	{
		[Token(Token = "0x200087D")]
		public enum PlayMode
		{
			[Token(Token = "0x40030CF")]
			OnlyOnce,
			[Token(Token = "0x40030D0")]
			Loop
		}

		[Serializable]
		[Token(Token = "0x200087E")]
		public class EffectElement
		{
			[Token(Token = "0x40030D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[EventFilter]
			public MechanismEvents onEvent;

			[Token(Token = "0x40030D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EffectHandler effect;

			[Token(Token = "0x40030D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[CommandFilter]
			public EffectHandlerCommand command;

			[Token(Token = "0x60034A8")]
			[Address(RVA = "0x2063CE0", Offset = "0x2063CE0", VA = "0x2063CE0")]
			public void SendCommand()
			{
			}

			[Token(Token = "0x60034A9")]
			[Address(RVA = "0x2063D04", Offset = "0x2063D04", VA = "0x2063D04")]
			public EffectElement()
			{
			}
		}

		[Token(Token = "0x40030C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayMode playMode;

		[Token(Token = "0x40030C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE69764", Offset = "0xE69764")]
		public float Cooldown;

		[Token(Token = "0x40030C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ResetOnFinish;

		[Token(Token = "0x40030CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EffectElement> Effects;

		[Token(Token = "0x40030CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool isActive;

		[Token(Token = "0x40030CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float nextActivate;

		[Token(Token = "0x40030CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool justStarted;

		[Token(Token = "0x600349C")]
		[Address(RVA = "0x2363CA0", Offset = "0x2363CA0", VA = "0x2363CA0")]
		public void Activate()
		{
		}

		[Token(Token = "0x600349D")]
		[Address(RVA = "0x2363C70", Offset = "0x2363C70", VA = "0x2363C70")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600349E")]
		[Address(RVA = "0x23640D0", Offset = "0x23640D0", VA = "0x23640D0", Slot = "4")]
		public virtual bool ValidateMechanicsmEvent(MechanismEvents e)
		{
			return default(bool);
		}

		[Token(Token = "0x600349F")]
		[Address(RVA = "0x2364E60", Offset = "0x2364E60", VA = "0x2364E60")]
		private void Update()
		{
		}

		[Token(Token = "0x60034A0")]
		protected abstract bool Process();

		[Token(Token = "0x60034A1")]
		[Address(RVA = "0x2364F48", Offset = "0x2364F48", VA = "0x2364F48", Slot = "6")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x60034A2")]
		[Address(RVA = "0x2364F50", Offset = "0x2364F50", VA = "0x2364F50", Slot = "7")]
		protected virtual void OnDeActivate()
		{
		}

		[Token(Token = "0x60034A3")]
		[Address(RVA = "0x2364050", Offset = "0x2364050", VA = "0x2364050", Slot = "8")]
		protected virtual void OnLoopStart()
		{
		}

		[Token(Token = "0x60034A4")]
		[Address(RVA = "0x2364078", Offset = "0x2364078", VA = "0x2364078", Slot = "9")]
		protected virtual void OnLoopEnd()
		{
		}

		[Token(Token = "0x60034A5")]
		[Address(RVA = "0x2363F1C", Offset = "0x2363F1C", VA = "0x2363F1C")]
		protected void HandleEffect(MechanismEvents e)
		{
		}

		[Token(Token = "0x60034A6")]
		[Address(RVA = "0x2364F58", Offset = "0x2364F58", VA = "0x2364F58", Slot = "10")]
		protected virtual void ResetMechanism()
		{
		}

		[Token(Token = "0x60034A7")]
		[Address(RVA = "0x23647D8", Offset = "0x23647D8", VA = "0x23647D8")]
		protected TrapMechanism()
		{
		}
	}
	[Token(Token = "0x200087F")]
	public class CommandFilterAttribute : PropertyAttribute
	{
		[Token(Token = "0x60034AA")]
		[Address(RVA = "0x21BDC34", Offset = "0x21BDC34", VA = "0x21BDC34")]
		public CommandFilterAttribute()
		{
		}
	}
	[Token(Token = "0x2000880")]
	public class EventFilterAttribute : PropertyAttribute
	{
		[Token(Token = "0x60034AB")]
		[Address(RVA = "0x24F3584", Offset = "0x24F3584", VA = "0x24F3584")]
		public EventFilterAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000881")]
	public class DamageResult
	{
		[Token(Token = "0x40030D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int damage;

		[Token(Token = "0x40030D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DamageSource source;

		[Token(Token = "0x40030D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 point;

		[Token(Token = "0x40030D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Vector3 direction;

		[Token(Token = "0x60034AC")]
		[Address(RVA = "0x21C6518", Offset = "0x21C6518", VA = "0x21C6518")]
		public DamageResult(DamageResult toClone)
		{
		}

		[Token(Token = "0x60034AD")]
		[Address(RVA = "0x21C6574", Offset = "0x21C6574", VA = "0x21C6574")]
		public DamageResult()
		{
		}
	}
	[Token(Token = "0x2000882")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5A830", Offset = "0xE5A830")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A830", Offset = "0xE5A830")]
	public class DamageSource : EffectHandler
	{
		[Token(Token = "0x2000883")]
		public enum Mode
		{
			[Token(Token = "0x40030E1")]
			Volume,
			[Token(Token = "0x40030E2")]
			Contact,
			[Token(Token = "0x40030E3")]
			Particle,
			[Token(Token = "0x40030E4")]
			Ray
		}

		[Token(Token = "0x2000884")]
		public enum Duration
		{
			[Token(Token = "0x40030E6")]
			Once,
			[Token(Token = "0x40030E7")]
			Continuos,
			[Token(Token = "0x40030E8")]
			ControlledByMechanism
		}

		[Token(Token = "0x40030D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mode mode;

		[Token(Token = "0x40030D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Duration duration;

		[Token(Token = "0x40030DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxDistance;

		[Token(Token = "0x40030DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask layerMask;

		[Token(Token = "0x40030DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE697C8", Offset = "0xE697C8")]
		public float tickCooldown;

		[Token(Token = "0x40030DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DamageResult damage;

		[Token(Token = "0x40030DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float nextTick;

		[Token(Token = "0x40030DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<GameObject, float> collisionLog;

		[Token(Token = "0x60034AE")]
		[Address(RVA = "0x21C65B8", Offset = "0x21C65B8", VA = "0x21C65B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60034AF")]
		[Address(RVA = "0x21C6B18", Offset = "0x21C6B18", VA = "0x21C6B18")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60034B0")]
		[Address(RVA = "0x21C6CA8", Offset = "0x21C6CA8", VA = "0x21C6CA8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60034B1")]
		[Address(RVA = "0x21C6DD4", Offset = "0x21C6DD4", VA = "0x21C6DD4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60034B2")]
		[Address(RVA = "0x21C6F54", Offset = "0x21C6F54", VA = "0x21C6F54")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60034B3")]
		[Address(RVA = "0x21C707C", Offset = "0x21C707C", VA = "0x21C707C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60034B4")]
		[Address(RVA = "0x21C7134", Offset = "0x21C7134", VA = "0x21C7134")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60034B5")]
		[Address(RVA = "0x21C6A44", Offset = "0x21C6A44", VA = "0x21C6A44")]
		private void TryApplyDamage(GameObject targetGO, DamageResult result)
		{
		}

		[Token(Token = "0x60034B6")]
		[Address(RVA = "0x21C71E8", Offset = "0x21C71E8", VA = "0x21C71E8", Slot = "9")]
		protected virtual void ApplyDamage(IDamageable target, DamageResult result)
		{
		}

		[Token(Token = "0x60034B7")]
		[Address(RVA = "0x21C72BC", Offset = "0x21C72BC", VA = "0x21C72BC")]
		protected void ResetCollisionLog()
		{
		}

		[Token(Token = "0x60034B8")]
		[Address(RVA = "0x21C7310", Offset = "0x21C7310", VA = "0x21C7310", Slot = "4")]
		public override bool IsCommandValid(EffectHandlerCommand command, out string error)
		{
			return default(bool);
		}

		[Token(Token = "0x60034B9")]
		[Address(RVA = "0x21C73EC", Offset = "0x21C73EC", VA = "0x21C73EC", Slot = "5")]
		public override void PlayOnce()
		{
		}

		[Token(Token = "0x60034BA")]
		[Address(RVA = "0x21C73F4", Offset = "0x21C73F4", VA = "0x21C73F4")]
		public DamageSource()
		{
		}
	}
	[Token(Token = "0x2000885")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5A890", Offset = "0xE5A890")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A890", Offset = "0xE5A890")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5A890", Offset = "0xE5A890")]
	public class AudioHandler : EffectHandler
	{
		[Token(Token = "0x40030E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x40030EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource source;

		[Token(Token = "0x60034BB")]
		[Address(RVA = "0x28FD104", Offset = "0x28FD104", VA = "0x28FD104")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034BC")]
		[Address(RVA = "0x28FD160", Offset = "0x28FD160", VA = "0x28FD160", Slot = "5")]
		public override void PlayOnce()
		{
		}

		[Token(Token = "0x60034BD")]
		[Address(RVA = "0x28FD184", Offset = "0x28FD184", VA = "0x28FD184", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60034BE")]
		[Address(RVA = "0x28FD1C4", Offset = "0x28FD1C4", VA = "0x28FD1C4", Slot = "7")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60034BF")]
		[Address(RVA = "0x28FD1E0", Offset = "0x28FD1E0", VA = "0x28FD1E0", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60034C0")]
		[Address(RVA = "0x28FD1FC", Offset = "0x28FD1FC", VA = "0x28FD1FC")]
		public AudioHandler()
		{
		}
	}
	[Token(Token = "0x2000886")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A93C", Offset = "0xE5A93C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5A93C", Offset = "0xE5A93C")]
	public class CustomEffectHandler : EffectHandler
	{
		[Token(Token = "0x40030EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onPlayOnce;

		[Token(Token = "0x40030EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onPlay;

		[Token(Token = "0x40030ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onPause;

		[Token(Token = "0x40030EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onStop;

		[Token(Token = "0x60034C1")]
		[Address(RVA = "0x21C4B38", Offset = "0x21C4B38", VA = "0x21C4B38", Slot = "5")]
		public override void PlayOnce()
		{
		}

		[Token(Token = "0x60034C2")]
		[Address(RVA = "0x21C4B54", Offset = "0x21C4B54", VA = "0x21C4B54", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60034C3")]
		[Address(RVA = "0x21C4B70", Offset = "0x21C4B70", VA = "0x21C4B70", Slot = "7")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60034C4")]
		[Address(RVA = "0x21C4B8C", Offset = "0x21C4B8C", VA = "0x21C4B8C", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60034C5")]
		[Address(RVA = "0x21C4BA8", Offset = "0x21C4BA8", VA = "0x21C4BA8")]
		public CustomEffectHandler()
		{
		}
	}
	[Token(Token = "0x2000887")]
	public enum EffectHandlerCommand
	{
		[Token(Token = "0x40030F0")]
		PlayOnce,
		[Token(Token = "0x40030F1")]
		Play,
		[Token(Token = "0x40030F2")]
		Stop,
		[Token(Token = "0x40030F3")]
		Pause
	}
	[Token(Token = "0x2000888")]
	public class EffectHandler : MonoBehaviour
	{
		[Token(Token = "0x2000889")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5A9A0", Offset = "0xE5A9A0")]
		private sealed class <ExecuteWithDelay>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EffectHandler <>4__this;

			[Token(Token = "0x40030F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EffectHandlerCommand command;

			[Token(Token = "0x170004F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034D2")]
				[Address(RVA = "0x20F5AE8", Offset = "0x20F5AE8", VA = "0x20F5AE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034D4")]
				[Address(RVA = "0x20F5B30", Offset = "0x20F5B30", VA = "0x20F5B30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034CF")]
			[Address(RVA = "0x20F59CC", Offset = "0x20F59CC", VA = "0x20F59CC")]
			[DebuggerHidden]
			public <ExecuteWithDelay>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60034D0")]
			[Address(RVA = "0x20F59F8", Offset = "0x20F59F8", VA = "0x20F59F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034D1")]
			[Address(RVA = "0x20F59FC", Offset = "0x20F59FC", VA = "0x20F59FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034D3")]
			[Address(RVA = "0x20F5AF0", Offset = "0x20F5AF0", VA = "0x20F5AF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40030F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE697DC", Offset = "0xE697DC")]
		public float delay;

		[Token(Token = "0x40030F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine waiting;

		[Token(Token = "0x60034C6")]
		[Address(RVA = "0x24EF6D0", Offset = "0x24EF6D0", VA = "0x24EF6D0", Slot = "4")]
		public virtual bool IsCommandValid(EffectHandlerCommand command, out string error)
		{
			return default(bool);
		}

		[Token(Token = "0x60034C7")]
		[Address(RVA = "0x24EF72C", Offset = "0x24EF72C", VA = "0x24EF72C")]
		public void Execute(EffectHandlerCommand command)
		{
		}

		[Token(Token = "0x60034C8")]
		[Address(RVA = "0x24EF828", Offset = "0x24EF828", VA = "0x24EF828")]
		public void ExecuteImmediatelly(EffectHandlerCommand command)
		{
		}

		[Token(Token = "0x60034C9")]
		[Address(RVA = "0x24EF7A0", Offset = "0x24EF7A0", VA = "0x24EF7A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6FD9C", Offset = "0xE6FD9C")]
		private IEnumerator ExecuteWithDelay(EffectHandlerCommand command)
		{
			return null;
		}

		[Token(Token = "0x60034CA")]
		[Address(RVA = "0x24EF87C", Offset = "0x24EF87C", VA = "0x24EF87C", Slot = "5")]
		public virtual void PlayOnce()
		{
		}

		[Token(Token = "0x60034CB")]
		[Address(RVA = "0x24EF880", Offset = "0x24EF880", VA = "0x24EF880", Slot = "6")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60034CC")]
		[Address(RVA = "0x24EF884", Offset = "0x24EF884", VA = "0x24EF884", Slot = "7")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x60034CD")]
		[Address(RVA = "0x24EF888", Offset = "0x24EF888", VA = "0x24EF888", Slot = "8")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60034CE")]
		[Address(RVA = "0x24EF88C", Offset = "0x24EF88C", VA = "0x24EF88C")]
		public EffectHandler()
		{
		}
	}
	[Token(Token = "0x200088A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5A9B0", Offset = "0xE5A9B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5A9B0", Offset = "0xE5A9B0")]
	public class ParticleHandler : EffectHandler
	{
		[Token(Token = "0x200088B")]
		public enum Mode
		{
			[Token(Token = "0x40030FE")]
			Normal,
			[Token(Token = "0x40030FF")]
			Instantiate
		}

		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5AA14", Offset = "0xE5AA14")]
		private sealed class <StopWithDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4003103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ParticleHandler <>4__this;

			[Token(Token = "0x170004F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034DF")]
				[Address(RVA = "0x205DF74", Offset = "0x205DF74", VA = "0x205DF74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034E1")]
				[Address(RVA = "0x205DFBC", Offset = "0x205DFBC", VA = "0x205DFBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034DC")]
			[Address(RVA = "0x205DE58", Offset = "0x205DE58", VA = "0x205DE58")]
			[DebuggerHidden]
			public <StopWithDelay>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60034DD")]
			[Address(RVA = "0x205DE84", Offset = "0x205DE84", VA = "0x205DE84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034DE")]
			[Address(RVA = "0x205DE88", Offset = "0x205DE88", VA = "0x205DE88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034E0")]
			[Address(RVA = "0x205DF7C", Offset = "0x205DF7C", VA = "0x205DF7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40030FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem particle;

		[Token(Token = "0x40030FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mode mode;

		[Token(Token = "0x40030FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine stop;

		[Token(Token = "0x60034D5")]
		[Address(RVA = "0x230BD68", Offset = "0x230BD68", VA = "0x230BD68", Slot = "4")]
		public override bool IsCommandValid(EffectHandlerCommand command, out string error)
		{
			return default(bool);
		}

		[Token(Token = "0x60034D6")]
		[Address(RVA = "0x230BE2C", Offset = "0x230BE2C", VA = "0x230BE2C", Slot = "5")]
		public override void PlayOnce()
		{
		}

		[Token(Token = "0x60034D7")]
		[Address(RVA = "0x230C06C", Offset = "0x230C06C", VA = "0x230C06C", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60034D8")]
		[Address(RVA = "0x230C094", Offset = "0x230C094", VA = "0x230C094", Slot = "7")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60034D9")]
		[Address(RVA = "0x230C0BC", Offset = "0x230C0BC", VA = "0x230C0BC", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60034DA")]
		[Address(RVA = "0x230BFE4", Offset = "0x230BFE4", VA = "0x230BFE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6FE4C", Offset = "0xE6FE4C")]
		private IEnumerator StopWithDelay(float time)
		{
			return null;
		}

		[Token(Token = "0x60034DB")]
		[Address(RVA = "0x230C0E4", Offset = "0x230C0E4", VA = "0x230C0E4")]
		public ParticleHandler()
		{
		}
	}
	[Token(Token = "0x200088D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AA24", Offset = "0xE5AA24")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AA24", Offset = "0xE5AA24")]
	public class RayHandler : EffectHandler
	{
		[Token(Token = "0x4003104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool playOnAwake;

		[Token(Token = "0x4003105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE69800", Offset = "0xE69800")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4003106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform sparkParticle;

		[Token(Token = "0x4003107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE69848", Offset = "0xE69848")]
		private float maxDistance;

		[Token(Token = "0x4003108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private LayerMask obstacleLayerMask;

		[Token(Token = "0x170004F4")]
		private bool isActive
		{
			[Token(Token = "0x60034E2")]
			[Address(RVA = "0x2718734", Offset = "0x2718734", VA = "0x2718734")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034E3")]
			[Address(RVA = "0x2718760", Offset = "0x2718760", VA = "0x2718760")]
			set
			{
			}
		}

		[Token(Token = "0x60034E4")]
		[Address(RVA = "0x27187C0", Offset = "0x27187C0", VA = "0x27187C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034E5")]
		[Address(RVA = "0x2718970", Offset = "0x2718970", VA = "0x2718970")]
		private void Update()
		{
		}

		[Token(Token = "0x60034E6")]
		[Address(RVA = "0x27188B8", Offset = "0x27188B8", VA = "0x27188B8")]
		private void SetEndPoint(float distance)
		{
		}

		[Token(Token = "0x60034E7")]
		[Address(RVA = "0x2718AD0", Offset = "0x2718AD0", VA = "0x2718AD0", Slot = "4")]
		public override bool IsCommandValid(EffectHandlerCommand command, out string error)
		{
			return default(bool);
		}

		[Token(Token = "0x60034E8")]
		[Address(RVA = "0x2718B60", Offset = "0x2718B60", VA = "0x2718B60", Slot = "5")]
		public override void PlayOnce()
		{
		}

		[Token(Token = "0x60034E9")]
		[Address(RVA = "0x2718B64", Offset = "0x2718B64", VA = "0x2718B64", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60034EA")]
		[Address(RVA = "0x2718B6C", Offset = "0x2718B6C", VA = "0x2718B6C", Slot = "7")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60034EB")]
		[Address(RVA = "0x2718B74", Offset = "0x2718B74", VA = "0x2718B74", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60034EC")]
		[Address(RVA = "0x2718B7C", Offset = "0x2718B7C", VA = "0x2718B7C")]
		public RayHandler()
		{
		}
	}
	[Token(Token = "0x200088E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AA88", Offset = "0xE5AA88")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AA88", Offset = "0xE5AA88")]
	public class Trap : MonoBehaviour
	{
		[Token(Token = "0x200088F")]
		public enum StartMode
		{
			[Token(Token = "0x400310E")]
			OnAwake,
			[Token(Token = "0x400310F")]
			OnEvent
		}

		[Token(Token = "0x2000890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5AAEC", Offset = "0xE5AAEC")]
		private sealed class <ActivateMechanism>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrapMechanism m;

			[Token(Token = "0x170004F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034F9")]
				[Address(RVA = "0x2063C90", Offset = "0x2063C90", VA = "0x2063C90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034FB")]
				[Address(RVA = "0x2063CD8", Offset = "0x2063CD8", VA = "0x2063CD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034F6")]
			[Address(RVA = "0x2063BA4", Offset = "0x2063BA4", VA = "0x2063BA4")]
			[DebuggerHidden]
			public <ActivateMechanism>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60034F7")]
			[Address(RVA = "0x2063BD0", Offset = "0x2063BD0", VA = "0x2063BD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034F8")]
			[Address(RVA = "0x2063BD4", Offset = "0x2063BD4", VA = "0x2063BD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034FA")]
			[Address(RVA = "0x2063C98", Offset = "0x2063C98", VA = "0x2063C98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMode startMode;

		[Token(Token = "0x400310A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Sync;

		[Token(Token = "0x400310B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TrapMechanismElement> Mechanisms;

		[Token(Token = "0x400310C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE69890", Offset = "0xE69890")]
		private bool <isActive>k__BackingField;

		[Token(Token = "0x170004F5")]
		public bool isActive
		{
			[Token(Token = "0x60034ED")]
			[Address(RVA = "0x2363924", Offset = "0x2363924", VA = "0x2363924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FEFC", Offset = "0xE6FEFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034EE")]
			[Address(RVA = "0x236392C", Offset = "0x236392C", VA = "0x236392C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FF0C", Offset = "0xE6FF0C")]
			private set
			{
			}
		}

		[Token(Token = "0x60034EF")]
		[Address(RVA = "0x2363938", Offset = "0x2363938", VA = "0x2363938")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034F0")]
		[Address(RVA = "0x2363B28", Offset = "0x2363B28", VA = "0x2363B28")]
		public void Activate()
		{
		}

		[Token(Token = "0x60034F1")]
		[Address(RVA = "0x2363B3C", Offset = "0x2363B3C", VA = "0x2363B3C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60034F2")]
		[Address(RVA = "0x2363C80", Offset = "0x2363C80", VA = "0x2363C80")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60034F3")]
		[Address(RVA = "0x2363948", Offset = "0x2363948", VA = "0x2363948")]
		private void DoActivate()
		{
		}

		[Token(Token = "0x60034F4")]
		[Address(RVA = "0x2363CB8", Offset = "0x2363CB8", VA = "0x2363CB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE6FF1C", Offset = "0xE6FF1C")]
		private IEnumerator ActivateMechanism(TrapMechanism m, float time)
		{
			return null;
		}

		[Token(Token = "0x60034F5")]
		[Address(RVA = "0x2363D40", Offset = "0x2363D40", VA = "0x2363D40")]
		public Trap()
		{
		}
	}
	[Token(Token = "0x2000891")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AAFC", Offset = "0xE5AAFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AAFC", Offset = "0xE5AAFC")]
	public class TrapAnimator : TrapMechanism
	{
		[Token(Token = "0x2000892")]
		public enum LoopMode
		{
			[Token(Token = "0x4003128")]
			PingPong,
			[Token(Token = "0x4003129")]
			Repeat
		}

		[Token(Token = "0x2000893")]
		public enum AnimatorMode
		{
			[Token(Token = "0x400312B")]
			Translate,
			[Token(Token = "0x400312C")]
			Rotate
		}

		[Token(Token = "0x4003114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LoopMode loopMode;

		[Token(Token = "0x4003115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimatorMode mode;

		[Token(Token = "0x4003116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE698A0", Offset = "0xE698A0")]
		public float duration;

		[Token(Token = "0x4003117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve curve;

		[Token(Token = "0x4003118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool differentReverse;

		[Token(Token = "0x4003119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE698B4", Offset = "0xE698B4")]
		public float reverseDuration;

		[Token(Token = "0x400311A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve reverseCurve;

		[Token(Token = "0x400311B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<ParticleElement> ReverseParticles;

		[Token(Token = "0x400311C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<AudioElement> ReverseSounds;

		[Token(Token = "0x400311D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool reverse;

		[Token(Token = "0x400311E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float time;

		[Token(Token = "0x400311F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float position;

		[Token(Token = "0x4003120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody rb;

		[Token(Token = "0x4003121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform anchor;

		[Token(Token = "0x4003122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 start;

		[Token(Token = "0x4003123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 end;

		[Token(Token = "0x4003124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 eulerAngles;

		[Token(Token = "0x4003125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 startAngle;

		[Token(Token = "0x4003126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 endAngle;

		[Token(Token = "0x60034FC")]
		[Address(RVA = "0x2363DCC", Offset = "0x2363DCC", VA = "0x2363DCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60034FD")]
		[Address(RVA = "0x2363EFC", Offset = "0x2363EFC", VA = "0x2363EFC", Slot = "8")]
		protected override void OnLoopStart()
		{
		}

		[Token(Token = "0x60034FE")]
		[Address(RVA = "0x2364058", Offset = "0x2364058", VA = "0x2364058", Slot = "9")]
		protected override void OnLoopEnd()
		{
		}

		[Token(Token = "0x60034FF")]
		[Address(RVA = "0x2364080", Offset = "0x2364080", VA = "0x2364080", Slot = "4")]
		public override bool ValidateMechanicsmEvent(MechanismEvents e)
		{
			return default(bool);
		}

		[Token(Token = "0x6003500")]
		[Address(RVA = "0x23640F8", Offset = "0x23640F8", VA = "0x23640F8", Slot = "5")]
		protected override bool Process()
		{
			return default(bool);
		}

		[Token(Token = "0x6003501")]
		[Address(RVA = "0x23644BC", Offset = "0x23644BC", VA = "0x23644BC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6003502")]
		[Address(RVA = "0x2363E5C", Offset = "0x2363E5C", VA = "0x2363E5C")]
		private void InitTranslate()
		{
		}

		[Token(Token = "0x6003503")]
		[Address(RVA = "0x2364234", Offset = "0x2364234", VA = "0x2364234")]
		private void ProcessTranslate(float position)
		{
		}

		[Token(Token = "0x6003504")]
		[Address(RVA = "0x23644C0", Offset = "0x23644C0", VA = "0x23644C0")]
		private void DrawGizmosForTranslate()
		{
		}

		[Token(Token = "0x6003505")]
		[Address(RVA = "0x2363EB0", Offset = "0x2363EB0", VA = "0x2363EB0")]
		private void InitRotate()
		{
		}

		[Token(Token = "0x6003506")]
		[Address(RVA = "0x2364370", Offset = "0x2364370", VA = "0x2364370")]
		private bool ProcessRotate(float position)
		{
			return default(bool);
		}

		[Token(Token = "0x6003507")]
		[Address(RVA = "0x23644C4", Offset = "0x23644C4", VA = "0x23644C4", Slot = "10")]
		protected override void ResetMechanism()
		{
		}

		[Token(Token = "0x6003508")]
		[Address(RVA = "0x23644E8", Offset = "0x23644E8", VA = "0x23644E8")]
		public TrapAnimator()
		{
		}
	}
	[Token(Token = "0x2000894")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AB5C", Offset = "0xE5AB5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AB5C", Offset = "0xE5AB5C")]
	public class TrapLauncher : TrapMechanism
	{
		[Token(Token = "0x400312D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE698C8", Offset = "0xE698C8")]
		public float force;

		[Token(Token = "0x400312E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE698DC", Offset = "0xE698DC")]
		public float maxDistance;

		[Token(Token = "0x400312F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE698F0", Offset = "0xE698F0")]
		public int ammunition;

		[Token(Token = "0x4003130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool randomProjectile;

		[Token(Token = "0x4003131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool projectileStickOnCollision;

		[Token(Token = "0x4003132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GameObject> projectilePrefabs;

		[Token(Token = "0x4003133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE69904", Offset = "0xE69904")]
		public int projectilePoolSize;

		[Token(Token = "0x4003134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, Queue<GameObject>> projectilePool;

		[Token(Token = "0x4003135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int nextProjectile;

		[Token(Token = "0x4003136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool useAmmo;

		[Token(Token = "0x4003137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currAmmo;

		[Token(Token = "0x6003509")]
		[Address(RVA = "0x2364864", Offset = "0x2364864", VA = "0x2364864")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600350A")]
		[Address(RVA = "0x236487C", Offset = "0x236487C", VA = "0x236487C", Slot = "5")]
		protected override bool Process()
		{
			return default(bool);
		}

		[Token(Token = "0x600350B")]
		[Address(RVA = "0x2364DBC", Offset = "0x2364DBC", VA = "0x2364DBC", Slot = "10")]
		protected override void ResetMechanism()
		{
		}

		[Token(Token = "0x600350C")]
		[Address(RVA = "0x2364A24", Offset = "0x2364A24", VA = "0x2364A24")]
		private void SelectNextPrefab()
		{
		}

		[Token(Token = "0x600350D")]
		[Address(RVA = "0x2364AB0", Offset = "0x2364AB0", VA = "0x2364AB0")]
		private GameObject CreateProjectile(GameObject prefab, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600350E")]
		[Address(RVA = "0x2364DCC", Offset = "0x2364DCC", VA = "0x2364DCC")]
		public TrapLauncher()
		{
		}
	}
	[Token(Token = "0x2000895")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5ABBC", Offset = "0xE5ABBC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5ABBC", Offset = "0xE5ABBC")]
	public class TrapParticle : TrapMechanism
	{
		[Token(Token = "0x4003138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ParticleSystem particle;

		[Token(Token = "0x4003139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.MainModule psMain;

		[Token(Token = "0x400313A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float duration;

		[Token(Token = "0x400313B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float pauseTime;

		[Token(Token = "0x600350F")]
		[Address(RVA = "0x2364FA8", Offset = "0x2364FA8", VA = "0x2364FA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003510")]
		[Address(RVA = "0x2364FF8", Offset = "0x2364FF8", VA = "0x2364FF8", Slot = "5")]
		protected override bool Process()
		{
			return default(bool);
		}

		[Token(Token = "0x6003511")]
		[Address(RVA = "0x23650AC", Offset = "0x23650AC", VA = "0x23650AC")]
		public TrapParticle()
		{
		}
	}
	[Token(Token = "0x2000896")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5AC1C", Offset = "0xE5AC1C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AC1C", Offset = "0xE5AC1C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AC1C", Offset = "0xE5AC1C")]
	public class TrapPhysics : TrapMechanism
	{
		[Token(Token = "0x400313C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE69918", Offset = "0xE69918")]
		public float duration;

		[Token(Token = "0x400313D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x400313E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float finishTime;

		[Token(Token = "0x400313F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 originalPos;

		[Token(Token = "0x4003140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion originalRot;

		[Token(Token = "0x6003512")]
		[Address(RVA = "0x23650B0", Offset = "0x23650B0", VA = "0x23650B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003513")]
		[Address(RVA = "0x2365168", Offset = "0x2365168", VA = "0x2365168", Slot = "5")]
		protected override bool Process()
		{
			return default(bool);
		}

		[Token(Token = "0x6003514")]
		[Address(RVA = "0x236521C", Offset = "0x236521C", VA = "0x236521C", Slot = "10")]
		protected override void ResetMechanism()
		{
		}

		[Token(Token = "0x6003515")]
		[Address(RVA = "0x236528C", Offset = "0x236528C", VA = "0x236528C")]
		public TrapPhysics()
		{
		}
	}
	[Token(Token = "0x2000897")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5ACC4", Offset = "0xE5ACC4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5ACC4", Offset = "0xE5ACC4")]
	public class TrapProjectile : DamageSource
	{
		[Token(Token = "0x4003141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool sticky;

		[Token(Token = "0x4003142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float force;

		[Token(Token = "0x4003143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float distanceLeft;

		[Token(Token = "0x6003516")]
		[Address(RVA = "0x2365290", Offset = "0x2365290", VA = "0x2365290")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003517")]
		[Address(RVA = "0x23652A4", Offset = "0x23652A4", VA = "0x23652A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6003518")]
		[Address(RVA = "0x2365398", Offset = "0x2365398", VA = "0x2365398", Slot = "9")]
		protected override void ApplyDamage(IDamageable target, DamageResult result)
		{
		}

		[Token(Token = "0x6003519")]
		[Address(RVA = "0x23654B0", Offset = "0x23654B0", VA = "0x23654B0")]
		public TrapProjectile()
		{
		}
	}
	[Token(Token = "0x2000898")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AD24", Offset = "0xE5AD24")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AD24", Offset = "0xE5AD24")]
	public class TrapRaycast : MonoBehaviour
	{
		[Token(Token = "0x4003144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Trap trap;

		[Token(Token = "0x4003145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrapTrigger.Action action;

		[Token(Token = "0x4003146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDistance;

		[Token(Token = "0x4003147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask layerMask;

		[Token(Token = "0x4003148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] tagMask;

		[Token(Token = "0x4003149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onRaycastHit;

		[Token(Token = "0x400314A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onActivate;

		[Token(Token = "0x400314B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onDeactivate;

		[Token(Token = "0x400314C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE6995C", Offset = "0xE6995C")]
		public float cooldown;

		[Token(Token = "0x400314D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float nextSendTime;

		[Token(Token = "0x600351A")]
		[Address(RVA = "0x23654B8", Offset = "0x23654B8", VA = "0x23654B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600351B")]
		[Address(RVA = "0x23656CC", Offset = "0x23656CC", VA = "0x23656CC")]
		protected void DoAction()
		{
		}

		[Token(Token = "0x600351C")]
		[Address(RVA = "0x23655E4", Offset = "0x23655E4", VA = "0x23655E4")]
		private bool CheckTag(GameObject otherGO)
		{
			return default(bool);
		}

		[Token(Token = "0x600351D")]
		[Address(RVA = "0x2365840", Offset = "0x2365840", VA = "0x2365840")]
		public TrapRaycast()
		{
		}
	}
	[Token(Token = "0x2000899")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AD88", Offset = "0xE5AD88")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE5AD88", Offset = "0xE5AD88")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AD88", Offset = "0xE5AD88")]
	public class TrapTrigger : MonoBehaviour
	{
		[Token(Token = "0x200089A")]
		public enum Action
		{
			[Token(Token = "0x400315B")]
			Activate,
			[Token(Token = "0x400315C")]
			Deactivate,
			[Token(Token = "0x400315D")]
			Toggle
		}

		[Token(Token = "0x200089B")]
		public enum Interaction
		{
			[Token(Token = "0x400315F")]
			None,
			[Token(Token = "0x4003160")]
			KeyCode,
			[Token(Token = "0x4003161")]
			UnityInput
		}

		[Token(Token = "0x400314E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Trap trap;

		[Token(Token = "0x400314F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x4003150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xE69970", Offset = "0xE69970")]
		public float cooldown;

		[Token(Token = "0x4003151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] tagMask;

		[Token(Token = "0x4003152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Interaction interaction;

		[Token(Token = "0x4003153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode key;

		[Token(Token = "0x4003154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string input;

		[Token(Token = "0x4003155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTriggerEnter;

		[Token(Token = "0x4003156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTriggerExit;

		[Token(Token = "0x4003157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onActivate;

		[Token(Token = "0x4003158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onDeactivate;

		[Token(Token = "0x4003159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextSendTime;

		[Token(Token = "0x170004F8")]
		public float Temperature
		{
			[Token(Token = "0x600351E")]
			[Address(RVA = "0x23658A8", Offset = "0x23658A8", VA = "0x23658A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600351F")]
		[Address(RVA = "0x23658B4", Offset = "0x23658B4", VA = "0x23658B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003520")]
		[Address(RVA = "0x2365914", Offset = "0x2365914", VA = "0x2365914")]
		private void Update()
		{
		}

		[Token(Token = "0x6003521")]
		[Address(RVA = "0x2365954", Offset = "0x2365954", VA = "0x2365954")]
		protected void DoAction()
		{
		}

		[Token(Token = "0x6003522")]
		[Address(RVA = "0x2365AC8", Offset = "0x2365AC8", VA = "0x2365AC8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6003523")]
		[Address(RVA = "0x2365C18", Offset = "0x2365C18", VA = "0x2365C18")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6003524")]
		[Address(RVA = "0x2365CBC", Offset = "0x2365CBC", VA = "0x2365CBC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6003525")]
		[Address(RVA = "0x2365B30", Offset = "0x2365B30", VA = "0x2365B30")]
		private bool CheckTag(GameObject otherGO)
		{
			return default(bool);
		}

		[Token(Token = "0x6003526")]
		[Address(RVA = "0x2365D14", Offset = "0x2365D14", VA = "0x2365D14")]
		public TrapTrigger()
		{
		}
	}
	[Token(Token = "0x200089C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE5AE34", Offset = "0xE5AE34")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE5AE34", Offset = "0xE5AE34")]
	public class TextureMover : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200089D")]
		public class State
		{
			[Token(Token = "0x4003164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stateName;

			[Token(Token = "0x4003165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 offset;

			[Token(Token = "0x600352C")]
			[Address(RVA = "0x20636FC", Offset = "0x20636FC", VA = "0x20636FC")]
			public State()
			{
			}
		}

		[Token(Token = "0x200089E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE5AE98", Offset = "0xE5AE98")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4003166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4003167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public State state;

			[Token(Token = "0x600352D")]
			[Address(RVA = "0x206368C", Offset = "0x206368C", VA = "0x206368C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600352E")]
			[Address(RVA = "0x2063694", Offset = "0x2063694", VA = "0x2063694")]
			internal bool <SetState>b__0(State x)
			{
				return default(bool);
			}

			[Token(Token = "0x600352F")]
			[Address(RVA = "0x20636B8", Offset = "0x20636B8", VA = "0x20636B8")]
			internal void <SetState>b__1(Renderer r)
			{
			}
		}

		[Token(Token = "0x4003162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<State> states;

		[Token(Token = "0x4003163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Renderer> renderers;

		[Token(Token = "0x6003527")]
		[Address(RVA = "0x2AB5968", Offset = "0x2AB5968", VA = "0x2AB5968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003528")]
		[Address(RVA = "0x2AB59E0", Offset = "0x2AB59E0", VA = "0x2AB59E0")]
		public void SetState(string name)
		{
		}

		[Token(Token = "0x6003529")]
		[Address(RVA = "0x2AB5B70", Offset = "0x2AB5B70", VA = "0x2AB5B70")]
		public void ResetState()
		{
		}

		[Token(Token = "0x600352A")]
		[Address(RVA = "0x2AB5C2C", Offset = "0x2AB5C2C", VA = "0x2AB5C2C")]
		public TextureMover()
		{
		}

		[Token(Token = "0x600352B")]
		[Address(RVA = "0x2AB5CB0", Offset = "0x2AB5CB0", VA = "0x2AB5CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE6FFCC", Offset = "0xE6FFCC")]
		private void <ResetState>b__5_0(Renderer r)
		{
		}
	}
}
namespace Runemark.Common
{
	[Token(Token = "0x200089F")]
	public class RMBase : MonoBehaviour
	{
		[Token(Token = "0x170004F9")]
		public virtual string Title
		{
			[Token(Token = "0x6003530")]
			[Address(RVA = "0x2712CE4", Offset = "0x2712CE4", VA = "0x2712CE4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		public virtual string Description
		{
			[Token(Token = "0x6003531")]
			[Address(RVA = "0x2712D28", Offset = "0x2712D28", VA = "0x2712D28", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003532")]
		[Address(RVA = "0x2712D6C", Offset = "0x2712D6C", VA = "0x2712D6C")]
		public RMBase()
		{
		}
	}
	[Token(Token = "0x20008A0")]
	public class RMFPSController : RMBase
	{
		[Token(Token = "0x4003168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSensitivityX;

		[Token(Token = "0x4003169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseSensitivityY;

		[Token(Token = "0x400316A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float walkSpeed;

		[Token(Token = "0x400316B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float JumpForce;

		[Token(Token = "0x400316C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask GroundedMask;

		[Token(Token = "0x400316D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _moveAmount;

		[Token(Token = "0x400316E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _smoothMoveVelocity;

		[Token(Token = "0x400316F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _cameraTransform;

		[Token(Token = "0x4003170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _verticalLookRotation;

		[Token(Token = "0x4003171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4003172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _grounded;

		[Token(Token = "0x4003173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _cursorVisible;

		[Token(Token = "0x170004FB")]
		public override string Title
		{
			[Token(Token = "0x6003533")]
			[Address(RVA = "0x2712D74", Offset = "0x2712D74", VA = "0x2712D74", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		public override string Description
		{
			[Token(Token = "0x6003534")]
			[Address(RVA = "0x2712DB8", Offset = "0x2712DB8", VA = "0x2712DB8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003535")]
		[Address(RVA = "0x2712DFC", Offset = "0x2712DFC", VA = "0x2712DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6003536")]
		[Address(RVA = "0x2712EF0", Offset = "0x2712EF0", VA = "0x2712EF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6003537")]
		[Address(RVA = "0x2713280", Offset = "0x2713280", VA = "0x2713280")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003538")]
		[Address(RVA = "0x2713244", Offset = "0x2713244", VA = "0x2713244")]
		private void UnlockMouse()
		{
		}

		[Token(Token = "0x6003539")]
		[Address(RVA = "0x2712EB8", Offset = "0x2712EB8", VA = "0x2712EB8")]
		private void LockMouse()
		{
		}

		[Token(Token = "0x600353A")]
		[Address(RVA = "0x271332C", Offset = "0x271332C", VA = "0x271332C")]
		public RMFPSController()
		{
		}
	}
}
namespace ParadoxNotion.Internal
{
	[Token(Token = "0x20008A1")]
	internal class AOTDummy
	{
		[Token(Token = "0x4003174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object o;

		[Token(Token = "0x4003175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CreateList<bool> CreateList_System_Boolean;

		[Token(Token = "0x4003176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CreateList<float> CreateList_System_Single;

		[Token(Token = "0x4003177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CreateList<int> CreateList_System_Int32;

		[Token(Token = "0x4003178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CreateList<Vector2> CreateList_UnityEngine_Vector2;

		[Token(Token = "0x4003179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CreateList<Vector3> CreateList_UnityEngine_Vector3;

		[Token(Token = "0x400317A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CreateList<Vector4> CreateList_UnityEngine_Vector4;

		[Token(Token = "0x400317B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CreateList<Quaternion> CreateList_UnityEngine_Quaternion;

		[Token(Token = "0x400317C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CreateList<Keyframe> CreateList_UnityEngine_Keyframe;

		[Token(Token = "0x400317D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CreateList<Bounds> CreateList_UnityEngine_Bounds;

		[Token(Token = "0x400317E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CreateList<Color> CreateList_UnityEngine_Color;

		[Token(Token = "0x400317F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CreateList<Rect> CreateList_UnityEngine_Rect;

		[Token(Token = "0x4003180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CreateList<ContactPoint> CreateList_UnityEngine_ContactPoint;

		[Token(Token = "0x4003181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CreateList<ContactPoint2D> CreateList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CreateList<RaycastHit> CreateList_UnityEngine_RaycastHit;

		[Token(Token = "0x4003183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CreateList<RaycastHit2D> CreateList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CreateList<Ray> CreateList_UnityEngine_Ray;

		[Token(Token = "0x4003185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreateList<Space> CreateList_UnityEngine_Space;

		[Token(Token = "0x4003186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CreateList<SpawnPointInfo> CreateList_SpawnPointInfo;

		[Token(Token = "0x4003187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CreateList<LayerMask> CreateList_UnityEngine_LayerMask;

		[Token(Token = "0x4003188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CreateVariable<bool> CreateVariable_System_Boolean;

		[Token(Token = "0x4003189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CreateVariable<float> CreateVariable_System_Single;

		[Token(Token = "0x400318A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CreateVariable<int> CreateVariable_System_Int32;

		[Token(Token = "0x400318B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CreateVariable<Vector2> CreateVariable_UnityEngine_Vector2;

		[Token(Token = "0x400318C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CreateVariable<Vector3> CreateVariable_UnityEngine_Vector3;

		[Token(Token = "0x400318D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CreateVariable<Vector4> CreateVariable_UnityEngine_Vector4;

		[Token(Token = "0x400318E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private CreateVariable<Quaternion> CreateVariable_UnityEngine_Quaternion;

		[Token(Token = "0x400318F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CreateVariable<Keyframe> CreateVariable_UnityEngine_Keyframe;

		[Token(Token = "0x4003190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private CreateVariable<Bounds> CreateVariable_UnityEngine_Bounds;

		[Token(Token = "0x4003191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private CreateVariable<Color> CreateVariable_UnityEngine_Color;

		[Token(Token = "0x4003192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private CreateVariable<Rect> CreateVariable_UnityEngine_Rect;

		[Token(Token = "0x4003193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private CreateVariable<ContactPoint> CreateVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x4003194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private CreateVariable<ContactPoint2D> CreateVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private CreateVariable<RaycastHit> CreateVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x4003196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CreateVariable<RaycastHit2D> CreateVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private CreateVariable<Ray> CreateVariable_UnityEngine_Ray;

		[Token(Token = "0x4003198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private CreateVariable<Space> CreateVariable_UnityEngine_Space;

		[Token(Token = "0x4003199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private CreateVariable<SpawnPointInfo> CreateVariable_SpawnPointInfo;

		[Token(Token = "0x400319A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private CreateVariable<LayerMask> CreateVariable_UnityEngine_LayerMask;

		[Token(Token = "0x400319B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GetElementInList<bool> GetElementInList_System_Boolean;

		[Token(Token = "0x400319C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GetElementInList<float> GetElementInList_System_Single;

		[Token(Token = "0x400319D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GetElementInList<int> GetElementInList_System_Int32;

		[Token(Token = "0x400319E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GetElementInList<Vector2> GetElementInList_UnityEngine_Vector2;

		[Token(Token = "0x400319F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GetElementInList<Vector3> GetElementInList_UnityEngine_Vector3;

		[Token(Token = "0x40031A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GetElementInList<Vector4> GetElementInList_UnityEngine_Vector4;

		[Token(Token = "0x40031A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GetElementInList<Quaternion> GetElementInList_UnityEngine_Quaternion;

		[Token(Token = "0x40031A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GetElementInList<Keyframe> GetElementInList_UnityEngine_Keyframe;

		[Token(Token = "0x40031A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GetElementInList<Bounds> GetElementInList_UnityEngine_Bounds;

		[Token(Token = "0x40031A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GetElementInList<Color> GetElementInList_UnityEngine_Color;

		[Token(Token = "0x40031A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GetElementInList<Rect> GetElementInList_UnityEngine_Rect;

		[Token(Token = "0x40031A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private GetElementInList<ContactPoint> GetElementInList_UnityEngine_ContactPoint;

		[Token(Token = "0x40031A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private GetElementInList<ContactPoint2D> GetElementInList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40031A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private GetElementInList<RaycastHit> GetElementInList_UnityEngine_RaycastHit;

		[Token(Token = "0x40031A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GetElementInList<RaycastHit2D> GetElementInList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40031AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private GetElementInList<Ray> GetElementInList_UnityEngine_Ray;

		[Token(Token = "0x40031AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private GetElementInList<Space> GetElementInList_UnityEngine_Space;

		[Token(Token = "0x40031AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private GetElementInList<SpawnPointInfo> GetElementInList_SpawnPointInfo;

		[Token(Token = "0x40031AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private GetElementInList<LayerMask> GetElementInList_UnityEngine_LayerMask;

		[Token(Token = "0x40031AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private GetElementsInList<bool> GetElementsInList_System_Boolean;

		[Token(Token = "0x40031AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private GetElementsInList<float> GetElementsInList_System_Single;

		[Token(Token = "0x40031B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private GetElementsInList<int> GetElementsInList_System_Int32;

		[Token(Token = "0x40031B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private GetElementsInList<Vector2> GetElementsInList_UnityEngine_Vector2;

		[Token(Token = "0x40031B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private GetElementsInList<Vector3> GetElementsInList_UnityEngine_Vector3;

		[Token(Token = "0x40031B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private GetElementsInList<Vector4> GetElementsInList_UnityEngine_Vector4;

		[Token(Token = "0x40031B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private GetElementsInList<Quaternion> GetElementsInList_UnityEngine_Quaternion;

		[Token(Token = "0x40031B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private GetElementsInList<Keyframe> GetElementsInList_UnityEngine_Keyframe;

		[Token(Token = "0x40031B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private GetElementsInList<Bounds> GetElementsInList_UnityEngine_Bounds;

		[Token(Token = "0x40031B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private GetElementsInList<Color> GetElementsInList_UnityEngine_Color;

		[Token(Token = "0x40031B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GetElementsInList<Rect> GetElementsInList_UnityEngine_Rect;

		[Token(Token = "0x40031B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private GetElementsInList<ContactPoint> GetElementsInList_UnityEngine_ContactPoint;

		[Token(Token = "0x40031BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private GetElementsInList<ContactPoint2D> GetElementsInList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40031BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private GetElementsInList<RaycastHit> GetElementsInList_UnityEngine_RaycastHit;

		[Token(Token = "0x40031BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private GetElementsInList<RaycastHit2D> GetElementsInList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40031BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private GetElementsInList<Ray> GetElementsInList_UnityEngine_Ray;

		[Token(Token = "0x40031BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private GetElementsInList<Space> GetElementsInList_UnityEngine_Space;

		[Token(Token = "0x40031BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private GetElementsInList<SpawnPointInfo> GetElementsInList_SpawnPointInfo;

		[Token(Token = "0x40031C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private GetElementsInList<LayerMask> GetElementsInList_UnityEngine_LayerMask;

		[Token(Token = "0x40031C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private BinderConnection<bool> FlowCanvas_BinderConnection_System_Boolean;

		[Token(Token = "0x40031C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private BinderConnection<float> FlowCanvas_BinderConnection_System_Single;

		[Token(Token = "0x40031C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private BinderConnection<int> FlowCanvas_BinderConnection_System_Int32;

		[Token(Token = "0x40031C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private BinderConnection<Vector2> FlowCanvas_BinderConnection_UnityEngine_Vector2;

		[Token(Token = "0x40031C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private BinderConnection<Vector3> FlowCanvas_BinderConnection_UnityEngine_Vector3;

		[Token(Token = "0x40031C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private BinderConnection<Vector4> FlowCanvas_BinderConnection_UnityEngine_Vector4;

		[Token(Token = "0x40031C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private BinderConnection<Quaternion> FlowCanvas_BinderConnection_UnityEngine_Quaternion;

		[Token(Token = "0x40031C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private BinderConnection<Keyframe> FlowCanvas_BinderConnection_UnityEngine_Keyframe;

		[Token(Token = "0x40031C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private BinderConnection<Bounds> FlowCanvas_BinderConnection_UnityEngine_Bounds;

		[Token(Token = "0x40031CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private BinderConnection<Color> FlowCanvas_BinderConnection_UnityEngine_Color;

		[Token(Token = "0x40031CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private BinderConnection<Rect> FlowCanvas_BinderConnection_UnityEngine_Rect;

		[Token(Token = "0x40031CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private BinderConnection<ContactPoint> FlowCanvas_BinderConnection_UnityEngine_ContactPoint;

		[Token(Token = "0x40031CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private BinderConnection<ContactPoint2D> FlowCanvas_BinderConnection_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40031CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private BinderConnection<RaycastHit> FlowCanvas_BinderConnection_UnityEngine_RaycastHit;

		[Token(Token = "0x40031CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private BinderConnection<RaycastHit2D> FlowCanvas_BinderConnection_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40031D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private BinderConnection<Ray> FlowCanvas_BinderConnection_UnityEngine_Ray;

		[Token(Token = "0x40031D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private BinderConnection<Space> FlowCanvas_BinderConnection_UnityEngine_Space;

		[Token(Token = "0x40031D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private BinderConnection<SpawnPointInfo> FlowCanvas_BinderConnection_SpawnPointInfo;

		[Token(Token = "0x40031D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private BinderConnection<LayerMask> FlowCanvas_BinderConnection_UnityEngine_LayerMask;

		[Token(Token = "0x40031D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private ValueInput<bool> FlowCanvas_ValueInput_System_Boolean;

		[Token(Token = "0x40031D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private ValueInput<float> FlowCanvas_ValueInput_System_Single;

		[Token(Token = "0x40031D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private ValueInput<int> FlowCanvas_ValueInput_System_Int32;

		[Token(Token = "0x40031D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private ValueInput<Vector2> FlowCanvas_ValueInput_UnityEngine_Vector2;

		[Token(Token = "0x40031D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private ValueInput<Vector3> FlowCanvas_ValueInput_UnityEngine_Vector3;

		[Token(Token = "0x40031D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private ValueInput<Vector4> FlowCanvas_ValueInput_UnityEngine_Vector4;

		[Token(Token = "0x40031DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private ValueInput<Quaternion> FlowCanvas_ValueInput_UnityEngine_Quaternion;

		[Token(Token = "0x40031DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private ValueInput<Keyframe> FlowCanvas_ValueInput_UnityEngine_Keyframe;

		[Token(Token = "0x40031DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private ValueInput<Bounds> FlowCanvas_ValueInput_UnityEngine_Bounds;

		[Token(Token = "0x40031DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private ValueInput<Color> FlowCanvas_ValueInput_UnityEngine_Color;

		[Token(Token = "0x40031DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private ValueInput<Rect> FlowCanvas_ValueInput_UnityEngine_Rect;

		[Token(Token = "0x40031DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private ValueInput<ContactPoint> FlowCanvas_ValueInput_UnityEngine_ContactPoint;

		[Token(Token = "0x40031E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private ValueInput<ContactPoint2D> FlowCanvas_ValueInput_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40031E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private ValueInput<RaycastHit> FlowCanvas_ValueInput_UnityEngine_RaycastHit;

		[Token(Token = "0x40031E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private ValueInput<RaycastHit2D> FlowCanvas_ValueInput_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40031E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private ValueInput<Ray> FlowCanvas_ValueInput_UnityEngine_Ray;

		[Token(Token = "0x40031E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private ValueInput<Space> FlowCanvas_ValueInput_UnityEngine_Space;

		[Token(Token = "0x40031E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private ValueInput<SpawnPointInfo> FlowCanvas_ValueInput_SpawnPointInfo;

		[Token(Token = "0x40031E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private ValueInput<LayerMask> FlowCanvas_ValueInput_UnityEngine_LayerMask;

		[Token(Token = "0x40031E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private ValueOutput<bool> FlowCanvas_ValueOutput_System_Boolean;

		[Token(Token = "0x40031E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private ValueOutput<float> FlowCanvas_ValueOutput_System_Single;

		[Token(Token = "0x40031E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private ValueOutput<int> FlowCanvas_ValueOutput_System_Int32;

		[Token(Token = "0x40031EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private ValueOutput<Vector2> FlowCanvas_ValueOutput_UnityEngine_Vector2;

		[Token(Token = "0x40031EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private ValueOutput<Vector3> FlowCanvas_ValueOutput_UnityEngine_Vector3;

		[Token(Token = "0x40031EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private ValueOutput<Vector4> FlowCanvas_ValueOutput_UnityEngine_Vector4;

		[Token(Token = "0x40031ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private ValueOutput<Quaternion> FlowCanvas_ValueOutput_UnityEngine_Quaternion;

		[Token(Token = "0x40031EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private ValueOutput<Keyframe> FlowCanvas_ValueOutput_UnityEngine_Keyframe;

		[Token(Token = "0x40031EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private ValueOutput<Bounds> FlowCanvas_ValueOutput_UnityEngine_Bounds;

		[Token(Token = "0x40031F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private ValueOutput<Color> FlowCanvas_ValueOutput_UnityEngine_Color;

		[Token(Token = "0x40031F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private ValueOutput<Rect> FlowCanvas_ValueOutput_UnityEngine_Rect;

		[Token(Token = "0x40031F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private ValueOutput<ContactPoint> FlowCanvas_ValueOutput_UnityEngine_ContactPoint;

		[Token(Token = "0x40031F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private ValueOutput<ContactPoint2D> FlowCanvas_ValueOutput_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40031F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private ValueOutput<RaycastHit> FlowCanvas_ValueOutput_UnityEngine_RaycastHit;

		[Token(Token = "0x40031F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private ValueOutput<RaycastHit2D> FlowCanvas_ValueOutput_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40031F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private ValueOutput<Ray> FlowCanvas_ValueOutput_UnityEngine_Ray;

		[Token(Token = "0x40031F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private ValueOutput<Space> FlowCanvas_ValueOutput_UnityEngine_Space;

		[Token(Token = "0x40031F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private ValueOutput<SpawnPointInfo> FlowCanvas_ValueOutput_SpawnPointInfo;

		[Token(Token = "0x40031F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private ValueOutput<LayerMask> FlowCanvas_ValueOutput_UnityEngine_LayerMask;

		[Token(Token = "0x40031FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private AddDictionaryItem<bool> FlowCanvas_Nodes_AddDictionaryItem_System_Boolean;

		[Token(Token = "0x40031FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private AddDictionaryItem<float> FlowCanvas_Nodes_AddDictionaryItem_System_Single;

		[Token(Token = "0x40031FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private AddDictionaryItem<int> FlowCanvas_Nodes_AddDictionaryItem_System_Int32;

		[Token(Token = "0x40031FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private AddDictionaryItem<Vector2> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector2;

		[Token(Token = "0x40031FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private AddDictionaryItem<Vector3> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector3;

		[Token(Token = "0x40031FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private AddDictionaryItem<Vector4> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector4;

		[Token(Token = "0x4003200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private AddDictionaryItem<Quaternion> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Quaternion;

		[Token(Token = "0x4003201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private AddDictionaryItem<Keyframe> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Keyframe;

		[Token(Token = "0x4003202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private AddDictionaryItem<Bounds> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Bounds;

		[Token(Token = "0x4003203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private AddDictionaryItem<Color> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Color;

		[Token(Token = "0x4003204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private AddDictionaryItem<Rect> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Rect;

		[Token(Token = "0x4003205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private AddDictionaryItem<ContactPoint> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint;

		[Token(Token = "0x4003206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private AddDictionaryItem<ContactPoint2D> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private AddDictionaryItem<RaycastHit> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit;

		[Token(Token = "0x4003208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private AddDictionaryItem<RaycastHit2D> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		private AddDictionaryItem<Ray> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Ray;

		[Token(Token = "0x400320A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		private AddDictionaryItem<Space> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Space;

		[Token(Token = "0x400320B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		private AddDictionaryItem<SpawnPointInfo> FlowCanvas_Nodes_AddDictionaryItem_SpawnPointInfo;

		[Token(Token = "0x400320C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private AddDictionaryItem<LayerMask> FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_LayerMask;

		[Token(Token = "0x400320D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private AddListItem<bool> FlowCanvas_Nodes_AddListItem_System_Boolean;

		[Token(Token = "0x400320E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private AddListItem<float> FlowCanvas_Nodes_AddListItem_System_Single;

		[Token(Token = "0x400320F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private AddListItem<int> FlowCanvas_Nodes_AddListItem_System_Int32;

		[Token(Token = "0x4003210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		private AddListItem<Vector2> FlowCanvas_Nodes_AddListItem_UnityEngine_Vector2;

		[Token(Token = "0x4003211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private AddListItem<Vector3> FlowCanvas_Nodes_AddListItem_UnityEngine_Vector3;

		[Token(Token = "0x4003212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private AddListItem<Vector4> FlowCanvas_Nodes_AddListItem_UnityEngine_Vector4;

		[Token(Token = "0x4003213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private AddListItem<Quaternion> FlowCanvas_Nodes_AddListItem_UnityEngine_Quaternion;

		[Token(Token = "0x4003214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		private AddListItem<Keyframe> FlowCanvas_Nodes_AddListItem_UnityEngine_Keyframe;

		[Token(Token = "0x4003215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private AddListItem<Bounds> FlowCanvas_Nodes_AddListItem_UnityEngine_Bounds;

		[Token(Token = "0x4003216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private AddListItem<Color> FlowCanvas_Nodes_AddListItem_UnityEngine_Color;

		[Token(Token = "0x4003217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		private AddListItem<Rect> FlowCanvas_Nodes_AddListItem_UnityEngine_Rect;

		[Token(Token = "0x4003218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		private AddListItem<ContactPoint> FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x4003219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		private AddListItem<ContactPoint2D> FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400321A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		private AddListItem<RaycastHit> FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x400321B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		private AddListItem<RaycastHit2D> FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400321C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		private AddListItem<Ray> FlowCanvas_Nodes_AddListItem_UnityEngine_Ray;

		[Token(Token = "0x400321D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		private AddListItem<Space> FlowCanvas_Nodes_AddListItem_UnityEngine_Space;

		[Token(Token = "0x400321E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		private AddListItem<SpawnPointInfo> FlowCanvas_Nodes_AddListItem_SpawnPointInfo;

		[Token(Token = "0x400321F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		private AddListItem<LayerMask> FlowCanvas_Nodes_AddListItem_UnityEngine_LayerMask;

		[Token(Token = "0x4003220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		private Buffer<bool> FlowCanvas_Nodes_Buffer_System_Boolean;

		[Token(Token = "0x4003221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		private Buffer<float> FlowCanvas_Nodes_Buffer_System_Single;

		[Token(Token = "0x4003222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		private Buffer<int> FlowCanvas_Nodes_Buffer_System_Int32;

		[Token(Token = "0x4003223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private Buffer<Vector2> FlowCanvas_Nodes_Buffer_UnityEngine_Vector2;

		[Token(Token = "0x4003224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		private Buffer<Vector3> FlowCanvas_Nodes_Buffer_UnityEngine_Vector3;

		[Token(Token = "0x4003225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		private Buffer<Vector4> FlowCanvas_Nodes_Buffer_UnityEngine_Vector4;

		[Token(Token = "0x4003226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private Buffer<Quaternion> FlowCanvas_Nodes_Buffer_UnityEngine_Quaternion;

		[Token(Token = "0x4003227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
		private Buffer<Keyframe> FlowCanvas_Nodes_Buffer_UnityEngine_Keyframe;

		[Token(Token = "0x4003228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		private Buffer<Bounds> FlowCanvas_Nodes_Buffer_UnityEngine_Bounds;

		[Token(Token = "0x4003229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		private Buffer<Color> FlowCanvas_Nodes_Buffer_UnityEngine_Color;

		[Token(Token = "0x400322A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
		private Buffer<Rect> FlowCanvas_Nodes_Buffer_UnityEngine_Rect;

		[Token(Token = "0x400322B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
		private Buffer<ContactPoint> FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint;

		[Token(Token = "0x400322C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
		private Buffer<ContactPoint2D> FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400322D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
		private Buffer<RaycastHit> FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit;

		[Token(Token = "0x400322E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
		private Buffer<RaycastHit2D> FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400322F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
		private Buffer<Ray> FlowCanvas_Nodes_Buffer_UnityEngine_Ray;

		[Token(Token = "0x4003230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
		private Buffer<Space> FlowCanvas_Nodes_Buffer_UnityEngine_Space;

		[Token(Token = "0x4003231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		private Buffer<SpawnPointInfo> FlowCanvas_Nodes_Buffer_SpawnPointInfo;

		[Token(Token = "0x4003232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		private Buffer<LayerMask> FlowCanvas_Nodes_Buffer_UnityEngine_LayerMask;

		[Token(Token = "0x4003233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
		private Cache<bool> FlowCanvas_Nodes_Cache_System_Boolean;

		[Token(Token = "0x4003234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		private Cache<float> FlowCanvas_Nodes_Cache_System_Single;

		[Token(Token = "0x4003235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
		private Cache<int> FlowCanvas_Nodes_Cache_System_Int32;

		[Token(Token = "0x4003236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
		private Cache<Vector2> FlowCanvas_Nodes_Cache_UnityEngine_Vector2;

		[Token(Token = "0x4003237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
		private Cache<Vector3> FlowCanvas_Nodes_Cache_UnityEngine_Vector3;

		[Token(Token = "0x4003238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
		private Cache<Vector4> FlowCanvas_Nodes_Cache_UnityEngine_Vector4;

		[Token(Token = "0x4003239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
		private Cache<Quaternion> FlowCanvas_Nodes_Cache_UnityEngine_Quaternion;

		[Token(Token = "0x400323A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
		private Cache<Keyframe> FlowCanvas_Nodes_Cache_UnityEngine_Keyframe;

		[Token(Token = "0x400323B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		private Cache<Bounds> FlowCanvas_Nodes_Cache_UnityEngine_Bounds;

		[Token(Token = "0x400323C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
		private Cache<Color> FlowCanvas_Nodes_Cache_UnityEngine_Color;

		[Token(Token = "0x400323D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
		private Cache<Rect> FlowCanvas_Nodes_Cache_UnityEngine_Rect;

		[Token(Token = "0x400323E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
		private Cache<ContactPoint> FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint;

		[Token(Token = "0x400323F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
		private Cache<ContactPoint2D> FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
		private Cache<RaycastHit> FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit;

		[Token(Token = "0x4003241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
		private Cache<RaycastHit2D> FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
		private Cache<Ray> FlowCanvas_Nodes_Cache_UnityEngine_Ray;

		[Token(Token = "0x4003243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
		private Cache<Space> FlowCanvas_Nodes_Cache_UnityEngine_Space;

		[Token(Token = "0x4003244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
		private Cache<SpawnPointInfo> FlowCanvas_Nodes_Cache_SpawnPointInfo;

		[Token(Token = "0x4003245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
		private Cache<LayerMask> FlowCanvas_Nodes_Cache_UnityEngine_LayerMask;

		[Token(Token = "0x4003246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
		private Cast<bool> FlowCanvas_Nodes_Cast_System_Boolean;

		[Token(Token = "0x4003247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
		private Cast<float> FlowCanvas_Nodes_Cast_System_Single;

		[Token(Token = "0x4003248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
		private Cast<int> FlowCanvas_Nodes_Cast_System_Int32;

		[Token(Token = "0x4003249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
		private Cast<Vector2> FlowCanvas_Nodes_Cast_UnityEngine_Vector2;

		[Token(Token = "0x400324A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
		private Cast<Vector3> FlowCanvas_Nodes_Cast_UnityEngine_Vector3;

		[Token(Token = "0x400324B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
		private Cast<Vector4> FlowCanvas_Nodes_Cast_UnityEngine_Vector4;

		[Token(Token = "0x400324C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
		private Cast<Quaternion> FlowCanvas_Nodes_Cast_UnityEngine_Quaternion;

		[Token(Token = "0x400324D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
		private Cast<Keyframe> FlowCanvas_Nodes_Cast_UnityEngine_Keyframe;

		[Token(Token = "0x400324E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
		private Cast<Bounds> FlowCanvas_Nodes_Cast_UnityEngine_Bounds;

		[Token(Token = "0x400324F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
		private Cast<Color> FlowCanvas_Nodes_Cast_UnityEngine_Color;

		[Token(Token = "0x4003250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
		private Cast<Rect> FlowCanvas_Nodes_Cast_UnityEngine_Rect;

		[Token(Token = "0x4003251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
		private Cast<ContactPoint> FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint;

		[Token(Token = "0x4003252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
		private Cast<ContactPoint2D> FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
		private Cast<RaycastHit> FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit;

		[Token(Token = "0x4003254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
		private Cast<RaycastHit2D> FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
		private Cast<Ray> FlowCanvas_Nodes_Cast_UnityEngine_Ray;

		[Token(Token = "0x4003256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
		private Cast<Space> FlowCanvas_Nodes_Cast_UnityEngine_Space;

		[Token(Token = "0x4003257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
		private Cast<SpawnPointInfo> FlowCanvas_Nodes_Cast_SpawnPointInfo;

		[Token(Token = "0x4003258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
		private Cast<LayerMask> FlowCanvas_Nodes_Cast_UnityEngine_LayerMask;

		[Token(Token = "0x4003259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
		private CreateCollection<bool> FlowCanvas_Nodes_CreateCollection_System_Boolean;

		[Token(Token = "0x400325A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
		private CreateCollection<float> FlowCanvas_Nodes_CreateCollection_System_Single;

		[Token(Token = "0x400325B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
		private CreateCollection<int> FlowCanvas_Nodes_CreateCollection_System_Int32;

		[Token(Token = "0x400325C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
		private CreateCollection<Vector2> FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector2;

		[Token(Token = "0x400325D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
		private CreateCollection<Vector3> FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector3;

		[Token(Token = "0x400325E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
		private CreateCollection<Vector4> FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector4;

		[Token(Token = "0x400325F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
		private CreateCollection<Quaternion> FlowCanvas_Nodes_CreateCollection_UnityEngine_Quaternion;

		[Token(Token = "0x4003260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
		private CreateCollection<Keyframe> FlowCanvas_Nodes_CreateCollection_UnityEngine_Keyframe;

		[Token(Token = "0x4003261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
		private CreateCollection<Bounds> FlowCanvas_Nodes_CreateCollection_UnityEngine_Bounds;

		[Token(Token = "0x4003262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
		private CreateCollection<Color> FlowCanvas_Nodes_CreateCollection_UnityEngine_Color;

		[Token(Token = "0x4003263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
		private CreateCollection<Rect> FlowCanvas_Nodes_CreateCollection_UnityEngine_Rect;

		[Token(Token = "0x4003264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
		private CreateCollection<ContactPoint> FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint;

		[Token(Token = "0x4003265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		private CreateCollection<ContactPoint2D> FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
		private CreateCollection<RaycastHit> FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit;

		[Token(Token = "0x4003267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
		private CreateCollection<RaycastHit2D> FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
		private CreateCollection<Ray> FlowCanvas_Nodes_CreateCollection_UnityEngine_Ray;

		[Token(Token = "0x4003269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
		private CreateCollection<Space> FlowCanvas_Nodes_CreateCollection_UnityEngine_Space;

		[Token(Token = "0x400326A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
		private CreateCollection<SpawnPointInfo> FlowCanvas_Nodes_CreateCollection_SpawnPointInfo;

		[Token(Token = "0x400326B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
		private CreateCollection<LayerMask> FlowCanvas_Nodes_CreateCollection_UnityEngine_LayerMask;

		[Token(Token = "0x400326C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
		private CreateDictionary<bool> FlowCanvas_Nodes_CreateDictionary_System_Boolean;

		[Token(Token = "0x400326D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
		private CreateDictionary<float> FlowCanvas_Nodes_CreateDictionary_System_Single;

		[Token(Token = "0x400326E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
		private CreateDictionary<int> FlowCanvas_Nodes_CreateDictionary_System_Int32;

		[Token(Token = "0x400326F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
		private CreateDictionary<Vector2> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector2;

		[Token(Token = "0x4003270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
		private CreateDictionary<Vector3> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector3;

		[Token(Token = "0x4003271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
		private CreateDictionary<Vector4> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector4;

		[Token(Token = "0x4003272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
		private CreateDictionary<Quaternion> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Quaternion;

		[Token(Token = "0x4003273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
		private CreateDictionary<Keyframe> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Keyframe;

		[Token(Token = "0x4003274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
		private CreateDictionary<Bounds> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Bounds;

		[Token(Token = "0x4003275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
		private CreateDictionary<Color> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Color;

		[Token(Token = "0x4003276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
		private CreateDictionary<Rect> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Rect;

		[Token(Token = "0x4003277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
		private CreateDictionary<ContactPoint> FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint;

		[Token(Token = "0x4003278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
		private CreateDictionary<ContactPoint2D> FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
		private CreateDictionary<RaycastHit> FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit;

		[Token(Token = "0x400327A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
		private CreateDictionary<RaycastHit2D> FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400327B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
		private CreateDictionary<Ray> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Ray;

		[Token(Token = "0x400327C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
		private CreateDictionary<Space> FlowCanvas_Nodes_CreateDictionary_UnityEngine_Space;

		[Token(Token = "0x400327D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
		private CreateDictionary<SpawnPointInfo> FlowCanvas_Nodes_CreateDictionary_SpawnPointInfo;

		[Token(Token = "0x400327E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
		private CreateDictionary<LayerMask> FlowCanvas_Nodes_CreateDictionary_UnityEngine_LayerMask;

		[Token(Token = "0x400327F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
		private CustomEvent<bool> FlowCanvas_Nodes_CustomEvent_System_Boolean;

		[Token(Token = "0x4003280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
		private CustomEvent<float> FlowCanvas_Nodes_CustomEvent_System_Single;

		[Token(Token = "0x4003281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
		private CustomEvent<int> FlowCanvas_Nodes_CustomEvent_System_Int32;

		[Token(Token = "0x4003282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
		private CustomEvent<Vector2> FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector2;

		[Token(Token = "0x4003283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
		private CustomEvent<Vector3> FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector3;

		[Token(Token = "0x4003284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
		private CustomEvent<Vector4> FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector4;

		[Token(Token = "0x4003285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
		private CustomEvent<Quaternion> FlowCanvas_Nodes_CustomEvent_UnityEngine_Quaternion;

		[Token(Token = "0x4003286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
		private CustomEvent<Keyframe> FlowCanvas_Nodes_CustomEvent_UnityEngine_Keyframe;

		[Token(Token = "0x4003287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
		private CustomEvent<Bounds> FlowCanvas_Nodes_CustomEvent_UnityEngine_Bounds;

		[Token(Token = "0x4003288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
		private CustomEvent<Color> FlowCanvas_Nodes_CustomEvent_UnityEngine_Color;

		[Token(Token = "0x4003289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
		private CustomEvent<Rect> FlowCanvas_Nodes_CustomEvent_UnityEngine_Rect;

		[Token(Token = "0x400328A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
		private CustomEvent<ContactPoint> FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x400328B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
		private CustomEvent<ContactPoint2D> FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400328C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
		private CustomEvent<RaycastHit> FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x400328D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
		private CustomEvent<RaycastHit2D> FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400328E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
		private CustomEvent<Ray> FlowCanvas_Nodes_CustomEvent_UnityEngine_Ray;

		[Token(Token = "0x400328F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E8")]
		private CustomEvent<Space> FlowCanvas_Nodes_CustomEvent_UnityEngine_Space;

		[Token(Token = "0x4003290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F0")]
		private CustomEvent<SpawnPointInfo> FlowCanvas_Nodes_CustomEvent_SpawnPointInfo;

		[Token(Token = "0x4003291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F8")]
		private CustomEvent<LayerMask> FlowCanvas_Nodes_CustomEvent_UnityEngine_LayerMask;

		[Token(Token = "0x4003292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x900")]
		private DictionaryContainsKey<bool> FlowCanvas_Nodes_DictionaryContainsKey_System_Boolean;

		[Token(Token = "0x4003293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x908")]
		private DictionaryContainsKey<float> FlowCanvas_Nodes_DictionaryContainsKey_System_Single;

		[Token(Token = "0x4003294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x910")]
		private DictionaryContainsKey<int> FlowCanvas_Nodes_DictionaryContainsKey_System_Int32;

		[Token(Token = "0x4003295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x918")]
		private DictionaryContainsKey<Vector2> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector2;

		[Token(Token = "0x4003296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x920")]
		private DictionaryContainsKey<Vector3> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector3;

		[Token(Token = "0x4003297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x928")]
		private DictionaryContainsKey<Vector4> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector4;

		[Token(Token = "0x4003298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x930")]
		private DictionaryContainsKey<Quaternion> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Quaternion;

		[Token(Token = "0x4003299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x938")]
		private DictionaryContainsKey<Keyframe> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Keyframe;

		[Token(Token = "0x400329A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x940")]
		private DictionaryContainsKey<Bounds> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Bounds;

		[Token(Token = "0x400329B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x948")]
		private DictionaryContainsKey<Color> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Color;

		[Token(Token = "0x400329C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x950")]
		private DictionaryContainsKey<Rect> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Rect;

		[Token(Token = "0x400329D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
		private DictionaryContainsKey<ContactPoint> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint;

		[Token(Token = "0x400329E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
		private DictionaryContainsKey<ContactPoint2D> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400329F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
		private DictionaryContainsKey<RaycastHit> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit;

		[Token(Token = "0x40032A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
		private DictionaryContainsKey<RaycastHit2D> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40032A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
		private DictionaryContainsKey<Ray> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Ray;

		[Token(Token = "0x40032A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
		private DictionaryContainsKey<Space> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Space;

		[Token(Token = "0x40032A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
		private DictionaryContainsKey<SpawnPointInfo> FlowCanvas_Nodes_DictionaryContainsKey_SpawnPointInfo;

		[Token(Token = "0x40032A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
		private DictionaryContainsKey<LayerMask> FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_LayerMask;

		[Token(Token = "0x40032A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x998")]
		private ForEach<bool> FlowCanvas_Nodes_ForEach_System_Boolean;

		[Token(Token = "0x40032A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A0")]
		private ForEach<float> FlowCanvas_Nodes_ForEach_System_Single;

		[Token(Token = "0x40032A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A8")]
		private ForEach<int> FlowCanvas_Nodes_ForEach_System_Int32;

		[Token(Token = "0x40032A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B0")]
		private ForEach<Vector2> FlowCanvas_Nodes_ForEach_UnityEngine_Vector2;

		[Token(Token = "0x40032A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B8")]
		private ForEach<Vector3> FlowCanvas_Nodes_ForEach_UnityEngine_Vector3;

		[Token(Token = "0x40032AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C0")]
		private ForEach<Vector4> FlowCanvas_Nodes_ForEach_UnityEngine_Vector4;

		[Token(Token = "0x40032AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C8")]
		private ForEach<Quaternion> FlowCanvas_Nodes_ForEach_UnityEngine_Quaternion;

		[Token(Token = "0x40032AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D0")]
		private ForEach<Keyframe> FlowCanvas_Nodes_ForEach_UnityEngine_Keyframe;

		[Token(Token = "0x40032AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D8")]
		private ForEach<Bounds> FlowCanvas_Nodes_ForEach_UnityEngine_Bounds;

		[Token(Token = "0x40032AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E0")]
		private ForEach<Color> FlowCanvas_Nodes_ForEach_UnityEngine_Color;

		[Token(Token = "0x40032AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E8")]
		private ForEach<Rect> FlowCanvas_Nodes_ForEach_UnityEngine_Rect;

		[Token(Token = "0x40032B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F0")]
		private ForEach<ContactPoint> FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint;

		[Token(Token = "0x40032B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F8")]
		private ForEach<ContactPoint2D> FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40032B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA00")]
		private ForEach<RaycastHit> FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit;

		[Token(Token = "0x40032B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA08")]
		private ForEach<RaycastHit2D> FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40032B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA10")]
		private ForEach<Ray> FlowCanvas_Nodes_ForEach_UnityEngine_Ray;

		[Token(Token = "0x40032B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA18")]
		private ForEach<Space> FlowCanvas_Nodes_ForEach_UnityEngine_Space;

		[Token(Token = "0x40032B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA20")]
		private ForEach<SpawnPointInfo> FlowCanvas_Nodes_ForEach_SpawnPointInfo;

		[Token(Token = "0x40032B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA28")]
		private ForEach<LayerMask> FlowCanvas_Nodes_ForEach_UnityEngine_LayerMask;

		[Token(Token = "0x40032B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA30")]
		private GetDictionaryItem<bool> FlowCanvas_Nodes_GetDictionaryItem_System_Boolean;

		[Token(Token = "0x40032B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA38")]
		private GetDictionaryItem<float> FlowCanvas_Nodes_GetDictionaryItem_System_Single;

		[Token(Token = "0x40032BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA40")]
		private GetDictionaryItem<int> FlowCanvas_Nodes_GetDictionaryItem_System_Int32;

		[Token(Token = "0x40032BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA48")]
		private GetDictionaryItem<Vector2> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector2;

		[Token(Token = "0x40032BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA50")]
		private GetDictionaryItem<Vector3> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector3;

		[Token(Token = "0x40032BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA58")]
		private GetDictionaryItem<Vector4> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector4;

		[Token(Token = "0x40032BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA60")]
		private GetDictionaryItem<Quaternion> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Quaternion;

		[Token(Token = "0x40032BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA68")]
		private GetDictionaryItem<Keyframe> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Keyframe;

		[Token(Token = "0x40032C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA70")]
		private GetDictionaryItem<Bounds> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Bounds;

		[Token(Token = "0x40032C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA78")]
		private GetDictionaryItem<Color> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Color;

		[Token(Token = "0x40032C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA80")]
		private GetDictionaryItem<Rect> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Rect;

		[Token(Token = "0x40032C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA88")]
		private GetDictionaryItem<ContactPoint> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint;

		[Token(Token = "0x40032C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA90")]
		private GetDictionaryItem<ContactPoint2D> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40032C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA98")]
		private GetDictionaryItem<RaycastHit> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit;

		[Token(Token = "0x40032C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA0")]
		private GetDictionaryItem<RaycastHit2D> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40032C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA8")]
		private GetDictionaryItem<Ray> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Ray;

		[Token(Token = "0x40032C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB0")]
		private GetDictionaryItem<Space> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Space;

		[Token(Token = "0x40032C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB8")]
		private GetDictionaryItem<SpawnPointInfo> FlowCanvas_Nodes_GetDictionaryItem_SpawnPointInfo;

		[Token(Token = "0x40032CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC0")]
		private GetDictionaryItem<LayerMask> FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_LayerMask;

		[Token(Token = "0x40032CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC8")]
		private GetFirstListItem<bool> FlowCanvas_Nodes_GetFirstListItem_System_Boolean;

		[Token(Token = "0x40032CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD0")]
		private GetFirstListItem<float> FlowCanvas_Nodes_GetFirstListItem_System_Single;

		[Token(Token = "0x40032CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD8")]
		private GetFirstListItem<int> FlowCanvas_Nodes_GetFirstListItem_System_Int32;

		[Token(Token = "0x40032CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE0")]
		private GetFirstListItem<Vector2> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector2;

		[Token(Token = "0x40032CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE8")]
		private GetFirstListItem<Vector3> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector3;

		[Token(Token = "0x40032D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF0")]
		private GetFirstListItem<Vector4> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector4;

		[Token(Token = "0x40032D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF8")]
		private GetFirstListItem<Quaternion> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Quaternion;

		[Token(Token = "0x40032D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB00")]
		private GetFirstListItem<Keyframe> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Keyframe;

		[Token(Token = "0x40032D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB08")]
		private GetFirstListItem<Bounds> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Bounds;

		[Token(Token = "0x40032D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB10")]
		private GetFirstListItem<Color> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Color;

		[Token(Token = "0x40032D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB18")]
		private GetFirstListItem<Rect> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Rect;

		[Token(Token = "0x40032D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB20")]
		private GetFirstListItem<ContactPoint> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x40032D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB28")]
		private GetFirstListItem<ContactPoint2D> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40032D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB30")]
		private GetFirstListItem<RaycastHit> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x40032D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB38")]
		private GetFirstListItem<RaycastHit2D> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40032DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB40")]
		private GetFirstListItem<Ray> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Ray;

		[Token(Token = "0x40032DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB48")]
		private GetFirstListItem<Space> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Space;

		[Token(Token = "0x40032DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB50")]
		private GetFirstListItem<SpawnPointInfo> FlowCanvas_Nodes_GetFirstListItem_SpawnPointInfo;

		[Token(Token = "0x40032DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB58")]
		private GetFirstListItem<LayerMask> FlowCanvas_Nodes_GetFirstListItem_UnityEngine_LayerMask;

		[Token(Token = "0x40032DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB60")]
		private GetLastListItem<bool> FlowCanvas_Nodes_GetLastListItem_System_Boolean;

		[Token(Token = "0x40032DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB68")]
		private GetLastListItem<float> FlowCanvas_Nodes_GetLastListItem_System_Single;

		[Token(Token = "0x40032E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB70")]
		private GetLastListItem<int> FlowCanvas_Nodes_GetLastListItem_System_Int32;

		[Token(Token = "0x40032E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB78")]
		private GetLastListItem<Vector2> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector2;

		[Token(Token = "0x40032E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB80")]
		private GetLastListItem<Vector3> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector3;

		[Token(Token = "0x40032E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB88")]
		private GetLastListItem<Vector4> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector4;

		[Token(Token = "0x40032E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB90")]
		private GetLastListItem<Quaternion> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Quaternion;

		[Token(Token = "0x40032E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB98")]
		private GetLastListItem<Keyframe> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Keyframe;

		[Token(Token = "0x40032E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA0")]
		private GetLastListItem<Bounds> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Bounds;

		[Token(Token = "0x40032E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA8")]
		private GetLastListItem<Color> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Color;

		[Token(Token = "0x40032E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB0")]
		private GetLastListItem<Rect> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Rect;

		[Token(Token = "0x40032E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB8")]
		private GetLastListItem<ContactPoint> FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x40032EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC0")]
		private GetLastListItem<ContactPoint2D> FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40032EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC8")]
		private GetLastListItem<RaycastHit> FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x40032EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD0")]
		private GetLastListItem<RaycastHit2D> FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40032ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD8")]
		private GetLastListItem<Ray> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Ray;

		[Token(Token = "0x40032EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE0")]
		private GetLastListItem<Space> FlowCanvas_Nodes_GetLastListItem_UnityEngine_Space;

		[Token(Token = "0x40032EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE8")]
		private GetLastListItem<SpawnPointInfo> FlowCanvas_Nodes_GetLastListItem_SpawnPointInfo;

		[Token(Token = "0x40032F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF0")]
		private GetLastListItem<LayerMask> FlowCanvas_Nodes_GetLastListItem_UnityEngine_LayerMask;

		[Token(Token = "0x40032F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF8")]
		private GetListItem<bool> FlowCanvas_Nodes_GetListItem_System_Boolean;

		[Token(Token = "0x40032F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC00")]
		private GetListItem<float> FlowCanvas_Nodes_GetListItem_System_Single;

		[Token(Token = "0x40032F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC08")]
		private GetListItem<int> FlowCanvas_Nodes_GetListItem_System_Int32;

		[Token(Token = "0x40032F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC10")]
		private GetListItem<Vector2> FlowCanvas_Nodes_GetListItem_UnityEngine_Vector2;

		[Token(Token = "0x40032F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC18")]
		private GetListItem<Vector3> FlowCanvas_Nodes_GetListItem_UnityEngine_Vector3;

		[Token(Token = "0x40032F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC20")]
		private GetListItem<Vector4> FlowCanvas_Nodes_GetListItem_UnityEngine_Vector4;

		[Token(Token = "0x40032F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC28")]
		private GetListItem<Quaternion> FlowCanvas_Nodes_GetListItem_UnityEngine_Quaternion;

		[Token(Token = "0x40032F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC30")]
		private GetListItem<Keyframe> FlowCanvas_Nodes_GetListItem_UnityEngine_Keyframe;

		[Token(Token = "0x40032F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC38")]
		private GetListItem<Bounds> FlowCanvas_Nodes_GetListItem_UnityEngine_Bounds;

		[Token(Token = "0x40032FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC40")]
		private GetListItem<Color> FlowCanvas_Nodes_GetListItem_UnityEngine_Color;

		[Token(Token = "0x40032FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC48")]
		private GetListItem<Rect> FlowCanvas_Nodes_GetListItem_UnityEngine_Rect;

		[Token(Token = "0x40032FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC50")]
		private GetListItem<ContactPoint> FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x40032FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC58")]
		private GetListItem<ContactPoint2D> FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40032FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC60")]
		private GetListItem<RaycastHit> FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x40032FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC68")]
		private GetListItem<RaycastHit2D> FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC70")]
		private GetListItem<Ray> FlowCanvas_Nodes_GetListItem_UnityEngine_Ray;

		[Token(Token = "0x4003301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC78")]
		private GetListItem<Space> FlowCanvas_Nodes_GetListItem_UnityEngine_Space;

		[Token(Token = "0x4003302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC80")]
		private GetListItem<SpawnPointInfo> FlowCanvas_Nodes_GetListItem_SpawnPointInfo;

		[Token(Token = "0x4003303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC88")]
		private GetListItem<LayerMask> FlowCanvas_Nodes_GetListItem_UnityEngine_LayerMask;

		[Token(Token = "0x4003304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC90")]
		private GetOtherVariable<bool> FlowCanvas_Nodes_GetOtherVariable_System_Boolean;

		[Token(Token = "0x4003305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC98")]
		private GetOtherVariable<float> FlowCanvas_Nodes_GetOtherVariable_System_Single;

		[Token(Token = "0x4003306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA0")]
		private GetOtherVariable<int> FlowCanvas_Nodes_GetOtherVariable_System_Int32;

		[Token(Token = "0x4003307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA8")]
		private GetOtherVariable<Vector2> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector2;

		[Token(Token = "0x4003308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB0")]
		private GetOtherVariable<Vector3> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector3;

		[Token(Token = "0x4003309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB8")]
		private GetOtherVariable<Vector4> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector4;

		[Token(Token = "0x400330A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC0")]
		private GetOtherVariable<Quaternion> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Quaternion;

		[Token(Token = "0x400330B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC8")]
		private GetOtherVariable<Keyframe> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Keyframe;

		[Token(Token = "0x400330C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD0")]
		private GetOtherVariable<Bounds> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Bounds;

		[Token(Token = "0x400330D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD8")]
		private GetOtherVariable<Color> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Color;

		[Token(Token = "0x400330E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE0")]
		private GetOtherVariable<Rect> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Rect;

		[Token(Token = "0x400330F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE8")]
		private GetOtherVariable<ContactPoint> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x4003310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF0")]
		private GetOtherVariable<ContactPoint2D> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF8")]
		private GetOtherVariable<RaycastHit> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x4003312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD00")]
		private GetOtherVariable<RaycastHit2D> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD08")]
		private GetOtherVariable<Ray> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Ray;

		[Token(Token = "0x4003314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD10")]
		private GetOtherVariable<Space> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Space;

		[Token(Token = "0x4003315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD18")]
		private GetOtherVariable<SpawnPointInfo> FlowCanvas_Nodes_GetOtherVariable_SpawnPointInfo;

		[Token(Token = "0x4003316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD20")]
		private GetOtherVariable<LayerMask> FlowCanvas_Nodes_GetOtherVariable_UnityEngine_LayerMask;

		[Token(Token = "0x4003317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD28")]
		private GetRandomListItem<bool> FlowCanvas_Nodes_GetRandomListItem_System_Boolean;

		[Token(Token = "0x4003318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD30")]
		private GetRandomListItem<float> FlowCanvas_Nodes_GetRandomListItem_System_Single;

		[Token(Token = "0x4003319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD38")]
		private GetRandomListItem<int> FlowCanvas_Nodes_GetRandomListItem_System_Int32;

		[Token(Token = "0x400331A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD40")]
		private GetRandomListItem<Vector2> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector2;

		[Token(Token = "0x400331B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD48")]
		private GetRandomListItem<Vector3> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector3;

		[Token(Token = "0x400331C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50")]
		private GetRandomListItem<Vector4> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector4;

		[Token(Token = "0x400331D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD58")]
		private GetRandomListItem<Quaternion> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Quaternion;

		[Token(Token = "0x400331E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD60")]
		private GetRandomListItem<Keyframe> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Keyframe;

		[Token(Token = "0x400331F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD68")]
		private GetRandomListItem<Bounds> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Bounds;

		[Token(Token = "0x4003320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD70")]
		private GetRandomListItem<Color> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Color;

		[Token(Token = "0x4003321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD78")]
		private GetRandomListItem<Rect> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Rect;

		[Token(Token = "0x4003322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD80")]
		private GetRandomListItem<ContactPoint> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x4003323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD88")]
		private GetRandomListItem<ContactPoint2D> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD90")]
		private GetRandomListItem<RaycastHit> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x4003325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD98")]
		private GetRandomListItem<RaycastHit2D> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA0")]
		private GetRandomListItem<Ray> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Ray;

		[Token(Token = "0x4003327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA8")]
		private GetRandomListItem<Space> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Space;

		[Token(Token = "0x4003328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB0")]
		private GetRandomListItem<SpawnPointInfo> FlowCanvas_Nodes_GetRandomListItem_SpawnPointInfo;

		[Token(Token = "0x4003329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB8")]
		private GetRandomListItem<LayerMask> FlowCanvas_Nodes_GetRandomListItem_UnityEngine_LayerMask;

		[Token(Token = "0x400332A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC0")]
		private GetVariable<bool> FlowCanvas_Nodes_GetVariable_System_Boolean;

		[Token(Token = "0x400332B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC8")]
		private GetVariable<float> FlowCanvas_Nodes_GetVariable_System_Single;

		[Token(Token = "0x400332C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD0")]
		private GetVariable<int> FlowCanvas_Nodes_GetVariable_System_Int32;

		[Token(Token = "0x400332D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD8")]
		private GetVariable<Vector2> FlowCanvas_Nodes_GetVariable_UnityEngine_Vector2;

		[Token(Token = "0x400332E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE0")]
		private GetVariable<Vector3> FlowCanvas_Nodes_GetVariable_UnityEngine_Vector3;

		[Token(Token = "0x400332F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE8")]
		private GetVariable<Vector4> FlowCanvas_Nodes_GetVariable_UnityEngine_Vector4;

		[Token(Token = "0x4003330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF0")]
		private GetVariable<Quaternion> FlowCanvas_Nodes_GetVariable_UnityEngine_Quaternion;

		[Token(Token = "0x4003331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF8")]
		private GetVariable<Keyframe> FlowCanvas_Nodes_GetVariable_UnityEngine_Keyframe;

		[Token(Token = "0x4003332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE00")]
		private GetVariable<Bounds> FlowCanvas_Nodes_GetVariable_UnityEngine_Bounds;

		[Token(Token = "0x4003333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE08")]
		private GetVariable<Color> FlowCanvas_Nodes_GetVariable_UnityEngine_Color;

		[Token(Token = "0x4003334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE10")]
		private GetVariable<Rect> FlowCanvas_Nodes_GetVariable_UnityEngine_Rect;

		[Token(Token = "0x4003335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE18")]
		private GetVariable<ContactPoint> FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x4003336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE20")]
		private GetVariable<ContactPoint2D> FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE28")]
		private GetVariable<RaycastHit> FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x4003338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE30")]
		private GetVariable<RaycastHit2D> FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE38")]
		private GetVariable<Ray> FlowCanvas_Nodes_GetVariable_UnityEngine_Ray;

		[Token(Token = "0x400333A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE40")]
		private GetVariable<Space> FlowCanvas_Nodes_GetVariable_UnityEngine_Space;

		[Token(Token = "0x400333B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE48")]
		private GetVariable<SpawnPointInfo> FlowCanvas_Nodes_GetVariable_SpawnPointInfo;

		[Token(Token = "0x400333C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE50")]
		private GetVariable<LayerMask> FlowCanvas_Nodes_GetVariable_UnityEngine_LayerMask;

		[Token(Token = "0x400333D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE58")]
		private Identity<bool> FlowCanvas_Nodes_Identity_System_Boolean;

		[Token(Token = "0x400333E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE60")]
		private Identity<float> FlowCanvas_Nodes_Identity_System_Single;

		[Token(Token = "0x400333F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE68")]
		private Identity<int> FlowCanvas_Nodes_Identity_System_Int32;

		[Token(Token = "0x4003340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE70")]
		private Identity<Vector2> FlowCanvas_Nodes_Identity_UnityEngine_Vector2;

		[Token(Token = "0x4003341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE78")]
		private Identity<Vector3> FlowCanvas_Nodes_Identity_UnityEngine_Vector3;

		[Token(Token = "0x4003342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE80")]
		private Identity<Vector4> FlowCanvas_Nodes_Identity_UnityEngine_Vector4;

		[Token(Token = "0x4003343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE88")]
		private Identity<Quaternion> FlowCanvas_Nodes_Identity_UnityEngine_Quaternion;

		[Token(Token = "0x4003344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE90")]
		private Identity<Keyframe> FlowCanvas_Nodes_Identity_UnityEngine_Keyframe;

		[Token(Token = "0x4003345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE98")]
		private Identity<Bounds> FlowCanvas_Nodes_Identity_UnityEngine_Bounds;

		[Token(Token = "0x4003346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA0")]
		private Identity<Color> FlowCanvas_Nodes_Identity_UnityEngine_Color;

		[Token(Token = "0x4003347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA8")]
		private Identity<Rect> FlowCanvas_Nodes_Identity_UnityEngine_Rect;

		[Token(Token = "0x4003348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB0")]
		private Identity<ContactPoint> FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint;

		[Token(Token = "0x4003349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB8")]
		private Identity<ContactPoint2D> FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400334A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC0")]
		private Identity<RaycastHit> FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit;

		[Token(Token = "0x400334B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC8")]
		private Identity<RaycastHit2D> FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400334C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED0")]
		private Identity<Ray> FlowCanvas_Nodes_Identity_UnityEngine_Ray;

		[Token(Token = "0x400334D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED8")]
		private Identity<Space> FlowCanvas_Nodes_Identity_UnityEngine_Space;

		[Token(Token = "0x400334E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE0")]
		private Identity<SpawnPointInfo> FlowCanvas_Nodes_Identity_SpawnPointInfo;

		[Token(Token = "0x400334F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE8")]
		private Identity<LayerMask> FlowCanvas_Nodes_Identity_UnityEngine_LayerMask;

		[Token(Token = "0x4003350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF0")]
		private InsertListItem<bool> FlowCanvas_Nodes_InsertListItem_System_Boolean;

		[Token(Token = "0x4003351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF8")]
		private InsertListItem<float> FlowCanvas_Nodes_InsertListItem_System_Single;

		[Token(Token = "0x4003352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF00")]
		private InsertListItem<int> FlowCanvas_Nodes_InsertListItem_System_Int32;

		[Token(Token = "0x4003353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF08")]
		private InsertListItem<Vector2> FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector2;

		[Token(Token = "0x4003354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF10")]
		private InsertListItem<Vector3> FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector3;

		[Token(Token = "0x4003355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF18")]
		private InsertListItem<Vector4> FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector4;

		[Token(Token = "0x4003356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF20")]
		private InsertListItem<Quaternion> FlowCanvas_Nodes_InsertListItem_UnityEngine_Quaternion;

		[Token(Token = "0x4003357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF28")]
		private InsertListItem<Keyframe> FlowCanvas_Nodes_InsertListItem_UnityEngine_Keyframe;

		[Token(Token = "0x4003358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF30")]
		private InsertListItem<Bounds> FlowCanvas_Nodes_InsertListItem_UnityEngine_Bounds;

		[Token(Token = "0x4003359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF38")]
		private InsertListItem<Color> FlowCanvas_Nodes_InsertListItem_UnityEngine_Color;

		[Token(Token = "0x400335A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF40")]
		private InsertListItem<Rect> FlowCanvas_Nodes_InsertListItem_UnityEngine_Rect;

		[Token(Token = "0x400335B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF48")]
		private InsertListItem<ContactPoint> FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x400335C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF50")]
		private InsertListItem<ContactPoint2D> FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400335D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF58")]
		private InsertListItem<RaycastHit> FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x400335E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF60")]
		private InsertListItem<RaycastHit2D> FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400335F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF68")]
		private InsertListItem<Ray> FlowCanvas_Nodes_InsertListItem_UnityEngine_Ray;

		[Token(Token = "0x4003360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF70")]
		private InsertListItem<Space> FlowCanvas_Nodes_InsertListItem_UnityEngine_Space;

		[Token(Token = "0x4003361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF78")]
		private InsertListItem<SpawnPointInfo> FlowCanvas_Nodes_InsertListItem_SpawnPointInfo;

		[Token(Token = "0x4003362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF80")]
		private InsertListItem<LayerMask> FlowCanvas_Nodes_InsertListItem_UnityEngine_LayerMask;

		[Token(Token = "0x4003363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF88")]
		private ReadFlowParameter<bool> FlowCanvas_Nodes_ReadFlowParameter_System_Boolean;

		[Token(Token = "0x4003364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF90")]
		private ReadFlowParameter<float> FlowCanvas_Nodes_ReadFlowParameter_System_Single;

		[Token(Token = "0x4003365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF98")]
		private ReadFlowParameter<int> FlowCanvas_Nodes_ReadFlowParameter_System_Int32;

		[Token(Token = "0x4003366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA0")]
		private ReadFlowParameter<Vector2> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector2;

		[Token(Token = "0x4003367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA8")]
		private ReadFlowParameter<Vector3> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector3;

		[Token(Token = "0x4003368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB0")]
		private ReadFlowParameter<Vector4> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector4;

		[Token(Token = "0x4003369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB8")]
		private ReadFlowParameter<Quaternion> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Quaternion;

		[Token(Token = "0x400336A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC0")]
		private ReadFlowParameter<Keyframe> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Keyframe;

		[Token(Token = "0x400336B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC8")]
		private ReadFlowParameter<Bounds> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Bounds;

		[Token(Token = "0x400336C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD0")]
		private ReadFlowParameter<Color> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Color;

		[Token(Token = "0x400336D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD8")]
		private ReadFlowParameter<Rect> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Rect;

		[Token(Token = "0x400336E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE0")]
		private ReadFlowParameter<ContactPoint> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint;

		[Token(Token = "0x400336F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE8")]
		private ReadFlowParameter<ContactPoint2D> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF0")]
		private ReadFlowParameter<RaycastHit> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit;

		[Token(Token = "0x4003371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF8")]
		private ReadFlowParameter<RaycastHit2D> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1000")]
		private ReadFlowParameter<Ray> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Ray;

		[Token(Token = "0x4003373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1008")]
		private ReadFlowParameter<Space> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Space;

		[Token(Token = "0x4003374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1010")]
		private ReadFlowParameter<SpawnPointInfo> FlowCanvas_Nodes_ReadFlowParameter_SpawnPointInfo;

		[Token(Token = "0x4003375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1018")]
		private ReadFlowParameter<LayerMask> FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_LayerMask;

		[Token(Token = "0x4003376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1020")]
		private ReflectedExtractorNodeWrapper<bool> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Boolean;

		[Token(Token = "0x4003377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1028")]
		private ReflectedExtractorNodeWrapper<float> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Single;

		[Token(Token = "0x4003378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1030")]
		private ReflectedExtractorNodeWrapper<int> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Int32;

		[Token(Token = "0x4003379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1038")]
		private ReflectedExtractorNodeWrapper<Vector2> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector2;

		[Token(Token = "0x400337A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1040")]
		private ReflectedExtractorNodeWrapper<Vector3> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector3;

		[Token(Token = "0x400337B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1048")]
		private ReflectedExtractorNodeWrapper<Vector4> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector4;

		[Token(Token = "0x400337C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1050")]
		private ReflectedExtractorNodeWrapper<Quaternion> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Quaternion;

		[Token(Token = "0x400337D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1058")]
		private ReflectedExtractorNodeWrapper<Keyframe> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Keyframe;

		[Token(Token = "0x400337E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1060")]
		private ReflectedExtractorNodeWrapper<Bounds> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Bounds;

		[Token(Token = "0x400337F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1068")]
		private ReflectedExtractorNodeWrapper<Color> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Color;

		[Token(Token = "0x4003380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1070")]
		private ReflectedExtractorNodeWrapper<Rect> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Rect;

		[Token(Token = "0x4003381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1078")]
		private ReflectedExtractorNodeWrapper<ContactPoint> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint;

		[Token(Token = "0x4003382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1080")]
		private ReflectedExtractorNodeWrapper<ContactPoint2D> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1088")]
		private ReflectedExtractorNodeWrapper<RaycastHit> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit;

		[Token(Token = "0x4003384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1090")]
		private ReflectedExtractorNodeWrapper<RaycastHit2D> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1098")]
		private ReflectedExtractorNodeWrapper<Ray> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Ray;

		[Token(Token = "0x4003386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A0")]
		private ReflectedExtractorNodeWrapper<Space> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Space;

		[Token(Token = "0x4003387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A8")]
		private ReflectedExtractorNodeWrapper<SpawnPointInfo> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_SpawnPointInfo;

		[Token(Token = "0x4003388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B0")]
		private ReflectedExtractorNodeWrapper<LayerMask> FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_LayerMask;

		[Token(Token = "0x4003389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B8")]
		private RelayValueInput<bool> FlowCanvas_Nodes_RelayValueInput_System_Boolean;

		[Token(Token = "0x400338A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C0")]
		private RelayValueInput<float> FlowCanvas_Nodes_RelayValueInput_System_Single;

		[Token(Token = "0x400338B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C8")]
		private RelayValueInput<int> FlowCanvas_Nodes_RelayValueInput_System_Int32;

		[Token(Token = "0x400338C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D0")]
		private RelayValueInput<Vector2> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector2;

		[Token(Token = "0x400338D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D8")]
		private RelayValueInput<Vector3> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector3;

		[Token(Token = "0x400338E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E0")]
		private RelayValueInput<Vector4> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector4;

		[Token(Token = "0x400338F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E8")]
		private RelayValueInput<Quaternion> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Quaternion;

		[Token(Token = "0x4003390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F0")]
		private RelayValueInput<Keyframe> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Keyframe;

		[Token(Token = "0x4003391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F8")]
		private RelayValueInput<Bounds> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Bounds;

		[Token(Token = "0x4003392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1100")]
		private RelayValueInput<Color> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Color;

		[Token(Token = "0x4003393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1108")]
		private RelayValueInput<Rect> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Rect;

		[Token(Token = "0x4003394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1110")]
		private RelayValueInput<ContactPoint> FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint;

		[Token(Token = "0x4003395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1118")]
		private RelayValueInput<ContactPoint2D> FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1120")]
		private RelayValueInput<RaycastHit> FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit;

		[Token(Token = "0x4003397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1128")]
		private RelayValueInput<RaycastHit2D> FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1130")]
		private RelayValueInput<Ray> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Ray;

		[Token(Token = "0x4003399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1138")]
		private RelayValueInput<Space> FlowCanvas_Nodes_RelayValueInput_UnityEngine_Space;

		[Token(Token = "0x400339A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1140")]
		private RelayValueInput<SpawnPointInfo> FlowCanvas_Nodes_RelayValueInput_SpawnPointInfo;

		[Token(Token = "0x400339B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1148")]
		private RelayValueInput<LayerMask> FlowCanvas_Nodes_RelayValueInput_UnityEngine_LayerMask;

		[Token(Token = "0x400339C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1150")]
		private RelayValueOutput<bool> FlowCanvas_Nodes_RelayValueOutput_System_Boolean;

		[Token(Token = "0x400339D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1158")]
		private RelayValueOutput<float> FlowCanvas_Nodes_RelayValueOutput_System_Single;

		[Token(Token = "0x400339E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1160")]
		private RelayValueOutput<int> FlowCanvas_Nodes_RelayValueOutput_System_Int32;

		[Token(Token = "0x400339F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1168")]
		private RelayValueOutput<Vector2> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector2;

		[Token(Token = "0x40033A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1170")]
		private RelayValueOutput<Vector3> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector3;

		[Token(Token = "0x40033A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1178")]
		private RelayValueOutput<Vector4> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector4;

		[Token(Token = "0x40033A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1180")]
		private RelayValueOutput<Quaternion> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Quaternion;

		[Token(Token = "0x40033A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1188")]
		private RelayValueOutput<Keyframe> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Keyframe;

		[Token(Token = "0x40033A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1190")]
		private RelayValueOutput<Bounds> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Bounds;

		[Token(Token = "0x40033A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1198")]
		private RelayValueOutput<Color> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Color;

		[Token(Token = "0x40033A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A0")]
		private RelayValueOutput<Rect> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Rect;

		[Token(Token = "0x40033A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A8")]
		private RelayValueOutput<ContactPoint> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint;

		[Token(Token = "0x40033A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B0")]
		private RelayValueOutput<ContactPoint2D> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40033A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B8")]
		private RelayValueOutput<RaycastHit> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit;

		[Token(Token = "0x40033AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C0")]
		private RelayValueOutput<RaycastHit2D> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40033AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C8")]
		private RelayValueOutput<Ray> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Ray;

		[Token(Token = "0x40033AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D0")]
		private RelayValueOutput<Space> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Space;

		[Token(Token = "0x40033AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D8")]
		private RelayValueOutput<SpawnPointInfo> FlowCanvas_Nodes_RelayValueOutput_SpawnPointInfo;

		[Token(Token = "0x40033AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E0")]
		private RelayValueOutput<LayerMask> FlowCanvas_Nodes_RelayValueOutput_UnityEngine_LayerMask;

		[Token(Token = "0x40033AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E8")]
		private RemoveDictionaryKey<bool> FlowCanvas_Nodes_RemoveDictionaryKey_System_Boolean;

		[Token(Token = "0x40033B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F0")]
		private RemoveDictionaryKey<float> FlowCanvas_Nodes_RemoveDictionaryKey_System_Single;

		[Token(Token = "0x40033B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F8")]
		private RemoveDictionaryKey<int> FlowCanvas_Nodes_RemoveDictionaryKey_System_Int32;

		[Token(Token = "0x40033B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1200")]
		private RemoveDictionaryKey<Vector2> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector2;

		[Token(Token = "0x40033B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1208")]
		private RemoveDictionaryKey<Vector3> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector3;

		[Token(Token = "0x40033B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1210")]
		private RemoveDictionaryKey<Vector4> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector4;

		[Token(Token = "0x40033B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1218")]
		private RemoveDictionaryKey<Quaternion> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Quaternion;

		[Token(Token = "0x40033B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1220")]
		private RemoveDictionaryKey<Keyframe> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Keyframe;

		[Token(Token = "0x40033B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1228")]
		private RemoveDictionaryKey<Bounds> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Bounds;

		[Token(Token = "0x40033B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1230")]
		private RemoveDictionaryKey<Color> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Color;

		[Token(Token = "0x40033B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1238")]
		private RemoveDictionaryKey<Rect> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Rect;

		[Token(Token = "0x40033BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1240")]
		private RemoveDictionaryKey<ContactPoint> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint;

		[Token(Token = "0x40033BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1248")]
		private RemoveDictionaryKey<ContactPoint2D> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40033BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1250")]
		private RemoveDictionaryKey<RaycastHit> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit;

		[Token(Token = "0x40033BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1258")]
		private RemoveDictionaryKey<RaycastHit2D> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40033BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1260")]
		private RemoveDictionaryKey<Ray> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Ray;

		[Token(Token = "0x40033BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1268")]
		private RemoveDictionaryKey<Space> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Space;

		[Token(Token = "0x40033C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1270")]
		private RemoveDictionaryKey<SpawnPointInfo> FlowCanvas_Nodes_RemoveDictionaryKey_SpawnPointInfo;

		[Token(Token = "0x40033C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1278")]
		private RemoveDictionaryKey<LayerMask> FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_LayerMask;

		[Token(Token = "0x40033C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1280")]
		private RemoveListItem<bool> FlowCanvas_Nodes_RemoveListItem_System_Boolean;

		[Token(Token = "0x40033C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1288")]
		private RemoveListItem<float> FlowCanvas_Nodes_RemoveListItem_System_Single;

		[Token(Token = "0x40033C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1290")]
		private RemoveListItem<int> FlowCanvas_Nodes_RemoveListItem_System_Int32;

		[Token(Token = "0x40033C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1298")]
		private RemoveListItem<Vector2> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector2;

		[Token(Token = "0x40033C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A0")]
		private RemoveListItem<Vector3> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector3;

		[Token(Token = "0x40033C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A8")]
		private RemoveListItem<Vector4> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector4;

		[Token(Token = "0x40033C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B0")]
		private RemoveListItem<Quaternion> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Quaternion;

		[Token(Token = "0x40033C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B8")]
		private RemoveListItem<Keyframe> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Keyframe;

		[Token(Token = "0x40033CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C0")]
		private RemoveListItem<Bounds> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Bounds;

		[Token(Token = "0x40033CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C8")]
		private RemoveListItem<Color> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Color;

		[Token(Token = "0x40033CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D0")]
		private RemoveListItem<Rect> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Rect;

		[Token(Token = "0x40033CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D8")]
		private RemoveListItem<ContactPoint> FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x40033CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E0")]
		private RemoveListItem<ContactPoint2D> FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40033CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E8")]
		private RemoveListItem<RaycastHit> FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x40033D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F0")]
		private RemoveListItem<RaycastHit2D> FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40033D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F8")]
		private RemoveListItem<Ray> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Ray;

		[Token(Token = "0x40033D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1300")]
		private RemoveListItem<Space> FlowCanvas_Nodes_RemoveListItem_UnityEngine_Space;

		[Token(Token = "0x40033D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1308")]
		private RemoveListItem<SpawnPointInfo> FlowCanvas_Nodes_RemoveListItem_SpawnPointInfo;

		[Token(Token = "0x40033D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1310")]
		private RemoveListItem<LayerMask> FlowCanvas_Nodes_RemoveListItem_UnityEngine_LayerMask;

		[Token(Token = "0x40033D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1318")]
		private RemoveListItemAt<bool> FlowCanvas_Nodes_RemoveListItemAt_System_Boolean;

		[Token(Token = "0x40033D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1320")]
		private RemoveListItemAt<float> FlowCanvas_Nodes_RemoveListItemAt_System_Single;

		[Token(Token = "0x40033D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1328")]
		private RemoveListItemAt<int> FlowCanvas_Nodes_RemoveListItemAt_System_Int32;

		[Token(Token = "0x40033D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1330")]
		private RemoveListItemAt<Vector2> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector2;

		[Token(Token = "0x40033D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1338")]
		private RemoveListItemAt<Vector3> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector3;

		[Token(Token = "0x40033DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1340")]
		private RemoveListItemAt<Vector4> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector4;

		[Token(Token = "0x40033DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1348")]
		private RemoveListItemAt<Quaternion> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Quaternion;

		[Token(Token = "0x40033DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1350")]
		private RemoveListItemAt<Keyframe> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Keyframe;

		[Token(Token = "0x40033DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1358")]
		private RemoveListItemAt<Bounds> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Bounds;

		[Token(Token = "0x40033DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1360")]
		private RemoveListItemAt<Color> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Color;

		[Token(Token = "0x40033DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1368")]
		private RemoveListItemAt<Rect> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Rect;

		[Token(Token = "0x40033E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1370")]
		private RemoveListItemAt<ContactPoint> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint;

		[Token(Token = "0x40033E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1378")]
		private RemoveListItemAt<ContactPoint2D> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40033E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1380")]
		private RemoveListItemAt<RaycastHit> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit;

		[Token(Token = "0x40033E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1388")]
		private RemoveListItemAt<RaycastHit2D> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40033E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1390")]
		private RemoveListItemAt<Ray> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Ray;

		[Token(Token = "0x40033E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1398")]
		private RemoveListItemAt<Space> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Space;

		[Token(Token = "0x40033E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A0")]
		private RemoveListItemAt<SpawnPointInfo> FlowCanvas_Nodes_RemoveListItemAt_SpawnPointInfo;

		[Token(Token = "0x40033E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A8")]
		private RemoveListItemAt<LayerMask> FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_LayerMask;

		[Token(Token = "0x40033E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B0")]
		private SelectOnBool<bool> FlowCanvas_Nodes_SelectOnBool_System_Boolean;

		[Token(Token = "0x40033E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B8")]
		private SelectOnBool<float> FlowCanvas_Nodes_SelectOnBool_System_Single;

		[Token(Token = "0x40033EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C0")]
		private SelectOnBool<int> FlowCanvas_Nodes_SelectOnBool_System_Int32;

		[Token(Token = "0x40033EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C8")]
		private SelectOnBool<Vector2> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector2;

		[Token(Token = "0x40033EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D0")]
		private SelectOnBool<Vector3> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector3;

		[Token(Token = "0x40033ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D8")]
		private SelectOnBool<Vector4> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector4;

		[Token(Token = "0x40033EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E0")]
		private SelectOnBool<Quaternion> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Quaternion;

		[Token(Token = "0x40033EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E8")]
		private SelectOnBool<Keyframe> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Keyframe;

		[Token(Token = "0x40033F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F0")]
		private SelectOnBool<Bounds> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Bounds;

		[Token(Token = "0x40033F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F8")]
		private SelectOnBool<Color> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Color;

		[Token(Token = "0x40033F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1400")]
		private SelectOnBool<Rect> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Rect;

		[Token(Token = "0x40033F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1408")]
		private SelectOnBool<ContactPoint> FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint;

		[Token(Token = "0x40033F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1410")]
		private SelectOnBool<ContactPoint2D> FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40033F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1418")]
		private SelectOnBool<RaycastHit> FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit;

		[Token(Token = "0x40033F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1420")]
		private SelectOnBool<RaycastHit2D> FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40033F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1428")]
		private SelectOnBool<Ray> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Ray;

		[Token(Token = "0x40033F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1430")]
		private SelectOnBool<Space> FlowCanvas_Nodes_SelectOnBool_UnityEngine_Space;

		[Token(Token = "0x40033F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1438")]
		private SelectOnBool<SpawnPointInfo> FlowCanvas_Nodes_SelectOnBool_SpawnPointInfo;

		[Token(Token = "0x40033FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1440")]
		private SelectOnBool<LayerMask> FlowCanvas_Nodes_SelectOnBool_UnityEngine_LayerMask;

		[Token(Token = "0x40033FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1448")]
		private SelectOnEnum<bool> FlowCanvas_Nodes_SelectOnEnum_System_Boolean;

		[Token(Token = "0x40033FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1450")]
		private SelectOnEnum<float> FlowCanvas_Nodes_SelectOnEnum_System_Single;

		[Token(Token = "0x40033FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1458")]
		private SelectOnEnum<int> FlowCanvas_Nodes_SelectOnEnum_System_Int32;

		[Token(Token = "0x40033FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1460")]
		private SelectOnEnum<Vector2> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector2;

		[Token(Token = "0x40033FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1468")]
		private SelectOnEnum<Vector3> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector3;

		[Token(Token = "0x4003400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1470")]
		private SelectOnEnum<Vector4> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector4;

		[Token(Token = "0x4003401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1478")]
		private SelectOnEnum<Quaternion> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Quaternion;

		[Token(Token = "0x4003402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1480")]
		private SelectOnEnum<Keyframe> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Keyframe;

		[Token(Token = "0x4003403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1488")]
		private SelectOnEnum<Bounds> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Bounds;

		[Token(Token = "0x4003404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1490")]
		private SelectOnEnum<Color> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Color;

		[Token(Token = "0x4003405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1498")]
		private SelectOnEnum<Rect> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Rect;

		[Token(Token = "0x4003406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A0")]
		private SelectOnEnum<ContactPoint> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint;

		[Token(Token = "0x4003407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A8")]
		private SelectOnEnum<ContactPoint2D> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B0")]
		private SelectOnEnum<RaycastHit> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit;

		[Token(Token = "0x4003409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B8")]
		private SelectOnEnum<RaycastHit2D> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400340A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C0")]
		private SelectOnEnum<Ray> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Ray;

		[Token(Token = "0x400340B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C8")]
		private SelectOnEnum<Space> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Space;

		[Token(Token = "0x400340C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D0")]
		private SelectOnEnum<SpawnPointInfo> FlowCanvas_Nodes_SelectOnEnum_SpawnPointInfo;

		[Token(Token = "0x400340D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D8")]
		private SelectOnEnum<LayerMask> FlowCanvas_Nodes_SelectOnEnum_UnityEngine_LayerMask;

		[Token(Token = "0x400340E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E0")]
		private SelectOnInt<bool> FlowCanvas_Nodes_SelectOnInt_System_Boolean;

		[Token(Token = "0x400340F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E8")]
		private SelectOnInt<float> FlowCanvas_Nodes_SelectOnInt_System_Single;

		[Token(Token = "0x4003410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F0")]
		private SelectOnInt<int> FlowCanvas_Nodes_SelectOnInt_System_Int32;

		[Token(Token = "0x4003411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F8")]
		private SelectOnInt<Vector2> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector2;

		[Token(Token = "0x4003412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1500")]
		private SelectOnInt<Vector3> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector3;

		[Token(Token = "0x4003413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1508")]
		private SelectOnInt<Vector4> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector4;

		[Token(Token = "0x4003414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1510")]
		private SelectOnInt<Quaternion> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Quaternion;

		[Token(Token = "0x4003415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1518")]
		private SelectOnInt<Keyframe> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Keyframe;

		[Token(Token = "0x4003416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1520")]
		private SelectOnInt<Bounds> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Bounds;

		[Token(Token = "0x4003417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1528")]
		private SelectOnInt<Color> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Color;

		[Token(Token = "0x4003418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1530")]
		private SelectOnInt<Rect> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Rect;

		[Token(Token = "0x4003419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1538")]
		private SelectOnInt<ContactPoint> FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint;

		[Token(Token = "0x400341A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1540")]
		private SelectOnInt<ContactPoint2D> FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400341B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1548")]
		private SelectOnInt<RaycastHit> FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit;

		[Token(Token = "0x400341C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1550")]
		private SelectOnInt<RaycastHit2D> FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400341D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1558")]
		private SelectOnInt<Ray> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Ray;

		[Token(Token = "0x400341E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1560")]
		private SelectOnInt<Space> FlowCanvas_Nodes_SelectOnInt_UnityEngine_Space;

		[Token(Token = "0x400341F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1568")]
		private SelectOnInt<SpawnPointInfo> FlowCanvas_Nodes_SelectOnInt_SpawnPointInfo;

		[Token(Token = "0x4003420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1570")]
		private SelectOnInt<LayerMask> FlowCanvas_Nodes_SelectOnInt_UnityEngine_LayerMask;

		[Token(Token = "0x4003421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1578")]
		private SelectOnString<bool> FlowCanvas_Nodes_SelectOnString_System_Boolean;

		[Token(Token = "0x4003422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1580")]
		private SelectOnString<float> FlowCanvas_Nodes_SelectOnString_System_Single;

		[Token(Token = "0x4003423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1588")]
		private SelectOnString<int> FlowCanvas_Nodes_SelectOnString_System_Int32;

		[Token(Token = "0x4003424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1590")]
		private SelectOnString<Vector2> FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector2;

		[Token(Token = "0x4003425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1598")]
		private SelectOnString<Vector3> FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector3;

		[Token(Token = "0x4003426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A0")]
		private SelectOnString<Vector4> FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector4;

		[Token(Token = "0x4003427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A8")]
		private SelectOnString<Quaternion> FlowCanvas_Nodes_SelectOnString_UnityEngine_Quaternion;

		[Token(Token = "0x4003428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B0")]
		private SelectOnString<Keyframe> FlowCanvas_Nodes_SelectOnString_UnityEngine_Keyframe;

		[Token(Token = "0x4003429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B8")]
		private SelectOnString<Bounds> FlowCanvas_Nodes_SelectOnString_UnityEngine_Bounds;

		[Token(Token = "0x400342A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C0")]
		private SelectOnString<Color> FlowCanvas_Nodes_SelectOnString_UnityEngine_Color;

		[Token(Token = "0x400342B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C8")]
		private SelectOnString<Rect> FlowCanvas_Nodes_SelectOnString_UnityEngine_Rect;

		[Token(Token = "0x400342C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D0")]
		private SelectOnString<ContactPoint> FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint;

		[Token(Token = "0x400342D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D8")]
		private SelectOnString<ContactPoint2D> FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400342E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E0")]
		private SelectOnString<RaycastHit> FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit;

		[Token(Token = "0x400342F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E8")]
		private SelectOnString<RaycastHit2D> FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15F0")]
		private SelectOnString<Ray> FlowCanvas_Nodes_SelectOnString_UnityEngine_Ray;

		[Token(Token = "0x4003431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15F8")]
		private SelectOnString<Space> FlowCanvas_Nodes_SelectOnString_UnityEngine_Space;

		[Token(Token = "0x4003432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1600")]
		private SelectOnString<SpawnPointInfo> FlowCanvas_Nodes_SelectOnString_SpawnPointInfo;

		[Token(Token = "0x4003433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1608")]
		private SelectOnString<LayerMask> FlowCanvas_Nodes_SelectOnString_UnityEngine_LayerMask;

		[Token(Token = "0x4003434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1610")]
		private SelectOnTag<bool> FlowCanvas_Nodes_SelectOnTag_System_Boolean;

		[Token(Token = "0x4003435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1618")]
		private SelectOnTag<float> FlowCanvas_Nodes_SelectOnTag_System_Single;

		[Token(Token = "0x4003436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1620")]
		private SelectOnTag<int> FlowCanvas_Nodes_SelectOnTag_System_Int32;

		[Token(Token = "0x4003437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1628")]
		private SelectOnTag<Vector2> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector2;

		[Token(Token = "0x4003438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1630")]
		private SelectOnTag<Vector3> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector3;

		[Token(Token = "0x4003439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1638")]
		private SelectOnTag<Vector4> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector4;

		[Token(Token = "0x400343A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1640")]
		private SelectOnTag<Quaternion> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Quaternion;

		[Token(Token = "0x400343B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1648")]
		private SelectOnTag<Keyframe> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Keyframe;

		[Token(Token = "0x400343C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1650")]
		private SelectOnTag<Bounds> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Bounds;

		[Token(Token = "0x400343D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1658")]
		private SelectOnTag<Color> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Color;

		[Token(Token = "0x400343E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1660")]
		private SelectOnTag<Rect> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Rect;

		[Token(Token = "0x400343F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1668")]
		private SelectOnTag<ContactPoint> FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint;

		[Token(Token = "0x4003440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1670")]
		private SelectOnTag<ContactPoint2D> FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1678")]
		private SelectOnTag<RaycastHit> FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit;

		[Token(Token = "0x4003442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1680")]
		private SelectOnTag<RaycastHit2D> FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1688")]
		private SelectOnTag<Ray> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Ray;

		[Token(Token = "0x4003444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1690")]
		private SelectOnTag<Space> FlowCanvas_Nodes_SelectOnTag_UnityEngine_Space;

		[Token(Token = "0x4003445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1698")]
		private SelectOnTag<SpawnPointInfo> FlowCanvas_Nodes_SelectOnTag_SpawnPointInfo;

		[Token(Token = "0x4003446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A0")]
		private SelectOnTag<LayerMask> FlowCanvas_Nodes_SelectOnTag_UnityEngine_LayerMask;

		[Token(Token = "0x4003447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A8")]
		private FlowCanvas.Nodes.SendEvent<bool> FlowCanvas_Nodes_SendEvent_System_Boolean;

		[Token(Token = "0x4003448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16B0")]
		private FlowCanvas.Nodes.SendEvent<float> FlowCanvas_Nodes_SendEvent_System_Single;

		[Token(Token = "0x4003449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16B8")]
		private FlowCanvas.Nodes.SendEvent<int> FlowCanvas_Nodes_SendEvent_System_Int32;

		[Token(Token = "0x400344A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C0")]
		private FlowCanvas.Nodes.SendEvent<Vector2> FlowCanvas_Nodes_SendEvent_UnityEngine_Vector2;

		[Token(Token = "0x400344B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C8")]
		private FlowCanvas.Nodes.SendEvent<Vector3> FlowCanvas_Nodes_SendEvent_UnityEngine_Vector3;

		[Token(Token = "0x400344C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D0")]
		private FlowCanvas.Nodes.SendEvent<Vector4> FlowCanvas_Nodes_SendEvent_UnityEngine_Vector4;

		[Token(Token = "0x400344D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D8")]
		private FlowCanvas.Nodes.SendEvent<Quaternion> FlowCanvas_Nodes_SendEvent_UnityEngine_Quaternion;

		[Token(Token = "0x400344E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E0")]
		private FlowCanvas.Nodes.SendEvent<Keyframe> FlowCanvas_Nodes_SendEvent_UnityEngine_Keyframe;

		[Token(Token = "0x400344F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E8")]
		private FlowCanvas.Nodes.SendEvent<Bounds> FlowCanvas_Nodes_SendEvent_UnityEngine_Bounds;

		[Token(Token = "0x4003450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F0")]
		private FlowCanvas.Nodes.SendEvent<Color> FlowCanvas_Nodes_SendEvent_UnityEngine_Color;

		[Token(Token = "0x4003451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F8")]
		private FlowCanvas.Nodes.SendEvent<Rect> FlowCanvas_Nodes_SendEvent_UnityEngine_Rect;

		[Token(Token = "0x4003452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1700")]
		private FlowCanvas.Nodes.SendEvent<ContactPoint> FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x4003453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1708")]
		private FlowCanvas.Nodes.SendEvent<ContactPoint2D> FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1710")]
		private FlowCanvas.Nodes.SendEvent<RaycastHit> FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x4003455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1718")]
		private FlowCanvas.Nodes.SendEvent<RaycastHit2D> FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1720")]
		private FlowCanvas.Nodes.SendEvent<Ray> FlowCanvas_Nodes_SendEvent_UnityEngine_Ray;

		[Token(Token = "0x4003457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1728")]
		private FlowCanvas.Nodes.SendEvent<Space> FlowCanvas_Nodes_SendEvent_UnityEngine_Space;

		[Token(Token = "0x4003458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1730")]
		private FlowCanvas.Nodes.SendEvent<SpawnPointInfo> FlowCanvas_Nodes_SendEvent_SpawnPointInfo;

		[Token(Token = "0x4003459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1738")]
		private FlowCanvas.Nodes.SendEvent<LayerMask> FlowCanvas_Nodes_SendEvent_UnityEngine_LayerMask;

		[Token(Token = "0x400345A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1740")]
		private SendGlobalEvent<bool> FlowCanvas_Nodes_SendGlobalEvent_System_Boolean;

		[Token(Token = "0x400345B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1748")]
		private SendGlobalEvent<float> FlowCanvas_Nodes_SendGlobalEvent_System_Single;

		[Token(Token = "0x400345C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1750")]
		private SendGlobalEvent<int> FlowCanvas_Nodes_SendGlobalEvent_System_Int32;

		[Token(Token = "0x400345D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1758")]
		private SendGlobalEvent<Vector2> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector2;

		[Token(Token = "0x400345E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1760")]
		private SendGlobalEvent<Vector3> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector3;

		[Token(Token = "0x400345F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1768")]
		private SendGlobalEvent<Vector4> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector4;

		[Token(Token = "0x4003460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1770")]
		private SendGlobalEvent<Quaternion> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Quaternion;

		[Token(Token = "0x4003461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1778")]
		private SendGlobalEvent<Keyframe> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Keyframe;

		[Token(Token = "0x4003462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1780")]
		private SendGlobalEvent<Bounds> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Bounds;

		[Token(Token = "0x4003463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1788")]
		private SendGlobalEvent<Color> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Color;

		[Token(Token = "0x4003464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1790")]
		private SendGlobalEvent<Rect> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Rect;

		[Token(Token = "0x4003465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1798")]
		private SendGlobalEvent<ContactPoint> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x4003466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A0")]
		private SendGlobalEvent<ContactPoint2D> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A8")]
		private SendGlobalEvent<RaycastHit> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x4003468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B0")]
		private SendGlobalEvent<RaycastHit2D> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B8")]
		private SendGlobalEvent<Ray> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Ray;

		[Token(Token = "0x400346A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C0")]
		private SendGlobalEvent<Space> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Space;

		[Token(Token = "0x400346B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C8")]
		private SendGlobalEvent<SpawnPointInfo> FlowCanvas_Nodes_SendGlobalEvent_SpawnPointInfo;

		[Token(Token = "0x400346C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D0")]
		private SendGlobalEvent<LayerMask> FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_LayerMask;

		[Token(Token = "0x400346D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D8")]
		private SetListItem<bool> FlowCanvas_Nodes_SetListItem_System_Boolean;

		[Token(Token = "0x400346E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17E0")]
		private SetListItem<float> FlowCanvas_Nodes_SetListItem_System_Single;

		[Token(Token = "0x400346F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17E8")]
		private SetListItem<int> FlowCanvas_Nodes_SetListItem_System_Int32;

		[Token(Token = "0x4003470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17F0")]
		private SetListItem<Vector2> FlowCanvas_Nodes_SetListItem_UnityEngine_Vector2;

		[Token(Token = "0x4003471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17F8")]
		private SetListItem<Vector3> FlowCanvas_Nodes_SetListItem_UnityEngine_Vector3;

		[Token(Token = "0x4003472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1800")]
		private SetListItem<Vector4> FlowCanvas_Nodes_SetListItem_UnityEngine_Vector4;

		[Token(Token = "0x4003473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1808")]
		private SetListItem<Quaternion> FlowCanvas_Nodes_SetListItem_UnityEngine_Quaternion;

		[Token(Token = "0x4003474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1810")]
		private SetListItem<Keyframe> FlowCanvas_Nodes_SetListItem_UnityEngine_Keyframe;

		[Token(Token = "0x4003475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1818")]
		private SetListItem<Bounds> FlowCanvas_Nodes_SetListItem_UnityEngine_Bounds;

		[Token(Token = "0x4003476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1820")]
		private SetListItem<Color> FlowCanvas_Nodes_SetListItem_UnityEngine_Color;

		[Token(Token = "0x4003477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1828")]
		private SetListItem<Rect> FlowCanvas_Nodes_SetListItem_UnityEngine_Rect;

		[Token(Token = "0x4003478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1830")]
		private SetListItem<ContactPoint> FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint;

		[Token(Token = "0x4003479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1838")]
		private SetListItem<ContactPoint2D> FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400347A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1840")]
		private SetListItem<RaycastHit> FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit;

		[Token(Token = "0x400347B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1848")]
		private SetListItem<RaycastHit2D> FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400347C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1850")]
		private SetListItem<Ray> FlowCanvas_Nodes_SetListItem_UnityEngine_Ray;

		[Token(Token = "0x400347D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1858")]
		private SetListItem<Space> FlowCanvas_Nodes_SetListItem_UnityEngine_Space;

		[Token(Token = "0x400347E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1860")]
		private SetListItem<SpawnPointInfo> FlowCanvas_Nodes_SetListItem_SpawnPointInfo;

		[Token(Token = "0x400347F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1868")]
		private SetListItem<LayerMask> FlowCanvas_Nodes_SetListItem_UnityEngine_LayerMask;

		[Token(Token = "0x4003480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1870")]
		private SetOtherVariable<bool> FlowCanvas_Nodes_SetOtherVariable_System_Boolean;

		[Token(Token = "0x4003481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1878")]
		private SetOtherVariable<float> FlowCanvas_Nodes_SetOtherVariable_System_Single;

		[Token(Token = "0x4003482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1880")]
		private SetOtherVariable<int> FlowCanvas_Nodes_SetOtherVariable_System_Int32;

		[Token(Token = "0x4003483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1888")]
		private SetOtherVariable<Vector2> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector2;

		[Token(Token = "0x4003484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1890")]
		private SetOtherVariable<Vector3> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector3;

		[Token(Token = "0x4003485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1898")]
		private SetOtherVariable<Vector4> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector4;

		[Token(Token = "0x4003486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A0")]
		private SetOtherVariable<Quaternion> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Quaternion;

		[Token(Token = "0x4003487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A8")]
		private SetOtherVariable<Keyframe> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Keyframe;

		[Token(Token = "0x4003488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B0")]
		private SetOtherVariable<Bounds> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Bounds;

		[Token(Token = "0x4003489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B8")]
		private SetOtherVariable<Color> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Color;

		[Token(Token = "0x400348A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C0")]
		private SetOtherVariable<Rect> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Rect;

		[Token(Token = "0x400348B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C8")]
		private SetOtherVariable<ContactPoint> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x400348C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D0")]
		private SetOtherVariable<ContactPoint2D> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400348D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D8")]
		private SetOtherVariable<RaycastHit> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x400348E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18E0")]
		private SetOtherVariable<RaycastHit2D> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400348F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18E8")]
		private SetOtherVariable<Ray> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Ray;

		[Token(Token = "0x4003490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18F0")]
		private SetOtherVariable<Space> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Space;

		[Token(Token = "0x4003491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18F8")]
		private SetOtherVariable<SpawnPointInfo> FlowCanvas_Nodes_SetOtherVariable_SpawnPointInfo;

		[Token(Token = "0x4003492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1900")]
		private SetOtherVariable<LayerMask> FlowCanvas_Nodes_SetOtherVariable_UnityEngine_LayerMask;

		[Token(Token = "0x4003493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1908")]
		private FlowCanvas.Nodes.SetVariable<bool> FlowCanvas_Nodes_SetVariable_System_Boolean;

		[Token(Token = "0x4003494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1910")]
		private FlowCanvas.Nodes.SetVariable<float> FlowCanvas_Nodes_SetVariable_System_Single;

		[Token(Token = "0x4003495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1918")]
		private FlowCanvas.Nodes.SetVariable<int> FlowCanvas_Nodes_SetVariable_System_Int32;

		[Token(Token = "0x4003496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1920")]
		private FlowCanvas.Nodes.SetVariable<Vector2> FlowCanvas_Nodes_SetVariable_UnityEngine_Vector2;

		[Token(Token = "0x4003497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1928")]
		private FlowCanvas.Nodes.SetVariable<Vector3> FlowCanvas_Nodes_SetVariable_UnityEngine_Vector3;

		[Token(Token = "0x4003498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1930")]
		private FlowCanvas.Nodes.SetVariable<Vector4> FlowCanvas_Nodes_SetVariable_UnityEngine_Vector4;

		[Token(Token = "0x4003499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1938")]
		private FlowCanvas.Nodes.SetVariable<Quaternion> FlowCanvas_Nodes_SetVariable_UnityEngine_Quaternion;

		[Token(Token = "0x400349A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1940")]
		private FlowCanvas.Nodes.SetVariable<Keyframe> FlowCanvas_Nodes_SetVariable_UnityEngine_Keyframe;

		[Token(Token = "0x400349B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1948")]
		private FlowCanvas.Nodes.SetVariable<Bounds> FlowCanvas_Nodes_SetVariable_UnityEngine_Bounds;

		[Token(Token = "0x400349C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1950")]
		private FlowCanvas.Nodes.SetVariable<Color> FlowCanvas_Nodes_SetVariable_UnityEngine_Color;

		[Token(Token = "0x400349D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1958")]
		private FlowCanvas.Nodes.SetVariable<Rect> FlowCanvas_Nodes_SetVariable_UnityEngine_Rect;

		[Token(Token = "0x400349E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1960")]
		private FlowCanvas.Nodes.SetVariable<ContactPoint> FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x400349F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1968")]
		private FlowCanvas.Nodes.SetVariable<ContactPoint2D> FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40034A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1970")]
		private FlowCanvas.Nodes.SetVariable<RaycastHit> FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x40034A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1978")]
		private FlowCanvas.Nodes.SetVariable<RaycastHit2D> FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40034A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1980")]
		private FlowCanvas.Nodes.SetVariable<Ray> FlowCanvas_Nodes_SetVariable_UnityEngine_Ray;

		[Token(Token = "0x40034A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1988")]
		private FlowCanvas.Nodes.SetVariable<Space> FlowCanvas_Nodes_SetVariable_UnityEngine_Space;

		[Token(Token = "0x40034A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1990")]
		private FlowCanvas.Nodes.SetVariable<SpawnPointInfo> FlowCanvas_Nodes_SetVariable_SpawnPointInfo;

		[Token(Token = "0x40034A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1998")]
		private FlowCanvas.Nodes.SetVariable<LayerMask> FlowCanvas_Nodes_SetVariable_UnityEngine_LayerMask;

		[Token(Token = "0x40034A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A0")]
		private ShuffleList<bool> FlowCanvas_Nodes_ShuffleList_System_Boolean;

		[Token(Token = "0x40034A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A8")]
		private ShuffleList<float> FlowCanvas_Nodes_ShuffleList_System_Single;

		[Token(Token = "0x40034A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B0")]
		private ShuffleList<int> FlowCanvas_Nodes_ShuffleList_System_Int32;

		[Token(Token = "0x40034A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B8")]
		private ShuffleList<Vector2> FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector2;

		[Token(Token = "0x40034AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C0")]
		private ShuffleList<Vector3> FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector3;

		[Token(Token = "0x40034AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C8")]
		private ShuffleList<Vector4> FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector4;

		[Token(Token = "0x40034AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D0")]
		private ShuffleList<Quaternion> FlowCanvas_Nodes_ShuffleList_UnityEngine_Quaternion;

		[Token(Token = "0x40034AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D8")]
		private ShuffleList<Keyframe> FlowCanvas_Nodes_ShuffleList_UnityEngine_Keyframe;

		[Token(Token = "0x40034AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19E0")]
		private ShuffleList<Bounds> FlowCanvas_Nodes_ShuffleList_UnityEngine_Bounds;

		[Token(Token = "0x40034AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19E8")]
		private ShuffleList<Color> FlowCanvas_Nodes_ShuffleList_UnityEngine_Color;

		[Token(Token = "0x40034B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19F0")]
		private ShuffleList<Rect> FlowCanvas_Nodes_ShuffleList_UnityEngine_Rect;

		[Token(Token = "0x40034B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19F8")]
		private ShuffleList<ContactPoint> FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint;

		[Token(Token = "0x40034B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A00")]
		private ShuffleList<ContactPoint2D> FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40034B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A08")]
		private ShuffleList<RaycastHit> FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit;

		[Token(Token = "0x40034B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A10")]
		private ShuffleList<RaycastHit2D> FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40034B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A18")]
		private ShuffleList<Ray> FlowCanvas_Nodes_ShuffleList_UnityEngine_Ray;

		[Token(Token = "0x40034B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A20")]
		private ShuffleList<Space> FlowCanvas_Nodes_ShuffleList_UnityEngine_Space;

		[Token(Token = "0x40034B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A28")]
		private ShuffleList<SpawnPointInfo> FlowCanvas_Nodes_ShuffleList_SpawnPointInfo;

		[Token(Token = "0x40034B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A30")]
		private ShuffleList<LayerMask> FlowCanvas_Nodes_ShuffleList_UnityEngine_LayerMask;

		[Token(Token = "0x40034B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A38")]
		private FlowCanvas.Nodes.TryGetValue<bool> FlowCanvas_Nodes_TryGetValue_System_Boolean;

		[Token(Token = "0x40034BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A40")]
		private FlowCanvas.Nodes.TryGetValue<float> FlowCanvas_Nodes_TryGetValue_System_Single;

		[Token(Token = "0x40034BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A48")]
		private FlowCanvas.Nodes.TryGetValue<int> FlowCanvas_Nodes_TryGetValue_System_Int32;

		[Token(Token = "0x40034BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A50")]
		private FlowCanvas.Nodes.TryGetValue<Vector2> FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector2;

		[Token(Token = "0x40034BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A58")]
		private FlowCanvas.Nodes.TryGetValue<Vector3> FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector3;

		[Token(Token = "0x40034BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A60")]
		private FlowCanvas.Nodes.TryGetValue<Vector4> FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector4;

		[Token(Token = "0x40034BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A68")]
		private FlowCanvas.Nodes.TryGetValue<Quaternion> FlowCanvas_Nodes_TryGetValue_UnityEngine_Quaternion;

		[Token(Token = "0x40034C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A70")]
		private FlowCanvas.Nodes.TryGetValue<Keyframe> FlowCanvas_Nodes_TryGetValue_UnityEngine_Keyframe;

		[Token(Token = "0x40034C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A78")]
		private FlowCanvas.Nodes.TryGetValue<Bounds> FlowCanvas_Nodes_TryGetValue_UnityEngine_Bounds;

		[Token(Token = "0x40034C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A80")]
		private FlowCanvas.Nodes.TryGetValue<Color> FlowCanvas_Nodes_TryGetValue_UnityEngine_Color;

		[Token(Token = "0x40034C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A88")]
		private FlowCanvas.Nodes.TryGetValue<Rect> FlowCanvas_Nodes_TryGetValue_UnityEngine_Rect;

		[Token(Token = "0x40034C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A90")]
		private FlowCanvas.Nodes.TryGetValue<ContactPoint> FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint;

		[Token(Token = "0x40034C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A98")]
		private FlowCanvas.Nodes.TryGetValue<ContactPoint2D> FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40034C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA0")]
		private FlowCanvas.Nodes.TryGetValue<RaycastHit> FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit;

		[Token(Token = "0x40034C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA8")]
		private FlowCanvas.Nodes.TryGetValue<RaycastHit2D> FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40034C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AB0")]
		private FlowCanvas.Nodes.TryGetValue<Ray> FlowCanvas_Nodes_TryGetValue_UnityEngine_Ray;

		[Token(Token = "0x40034C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AB8")]
		private FlowCanvas.Nodes.TryGetValue<Space> FlowCanvas_Nodes_TryGetValue_UnityEngine_Space;

		[Token(Token = "0x40034CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC0")]
		private FlowCanvas.Nodes.TryGetValue<SpawnPointInfo> FlowCanvas_Nodes_TryGetValue_SpawnPointInfo;

		[Token(Token = "0x40034CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC8")]
		private FlowCanvas.Nodes.TryGetValue<LayerMask> FlowCanvas_Nodes_TryGetValue_UnityEngine_LayerMask;

		[Token(Token = "0x40034CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD0")]
		private WriteFlowParameter<bool> FlowCanvas_Nodes_WriteFlowParameter_System_Boolean;

		[Token(Token = "0x40034CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD8")]
		private WriteFlowParameter<float> FlowCanvas_Nodes_WriteFlowParameter_System_Single;

		[Token(Token = "0x40034CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AE0")]
		private WriteFlowParameter<int> FlowCanvas_Nodes_WriteFlowParameter_System_Int32;

		[Token(Token = "0x40034CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AE8")]
		private WriteFlowParameter<Vector2> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector2;

		[Token(Token = "0x40034D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AF0")]
		private WriteFlowParameter<Vector3> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector3;

		[Token(Token = "0x40034D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AF8")]
		private WriteFlowParameter<Vector4> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector4;

		[Token(Token = "0x40034D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B00")]
		private WriteFlowParameter<Quaternion> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Quaternion;

		[Token(Token = "0x40034D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B08")]
		private WriteFlowParameter<Keyframe> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Keyframe;

		[Token(Token = "0x40034D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B10")]
		private WriteFlowParameter<Bounds> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Bounds;

		[Token(Token = "0x40034D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B18")]
		private WriteFlowParameter<Color> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Color;

		[Token(Token = "0x40034D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B20")]
		private WriteFlowParameter<Rect> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Rect;

		[Token(Token = "0x40034D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B28")]
		private WriteFlowParameter<ContactPoint> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint;

		[Token(Token = "0x40034D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B30")]
		private WriteFlowParameter<ContactPoint2D> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40034D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B38")]
		private WriteFlowParameter<RaycastHit> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit;

		[Token(Token = "0x40034DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B40")]
		private WriteFlowParameter<RaycastHit2D> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40034DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B48")]
		private WriteFlowParameter<Ray> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Ray;

		[Token(Token = "0x40034DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B50")]
		private WriteFlowParameter<Space> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Space;

		[Token(Token = "0x40034DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B58")]
		private WriteFlowParameter<SpawnPointInfo> FlowCanvas_Nodes_WriteFlowParameter_SpawnPointInfo;

		[Token(Token = "0x40034DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B60")]
		private WriteFlowParameter<LayerMask> FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_LayerMask;

		[Token(Token = "0x40034DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B68")]
		private BBParameter<bool> NodeCanvas_Framework_BBParameter_System_Boolean;

		[Token(Token = "0x40034E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B70")]
		private BBParameter<float> NodeCanvas_Framework_BBParameter_System_Single;

		[Token(Token = "0x40034E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B78")]
		private BBParameter<int> NodeCanvas_Framework_BBParameter_System_Int32;

		[Token(Token = "0x40034E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B80")]
		private BBParameter<Vector2> NodeCanvas_Framework_BBParameter_UnityEngine_Vector2;

		[Token(Token = "0x40034E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B88")]
		private BBParameter<Vector3> NodeCanvas_Framework_BBParameter_UnityEngine_Vector3;

		[Token(Token = "0x40034E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B90")]
		private BBParameter<Vector4> NodeCanvas_Framework_BBParameter_UnityEngine_Vector4;

		[Token(Token = "0x40034E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B98")]
		private BBParameter<Quaternion> NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion;

		[Token(Token = "0x40034E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA0")]
		private BBParameter<Keyframe> NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe;

		[Token(Token = "0x40034E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA8")]
		private BBParameter<Bounds> NodeCanvas_Framework_BBParameter_UnityEngine_Bounds;

		[Token(Token = "0x40034E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB0")]
		private BBParameter<Color> NodeCanvas_Framework_BBParameter_UnityEngine_Color;

		[Token(Token = "0x40034E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB8")]
		private BBParameter<Rect> NodeCanvas_Framework_BBParameter_UnityEngine_Rect;

		[Token(Token = "0x40034EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC0")]
		private BBParameter<ContactPoint> NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint;

		[Token(Token = "0x40034EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC8")]
		private BBParameter<ContactPoint2D> NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40034EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD0")]
		private BBParameter<RaycastHit> NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit;

		[Token(Token = "0x40034ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD8")]
		private BBParameter<RaycastHit2D> NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40034EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE0")]
		private BBParameter<Ray> NodeCanvas_Framework_BBParameter_UnityEngine_Ray;

		[Token(Token = "0x40034EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE8")]
		private BBParameter<Space> NodeCanvas_Framework_BBParameter_UnityEngine_Space;

		[Token(Token = "0x40034F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BF0")]
		private BBParameter<SpawnPointInfo> NodeCanvas_Framework_BBParameter_SpawnPointInfo;

		[Token(Token = "0x40034F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BF8")]
		private BBParameter<LayerMask> NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask;

		[Token(Token = "0x40034F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C00")]
		private ExposedParameter<bool> NodeCanvas_Framework_ExposedParameter_System_Boolean;

		[Token(Token = "0x40034F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C08")]
		private ExposedParameter<float> NodeCanvas_Framework_ExposedParameter_System_Single;

		[Token(Token = "0x40034F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C10")]
		private ExposedParameter<int> NodeCanvas_Framework_ExposedParameter_System_Int32;

		[Token(Token = "0x40034F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C18")]
		private ExposedParameter<Vector2> NodeCanvas_Framework_ExposedParameter_UnityEngine_Vector2;

		[Token(Token = "0x40034F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C20")]
		private ExposedParameter<Vector3> NodeCanvas_Framework_ExposedParameter_UnityEngine_Vector3;

		[Token(Token = "0x40034F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C28")]
		private ExposedParameter<Vector4> NodeCanvas_Framework_ExposedParameter_UnityEngine_Vector4;

		[Token(Token = "0x40034F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C30")]
		private ExposedParameter<Quaternion> NodeCanvas_Framework_ExposedParameter_UnityEngine_Quaternion;

		[Token(Token = "0x40034F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C38")]
		private ExposedParameter<Keyframe> NodeCanvas_Framework_ExposedParameter_UnityEngine_Keyframe;

		[Token(Token = "0x40034FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C40")]
		private ExposedParameter<Bounds> NodeCanvas_Framework_ExposedParameter_UnityEngine_Bounds;

		[Token(Token = "0x40034FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C48")]
		private ExposedParameter<Color> NodeCanvas_Framework_ExposedParameter_UnityEngine_Color;

		[Token(Token = "0x40034FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C50")]
		private ExposedParameter<Rect> NodeCanvas_Framework_ExposedParameter_UnityEngine_Rect;

		[Token(Token = "0x40034FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C58")]
		private ExposedParameter<ContactPoint> NodeCanvas_Framework_ExposedParameter_UnityEngine_ContactPoint;

		[Token(Token = "0x40034FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C60")]
		private ExposedParameter<ContactPoint2D> NodeCanvas_Framework_ExposedParameter_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40034FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C68")]
		private ExposedParameter<RaycastHit> NodeCanvas_Framework_ExposedParameter_UnityEngine_RaycastHit;

		[Token(Token = "0x4003500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C70")]
		private ExposedParameter<RaycastHit2D> NodeCanvas_Framework_ExposedParameter_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C78")]
		private ExposedParameter<Ray> NodeCanvas_Framework_ExposedParameter_UnityEngine_Ray;

		[Token(Token = "0x4003502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C80")]
		private ExposedParameter<Space> NodeCanvas_Framework_ExposedParameter_UnityEngine_Space;

		[Token(Token = "0x4003503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C88")]
		private ExposedParameter<SpawnPointInfo> NodeCanvas_Framework_ExposedParameter_SpawnPointInfo;

		[Token(Token = "0x4003504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C90")]
		private ExposedParameter<LayerMask> NodeCanvas_Framework_ExposedParameter_UnityEngine_LayerMask;

		[Token(Token = "0x4003505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C98")]
		private Variable<bool> NodeCanvas_Framework_Variable_System_Boolean;

		[Token(Token = "0x4003506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA0")]
		private Variable<float> NodeCanvas_Framework_Variable_System_Single;

		[Token(Token = "0x4003507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA8")]
		private Variable<int> NodeCanvas_Framework_Variable_System_Int32;

		[Token(Token = "0x4003508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CB0")]
		private Variable<Vector2> NodeCanvas_Framework_Variable_UnityEngine_Vector2;

		[Token(Token = "0x4003509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CB8")]
		private Variable<Vector3> NodeCanvas_Framework_Variable_UnityEngine_Vector3;

		[Token(Token = "0x400350A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC0")]
		private Variable<Vector4> NodeCanvas_Framework_Variable_UnityEngine_Vector4;

		[Token(Token = "0x400350B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC8")]
		private Variable<Quaternion> NodeCanvas_Framework_Variable_UnityEngine_Quaternion;

		[Token(Token = "0x400350C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD0")]
		private Variable<Keyframe> NodeCanvas_Framework_Variable_UnityEngine_Keyframe;

		[Token(Token = "0x400350D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD8")]
		private Variable<Bounds> NodeCanvas_Framework_Variable_UnityEngine_Bounds;

		[Token(Token = "0x400350E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE0")]
		private Variable<Color> NodeCanvas_Framework_Variable_UnityEngine_Color;

		[Token(Token = "0x400350F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE8")]
		private Variable<Rect> NodeCanvas_Framework_Variable_UnityEngine_Rect;

		[Token(Token = "0x4003510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF0")]
		private Variable<ContactPoint> NodeCanvas_Framework_Variable_UnityEngine_ContactPoint;

		[Token(Token = "0x4003511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF8")]
		private Variable<ContactPoint2D> NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D00")]
		private Variable<RaycastHit> NodeCanvas_Framework_Variable_UnityEngine_RaycastHit;

		[Token(Token = "0x4003513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D08")]
		private Variable<RaycastHit2D> NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D10")]
		private Variable<Ray> NodeCanvas_Framework_Variable_UnityEngine_Ray;

		[Token(Token = "0x4003515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D18")]
		private Variable<Space> NodeCanvas_Framework_Variable_UnityEngine_Space;

		[Token(Token = "0x4003516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D20")]
		private Variable<SpawnPointInfo> NodeCanvas_Framework_Variable_SpawnPointInfo;

		[Token(Token = "0x4003517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D28")]
		private Variable<LayerMask> NodeCanvas_Framework_Variable_UnityEngine_LayerMask;

		[Token(Token = "0x4003518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D30")]
		private ReflectedAction<bool> NodeCanvas_Framework_Internal_ReflectedAction_System_Boolean;

		[Token(Token = "0x4003519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D38")]
		private ReflectedAction<float> NodeCanvas_Framework_Internal_ReflectedAction_System_Single;

		[Token(Token = "0x400351A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D40")]
		private ReflectedAction<int> NodeCanvas_Framework_Internal_ReflectedAction_System_Int32;

		[Token(Token = "0x400351B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D48")]
		private ReflectedAction<Vector2> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector2;

		[Token(Token = "0x400351C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D50")]
		private ReflectedAction<Vector3> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector3;

		[Token(Token = "0x400351D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D58")]
		private ReflectedAction<Vector4> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector4;

		[Token(Token = "0x400351E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D60")]
		private ReflectedAction<Quaternion> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Quaternion;

		[Token(Token = "0x400351F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D68")]
		private ReflectedAction<Keyframe> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Keyframe;

		[Token(Token = "0x4003520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D70")]
		private ReflectedAction<Bounds> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Bounds;

		[Token(Token = "0x4003521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D78")]
		private ReflectedAction<Color> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Color;

		[Token(Token = "0x4003522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D80")]
		private ReflectedAction<Rect> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Rect;

		[Token(Token = "0x4003523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D88")]
		private ReflectedAction<ContactPoint> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint;

		[Token(Token = "0x4003524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D90")]
		private ReflectedAction<ContactPoint2D> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D98")]
		private ReflectedAction<RaycastHit> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit;

		[Token(Token = "0x4003526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA0")]
		private ReflectedAction<RaycastHit2D> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA8")]
		private ReflectedAction<Ray> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Ray;

		[Token(Token = "0x4003528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB0")]
		private ReflectedAction<Space> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Space;

		[Token(Token = "0x4003529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB8")]
		private ReflectedAction<SpawnPointInfo> NodeCanvas_Framework_Internal_ReflectedAction_SpawnPointInfo;

		[Token(Token = "0x400352A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC0")]
		private ReflectedAction<LayerMask> NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_LayerMask;

		[Token(Token = "0x400352B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC8")]
		private ReflectedFunction<bool> NodeCanvas_Framework_Internal_ReflectedFunction_System_Boolean;

		[Token(Token = "0x400352C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD0")]
		private ReflectedFunction<float> NodeCanvas_Framework_Internal_ReflectedFunction_System_Single;

		[Token(Token = "0x400352D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD8")]
		private ReflectedFunction<int> NodeCanvas_Framework_Internal_ReflectedFunction_System_Int32;

		[Token(Token = "0x400352E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DE0")]
		private ReflectedFunction<Vector2> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector2;

		[Token(Token = "0x400352F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DE8")]
		private ReflectedFunction<Vector3> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector3;

		[Token(Token = "0x4003530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DF0")]
		private ReflectedFunction<Vector4> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector4;

		[Token(Token = "0x4003531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DF8")]
		private ReflectedFunction<Quaternion> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Quaternion;

		[Token(Token = "0x4003532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E00")]
		private ReflectedFunction<Keyframe> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Keyframe;

		[Token(Token = "0x4003533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E08")]
		private ReflectedFunction<Bounds> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Bounds;

		[Token(Token = "0x4003534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E10")]
		private ReflectedFunction<Color> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Color;

		[Token(Token = "0x4003535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E18")]
		private ReflectedFunction<Rect> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Rect;

		[Token(Token = "0x4003536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E20")]
		private ReflectedFunction<ContactPoint> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint;

		[Token(Token = "0x4003537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E28")]
		private ReflectedFunction<ContactPoint2D> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E30")]
		private ReflectedFunction<RaycastHit> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit;

		[Token(Token = "0x4003539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E38")]
		private ReflectedFunction<RaycastHit2D> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400353A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E40")]
		private ReflectedFunction<Ray> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Ray;

		[Token(Token = "0x400353B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E48")]
		private ReflectedFunction<Space> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Space;

		[Token(Token = "0x400353C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E50")]
		private ReflectedFunction<SpawnPointInfo> NodeCanvas_Framework_Internal_ReflectedFunction_SpawnPointInfo;

		[Token(Token = "0x400353D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E58")]
		private ReflectedFunction<LayerMask> NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_LayerMask;

		[Token(Token = "0x400353E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E60")]
		private AddElementToDictionary<bool> NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Boolean;

		[Token(Token = "0x400353F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E68")]
		private AddElementToDictionary<float> NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Single;

		[Token(Token = "0x4003540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E70")]
		private AddElementToDictionary<int> NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Int32;

		[Token(Token = "0x4003541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E78")]
		private AddElementToDictionary<Vector2> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector2;

		[Token(Token = "0x4003542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E80")]
		private AddElementToDictionary<Vector3> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector3;

		[Token(Token = "0x4003543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E88")]
		private AddElementToDictionary<Vector4> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector4;

		[Token(Token = "0x4003544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E90")]
		private AddElementToDictionary<Quaternion> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Quaternion;

		[Token(Token = "0x4003545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E98")]
		private AddElementToDictionary<Keyframe> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Keyframe;

		[Token(Token = "0x4003546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA0")]
		private AddElementToDictionary<Bounds> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Bounds;

		[Token(Token = "0x4003547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA8")]
		private AddElementToDictionary<Color> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Color;

		[Token(Token = "0x4003548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB0")]
		private AddElementToDictionary<Rect> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Rect;

		[Token(Token = "0x4003549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB8")]
		private AddElementToDictionary<ContactPoint> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint;

		[Token(Token = "0x400354A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC0")]
		private AddElementToDictionary<ContactPoint2D> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400354B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC8")]
		private AddElementToDictionary<RaycastHit> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit;

		[Token(Token = "0x400354C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED0")]
		private AddElementToDictionary<RaycastHit2D> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400354D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED8")]
		private AddElementToDictionary<Ray> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Ray;

		[Token(Token = "0x400354E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EE0")]
		private AddElementToDictionary<Space> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Space;

		[Token(Token = "0x400354F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EE8")]
		private AddElementToDictionary<SpawnPointInfo> NodeCanvas_Tasks_Actions_AddElementToDictionary_SpawnPointInfo;

		[Token(Token = "0x4003550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EF0")]
		private AddElementToDictionary<LayerMask> NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_LayerMask;

		[Token(Token = "0x4003551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EF8")]
		private AddElementToList<bool> NodeCanvas_Tasks_Actions_AddElementToList_System_Boolean;

		[Token(Token = "0x4003552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F00")]
		private AddElementToList<float> NodeCanvas_Tasks_Actions_AddElementToList_System_Single;

		[Token(Token = "0x4003553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F08")]
		private AddElementToList<int> NodeCanvas_Tasks_Actions_AddElementToList_System_Int32;

		[Token(Token = "0x4003554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F10")]
		private AddElementToList<Vector2> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector2;

		[Token(Token = "0x4003555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F18")]
		private AddElementToList<Vector3> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector3;

		[Token(Token = "0x4003556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F20")]
		private AddElementToList<Vector4> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector4;

		[Token(Token = "0x4003557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F28")]
		private AddElementToList<Quaternion> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Quaternion;

		[Token(Token = "0x4003558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F30")]
		private AddElementToList<Keyframe> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Keyframe;

		[Token(Token = "0x4003559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F38")]
		private AddElementToList<Bounds> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Bounds;

		[Token(Token = "0x400355A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F40")]
		private AddElementToList<Color> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Color;

		[Token(Token = "0x400355B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F48")]
		private AddElementToList<Rect> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Rect;

		[Token(Token = "0x400355C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F50")]
		private AddElementToList<ContactPoint> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint;

		[Token(Token = "0x400355D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F58")]
		private AddElementToList<ContactPoint2D> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400355E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F60")]
		private AddElementToList<RaycastHit> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit;

		[Token(Token = "0x400355F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F68")]
		private AddElementToList<RaycastHit2D> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F70")]
		private AddElementToList<Ray> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Ray;

		[Token(Token = "0x4003561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F78")]
		private AddElementToList<Space> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Space;

		[Token(Token = "0x4003562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F80")]
		private AddElementToList<SpawnPointInfo> NodeCanvas_Tasks_Actions_AddElementToList_SpawnPointInfo;

		[Token(Token = "0x4003563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F88")]
		private AddElementToList<LayerMask> NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_LayerMask;

		[Token(Token = "0x4003564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F90")]
		private GetDictionaryElement<bool> NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Boolean;

		[Token(Token = "0x4003565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F98")]
		private GetDictionaryElement<float> NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Single;

		[Token(Token = "0x4003566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA0")]
		private GetDictionaryElement<int> NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Int32;

		[Token(Token = "0x4003567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA8")]
		private GetDictionaryElement<Vector2> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector2;

		[Token(Token = "0x4003568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FB0")]
		private GetDictionaryElement<Vector3> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector3;

		[Token(Token = "0x4003569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FB8")]
		private GetDictionaryElement<Vector4> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector4;

		[Token(Token = "0x400356A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC0")]
		private GetDictionaryElement<Quaternion> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Quaternion;

		[Token(Token = "0x400356B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC8")]
		private GetDictionaryElement<Keyframe> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Keyframe;

		[Token(Token = "0x400356C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FD0")]
		private GetDictionaryElement<Bounds> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Bounds;

		[Token(Token = "0x400356D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FD8")]
		private GetDictionaryElement<Color> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Color;

		[Token(Token = "0x400356E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FE0")]
		private GetDictionaryElement<Rect> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Rect;

		[Token(Token = "0x400356F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FE8")]
		private GetDictionaryElement<ContactPoint> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint;

		[Token(Token = "0x4003570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FF0")]
		private GetDictionaryElement<ContactPoint2D> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FF8")]
		private GetDictionaryElement<RaycastHit> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit;

		[Token(Token = "0x4003572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2000")]
		private GetDictionaryElement<RaycastHit2D> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2008")]
		private GetDictionaryElement<Ray> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Ray;

		[Token(Token = "0x4003574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2010")]
		private GetDictionaryElement<Space> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Space;

		[Token(Token = "0x4003575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2018")]
		private GetDictionaryElement<SpawnPointInfo> NodeCanvas_Tasks_Actions_GetDictionaryElement_SpawnPointInfo;

		[Token(Token = "0x4003576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2020")]
		private GetDictionaryElement<LayerMask> NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_LayerMask;

		[Token(Token = "0x4003577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2028")]
		private GetIndexOfElement<bool> NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Boolean;

		[Token(Token = "0x4003578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2030")]
		private GetIndexOfElement<float> NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Single;

		[Token(Token = "0x4003579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2038")]
		private GetIndexOfElement<int> NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Int32;

		[Token(Token = "0x400357A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2040")]
		private GetIndexOfElement<Vector2> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector2;

		[Token(Token = "0x400357B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2048")]
		private GetIndexOfElement<Vector3> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector3;

		[Token(Token = "0x400357C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2050")]
		private GetIndexOfElement<Vector4> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector4;

		[Token(Token = "0x400357D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2058")]
		private GetIndexOfElement<Quaternion> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Quaternion;

		[Token(Token = "0x400357E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2060")]
		private GetIndexOfElement<Keyframe> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Keyframe;

		[Token(Token = "0x400357F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2068")]
		private GetIndexOfElement<Bounds> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Bounds;

		[Token(Token = "0x4003580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2070")]
		private GetIndexOfElement<Color> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Color;

		[Token(Token = "0x4003581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2078")]
		private GetIndexOfElement<Rect> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Rect;

		[Token(Token = "0x4003582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2080")]
		private GetIndexOfElement<ContactPoint> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint;

		[Token(Token = "0x4003583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2088")]
		private GetIndexOfElement<ContactPoint2D> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2090")]
		private GetIndexOfElement<RaycastHit> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit;

		[Token(Token = "0x4003585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2098")]
		private GetIndexOfElement<RaycastHit2D> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A0")]
		private GetIndexOfElement<Ray> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Ray;

		[Token(Token = "0x4003587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A8")]
		private GetIndexOfElement<Space> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Space;

		[Token(Token = "0x4003588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B0")]
		private GetIndexOfElement<SpawnPointInfo> NodeCanvas_Tasks_Actions_GetIndexOfElement_SpawnPointInfo;

		[Token(Token = "0x4003589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B8")]
		private GetIndexOfElement<LayerMask> NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_LayerMask;

		[Token(Token = "0x400358A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C0")]
		private InsertElementToList<bool> NodeCanvas_Tasks_Actions_InsertElementToList_System_Boolean;

		[Token(Token = "0x400358B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C8")]
		private InsertElementToList<float> NodeCanvas_Tasks_Actions_InsertElementToList_System_Single;

		[Token(Token = "0x400358C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D0")]
		private InsertElementToList<int> NodeCanvas_Tasks_Actions_InsertElementToList_System_Int32;

		[Token(Token = "0x400358D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D8")]
		private InsertElementToList<Vector2> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector2;

		[Token(Token = "0x400358E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20E0")]
		private InsertElementToList<Vector3> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector3;

		[Token(Token = "0x400358F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20E8")]
		private InsertElementToList<Vector4> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector4;

		[Token(Token = "0x4003590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F0")]
		private InsertElementToList<Quaternion> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Quaternion;

		[Token(Token = "0x4003591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F8")]
		private InsertElementToList<Keyframe> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Keyframe;

		[Token(Token = "0x4003592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2100")]
		private InsertElementToList<Bounds> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Bounds;

		[Token(Token = "0x4003593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2108")]
		private InsertElementToList<Color> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Color;

		[Token(Token = "0x4003594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2110")]
		private InsertElementToList<Rect> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Rect;

		[Token(Token = "0x4003595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2118")]
		private InsertElementToList<ContactPoint> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint;

		[Token(Token = "0x4003596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2120")]
		private InsertElementToList<ContactPoint2D> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2128")]
		private InsertElementToList<RaycastHit> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit;

		[Token(Token = "0x4003598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2130")]
		private InsertElementToList<RaycastHit2D> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2138")]
		private InsertElementToList<Ray> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Ray;

		[Token(Token = "0x400359A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2140")]
		private InsertElementToList<Space> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Space;

		[Token(Token = "0x400359B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2148")]
		private InsertElementToList<SpawnPointInfo> NodeCanvas_Tasks_Actions_InsertElementToList_SpawnPointInfo;

		[Token(Token = "0x400359C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2150")]
		private InsertElementToList<LayerMask> NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_LayerMask;

		[Token(Token = "0x400359D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2158")]
		private PickListElement<bool> NodeCanvas_Tasks_Actions_PickListElement_System_Boolean;

		[Token(Token = "0x400359E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2160")]
		private PickListElement<float> NodeCanvas_Tasks_Actions_PickListElement_System_Single;

		[Token(Token = "0x400359F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2168")]
		private PickListElement<int> NodeCanvas_Tasks_Actions_PickListElement_System_Int32;

		[Token(Token = "0x40035A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2170")]
		private PickListElement<Vector2> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector2;

		[Token(Token = "0x40035A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2178")]
		private PickListElement<Vector3> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector3;

		[Token(Token = "0x40035A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2180")]
		private PickListElement<Vector4> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector4;

		[Token(Token = "0x40035A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2188")]
		private PickListElement<Quaternion> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Quaternion;

		[Token(Token = "0x40035A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2190")]
		private PickListElement<Keyframe> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Keyframe;

		[Token(Token = "0x40035A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2198")]
		private PickListElement<Bounds> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Bounds;

		[Token(Token = "0x40035A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21A0")]
		private PickListElement<Color> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Color;

		[Token(Token = "0x40035A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21A8")]
		private PickListElement<Rect> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Rect;

		[Token(Token = "0x40035A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B0")]
		private PickListElement<ContactPoint> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint;

		[Token(Token = "0x40035A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B8")]
		private PickListElement<ContactPoint2D> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40035AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C0")]
		private PickListElement<RaycastHit> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit;

		[Token(Token = "0x40035AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C8")]
		private PickListElement<RaycastHit2D> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40035AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21D0")]
		private PickListElement<Ray> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Ray;

		[Token(Token = "0x40035AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21D8")]
		private PickListElement<Space> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Space;

		[Token(Token = "0x40035AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21E0")]
		private PickListElement<SpawnPointInfo> NodeCanvas_Tasks_Actions_PickListElement_SpawnPointInfo;

		[Token(Token = "0x40035AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21E8")]
		private PickListElement<LayerMask> NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_LayerMask;

		[Token(Token = "0x40035B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21F0")]
		private PickListElementLoop<bool> NodeCanvas_Tasks_Actions_PickListElementLoop_System_Boolean;

		[Token(Token = "0x40035B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21F8")]
		private PickListElementLoop<float> NodeCanvas_Tasks_Actions_PickListElementLoop_System_Single;

		[Token(Token = "0x40035B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2200")]
		private PickListElementLoop<int> NodeCanvas_Tasks_Actions_PickListElementLoop_System_Int32;

		[Token(Token = "0x40035B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2208")]
		private PickListElementLoop<Vector2> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Vector2;

		[Token(Token = "0x40035B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2210")]
		private PickListElementLoop<Vector3> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Vector3;

		[Token(Token = "0x40035B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2218")]
		private PickListElementLoop<Vector4> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Vector4;

		[Token(Token = "0x40035B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2220")]
		private PickListElementLoop<Quaternion> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Quaternion;

		[Token(Token = "0x40035B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2228")]
		private PickListElementLoop<Keyframe> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Keyframe;

		[Token(Token = "0x40035B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2230")]
		private PickListElementLoop<Bounds> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Bounds;

		[Token(Token = "0x40035B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2238")]
		private PickListElementLoop<Color> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Color;

		[Token(Token = "0x40035BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2240")]
		private PickListElementLoop<Rect> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Rect;

		[Token(Token = "0x40035BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2248")]
		private PickListElementLoop<ContactPoint> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_ContactPoint;

		[Token(Token = "0x40035BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2250")]
		private PickListElementLoop<ContactPoint2D> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40035BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2258")]
		private PickListElementLoop<RaycastHit> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_RaycastHit;

		[Token(Token = "0x40035BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2260")]
		private PickListElementLoop<RaycastHit2D> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40035BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2268")]
		private PickListElementLoop<Ray> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Ray;

		[Token(Token = "0x40035C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2270")]
		private PickListElementLoop<Space> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_Space;

		[Token(Token = "0x40035C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2278")]
		private PickListElementLoop<SpawnPointInfo> NodeCanvas_Tasks_Actions_PickListElementLoop_SpawnPointInfo;

		[Token(Token = "0x40035C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2280")]
		private PickListElementLoop<LayerMask> NodeCanvas_Tasks_Actions_PickListElementLoop_UnityEngine_LayerMask;

		[Token(Token = "0x40035C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2288")]
		private PickRandomListElement<bool> NodeCanvas_Tasks_Actions_PickRandomListElement_System_Boolean;

		[Token(Token = "0x40035C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2290")]
		private PickRandomListElement<float> NodeCanvas_Tasks_Actions_PickRandomListElement_System_Single;

		[Token(Token = "0x40035C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2298")]
		private PickRandomListElement<int> NodeCanvas_Tasks_Actions_PickRandomListElement_System_Int32;

		[Token(Token = "0x40035C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22A0")]
		private PickRandomListElement<Vector2> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector2;

		[Token(Token = "0x40035C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22A8")]
		private PickRandomListElement<Vector3> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector3;

		[Token(Token = "0x40035C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22B0")]
		private PickRandomListElement<Vector4> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector4;

		[Token(Token = "0x40035C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22B8")]
		private PickRandomListElement<Quaternion> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Quaternion;

		[Token(Token = "0x40035CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C0")]
		private PickRandomListElement<Keyframe> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Keyframe;

		[Token(Token = "0x40035CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C8")]
		private PickRandomListElement<Bounds> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Bounds;

		[Token(Token = "0x40035CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22D0")]
		private PickRandomListElement<Color> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Color;

		[Token(Token = "0x40035CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22D8")]
		private PickRandomListElement<Rect> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Rect;

		[Token(Token = "0x40035CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22E0")]
		private PickRandomListElement<ContactPoint> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint;

		[Token(Token = "0x40035CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22E8")]
		private PickRandomListElement<ContactPoint2D> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40035D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22F0")]
		private PickRandomListElement<RaycastHit> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit;

		[Token(Token = "0x40035D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22F8")]
		private PickRandomListElement<RaycastHit2D> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40035D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2300")]
		private PickRandomListElement<Ray> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Ray;

		[Token(Token = "0x40035D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2308")]
		private PickRandomListElement<Space> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Space;

		[Token(Token = "0x40035D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2310")]
		private PickRandomListElement<SpawnPointInfo> NodeCanvas_Tasks_Actions_PickRandomListElement_SpawnPointInfo;

		[Token(Token = "0x40035D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2318")]
		private PickRandomListElement<LayerMask> NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_LayerMask;

		[Token(Token = "0x40035D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2320")]
		private RemoveElementFromList<bool> NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Boolean;

		[Token(Token = "0x40035D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2328")]
		private RemoveElementFromList<float> NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Single;

		[Token(Token = "0x40035D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2330")]
		private RemoveElementFromList<int> NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Int32;

		[Token(Token = "0x40035D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2338")]
		private RemoveElementFromList<Vector2> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector2;

		[Token(Token = "0x40035DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2340")]
		private RemoveElementFromList<Vector3> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector3;

		[Token(Token = "0x40035DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2348")]
		private RemoveElementFromList<Vector4> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector4;

		[Token(Token = "0x40035DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2350")]
		private RemoveElementFromList<Quaternion> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Quaternion;

		[Token(Token = "0x40035DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2358")]
		private RemoveElementFromList<Keyframe> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Keyframe;

		[Token(Token = "0x40035DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2360")]
		private RemoveElementFromList<Bounds> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Bounds;

		[Token(Token = "0x40035DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2368")]
		private RemoveElementFromList<Color> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Color;

		[Token(Token = "0x40035E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2370")]
		private RemoveElementFromList<Rect> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Rect;

		[Token(Token = "0x40035E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2378")]
		private RemoveElementFromList<ContactPoint> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint;

		[Token(Token = "0x40035E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2380")]
		private RemoveElementFromList<ContactPoint2D> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40035E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2388")]
		private RemoveElementFromList<RaycastHit> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit;

		[Token(Token = "0x40035E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2390")]
		private RemoveElementFromList<RaycastHit2D> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40035E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2398")]
		private RemoveElementFromList<Ray> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Ray;

		[Token(Token = "0x40035E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23A0")]
		private RemoveElementFromList<Space> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Space;

		[Token(Token = "0x40035E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23A8")]
		private RemoveElementFromList<SpawnPointInfo> NodeCanvas_Tasks_Actions_RemoveElementFromList_SpawnPointInfo;

		[Token(Token = "0x40035E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23B0")]
		private RemoveElementFromList<LayerMask> NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_LayerMask;

		[Token(Token = "0x40035E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23B8")]
		private NodeCanvas.Tasks.Actions.SendEvent<bool> NodeCanvas_Tasks_Actions_SendEvent_System_Boolean;

		[Token(Token = "0x40035EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C0")]
		private NodeCanvas.Tasks.Actions.SendEvent<float> NodeCanvas_Tasks_Actions_SendEvent_System_Single;

		[Token(Token = "0x40035EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C8")]
		private NodeCanvas.Tasks.Actions.SendEvent<int> NodeCanvas_Tasks_Actions_SendEvent_System_Int32;

		[Token(Token = "0x40035EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D0")]
		private NodeCanvas.Tasks.Actions.SendEvent<Vector2> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector2;

		[Token(Token = "0x40035ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D8")]
		private NodeCanvas.Tasks.Actions.SendEvent<Vector3> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector3;

		[Token(Token = "0x40035EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23E0")]
		private NodeCanvas.Tasks.Actions.SendEvent<Vector4> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector4;

		[Token(Token = "0x40035EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23E8")]
		private NodeCanvas.Tasks.Actions.SendEvent<Quaternion> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Quaternion;

		[Token(Token = "0x40035F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23F0")]
		private NodeCanvas.Tasks.Actions.SendEvent<Keyframe> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Keyframe;

		[Token(Token = "0x40035F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23F8")]
		private NodeCanvas.Tasks.Actions.SendEvent<Bounds> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Bounds;

		[Token(Token = "0x40035F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2400")]
		private NodeCanvas.Tasks.Actions.SendEvent<Color> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Color;

		[Token(Token = "0x40035F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2408")]
		private NodeCanvas.Tasks.Actions.SendEvent<Rect> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Rect;

		[Token(Token = "0x40035F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2410")]
		private NodeCanvas.Tasks.Actions.SendEvent<ContactPoint> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x40035F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2418")]
		private NodeCanvas.Tasks.Actions.SendEvent<ContactPoint2D> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40035F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2420")]
		private NodeCanvas.Tasks.Actions.SendEvent<RaycastHit> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x40035F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2428")]
		private NodeCanvas.Tasks.Actions.SendEvent<RaycastHit2D> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40035F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2430")]
		private NodeCanvas.Tasks.Actions.SendEvent<Ray> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Ray;

		[Token(Token = "0x40035F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2438")]
		private NodeCanvas.Tasks.Actions.SendEvent<Space> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Space;

		[Token(Token = "0x40035FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2440")]
		private NodeCanvas.Tasks.Actions.SendEvent<SpawnPointInfo> NodeCanvas_Tasks_Actions_SendEvent_SpawnPointInfo;

		[Token(Token = "0x40035FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2448")]
		private NodeCanvas.Tasks.Actions.SendEvent<LayerMask> NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_LayerMask;

		[Token(Token = "0x40035FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2450")]
		private SendEventToObjects<bool> NodeCanvas_Tasks_Actions_SendEventToObjects_System_Boolean;

		[Token(Token = "0x40035FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2458")]
		private SendEventToObjects<float> NodeCanvas_Tasks_Actions_SendEventToObjects_System_Single;

		[Token(Token = "0x40035FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2460")]
		private SendEventToObjects<int> NodeCanvas_Tasks_Actions_SendEventToObjects_System_Int32;

		[Token(Token = "0x40035FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2468")]
		private SendEventToObjects<Vector2> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector2;

		[Token(Token = "0x4003600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2470")]
		private SendEventToObjects<Vector3> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector3;

		[Token(Token = "0x4003601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2478")]
		private SendEventToObjects<Vector4> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector4;

		[Token(Token = "0x4003602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2480")]
		private SendEventToObjects<Quaternion> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Quaternion;

		[Token(Token = "0x4003603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2488")]
		private SendEventToObjects<Keyframe> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Keyframe;

		[Token(Token = "0x4003604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2490")]
		private SendEventToObjects<Bounds> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Bounds;

		[Token(Token = "0x4003605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2498")]
		private SendEventToObjects<Color> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Color;

		[Token(Token = "0x4003606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24A0")]
		private SendEventToObjects<Rect> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Rect;

		[Token(Token = "0x4003607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24A8")]
		private SendEventToObjects<ContactPoint> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint;

		[Token(Token = "0x4003608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24B0")]
		private SendEventToObjects<ContactPoint2D> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24B8")]
		private SendEventToObjects<RaycastHit> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit;

		[Token(Token = "0x400360A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C0")]
		private SendEventToObjects<RaycastHit2D> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400360B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C8")]
		private SendEventToObjects<Ray> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Ray;

		[Token(Token = "0x400360C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24D0")]
		private SendEventToObjects<Space> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Space;

		[Token(Token = "0x400360D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24D8")]
		private SendEventToObjects<SpawnPointInfo> NodeCanvas_Tasks_Actions_SendEventToObjects_SpawnPointInfo;

		[Token(Token = "0x400360E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24E0")]
		private SendEventToObjects<LayerMask> NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_LayerMask;

		[Token(Token = "0x400360F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24E8")]
		private SendMessage<bool> NodeCanvas_Tasks_Actions_SendMessage_System_Boolean;

		[Token(Token = "0x4003610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24F0")]
		private SendMessage<float> NodeCanvas_Tasks_Actions_SendMessage_System_Single;

		[Token(Token = "0x4003611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24F8")]
		private SendMessage<int> NodeCanvas_Tasks_Actions_SendMessage_System_Int32;

		[Token(Token = "0x4003612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2500")]
		private SendMessage<Vector2> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector2;

		[Token(Token = "0x4003613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2508")]
		private SendMessage<Vector3> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector3;

		[Token(Token = "0x4003614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2510")]
		private SendMessage<Vector4> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector4;

		[Token(Token = "0x4003615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2518")]
		private SendMessage<Quaternion> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Quaternion;

		[Token(Token = "0x4003616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2520")]
		private SendMessage<Keyframe> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Keyframe;

		[Token(Token = "0x4003617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2528")]
		private SendMessage<Bounds> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Bounds;

		[Token(Token = "0x4003618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2530")]
		private SendMessage<Color> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Color;

		[Token(Token = "0x4003619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2538")]
		private SendMessage<Rect> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Rect;

		[Token(Token = "0x400361A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2540")]
		private SendMessage<ContactPoint> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint;

		[Token(Token = "0x400361B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2548")]
		private SendMessage<ContactPoint2D> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400361C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2550")]
		private SendMessage<RaycastHit> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit;

		[Token(Token = "0x400361D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2558")]
		private SendMessage<RaycastHit2D> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400361E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2560")]
		private SendMessage<Ray> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Ray;

		[Token(Token = "0x400361F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2568")]
		private SendMessage<Space> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Space;

		[Token(Token = "0x4003620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2570")]
		private SendMessage<SpawnPointInfo> NodeCanvas_Tasks_Actions_SendMessage_SpawnPointInfo;

		[Token(Token = "0x4003621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2578")]
		private SendMessage<LayerMask> NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_LayerMask;

		[Token(Token = "0x4003622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2580")]
		private SetListElement<bool> NodeCanvas_Tasks_Actions_SetListElement_System_Boolean;

		[Token(Token = "0x4003623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2588")]
		private SetListElement<float> NodeCanvas_Tasks_Actions_SetListElement_System_Single;

		[Token(Token = "0x4003624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2590")]
		private SetListElement<int> NodeCanvas_Tasks_Actions_SetListElement_System_Int32;

		[Token(Token = "0x4003625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2598")]
		private SetListElement<Vector2> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector2;

		[Token(Token = "0x4003626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25A0")]
		private SetListElement<Vector3> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector3;

		[Token(Token = "0x4003627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25A8")]
		private SetListElement<Vector4> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector4;

		[Token(Token = "0x4003628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25B0")]
		private SetListElement<Quaternion> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Quaternion;

		[Token(Token = "0x4003629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25B8")]
		private SetListElement<Keyframe> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Keyframe;

		[Token(Token = "0x400362A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C0")]
		private SetListElement<Bounds> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Bounds;

		[Token(Token = "0x400362B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C8")]
		private SetListElement<Color> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Color;

		[Token(Token = "0x400362C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25D0")]
		private SetListElement<Rect> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Rect;

		[Token(Token = "0x400362D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25D8")]
		private SetListElement<ContactPoint> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint;

		[Token(Token = "0x400362E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25E0")]
		private SetListElement<ContactPoint2D> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400362F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25E8")]
		private SetListElement<RaycastHit> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit;

		[Token(Token = "0x4003630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25F0")]
		private SetListElement<RaycastHit2D> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25F8")]
		private SetListElement<Ray> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Ray;

		[Token(Token = "0x4003632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2600")]
		private SetListElement<Space> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Space;

		[Token(Token = "0x4003633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2608")]
		private SetListElement<SpawnPointInfo> NodeCanvas_Tasks_Actions_SetListElement_SpawnPointInfo;

		[Token(Token = "0x4003634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2610")]
		private SetListElement<LayerMask> NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_LayerMask;

		[Token(Token = "0x4003635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2618")]
		private NodeCanvas.Tasks.Actions.SetVariable<bool> NodeCanvas_Tasks_Actions_SetVariable_System_Boolean;

		[Token(Token = "0x4003636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2620")]
		private NodeCanvas.Tasks.Actions.SetVariable<float> NodeCanvas_Tasks_Actions_SetVariable_System_Single;

		[Token(Token = "0x4003637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2628")]
		private NodeCanvas.Tasks.Actions.SetVariable<int> NodeCanvas_Tasks_Actions_SetVariable_System_Int32;

		[Token(Token = "0x4003638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2630")]
		private NodeCanvas.Tasks.Actions.SetVariable<Vector2> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector2;

		[Token(Token = "0x4003639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2638")]
		private NodeCanvas.Tasks.Actions.SetVariable<Vector3> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector3;

		[Token(Token = "0x400363A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2640")]
		private NodeCanvas.Tasks.Actions.SetVariable<Vector4> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector4;

		[Token(Token = "0x400363B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2648")]
		private NodeCanvas.Tasks.Actions.SetVariable<Quaternion> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Quaternion;

		[Token(Token = "0x400363C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2650")]
		private NodeCanvas.Tasks.Actions.SetVariable<Keyframe> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Keyframe;

		[Token(Token = "0x400363D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2658")]
		private NodeCanvas.Tasks.Actions.SetVariable<Bounds> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Bounds;

		[Token(Token = "0x400363E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2660")]
		private NodeCanvas.Tasks.Actions.SetVariable<Color> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Color;

		[Token(Token = "0x400363F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2668")]
		private NodeCanvas.Tasks.Actions.SetVariable<Rect> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Rect;

		[Token(Token = "0x4003640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2670")]
		private NodeCanvas.Tasks.Actions.SetVariable<ContactPoint> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x4003641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2678")]
		private NodeCanvas.Tasks.Actions.SetVariable<ContactPoint2D> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2680")]
		private NodeCanvas.Tasks.Actions.SetVariable<RaycastHit> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x4003643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2688")]
		private NodeCanvas.Tasks.Actions.SetVariable<RaycastHit2D> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2690")]
		private NodeCanvas.Tasks.Actions.SetVariable<Ray> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Ray;

		[Token(Token = "0x4003645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2698")]
		private NodeCanvas.Tasks.Actions.SetVariable<Space> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Space;

		[Token(Token = "0x4003646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26A0")]
		private NodeCanvas.Tasks.Actions.SetVariable<SpawnPointInfo> NodeCanvas_Tasks_Actions_SetVariable_SpawnPointInfo;

		[Token(Token = "0x4003647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26A8")]
		private NodeCanvas.Tasks.Actions.SetVariable<LayerMask> NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_LayerMask;

		[Token(Token = "0x4003648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26B0")]
		private CheckCSharpEvent<bool> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Boolean;

		[Token(Token = "0x4003649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26B8")]
		private CheckCSharpEvent<float> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Single;

		[Token(Token = "0x400364A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C0")]
		private CheckCSharpEvent<int> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Int32;

		[Token(Token = "0x400364B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C8")]
		private CheckCSharpEvent<Vector2> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector2;

		[Token(Token = "0x400364C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26D0")]
		private CheckCSharpEvent<Vector3> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector3;

		[Token(Token = "0x400364D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26D8")]
		private CheckCSharpEvent<Vector4> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector4;

		[Token(Token = "0x400364E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26E0")]
		private CheckCSharpEvent<Quaternion> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Quaternion;

		[Token(Token = "0x400364F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26E8")]
		private CheckCSharpEvent<Keyframe> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Keyframe;

		[Token(Token = "0x4003650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26F0")]
		private CheckCSharpEvent<Bounds> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Bounds;

		[Token(Token = "0x4003651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26F8")]
		private CheckCSharpEvent<Color> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Color;

		[Token(Token = "0x4003652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2700")]
		private CheckCSharpEvent<Rect> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Rect;

		[Token(Token = "0x4003653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2708")]
		private CheckCSharpEvent<ContactPoint> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x4003654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2710")]
		private CheckCSharpEvent<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2718")]
		private CheckCSharpEvent<RaycastHit> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x4003656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2720")]
		private CheckCSharpEvent<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2728")]
		private CheckCSharpEvent<Ray> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Ray;

		[Token(Token = "0x4003658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2730")]
		private CheckCSharpEvent<Space> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Space;

		[Token(Token = "0x4003659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2738")]
		private CheckCSharpEvent<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_SpawnPointInfo;

		[Token(Token = "0x400365A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2740")]
		private CheckCSharpEvent<LayerMask> NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_LayerMask;

		[Token(Token = "0x400365B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2748")]
		private CheckCSharpEventValue<bool> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Boolean;

		[Token(Token = "0x400365C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2750")]
		private CheckCSharpEventValue<float> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Single;

		[Token(Token = "0x400365D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2758")]
		private CheckCSharpEventValue<int> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Int32;

		[Token(Token = "0x400365E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2760")]
		private CheckCSharpEventValue<Vector2> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector2;

		[Token(Token = "0x400365F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2768")]
		private CheckCSharpEventValue<Vector3> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector3;

		[Token(Token = "0x4003660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2770")]
		private CheckCSharpEventValue<Vector4> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector4;

		[Token(Token = "0x4003661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2778")]
		private CheckCSharpEventValue<Quaternion> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Quaternion;

		[Token(Token = "0x4003662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2780")]
		private CheckCSharpEventValue<Keyframe> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Keyframe;

		[Token(Token = "0x4003663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2788")]
		private CheckCSharpEventValue<Bounds> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Bounds;

		[Token(Token = "0x4003664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2790")]
		private CheckCSharpEventValue<Color> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Color;

		[Token(Token = "0x4003665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2798")]
		private CheckCSharpEventValue<Rect> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Rect;

		[Token(Token = "0x4003666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27A0")]
		private CheckCSharpEventValue<ContactPoint> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint;

		[Token(Token = "0x4003667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27A8")]
		private CheckCSharpEventValue<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint2D;

		[Token(Token = "0x4003668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27B0")]
		private CheckCSharpEventValue<RaycastHit> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit;

		[Token(Token = "0x4003669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27B8")]
		private CheckCSharpEventValue<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400366A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C0")]
		private CheckCSharpEventValue<Ray> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Ray;

		[Token(Token = "0x400366B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C8")]
		private CheckCSharpEventValue<Space> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Space;

		[Token(Token = "0x400366C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27D0")]
		private CheckCSharpEventValue<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_SpawnPointInfo;

		[Token(Token = "0x400366D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27D8")]
		private CheckCSharpEventValue<LayerMask> NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_LayerMask;

		[Token(Token = "0x400366E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27E0")]
		private CheckEvent<bool> NodeCanvas_Tasks_Conditions_CheckEvent_System_Boolean;

		[Token(Token = "0x400366F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27E8")]
		private CheckEvent<float> NodeCanvas_Tasks_Conditions_CheckEvent_System_Single;

		[Token(Token = "0x4003670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27F0")]
		private CheckEvent<int> NodeCanvas_Tasks_Conditions_CheckEvent_System_Int32;

		[Token(Token = "0x4003671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27F8")]
		private CheckEvent<Vector2> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector2;

		[Token(Token = "0x4003672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2800")]
		private CheckEvent<Vector3> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector3;

		[Token(Token = "0x4003673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2808")]
		private CheckEvent<Vector4> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector4;

		[Token(Token = "0x4003674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2810")]
		private CheckEvent<Quaternion> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Quaternion;

		[Token(Token = "0x4003675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2818")]
		private CheckEvent<Keyframe> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Keyframe;

		[Token(Token = "0x4003676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2820")]
		private CheckEvent<Bounds> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Bounds;

		[Token(Token = "0x4003677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2828")]
		private CheckEvent<Color> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Color;

		[Token(Token = "0x4003678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2830")]
		private CheckEvent<Rect> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Rect;

		[Token(Token = "0x4003679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2838")]
		private CheckEvent<ContactPoint> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x400367A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2840")]
		private CheckEvent<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400367B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2848")]
		private CheckEvent<RaycastHit> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x400367C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2850")]
		private CheckEvent<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x400367D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2858")]
		private CheckEvent<Ray> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Ray;

		[Token(Token = "0x400367E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2860")]
		private CheckEvent<Space> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Space;

		[Token(Token = "0x400367F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2868")]
		private CheckEvent<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckEvent_SpawnPointInfo;

		[Token(Token = "0x4003680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2870")]
		private CheckEvent<LayerMask> NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_LayerMask;

		[Token(Token = "0x4003681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2878")]
		private CheckEventValue<bool> NodeCanvas_Tasks_Conditions_CheckEventValue_System_Boolean;

		[Token(Token = "0x4003682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2880")]
		private CheckEventValue<float> NodeCanvas_Tasks_Conditions_CheckEventValue_System_Single;

		[Token(Token = "0x4003683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2888")]
		private CheckEventValue<int> NodeCanvas_Tasks_Conditions_CheckEventValue_System_Int32;

		[Token(Token = "0x4003684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2890")]
		private CheckEventValue<Vector2> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector2;

		[Token(Token = "0x4003685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2898")]
		private CheckEventValue<Vector3> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector3;

		[Token(Token = "0x4003686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28A0")]
		private CheckEventValue<Vector4> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector4;

		[Token(Token = "0x4003687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28A8")]
		private CheckEventValue<Quaternion> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Quaternion;

		[Token(Token = "0x4003688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28B0")]
		private CheckEventValue<Keyframe> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Keyframe;

		[Token(Token = "0x4003689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28B8")]
		private CheckEventValue<Bounds> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Bounds;

		[Token(Token = "0x400368A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C0")]
		private CheckEventValue<Color> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Color;

		[Token(Token = "0x400368B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C8")]
		private CheckEventValue<Rect> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Rect;

		[Token(Token = "0x400368C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28D0")]
		private CheckEventValue<ContactPoint> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint;

		[Token(Token = "0x400368D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28D8")]
		private CheckEventValue<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint2D;

		[Token(Token = "0x400368E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28E0")]
		private CheckEventValue<RaycastHit> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit;

		[Token(Token = "0x400368F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28E8")]
		private CheckEventValue<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit2D;

		[Token(Token = "0x4003690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28F0")]
		private CheckEventValue<Ray> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Ray;

		[Token(Token = "0x4003691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28F8")]
		private CheckEventValue<Space> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Space;

		[Token(Token = "0x4003692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2900")]
		private CheckEventValue<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckEventValue_SpawnPointInfo;

		[Token(Token = "0x4003693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2908")]
		private CheckEventValue<LayerMask> NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_LayerMask;

		[Token(Token = "0x4003694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2910")]
		private CheckUnityEvent<bool> NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Boolean;

		[Token(Token = "0x4003695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2918")]
		private CheckUnityEvent<float> NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Single;

		[Token(Token = "0x4003696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2920")]
		private CheckUnityEvent<int> NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Int32;

		[Token(Token = "0x4003697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2928")]
		private CheckUnityEvent<Vector2> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector2;

		[Token(Token = "0x4003698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2930")]
		private CheckUnityEvent<Vector3> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector3;

		[Token(Token = "0x4003699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2938")]
		private CheckUnityEvent<Vector4> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector4;

		[Token(Token = "0x400369A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2940")]
		private CheckUnityEvent<Quaternion> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Quaternion;

		[Token(Token = "0x400369B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2948")]
		private CheckUnityEvent<Keyframe> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Keyframe;

		[Token(Token = "0x400369C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2950")]
		private CheckUnityEvent<Bounds> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Bounds;

		[Token(Token = "0x400369D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2958")]
		private CheckUnityEvent<Color> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Color;

		[Token(Token = "0x400369E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2960")]
		private CheckUnityEvent<Rect> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Rect;

		[Token(Token = "0x400369F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2968")]
		private CheckUnityEvent<ContactPoint> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint;

		[Token(Token = "0x40036A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2970")]
		private CheckUnityEvent<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40036A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2978")]
		private CheckUnityEvent<RaycastHit> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit;

		[Token(Token = "0x40036A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2980")]
		private CheckUnityEvent<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40036A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2988")]
		private CheckUnityEvent<Ray> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Ray;

		[Token(Token = "0x40036A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2990")]
		private CheckUnityEvent<Space> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Space;

		[Token(Token = "0x40036A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2998")]
		private CheckUnityEvent<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckUnityEvent_SpawnPointInfo;

		[Token(Token = "0x40036A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29A0")]
		private CheckUnityEvent<LayerMask> NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_LayerMask;

		[Token(Token = "0x40036A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29A8")]
		private CheckUnityEventValue<bool> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Boolean;

		[Token(Token = "0x40036A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29B0")]
		private CheckUnityEventValue<float> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Single;

		[Token(Token = "0x40036A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29B8")]
		private CheckUnityEventValue<int> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Int32;

		[Token(Token = "0x40036AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C0")]
		private CheckUnityEventValue<Vector2> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector2;

		[Token(Token = "0x40036AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C8")]
		private CheckUnityEventValue<Vector3> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector3;

		[Token(Token = "0x40036AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29D0")]
		private CheckUnityEventValue<Vector4> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector4;

		[Token(Token = "0x40036AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29D8")]
		private CheckUnityEventValue<Quaternion> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Quaternion;

		[Token(Token = "0x40036AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29E0")]
		private CheckUnityEventValue<Keyframe> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Keyframe;

		[Token(Token = "0x40036AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29E8")]
		private CheckUnityEventValue<Bounds> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Bounds;

		[Token(Token = "0x40036B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29F0")]
		private CheckUnityEventValue<Color> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Color;

		[Token(Token = "0x40036B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29F8")]
		private CheckUnityEventValue<Rect> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Rect;

		[Token(Token = "0x40036B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A00")]
		private CheckUnityEventValue<ContactPoint> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint;

		[Token(Token = "0x40036B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A08")]
		private CheckUnityEventValue<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40036B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A10")]
		private CheckUnityEventValue<RaycastHit> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit;

		[Token(Token = "0x40036B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A18")]
		private CheckUnityEventValue<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40036B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A20")]
		private CheckUnityEventValue<Ray> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Ray;

		[Token(Token = "0x40036B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A28")]
		private CheckUnityEventValue<Space> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Space;

		[Token(Token = "0x40036B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A30")]
		private CheckUnityEventValue<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_SpawnPointInfo;

		[Token(Token = "0x40036B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A38")]
		private CheckUnityEventValue<LayerMask> NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_LayerMask;

		[Token(Token = "0x40036BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A40")]
		private CheckVariable<bool> NodeCanvas_Tasks_Conditions_CheckVariable_System_Boolean;

		[Token(Token = "0x40036BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A48")]
		private CheckVariable<float> NodeCanvas_Tasks_Conditions_CheckVariable_System_Single;

		[Token(Token = "0x40036BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A50")]
		private CheckVariable<int> NodeCanvas_Tasks_Conditions_CheckVariable_System_Int32;

		[Token(Token = "0x40036BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A58")]
		private CheckVariable<Vector2> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector2;

		[Token(Token = "0x40036BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A60")]
		private CheckVariable<Vector3> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector3;

		[Token(Token = "0x40036BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A68")]
		private CheckVariable<Vector4> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector4;

		[Token(Token = "0x40036C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A70")]
		private CheckVariable<Quaternion> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Quaternion;

		[Token(Token = "0x40036C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A78")]
		private CheckVariable<Keyframe> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Keyframe;

		[Token(Token = "0x40036C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A80")]
		private CheckVariable<Bounds> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Bounds;

		[Token(Token = "0x40036C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A88")]
		private CheckVariable<Color> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Color;

		[Token(Token = "0x40036C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A90")]
		private CheckVariable<Rect> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Rect;

		[Token(Token = "0x40036C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A98")]
		private CheckVariable<ContactPoint> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint;

		[Token(Token = "0x40036C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AA0")]
		private CheckVariable<ContactPoint2D> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40036C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AA8")]
		private CheckVariable<RaycastHit> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit;

		[Token(Token = "0x40036C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AB0")]
		private CheckVariable<RaycastHit2D> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40036C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AB8")]
		private CheckVariable<Ray> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Ray;

		[Token(Token = "0x40036CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC0")]
		private CheckVariable<Space> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Space;

		[Token(Token = "0x40036CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC8")]
		private CheckVariable<SpawnPointInfo> NodeCanvas_Tasks_Conditions_CheckVariable_SpawnPointInfo;

		[Token(Token = "0x40036CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AD0")]
		private CheckVariable<LayerMask> NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_LayerMask;

		[Token(Token = "0x40036CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AD8")]
		private ListContainsElement<bool> NodeCanvas_Tasks_Conditions_ListContainsElement_System_Boolean;

		[Token(Token = "0x40036CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AE0")]
		private ListContainsElement<float> NodeCanvas_Tasks_Conditions_ListContainsElement_System_Single;

		[Token(Token = "0x40036CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AE8")]
		private ListContainsElement<int> NodeCanvas_Tasks_Conditions_ListContainsElement_System_Int32;

		[Token(Token = "0x40036D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AF0")]
		private ListContainsElement<Vector2> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector2;

		[Token(Token = "0x40036D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AF8")]
		private ListContainsElement<Vector3> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector3;

		[Token(Token = "0x40036D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B00")]
		private ListContainsElement<Vector4> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector4;

		[Token(Token = "0x40036D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B08")]
		private ListContainsElement<Quaternion> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Quaternion;

		[Token(Token = "0x40036D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B10")]
		private ListContainsElement<Keyframe> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Keyframe;

		[Token(Token = "0x40036D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B18")]
		private ListContainsElement<Bounds> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Bounds;

		[Token(Token = "0x40036D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B20")]
		private ListContainsElement<Color> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Color;

		[Token(Token = "0x40036D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B28")]
		private ListContainsElement<Rect> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Rect;

		[Token(Token = "0x40036D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B30")]
		private ListContainsElement<ContactPoint> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint;

		[Token(Token = "0x40036D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B38")]
		private ListContainsElement<ContactPoint2D> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40036DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B40")]
		private ListContainsElement<RaycastHit> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit;

		[Token(Token = "0x40036DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B48")]
		private ListContainsElement<RaycastHit2D> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40036DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B50")]
		private ListContainsElement<Ray> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Ray;

		[Token(Token = "0x40036DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B58")]
		private ListContainsElement<Space> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Space;

		[Token(Token = "0x40036DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B60")]
		private ListContainsElement<SpawnPointInfo> NodeCanvas_Tasks_Conditions_ListContainsElement_SpawnPointInfo;

		[Token(Token = "0x40036DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B68")]
		private ListContainsElement<LayerMask> NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_LayerMask;

		[Token(Token = "0x40036E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B70")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<bool> NodeCanvas_Tasks_Conditions_TryGetValue_System_Boolean;

		[Token(Token = "0x40036E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B78")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<float> NodeCanvas_Tasks_Conditions_TryGetValue_System_Single;

		[Token(Token = "0x40036E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B80")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<int> NodeCanvas_Tasks_Conditions_TryGetValue_System_Int32;

		[Token(Token = "0x40036E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B88")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Vector2> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector2;

		[Token(Token = "0x40036E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B90")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Vector3> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector3;

		[Token(Token = "0x40036E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B98")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Vector4> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector4;

		[Token(Token = "0x40036E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BA0")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Quaternion> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Quaternion;

		[Token(Token = "0x40036E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BA8")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Keyframe> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Keyframe;

		[Token(Token = "0x40036E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BB0")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Bounds> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Bounds;

		[Token(Token = "0x40036E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BB8")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Color> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Color;

		[Token(Token = "0x40036EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC0")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Rect> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Rect;

		[Token(Token = "0x40036EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC8")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<ContactPoint> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint;

		[Token(Token = "0x40036EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BD0")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<ContactPoint2D> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint2D;

		[Token(Token = "0x40036ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BD8")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<RaycastHit> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit;

		[Token(Token = "0x40036EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BE0")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<RaycastHit2D> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit2D;

		[Token(Token = "0x40036EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BE8")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Ray> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Ray;

		[Token(Token = "0x40036F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BF0")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<Space> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Space;

		[Token(Token = "0x40036F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BF8")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<SpawnPointInfo> NodeCanvas_Tasks_Conditions_TryGetValue_SpawnPointInfo;

		[Token(Token = "0x40036F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C00")]
		private NodeCanvas.Tasks.Conditions.TryGetValue<LayerMask> NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_LayerMask;

		[Token(Token = "0x600353B")]
		[Address(RVA = "0x1FACBB4", Offset = "0x1FACBB4", VA = "0x1FACBB4")]
		private void FlowCanvas_ValueHandler_Delegate()
		{
		}

		[Token(Token = "0x600353C")]
		[Address(RVA = "0x1FACBB8", Offset = "0x1FACBB8", VA = "0x1FACBB8")]
		private void FlowCanvas_Flow_ReadParameter_1()
		{
		}

		[Token(Token = "0x600353D")]
		[Address(RVA = "0x1FAD064", Offset = "0x1FAD064", VA = "0x1FAD064")]
		private void FlowCanvas_Flow_WriteParameter_2()
		{
		}

		[Token(Token = "0x600353E")]
		[Address(RVA = "0x1FADA68", Offset = "0x1FADA68", VA = "0x1FADA68")]
		private void FlowCanvas_FlowNode_AddValueInput_1()
		{
		}

		[Token(Token = "0x600353F")]
		[Address(RVA = "0x1FADB7C", Offset = "0x1FADB7C", VA = "0x1FADB7C")]
		private void FlowCanvas_FlowNode_AddValueOutput_2()
		{
		}

		[Token(Token = "0x6003540")]
		[Address(RVA = "0x1FADD74", Offset = "0x1FADD74", VA = "0x1FADD74")]
		private void FlowCanvas_FlowNode_AddValueOutput_3()
		{
		}

		[Token(Token = "0x6003541")]
		[Address(RVA = "0x1FADF6C", Offset = "0x1FADF6C", VA = "0x1FADF6C")]
		private void FlowCanvas_TypeConverter_GetConverterFuncFromTo_1()
		{
		}

		[Token(Token = "0x6003542")]
		[Address(RVA = "0x1FAE7C0", Offset = "0x1FAE7C0", VA = "0x1FAE7C0")]
		private void FlowCanvas_TypeConverter_QuickConvert_2()
		{
		}

		[Token(Token = "0x6003543")]
		[Address(RVA = "0x1FAEA74", Offset = "0x1FAEA74", VA = "0x1FAEA74")]
		private void FlowCanvas_ValueInput_CreateInstance_1()
		{
		}

		[Token(Token = "0x6003544")]
		[Address(RVA = "0x1FAF2C8", Offset = "0x1FAF2C8", VA = "0x1FAF2C8")]
		private void FlowCanvas_ValueOutput_CreateInstance_1()
		{
		}

		[Token(Token = "0x6003545")]
		[Address(RVA = "0x1FAFDC8", Offset = "0x1FAFDC8", VA = "0x1FAFDC8")]
		private void FlowCanvas_Nodes_ReflectedDelegateEvent_Callback1_1()
		{
		}

		[Token(Token = "0x6003546")]
		[Address(RVA = "0x1FAFFB4", Offset = "0x1FAFFB4", VA = "0x1FAFFB4")]
		private void FlowCanvas_Nodes_ReflectedUnityEvent_CallbackMethod1_1()
		{
		}

		[Token(Token = "0x6003547")]
		[Address(RVA = "0x1FB01A0", Offset = "0x1FB01A0", VA = "0x1FB01A0")]
		private void NodeCanvas_Framework_Blackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x6003548")]
		[Address(RVA = "0x1FB02B4", Offset = "0x1FB02B4", VA = "0x1FB02B4")]
		private void NodeCanvas_Framework_Blackboard_GetVariableValue_2()
		{
		}

		[Token(Token = "0x6003549")]
		[Address(RVA = "0x1FB03C8", Offset = "0x1FB03C8", VA = "0x1FB03C8")]
		private void NodeCanvas_Framework_IBlackboardExtensions_AddVariable_1()
		{
		}

		[Token(Token = "0x600354A")]
		[Address(RVA = "0x1FB0FAC", Offset = "0x1FB0FAC", VA = "0x1FB0FAC")]
		private void NodeCanvas_Framework_IBlackboardExtensions_AddVariable_2()
		{
		}

		[Token(Token = "0x600354B")]
		[Address(RVA = "0x1FB16F4", Offset = "0x1FB16F4", VA = "0x1FB16F4")]
		private void NodeCanvas_Framework_IBlackboardExtensions_GetVariableValue_3()
		{
		}

		[Token(Token = "0x600354C")]
		[Address(RVA = "0x1FB1E64", Offset = "0x1FB1E64", VA = "0x1FB1E64")]
		private void NodeCanvas_Framework_IBlackboardExtensions_GetVariable_4()
		{
		}

		[Token(Token = "0x600354D")]
		[Address(RVA = "0x1FB25AC", Offset = "0x1FB25AC", VA = "0x1FB25AC")]
		private void CustomSpoof()
		{
		}

		[Token(Token = "0x600354E")]
		[Address(RVA = "0x1FB25B0", Offset = "0x1FB25B0", VA = "0x1FB25B0")]
		public AOTDummy()
		{
		}
	}
}
