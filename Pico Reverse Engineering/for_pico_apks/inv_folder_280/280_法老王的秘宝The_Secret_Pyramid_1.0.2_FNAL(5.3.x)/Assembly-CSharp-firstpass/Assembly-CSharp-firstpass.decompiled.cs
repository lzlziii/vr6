using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using Chronos;
using Chronos.Reflection;
using DG.Tweening;
using DG.Tweening.Core;
using FlowCanvas.Macros;
using FlowCanvas.Nodes;
using Il2CppDummyDll;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.DialogueTrees;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using NodeCanvas.StateMachines;
using ParadoxNotion;
using ParadoxNotion.Animation;
using ParadoxNotion.Design;
using ParadoxNotion.Serialization;
using ParadoxNotion.Serialization.FullSerializer;
using ParadoxNotion.Services;
using RootMotion.FinalIK;
using SWS;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using VRNetLib;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public enum EAttackDir
{
	[Token(Token = "0x4000002")]
	none,
	[Token(Token = "0x4000003")]
	left,
	[Token(Token = "0x4000004")]
	right,
	[Token(Token = "0x4000005")]
	up,
	[Token(Token = "0x4000006")]
	down
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01960", Offset = "0xE01960")]
[ExecuteInEditMode]
public class SF_PPE_DamageReact : MonoBehaviour
{
	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE019D0", Offset = "0xE019D0")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onFadeComplete;

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x2EE8540", Offset = "0x2EE8540", VA = "0x2EE8540")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x2EE8548", Offset = "0x2EE8548", VA = "0x2EE8548")]
		internal void <ScreenFadeOutIn>b__0()
		{
		}
	}

	[Token(Token = "0x2000005")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE019E0", Offset = "0xE019E0")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hasParent;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject shakeParent;

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x312DE2C", Offset = "0x312DE2C", VA = "0x312DE2C")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x312DE34", Offset = "0x312DE34", VA = "0x312DE34")]
		internal void <ShakeCamera>b__0()
		{
		}
	}

	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE019F0", Offset = "0xE019F0")]
	private sealed class <BurnOff>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000025")]
			[Address(RVA = "0x312E088", Offset = "0x312E088", VA = "0x312E088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000027")]
			[Address(RVA = "0x312E0D0", Offset = "0x312E0D0", VA = "0x312E0D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000022")]
		[Address(RVA = "0x312DF0C", Offset = "0x312DF0C", VA = "0x312DF0C")]
		[DebuggerHidden]
		public <BurnOff>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x312DF38", Offset = "0x312DF38", VA = "0x312DF38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x312DF3C", Offset = "0x312DF3C", VA = "0x312DF3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x312E090", Offset = "0x312E090", VA = "0x312E090", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01A00", Offset = "0xE01A00")]
	private sealed class <PoisonOff>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002B")]
			[Address(RVA = "0x312E394", Offset = "0x312E394", VA = "0x312E394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600002D")]
			[Address(RVA = "0x312E3DC", Offset = "0x312E3DC", VA = "0x312E3DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x312E218", Offset = "0x312E218", VA = "0x312E218")]
		[DebuggerHidden]
		public <PoisonOff>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000029")]
		[Address(RVA = "0x312E244", Offset = "0x312E244", VA = "0x312E244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002A")]
		[Address(RVA = "0x312E248", Offset = "0x312E248", VA = "0x312E248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x312E39C", Offset = "0x312E39C", VA = "0x312E39C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01A10", Offset = "0xE01A10")]
	private sealed class <SprayOff>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000031")]
			[Address(RVA = "0x312E570", Offset = "0x312E570", VA = "0x312E570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000033")]
			[Address(RVA = "0x312E5B8", Offset = "0x312E5B8", VA = "0x312E5B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x312E3E4", Offset = "0x312E3E4", VA = "0x312E3E4")]
		[DebuggerHidden]
		public <SprayOff>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600002F")]
		[Address(RVA = "0x312E410", Offset = "0x312E410", VA = "0x312E410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x312E414", Offset = "0x312E414", VA = "0x312E414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x312E578", Offset = "0x312E578", VA = "0x312E578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000009")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01A20", Offset = "0xE01A20")]
	private sealed class <BurnToDeath>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SF_PPE_DamageReact <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000037")]
			[Address(RVA = "0x312E1C8", Offset = "0x312E1C8", VA = "0x312E1C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000039")]
			[Address(RVA = "0x312E210", Offset = "0x312E210", VA = "0x312E210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x312E0D8", Offset = "0x312E0D8", VA = "0x312E0D8")]
		[DebuggerHidden]
		public <BurnToDeath>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x312E104", Offset = "0x312E104", VA = "0x312E104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x312E108", Offset = "0x312E108", VA = "0x312E108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x312E1D0", Offset = "0x312E1D0", VA = "0x312E1D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_material;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D leftTex;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture2D rightTex;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D upTex;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture2D downTex;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color m_bloodColor;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color m_poisonColor;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fadeOutTime;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color curOverlayColor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bReadyForAttack;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool m_bReadyForBurn;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool m_bReadyForPoison;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	private bool m_bReadyForSpray;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_bInitialized;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool m_bReadyForShake;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string m_blendTexName;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string m_flowTexName;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_noiseTexName;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string m_burnTexName;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string m_directonName;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string m_weightName;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string m_liquidBlendName;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string m_liquidColorName;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string m_burnBlend;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string m_verticalSweep;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string m_overlayName;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private IEnumerator co_burnOff;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private IEnumerator co_poisonOff;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IEnumerator co_sprayOff;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private IEnumerator co_burnToDie;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Tweener tweenDirFadeIn;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Tweener tweenBurn;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Tweener tweenDeath;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Tweener tweenSprayIn;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Tweener tweenSprayOut;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Tweener tweenScreenFade;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x2B44E90", Offset = "0x2B44E90", VA = "0x2B44E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x2B44EB4", Offset = "0x2B44EB4", VA = "0x2B44EB4")]
	public void InitParam()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x2B4542C", Offset = "0x2B4542C", VA = "0x2B4542C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x2B45520", Offset = "0x2B45520", VA = "0x2B45520")]
	public void OnTestAction(int dirNum)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x2B455C8", Offset = "0x2B455C8", VA = "0x2B455C8")]
	public void OnTestSetColor()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x2B45574", Offset = "0x2B45574", VA = "0x2B45574")]
	public void EncounterAttack(EAttackDir direction)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x2B45858", Offset = "0x2B45858", VA = "0x2B45858")]
	public void Burn()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2B45A60", Offset = "0x2B45A60", VA = "0x2B45A60")]
	public void Poisoning()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x2B45B5C", Offset = "0x2B45B5C", VA = "0x2B45B5C")]
	public void SprayBlood()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x2B45CA4", Offset = "0x2B45CA4", VA = "0x2B45CA4")]
	public void ToDie()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x2B45D84", Offset = "0x2B45D84", VA = "0x2B45D84")]
	public void BurnToDie()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x2B45E38", Offset = "0x2B45E38", VA = "0x2B45E38")]
	public void ScreenFadeOutIn(bool bOut, float duration, Action onFadeComplete)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x2B45F6C", Offset = "0x2B45F6C", VA = "0x2B45F6C")]
	public void ScreenFadeStop()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x2B45F84", Offset = "0x2B45F84", VA = "0x2B45F84")]
	public void ShakeCamera(float strength, float shakeDuration)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x2B45258", Offset = "0x2B45258", VA = "0x2B45258")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x2B45660", Offset = "0x2B45660", VA = "0x2B45660")]
	private void FadeIn(Texture2D texture, float dirNum)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x2B459D4", Offset = "0x2B459D4", VA = "0x2B459D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE23FC4", Offset = "0xE23FC4")]
	private IEnumerator BurnOff(float waitTime, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x2B46264", Offset = "0x2B46264", VA = "0x2B46264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24024", Offset = "0xE24024")]
	private IEnumerator PoisonOff(float waitTime, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x2B462F0", Offset = "0x2B462F0", VA = "0x2B462F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24084", Offset = "0xE24084")]
	private IEnumerator SprayOff(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x2B45DC0", Offset = "0x2B45DC0", VA = "0x2B45DC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE240E4", Offset = "0xE240E4")]
	private IEnumerator BurnToDeath()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x2B46378", Offset = "0x2B46378", VA = "0x2B46378")]
	private float DebugFloatValue(string name)
	{
		return default(float);
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x2B46394", Offset = "0x2B46394", VA = "0x2B46394")]
	public SF_PPE_DamageReact()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x2B46574", Offset = "0x2B46574", VA = "0x2B46574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24144", Offset = "0xE24144")]
	private void <Burn>b__42_0()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x2B46580", Offset = "0x2B46580", VA = "0x2B46580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24154", Offset = "0xE24154")]
	private void <Poisoning>b__43_0()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x2B465C4", Offset = "0x2B465C4", VA = "0x2B465C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24164", Offset = "0xE24164")]
	private void <SprayBlood>b__44_0()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x2B46608", Offset = "0x2B46608", VA = "0x2B46608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24174", Offset = "0xE24174")]
	private void <FadeIn>b__51_0()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x2B46624", Offset = "0x2B46624", VA = "0x2B46624")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24184", Offset = "0xE24184")]
	private void <BurnOff>b__52_0()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x2B46630", Offset = "0x2B46630", VA = "0x2B46630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24194", Offset = "0xE24194")]
	private void <PoisonOff>b__53_0()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x2B4663C", Offset = "0x2B4663C", VA = "0x2B4663C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE241A4", Offset = "0xE241A4")]
	private void <SprayOff>b__54_0()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class SF_PPE_EditorDebug : MonoBehaviour
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_mat;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x2B4667C", Offset = "0x2B4667C", VA = "0x2B4667C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x2B466FC", Offset = "0x2B466FC", VA = "0x2B466FC")]
	public SF_PPE_EditorDebug()
	{
	}
}
[Token(Token = "0x200000B")]
public class QuadDecal : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE15938", Offset = "0xE15938")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE15938", Offset = "0xE15938")]
	private int row;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1599C", Offset = "0xE1599C")]
	[SerializeField]
	private int column;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int itemRow;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int itemColumn;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE159DC", Offset = "0xE159DC")]
	private float size;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE15A28", Offset = "0xE15A28")]
	[SerializeField]
	private float offsetY;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool useRandom;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Transform> onDisappear;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2[] uv_0;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 uv_scale;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool IsNotHide;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int propertyID;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x26842B4", Offset = "0x26842B4", VA = "0x26842B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x2684444", Offset = "0x2684444", VA = "0x2684444")]
	private void SetUV()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x26844FC", Offset = "0x26844FC", VA = "0x26844FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x2684638", Offset = "0x2684638", VA = "0x2684638")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x26846CC", Offset = "0x26846CC", VA = "0x26846CC")]
	public void SetNotHide()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x26846D8", Offset = "0x26846D8", VA = "0x26846D8")]
	public QuadDecal()
	{
	}
}
[Token(Token = "0x200000C")]
public class QuadDecalPool : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	private const string metalTag = "Metal";

	[Token(Token = "0x4000051")]
	private const string cementTag = "Cement";

	[Token(Token = "0x4000052")]
	private const string woodTag = "Wood";

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int decalAmount;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject decalMetal;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject decalConcrete;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject decalWood;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] decalMetals;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] decalConcretes;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] decalWoods;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int indexMetal;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indexConcrete;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int indexWood;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<GameObject, QuadDecal> decalDic;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject curDecalGO;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x2684708", Offset = "0x2684708", VA = "0x2684708")]
	public void Init()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x2684A34", Offset = "0x2684A34", VA = "0x2684A34")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x2684A88", Offset = "0x2684A88", VA = "0x2684A88")]
	public void SpawnDecal(GameObject hitGO, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x2684BD0", Offset = "0x2684BD0", VA = "0x2684BD0")]
	private void PlaceDecal(ref int index, GameObject[] decals, GameObject hitGO, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x268474C", Offset = "0x268474C", VA = "0x268474C")]
	private void GenerateDecals(GameObject source, out GameObject[] targets)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x2684F90", Offset = "0x2684F90", VA = "0x2684F90")]
	public void Recycle(GameObject go)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x2685010", Offset = "0x2685010", VA = "0x2685010")]
	private void ResetDecalToChild(Transform childTran)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x2685064", Offset = "0x2685064", VA = "0x2685064")]
	public QuadDecalPool()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01A68", Offset = "0xE01A68")]
public class BulletEffectManager : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	private const string metalTag = "Metal";

	[Token(Token = "0x4000060")]
	private const string concreteTag = "Concrete";

	[Token(Token = "0x4000061")]
	private const string cementTag = "Cement";

	[Token(Token = "0x4000062")]
	private const string glassTag = "Glass";

	[Token(Token = "0x4000063")]
	private const string woodTag = "Wood";

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ptLaunch;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject decalRoot;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleCollisionEvent> ptEvents;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public QuadDecalPool quadDecal;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleDecalPool decalMetal;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleDecalPool decalConcrete;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleDecalPool decalGlass;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleDecalPool decalWood;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x2DF5798", Offset = "0x2DF5798", VA = "0x2DF5798")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x2DF5AA0", Offset = "0x2DF5AA0", VA = "0x2DF5AA0")]
	public void LaunchBullet()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x2DF5AC0", Offset = "0x2DF5AC0", VA = "0x2DF5AC0")]
	public void LaunchBullet(Vector3 pos, [Optional] Vector3 rot)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x2DF5B80", Offset = "0x2DF5B80", VA = "0x2DF5B80")]
	public void SpawnDecal(string tag, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x2DF5E98", Offset = "0x2DF5E98", VA = "0x2DF5E98")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x2DF5D0C", Offset = "0x2DF5D0C", VA = "0x2DF5D0C")]
	private void PlaceDecal(ParticleDecalPool decal, Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x2DF59A4", Offset = "0x2DF59A4", VA = "0x2DF59A4")]
	private ParticleDecalPool GenerateDecalInstance(ParticleDecalPool decal)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x2DF6010", Offset = "0x2DF6010", VA = "0x2DF6010")]
	public BulletEffectManager()
	{
	}
}
[Token(Token = "0x200000E")]
public class BulletEffectTest : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BulletEffectManager bullet;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x2DF6094", Offset = "0x2DF6094", VA = "0x2DF6094")]
	private void Update()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x2DF629C", Offset = "0x2DF629C", VA = "0x2DF629C")]
	public BulletEffectTest()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01AC8", Offset = "0xE01AC8")]
public class ParticleDecalPool : MonoBehaviour
{
	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01B28", Offset = "0xE01B28")]
	private sealed class <DelayRecycle>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleDecalPool <>4__this;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0x2EE3250", Offset = "0x2EE3250", VA = "0x2EE3250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005E")]
			[Address(RVA = "0x2EE3298", Offset = "0x2EE3298", VA = "0x2EE3298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x2EE30B0", Offset = "0x2EE30B0", VA = "0x2EE30B0")]
		[DebuggerHidden]
		public <DelayRecycle>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0x2EE30DC", Offset = "0x2EE30DC", VA = "0x2EE30DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x2EE30E0", Offset = "0x2EE30E0", VA = "0x2EE30E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x2EE3258", Offset = "0x2EE3258", VA = "0x2EE3258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE15B0C", Offset = "0xE15B0C")]
	[SerializeField]
	private int maxDecals;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float decalSizeMin;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float decalSizeMax;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE15B78", Offset = "0xE15B78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE15B78", Offset = "0xE15B78")]
	[SerializeField]
	private float offsetY;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE15BDC", Offset = "0xE15BDC")]
	private float delayRecycle;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem ptDecal;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int ptDecalDataIndex;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.Particle[] tempPTs;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator co_complete;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds wait;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForSeconds wait2;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x26A48D0", Offset = "0x26A48D0", VA = "0x26A48D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x26A495C", Offset = "0x26A495C", VA = "0x26A495C")]
	public void ParticleHit(Vector3 normal, Vector3 pos)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x26A4C60", Offset = "0x26A4C60", VA = "0x26A4C60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE242F4", Offset = "0xE242F4")]
	private IEnumerator DelayRecycle()
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x26A4C34", Offset = "0x26A4C34", VA = "0x26A4C34")]
	private void SetDecalParticle()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x26A4CD8", Offset = "0x26A4CD8", VA = "0x26A4CD8")]
	public ParticleDecalPool()
	{
	}
}
[Token(Token = "0x2000011")]
public class ShowFPSTools : Singleton<ShowFPSTools>
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject view;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x2B4FA78", Offset = "0x2B4FA78", VA = "0x2B4FA78")]
	public void Show(Transform parent)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x2B4FBB0", Offset = "0x2B4FBB0", VA = "0x2B4FBB0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x2B4FC78", Offset = "0x2B4FC78", VA = "0x2B4FC78")]
	public ShowFPSTools()
	{
	}
}
[Token(Token = "0x2000012")]
public class ShowFPSView : MonoBehaviour
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x4000080")]
	private const string FPS_S_0 = "FPS:{0}";

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, string> fpsStrDic;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ui_root_obj;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float deltaTime;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x2B4FCF0", Offset = "0x2B4FCF0", VA = "0x2B4FCF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x2B500DC", Offset = "0x2B500DC", VA = "0x2B500DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x2B502BC", Offset = "0x2B502BC", VA = "0x2B502BC")]
	public ShowFPSView()
	{
	}
}
[Token(Token = "0x2000013")]
public class MatchTransform : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform parentTransform;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startParentPosition;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startParentRotationQ;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startParentScale;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startChildPosition;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion startChildRotationQ;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 startChildScale;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Matrix4x4 parentMatrix;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool matchScale;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[SerializeField]
	private bool useAbsoluteTransform;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x2CFCA14", Offset = "0x2CFCA14", VA = "0x2CFCA14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x2CFCC1C", Offset = "0x2CFCC1C", VA = "0x2CFCC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x2CFCC20", Offset = "0x2CFCC20", VA = "0x2CFCC20")]
	private void MatchTargetTran()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x2CFCAFC", Offset = "0x2CFCAFC", VA = "0x2CFCAFC")]
	private void InitTransform()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x2CFCE88", Offset = "0x2CFCE88", VA = "0x2CFCE88")]
	private Vector3 DivideVectors(Vector3 num, Vector3 den)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x2CFCE98", Offset = "0x2CFCE98", VA = "0x2CFCE98")]
	public MatchTransform()
	{
	}
}
[Token(Token = "0x2000014")]
public class MonoSingleton<T> : MonoBehaviour where T : Component, new()
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T mInstance;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject mInstanceGameObject;

	[Token(Token = "0x1700000B")]
	public static T Instance
	{
		[Token(Token = "0x600006B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006C")]
	public static T CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	public static void DestoryInstance()
	{
	}

	[Token(Token = "0x600006E")]
	public MonoSingleton()
	{
	}
}
[Token(Token = "0x2000015")]
public class lz4
{
	[Token(Token = "0x2000016")]
	public class API
	{
		[Token(Token = "0x4000090")]
		private const string LUADLL = "lz4";

		[PreserveSig]
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x3137354", Offset = "0x3137354", VA = "0x3137354")]
		public static extern int Unity_LZ4_compress(IntPtr src, int srcSize, IntPtr dst, int dstCapacity, int compressionLevel);

		[PreserveSig]
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x3137404", Offset = "0x3137404", VA = "0x3137404")]
		public static extern int Unity_LZ4_compressSize(int srcSize, int compressionLevel);

		[PreserveSig]
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x3137494", Offset = "0x3137494", VA = "0x3137494")]
		public static extern int Unity_LZ4_uncompressSize(IntPtr srcBuffer, int srcSize);

		[PreserveSig]
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x3137524", Offset = "0x3137524", VA = "0x3137524")]
		public static extern int Unity_LZ4_decompress(IntPtr src, int srcSize, IntPtr dst, int dstCapacity);

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x31375CC", Offset = "0x31375CC", VA = "0x31375CC")]
		public API()
		{
		}
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x2725F38", Offset = "0x2725F38", VA = "0x2725F38")]
	public static BytesPackage Compress(BytesPackage input, int compressionLevel = 3)
	{
		return null;
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x27260A0", Offset = "0x27260A0", VA = "0x27260A0")]
	public static BytesPackage Decompress(BytesPackage input)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x27261D4", Offset = "0x27261D4", VA = "0x27261D4")]
	public lz4()
	{
	}
}
[Token(Token = "0x2000017")]
public class Singleton<T> where T : new()
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x1700000C")]
	public static T Instance
	{
		[Token(Token = "0x600007A")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000078")]
	static Singleton()
	{
	}

	[Token(Token = "0x6000079")]
	protected Singleton()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class ControllerJsonData
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int CtrlType;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DeviceCode;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x282C834", Offset = "0x282C834", VA = "0x282C834")]
	public ControllerJsonData()
	{
	}
}
[Token(Token = "0x2000019")]
public class ControllerSelector_DataStorage
{
	[Token(Token = "0x4000094")]
	private const string mFolderName = "C:/GoodVRGame/CSDeviceConfig/";

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string mFilePath;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ControllerJsonData> Dic_Value;

	[Token(Token = "0x1700000D")]
	private static string FilePaht
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x282C83C", Offset = "0x282C83C", VA = "0x282C83C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	private static string FolderName
	{
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x282C9A8", Offset = "0x282C9A8", VA = "0x282C9A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x282CA20", Offset = "0x282CA20", VA = "0x282CA20")]
	public List<ControllerJsonData> GetJsonData()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x282CA28", Offset = "0x282CA28", VA = "0x282CA28")]
	public void SetJsonData(List<ControllerJsonData> list)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x282CCA4", Offset = "0x282CCA4", VA = "0x282CCA4")]
	public void ReadToData()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x282CD00", Offset = "0x282CD00", VA = "0x282CD00")]
	private void Read()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x282CB18", Offset = "0x282CB18", VA = "0x282CB18")]
	private void Save()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x282CFAC", Offset = "0x282CFAC", VA = "0x282CFAC")]
	public ControllerSelector_DataStorage()
	{
	}
}
[Token(Token = "0x200001A")]
public enum e_ControllerSelectorType
{
	[Token(Token = "0x4000098")]
	None,
	[Token(Token = "0x4000099")]
	LeftHand,
	[Token(Token = "0x400009A")]
	RightHand,
	[Token(Token = "0x400009B")]
	Waist
}
[Token(Token = "0x200001B")]
public class SteamVR_ControllerSelector : MonoBehaviour
{
	[Token(Token = "0x200001C")]
	public enum e_DeviceType
	{
		[Token(Token = "0x40000A7")]
		Unknown,
		[Token(Token = "0x40000A8")]
		HMD,
		[Token(Token = "0x40000A9")]
		BaseStation,
		[Token(Token = "0x40000AA")]
		Controller_mr,
		[Token(Token = "0x40000AB")]
		Controller_vive,
		[Token(Token = "0x40000AC")]
		Tracker
	}

	[Token(Token = "0x200001D")]
	public class DeviceTypeData
	{
		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_DeviceType DType;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string TypeName;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> MatchingList;

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x312F808", Offset = "0x312F808", VA = "0x312F808")]
		public DeviceTypeData(e_DeviceType type, string typeName, List<string> matchList)
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x312F8A8", Offset = "0x312F8A8", VA = "0x312F8A8")]
		public bool IsMatch(string source, int index)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200001E")]
	public class ControllerData
	{
		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_ControllerSelectorType CtrlType;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceCode;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<ControllerData> ConnectAction;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15C58", Offset = "0xE15C58")]
		private int <CurIndex>k__BackingField;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15C68", Offset = "0xE15C68")]
		private bool <IsConnected>k__BackingField;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15C78", Offset = "0xE15C78")]
		private e_DeviceType <CurDeviceType>k__BackingField;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15C88", Offset = "0xE15C88")]
		private bool <IsLeft>k__BackingField;

		[Token(Token = "0x17000010")]
		public int CurIndex
		{
			[Token(Token = "0x600009D")]
			[Address(RVA = "0x312F798", Offset = "0x312F798", VA = "0x312F798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE243A4", Offset = "0xE243A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600009E")]
			[Address(RVA = "0x312F7A0", Offset = "0x312F7A0", VA = "0x312F7A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE243B4", Offset = "0xE243B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000011")]
		public bool IsConnected
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0x312F7A8", Offset = "0x312F7A8", VA = "0x312F7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE243C4", Offset = "0xE243C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000A0")]
			[Address(RVA = "0x312F7B0", Offset = "0x312F7B0", VA = "0x312F7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE243D4", Offset = "0xE243D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public e_DeviceType CurDeviceType
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0x312F7BC", Offset = "0x312F7BC", VA = "0x312F7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE243E4", Offset = "0xE243E4")]
			get
			{
				return default(e_DeviceType);
			}
			[Token(Token = "0x60000A2")]
			[Address(RVA = "0x312F7C4", Offset = "0x312F7C4", VA = "0x312F7C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE243F4", Offset = "0xE243F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000013")]
		public bool IsLeft
		{
			[Token(Token = "0x60000A3")]
			[Address(RVA = "0x312F7CC", Offset = "0x312F7CC", VA = "0x312F7CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24404", Offset = "0xE24404")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000A4")]
			[Address(RVA = "0x312F7D4", Offset = "0x312F7D4", VA = "0x312F7D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24414", Offset = "0xE24414")]
			set
			{
			}
		}

		[Token(Token = "0x17000014")]
		public string SetDeviceCode
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x312F7E0", Offset = "0x312F7E0", VA = "0x312F7E0")]
			set
			{
			}
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x312F7E8", Offset = "0x312F7E8", VA = "0x312F7E8")]
		public ControllerData()
		{
		}
	}

	[Token(Token = "0x200001F")]
	public class DeviceCodeInfo
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Index;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsConnected;

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x312F7F0", Offset = "0x312F7F0", VA = "0x312F7F0")]
		public void Set(int index, bool isConnect)
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x312F800", Offset = "0x312F800", VA = "0x312F800")]
		public DeviceCodeInfo()
		{
		}
	}

	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01B38", Offset = "0xE01B38")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ControllerJsonData> config;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int i;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<ControllerData> <>9__0;

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x312F700", Offset = "0x312F700", VA = "0x312F700")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x312F708", Offset = "0x312F708", VA = "0x312F708")]
		internal bool <InitJsonConfigData>b__0(ControllerData a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400009C")]
	public const int NoDeviceIndex = -1;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<e_DeviceType, DeviceTypeData> deviceTypeName;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, DeviceCodeInfo> mDeviceCodeDic;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AdaptionHandleController;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsUseLocalFileConfig;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ControllerData> Controllers;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mRefreshIntervalTime;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mRunTime;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerSelector_DataStorage storageTool;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action controllerRefresh;

	[Token(Token = "0x1700000F")]
	public Dictionary<string, DeviceCodeInfo> DeviceCodeDic
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x25896B0", Offset = "0x25896B0", VA = "0x25896B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x2588CB4", Offset = "0x2588CB4", VA = "0x2588CB4")]
	public SteamVR_ControllerSelector()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x25891BC", Offset = "0x25891BC", VA = "0x25891BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x25891C0", Offset = "0x25891C0", VA = "0x25891C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x25891C4", Offset = "0x25891C4", VA = "0x25891C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x25891EC", Offset = "0x25891EC", VA = "0x25891EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x2589234", Offset = "0x2589234", VA = "0x2589234")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x2589238", Offset = "0x2589238", VA = "0x2589238")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x2589260", Offset = "0x2589260", VA = "0x2589260")]
	private void SetDevice(int index, bool connected)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x25891D8", Offset = "0x25891D8", VA = "0x25891D8")]
	private void Init()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x258940C", Offset = "0x258940C", VA = "0x258940C")]
	private void InitJsonConfigData()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x2589408", Offset = "0x2589408", VA = "0x2589408")]
	public void RefreshControllers()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x25895E8", Offset = "0x25895E8", VA = "0x25895E8")]
	public void RefreshControllerBase()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x2589654", Offset = "0x2589654", VA = "0x2589654")]
	private void UpdateControllersWithCode()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x25896B8", Offset = "0x25896B8", VA = "0x25896B8")]
	public ControllerData GetCotrollerData(e_ControllerSelectorType type)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x2589768", Offset = "0x2589768", VA = "0x2589768")]
	public ControllerData GetCotrollerData(int index)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x2589818", Offset = "0x2589818", VA = "0x2589818")]
	public bool IsLeftHand(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x2589820", Offset = "0x2589820", VA = "0x2589820")]
	public bool IsRightHand(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x2589828", Offset = "0x2589828", VA = "0x2589828")]
	public string GetDevicePropertyModelName(int index)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x258986C", Offset = "0x258986C", VA = "0x258986C")]
	public e_DeviceType GetDeviceType(int index)
	{
		return default(e_DeviceType);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x2589A0C", Offset = "0x2589A0C", VA = "0x2589A0C")]
	public string GetDeviceTypeName(int index)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x2589A70", Offset = "0x2589A70", VA = "0x2589A70")]
	public void SaveCtrlDataTojson()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE01B48", Offset = "0xE01B48")]
public class GlobalClockAttribute : PropertyAttribute
{
	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x29BDE44", Offset = "0x29BDE44", VA = "0x29BDE44")]
	public GlobalClockAttribute()
	{
	}
}
[Token(Token = "0x2000022")]
public class QuickStart : MonoBehaviour
{
	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x26850F0", Offset = "0x26850F0", VA = "0x26850F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x2685160", Offset = "0x2685160", VA = "0x2685160")]
	public QuickStart()
	{
	}
}
[Token(Token = "0x2000023")]
public class TweenFragment : MonoBehaviour
{
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPos;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpTime;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initPos;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x27B49D0", Offset = "0x27B49D0", VA = "0x27B49D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x27B4A10", Offset = "0x27B4A10", VA = "0x27B4A10")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x27B4AEC", Offset = "0x27B4AEC", VA = "0x27B4AEC")]
	public TweenFragment()
	{
	}
}
[Token(Token = "0x2000024")]
public class Go : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01B80", Offset = "0xE01B80")]
	private sealed class <timeScaleIndependentUpdate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Go <>4__this;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x2731138", Offset = "0x2731138", VA = "0x2731138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0x2731180", Offset = "0x2731180", VA = "0x2731180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x2730FCC", Offset = "0x2730FCC", VA = "0x2730FCC")]
		[DebuggerHidden]
		public <timeScaleIndependentUpdate>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x2730FF8", Offset = "0x2730FF8", VA = "0x2730FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x2730FFC", Offset = "0x2730FFC", VA = "0x2730FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x2731140", Offset = "0x2731140", VA = "0x2731140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GoEaseType defaultEaseType;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static GoLoopType defaultLoopType;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GoUpdateType defaultUpdateType;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static GoDuplicatePropertyRuleType duplicatePropertyRule;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GoLogLevel logLevel;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool validateTargetObjectsEachTick;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool _applicationIsQuitting;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<AbstractGoTween> _tweens;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _timeScaleIndependentUpdateIsRunning;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Go _instance;

	[Token(Token = "0x17000015")]
	public static Go instance
	{
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x29BDE4C", Offset = "0x29BDE4C", VA = "0x29BDE4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x29BE0FC", Offset = "0x29BE0FC", VA = "0x29BE0FC")]
	private void handleUpdateOfType(GoUpdateType updateType, float deltaTime)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x29BE454", Offset = "0x29BE454", VA = "0x29BE454")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x29BE4EC", Offset = "0x29BE4EC", VA = "0x29BE4EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x29BE584", Offset = "0x29BE584", VA = "0x29BE584")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x29BE61C", Offset = "0x29BE61C", VA = "0x29BE61C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x29BE6E8", Offset = "0x29BE6E8", VA = "0x29BE6E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24424", Offset = "0xE24424")]
	private IEnumerator timeScaleIndependentUpdate()
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x29BE760", Offset = "0x29BE760", VA = "0x29BE760")]
	private static bool handleDuplicatePropertiesInTween(GoTween tween)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x29BEE40", Offset = "0x29BEE40", VA = "0x29BEE40")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE24484", Offset = "0xE24484")]
	private static void log(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x29BEF10", Offset = "0x29BEF10", VA = "0x29BEF10")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE244BC", Offset = "0xE244BC")]
	public static void warn(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x29BF054", Offset = "0x29BF054", VA = "0x29BF054")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE244F4", Offset = "0xE244F4")]
	public static void error(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x29BF1C0", Offset = "0x29BF1C0", VA = "0x29BF1C0")]
	public static GoTween to(object target, float duration, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x29BF7F8", Offset = "0x29BF7F8", VA = "0x29BF7F8")]
	public static GoTween from(object target, float duration, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x29BF504", Offset = "0x29BF504", VA = "0x29BF504")]
	public static void addTween(AbstractGoTween tween)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x29BE2B4", Offset = "0x29BE2B4", VA = "0x29BE2B4")]
	public static bool removeTween(AbstractGoTween tween)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x29BF8C8", Offset = "0x29BF8C8", VA = "0x29BF8C8")]
	public static List<AbstractGoTween> tweensWithId(int id)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x29BEB64", Offset = "0x29BEB64", VA = "0x29BEB64")]
	public static List<GoTween> tweensWithTarget(object target, bool traverseCollections = false)
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x29BFAB0", Offset = "0x29BFAB0", VA = "0x29BFAB0")]
	public static void killAllTweensWithTarget(object target)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x29BFC04", Offset = "0x29BFC04", VA = "0x29BFC04")]
	public Go()
	{
	}
}
[Token(Token = "0x2000026")]
public class GoDummyPath : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pathName;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pathColor;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> nodes;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useStandardHandles;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool forceStraightLinePath;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int pathResolution;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x29BFCF8", Offset = "0x29BFCF8", VA = "0x29BFCF8")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x29BFFE0", Offset = "0x29BFFE0", VA = "0x29BFFE0")]
	public GoDummyPath()
	{
	}
}
[Token(Token = "0x2000027")]
public class GoTween : AbstractGoTween
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15C98", Offset = "0xE15C98")]
	private object <target>k__BackingField;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15CA8", Offset = "0xE15CA8")]
	private float <delay>k__BackingField;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _elapsedDelay;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _delayComplete;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15CB8", Offset = "0xE15CB8")]
	private bool <isFrom>k__BackingField;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<AbstractTweenProperty> _tweenPropertyList;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string targetTypeString;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GoEaseType _easeType;

	[Token(Token = "0x17000018")]
	public object target
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x29C5084", Offset = "0x29C5084", VA = "0x29C5084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2457C", Offset = "0xE2457C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x29C508C", Offset = "0x29C508C", VA = "0x29C508C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2458C", Offset = "0xE2458C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public float delay
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x29C5094", Offset = "0x29C5094", VA = "0x29C5094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2459C", Offset = "0xE2459C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x29C509C", Offset = "0x29C509C", VA = "0x29C509C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE245AC", Offset = "0xE245AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool isFrom
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x29C50A4", Offset = "0x29C50A4", VA = "0x29C50A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE245BC", Offset = "0xE245BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x29C50AC", Offset = "0x29C50AC", VA = "0x29C50AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE245CC", Offset = "0xE245CC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public GoEaseType easeType
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x29C50B8", Offset = "0x29C50B8", VA = "0x29C50B8")]
		get
		{
			return default(GoEaseType);
		}
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x29C50C0", Offset = "0x29C50C0", VA = "0x29C50C0")]
		set
		{
		}
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x29BF288", Offset = "0x29BF288", VA = "0x29BF288")]
	public GoTween(object target, float duration, GoTweenConfig config, [Optional] Action<AbstractGoTween> onComplete)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x29C534C", Offset = "0x29C534C", VA = "0x29C534C", Slot = "10")]
	public override bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x29C55D0", Offset = "0x29C55D0", VA = "0x29C55D0", Slot = "11")]
	public override bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x29C51EC", Offset = "0x29C51EC", VA = "0x29C51EC")]
	public void addTweenProperty(AbstractTweenProperty tweenProp)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x29C55E0", Offset = "0x29C55E0", VA = "0x29C55E0", Slot = "12")]
	public override bool removeTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x29C5680", Offset = "0x29C5680", VA = "0x29C5680", Slot = "13")]
	public override bool containsTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x29C56E4", Offset = "0x29C56E4", VA = "0x29C56E4")]
	public void clearTweenProperties()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x29C5738", Offset = "0x29C5738", VA = "0x29C5738", Slot = "14")]
	public override List<AbstractTweenProperty> allTweenProperties()
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x29C5740", Offset = "0x29C5740", VA = "0x29C5740", Slot = "4")]
	protected override void onInit()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x29C57F0", Offset = "0x29C57F0", VA = "0x29C57F0", Slot = "15")]
	public override void destroy()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x29C5860", Offset = "0x29C5860", VA = "0x29C5860", Slot = "22")]
	public override void goTo(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x29C595C", Offset = "0x29C595C", VA = "0x29C595C", Slot = "21")]
	public override void complete()
	{
	}
}
[Token(Token = "0x2000028")]
public class GoTweenChain : AbstractGoTweenCollection
{
	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x29C5978", Offset = "0x29C5978", VA = "0x29C5978")]
	public GoTweenChain()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x29C5A60", Offset = "0x29C5A60", VA = "0x29C5A60")]
	public GoTweenChain(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x29C5A68", Offset = "0x29C5A68", VA = "0x29C5A68")]
	private void append(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x29C5C30", Offset = "0x29C5C30", VA = "0x29C5C30")]
	private void prepend(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x29C5EDC", Offset = "0x29C5EDC", VA = "0x29C5EDC")]
	public GoTweenChain append(AbstractGoTween tween)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x29C5F64", Offset = "0x29C5F64", VA = "0x29C5F64")]
	public GoTweenChain appendDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x29C5FE4", Offset = "0x29C5FE4", VA = "0x29C5FE4")]
	public GoTweenChain prepend(AbstractGoTween tween)
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x29C6060", Offset = "0x29C6060", VA = "0x29C6060")]
	public GoTweenChain prependDelay(float delay)
	{
		return null;
	}
}
[Token(Token = "0x2000029")]
public class GoTweenCollectionConfig
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int iterations;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GoLoopType loopType;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GoUpdateType propertyUpdateType;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<AbstractGoTween> onInitHandler;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<AbstractGoTween> onBeginHandler;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<AbstractGoTween> onIterationStartHandler;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<AbstractGoTween> onUpdateHandler;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<AbstractGoTween> onIterationEndHandler;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<AbstractGoTween> onCompleteHandler;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x29C60DC", Offset = "0x29C60DC", VA = "0x29C60DC")]
	public GoTweenCollectionConfig setIterations(int iterations)
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x29C60E4", Offset = "0x29C60E4", VA = "0x29C60E4")]
	public GoTweenCollectionConfig setIterations(int iterations, GoLoopType loopType)
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x29C60EC", Offset = "0x29C60EC", VA = "0x29C60EC")]
	public GoTweenCollectionConfig setUpdateType(GoUpdateType setUpdateType)
	{
		return null;
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x29C60F4", Offset = "0x29C60F4", VA = "0x29C60F4")]
	public GoTweenCollectionConfig onInit(Action<AbstractGoTween> onInit)
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x29C611C", Offset = "0x29C611C", VA = "0x29C611C")]
	public GoTweenCollectionConfig onBegin(Action<AbstractGoTween> onBegin)
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x29C6144", Offset = "0x29C6144", VA = "0x29C6144")]
	public GoTweenCollectionConfig onIterationStart(Action<AbstractGoTween> onIterationStart)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x29C616C", Offset = "0x29C616C", VA = "0x29C616C")]
	public GoTweenCollectionConfig onUpdate(Action<AbstractGoTween> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x29C6194", Offset = "0x29C6194", VA = "0x29C6194")]
	public GoTweenCollectionConfig onIterationEnd(Action<AbstractGoTween> onIterationEnd)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x29C61BC", Offset = "0x29C61BC", VA = "0x29C61BC")]
	public GoTweenCollectionConfig onComplete(Action<AbstractGoTween> onComplete)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x29C61E4", Offset = "0x29C61E4", VA = "0x29C61E4")]
	public GoTweenCollectionConfig setId(int id)
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x29C59D8", Offset = "0x29C59D8", VA = "0x29C59D8")]
	public GoTweenCollectionConfig()
	{
	}
}
[Token(Token = "0x200002A")]
public class GoTweenConfig
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AbstractTweenProperty> _tweenProperties;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int iterations;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int timeScale;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GoLoopType loopType;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GoEaseType easeType;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isPaused;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GoUpdateType propertyUpdateType;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFrom;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<AbstractGoTween> onInitHandler;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<AbstractGoTween> onBeginHandler;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<AbstractGoTween> onIterationStartHandler;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<AbstractGoTween> onUpdateHandler;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<AbstractGoTween> onIterationEndHandler;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<AbstractGoTween> onCompleteHandler;

	[Token(Token = "0x1700001C")]
	public List<AbstractTweenProperty> tweenProperties
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x29C61EC", Offset = "0x29C61EC", VA = "0x29C61EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x29C194C", Offset = "0x29C194C", VA = "0x29C194C")]
	public GoTweenConfig position(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x29C1AE8", Offset = "0x29C1AE8", VA = "0x29C1AE8")]
	public GoTweenConfig localPosition(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x29C61F4", Offset = "0x29C61F4", VA = "0x29C61F4")]
	public GoTweenConfig positionPath(GoSpline path, bool isRelative = false, GoLookAtType lookAtType = GoLookAtType.None, [Optional] Transform lookTarget)
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x29C62B0", Offset = "0x29C62B0", VA = "0x29C62B0")]
	public GoTweenConfig scale(float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x29C1C94", Offset = "0x29C1C94", VA = "0x29C1C94")]
	public GoTweenConfig scale(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x29C62C0", Offset = "0x29C62C0", VA = "0x29C62C0")]
	public GoTweenConfig scalePath(GoSpline path, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x29C1614", Offset = "0x29C1614", VA = "0x29C1614")]
	public GoTweenConfig eulerAngles(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x29C17B0", Offset = "0x29C17B0", VA = "0x29C17B0")]
	public GoTweenConfig localEulerAngles(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x29C12DC", Offset = "0x29C12DC", VA = "0x29C12DC")]
	public GoTweenConfig rotation(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x29C1478", Offset = "0x29C1478", VA = "0x29C1478")]
	public GoTweenConfig localRotation(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x29C6360", Offset = "0x29C6360", VA = "0x29C6360")]
	public GoTweenConfig rotation(Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x29C642C", Offset = "0x29C642C", VA = "0x29C642C")]
	public GoTweenConfig localRotation(Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x29C25F0", Offset = "0x29C25F0", VA = "0x29C25F0")]
	public GoTweenConfig materialColor(Color endValue, string colorName = "_Color", bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x29C1E44", Offset = "0x29C1E44", VA = "0x29C1E44")]
	public GoTweenConfig shake(Vector3 shakeMagnitude, GoShakeType shakeType = GoShakeType.Position, int frameMod = 1, bool useLocalProperties = false)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x29C64F8", Offset = "0x29C64F8", VA = "0x29C64F8")]
	public GoTweenConfig vector2Prop(string propertyName, Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x29C65B0", Offset = "0x29C65B0", VA = "0x29C65B0")]
	public GoTweenConfig vector3Prop(string propertyName, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x29C6678", Offset = "0x29C6678", VA = "0x29C6678")]
	public GoTweenConfig vector4Prop(string propertyName, Vector4 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x29C6748", Offset = "0x29C6748", VA = "0x29C6748")]
	public GoTweenConfig vector3PathProp(string propertyName, GoSpline path, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x29C67F8", Offset = "0x29C67F8", VA = "0x29C67F8")]
	public GoTweenConfig vector3XProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x29C68A8", Offset = "0x29C68A8", VA = "0x29C68A8")]
	public GoTweenConfig vector3YProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x29C6958", Offset = "0x29C6958", VA = "0x29C6958")]
	public GoTweenConfig vector3ZProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x29C6A08", Offset = "0x29C6A08", VA = "0x29C6A08")]
	public GoTweenConfig colorProp(string propertyName, Color endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x29C6AD8", Offset = "0x29C6AD8", VA = "0x29C6AD8")]
	public GoTweenConfig intProp(string propertyName, int endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x29C6B88", Offset = "0x29C6B88", VA = "0x29C6B88")]
	public GoTweenConfig floatProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x29C6C38", Offset = "0x29C6C38", VA = "0x29C6C38")]
	public GoTweenConfig addTweenProperty(AbstractTweenProperty tweenProp)
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x29C6CA4", Offset = "0x29C6CA4", VA = "0x29C6CA4")]
	public GoTweenConfig clearProperties()
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x29C6D00", Offset = "0x29C6D00", VA = "0x29C6D00")]
	public GoTweenConfig clearEvents()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x29C6D7C", Offset = "0x29C6D7C", VA = "0x29C6D7C")]
	public GoTweenConfig setDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x29C6D84", Offset = "0x29C6D84", VA = "0x29C6D84")]
	public GoTweenConfig setIterations(int iterations)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x29C6D8C", Offset = "0x29C6D8C", VA = "0x29C6D8C")]
	public GoTweenConfig setIterations(int iterations, GoLoopType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x29C6D98", Offset = "0x29C6D98", VA = "0x29C6D98")]
	public GoTweenConfig setTimeScale(int timeScale)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x29C6DA0", Offset = "0x29C6DA0", VA = "0x29C6DA0")]
	public GoTweenConfig setEaseType(GoEaseType easeType)
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x29C6DA8", Offset = "0x29C6DA8", VA = "0x29C6DA8")]
	public GoTweenConfig startPaused()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x29C6DB4", Offset = "0x29C6DB4", VA = "0x29C6DB4")]
	public GoTweenConfig setUpdateType(GoUpdateType setUpdateType)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x29BF8BC", Offset = "0x29BF8BC", VA = "0x29BF8BC")]
	public GoTweenConfig setIsFrom()
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x29BF280", Offset = "0x29BF280", VA = "0x29BF280")]
	public GoTweenConfig setIsTo()
	{
		return null;
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x29C6DBC", Offset = "0x29C6DBC", VA = "0x29C6DBC")]
	public GoTweenConfig onInit(Action<AbstractGoTween> onInit)
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x29C6DE4", Offset = "0x29C6DE4", VA = "0x29C6DE4")]
	public GoTweenConfig onBegin(Action<AbstractGoTween> onBegin)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x29C6E0C", Offset = "0x29C6E0C", VA = "0x29C6E0C")]
	public GoTweenConfig onIterationStart(Action<AbstractGoTween> onIterationStart)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x29C6E34", Offset = "0x29C6E34", VA = "0x29C6E34")]
	public GoTweenConfig onUpdate(Action<AbstractGoTween> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x29C6E5C", Offset = "0x29C6E5C", VA = "0x29C6E5C")]
	public GoTweenConfig onIterationEnd(Action<AbstractGoTween> onIterationEnd)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x29C6E84", Offset = "0x29C6E84", VA = "0x29C6E84")]
	public GoTweenConfig onComplete(Action<AbstractGoTween> onComplete)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x29C6EAC", Offset = "0x29C6EAC", VA = "0x29C6EAC")]
	public GoTweenConfig setId(int id)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x29C11F0", Offset = "0x29C11F0", VA = "0x29C11F0")]
	public GoTweenConfig()
	{
	}
}
[Token(Token = "0x200002B")]
public class GoTweenFlow : AbstractGoTweenCollection
{
	[Serializable]
	[Token(Token = "0x200002C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01B90", Offset = "0xE01B90")]
	private sealed class <>c
	{
		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<TweenFlowItem> <>9__2_0;

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x27311EC", Offset = "0x27311EC", VA = "0x27311EC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x27311F4", Offset = "0x27311F4", VA = "0x27311F4")]
		internal int <insert>b__2_0(TweenFlowItem x, TweenFlowItem y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x29C6EB4", Offset = "0x29C6EB4", VA = "0x29C6EB4")]
	public GoTweenFlow()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x29C6F14", Offset = "0x29C6F14", VA = "0x29C6F14")]
	public GoTweenFlow(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x29C6F1C", Offset = "0x29C6F1C", VA = "0x29C6F1C")]
	private void insert(TweenFlowItem item)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x29C71EC", Offset = "0x29C71EC", VA = "0x29C71EC")]
	public GoTweenFlow insert(float startTime, AbstractGoTween tween)
	{
		return null;
	}
}
[Token(Token = "0x200002D")]
public abstract class AbstractGoTween
{
	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01BA0", Offset = "0xE01BA0")]
	private sealed class <waitForCompletion>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AbstractGoTween <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000161")]
			[Address(RVA = "0x2728AD8", Offset = "0x2728AD8", VA = "0x2728AD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000163")]
			[Address(RVA = "0x2728B20", Offset = "0x2728B20", VA = "0x2728B20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x2728A3C", Offset = "0x2728A3C", VA = "0x2728A3C")]
		[DebuggerHidden]
		public <waitForCompletion>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x2728A68", Offset = "0x2728A68", VA = "0x2728A68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x2728A6C", Offset = "0x2728A6C", VA = "0x2728A6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x2728AE0", Offset = "0x2728AE0", VA = "0x2728AE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15CC8", Offset = "0xE15CC8")]
	private GoTweenState <state>k__BackingField;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15CD8", Offset = "0xE15CD8")]
	private float <duration>k__BackingField;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15CE8", Offset = "0xE15CE8")]
	private float <totalDuration>k__BackingField;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15CF8", Offset = "0xE15CF8")]
	private float <timeScale>k__BackingField;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D08", Offset = "0xE15D08")]
	private GoUpdateType <updateType>k__BackingField;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D18", Offset = "0xE15D18")]
	private GoLoopType <loopType>k__BackingField;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D28", Offset = "0xE15D28")]
	private int <iterations>k__BackingField;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D38", Offset = "0xE15D38")]
	private bool <autoRemoveOnComplete>k__BackingField;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D48", Offset = "0xE15D48")]
	private bool <isReversed>k__BackingField;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D58", Offset = "0xE15D58")]
	private bool <allowEvents>k__BackingField;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	protected bool _didInit;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool _didBegin;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	protected bool _fireIterationStart;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	protected bool _fireIterationEnd;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float _elapsedTime;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _totalElapsedTime;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _isLoopingBackOnPingPong;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool _didIterateLastFrame;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	protected bool _didIterateThisFrame;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int _deltaIterations;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int _completedIterations;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Action<AbstractGoTween> _onInit;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Action<AbstractGoTween> _onBegin;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Action<AbstractGoTween> _onIterationStart;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<AbstractGoTween> _onUpdate;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Action<AbstractGoTween> _onIterationEnd;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Action<AbstractGoTween> _onComplete;

	[Token(Token = "0x1700001D")]
	public GoTweenState state
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x2A9A1F0", Offset = "0x2A9A1F0", VA = "0x2A9A1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE245DC", Offset = "0xE245DC")]
		get
		{
			return default(GoTweenState);
		}
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x2A9A1F8", Offset = "0x2A9A1F8", VA = "0x2A9A1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE245EC", Offset = "0xE245EC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public float duration
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x2A9A200", Offset = "0x2A9A200", VA = "0x2A9A200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE245FC", Offset = "0xE245FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x2A9A208", Offset = "0x2A9A208", VA = "0x2A9A208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2460C", Offset = "0xE2460C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float totalDuration
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x2A9A210", Offset = "0x2A9A210", VA = "0x2A9A210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2461C", Offset = "0xE2461C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x2A9A218", Offset = "0x2A9A218", VA = "0x2A9A218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2462C", Offset = "0xE2462C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public float timeScale
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x2A9A220", Offset = "0x2A9A220", VA = "0x2A9A220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2463C", Offset = "0xE2463C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x2A9A228", Offset = "0x2A9A228", VA = "0x2A9A228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2464C", Offset = "0xE2464C")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public GoUpdateType updateType
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x2A9A230", Offset = "0x2A9A230", VA = "0x2A9A230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2465C", Offset = "0xE2465C")]
		get
		{
			return default(GoUpdateType);
		}
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x2A9A238", Offset = "0x2A9A238", VA = "0x2A9A238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2466C", Offset = "0xE2466C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public GoLoopType loopType
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x2A9A240", Offset = "0x2A9A240", VA = "0x2A9A240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2467C", Offset = "0xE2467C")]
		get
		{
			return default(GoLoopType);
		}
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x2A9A248", Offset = "0x2A9A248", VA = "0x2A9A248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2468C", Offset = "0xE2468C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public int iterations
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x2A9A250", Offset = "0x2A9A250", VA = "0x2A9A250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2469C", Offset = "0xE2469C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x2A9A258", Offset = "0x2A9A258", VA = "0x2A9A258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE246AC", Offset = "0xE246AC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public bool autoRemoveOnComplete
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x2A9A260", Offset = "0x2A9A260", VA = "0x2A9A260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE246BC", Offset = "0xE246BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x2A9A268", Offset = "0x2A9A268", VA = "0x2A9A268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE246CC", Offset = "0xE246CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public bool isReversed
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x2A9A274", Offset = "0x2A9A274", VA = "0x2A9A274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE246DC", Offset = "0xE246DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x2A9A27C", Offset = "0x2A9A27C", VA = "0x2A9A27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE246EC", Offset = "0xE246EC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool allowEvents
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x2A9A288", Offset = "0x2A9A288", VA = "0x2A9A288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE246FC", Offset = "0xE246FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x2A9A290", Offset = "0x2A9A290", VA = "0x2A9A290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2470C", Offset = "0xE2470C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float totalElapsedTime
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x2A9A29C", Offset = "0x2A9A29C", VA = "0x2A9A29C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000028")]
	public bool isLoopingBackOnPingPong
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x2A9A2A4", Offset = "0x2A9A2A4", VA = "0x2A9A2A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public int completedIterations
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x2A9A2AC", Offset = "0x2A9A2AC", VA = "0x2A9A2AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x2A9A2B4", Offset = "0x2A9A2B4", VA = "0x2A9A2B4")]
	public void setOnInitHandler(Action<AbstractGoTween> onInit)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x2A9A2BC", Offset = "0x2A9A2BC", VA = "0x2A9A2BC")]
	public void setOnBeginHandler(Action<AbstractGoTween> onBegin)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x2A9A2C4", Offset = "0x2A9A2C4", VA = "0x2A9A2C4")]
	public void setonIterationStartHandler(Action<AbstractGoTween> onIterationStart)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x2A9A2CC", Offset = "0x2A9A2CC", VA = "0x2A9A2CC")]
	public void setOnUpdateHandler(Action<AbstractGoTween> onUpdate)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x2A9A2D4", Offset = "0x2A9A2D4", VA = "0x2A9A2D4")]
	public void setonIterationEndHandler(Action<AbstractGoTween> onIterationEnd)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x2A9A2DC", Offset = "0x2A9A2DC", VA = "0x2A9A2DC")]
	public void setOnCompleteHandler(Action<AbstractGoTween> onComplete)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x2A9A2E4", Offset = "0x2A9A2E4", VA = "0x2A9A2E4", Slot = "4")]
	protected virtual void onInit()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x2A9A34C", Offset = "0x2A9A34C", VA = "0x2A9A34C", Slot = "5")]
	protected virtual void onBegin()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x2A9A3D8", Offset = "0x2A9A3D8", VA = "0x2A9A3D8", Slot = "6")]
	protected virtual void onIterationStart()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x2A9A440", Offset = "0x2A9A440", VA = "0x2A9A440", Slot = "7")]
	protected virtual void onUpdate()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x2A9A4A8", Offset = "0x2A9A4A8", VA = "0x2A9A4A8", Slot = "8")]
	protected virtual void onIterationEnd()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x2A9A510", Offset = "0x2A9A510", VA = "0x2A9A510", Slot = "9")]
	protected virtual void onComplete()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x2A9A578", Offset = "0x2A9A578", VA = "0x2A9A578", Slot = "10")]
	public virtual bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600014C")]
	public abstract bool isValid();

	[Token(Token = "0x600014D")]
	public abstract bool removeTweenProperty(AbstractTweenProperty property);

	[Token(Token = "0x600014E")]
	public abstract bool containsTweenProperty(AbstractTweenProperty property);

	[Token(Token = "0x600014F")]
	public abstract List<AbstractTweenProperty> allTweenProperties();

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x2A9A800", Offset = "0x2A9A800", VA = "0x2A9A800", Slot = "15")]
	public virtual void destroy()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x2A9A80C", Offset = "0x2A9A80C", VA = "0x2A9A80C", Slot = "16")]
	public virtual void pause()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x2A9A818", Offset = "0x2A9A818", VA = "0x2A9A818", Slot = "17")]
	public virtual void play()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x2A9A820", Offset = "0x2A9A820", VA = "0x2A9A820")]
	public void playForward()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x2A9A868", Offset = "0x2A9A868", VA = "0x2A9A868")]
	public void playBackwards()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x2A9A8B0", Offset = "0x2A9A8B0", VA = "0x2A9A8B0", Slot = "18")]
	protected virtual void reset(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x2A9A900", Offset = "0x2A9A900", VA = "0x2A9A900", Slot = "19")]
	public virtual void rewind(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x2A9A940", Offset = "0x2A9A940", VA = "0x2A9A940")]
	public void restart(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x2A9A980", Offset = "0x2A9A980", VA = "0x2A9A980", Slot = "20")]
	public virtual void reverse()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x2A9A9F8", Offset = "0x2A9A9F8", VA = "0x2A9A9F8", Slot = "21")]
	public virtual void complete()
	{
	}

	[Token(Token = "0x600015A")]
	public abstract void goTo(float time, bool skipDelay = true);

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x2A9AA28", Offset = "0x2A9AA28", VA = "0x2A9AA28")]
	public void goToAndPlay(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x2A9AA68", Offset = "0x2A9AA68", VA = "0x2A9AA68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2471C", Offset = "0xE2471C")]
	public IEnumerator waitForCompletion()
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x2A9AAE0", Offset = "0x2A9AAE0", VA = "0x2A9AAE0")]
	protected AbstractGoTween()
	{
	}
}
[Token(Token = "0x200002F")]
public class AbstractGoTweenCollection : AbstractGoTween
{
	[Token(Token = "0x2000030")]
	protected class TweenFlowItem
	{
		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startTime;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float duration;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AbstractGoTween tween;

		[Token(Token = "0x1700002C")]
		public float endTime
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0x2728B28", Offset = "0x2728B28", VA = "0x2728B28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x2728B34", Offset = "0x2728B34", VA = "0x2728B34")]
		public TweenFlowItem(float startTime, AbstractGoTween tween)
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x2728B98", Offset = "0x2728B98", VA = "0x2728B98")]
		public TweenFlowItem(float startTime, float duration)
		{
		}
	}

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected List<TweenFlowItem> _tweenFlows;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x2A9AAE8", Offset = "0x2A9AAE8", VA = "0x2A9AAE8")]
	public AbstractGoTweenCollection(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x2A9AC50", Offset = "0x2A9AC50", VA = "0x2A9AC50")]
	public List<GoTween> tweensWithTarget(object target)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x2A9AEF4", Offset = "0x2A9AEF4", VA = "0x2A9AEF4", Slot = "12")]
	public override bool removeTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x2A9B04C", Offset = "0x2A9B04C", VA = "0x2A9B04C", Slot = "13")]
	public override bool containsTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x2A9B1A8", Offset = "0x2A9B1A8", VA = "0x2A9B1A8", Slot = "14")]
	public override List<AbstractTweenProperty> allTweenProperties()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x2A9B348", Offset = "0x2A9B348", VA = "0x2A9B348", Slot = "11")]
	public override bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x2A9B350", Offset = "0x2A9B350", VA = "0x2A9B350", Slot = "17")]
	public override void play()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x2A9B47C", Offset = "0x2A9B47C", VA = "0x2A9B47C", Slot = "16")]
	public override void pause()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x2A9B5AC", Offset = "0x2A9B5AC", VA = "0x2A9B5AC", Slot = "10")]
	public override bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x2A9B9E4", Offset = "0x2A9B9E4", VA = "0x2A9B9E4", Slot = "20")]
	public override void reverse()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x2A9BC14", Offset = "0x2A9BC14", VA = "0x2A9BC14", Slot = "22")]
	public override void goTo(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x2A9BED4", Offset = "0x2A9BED4", VA = "0x2A9BED4")]
	private void changeTimeForFlowItem(TweenFlowItem flowItem, float time)
	{
	}
}
[Token(Token = "0x2000031")]
public static class GoEaseBack
{
	[Token(Token = "0x6000173")]
	[Address(RVA = "0x29C00F8", Offset = "0x29C00F8", VA = "0x29C00F8")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x29C0128", Offset = "0x29C0128", VA = "0x29C0128")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x29C0168", Offset = "0x29C0168", VA = "0x29C0168")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000032")]
public static class GoEaseBounce
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0x29C01E8", Offset = "0x29C01E8", VA = "0x29C01E8")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x29C02B4", Offset = "0x29C02B4", VA = "0x29C02B4")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x29C02E8", Offset = "0x29C02E8", VA = "0x29C02E8")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000033")]
public static class GoEaseCircular
{
	[Token(Token = "0x6000179")]
	[Address(RVA = "0x29C0368", Offset = "0x29C0368", VA = "0x29C0368")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x29C0414", Offset = "0x29C0414", VA = "0x29C0414")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x29C04C0", Offset = "0x29C04C0", VA = "0x29C04C0")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000034")]
public static class GoEaseCubic
{
	[Token(Token = "0x600017C")]
	[Address(RVA = "0x29C05B8", Offset = "0x29C05B8", VA = "0x29C05B8")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x29C05D0", Offset = "0x29C05D0", VA = "0x29C05D0")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x29C05F8", Offset = "0x29C05F8", VA = "0x29C05F8")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000035")]
public class GoEaseElastic
{
	[Token(Token = "0x600017F")]
	[Address(RVA = "0x29C064C", Offset = "0x29C064C", VA = "0x29C064C")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x29C0768", Offset = "0x29C0768", VA = "0x29C0768")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x29C0884", Offset = "0x29C0884", VA = "0x29C0884")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x29C0A34", Offset = "0x29C0A34", VA = "0x29C0A34")]
	public static float Punch(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x29C0AAC", Offset = "0x29C0AAC", VA = "0x29C0AAC")]
	public GoEaseElastic()
	{
	}
}
[Token(Token = "0x2000036")]
public static class GoEaseExponential
{
	[Token(Token = "0x6000184")]
	[Address(RVA = "0x29C0AB4", Offset = "0x29C0AB4", VA = "0x29C0AB4")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x29C0B68", Offset = "0x29C0B68", VA = "0x29C0B68")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x29C0C18", Offset = "0x29C0C18", VA = "0x29C0C18")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000037")]
public static class GoEaseLinear
{
	[Token(Token = "0x6000187")]
	[Address(RVA = "0x29C0D44", Offset = "0x29C0D44", VA = "0x29C0D44")]
	public static float EaseNone(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000038")]
public static class GoEaseQuadratic
{
	[Token(Token = "0x6000188")]
	[Address(RVA = "0x29C0D54", Offset = "0x29C0D54", VA = "0x29C0D54")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x29C0D68", Offset = "0x29C0D68", VA = "0x29C0D68")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x29C0D84", Offset = "0x29C0D84", VA = "0x29C0D84")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000039")]
public static class GoEaseQuartic
{
	[Token(Token = "0x600018B")]
	[Address(RVA = "0x29C0DD8", Offset = "0x29C0DD8", VA = "0x29C0DD8")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x29C0DF4", Offset = "0x29C0DF4", VA = "0x29C0DF4")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x29C0E1C", Offset = "0x29C0E1C", VA = "0x29C0E1C")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200003A")]
public static class GoEaseQuintic
{
	[Token(Token = "0x600018E")]
	[Address(RVA = "0x29C0E78", Offset = "0x29C0E78", VA = "0x29C0E78")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x29C0E98", Offset = "0x29C0E98", VA = "0x29C0E98")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x29C0EC8", Offset = "0x29C0EC8", VA = "0x29C0EC8")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200003B")]
public static class GoEaseSinusoidal
{
	[Token(Token = "0x6000191")]
	[Address(RVA = "0x29C0F2C", Offset = "0x29C0F2C", VA = "0x29C0F2C")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x29C0FCC", Offset = "0x29C0FCC", VA = "0x29C0FCC")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x29C1068", Offset = "0x29C1068", VA = "0x29C1068")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200003C")]
public enum GoDuplicatePropertyRuleType
{
	[Token(Token = "0x400011C")]
	None,
	[Token(Token = "0x400011D")]
	RemoveRunningProperty,
	[Token(Token = "0x400011E")]
	DontAddCurrentProperty
}
[Token(Token = "0x200003D")]
public enum GoEaseType
{
	[Token(Token = "0x4000120")]
	Linear,
	[Token(Token = "0x4000121")]
	SineIn,
	[Token(Token = "0x4000122")]
	SineOut,
	[Token(Token = "0x4000123")]
	SineInOut,
	[Token(Token = "0x4000124")]
	QuadIn,
	[Token(Token = "0x4000125")]
	QuadOut,
	[Token(Token = "0x4000126")]
	QuadInOut,
	[Token(Token = "0x4000127")]
	CubicIn,
	[Token(Token = "0x4000128")]
	CubicOut,
	[Token(Token = "0x4000129")]
	CubicInOut,
	[Token(Token = "0x400012A")]
	QuartIn,
	[Token(Token = "0x400012B")]
	QuartOut,
	[Token(Token = "0x400012C")]
	QuartInOut,
	[Token(Token = "0x400012D")]
	QuintIn,
	[Token(Token = "0x400012E")]
	QuintOut,
	[Token(Token = "0x400012F")]
	QuintInOut,
	[Token(Token = "0x4000130")]
	ExpoIn,
	[Token(Token = "0x4000131")]
	ExpoOut,
	[Token(Token = "0x4000132")]
	ExpoInOut,
	[Token(Token = "0x4000133")]
	CircIn,
	[Token(Token = "0x4000134")]
	CircOut,
	[Token(Token = "0x4000135")]
	CircInOut,
	[Token(Token = "0x4000136")]
	ElasticIn,
	[Token(Token = "0x4000137")]
	ElasticOut,
	[Token(Token = "0x4000138")]
	ElasticInOut,
	[Token(Token = "0x4000139")]
	Punch,
	[Token(Token = "0x400013A")]
	BackIn,
	[Token(Token = "0x400013B")]
	BackOut,
	[Token(Token = "0x400013C")]
	BackInOut,
	[Token(Token = "0x400013D")]
	BounceIn,
	[Token(Token = "0x400013E")]
	BounceOut,
	[Token(Token = "0x400013F")]
	BounceInOut
}
[Token(Token = "0x200003E")]
public enum GoLogLevel
{
	[Token(Token = "0x4000141")]
	None,
	[Token(Token = "0x4000142")]
	Info,
	[Token(Token = "0x4000143")]
	Warn,
	[Token(Token = "0x4000144")]
	Error
}
[Token(Token = "0x200003F")]
public enum GoLookAtType
{
	[Token(Token = "0x4000146")]
	None,
	[Token(Token = "0x4000147")]
	NextPathNode,
	[Token(Token = "0x4000148")]
	TargetTransform
}
[Token(Token = "0x2000040")]
public enum GoLoopType
{
	[Token(Token = "0x400014A")]
	RestartFromBeginning,
	[Token(Token = "0x400014B")]
	PingPong
}
[Token(Token = "0x2000041")]
[Flags]
public enum GoShakeType
{
	[Token(Token = "0x400014D")]
	Position = 1,
	[Token(Token = "0x400014E")]
	Scale = 2,
	[Token(Token = "0x400014F")]
	Eulers = 4
}
[Token(Token = "0x2000042")]
public enum GoSplineType
{
	[Token(Token = "0x4000151")]
	StraightLine,
	[Token(Token = "0x4000152")]
	QuadraticBezier,
	[Token(Token = "0x4000153")]
	CubicBezier,
	[Token(Token = "0x4000154")]
	CatmullRom
}
[Token(Token = "0x2000043")]
public enum GoTweenState
{
	[Token(Token = "0x4000156")]
	Running,
	[Token(Token = "0x4000157")]
	Paused,
	[Token(Token = "0x4000158")]
	Complete,
	[Token(Token = "0x4000159")]
	Destroyed
}
[Token(Token = "0x2000044")]
public enum GoUpdateType
{
	[Token(Token = "0x400015B")]
	Update,
	[Token(Token = "0x400015C")]
	LateUpdate,
	[Token(Token = "0x400015D")]
	FixedUpdate,
	[Token(Token = "0x400015E")]
	TimeScaleIndependentUpdate
}
[Token(Token = "0x2000045")]
public static class GoKitTweenExtensions
{
	[Token(Token = "0x6000194")]
	[Address(RVA = "0x29C1118", Offset = "0x29C1118", VA = "0x29C1118")]
	public static GoTween rotationTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x29C13A0", Offset = "0x29C13A0", VA = "0x29C13A0")]
	public static GoTween localRotationTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x29C153C", Offset = "0x29C153C", VA = "0x29C153C")]
	public static GoTween eulerAnglesTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x29C16D8", Offset = "0x29C16D8", VA = "0x29C16D8")]
	public static GoTween localEulerAnglesTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x29C1874", Offset = "0x29C1874", VA = "0x29C1874")]
	public static GoTween positionTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x29C1A10", Offset = "0x29C1A10", VA = "0x29C1A10")]
	public static GoTween localPositionTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x29C1BAC", Offset = "0x29C1BAC", VA = "0x29C1BAC")]
	public static GoTween scaleTo(this Transform self, float duration, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x29C1BBC", Offset = "0x29C1BBC", VA = "0x29C1BBC")]
	public static GoTween scaleTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x29C1D54", Offset = "0x29C1D54", VA = "0x29C1D54")]
	public static GoTween shake(this Transform self, float duration, Vector3 shakeMagnitude, GoShakeType shakeType = GoShakeType.Position, int frameMod = 1, bool useLocalProperties = false)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x29C1F1C", Offset = "0x29C1F1C", VA = "0x29C1F1C")]
	public static GoTween rotationFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x29C1FF4", Offset = "0x29C1FF4", VA = "0x29C1FF4")]
	public static GoTween localRotationFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x29C20CC", Offset = "0x29C20CC", VA = "0x29C20CC")]
	public static GoTween eulerAnglesFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x29C21A4", Offset = "0x29C21A4", VA = "0x29C21A4")]
	public static GoTween localEulerAnglesFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x29C227C", Offset = "0x29C227C", VA = "0x29C227C")]
	public static GoTween positionFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x29C2354", Offset = "0x29C2354", VA = "0x29C2354")]
	public static GoTween localPositionFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x29C242C", Offset = "0x29C242C", VA = "0x29C242C")]
	public static GoTween scaleFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x29C2504", Offset = "0x29C2504", VA = "0x29C2504")]
	public static GoTween colorTo(this Material self, float duration, Color endValue, string colorName = "_Color")
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x29C26C0", Offset = "0x29C26C0", VA = "0x29C26C0")]
	public static GoTween colorFrom(this Material self, float duration, Color endValue, string colorName = "_Color")
	{
		return null;
	}
}
[Token(Token = "0x2000046")]
public static class GoTweenUtils
{
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x29C7274", Offset = "0x29C7274", VA = "0x29C7274")]
	public static Func<float, float, float, float, float> easeFunctionForType(GoEaseType easeType)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	public static T setterForProperty<T>(object targetObject, string propertyName)
	{
		return (T)null;
	}

	[Token(Token = "0x60001A8")]
	public static T getterForProperty<T>(object targetObject, string propertyName)
	{
		return (T)null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x29C77F8", Offset = "0x29C77F8", VA = "0x29C77F8")]
	public static Color unclampedColorLerp(Color c1, Color diff, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x29C784C", Offset = "0x29C784C", VA = "0x29C784C")]
	public static Vector2 unclampedVector2Lerp(Vector2 v1, Vector2 diff, float value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x29C7860", Offset = "0x29C7860", VA = "0x29C7860")]
	public static Vector3 unclampedVector3Lerp(Vector3 v1, Vector3 diff, float value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x29C787C", Offset = "0x29C787C", VA = "0x29C787C")]
	public static Vector4 unclampedVector4Lerp(Vector4 v1, Vector4 diff, float value)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000047")]
public abstract class AbstractColorTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Material _target;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Color _originalEndValue;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Color _startValue;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Color _endValue;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Color _diffValue;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x2A999EC", Offset = "0x2A999EC", VA = "0x2A999EC")]
	public AbstractColorTweenProperty(Color endValue, bool isRelative)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x2A99A74", Offset = "0x2A99A74", VA = "0x2A99A74", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x2A99BA4", Offset = "0x2A99BA4", VA = "0x2A99BA4", Slot = "4")]
	public override void init(GoTween owner)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x2A99DA4", Offset = "0x2A99DA4", VA = "0x2A99DA4", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000048")]
public abstract class AbstractQuaternionTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Quaternion _originalEndValue;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Quaternion _startValue;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Quaternion _endValue;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x2A9C004", Offset = "0x2A9C004", VA = "0x2A9C004")]
	public AbstractQuaternionTweenProperty()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x2A9C02C", Offset = "0x2A9C02C", VA = "0x2A9C02C")]
	public AbstractQuaternionTweenProperty(Quaternion endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x2A9C084", Offset = "0x2A9C084", VA = "0x2A9C084", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x2A9C100", Offset = "0x2A9C100", VA = "0x2A9C100", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000049")]
public abstract class AbstractTweenProperty
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool _isInitialized;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	protected bool _isRelative;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected GoTween _ownerTween;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Func<float, float, float, float, float> _easeFunction;

	[Token(Token = "0x1700002D")]
	public bool isInitialized
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x2A9C158", Offset = "0x2A9C158", VA = "0x2A9C158")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x2A99A44", Offset = "0x2A99A44", VA = "0x2A99A44")]
	public AbstractTweenProperty(bool isRelative = false)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x2A9C160", Offset = "0x2A9C160", VA = "0x2A9C160", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x2A9C168", Offset = "0x2A9C168", VA = "0x2A9C168", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x2A99D40", Offset = "0x2A99D40", VA = "0x2A99D40", Slot = "4")]
	public virtual void init(GoTween owner)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x2A9C41C", Offset = "0x2A9C41C", VA = "0x2A9C41C")]
	public AbstractTweenProperty clone()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x2A9C3E8", Offset = "0x2A9C3E8", VA = "0x2A9C3E8")]
	public void setEaseType(GoEaseType easeType)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x2A9C4CC", Offset = "0x2A9C4CC", VA = "0x2A9C4CC", Slot = "5")]
	public virtual bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BD")]
	public abstract void tick(float totalElapsedTime);

	[Token(Token = "0x60001BE")]
	public abstract void prepareForUse();
}
[Token(Token = "0x200004A")]
public abstract class AbstractVector3TweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 _originalEndValue;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 _startValue;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector3 _endValue;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector3 _diffValue;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x2A9C4D4", Offset = "0x2A9C4D4", VA = "0x2A9C4D4")]
	public AbstractVector3TweenProperty()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x2A9C4FC", Offset = "0x2A9C4FC", VA = "0x2A9C4FC")]
	public AbstractVector3TweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x2A9C550", Offset = "0x2A9C550", VA = "0x2A9C550", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x2A9C5CC", Offset = "0x2A9C5CC", VA = "0x2A9C5CC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x2A9C628", Offset = "0x2A9C628", VA = "0x2A9C628")]
	public void resetWithNewEndValue(Vector3 endValue)
	{
	}
}
[Token(Token = "0x200004B")]
public class ColorTweenProperty : AbstractColorTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D68", Offset = "0xE15D68")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action<Color> _setter;

	[Token(Token = "0x1700002E")]
	public string propertyName
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x22B70A4", Offset = "0x22B70A4", VA = "0x22B70A4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE248EC", Offset = "0xE248EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x22B70AC", Offset = "0x22B70AC", VA = "0x22B70AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE248FC", Offset = "0xE248FC")]
		private set
		{
		}
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x22B70B4", Offset = "0x22B70B4", VA = "0x22B70B4")]
	public ColorTweenProperty(string propertyName, Color endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x22B70EC", Offset = "0x22B70EC", VA = "0x22B70EC", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x22B7168", Offset = "0x22B7168", VA = "0x22B7168", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x22B7240", Offset = "0x22B7240", VA = "0x22B7240", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004C")]
public class FloatTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D78", Offset = "0xE15D78")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<float> _setter;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float _originalEndValue;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _startValue;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _endValue;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float _diffValue;

	[Token(Token = "0x1700002F")]
	public string propertyName
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x29295DC", Offset = "0x29295DC", VA = "0x29295DC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2490C", Offset = "0xE2490C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x29295E4", Offset = "0x29295E4", VA = "0x29295E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2491C", Offset = "0xE2491C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x29295EC", Offset = "0x29295EC", VA = "0x29295EC")]
	public FloatTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x2929638", Offset = "0x2929638", VA = "0x2929638", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x29296B4", Offset = "0x29296B4", VA = "0x29296B4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x29297A0", Offset = "0x29297A0", VA = "0x29297A0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004D")]
public interface IGenericProperty
{
	[Token(Token = "0x17000030")]
	string propertyName
	{
		[Token(Token = "0x60001D0")]
		get;
	}
}
[Token(Token = "0x200004E")]
public class IntTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D88", Offset = "0xE15D88")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<int> _setter;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int _originalEndValue;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int _startValue;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int _endValue;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int _diffValue;

	[Token(Token = "0x17000031")]
	public string propertyName
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x2E284C8", Offset = "0x2E284C8", VA = "0x2E284C8", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2492C", Offset = "0xE2492C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x2E284D0", Offset = "0x2E284D0", VA = "0x2E284D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2493C", Offset = "0xE2493C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x2E284D8", Offset = "0x2E284D8", VA = "0x2E284D8")]
	public IntTweenProperty(string propertyName, int endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x2E28524", Offset = "0x2E28524", VA = "0x2E28524", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x2E285A0", Offset = "0x2E285A0", VA = "0x2E285A0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x2E28688", Offset = "0x2E28688", VA = "0x2E28688", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200004F")]
public class Vector2TweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15D98", Offset = "0xE15D98")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector2> _setter;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector2 _originalEndValue;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 _startValue;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 _endValue;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2 _diffValue;

	[Token(Token = "0x17000032")]
	public string propertyName
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x27C567C", Offset = "0x27C567C", VA = "0x27C567C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2494C", Offset = "0xE2494C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x27C5684", Offset = "0x27C5684", VA = "0x27C5684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2495C", Offset = "0xE2495C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x27C568C", Offset = "0x27C568C", VA = "0x27C568C")]
	public Vector2TweenProperty(string propertyName, Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x27C56DC", Offset = "0x27C56DC", VA = "0x27C56DC", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x27C5758", Offset = "0x27C5758", VA = "0x27C5758", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x27C5844", Offset = "0x27C5844", VA = "0x27C5844", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000050")]
public class Vector3PathTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15DA8", Offset = "0xE15DA8")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector3> _setter;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GoSpline _path;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _startValue;

	[Token(Token = "0x17000033")]
	public string propertyName
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x27C6134", Offset = "0x27C6134", VA = "0x27C6134", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2496C", Offset = "0xE2496C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x27C613C", Offset = "0x27C613C", VA = "0x27C613C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2497C", Offset = "0xE2497C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x27C6144", Offset = "0x27C6144", VA = "0x27C6144")]
	public Vector3PathTweenProperty(string propertyName, GoSpline path, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x27C6198", Offset = "0x27C6198", VA = "0x27C6198", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x27C6214", Offset = "0x27C6214", VA = "0x27C6214", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x27C62F4", Offset = "0x27C62F4", VA = "0x27C62F4", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000051")]
public class Vector3TweenProperty : AbstractVector3TweenProperty, IGenericProperty
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15DB8", Offset = "0xE15DB8")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action<Vector3> _setter;

	[Token(Token = "0x17000034")]
	public string propertyName
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x27C6418", Offset = "0x27C6418", VA = "0x27C6418", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2498C", Offset = "0xE2498C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x27C6420", Offset = "0x27C6420", VA = "0x27C6420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2499C", Offset = "0xE2499C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x27C6428", Offset = "0x27C6428", VA = "0x27C6428")]
	public Vector3TweenProperty(string propertyName, Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x27C6460", Offset = "0x27C6460", VA = "0x27C6460", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x27C64DC", Offset = "0x27C64DC", VA = "0x27C64DC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x27C65B4", Offset = "0x27C65B4", VA = "0x27C65B4", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000052")]
public class Vector3XTweenProperty : AbstractVector3TweenProperty, IGenericProperty
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15DC8", Offset = "0xE15DC8")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<Vector3> _setter;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Func<Vector3> _getter;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected new float _originalEndValue;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected new float _startValue;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected new float _endValue;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected new float _diffValue;

	[Token(Token = "0x17000035")]
	public string propertyName
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x27C6674", Offset = "0x27C6674", VA = "0x27C6674", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249AC", Offset = "0xE249AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x27C667C", Offset = "0x27C667C", VA = "0x27C667C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249BC", Offset = "0xE249BC")]
		private set
		{
		}
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x27C6684", Offset = "0x27C6684", VA = "0x27C6684")]
	public Vector3XTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x27C66E0", Offset = "0x27C66E0", VA = "0x27C66E0", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x27C675C", Offset = "0x27C675C", VA = "0x27C675C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x27C6864", Offset = "0x27C6864", VA = "0x27C6864", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000053")]
public class Vector3YTweenProperty : Vector3XTweenProperty
{
	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x27C693C", Offset = "0x27C693C", VA = "0x27C693C")]
	public Vector3YTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x27C6998", Offset = "0x27C6998", VA = "0x27C6998", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x27C6AA0", Offset = "0x27C6AA0", VA = "0x27C6AA0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000054")]
public class Vector3ZTweenProperty : Vector3XTweenProperty
{
	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x27C6B7C", Offset = "0x27C6B7C", VA = "0x27C6B7C")]
	public Vector3ZTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x27C6BD8", Offset = "0x27C6BD8", VA = "0x27C6BD8", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x27C6CE0", Offset = "0x27C6CE0", VA = "0x27C6CE0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000055")]
public class Vector4TweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15DD8", Offset = "0xE15DD8")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector4> _setter;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector4 _originalEndValue;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector4 _startValue;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector4 _endValue;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector4 _diffValue;

	[Token(Token = "0x17000036")]
	public string propertyName
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x27C6DBC", Offset = "0x27C6DBC", VA = "0x27C6DBC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249CC", Offset = "0xE249CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x27C6DC4", Offset = "0x27C6DC4", VA = "0x27C6DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249DC", Offset = "0xE249DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x27C6DCC", Offset = "0x27C6DCC", VA = "0x27C6DCC")]
	public Vector4TweenProperty(string propertyName, Vector4 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x27C6E30", Offset = "0x27C6E30", VA = "0x27C6E30", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x27C6EAC", Offset = "0x27C6EAC", VA = "0x27C6EAC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x27C6FD4", Offset = "0x27C6FD4", VA = "0x27C6FD4", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000056")]
public struct GoSmoothedQuaternion
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GoSmoothingType smoothingType;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Quaternion _currentValue;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion _target;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion _start;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _startTime;

	[Token(Token = "0x17000037")]
	public Quaternion smoothValue
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x29C27F8", Offset = "0x29C27F8", VA = "0x29C27F8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x29C2894", Offset = "0x29C2894", VA = "0x29C2894")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float x
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x29C28F0", Offset = "0x29C28F0", VA = "0x29C28F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x29C28F8", Offset = "0x29C28F8", VA = "0x29C28F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float y
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x29C2944", Offset = "0x29C2944", VA = "0x29C2944")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x29C294C", Offset = "0x29C294C", VA = "0x29C294C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float z
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x29C299C", Offset = "0x29C299C", VA = "0x29C299C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x29C29A4", Offset = "0x29C29A4", VA = "0x29C29A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float w
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x29C29F4", Offset = "0x29C29F4", VA = "0x29C29F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x29C29FC", Offset = "0x29C29FC", VA = "0x29C29FC")]
		set
		{
		}
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x29C27AC", Offset = "0x29C27AC", VA = "0x29C27AC")]
	public GoSmoothedQuaternion(Quaternion quat)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x29C2A4C", Offset = "0x29C2A4C", VA = "0x29C2A4C")]
	public static implicit operator GoSmoothedQuaternion(Quaternion q)
	{
		return default(GoSmoothedQuaternion);
	}
}
[Token(Token = "0x2000057")]
public struct GoSmoothedVector3
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GoSmoothingType smoothingType;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Vector3 _currentValue;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _target;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _start;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _startTime;

	[Token(Token = "0x1700003C")]
	public Vector3 smoothValue
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x29C2AB0", Offset = "0x29C2AB0", VA = "0x29C2AB0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x29C2B70", Offset = "0x29C2B70", VA = "0x29C2B70")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float x
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x29C2BC8", Offset = "0x29C2BC8", VA = "0x29C2BC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x29C2BD0", Offset = "0x29C2BD0", VA = "0x29C2BD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float y
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x29C2BD8", Offset = "0x29C2BD8", VA = "0x29C2BD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x29C2BE0", Offset = "0x29C2BE0", VA = "0x29C2BE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float z
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x29C2BF4", Offset = "0x29C2BF4", VA = "0x29C2BF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x29C2BFC", Offset = "0x29C2BFC", VA = "0x29C2BFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x29C2A68", Offset = "0x29C2A68", VA = "0x29C2A68")]
	public GoSmoothedVector3(Vector3 vector)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x29C2C10", Offset = "0x29C2C10", VA = "0x29C2C10")]
	public static implicit operator GoSmoothedVector3(Vector3 v)
	{
		return default(GoSmoothedVector3);
	}
}
[Token(Token = "0x2000058")]
public enum GoSmoothingType
{
	[Token(Token = "0x40001A5")]
	Lerp,
	[Token(Token = "0x40001A6")]
	Slerp
}
[Token(Token = "0x2000059")]
public class EulerAnglesTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalEulers;

	[Token(Token = "0x17000040")]
	public bool useLocalEulers
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x28BF8EC", Offset = "0x28BF8EC", VA = "0x28BF8EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x28BF8F4", Offset = "0x28BF8F4", VA = "0x28BF8F4")]
	public EulerAnglesTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalEulers = false)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x28BF928", Offset = "0x28BF928", VA = "0x28BF928", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x28BF930", Offset = "0x28BF930", VA = "0x28BF930", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x28BFA60", Offset = "0x28BFA60", VA = "0x28BFA60", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x28BFB88", Offset = "0x28BFB88", VA = "0x28BFB88", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200005A")]
public class MaterialColorTweenProperty : AbstractColorTweenProperty
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _materialColorName;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x2CFCEA0", Offset = "0x2CFCEA0", VA = "0x2CFCEA0")]
	public MaterialColorTweenProperty(Color endValue, string colorName = "_Color", bool isRelative = false)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x2CFCED8", Offset = "0x2CFCED8", VA = "0x2CFCED8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x2CFCEE0", Offset = "0x2CFCEE0", VA = "0x2CFCEE0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x2CFCFA0", Offset = "0x2CFCFA0", VA = "0x2CFCFA0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x2CFD02C", Offset = "0x2CFD02C", VA = "0x2CFD02C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200005B")]
public class PositionPathTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool _useLocalPosition;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform _target;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector3 _startValue;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GoSpline _path;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GoLookAtType _lookAtType;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _lookTarget;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GoSmoothedQuaternion _smoothedRotation;

	[Token(Token = "0x17000041")]
	public bool useLocalPosition
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x26AC294", Offset = "0x26AC294", VA = "0x26AC294")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x26AC29C", Offset = "0x26AC29C", VA = "0x26AC29C")]
	public PositionPathTweenProperty(GoSpline path, bool isRelative = false, bool useLocalPosition = false, GoLookAtType lookAtType = GoLookAtType.None, [Optional] Transform lookTarget)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x26AC30C", Offset = "0x26AC30C", VA = "0x26AC30C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x26AC314", Offset = "0x26AC314", VA = "0x26AC314", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x26AC444", Offset = "0x26AC444", VA = "0x26AC444", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x26AC61C", Offset = "0x26AC61C", VA = "0x26AC61C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200005C")]
public class PositionTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool _useLocalPosition;

	[Token(Token = "0x17000042")]
	public bool useLocalPosition
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x26AC7F0", Offset = "0x26AC7F0", VA = "0x26AC7F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x26AC7F8", Offset = "0x26AC7F8", VA = "0x26AC7F8")]
	public PositionTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalPosition = false)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x26AC82C", Offset = "0x26AC82C", VA = "0x26AC82C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x26AC834", Offset = "0x26AC834", VA = "0x26AC834", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x26AC964", Offset = "0x26AC964", VA = "0x26AC964", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x26ACB00", Offset = "0x26ACB00", VA = "0x26ACB00", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200005D")]
public class RotationQuaternionTweenProperty : AbstractQuaternionTweenProperty
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalRotation;

	[Token(Token = "0x17000043")]
	public bool useLocalRotation
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x2B43470", Offset = "0x2B43470", VA = "0x2B43470")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x2B43478", Offset = "0x2B43478", VA = "0x2B43478")]
	public RotationQuaternionTweenProperty(Quaternion endValue, bool isRelative = false, bool useLocalRotation = false)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x2B434AC", Offset = "0x2B434AC", VA = "0x2B434AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x2B434B4", Offset = "0x2B434B4", VA = "0x2B434B4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x2B43578", Offset = "0x2B43578", VA = "0x2B43578", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x2B436A0", Offset = "0x2B436A0", VA = "0x2B436A0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200005E")]
public class RotationTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalRotation;

	[Token(Token = "0x17000044")]
	public bool useLocalRotation
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x2B43770", Offset = "0x2B43770", VA = "0x2B43770")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x2B43778", Offset = "0x2B43778", VA = "0x2B43778")]
	public RotationTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalRotation = false)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x2B437AC", Offset = "0x2B437AC", VA = "0x2B437AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x2B437B4", Offset = "0x2B437B4", VA = "0x2B437B4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x2B438E4", Offset = "0x2B438E4", VA = "0x2B438E4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x2B43ABC", Offset = "0x2B43ABC", VA = "0x2B43ABC", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200005F")]
public class ScalePathTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 _startValue;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GoSpline _path;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x2B46D70", Offset = "0x2B46D70", VA = "0x2B46D70")]
	public ScalePathTweenProperty(GoSpline path, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x2B46DA8", Offset = "0x2B46DA8", VA = "0x2B46DA8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x2B46DB0", Offset = "0x2B46DB0", VA = "0x2B46DB0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x2B46E8C", Offset = "0x2B46E8C", VA = "0x2B46E8C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x2B46FA0", Offset = "0x2B46FA0", VA = "0x2B46FA0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000060")]
public class ScaleTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x6000239")]
	[Address(RVA = "0x2B47054", Offset = "0x2B47054", VA = "0x2B47054")]
	public ScaleTweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x2B47060", Offset = "0x2B47060", VA = "0x2B47060", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x2B47068", Offset = "0x2B47068", VA = "0x2B47068", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x2B47144", Offset = "0x2B47144", VA = "0x2B47144", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x2B47244", Offset = "0x2B47244", VA = "0x2B47244", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000061")]
public class ShakeTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _target;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _shakeMagnitude;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _originalEndValue;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _startPosition;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _startScale;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _startEulers;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GoShakeType _shakeType;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _frameCount;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _frameMod;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _useLocalProperties;

	[Token(Token = "0x17000045")]
	public bool useLocalProperties
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x2B4E0FC", Offset = "0x2B4E0FC", VA = "0x2B4E0FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x2B4E104", Offset = "0x2B4E104", VA = "0x2B4E104")]
	public ShakeTweenProperty(Vector3 shakeMagnitude, GoShakeType shakeType, int frameMod = 1, bool useLocalProperties = false)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x2B4E174", Offset = "0x2B4E174", VA = "0x2B4E174", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x2B4E17C", Offset = "0x2B4E17C", VA = "0x2B4E17C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x2B4E234", Offset = "0x2B4E234", VA = "0x2B4E234", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x2B4E2B0", Offset = "0x2B4E2B0", VA = "0x2B4E2B0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x2B4E3C4", Offset = "0x2B4E3C4", VA = "0x2B4E3C4")]
	private Vector3 randomDiminishingTarget(float falloffValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x2B4E43C", Offset = "0x2B4E43C", VA = "0x2B4E43C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000062")]
public abstract class AbstractGoSplineSolver
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected List<Vector3> _nodes;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float _pathLength;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int totalSubdivisionsPerNodeForLookupTable;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Dictionary<float, float> _segmentTimeForDistance;

	[Token(Token = "0x17000046")]
	public List<Vector3> nodes
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x2A99E08", Offset = "0x2A99E08", VA = "0x2A99E08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x2A99E10", Offset = "0x2A99E10", VA = "0x2A99E10", Slot = "4")]
	public virtual void buildPath()
	{
	}

	[Token(Token = "0x6000248")]
	public abstract void closePath();

	[Token(Token = "0x6000249")]
	public abstract Vector3 getPoint(float t);

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x2A99FB4", Offset = "0x2A99FB4", VA = "0x2A99FB4", Slot = "7")]
	public virtual Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x2A9A188", Offset = "0x2A9A188", VA = "0x2A9A188")]
	public void reverseNodes()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x2A9A1DC", Offset = "0x2A9A1DC", VA = "0x2A9A1DC", Slot = "8")]
	public virtual void drawGizmos()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x2A9A1E0", Offset = "0x2A9A1E0", VA = "0x2A9A1E0")]
	protected AbstractGoSplineSolver()
	{
	}
}
[Token(Token = "0x2000063")]
public class GoSpline
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15DE8", Offset = "0xE15DE8")]
	private int <currentSegment>k__BackingField;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15DF8", Offset = "0xE15DF8")]
	private bool <isClosed>k__BackingField;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15E08", Offset = "0xE15E08")]
	private GoSplineType <splineType>k__BackingField;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isReversed;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AbstractGoSplineSolver _solver;

	[Token(Token = "0x17000047")]
	public int currentSegment
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x29C2C64", Offset = "0x29C2C64", VA = "0x29C2C64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249EC", Offset = "0xE249EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x29C2C6C", Offset = "0x29C2C6C", VA = "0x29C2C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249FC", Offset = "0xE249FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public bool isClosed
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x29C2C74", Offset = "0x29C2C74", VA = "0x29C2C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24A0C", Offset = "0xE24A0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x29C2C7C", Offset = "0x29C2C7C", VA = "0x29C2C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24A1C", Offset = "0xE24A1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public GoSplineType splineType
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x29C2C88", Offset = "0x29C2C88", VA = "0x29C2C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24A2C", Offset = "0xE24A2C")]
		get
		{
			return default(GoSplineType);
		}
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x29C2C90", Offset = "0x29C2C90", VA = "0x29C2C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24A3C", Offset = "0xE24A3C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public List<Vector3> nodes
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x29C2C98", Offset = "0x29C2C98", VA = "0x29C2C98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x29BFD9C", Offset = "0x29BFD9C", VA = "0x29BFD9C")]
	public GoSpline(List<Vector3> nodes, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x29C2D84", Offset = "0x29C2D84", VA = "0x29C2D84")]
	public GoSpline(Vector3[] nodes, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x29C2E10", Offset = "0x29C2E10", VA = "0x29C2E10")]
	public GoSpline(string pathAssetName, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x29C2E44", Offset = "0x29C2E44", VA = "0x29C2E44")]
	private static List<Vector3> nodeListFromAsset(string pathAssetName)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x29C3060", Offset = "0x29C3060", VA = "0x29C3060")]
	public static List<Vector3> bytesToVector3List(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x29C31A8", Offset = "0x29C31A8", VA = "0x29C31A8")]
	public Vector3 getLastNode()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x29C3228", Offset = "0x29C3228", VA = "0x29C3228")]
	public void buildPath()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x29C3248", Offset = "0x29C3248", VA = "0x29C3248")]
	private Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x29C3268", Offset = "0x29C3268", VA = "0x29C3268")]
	public Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x29C32D8", Offset = "0x29C32D8", VA = "0x29C32D8")]
	public void closePath()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x29C3310", Offset = "0x29C3310", VA = "0x29C3310")]
	public void reverseNodes()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x29C3350", Offset = "0x29C3350", VA = "0x29C3350")]
	public void unreverseNodes()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x29BFEC4", Offset = "0x29BFEC4", VA = "0x29BFEC4")]
	public void drawGizmos(float resolution)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x29C338C", Offset = "0x29C338C", VA = "0x29C338C")]
	public static void drawGizmos(Vector3[] path, float resolution = 50f)
	{
	}
}
[Token(Token = "0x2000064")]
public class GoSplineCatmullRomSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x6000263")]
	[Address(RVA = "0x29C2D50", Offset = "0x29C2D50", VA = "0x29C2D50")]
	public GoSplineCatmullRomSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x29C3404", Offset = "0x29C3404", VA = "0x29C3404", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x29C38E4", Offset = "0x29C38E4", VA = "0x29C38E4", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x29C3B54", Offset = "0x29C3B54", VA = "0x29C3B54", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x2000065")]
public class GoSplineCubicBezierSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x6000267")]
	[Address(RVA = "0x29C2D1C", Offset = "0x29C2D1C", VA = "0x29C2D1C")]
	public GoSplineCubicBezierSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x29C3D2C", Offset = "0x29C3D2C", VA = "0x29C3D2C", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x29C3D30", Offset = "0x29C3D30", VA = "0x29C3D30", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x29C3EA8", Offset = "0x29C3EA8", VA = "0x29C3EA8", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x2000066")]
public class GoSplineQuadraticBezierSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x600026B")]
	[Address(RVA = "0x29C2CE8", Offset = "0x29C2CE8", VA = "0x29C2CE8")]
	public GoSplineQuadraticBezierSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x29C4018", Offset = "0x29C4018", VA = "0x29C4018")]
	protected float quadBezierLength(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint)
	{
		return default(float);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x29C42BC", Offset = "0x29C42BC", VA = "0x29C42BC", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x29C42C0", Offset = "0x29C42C0", VA = "0x29C42C0", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x29C43DC", Offset = "0x29C43DC", VA = "0x29C43DC", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x2000067")]
public class GoSplineStraightLineSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, float> _segmentStartLocations;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, float> _segmentDistances;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentSegment;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x29C2CB4", Offset = "0x29C2CB4", VA = "0x29C2CB4")]
	public GoSplineStraightLineSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x29C454C", Offset = "0x29C454C", VA = "0x29C454C", Slot = "4")]
	public override void buildPath()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x29C47D8", Offset = "0x29C47D8", VA = "0x29C47D8", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x29C4904", Offset = "0x29C4904", VA = "0x29C4904", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x29C4910", Offset = "0x29C4910", VA = "0x29C4910", Slot = "7")]
	public override Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01BD0", Offset = "0xE01BD0")]
public class SetEnumFlag : ActionTask
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE15E18", Offset = "0xE15E18")]
	public readonly BBObjectParameter Variable;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly BBObjectParameter Flag;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public readonly BBParameter<bool> Clear;

	[Token(Token = "0x1700004B")]
	protected override string info
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x2B4B32C", Offset = "0x2B4B32C", VA = "0x2B4B32C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x2B4B3D8", Offset = "0x2B4B3D8", VA = "0x2B4B3D8", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x2B4B57C", Offset = "0x2B4B57C", VA = "0x2B4B57C")]
	public SetEnumFlag()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01C08", Offset = "0xE01C08")]
public class StepRotateion : ActionTask<Transform>
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Quaternion> targetRot;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rotTime;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion curRot;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion tarRot;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Timeline timeline;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float elapsedLineTime;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x258A0E4", Offset = "0x258A0E4", VA = "0x258A0E4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x258A314", Offset = "0x258A314", VA = "0x258A314", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x258A440", Offset = "0x258A440", VA = "0x258A440")]
	public StepRotateion()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01C40", Offset = "0xE01C40")]
public class StepRotateionAngle : ActionTask<Transform>
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> rotateAngle;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rotTime;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion curRot;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion tarRot;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Timeline timeline;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float elapsedLineTime;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x258A48C", Offset = "0x258A48C", VA = "0x258A48C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x258A6A4", Offset = "0x258A6A4", VA = "0x258A6A4", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x258A7D0", Offset = "0x258A7D0", VA = "0x258A7D0")]
	public StepRotateionAngle()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01C78", Offset = "0xE01C78")]
public class StepLookAt : ActionTask<Transform>
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> targetTransf;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<bool> isHorizontal;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float rotTime;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion curRot;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion tarRot;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Timeline timeline;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float elapsedLineTime;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x2589CA4", Offset = "0x2589CA4", VA = "0x2589CA4", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x2589F6C", Offset = "0x2589F6C", VA = "0x2589F6C", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x258A098", Offset = "0x258A098", VA = "0x258A098")]
	public StepLookAt()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01CB0", Offset = "0xE01CB0")]
public class FierceStepLookAt : ActionTask<Transform>
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Transform> targetTransf;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<bool> isHorizontal;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float rotTime;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion curRot;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion tarRot;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x2925438", Offset = "0x2925438", VA = "0x2925438", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x292561C", Offset = "0x292561C", VA = "0x292561C", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x29256EC", Offset = "0x29256EC", VA = "0x29256EC")]
	public FierceStepLookAt()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01CE8", Offset = "0xE01CE8")]
public class LoopRotateion : ActionTask<Transform>
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Timeline timeline;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float elapsedLineTime;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x2CFA73C", Offset = "0x2CFA73C", VA = "0x2CFA73C", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x2CFA7D0", Offset = "0x2CFA7D0", VA = "0x2CFA7D0", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x2CFA8F4", Offset = "0x2CFA8F4", VA = "0x2CFA8F4")]
	public LoopRotateion()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01D20", Offset = "0xE01D20")]
public class RotateAngle : ActionTask<Transform>
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Vector3> rotateAngle;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Timeline timeline;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float elapsedLineTime;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 distance;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 initRotate;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float rotTime;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x2B3FAC0", Offset = "0x2B3FAC0", VA = "0x2B3FAC0", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x2B3FD38", Offset = "0x2B3FD38", VA = "0x2B3FD38", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x2B3FED8", Offset = "0x2B3FED8", VA = "0x2B3FED8")]
	public RotateAngle()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01D58", Offset = "0xE01D58")]
public class SetRotateAngleY : ActionTask<Transform>
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<float> rotateAngle;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> initRotate;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float rotTime;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float Angle;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 EndRotate;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x2B4DA18", Offset = "0x2B4DA18", VA = "0x2B4DA18", Slot = "16")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x2B4DB78", Offset = "0x2B4DB78", VA = "0x2B4DB78", Slot = "17")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x2B4DD08", Offset = "0x2B4DD08", VA = "0x2B4DD08")]
	public SetRotateAngleY()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE01D90", Offset = "0xE01D90")]
public class CheckEnumFlag : ConditionTask
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[BlackboardOnly]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE15E50", Offset = "0xE15E50")]
	public readonly BBObjectParameter Variable;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly BBObjectParameter Flag;

	[Token(Token = "0x1700004C")]
	protected override string info
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x22AB0D8", Offset = "0x22AB0D8", VA = "0x22AB0D8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x22AB128", Offset = "0x22AB128", VA = "0x22AB128", Slot = "18")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x22AB220", Offset = "0x22AB220", VA = "0x22AB220")]
	public CheckEnumFlag()
	{
	}
}
[Token(Token = "0x2000071")]
internal class RaycastJobManager : MonoSingleton<RaycastJobManager>
{
	[Token(Token = "0x2000072")]
	public struct RayData
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResultsDelegate cb;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RaycastCommand raycastCommand;

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x2EE53D4", Offset = "0x2EE53D4", VA = "0x2EE53D4")]
		public RaycastCommand GetCommand()
		{
			return default(RaycastCommand);
		}
	}

	[Token(Token = "0x2000073")]
	public delegate void ResultsDelegate(int index, int length);

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<RayData> rayDatas;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int hitTotle;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private JobHandle handle;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit raycastHit;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x2687170", Offset = "0x2687170", VA = "0x2687170")]
	public void Add(Vector3 origin, Vector3 direction, float distance, int maxHits, int layerMask, ResultsDelegate cb)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x26872DC", Offset = "0x26872DC", VA = "0x26872DC")]
	public void FristAdd(Vector3 origin, Vector3 direction, float distance, int maxHits, int layerMask, RaycastHit hit)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x26873F4", Offset = "0x26873F4", VA = "0x26873F4")]
	private void GetResultsDelegate(int index, int length)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x2687430", Offset = "0x2687430", VA = "0x2687430")]
	public RaycastHit GetResult(int index)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x2687474", Offset = "0x2687474", VA = "0x2687474")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x26877A4", Offset = "0x26877A4", VA = "0x26877A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x268786C", Offset = "0x268786C", VA = "0x268786C")]
	public RaycastJobManager()
	{
	}
}
[Token(Token = "0x2000074")]
public class CameraInputDemo : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string infoText;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove myMove;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x2DFB4AC", Offset = "0x2DFB4AC", VA = "0x2DFB4AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x2DFB53C", Offset = "0x2DFB53C", VA = "0x2DFB53C")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x2DFB5A0", Offset = "0x2DFB5A0", VA = "0x2DFB5A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x2DFB6FC", Offset = "0x2DFB6FC", VA = "0x2DFB6FC")]
	public void ShowInformation(string text)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x2DFB704", Offset = "0x2DFB704", VA = "0x2DFB704")]
	public CameraInputDemo()
	{
	}
}
[Token(Token = "0x2000075")]
public class EventReceiver : MonoBehaviour
{
	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01DC8", Offset = "0xE01DC8")]
	private sealed class <SetDestinationRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventReceiver <>4__this;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object target;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent <agent>5__2;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private navMove <myMove>5__3;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <remain>5__4;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AC")]
			[Address(RVA = "0x272DCB0", Offset = "0x272DCB0", VA = "0x272DCB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x272DCF8", Offset = "0x272DCF8", VA = "0x272DCF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x272D9B8", Offset = "0x272D9B8", VA = "0x272D9B8")]
		[DebuggerHidden]
		public <SetDestinationRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x272D9E4", Offset = "0x272D9E4", VA = "0x272D9E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x272D9E8", Offset = "0x272D9E8", VA = "0x272D9E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x272DCB8", Offset = "0x272DCB8", VA = "0x272DCB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01DD8", Offset = "0xE01DD8")]
	private sealed class <ActivateForTimeRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <tar>5__2;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B2")]
			[Address(RVA = "0x272D968", Offset = "0x272D968", VA = "0x272D968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B4")]
			[Address(RVA = "0x272D9B0", Offset = "0x272D9B0", VA = "0x272D9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x272D81C", Offset = "0x272D81C", VA = "0x272D81C")]
		[DebuggerHidden]
		public <ActivateForTimeRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x272D848", Offset = "0x272D848", VA = "0x272D848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x272D84C", Offset = "0x272D84C", VA = "0x272D84C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x272D970", Offset = "0x272D970", VA = "0x272D970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x28C0218", Offset = "0x28C0218", VA = "0x28C0218")]
	public void MyMethod()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x28C021C", Offset = "0x28C021C", VA = "0x28C021C")]
	public void PrintText(string text)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x28C0280", Offset = "0x28C0280", VA = "0x28C0280")]
	public void RotateSprite(float newRot)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x28C02F0", Offset = "0x28C02F0", VA = "0x28C02F0")]
	public void SetDestination(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x28C031C", Offset = "0x28C031C", VA = "0x28C031C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24A4C", Offset = "0xE24A4C")]
	private IEnumerator SetDestinationRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x28C03B0", Offset = "0x28C03B0", VA = "0x28C03B0")]
	public void ActivateForTime(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x28C03DC", Offset = "0x28C03DC", VA = "0x28C03DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24AAC", Offset = "0xE24AAC")]
	private IEnumerator ActivateForTimeRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x28C0454", Offset = "0x28C0454", VA = "0x28C0454")]
	public EventReceiver()
	{
	}
}
[Token(Token = "0x2000078")]
public class PathInputDemo : MonoBehaviour
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float progress;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove move;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x26A4FE8", Offset = "0x26A4FE8", VA = "0x26A4FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x26A50A8", Offset = "0x26A50A8", VA = "0x26A50A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x26A527C", Offset = "0x26A527C", VA = "0x26A527C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x26A5344", Offset = "0x26A5344", VA = "0x26A5344")]
	public PathInputDemo()
	{
	}
}
[Token(Token = "0x2000079")]
public class RapidInputDemo : MonoBehaviour
{
	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01DE8", Offset = "0xE01DE8")]
	private sealed class <SlowDown>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapidInputDemo <>4__this;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <rate>5__3;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <speed>5__4;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0x2EE5384", Offset = "0x2EE5384", VA = "0x2EE5384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0x2EE53CC", Offset = "0x2EE53CC", VA = "0x2EE53CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x2EE510C", Offset = "0x2EE510C", VA = "0x2EE510C")]
		[DebuggerHidden]
		public <SlowDown>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x2EE5138", Offset = "0x2EE5138", VA = "0x2EE5138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x2EE513C", Offset = "0x2EE513C", VA = "0x2EE513C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x2EE538C", Offset = "0x2EE538C", VA = "0x2EE538C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh speedDisplay;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh timeDisplay;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float topSpeed;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float addSpeed;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delay;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slowTime;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minPitch;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxPitch;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private splineMove move;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentSpeed;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeCounter;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x2686CAC", Offset = "0x2686CAC", VA = "0x2686CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x2686E24", Offset = "0x2686E24", VA = "0x2686E24")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x26870DC", Offset = "0x26870DC", VA = "0x26870DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24BAC", Offset = "0xE24BAC")]
	private IEnumerator SlowDown()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x2687154", Offset = "0x2687154", VA = "0x2687154")]
	public RapidInputDemo()
	{
	}
}
[Token(Token = "0x200007B")]
public class RotationHelper : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rotation;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x2B4066C", Offset = "0x2B4066C", VA = "0x2B4066C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x2B40700", Offset = "0x2B40700", VA = "0x2B40700")]
	public RotationHelper()
	{
	}
}
[Token(Token = "0x200007C")]
public class RuntimeDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007D")]
	public class ExampleClass1
	{
		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject walkerPrefab;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pathPrefab;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x2EE8508", Offset = "0x2EE8508", VA = "0x2EE8508")]
		public ExampleClass1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200007E")]
	public class ExampleClass2
	{
		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pathName1;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string pathName2;

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x2EE8510", Offset = "0x2EE8510", VA = "0x2EE8510")]
		public ExampleClass2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200007F")]
	public class ExampleClass3
	{
		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x2EE8518", Offset = "0x2EE8518", VA = "0x2EE8518")]
		public ExampleClass3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000080")]
	public class ExampleClass4
	{
		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x2EE8520", Offset = "0x2EE8520", VA = "0x2EE8520")]
		public ExampleClass4()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000081")]
	public class ExampleClass5
	{
		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x2EE8528", Offset = "0x2EE8528", VA = "0x2EE8528")]
		public ExampleClass5()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000082")]
	public class ExampleClass6
	{
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x2EE8530", Offset = "0x2EE8530", VA = "0x2EE8530")]
		public ExampleClass6()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000083")]
	public class ExampleClass7
	{
		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool done;

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x2EE8538", Offset = "0x2EE8538", VA = "0x2EE8538")]
		public ExampleClass7()
		{
		}
	}

	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE01DF8", Offset = "0xE01DF8")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RuntimeDemo <>4__this;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventReceiver receiver;

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x2EE84CC", Offset = "0x2EE84CC", VA = "0x2EE84CC")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x2EE84D4", Offset = "0x2EE84D4", VA = "0x2EE84D4")]
		internal void <DrawExample6>b__0()
		{
		}
	}

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExampleClass1 example1;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExampleClass2 example2;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExampleClass3 example3;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExampleClass4 example4;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExampleClass5 example5;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExampleClass6 example6;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExampleClass6 example7;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x2B43B94", Offset = "0x2B43B94", VA = "0x2B43B94")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x2B43BE0", Offset = "0x2B43BE0", VA = "0x2B43BE0")]
	private void DrawExample1()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x2B43FD8", Offset = "0x2B43FD8", VA = "0x2B43FD8")]
	private void DrawExample2()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x2B441E8", Offset = "0x2B441E8", VA = "0x2B441E8")]
	private void DrawExample3()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x2B44474", Offset = "0x2B44474", VA = "0x2B44474")]
	private void DrawExample4()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x2B44680", Offset = "0x2B44680", VA = "0x2B44680")]
	private void DrawExample5()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x2B447BC", Offset = "0x2B447BC", VA = "0x2B447BC")]
	private void DrawExample6()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2B44A28", Offset = "0x2B44A28", VA = "0x2B44A28")]
	private void DrawExample7()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x2B44E88", Offset = "0x2B44E88", VA = "0x2B44E88")]
	public RuntimeDemo()
	{
	}
}
[Token(Token = "0x2000085")]
public class ShowcaseGUI : MonoBehaviour
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShowcaseGUI instance;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int levels;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x2581610", Offset = "0x2581610", VA = "0x2581610")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x2581ACC", Offset = "0x2581ACC", VA = "0x2581ACC")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x25817B8", Offset = "0x25817B8", VA = "0x25817B8")]
	private void ActivateSurroundings()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x2581AD0", Offset = "0x2581AD0", VA = "0x2581AD0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x2581F9C", Offset = "0x2581F9C", VA = "0x2581F9C")]
	public ShowcaseGUI()
	{
	}
}
[Token(Token = "0x2000086")]
public class XMLNode : Hashtable
{
	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x2D11618", Offset = "0x2D11618", VA = "0x2D11618")]
	public XMLNodeList GetNodeList(string path)
	{
		return null;
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x2D11948", Offset = "0x2D11948", VA = "0x2D11948")]
	public XMLNode GetNode(string path)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x2D119DC", Offset = "0x2D119DC", VA = "0x2D119DC")]
	public string GetValue(string path)
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x2D116AC", Offset = "0x2D116AC", VA = "0x2D116AC")]
	private object GetObject(string path)
	{
		return null;
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x2D11A4C", Offset = "0x2D11A4C", VA = "0x2D11A4C")]
	public XMLNode()
	{
	}
}
[Token(Token = "0x2000087")]
public class XMLNodeList : ArrayList
{
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x2D11A54", Offset = "0x2D11A54", VA = "0x2D11A54")]
	public XMLNode Pop()
	{
		return null;
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x2D11B1C", Offset = "0x2D11B1C", VA = "0x2D11B1C")]
	public int Push(XMLNode item)
	{
		return default(int);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x2D11B58", Offset = "0x2D11B58", VA = "0x2D11B58")]
	public XMLNodeList()
	{
	}
}
[Token(Token = "0x2000088")]
public class XMLParser
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private char LT;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private char GT;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private char SPACE;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	private char QUOTE;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private char QUOTE2;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private char SLASH;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private char QMARK;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private char EQUALS;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private char EXCLAMATION;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private char DASH;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private char SQR;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private char[] replaceChars;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x2D11BBC", Offset = "0x2D11BBC", VA = "0x2D11BBC")]
	private string ProcessAttributName(string attname)
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x2D11CE0", Offset = "0x2D11CE0", VA = "0x2D11CE0")]
	public XMLNode Parse(string content)
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x2D1284C", Offset = "0x2D1284C", VA = "0x2D1284C")]
	public XMLParser()
	{
	}
}
[Token(Token = "0x2000089")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01E08", Offset = "0xE01E08")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01E08", Offset = "0xE01E08")]
public abstract class MeshChainRenderer : MonoBehaviour
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly GradientColorKey k_DefaultStartColor;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly GradientColorKey k_DefaultEndColor;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly GradientAlphaKey k_DefaultStartAlpha;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly GradientAlphaKey k_DefaultEndAlpha;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE15EA8", Offset = "0xE15EA8")]
	[SerializeField]
	protected Material[] m_Materials;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE15EF4", Offset = "0xE15EF4")]
	protected float m_Width;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE15F40", Offset = "0xE15F40")]
	protected AnimationCurve m_WidthCurve;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE15F8C", Offset = "0xE15F8C")]
	[SerializeField]
	protected Gradient m_Color;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	protected MeshRenderer m_MeshRenderer;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected XRMeshChain m_XRMeshData;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_MeshNeedsRefreshing;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_StepSize;

	[Token(Token = "0x17000053")]
	public virtual Material material
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x2D00C70", Offset = "0x2D00C70", VA = "0x2D00C70", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x2D00C8C", Offset = "0x2D00C8C", VA = "0x2D00C8C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public virtual Material[] materials
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x2D00CA8", Offset = "0x2D00CA8", VA = "0x2D00CA8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x2D00CC4", Offset = "0x2D00CC4", VA = "0x2D00CC4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public virtual Material sharedMaterial
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x2D00CE0", Offset = "0x2D00CE0", VA = "0x2D00CE0", Slot = "8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x2D00CFC", Offset = "0x2D00CFC", VA = "0x2D00CFC", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public virtual Material[] SharedMaterials
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x2D00D18", Offset = "0x2D00D18", VA = "0x2D00D18", Slot = "10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x2D00D34", Offset = "0x2D00D34", VA = "0x2D00D34", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float widthStart
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x2D00D50", Offset = "0x2D00D50", VA = "0x2D00D50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x2D00D8C", Offset = "0x2D00D8C", VA = "0x2D00D8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float widthEnd
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x2D00E18", Offset = "0x2D00E18", VA = "0x2D00E18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x2D00E54", Offset = "0x2D00E54", VA = "0x2D00E54")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float widthMultiplier
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x2D00EF4", Offset = "0x2D00EF4", VA = "0x2D00EF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x2D00EFC", Offset = "0x2D00EFC", VA = "0x2D00EFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public AnimationCurve widthCurve
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x2D00F10", Offset = "0x2D00F10", VA = "0x2D00F10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x2D00F18", Offset = "0x2D00F18", VA = "0x2D00F18")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public Gradient colorGradient
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x2D01034", Offset = "0x2D01034", VA = "0x2D01034")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x2D0103C", Offset = "0x2D0103C", VA = "0x2D0103C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public Color colorStart
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x2D0125C", Offset = "0x2D0125C", VA = "0x2D0125C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x2D0127C", Offset = "0x2D0127C", VA = "0x2D0127C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public Color colorEnd
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x2D01360", Offset = "0x2D01360", VA = "0x2D01360")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x2D01380", Offset = "0x2D01380", VA = "0x2D01380")]
		set
		{
		}
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x2D01488", Offset = "0x2D01488", VA = "0x2D01488")]
	public void SetTotalWidth(float newWidth)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x2D015A8", Offset = "0x2D015A8", VA = "0x2D015A8")]
	public void SetTotalColor(Color newColor)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x2D017E4", Offset = "0x2D017E4", VA = "0x2D017E4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x2D0182C", Offset = "0x2D0182C", VA = "0x2D0182C")]
	private void SetupMeshBackend()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x2D01C38", Offset = "0x2D01C38", VA = "0x2D01C38", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2D01C68", Offset = "0x2D01C68", VA = "0x2D01C68")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2D01C98", Offset = "0x2D01C98", VA = "0x2D01C98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2D01CA8", Offset = "0x2D01CA8", VA = "0x2D01CA8", Slot = "13")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2D01CE4", Offset = "0x2D01CE4", VA = "0x2D01CE4")]
	public static implicit operator Renderer(MeshChainRenderer lr)
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x2D01BAC", Offset = "0x2D01BAC", VA = "0x2D01BAC")]
	private void EditorCheckForUpdate()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x2D01CFC", Offset = "0x2D01CFC", VA = "0x2D01CFC", Slot = "14")]
	protected virtual void UpdateColors()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x2D01D00", Offset = "0x2D01D00", VA = "0x2D01D00", Slot = "15")]
	protected virtual void UpdateWidth()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x2D01D04", Offset = "0x2D01D04", VA = "0x2D01D04", Slot = "16")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x2D01D08", Offset = "0x2D01D08", VA = "0x2D01D08", Slot = "17")]
	protected virtual bool NeedsReinitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x2D01D10", Offset = "0x2D01D10", VA = "0x2D01D10", Slot = "18")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x2D01D30", Offset = "0x2D01D30", VA = "0x2D01D30", Slot = "19")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x2D01D50", Offset = "0x2D01D50", VA = "0x2D01D50")]
	protected MeshChainRenderer()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01EBC", Offset = "0xE01EBC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01EBC", Offset = "0xE01EBC")]
[ExecuteInEditMode]
public class XRLineRenderer : MeshChainRenderer
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16010", Offset = "0xE16010")]
	[SerializeField]
	private Vector3[] m_Positions;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1605C", Offset = "0xE1605C")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE1605C", Offset = "0xE1605C")]
	private bool m_UseWorldSpace;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE160CC", Offset = "0xE160CC")]
	private bool m_Loop;

	[Token(Token = "0x1700005E")]
	public bool useWorldSpace
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x2D12D50", Offset = "0x2D12D50", VA = "0x2D12D50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	public override Material material
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x2D12D58", Offset = "0x2D12D58", VA = "0x2D12D58", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x2D12D74", Offset = "0x2D12D74", VA = "0x2D12D74", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public override Material[] materials
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x2D12E98", Offset = "0x2D12E98", VA = "0x2D12E98", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x2D12EB4", Offset = "0x2D12EB4", VA = "0x2D12EB4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public override Material sharedMaterial
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x2D12EE8", Offset = "0x2D12EE8", VA = "0x2D12EE8", Slot = "8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x2D12F04", Offset = "0x2D12F04", VA = "0x2D12F04", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public override Material[] SharedMaterials
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x2D12F38", Offset = "0x2D12F38", VA = "0x2D12F38", Slot = "10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x2D12F54", Offset = "0x2D12F54", VA = "0x2D12F54", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x2D12DA8", Offset = "0x2D12DA8", VA = "0x2D12DA8")]
	private void CopyWorldSpaceDataFromMaterial()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x2D12F88", Offset = "0x2D12F88", VA = "0x2D12F88")]
	public Vector3 GetPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x2D12FD0", Offset = "0x2D12FD0", VA = "0x2D12FD0")]
	public void SetPosition(int index, Vector3 position)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x2D134D4", Offset = "0x2D134D4", VA = "0x2D134D4")]
	public int GetPositionSize()
	{
		return default(int);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x2D134EC", Offset = "0x2D134EC", VA = "0x2D134EC")]
	public int GetPositions(Vector3[] positions)
	{
		return default(int);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x2D1352C", Offset = "0x2D1352C", VA = "0x2D1352C")]
	public void SetPositions(Vector3[] newPositions, bool knownSizeChange = false)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x2D13728", Offset = "0x2D13728", VA = "0x2D13728")]
	public void SetVertexCount(int count)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x2D13858", Offset = "0x2D13858", VA = "0x2D13858")]
	public int GetVertexCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x2D13874", Offset = "0x2D13874", VA = "0x2D13874", Slot = "14")]
	protected override void UpdateColors()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x2D13BF4", Offset = "0x2D13BF4", VA = "0x2D13BF4", Slot = "15")]
	protected override void UpdateWidth()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x2D1406C", Offset = "0x2D1406C", VA = "0x2D1406C", Slot = "16")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x2D14B3C", Offset = "0x2D14B3C", VA = "0x2D14B3C", Slot = "17")]
	protected override bool NeedsReinitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x2D14BA8", Offset = "0x2D14BA8", VA = "0x2D14BA8")]
	public XRLineRenderer()
	{
	}
}
[Token(Token = "0x200008B")]
public class XRMeshChain
{
	[Token(Token = "0x200008C")]
	[Flags]
	public enum MeshRefreshFlag
	{
		[Token(Token = "0x4000268")]
		None = 0,
		[Token(Token = "0x4000269")]
		Positions = 1,
		[Token(Token = "0x400026A")]
		Colors = 2,
		[Token(Token = "0x400026B")]
		Sizes = 4,
		[Token(Token = "0x400026C")]
		All = 7
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3[] m_Verts;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color32[] m_Colors;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector4> m_ShapeData;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> m_NeighborPoints;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRefreshFlag m_DataThatNeedsUpdate;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh m_Mesh;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_OwnerTransform;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_WorldSpaceData;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE16118", Offset = "0xE16118")]
	private int <reservedElements>k__BackingField;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE16128", Offset = "0xE16128")]
	private bool <centerAtRoot>k__BackingField;

	[Token(Token = "0x17000063")]
	public bool worldSpaceData
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x2D14C0C", Offset = "0x2D14C0C", VA = "0x2D14C0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x2D14C14", Offset = "0x2D14C14", VA = "0x2D14C14")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public int reservedElements
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x2D14C20", Offset = "0x2D14C20", VA = "0x2D14C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24C5C", Offset = "0xE24C5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x2D14C28", Offset = "0x2D14C28", VA = "0x2D14C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24C6C", Offset = "0xE24C6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool centerAtRoot
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x2D14C30", Offset = "0x2D14C30", VA = "0x2D14C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24C7C", Offset = "0xE24C7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x2D14C38", Offset = "0x2D14C38", VA = "0x2D14C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24C8C", Offset = "0xE24C8C")]
		set
		{
		}
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x2D144D0", Offset = "0x2D144D0", VA = "0x2D144D0")]
	public XRMeshChain()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x2D14500", Offset = "0x2D14500", VA = "0x2D14500")]
	public void GenerateMesh(GameObject owner, bool dynamic, int totalElements)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x2D14C44", Offset = "0x2D14C44", VA = "0x2D14C44")]
	public void RefreshMesh()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x2D134C4", Offset = "0x2D134C4", VA = "0x2D134C4")]
	public void SetMeshDataDirty(MeshRefreshFlag dataThatNeedsUpdate)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x2D1332C", Offset = "0x2D1332C", VA = "0x2D1332C")]
	public void SetElementPosition(int elementIndex, ref Vector3 position)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x2D13188", Offset = "0x2D13188", VA = "0x2D13188")]
	public void SetElementPipe(int elementIndex, ref Vector3 startPoint, ref Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x2D13D90", Offset = "0x2D13D90", VA = "0x2D13D90")]
	public void SetElementSize(int elementIndex, float sizeModification)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x2D13EFC", Offset = "0x2D13EFC", VA = "0x2D13EFC")]
	public void SetElementSize(int elementIndex, float startSize, float endSize)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x2D13A0C", Offset = "0x2D13A0C", VA = "0x2D13A0C")]
	public void SetElementColor(int elementIndex, ref Color color)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x2D14D98", Offset = "0x2D14D98", VA = "0x2D14D98")]
	public void SetElementColor32(int elementIndex, ref Color32 color)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x2D13AFC", Offset = "0x2D13AFC", VA = "0x2D13AFC")]
	public void SetElementColor(int elementIndex, ref Color startColor, ref Color endColor)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x2D14E4C", Offset = "0x2D14E4C", VA = "0x2D14E4C")]
	public void SetElementColor32(int elementIndex, ref Color32 startColor, ref Color32 endColor)
	{
	}
}
[Token(Token = "0x200008D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01F70", Offset = "0xE01F70")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE01F70", Offset = "0xE01F70")]
[ExecuteInEditMode]
public class XRTrailRenderer : MeshChainRenderer
{
	[Token(Token = "0x400026D")]
	private const float k_AbsoluteMinVertexDistance = 0.01f;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16138", Offset = "0xE16138")]
	private int m_MaxTrailPoints;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16184", Offset = "0xE16184")]
	private bool m_StealLastPointWhenEmpty;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE161D0", Offset = "0xE161D0")]
	[SerializeField]
	private float m_Time;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1621C", Offset = "0xE1621C")]
	[SerializeField]
	private float m_MinVertexDistance;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16268", Offset = "0xE16268")]
	[SerializeField]
	private bool m_Autodestruct;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE162B4", Offset = "0xE162B4")]
	[SerializeField]
	private bool m_SmoothInterpolation;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] m_Points;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] m_PointTimes;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_PointIndexStart;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_PointIndexEnd;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_LastRecordedPoint;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_LastPointTime;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_EditorDeltaHelper;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE16300", Offset = "0xE16300")]
	private int <positionCount>k__BackingField;

	[Token(Token = "0x17000066")]
	public float time
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x2D14F10", Offset = "0x2D14F10", VA = "0x2D14F10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x2D14F18", Offset = "0x2D14F18", VA = "0x2D14F18")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public float minVertexDistance
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x2D14F44", Offset = "0x2D14F44", VA = "0x2D14F44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x2D14F4C", Offset = "0x2D14F4C", VA = "0x2D14F4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public int positionCount
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x2D14F7C", Offset = "0x2D14F7C", VA = "0x2D14F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24C9C", Offset = "0xE24C9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x2D14F84", Offset = "0x2D14F84", VA = "0x2D14F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24CAC", Offset = "0xE24CAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public bool autodestruct
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x2D14F8C", Offset = "0x2D14F8C", VA = "0x2D14F8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x2D14F94", Offset = "0x2D14F94", VA = "0x2D14F94")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool smoothInterpolation
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x2D14FA0", Offset = "0x2D14FA0", VA = "0x2D14FA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x2D14FA8", Offset = "0x2D14FA8", VA = "0x2D14FA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x2D14FB4", Offset = "0x2D14FB4", VA = "0x2D14FB4", Slot = "13")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x2D157EC", Offset = "0x2D157EC", VA = "0x2D157EC")]
	public void EditorCheckForUpdate()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x2D157FC", Offset = "0x2D157FC", VA = "0x2D157FC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x2D15924", Offset = "0x2D15924", VA = "0x2D15924", Slot = "16")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x2D15B00", Offset = "0x2D15B00", VA = "0x2D15B00", Slot = "17")]
	protected override bool NeedsReinitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x2D15B7C", Offset = "0x2D15B7C", VA = "0x2D15B7C", Slot = "18")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x2D15BA8", Offset = "0x2D15BA8", VA = "0x2D15BA8")]
	public XRTrailRenderer()
	{
	}
}
namespace SWS
{
	[Token(Token = "0x200008E")]
	public class EventCollisionTrigger : MonoBehaviour
	{
		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onTrigger;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool onCollision;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent myEvent;

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x28BFE48", Offset = "0x28BFE48", VA = "0x28BFE48")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x28BFE70", Offset = "0x28BFE70", VA = "0x28BFE70")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x28BFE98", Offset = "0x28BFE98", VA = "0x28BFE98")]
		public void ApplyForce(int power)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x28C00BC", Offset = "0x28C00BC", VA = "0x28C00BC")]
		public EventCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x200008F")]
	public class MoveAnimator : MonoBehaviour
	{
		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private splineMove sMove;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent nAgent;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastRotY;

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x2698B14", Offset = "0x2698B14", VA = "0x2698B14")]
		private void Start()
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x2698C1C", Offset = "0x2698C1C", VA = "0x2698C1C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x2698E4C", Offset = "0x2698E4C", VA = "0x2698E4C")]
		public MoveAnimator()
		{
		}
	}
	[Token(Token = "0x2000090")]
	public class PathIndicator : MonoBehaviour
	{
		[Token(Token = "0x2000091")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02014", Offset = "0xE02014")]
		private sealed class <EmitParticles>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathIndicator <>4__this;

			[Token(Token = "0x1700006B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000355")]
				[Address(RVA = "0x2EE3454", Offset = "0x2EE3454", VA = "0x2EE3454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000357")]
				[Address(RVA = "0x2EE349C", Offset = "0x2EE349C", VA = "0x2EE349C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000352")]
			[Address(RVA = "0x2EE32A0", Offset = "0x2EE32A0", VA = "0x2EE32A0")]
			[DebuggerHidden]
			public <EmitParticles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000353")]
			[Address(RVA = "0x2EE32CC", Offset = "0x2EE32CC", VA = "0x2EE32CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000354")]
			[Address(RVA = "0x2EE32D0", Offset = "0x2EE32D0", VA = "0x2EE32D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000356")]
			[Address(RVA = "0x2EE345C", Offset = "0x2EE345C", VA = "0x2EE345C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float modRotation;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem pSys;

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x26A4EE8", Offset = "0x26A4EE8", VA = "0x26A4EE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x26A4F68", Offset = "0x26A4F68", VA = "0x26A4F68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24CBC", Offset = "0xE24CBC")]
		private IEnumerator EmitParticles()
		{
			return null;
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x26A4FE0", Offset = "0x26A4FE0", VA = "0x26A4FE0")]
		public PathIndicator()
		{
		}
	}
	[Token(Token = "0x2000092")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02024", Offset = "0xE02024")]
	public class PathRenderer : MonoBehaviour
	{
		[Token(Token = "0x2000093")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02084", Offset = "0xE02084")]
		private sealed class <StartRenderer>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400028D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400028E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400028F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathRenderer <>4__this;

			[Token(Token = "0x1700006D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000361")]
				[Address(RVA = "0x2EE3560", Offset = "0x2EE3560", VA = "0x2EE3560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000363")]
				[Address(RVA = "0x2EE35A8", Offset = "0x2EE35A8", VA = "0x2EE35A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600035E")]
			[Address(RVA = "0x2EE34A4", Offset = "0x2EE34A4", VA = "0x2EE34A4")]
			[DebuggerHidden]
			public <StartRenderer>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600035F")]
			[Address(RVA = "0x2EE34D0", Offset = "0x2EE34D0", VA = "0x2EE34D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000360")]
			[Address(RVA = "0x2EE34D4", Offset = "0x2EE34D4", VA = "0x2EE34D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000362")]
			[Address(RVA = "0x2EE3568", Offset = "0x2EE3568", VA = "0x2EE3568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onUpdate;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacing;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PathManager path;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer line;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] points;

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x26A5DBC", Offset = "0x26A5DBC", VA = "0x26A5DBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x26A5EB8", Offset = "0x26A5EB8", VA = "0x26A5EB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24D6C", Offset = "0xE24D6C")]
		private IEnumerator StartRenderer()
		{
			return null;
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x26A5F30", Offset = "0x26A5F30", VA = "0x26A5F30")]
		private void Render()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x26A6124", Offset = "0x26A6124", VA = "0x26A6124")]
		private void DrawCurved()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x26A6218", Offset = "0x26A6218", VA = "0x26A6218")]
		private void DrawLinear()
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x26A62BC", Offset = "0x26A62BC", VA = "0x26A62BC")]
		public PathRenderer()
		{
		}
	}
	[Token(Token = "0x2000094")]
	public class BezierPathManager : PathManager
	{
		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3[] pathPoints;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BezierPoint> bPoints;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showHandles;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool connectHandles;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color color3;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float pathDetail;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool customDetail;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<float> segmentDetail;

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x2AAD5A0", Offset = "0x2AAD5A0", VA = "0x2AAD5A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x2AAD93C", Offset = "0x2AAD93C", VA = "0x2AAD93C", Slot = "4")]
		public override void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x2AADC04", Offset = "0x2AADC04", VA = "0x2AADC04")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x2AADF28", Offset = "0x2AADF28", VA = "0x2AADF28", Slot = "6")]
		public override Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x2AAE020", Offset = "0x2AAE020", VA = "0x2AAE020", Slot = "9")]
		public override int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x2AAE06C", Offset = "0x2AAE06C", VA = "0x2AAE06C", Slot = "7")]
		public override Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x2AAE0E8", Offset = "0x2AAE0E8", VA = "0x2AAE0E8", Slot = "8")]
		public override int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x2AAD648", Offset = "0x2AAD648", VA = "0x2AAD648")]
		public void CalculatePath()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x2AAE1DC", Offset = "0x2AAE1DC", VA = "0x2AAE1DC")]
		private List<Vector3> GetPoints(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float detail)
		{
			return null;
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x2AAE3D8", Offset = "0x2AAE3D8", VA = "0x2AAE3D8")]
		public BezierPathManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000095")]
	public class BezierPoint
	{
		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wp;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] cp;

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x2DE89F4", Offset = "0x2DE89F4", VA = "0x2DE89F4")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x2000096")]
	public class PathManager : MonoBehaviour
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] waypoints;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawCurved;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawDirection;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color1;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color2;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 size;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float radius;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool skipCustomNames;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject replaceObject;

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x26A5354", Offset = "0x26A5354", VA = "0x26A5354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x26A53CC", Offset = "0x26A53CC", VA = "0x26A53CC")]
		public void Create([Optional] Transform parent)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x26A575C", Offset = "0x26A575C", VA = "0x26A575C", Slot = "4")]
		public virtual void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x26A5874", Offset = "0x26A5874", VA = "0x26A5874")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x26A5B20", Offset = "0x26A5B20", VA = "0x26A5B20", Slot = "5")]
		public virtual float GetHandleSize(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x26A5B28", Offset = "0x26A5B28", VA = "0x26A5B28", Slot = "6")]
		public virtual Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x26A5C68", Offset = "0x26A5C68", VA = "0x26A5C68", Slot = "7")]
		public virtual Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x26A5CA4", Offset = "0x26A5CA4", VA = "0x26A5CA4", Slot = "8")]
		public virtual int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x26A5CAC", Offset = "0x26A5CAC", VA = "0x26A5CAC", Slot = "9")]
		public virtual int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x26A5CC8", Offset = "0x26A5CC8", VA = "0x26A5CC8")]
		public PathManager()
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class WaypointManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02094", Offset = "0xE02094")]
		private sealed class <>c
		{
			[Token(Token = "0x40002A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40002A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, PathManager>, bool> <>9__3_0;

			[Token(Token = "0x40002A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, PathManager>, string> <>9__3_1;

			[Token(Token = "0x6000386")]
			[Address(RVA = "0x313630C", Offset = "0x313630C", VA = "0x313630C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000387")]
			[Address(RVA = "0x3136314", Offset = "0x3136314", VA = "0x3136314")]
			internal bool <CleanUp>b__3_0(KeyValuePair<string, PathManager> p)
			{
				return default(bool);
			}

			[Token(Token = "0x6000388")]
			[Address(RVA = "0x3136388", Offset = "0x3136388", VA = "0x3136388")]
			internal string <CleanUp>b__3_1(KeyValuePair<string, PathManager> p)
			{
				return null;
			}
		}

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<string, PathManager> Paths;

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x2D0FB1C", Offset = "0x2D0FB1C", VA = "0x2D0FB1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x2D0FB84", Offset = "0x2D0FB84", VA = "0x2D0FB84")]
		public static void AddPath(GameObject path)
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x2D10074", Offset = "0x2D10074", VA = "0x2D10074")]
		public static void CleanUp()
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x2D1036C", Offset = "0x2D1036C", VA = "0x2D1036C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x2D103F0", Offset = "0x2D103F0", VA = "0x2D103F0")]
		public static void DrawStraight(Vector3[] waypoints)
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x2D10484", Offset = "0x2D10484", VA = "0x2D10484")]
		public static void DrawCurved(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x2D1057C", Offset = "0x2D1057C", VA = "0x2D1057C")]
		public static Vector3[] GetCurved(Vector3[] waypoints)
		{
			return null;
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x2D10718", Offset = "0x2D10718", VA = "0x2D10718")]
		public static Vector3 GetPoint(Vector3[] gizmoPoints, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x2D108C8", Offset = "0x2D108C8", VA = "0x2D108C8")]
		public static float GetPathLength(Vector3[] waypoints)
		{
			return default(float);
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x2D10978", Offset = "0x2D10978", VA = "0x2D10978")]
		public static List<Vector3> SmoothCurve(List<Vector3> pathToCurve, int interpolations)
		{
			return null;
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x2D10C04", Offset = "0x2D10C04", VA = "0x2D10C04")]
		public WaypointManager()
		{
		}
	}
	[Token(Token = "0x2000099")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE020A4", Offset = "0xE020A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE020A4", Offset = "0xE020A4")]
	public class navMove : MonoBehaviour
	{
		[Token(Token = "0x200009A")]
		public enum LoopType
		{
			[Token(Token = "0x40002B8")]
			none,
			[Token(Token = "0x40002B9")]
			loop,
			[Token(Token = "0x40002BA")]
			pingPong,
			[Token(Token = "0x40002BB")]
			random
		}

		[Token(Token = "0x200009B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02128", Offset = "0xE02128")]
		private sealed class <Move>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x1700006F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600039F")]
				[Address(RVA = "0x313777C", Offset = "0x313777C", VA = "0x313777C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000070")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003A1")]
				[Address(RVA = "0x31377C4", Offset = "0x31377C4", VA = "0x31377C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600039C")]
			[Address(RVA = "0x31375D4", Offset = "0x31375D4", VA = "0x31375D4")]
			[DebuggerHidden]
			public <Move>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600039D")]
			[Address(RVA = "0x3137600", Offset = "0x3137600", VA = "0x3137600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600039E")]
			[Address(RVA = "0x3137604", Offset = "0x3137604", VA = "0x3137604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003A0")]
			[Address(RVA = "0x3137784", Offset = "0x3137784", VA = "0x3137784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200009C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02138", Offset = "0xE02138")]
		private sealed class <NextWaypoint>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000071")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003A5")]
				[Address(RVA = "0x3137B48", Offset = "0x3137B48", VA = "0x3137B48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000072")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003A7")]
				[Address(RVA = "0x3137B90", Offset = "0x3137B90", VA = "0x3137B90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003A2")]
			[Address(RVA = "0x31377CC", Offset = "0x31377CC", VA = "0x31377CC")]
			[DebuggerHidden]
			public <NextWaypoint>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60003A3")]
			[Address(RVA = "0x31377F8", Offset = "0x31377F8", VA = "0x31377F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003A4")]
			[Address(RVA = "0x31377FC", Offset = "0x31377FC", VA = "0x31377FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x3137B50", Offset = "0x3137B50", VA = "0x3137B50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200009D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02148", Offset = "0xE02148")]
		private sealed class <WaitForDestination>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x40002C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <remain>5__2;

			[Token(Token = "0x17000073")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003AB")]
				[Address(RVA = "0x31380D8", Offset = "0x31380D8", VA = "0x31380D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000074")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003AD")]
				[Address(RVA = "0x3138120", Offset = "0x3138120", VA = "0x3138120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003A8")]
			[Address(RVA = "0x3137ED0", Offset = "0x3137ED0", VA = "0x3137ED0")]
			[DebuggerHidden]
			public <WaitForDestination>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x3137EFC", Offset = "0x3137EFC", VA = "0x3137EFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003AA")]
			[Address(RVA = "0x3137F00", Offset = "0x3137F00", VA = "0x3137F00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x31380E0", Offset = "0x31380E0", VA = "0x31380E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200009E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02158", Offset = "0xE02158")]
		private sealed class <ReachedEnd>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000075")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003B1")]
				[Address(RVA = "0x3137D44", Offset = "0x3137D44", VA = "0x3137D44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000076")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003B3")]
				[Address(RVA = "0x3137D8C", Offset = "0x3137D8C", VA = "0x3137D8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x3137B98", Offset = "0x3137B98", VA = "0x3137B98")]
			[DebuggerHidden]
			public <ReachedEnd>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x3137BC4", Offset = "0x3137BC4", VA = "0x3137BC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x3137BC8", Offset = "0x3137BC8", VA = "0x3137BC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003B2")]
			[Address(RVA = "0x3137D4C", Offset = "0x3137D4C", VA = "0x3137D4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200009F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02168", Offset = "0xE02168")]
		private sealed class <Wait>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x40002CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public navMove <>4__this;

			[Token(Token = "0x17000077")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003B7")]
				[Address(RVA = "0x3137E80", Offset = "0x3137E80", VA = "0x3137E80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000078")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003B9")]
				[Address(RVA = "0x3137EC8", Offset = "0x3137EC8", VA = "0x3137EC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003B4")]
			[Address(RVA = "0x3137D94", Offset = "0x3137D94", VA = "0x3137D94")]
			[DebuggerHidden]
			public <Wait>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60003B5")]
			[Address(RVA = "0x3137DC0", Offset = "0x3137DC0", VA = "0x3137DC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003B6")]
			[Address(RVA = "0x3137DC4", Offset = "0x3137DC4", VA = "0x3137DC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003B8")]
			[Address(RVA = "0x3137E88", Offset = "0x3137E88", VA = "0x3137E88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool updateRotation;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LoopType loopType;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform[] waypoints;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool repeat;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshAgent agent;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private System.Random rand;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rndIndex;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool waiting;

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x27261DC", Offset = "0x27261DC", VA = "0x27261DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x2726238", Offset = "0x2726238", VA = "0x2726238")]
		private void Start()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x2726248", Offset = "0x2726248", VA = "0x2726248")]
		public void StartMove()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x2726524", Offset = "0x2726524", VA = "0x2726524")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24E1C", Offset = "0xE24E1C")]
		private IEnumerator Move()
		{
			return null;
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x272659C", Offset = "0x272659C", VA = "0x272659C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24E7C", Offset = "0xE24E7C")]
		private IEnumerator NextWaypoint()
		{
			return null;
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x2726614", Offset = "0x2726614", VA = "0x2726614")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24EDC", Offset = "0xE24EDC")]
		private IEnumerator WaitForDestination()
		{
			return null;
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x272668C", Offset = "0x272668C", VA = "0x272668C")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x272677C", Offset = "0x272677C", VA = "0x272677C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24F3C", Offset = "0xE24F3C")]
		private IEnumerator ReachedEnd()
		{
			return null;
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x27267F4", Offset = "0x27267F4", VA = "0x27267F4")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x2726AA8", Offset = "0x2726AA8", VA = "0x2726AA8")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x2726B50", Offset = "0x2726B50", VA = "0x2726B50")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x2726BE0", Offset = "0x2726BE0", VA = "0x2726BE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE24F9C", Offset = "0xE24F9C")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x2726C68", Offset = "0x2726C68", VA = "0x2726C68")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x2726CB4", Offset = "0x2726CB4", VA = "0x2726CB4")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x2726D20", Offset = "0x2726D20", VA = "0x2726D20")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x27264CC", Offset = "0x27264CC", VA = "0x27264CC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x2726D58", Offset = "0x2726D58", VA = "0x2726D58")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x2726E34", Offset = "0x2726E34", VA = "0x2726E34")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x2726E50", Offset = "0x2726E50", VA = "0x2726E50")]
		public navMove()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02178", Offset = "0xE02178")]
	public class splineMove : MonoBehaviour
	{
		[Token(Token = "0x20000A1")]
		public enum TimeValue
		{
			[Token(Token = "0x40002EC")]
			time,
			[Token(Token = "0x40002ED")]
			speed
		}

		[Token(Token = "0x20000A2")]
		public enum LoopType
		{
			[Token(Token = "0x40002EF")]
			none,
			[Token(Token = "0x40002F0")]
			loop,
			[Token(Token = "0x40002F1")]
			pingPong,
			[Token(Token = "0x40002F2")]
			random,
			[Token(Token = "0x40002F3")]
			yoyo
		}

		[Token(Token = "0x20000A3")]
		public enum RotationType
		{
			[Token(Token = "0x40002F5")]
			none,
			[Token(Token = "0x40002F6")]
			all
		}

		[Token(Token = "0x20000A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE021B0", Offset = "0xE021B0")]
		private sealed class <Wait>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x40002FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splineMove <>4__this;

			[Token(Token = "0x17000079")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003D2")]
				[Address(RVA = "0x3138214", Offset = "0x3138214", VA = "0x3138214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003D4")]
				[Address(RVA = "0x313825C", Offset = "0x313825C", VA = "0x313825C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003CF")]
			[Address(RVA = "0x3138128", Offset = "0x3138128", VA = "0x3138128")]
			[DebuggerHidden]
			public <Wait>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x60003D0")]
			[Address(RVA = "0x3138154", Offset = "0x3138154", VA = "0x3138154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003D1")]
			[Address(RVA = "0x3138158", Offset = "0x3138158", VA = "0x3138158", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003D3")]
			[Address(RVA = "0x313821C", Offset = "0x313821C", VA = "0x313821C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool local;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lookAhead;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float sizeToAdd;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TimeValue timeValue;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve animEaseType;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LoopType loopType;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] waypoints;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PathType pathType;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public PathMode pathMode;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ease easeType;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public AxisConstraint lockPosition;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AxisConstraint lockRotation;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RotationType waypointRotation;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rotationTarget;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Tweener tween;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] wpPos;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float originSpeed;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion originRot;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private System.Random rand;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] rndArray;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Timeline timeline;

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x2726F14", Offset = "0x2726F14", VA = "0x2726F14")]
		private void Start()
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x2726F80", Offset = "0x2726F80", VA = "0x2726F80")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x2727140", Offset = "0x2727140", VA = "0x2727140")]
		private void Initialize(int startAt = 0)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x2727358", Offset = "0x2727358", VA = "0x2727358")]
		private void CreateTween()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x2727C08", Offset = "0x2727C08", VA = "0x2727C08")]
		private void OnWaypointReached(int index)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x2727C48", Offset = "0x2727C48", VA = "0x2727C48")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x2727DD0", Offset = "0x2727DD0", VA = "0x2727DD0")]
		private void OnWaypointRotation()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x2728438", Offset = "0x2728438", VA = "0x2728438")]
		private void ApplyWaypointRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x2728454", Offset = "0x2728454", VA = "0x2728454")]
		private void ReachedEnd()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x27278B0", Offset = "0x27278B0", VA = "0x27278B0")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x2727B6C", Offset = "0x2727B6C", VA = "0x2727B6C")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x27284E8", Offset = "0x27284E8", VA = "0x27284E8")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x2728594", Offset = "0x2728594", VA = "0x2728594")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2518C", Offset = "0xE2518C")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x272861C", Offset = "0x272861C", VA = "0x272861C")]
		public void Resume()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x2728694", Offset = "0x2728694", VA = "0x2728694")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x2728740", Offset = "0x2728740", VA = "0x2728740")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x2727314", Offset = "0x2727314", VA = "0x2727314")]
		public void Stop()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x2728778", Offset = "0x2728778", VA = "0x2728778")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x2727BD8", Offset = "0x2727BD8", VA = "0x2727BD8")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x2728874", Offset = "0x2728874", VA = "0x2728874")]
		public splineMove()
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x272894C", Offset = "0x272894C", VA = "0x272894C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE251EC", Offset = "0xE251EC")]
		private void <CreateTween>b__36_0()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x20000A5")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000A6")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000321")]
			Update,
			[Token(Token = "0x4000322")]
			FixedUpdate,
			[Token(Token = "0x4000323")]
			LateUpdate,
			[Token(Token = "0x4000324")]
			FixedLateUpdate
		}

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE16380", Offset = "0xE16380")]
		public bool smoothFollow;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE163B8", Offset = "0xE163B8")]
		public float rotationSensitivity;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE163F0", Offset = "0xE163F0")]
		public float distance;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE16428", Offset = "0xE16428")]
		public LayerMask blockingLayers;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16460", Offset = "0xE16460")]
		public float blockedOffset;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE16478", Offset = "0xE16478")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE16488", Offset = "0xE16488")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE16498", Offset = "0xE16498")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x1700007B")]
		public float x
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0x2DFA3F8", Offset = "0x2DFA3F8", VA = "0x2DFA3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2524C", Offset = "0xE2524C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x2DFA400", Offset = "0x2DFA400", VA = "0x2DFA400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2525C", Offset = "0xE2525C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float y
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x2DFA408", Offset = "0x2DFA408", VA = "0x2DFA408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2526C", Offset = "0xE2526C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x2DFA410", Offset = "0x2DFA410", VA = "0x2DFA410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2527C", Offset = "0xE2527C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public float distanceTarget
		{
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x2DFA418", Offset = "0x2DFA418", VA = "0x2DFA418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2528C", Offset = "0xE2528C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x2DFA420", Offset = "0x2DFA420", VA = "0x2DFA420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2529C", Offset = "0xE2529C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		private float zoomAdd
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x2DFAC70", Offset = "0x2DFAC70", VA = "0x2DFAC70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x2DFA428", Offset = "0x2DFA428", VA = "0x2DFA428", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x2DFA538", Offset = "0x2DFA538", VA = "0x2DFA538", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x2DFA594", Offset = "0x2DFA594", VA = "0x2DFA594", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x2DFA5FC", Offset = "0x2DFA5FC", VA = "0x2DFA5FC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x2DFA660", Offset = "0x2DFA660", VA = "0x2DFA660")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x2DFA56C", Offset = "0x2DFA56C", VA = "0x2DFA56C")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x2DFA7E0", Offset = "0x2DFA7E0", VA = "0x2DFA7E0")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x2DFAC40", Offset = "0x2DFAC40", VA = "0x2DFAC40")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x2DFACE0", Offset = "0x2DFACE0", VA = "0x2DFACE0")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x2DFAD84", Offset = "0x2DFAD84", VA = "0x2DFAD84")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x2DFADBC", Offset = "0x2DFADBC", VA = "0x2DFADBC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x2DFAF64", Offset = "0x2DFAF64", VA = "0x2DFAF64")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x2DFAF94", Offset = "0x2DFAF94", VA = "0x2DFAF94")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A8")]
	public enum Axis
	{
		[Token(Token = "0x400032B")]
		X,
		[Token(Token = "0x400032C")]
		Y,
		[Token(Token = "0x400032D")]
		Z
	}
	[Token(Token = "0x20000A9")]
	public class AxisTools
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x2AA9A5C", Offset = "0x2AA9A5C", VA = "0x2AA9A5C")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x2AA9A80", Offset = "0x2AA9A80", VA = "0x2AA9A80")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x2AA9AB8", Offset = "0x2AA9AB8", VA = "0x2AA9AB8")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x2AA9BA8", Offset = "0x2AA9BA8", VA = "0x2AA9BA8")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x2AA9B50", Offset = "0x2AA9B50", VA = "0x2AA9B50")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x2AA9C40", Offset = "0x2AA9C40", VA = "0x2AA9C40")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x2AA9D9C", Offset = "0x2AA9D9C", VA = "0x2AA9D9C")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AA")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x20000AB")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4000333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4000334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x27296A8", Offset = "0x27296A8", VA = "0x27296A8")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x1700007F")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x2DEBC54", Offset = "0x2DEBC54", VA = "0x2DEBC54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x2DEBEC4", Offset = "0x2DEBEC4", VA = "0x2DEBEC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x2DEBBD4", Offset = "0x2DEBBD4", VA = "0x2DEBBD4")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x20000AD")]
		public enum BoneType
		{
			[Token(Token = "0x4000348")]
			Unassigned,
			[Token(Token = "0x4000349")]
			Spine,
			[Token(Token = "0x400034A")]
			Head,
			[Token(Token = "0x400034B")]
			Arm,
			[Token(Token = "0x400034C")]
			Leg,
			[Token(Token = "0x400034D")]
			Tail,
			[Token(Token = "0x400034E")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x20000AE")]
		public enum BoneSide
		{
			[Token(Token = "0x4000350")]
			Center,
			[Token(Token = "0x4000351")]
			Left,
			[Token(Token = "0x4000352")]
			Right
		}

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x2DEC134", Offset = "0x2DEC134", VA = "0x2DEC134")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x2DEC458", Offset = "0x2DEC458", VA = "0x2DEC458")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x2DEC6CC", Offset = "0x2DEC6CC", VA = "0x2DEC6CC")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x2DEC74C", Offset = "0x2DEC74C", VA = "0x2DEC74C")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x2DEC7F4", Offset = "0x2DEC7F4", VA = "0x2DEC7F4")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x2DEC30C", Offset = "0x2DEC30C", VA = "0x2DEC30C")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x2DEC630", Offset = "0x2DEC630", VA = "0x2DEC630")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x2DED024", Offset = "0x2DED024", VA = "0x2DED024")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x2DECE2C", Offset = "0x2DECE2C", VA = "0x2DECE2C")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x2DECF28", Offset = "0x2DECF28", VA = "0x2DECF28")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x2DECA0C", Offset = "0x2DECA0C", VA = "0x2DECA0C")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x2DECABC", Offset = "0x2DECABC", VA = "0x2DECABC")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x2DECB6C", Offset = "0x2DECB6C", VA = "0x2DECB6C")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x2DECC1C", Offset = "0x2DECC1C", VA = "0x2DECC1C")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x2DECCCC", Offset = "0x2DECCCC", VA = "0x2DECCCC")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x2DECD7C", Offset = "0x2DECD7C", VA = "0x2DECD7C")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x2DED22C", Offset = "0x2DED22C", VA = "0x2DED22C")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x2DEC924", Offset = "0x2DEC924", VA = "0x2DEC924")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x2DED19C", Offset = "0x2DED19C", VA = "0x2DED19C")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x2DED298", Offset = "0x2DED298", VA = "0x2DED298")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x2DED36C", Offset = "0x2DED36C", VA = "0x2DED36C")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x2DED124", Offset = "0x2DED124", VA = "0x2DED124")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x2DED0B0", Offset = "0x2DED0B0", VA = "0x2DED0B0")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000AF")]
	public class BipedReferences
	{
		[Token(Token = "0x20000B0")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4000364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4000365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x17000083")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000425")]
				[Address(RVA = "0x2729734", Offset = "0x2729734", VA = "0x2729734")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000424")]
			[Address(RVA = "0x2729720", Offset = "0x2729720", VA = "0x2729720")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x17000081")]
		public virtual bool isFilled
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x2DEFBD4", Offset = "0x2DEFBD4", VA = "0x2DEFBD4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		public bool isEmpty
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x2DEFFBC", Offset = "0x2DEFFBC", VA = "0x2DEFFBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x2DEFFCC", Offset = "0x2DEFFCC", VA = "0x2DEFFCC", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x2DF03F4", Offset = "0x2DF03F4", VA = "0x2DF03F4", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x2DF0828", Offset = "0x2DF0828", VA = "0x2DF0828")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x2DF0EF8", Offset = "0x2DF0EF8", VA = "0x2DF0EF8")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x2DF0A54", Offset = "0x2DF0A54", VA = "0x2DF0A54")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x2DEAEA8", Offset = "0x2DEAEA8", VA = "0x2DEAEA8")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x2DF177C", Offset = "0x2DF177C", VA = "0x2DF177C")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x2DF1D38", Offset = "0x2DF1D38", VA = "0x2DF1D38")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x2DF1B18", Offset = "0x2DF1B18", VA = "0x2DF1B18")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x2DF1994", Offset = "0x2DF1994", VA = "0x2DF1994")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x2DF181C", Offset = "0x2DF181C", VA = "0x2DF181C")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x2DF1C24", Offset = "0x2DF1C24", VA = "0x2DF1C24")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x2DF1E30", Offset = "0x2DF1E30", VA = "0x2DF1E30")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x2DF2A18", Offset = "0x2DF2A18", VA = "0x2DF2A18")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x2DF2488", Offset = "0x2DF2488", VA = "0x2DF2488")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x2DF2D14", Offset = "0x2DF2D14", VA = "0x2DF2D14")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x2DF2800", Offset = "0x2DF2800", VA = "0x2DF2800")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x2DF2D1C", Offset = "0x2DF2D1C", VA = "0x2DF2D1C")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x2DF2D24", Offset = "0x2DF2D24", VA = "0x2DF2D24")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x2DF2EF8", Offset = "0x2DF2EF8", VA = "0x2DF2EF8")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x2DF30C0", Offset = "0x2DF30C0", VA = "0x2DF30C0")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x2DEB328", Offset = "0x2DEB328", VA = "0x2DEB328")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x22B7888", Offset = "0x22B7888", VA = "0x22B7888")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x283B2B8", Offset = "0x283B2B8", VA = "0x283B2B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x283B400", Offset = "0x283B400", VA = "0x283B400")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class Hierarchy
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x30A6DCC", Offset = "0x30A6DCC", VA = "0x30A6DCC")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x30A6FB8", Offset = "0x30A6FB8", VA = "0x30A6FB8")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x30A6E64", Offset = "0x30A6E64", VA = "0x30A6E64")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x30A70D8", Offset = "0x30A70D8", VA = "0x30A70D8")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x30A7204", Offset = "0x30A7204", VA = "0x30A7204")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x30A7458", Offset = "0x30A7458", VA = "0x30A7458")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x30A7560", Offset = "0x30A7560", VA = "0x30A7560")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x30A76D4", Offset = "0x30A76D4", VA = "0x30A76D4")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x30A7AB0", Offset = "0x30A7AB0", VA = "0x30A7AB0")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x30A7874", Offset = "0x30A7874", VA = "0x30A7874")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x30A7C64", Offset = "0x30A7C64", VA = "0x30A7C64")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x2E27E34", Offset = "0x2E27E34", VA = "0x2E27E34")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x2E27EC0", Offset = "0x2E27EC0", VA = "0x2E27EC0")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B5")]
	public enum InterpolationMode
	{
		[Token(Token = "0x400036C")]
		None,
		[Token(Token = "0x400036D")]
		InOutCubic,
		[Token(Token = "0x400036E")]
		InOutQuintic,
		[Token(Token = "0x400036F")]
		InOutSine,
		[Token(Token = "0x4000370")]
		InQuintic,
		[Token(Token = "0x4000371")]
		InQuartic,
		[Token(Token = "0x4000372")]
		InCubic,
		[Token(Token = "0x4000373")]
		InQuadratic,
		[Token(Token = "0x4000374")]
		InElastic,
		[Token(Token = "0x4000375")]
		InElasticSmall,
		[Token(Token = "0x4000376")]
		InElasticBig,
		[Token(Token = "0x4000377")]
		InSine,
		[Token(Token = "0x4000378")]
		InBack,
		[Token(Token = "0x4000379")]
		OutQuintic,
		[Token(Token = "0x400037A")]
		OutQuartic,
		[Token(Token = "0x400037B")]
		OutCubic,
		[Token(Token = "0x400037C")]
		OutInCubic,
		[Token(Token = "0x400037D")]
		OutInQuartic,
		[Token(Token = "0x400037E")]
		OutElastic,
		[Token(Token = "0x400037F")]
		OutElasticSmall,
		[Token(Token = "0x4000380")]
		OutElasticBig,
		[Token(Token = "0x4000381")]
		OutSine,
		[Token(Token = "0x4000382")]
		OutBack,
		[Token(Token = "0x4000383")]
		OutBackCubic,
		[Token(Token = "0x4000384")]
		OutBackQuartic,
		[Token(Token = "0x4000385")]
		BackInCubic,
		[Token(Token = "0x4000386")]
		BackInQuartic
	}
	[Token(Token = "0x20000B6")]
	public class Interp
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0x2E2C3F4", Offset = "0x2E2C3F4", VA = "0x2E2C3F4")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x2E32E20", Offset = "0x2E32E20", VA = "0x2E32E20")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x2E32E94", Offset = "0x2E32E94", VA = "0x2E32E94")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x2E32888", Offset = "0x2E32888", VA = "0x2E32888")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x2E32894", Offset = "0x2E32894", VA = "0x2E32894")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x2E328B8", Offset = "0x2E328B8", VA = "0x2E328B8")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x2E328F4", Offset = "0x2E328F4", VA = "0x2E328F4")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x2E3290C", Offset = "0x2E3290C", VA = "0x2E3290C")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x2E32920", Offset = "0x2E32920", VA = "0x2E32920")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x2E32934", Offset = "0x2E32934", VA = "0x2E32934")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x2E32944", Offset = "0x2E32944", VA = "0x2E32944")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x2E3298C", Offset = "0x2E3298C", VA = "0x2E3298C")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x2E329C4", Offset = "0x2E329C4", VA = "0x2E329C4")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x2E329EC", Offset = "0x2E329EC", VA = "0x2E329EC")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x2E32F20", Offset = "0x2E32F20", VA = "0x2E32F20")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x2E32A20", Offset = "0x2E32A20", VA = "0x2E32A20")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x2E32A48", Offset = "0x2E32A48", VA = "0x2E32A48")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x2E32A78", Offset = "0x2E32A78", VA = "0x2E32A78")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x2E32AAC", Offset = "0x2E32AAC", VA = "0x2E32AAC")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x2E32AF0", Offset = "0x2E32AF0", VA = "0x2E32AF0")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x2E32B54", Offset = "0x2E32B54", VA = "0x2E32B54")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x2E32BB8", Offset = "0x2E32BB8", VA = "0x2E32BB8")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x2E32C0C", Offset = "0x2E32C0C", VA = "0x2E32C0C")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x2E32C60", Offset = "0x2E32C60", VA = "0x2E32C60")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x2E32C9C", Offset = "0x2E32C9C", VA = "0x2E32C9C")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x2E32CD4", Offset = "0x2E32CD4", VA = "0x2E32CD4")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x2E32F54", Offset = "0x2E32F54", VA = "0x2E32F54")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x2E32D1C", Offset = "0x2E32D1C", VA = "0x2E32D1C")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x2E32DB0", Offset = "0x2E32DB0", VA = "0x2E32DB0")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x2E32DE0", Offset = "0x2E32DE0", VA = "0x2E32DE0")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x2E32FE8", Offset = "0x2E32FE8", VA = "0x2E32FE8")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x2E391E0", Offset = "0x2E391E0", VA = "0x2E391E0")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x2E3926C", Offset = "0x2E3926C", VA = "0x2E3926C")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x20000B8")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x2CF7328", Offset = "0x2CF7328", VA = "0x2CF7328")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x2CF7380", Offset = "0x2CF7380", VA = "0x2CF7380")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x2CF744C", Offset = "0x2CF744C", VA = "0x2CF744C")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x2CF7398", Offset = "0x2CF7398", VA = "0x2CF7398")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x2CF7464", Offset = "0x2CF7464", VA = "0x2CF7464")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x2CF7508", Offset = "0x2CF7508", VA = "0x2CF7508")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x2CF7534", Offset = "0x2CF7534", VA = "0x2CF7534")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x2CF7584", Offset = "0x2CF7584", VA = "0x2CF7584")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x2CF75F0", Offset = "0x2CF75F0", VA = "0x2CF75F0")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x2CF7704", Offset = "0x2CF7704", VA = "0x2CF7704")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x2CF77FC", Offset = "0x2CF77FC", VA = "0x2CF77FC")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x2CF7858", Offset = "0x2CF7858", VA = "0x2CF7858")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B9")]
	public static class QuaTools
	{
		[Token(Token = "0x6000463")]
		[Address(RVA = "0x2683A1C", Offset = "0x2683A1C", VA = "0x2683A1C")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x2683A6C", Offset = "0x2683A6C", VA = "0x2683A6C")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x2683ABC", Offset = "0x2683ABC", VA = "0x2683ABC")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x2683B64", Offset = "0x2683B64", VA = "0x2683B64")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x2683C0C", Offset = "0x2683C0C", VA = "0x2683C0C")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x2683CEC", Offset = "0x2683CEC", VA = "0x2683CEC")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x2683D40", Offset = "0x2683D40", VA = "0x2683D40")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x2683E14", Offset = "0x2683E14", VA = "0x2683E14")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x2683F24", Offset = "0x2683F24", VA = "0x2683F24")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x26840B4", Offset = "0x26840B4", VA = "0x26840B4")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x26841A8", Offset = "0x26841A8", VA = "0x26841A8")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20000BA")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x17000084")]
		public static T instance
		{
			[Token(Token = "0x600046E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046F")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000470")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE164B8", Offset = "0xE164B8")]
		public bool fixTransforms;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x17000085")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0x2587038", Offset = "0x2587038", VA = "0x2587038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		private bool isAnimated
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0x2587384", Offset = "0x2587384", VA = "0x2587384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x2586EF8", Offset = "0x2586EF8", VA = "0x2586EF8")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x2586F98", Offset = "0x2586F98", VA = "0x2586F98", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x2586F9C", Offset = "0x2586F9C", VA = "0x2586F9C", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x2586FA0", Offset = "0x2586FA0", VA = "0x2586FA0", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x2586FA4", Offset = "0x2586FA4", VA = "0x2586FA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x2587034", Offset = "0x2587034", VA = "0x2587034")]
		private void Start()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x2586FDC", Offset = "0x2586FDC", VA = "0x2586FDC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x2587338", Offset = "0x2587338", VA = "0x2587338")]
		private void Update()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x2587124", Offset = "0x2587124", VA = "0x2587124")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x258743C", Offset = "0x258743C", VA = "0x258743C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x2587498", Offset = "0x2587498", VA = "0x2587498")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x25874F4", Offset = "0x25874F4", VA = "0x25874F4")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x258753C", Offset = "0x258753C", VA = "0x258753C")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x27B3244", Offset = "0x27B3244", VA = "0x27B3244")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x27B3304", Offset = "0x27B3304", VA = "0x27B3304")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x27B33C4", Offset = "0x27B33C4", VA = "0x27B33C4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x27B3484", Offset = "0x27B3484", VA = "0x27B3484")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public static class V3Tools
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x27BF68C", Offset = "0x27BF68C", VA = "0x27BF68C")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x27BF72C", Offset = "0x27BF72C", VA = "0x27BF72C")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x27BF768", Offset = "0x27BF768", VA = "0x27BF768")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x27BF7AC", Offset = "0x27BF7AC", VA = "0x27BF7AC")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x27BF848", Offset = "0x27BF848", VA = "0x27BF848")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x27BF9C4", Offset = "0x27BF9C4", VA = "0x27BF9C4")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x27BFB48", Offset = "0x27BFB48", VA = "0x27BFB48")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x27BFC04", Offset = "0x27BFC04", VA = "0x27BFC04")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000BE")]
	public static class Warning
	{
		[Token(Token = "0x20000BF")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x2D0F9C4", Offset = "0x2D0F9C4", VA = "0x2D0F9C4")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x2D0FA5C", Offset = "0x2D0FA5C", VA = "0x2D0FA5C")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20000C0")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x2A9EDC8", Offset = "0x2A9EDC8", VA = "0x2A9EDC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x2A9EE4C", Offset = "0x2A9EE4C", VA = "0x2A9EE4C")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE164F0", Offset = "0xE164F0")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x2AA310C", Offset = "0x2AA310C", VA = "0x2AA310C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x2AA3184", Offset = "0x2AA3184", VA = "0x2AA3184")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16528", Offset = "0xE16528")]
		public AimPoser aimPoser;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16560", Offset = "0xE16560")]
		public AimIK aim;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16598", Offset = "0xE16598")]
		public LookAtIK lookAt;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE165D0", Offset = "0xE165D0")]
		public Animator animator;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16608", Offset = "0xE16608")]
		public float crossfadeTime;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16640", Offset = "0xE16640")]
		public float minAimDistance;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x258306C", Offset = "0x258306C", VA = "0x258306C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x25830B0", Offset = "0x25830B0", VA = "0x25830B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x2583218", Offset = "0x2583218", VA = "0x2583218")]
		private void Pose()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x25833C4", Offset = "0x25833C4", VA = "0x25833C4")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x2583500", Offset = "0x2583500", VA = "0x2583500")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x258357C", Offset = "0x258357C", VA = "0x258357C")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x2591B68", Offset = "0x2591B68", VA = "0x2591B68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x2591CD8", Offset = "0x2591CD8", VA = "0x2591CD8")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x2591E6C", Offset = "0x2591E6C", VA = "0x2591E6C")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE16678", Offset = "0xE16678")]
		public Animator animator;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE166B0", Offset = "0xE166B0")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE166E8", Offset = "0xE166E8")]
		public float lookAtWeight;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16700", Offset = "0xE16700")]
		public float lookAtBodyWeight;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16718", Offset = "0xE16718")]
		public float lookAtHeadWeight;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16730", Offset = "0xE16730")]
		public float lookAtEyesWeight;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16748", Offset = "0xE16748")]
		public float lookAtClampWeight;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16760", Offset = "0xE16760")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16778", Offset = "0xE16778")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE16790", Offset = "0xE16790")]
		public Transform footTargetBiped;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE167C8", Offset = "0xE167C8")]
		public float footPositionWeight;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE167E0", Offset = "0xE167E0")]
		public float footRotationWeight;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE167F8", Offset = "0xE167F8")]
		public Transform handTargetBiped;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16830", Offset = "0xE16830")]
		public float handPositionWeight;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16848", Offset = "0xE16848")]
		public float handRotationWeight;

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x2DEB7AC", Offset = "0x2DEB7AC", VA = "0x2DEB7AC")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x2DEBBB4", Offset = "0x2DEBBB4", VA = "0x2DEBBB4")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float sine;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit rootHit;

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x2CFF03C", Offset = "0x2CFF03C", VA = "0x2CFF03C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x2CFF848", Offset = "0x2CFF848", VA = "0x2CFF848")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x2CFF5F8", Offset = "0x2CFF5F8", VA = "0x2CFF5F8")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x2CFF944", Offset = "0x2CFF944", VA = "0x2CFF944")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x17000087")]
		public Vector3 inputVector
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0x2CFF970", Offset = "0x2CFF970", VA = "0x2CFF970")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x2CFF9F4", Offset = "0x2CFF9F4", VA = "0x2CFF9F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x2CFFC18", Offset = "0x2CFFC18", VA = "0x2CFFC18")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x20000C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE021D0", Offset = "0xE021D0")]
		private sealed class <Step>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40003E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x40003E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x40003E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x1700008A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004B6")]
				[Address(RVA = "0x2EE1DF0", Offset = "0x2EE1DF0", VA = "0x2EE1DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004B8")]
				[Address(RVA = "0x2EE1E38", Offset = "0x2EE1E38", VA = "0x2EE1E38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004B3")]
			[Address(RVA = "0x2EE1B1C", Offset = "0x2EE1B1C", VA = "0x2EE1B1C")]
			[DebuggerHidden]
			public <Step>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60004B4")]
			[Address(RVA = "0x2EE1B48", Offset = "0x2EE1B48", VA = "0x2EE1B48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x2EE1B4C", Offset = "0x2EE1B4C", VA = "0x2EE1B4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x2EE1DF8", Offset = "0x2EE1DF8", VA = "0x2EE1DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ParticleSystem sand;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IK ik;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float stepProgress;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastStepTime;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RaycastHit hit;

		[Token(Token = "0x17000088")]
		public bool isStepping
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0x2CFFC2C", Offset = "0x2CFFC2C", VA = "0x2CFFC2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public Vector3 position
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0x2CFF910", Offset = "0x2CFF910", VA = "0x2CFF910")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0x2CFFC40", Offset = "0x2CFFC40", VA = "0x2CFFC40")]
			set
			{
			}
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x2CFFC90", Offset = "0x2CFFC90", VA = "0x2CFFC90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x2CFFCEC", Offset = "0x2CFFCEC", VA = "0x2CFFCEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x2CFFE04", Offset = "0x2CFFE04", VA = "0x2CFFE04")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x2D000B8", Offset = "0x2D000B8", VA = "0x2D000B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x2D001DC", Offset = "0x2D001DC", VA = "0x2D001DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x2D00128", Offset = "0x2D00128", VA = "0x2D00128")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2531C", Offset = "0xE2531C")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x2D003BC", Offset = "0x2D003BC", VA = "0x2D003BC")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x2D003EC", Offset = "0x2D003EC", VA = "0x2D003EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x2D004BC", Offset = "0x2D004BC", VA = "0x2D004BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x2D00710", Offset = "0x2D00710", VA = "0x2D00710")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20000CB")]
		public struct Warp
		{
			[Token(Token = "0x40003E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16920", Offset = "0xE16920")]
			public int animationLayer;

			[Token(Token = "0x40003EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16958", Offset = "0xE16958")]
			public string animationState;

			[Token(Token = "0x40003EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16990", Offset = "0xE16990")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x40003EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE169C8", Offset = "0xE169C8")]
			public Transform warpFrom;

			[Token(Token = "0x40003ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16A00", Offset = "0xE16A00")]
			public Transform warpTo;

			[Token(Token = "0x40003EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16A38", Offset = "0xE16A38")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x20000CC")]
		public enum EffectorMode
		{
			[Token(Token = "0x40003F0")]
			PositionOffset,
			[Token(Token = "0x40003F1")]
			Position
		}

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16860", Offset = "0xE16860")]
		public Animator animator;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16898", Offset = "0xE16898")]
		public EffectorMode effectorMode;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE168D0", Offset = "0xE168D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE168D0", Offset = "0xE168D0")]
		public Warp[] warps;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x2AA3E18", Offset = "0x2AA3E18", VA = "0x2AA3E18", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x2AA3E44", Offset = "0x2AA3E44", VA = "0x2AA3E44")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x2AA4084", Offset = "0x2AA4084", VA = "0x2AA4084", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x2AA4348", Offset = "0x2AA4348", VA = "0x2AA4348")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x2AA43E8", Offset = "0x2AA43E8", VA = "0x2AA43E8")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE021E0", Offset = "0xE021E0")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x2AA43F0", Offset = "0x2AA43F0", VA = "0x2AA43F0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x2AA444C", Offset = "0x2AA444C", VA = "0x2AA444C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x2AA45E8", Offset = "0x2AA45E8", VA = "0x2AA45E8", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x2AA47F0", Offset = "0x2AA47F0", VA = "0x2AA47F0")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02240", Offset = "0xE02240")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02240", Offset = "0xE02240")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16A70", Offset = "0xE16A70")]
		public float headLookWeight;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x2AA4804", Offset = "0x2AA4804", VA = "0x2AA4804", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x2AA49D0", Offset = "0x2AA49D0", VA = "0x2AA49D0", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x2AA4A44", Offset = "0x2AA4A44", VA = "0x2AA4A44")]
		private void Read()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x2AA4B38", Offset = "0x2AA4B38", VA = "0x2AA4B38")]
		private void AimIK()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x2AA4B80", Offset = "0x2AA4B80", VA = "0x2AA4B80")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x2AA4F6C", Offset = "0x2AA4F6C", VA = "0x2AA4F6C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x2AA4DF4", Offset = "0x2AA4DF4", VA = "0x2AA4DF4")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x2AA51C8", Offset = "0x2AA51C8", VA = "0x2AA51C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x2AA52F8", Offset = "0x2AA52F8", VA = "0x2AA52F8")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE022D4", Offset = "0xE022D4")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x22A35BC", Offset = "0x22A35BC", VA = "0x22A35BC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x22A3624", Offset = "0x22A3624", VA = "0x22A3624", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x22A3858", Offset = "0x22A3858", VA = "0x22A3858")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x22A394C", Offset = "0x22A394C", VA = "0x22A394C")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02334", Offset = "0xE02334")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CameraController cam;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x1700008C")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x22A4388", Offset = "0x22A4388", VA = "0x22A4388")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700008D")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0x22A440C", Offset = "0x22A440C", VA = "0x22A440C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x22A418C", Offset = "0x22A418C", VA = "0x22A418C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x22A4200", Offset = "0x22A4200", VA = "0x22A4200")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x22A4490", Offset = "0x22A4490", VA = "0x22A4490")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16A98", Offset = "0xE16A98")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x28BF054", Offset = "0x28BF054", VA = "0x28BF054", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x28BF4B4", Offset = "0x28BF4B4", VA = "0x28BF4B4")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x28CD5B0", Offset = "0x28CD5B0", VA = "0x28CD5B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x28CD66C", Offset = "0x28CD66C", VA = "0x28CD66C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x28CD9F0", Offset = "0x28CD9F0", VA = "0x28CD9F0")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x28CDA9C", Offset = "0x28CDA9C", VA = "0x28CDA9C")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000D4")]
		public class Limb
		{
			[Token(Token = "0x4000426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x4000427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x4000428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x60004E1")]
			[Address(RVA = "0x272F404", Offset = "0x272F404", VA = "0x272F404")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x60004E2")]
			[Address(RVA = "0x272F488", Offset = "0x272F488", VA = "0x272F488")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x28D32CC", Offset = "0x28D32CC", VA = "0x28D32CC")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x28D3424", Offset = "0x28D3424", VA = "0x28D3424")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x28D34C8", Offset = "0x28D34C8", VA = "0x28D34C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x28D34CC", Offset = "0x28D34CC", VA = "0x28D34CC")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x28D34DC", Offset = "0x28D34DC", VA = "0x28D34DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x28D3550", Offset = "0x28D3550", VA = "0x28D3550")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x28D3630", Offset = "0x28D3630", VA = "0x28D3630")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16AB0", Offset = "0xE16AB0")]
		public Transform target;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16AE8", Offset = "0xE16AE8")]
		public Transform pin;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16B20", Offset = "0xE16B20")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16B58", Offset = "0xE16B58")]
		public AimIK aim;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16B90", Offset = "0xE16B90")]
		public float weight;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16BC8", Offset = "0xE16BC8")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16C00", Offset = "0xE16C00")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x28D3638", Offset = "0x28D3638", VA = "0x28D3638")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x28D3694", Offset = "0x28D3694", VA = "0x28D3694")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x28D3838", Offset = "0x28D3838", VA = "0x28D3838")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x2921154", Offset = "0x2921154", VA = "0x2921154")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x292122C", Offset = "0x292122C", VA = "0x292122C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x29212BC", Offset = "0x29212BC", VA = "0x29212BC")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x2921694", Offset = "0x2921694", VA = "0x2921694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x29217C4", Offset = "0x29217C4", VA = "0x29217C4")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16C38", Offset = "0xE16C38")]
		public float aimWeight;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16C50", Offset = "0xE16C50")]
		public float sightWeight;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16C68", Offset = "0xE16C68")]
		public float maxAngle;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool animatePhysics;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform gun;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform gunTarget;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AimIK gunAim;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CameraControllerFPS cam;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Recoil recoil;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16CF4", Offset = "0xE16CF4")]
		private float cameraRecoilWeight;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion gunTargetDefaultLocalRotation;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool updateFrame;

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x29217CC", Offset = "0x29217CC", VA = "0x29217CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x2921940", Offset = "0x2921940", VA = "0x2921940")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x292194C", Offset = "0x292194C", VA = "0x292194C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x2921BCC", Offset = "0x2921BCC", VA = "0x2921BCC")]
		private void Aiming()
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x2921D78", Offset = "0x2921D78", VA = "0x2921D78")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x2921A14", Offset = "0x2921A14", VA = "0x2921A14")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x2922628", Offset = "0x2922628", VA = "0x2922628")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02394", Offset = "0xE02394")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02394", Offset = "0xE02394")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16D34", Offset = "0xE16D34")]
		public float walkSpeed;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x2922648", Offset = "0x2922648", VA = "0x2922648")]
		private void Start()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x29226D4", Offset = "0x29226D4", VA = "0x29226D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x29227C0", Offset = "0x29227C0", VA = "0x29227C0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x2922878", Offset = "0x2922878", VA = "0x2922878")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HitReaction hitReaction;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float hitForce;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x30A8084", Offset = "0x30A8084", VA = "0x30A8084")]
		private void Update()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x30A81E8", Offset = "0x30A81E8", VA = "0x30A81E8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x30A83CC", Offset = "0x30A83CC", VA = "0x30A83CC")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x30A8A74", Offset = "0x30A8A74", VA = "0x30A8A74")]
		private void Start()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x30A8BBC", Offset = "0x30A8BBC", VA = "0x30A8BBC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x30A8EF8", Offset = "0x30A8EF8", VA = "0x30A8EF8")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x2E28D0C", Offset = "0x2E28D0C", VA = "0x2E28D0C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x2E28F58", Offset = "0x2E28F58", VA = "0x2E28F58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x2E29064", Offset = "0x2E29064", VA = "0x2E29064")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x2E2906C", Offset = "0x2E2906C", VA = "0x2E2906C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x2E29880", Offset = "0x2E29880", VA = "0x2E29880")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02428", Offset = "0xE02428")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16D6C", Offset = "0xE16D6C")]
		private InteractionObject interactionObject;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16DB8", Offset = "0xE16DB8")]
		[SerializeField]
		private FullBodyBipedEffector[] effectors;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x2E31268", Offset = "0x2E31268", VA = "0x2E31268")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x2E312C4", Offset = "0x2E312C4", VA = "0x2E312C4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x2E315FC", Offset = "0x2E315FC", VA = "0x2E315FC")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000E0")]
		public class Partner
		{
			[Token(Token = "0x4000469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x400046A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x400046B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x400046C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x400046D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x400046E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x400046F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x4000470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x4000471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x4000472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x4000473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x1700008E")]
			private Transform neck
			{
				[Token(Token = "0x600050C")]
				[Address(RVA = "0x2EE0BA4", Offset = "0x2EE0BA4", VA = "0x2EE0BA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600050A")]
			[Address(RVA = "0x2EE0458", Offset = "0x2EE0458", VA = "0x2EE0458")]
			public void Initiate()
			{
			}

			[Token(Token = "0x600050B")]
			[Address(RVA = "0x2EE0478", Offset = "0x2EE0478", VA = "0x2EE0478")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x600050D")]
			[Address(RVA = "0x2EE0A10", Offset = "0x2EE0A10", VA = "0x2EE0A10")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x600050E")]
			[Address(RVA = "0x2EE0BFC", Offset = "0x2EE0BFC", VA = "0x2EE0BFC")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x2E38EBC", Offset = "0x2E38EBC", VA = "0x2E38EBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x2E38EF8", Offset = "0x2E38EF8", VA = "0x2E38EF8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x2E38F60", Offset = "0x2E38F60", VA = "0x2E38F60")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20000E2")]
		public enum Mode
		{
			[Token(Token = "0x400047C")]
			Position,
			[Token(Token = "0x400047D")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x20000E3")]
		public class Absorber
		{
			[Token(Token = "0x400047E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16EE4", Offset = "0xE16EE4")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x400047F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16F1C", Offset = "0xE16F1C")]
			public float weight;

			[Token(Token = "0x4000480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x4000481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x4000482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x6000515")]
			[Address(RVA = "0x2EE1E40", Offset = "0x2EE1E40", VA = "0x2EE1E40")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x6000516")]
			[Address(RVA = "0x2EE1F28", Offset = "0x2EE1F28", VA = "0x2EE1F28")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x6000517")]
			[Address(RVA = "0x2EE1F64", Offset = "0x2EE1F64", VA = "0x2EE1F64")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x6000518")]
			[Address(RVA = "0x2EE1FFC", Offset = "0x2EE1FFC", VA = "0x2EE1FFC")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x6000519")]
			[Address(RVA = "0x2EE2070", Offset = "0x2EE2070", VA = "0x2EE2070")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16E04", Offset = "0xE16E04")]
		public Mode mode;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16E3C", Offset = "0xE16E3C")]
		public Absorber[] absorbers;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16E74", Offset = "0xE16E74")]
		public AnimationCurve falloff;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16EAC", Offset = "0xE16EAC")]
		public float falloffSpeed;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x2D0CE40", Offset = "0x2D0CE40", VA = "0x2D0CE40", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x2D0CF30", Offset = "0x2D0CF30", VA = "0x2D0CF30")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x2D0CFC0", Offset = "0x2D0CFC0", VA = "0x2D0CFC0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x2D0D0D4", Offset = "0x2D0D0D4", VA = "0x2D0D0D4")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x2D0D160", Offset = "0x2D0D160", VA = "0x2D0D160", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x2D0D29C", Offset = "0x2D0D29C", VA = "0x2D0D29C")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x2D0D2AC", Offset = "0x2D0D2AC", VA = "0x2D0D2AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x2D0D328", Offset = "0x2D0D328", VA = "0x2D0D328")]
		private void Update()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x2D0D404", Offset = "0x2D0D404", VA = "0x2D0D404")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x2D0D4C4", Offset = "0x2D0D4C4", VA = "0x2D0D4C4")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20000E6")]
		public class EffectorLink
		{
			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x400048E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6000521")]
			[Address(RVA = "0x2EE286C", Offset = "0x2EE286C", VA = "0x2EE286C")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x26A16B4", Offset = "0x26A16B4", VA = "0x26A16B4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x26A17EC", Offset = "0x26A17EC", VA = "0x26A17EC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x26A1978", Offset = "0x26A1978", VA = "0x26A1978")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02488", Offset = "0xE02488")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE16F64", Offset = "0xE16F64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16F64", Offset = "0xE16F64")]
		public float weight;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16FB8", Offset = "0xE16FB8")]
		public float hangingDistanceMlp;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE16FF0", Offset = "0xE16FF0")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1703C", Offset = "0xE1703C")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform leftHandTarget;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform rightHandTarget;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform leftFootTarget;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform rightFootTarget;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform pelvisTarget;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform bodyTarget;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform headTarget;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3 pelvisDownAxis;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x26A6CB4", Offset = "0x26A6CB4", VA = "0x26A6CB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x26A6F84", Offset = "0x26A6F84", VA = "0x26A6F84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x26A75CC", Offset = "0x26A75CC", VA = "0x26A75CC")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int GUIspace;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x1700008F")]
		private bool holding
		{
			[Token(Token = "0x600052C")]
			[Address(RVA = "0x26A7978", Offset = "0x26A7978", VA = "0x26A7978")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x26A76A4", Offset = "0x26A76A4", VA = "0x26A76A4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000526")]
		protected abstract void RotatePivot();

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x26A7998", Offset = "0x26A7998", VA = "0x26A7998")]
		private void Start()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x26A7B50", Offset = "0x26A7B50", VA = "0x26A7B50")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x26A7CD4", Offset = "0x26A7CD4", VA = "0x26A7CD4")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x26A7DB0", Offset = "0x26A7DB0", VA = "0x26A7DB0")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x26A7EE4", Offset = "0x26A7EE4", VA = "0x26A7EE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x26A8048", Offset = "0x26A8048", VA = "0x26A8048")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x26A8258", Offset = "0x26A8258", VA = "0x26A8258")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x26A826C", Offset = "0x26A826C", VA = "0x26A826C", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x26A83C8", Offset = "0x26A83C8", VA = "0x26A83C8")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0x26A83DC", Offset = "0x26A83DC", VA = "0x26A83DC", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x26A8510", Offset = "0x26A8510", VA = "0x26A8510")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x2686828", Offset = "0x2686828", VA = "0x2686828")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x2686908", Offset = "0x2686908", VA = "0x2686908")]
		private void Update()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x2686A1C", Offset = "0x2686A1C", VA = "0x2686A1C")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE024E8", Offset = "0xE024E8")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x268879C", Offset = "0x268879C", VA = "0x268879C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x26887F8", Offset = "0x26887F8", VA = "0x26887F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x2688850", Offset = "0x2688850", VA = "0x2688850")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x2688930", Offset = "0x2688930", VA = "0x2688930")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x20000EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE02548", Offset = "0xE02548")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40004B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40004B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40004B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x40004B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x17000090")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000541")]
				[Address(RVA = "0x2EE6750", Offset = "0x2EE6750", VA = "0x2EE6750", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000091")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000543")]
				[Address(RVA = "0x2EE6798", Offset = "0x2EE6798", VA = "0x2EE6798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600053E")]
			[Address(RVA = "0x2EE655C", Offset = "0x2EE655C", VA = "0x2EE655C")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600053F")]
			[Address(RVA = "0x2EE6588", Offset = "0x2EE6588", VA = "0x2EE6588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000540")]
			[Address(RVA = "0x2EE658C", Offset = "0x2EE658C", VA = "0x2EE658C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000542")]
			[Address(RVA = "0x2EE6758", Offset = "0x2EE6758", VA = "0x2EE6758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x2B3AE88", Offset = "0x2B3AE88", VA = "0x2B3AE88")]
		private void Start()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x2B3AF50", Offset = "0x2B3AF50", VA = "0x2B3AF50")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x2B3AF98", Offset = "0x2B3AF98", VA = "0x2B3AF98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE253CC", Offset = "0xE253CC")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x2B3B020", Offset = "0x2B3B020", VA = "0x2B3B020")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02558", Offset = "0xE02558")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x20000F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE025B8", Offset = "0xE025B8")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40004BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40004BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40004BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x17000092")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600054A")]
				[Address(RVA = "0x312F308", Offset = "0x312F308", VA = "0x312F308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000093")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600054C")]
				[Address(RVA = "0x312F350", Offset = "0x312F350", VA = "0x312F350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000547")]
			[Address(RVA = "0x312F198", Offset = "0x312F198", VA = "0x312F198")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000548")]
			[Address(RVA = "0x312F1C4", Offset = "0x312F1C4", VA = "0x312F1C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000549")]
			[Address(RVA = "0x312F1C8", Offset = "0x312F1C8", VA = "0x312F1C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600054B")]
			[Address(RVA = "0x312F310", Offset = "0x312F310", VA = "0x312F310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x2586DC0", Offset = "0x2586DC0", VA = "0x2586DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x2586E78", Offset = "0x2586E78", VA = "0x2586E78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2547C", Offset = "0xE2547C")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x2586EF0", Offset = "0x2586EF0", VA = "0x2586EF0")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000F2")]
		public class EffectorLink
		{
			[Token(Token = "0x40004C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40004C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40004C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x40004C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x40004C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x40004C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x40004C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LayerMask touchLayers;

			[Token(Token = "0x40004C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lerpSpeed;

			[Token(Token = "0x40004C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float minSwitchTime;

			[Token(Token = "0x40004C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float releaseDistance;

			[Token(Token = "0x40004CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool sliding;

			[Token(Token = "0x40004CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x40004CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float raycastDistance;

			[Token(Token = "0x40004CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool inTouch;

			[Token(Token = "0x40004CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private RaycastHit hit;

			[Token(Token = "0x40004CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 targetPosition;

			[Token(Token = "0x40004D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Quaternion targetRotation;

			[Token(Token = "0x40004D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private bool initiated;

			[Token(Token = "0x40004D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float nextSwitchTime;

			[Token(Token = "0x40004D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float speedF;

			[Token(Token = "0x6000551")]
			[Address(RVA = "0x3130588", Offset = "0x3130588", VA = "0x3130588")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000552")]
			[Address(RVA = "0x3130870", Offset = "0x3130870", VA = "0x3130870")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x6000553")]
			[Address(RVA = "0x3130958", Offset = "0x3130958", VA = "0x3130958")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000554")]
			[Address(RVA = "0x3130DEC", Offset = "0x3130DEC", VA = "0x3130DEC")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000555")]
			[Address(RVA = "0x3130EE0", Offset = "0x3130EE0", VA = "0x3130EE0")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6000556")]
			[Address(RVA = "0x3130F78", Offset = "0x3130F78", VA = "0x3130F78")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6000557")]
			[Address(RVA = "0x313100C", Offset = "0x313100C", VA = "0x313100C")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6000558")]
			[Address(RVA = "0x31310A0", Offset = "0x31310A0", VA = "0x31310A0")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000559")]
			[Address(RVA = "0x313126C", Offset = "0x313126C", VA = "0x313126C")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x25977D4", Offset = "0x25977D4", VA = "0x25977D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x2597850", Offset = "0x2597850", VA = "0x2597850")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x25978C0", Offset = "0x25978C0", VA = "0x25978C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x2597988", Offset = "0x2597988", VA = "0x2597988")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17128", Offset = "0xE17128")]
		public Transform to;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17160", Offset = "0xE17160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17160", Offset = "0xE17160")]
		public float transferMotion;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x2597A8C", Offset = "0x2597A8C", VA = "0x2597A8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x2597AC8", Offset = "0x2597AC8", VA = "0x2597AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x2597B7C", Offset = "0x2597B7C", VA = "0x2597B7C")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE171B4", Offset = "0xE171B4")]
		public Transform leftHandTarget;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x27B5AB0", Offset = "0x27B5AB0", VA = "0x27B5AB0")]
		private void Start()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x27B5CC8", Offset = "0x27B5CC8", VA = "0x27B5CC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x27B5EB8", Offset = "0x27B5EB8", VA = "0x27B5EB8")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x27B5F84", Offset = "0x27B5F84", VA = "0x27B5F84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x27B60B4", Offset = "0x27B60B4", VA = "0x27B60B4")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CharacterThirdPerson character;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool disableInputInInteraction;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x27BF070", Offset = "0x27BF070", VA = "0x27BF070", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x27BF3FC", Offset = "0x27BF3FC", VA = "0x27BF3FC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x27BF668", Offset = "0x27BF668", VA = "0x27BF668")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x309FB58", Offset = "0x309FB58", VA = "0x309FB58")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x309FE80", Offset = "0x309FE80", VA = "0x309FE80")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x309FF00", Offset = "0x309FF00", VA = "0x309FF00")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x20000F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE025C8", Offset = "0xE025C8")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40004EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40004ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40004EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x17000094")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000571")]
				[Address(RVA = "0x2EE3B1C", Offset = "0x2EE3B1C", VA = "0x2EE3B1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000095")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000573")]
				[Address(RVA = "0x2EE3B64", Offset = "0x2EE3B64", VA = "0x2EE3B64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600056E")]
			[Address(RVA = "0x2EE39D0", Offset = "0x2EE39D0", VA = "0x2EE39D0")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600056F")]
			[Address(RVA = "0x2EE39FC", Offset = "0x2EE39FC", VA = "0x2EE39FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000570")]
			[Address(RVA = "0x2EE3A00", Offset = "0x2EE3A00", VA = "0x2EE3A00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000572")]
			[Address(RVA = "0x2EE3B24", Offset = "0x2EE3B24", VA = "0x2EE3B24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x26A8D0C", Offset = "0x26A8D0C", VA = "0x26A8D0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x26A8E50", Offset = "0x26A8E50", VA = "0x26A8E50")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x26A8DD8", Offset = "0x26A8DD8", VA = "0x26A8DD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2552C", Offset = "0xE2552C")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x26A8FD4", Offset = "0x26A8FD4", VA = "0x26A8FD4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x26A90C0", Offset = "0x26A90C0", VA = "0x26A90C0")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x26A91A8", Offset = "0x26A91A8", VA = "0x26A91A8")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1721C", Offset = "0xE1721C")]
		public float weight;

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x2AAD464", Offset = "0x2AAD464", VA = "0x2AAD464")]
		private void Start()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x2AAD4D8", Offset = "0x2AAD4D8", VA = "0x2AAD4D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x2AAD590", Offset = "0x2AAD590", VA = "0x2AAD590")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000FB")]
		public class Part
		{
			[Token(Token = "0x40004F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40004F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x6000579")]
			[Address(RVA = "0x313173C", Offset = "0x313173C", VA = "0x313173C")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x600057A")]
			[Address(RVA = "0x313187C", Offset = "0x313187C", VA = "0x313187C")]
			public Part()
			{
			}
		}

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x27B46FC", Offset = "0x27B46FC", VA = "0x27B46FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x27B4778", Offset = "0x27B4778", VA = "0x27B4778")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HitReactionVRIK hitReaction;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float hitForce;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x30A871C", Offset = "0x30A871C", VA = "0x30A871C")]
		private void Update()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x30A8880", Offset = "0x30A8880", VA = "0x30A8880")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x30A8A64", Offset = "0x30A8A64", VA = "0x30A8A64")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17254", Offset = "0xE17254")]
		public VRIK ik;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1728C", Offset = "0xE1728C")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE172C4", Offset = "0xE172C4")]
		public Transform headTracker;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE172FC", Offset = "0xE172FC")]
		public Transform bodyTracker;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17334", Offset = "0xE17334")]
		public Transform leftHandTracker;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1736C", Offset = "0xE1736C")]
		public Transform rightHandTracker;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE173A4", Offset = "0xE173A4")]
		public Transform leftFootTracker;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE173DC", Offset = "0xE173DC")]
		public Transform rightFootTracker;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE17414", Offset = "0xE17414")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x27C0124", Offset = "0x27C0124", VA = "0x27C0124")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x27C20F0", Offset = "0x27C20F0", VA = "0x27C20F0")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x27C2DF8", Offset = "0x27C2DF8", VA = "0x27C2DF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x27C2E54", Offset = "0x27C2E54", VA = "0x27C2E54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x27C2FDC", Offset = "0x27C2FDC", VA = "0x27C2FDC")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x27C3010", Offset = "0x27C3010", VA = "0x27C3010")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x27C34AC", Offset = "0x27C34AC", VA = "0x27C34AC")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x17000096")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6000586")]
			[Address(RVA = "0x2DFE7BC", Offset = "0x2DFE7BC", VA = "0x2DFE7BC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x2DFE798", Offset = "0x2DFE798", VA = "0x2DFE798", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x2DFE7C4", Offset = "0x2DFE7C4", VA = "0x2DFE7C4")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x2DFE828", Offset = "0x2DFE828", VA = "0x2DFE828", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x2DFEA60", Offset = "0x2DFEA60", VA = "0x2DFEA60", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x2DFEC44", Offset = "0x2DFEC44", VA = "0x2DFEC44", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x2DFEA70", Offset = "0x2DFEA70", VA = "0x2DFEA70")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x2DFEC54", Offset = "0x2DFEC54", VA = "0x2DFEC54")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE025D8", Offset = "0xE025D8")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CharacterThirdPerson characterController;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float pivotOffset;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve moveSpeed;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x2DFEC6C", Offset = "0x2DFEC6C", VA = "0x2DFEC6C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x2DFECD0", Offset = "0x2DFECD0", VA = "0x2DFECD0", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x2DFED6C", Offset = "0x2DFED6C", VA = "0x2DFED6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x2DFEE84", Offset = "0x2DFEE84", VA = "0x2DFEE84")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02638", Offset = "0xE02638")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE174AC", Offset = "0xE174AC")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x400051D")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x400051E")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x17000097")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0x2DFEF44", Offset = "0x2DFEF44", VA = "0x2DFEF44", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x2DFEE9C", Offset = "0x2DFEE9C", VA = "0x2DFEE9C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x2DFEF28", Offset = "0x2DFEF28", VA = "0x2DFEF28", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x2DFF03C", Offset = "0x2DFF03C", VA = "0x2DFF03C", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x2DFF404", Offset = "0x2DFF404", VA = "0x2DFF404")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x2DFF50C", Offset = "0x2DFF50C", VA = "0x2DFF50C")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02698", Offset = "0xE02698")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02698", Offset = "0xE02698")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE174F0", Offset = "0xE174F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE174F0", Offset = "0xE174F0")]
		public Transform gravityTarget;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17550", Offset = "0xE17550")]
		[SerializeField]
		protected float gravityMultiplier;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected float airborneThreshold;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float slopeStartAngle;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float slopeEndAngle;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float spherecastRadius;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask groundLayers;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x400052A")]
		protected const float half = 0.5f;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000597")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x22A3954", Offset = "0x22A3954", VA = "0x22A3954")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x22A3A84", Offset = "0x22A3A84", VA = "0x22A3A84", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x22A3C6C", Offset = "0x22A3C6C", VA = "0x22A3C6C", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x22A3E1C", Offset = "0x22A3E1C", VA = "0x22A3E1C")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x22A3E80", Offset = "0x22A3E80", VA = "0x22A3E80")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x22A3FA0", Offset = "0x22A3FA0", VA = "0x22A3FA0")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x22A40C4", Offset = "0x22A40C4", VA = "0x22A40C4")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x22A40E8", Offset = "0x22A40E8", VA = "0x22A40E8")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x22A410C", Offset = "0x22A410C", VA = "0x22A410C")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x22A416C", Offset = "0x22A416C", VA = "0x22A416C")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000105")]
		public enum MoveMode
		{
			[Token(Token = "0x4000566")]
			Directional,
			[Token(Token = "0x4000567")]
			Strafe
		}

		[Token(Token = "0x2000106")]
		public struct AnimState
		{
			[Token(Token = "0x4000568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4000569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x400056A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x400056B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x400056C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x400056D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x400056E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE175EC", Offset = "0xE175EC")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE17624", Offset = "0xE17624")]
		public MoveMode moveMode;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1765C", Offset = "0xE1765C")]
		public bool lookInCameraDirection;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE17694", Offset = "0xE17694")]
		public float airSpeed;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airControl;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float jumpPower;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE176CC", Offset = "0xE176CC")]
		private LayerMask wallRunLayers;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE17718", Offset = "0xE17718")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17750", Offset = "0xE17750")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AnimState animState;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Vector3 moveDirection;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x17000098")]
		public bool onGround
		{
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0x22A4ED8", Offset = "0x22A4ED8", VA = "0x22A4ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE255DC", Offset = "0xE255DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x22A4EE0", Offset = "0x22A4EE0", VA = "0x22A4EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE255EC", Offset = "0xE255EC")]
			private set
			{
			}
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x22A4EEC", Offset = "0x22A4EEC", VA = "0x22A4EEC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x22A5054", Offset = "0x22A5054", VA = "0x22A5054")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x22A50E4", Offset = "0x22A50E4", VA = "0x22A50E4", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x22A5160", Offset = "0x22A5160", VA = "0x22A5160")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x22A5D4C", Offset = "0x22A5D4C", VA = "0x22A5D4C", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x22A5FA4", Offset = "0x22A5FA4", VA = "0x22A5FA4", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x22A5654", Offset = "0x22A5654", VA = "0x22A5654")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x22A6088", Offset = "0x22A6088", VA = "0x22A6088")]
		private void WallRun()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x22A6530", Offset = "0x22A6530", VA = "0x22A6530")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x22A5DD4", Offset = "0x22A5DD4", VA = "0x22A5DD4")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x22A65D0", Offset = "0x22A65D0", VA = "0x22A65D0", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x22A690C", Offset = "0x22A690C", VA = "0x22A690C")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x22A69FC", Offset = "0x22A69FC", VA = "0x22A69FC", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x22A59A4", Offset = "0x22A59A4", VA = "0x22A59A4")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x22A6B30", Offset = "0x22A6B30", VA = "0x22A6B30")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE0272C", Offset = "0xE0272C")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000108")]
		public enum RotationMode
		{
			[Token(Token = "0x400057D")]
			Smooth,
			[Token(Token = "0x400057E")]
			Linear
		}

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17760", Offset = "0xE17760")]
		[SerializeField]
		private CameraController cameraController;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE177AC", Offset = "0xE177AC")]
		[SerializeField]
		private float accelerationTime;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE177F8", Offset = "0xE177F8")]
		[SerializeField]
		private float turnTime;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17844", Offset = "0xE17844")]
		private bool walkByDefault;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17890", Offset = "0xE17890")]
		private RotationMode rotationMode;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE178DC", Offset = "0xE178DC")]
		[SerializeField]
		private float moveSpeed;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17928", Offset = "0xE17928")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x17000099")]
		public bool isGrounded
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x2583590", Offset = "0x2583590", VA = "0x2583590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE255FC", Offset = "0xE255FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x2583598", Offset = "0x2583598", VA = "0x2583598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2560C", Offset = "0xE2560C")]
			private set
			{
			}
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x25835A4", Offset = "0x25835A4", VA = "0x25835A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x2583648", Offset = "0x2583648", VA = "0x2583648")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x2583B08", Offset = "0x2583B08", VA = "0x2583B08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x258369C", Offset = "0x258369C", VA = "0x258369C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x258391C", Offset = "0x258391C", VA = "0x258391C")]
		private void Move()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x2583B44", Offset = "0x2583B44", VA = "0x2583B44")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x2583BE0", Offset = "0x2583BE0", VA = "0x2583BE0")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x2583C64", Offset = "0x2583C64", VA = "0x2583C64")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x27BEDD4", Offset = "0x27BEDD4", VA = "0x27BEDD4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x27BEE58", Offset = "0x27BEE58", VA = "0x27BEE58", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x27BF01C", Offset = "0x27BF01C", VA = "0x27BF01C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x27BF044", Offset = "0x27BF044", VA = "0x27BF044")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x200010B")]
		public struct State
		{
			[Token(Token = "0x4000588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x400058A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x400058B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x400058C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x27BEE18", Offset = "0x27BEE18", VA = "0x27BEE18", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x27BF160", Offset = "0x27BF160", VA = "0x27BF160", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x27BF060", Offset = "0x27BF060", VA = "0x27BF060")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x2AA75E4", Offset = "0x2AA75E4", VA = "0x2AA75E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x2AA7620", Offset = "0x2AA7620", VA = "0x2AA7620")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode[] keyCodes;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool mouse0;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool mouse1;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float slowMoTimeScale;

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x2586CC8", Offset = "0x2586CC8", VA = "0x2586CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x2586CFC", Offset = "0x2586CFC", VA = "0x2586CFC")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x2586DAC", Offset = "0x2586DAC", VA = "0x2586DAC")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010E")]
	public class Navigator
	{
		[Token(Token = "0x200010F")]
		public enum State
		{
			[Token(Token = "0x40005A0")]
			Idle,
			[Token(Token = "0x40005A1")]
			Seeking,
			[Token(Token = "0x40005A2")]
			OnPath
		}

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17978", Offset = "0xE17978")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE179B0", Offset = "0xE179B0")]
		public float cornerRadius;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE179E8", Offset = "0xE179E8")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17A20", Offset = "0xE17A20")]
		public float maxSampleDistance;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17A58", Offset = "0xE17A58")]
		public float nextPathInterval;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17A90", Offset = "0xE17A90")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17AA0", Offset = "0xE17AA0")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x1700009A")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x269B904", Offset = "0x269B904", VA = "0x269B904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2561C", Offset = "0xE2561C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x269B910", Offset = "0x269B910", VA = "0x269B910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2562C", Offset = "0xE2562C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public State state
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0x269B91C", Offset = "0x269B91C", VA = "0x269B91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2563C", Offset = "0xE2563C")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0x269B924", Offset = "0x269B924", VA = "0x269B924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2564C", Offset = "0xE2564C")]
			private set
			{
			}
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x269B92C", Offset = "0x269B92C", VA = "0x269B92C")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x269BA00", Offset = "0x269BA00", VA = "0x269BA00")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x269BE00", Offset = "0x269BE00", VA = "0x269BE00")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x269BE7C", Offset = "0x269BE7C", VA = "0x269BE7C")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x269BDBC", Offset = "0x269BDBC", VA = "0x269BDBC")]
		private void Stop()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x269BDEC", Offset = "0x269BDEC", VA = "0x269BDEC")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x269BFC8", Offset = "0x269BFC8", VA = "0x269BFC8")]
		public void Visualize()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x269C178", Offset = "0x269C178", VA = "0x269C178")]
		public Navigator()
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE0278C", Offset = "0xE0278C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE0278C", Offset = "0xE0278C")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x2DEA548", Offset = "0x2DEA548", VA = "0x2DEA548")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2565C", Offset = "0xE2565C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x2DEA590", Offset = "0x2DEA590", VA = "0x2DEA590")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25694", Offset = "0xE25694")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x2DEA5D8", Offset = "0x2DEA5D8", VA = "0x2DEA5D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE256CC", Offset = "0xE256CC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x2DEA620", Offset = "0x2DEA620", VA = "0x2DEA620")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25704", Offset = "0xE25704")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x2DEA668", Offset = "0x2DEA668", VA = "0x2DEA668")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x2DEA704", Offset = "0x2DEA704", VA = "0x2DEA704")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x2DEA724", Offset = "0x2DEA724", VA = "0x2DEA724")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x2DEA754", Offset = "0x2DEA754", VA = "0x2DEA754")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x2DEA784", Offset = "0x2DEA784", VA = "0x2DEA784")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x2DEA7C4", Offset = "0x2DEA7C4", VA = "0x2DEA7C4")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x2DEA808", Offset = "0x2DEA808", VA = "0x2DEA808")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x2DEA82C", Offset = "0x2DEA82C", VA = "0x2DEA82C")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x2DEA850", Offset = "0x2DEA850", VA = "0x2DEA850")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x2DEA878", Offset = "0x2DEA878", VA = "0x2DEA878")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x2DEA8A4", Offset = "0x2DEA8A4", VA = "0x2DEA8A4")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x2DEA8D0", Offset = "0x2DEA8D0", VA = "0x2DEA8D0")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x2DEA688", Offset = "0x2DEA688", VA = "0x2DEA688")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x2DEA8F8", Offset = "0x2DEA8F8", VA = "0x2DEA8F8")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x2DEA904", Offset = "0x2DEA904", VA = "0x2DEA904")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x2DEA910", Offset = "0x2DEA910", VA = "0x2DEA910")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x2DEAC34", Offset = "0x2DEAC34", VA = "0x2DEAC34", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x2DEACDC", Offset = "0x2DEACDC", VA = "0x2DEACDC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x2DEB0C8", Offset = "0x2DEB0C8", VA = "0x2DEB0C8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x2DEB254", Offset = "0x2DEB254", VA = "0x2DEB254")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x2DEB288", Offset = "0x2DEB288", VA = "0x2DEB288")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000111")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x1700009C")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x2DEAAB0", Offset = "0x2DEAAB0", VA = "0x2DEAAB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0x2DEB580", Offset = "0x2DEB580", VA = "0x2DEB580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x2DEAFA4", Offset = "0x2DEAFA4", VA = "0x2DEAFA4")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x2DEB3AC", Offset = "0x2DEB3AC", VA = "0x2DEB3AC")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000112")]
	public abstract class Constraint
	{
		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x1700009E")]
		public bool isValid
		{
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x282B62C", Offset = "0x282B62C", VA = "0x282B62C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F3")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x282B698", Offset = "0x282B698", VA = "0x282B698")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000113")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x282B6A0", Offset = "0x282B6A0", VA = "0x282B6A0", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x282B760", Offset = "0x282B760", VA = "0x282B760")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x282B768", Offset = "0x282B768", VA = "0x282B768")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000114")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x1700009F")]
		private bool positionChanged
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x282B8A4", Offset = "0x282B8A4", VA = "0x282B8A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x282B79C", Offset = "0x282B79C", VA = "0x282B79C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x282B8E0", Offset = "0x282B8E0", VA = "0x282B8E0")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x282B8E8", Offset = "0x282B8E8", VA = "0x282B8E8")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x282B91C", Offset = "0x282B91C", VA = "0x282B91C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x282B99C", Offset = "0x282B99C", VA = "0x282B99C")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x282B9A4", Offset = "0x282B9A4", VA = "0x282B9A4")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000116")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x170000A0")]
		private bool rotationChanged
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x282BAE0", Offset = "0x282BAE0", VA = "0x282BAE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x282B9D8", Offset = "0x282B9D8", VA = "0x282B9D8", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x282BB1C", Offset = "0x282BB1C", VA = "0x282BB1C")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x282BB24", Offset = "0x282BB24", VA = "0x282BB24")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000117")]
	public class Constraints
	{
		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17AB0", Offset = "0xE17AB0")]
		public float positionWeight;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17AC8", Offset = "0xE17AC8")]
		public float rotationWeight;

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x282BB58", Offset = "0x282BB58", VA = "0x282BB58")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x282BBC4", Offset = "0x282BBC4", VA = "0x282BBC4")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x282BC1C", Offset = "0x282BC1C", VA = "0x282BC1C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x282BECC", Offset = "0x282BECC", VA = "0x282BECC")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000118")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x2000119")]
		public enum DOF
		{
			[Token(Token = "0x40005D5")]
			One,
			[Token(Token = "0x40005D6")]
			Three
		}

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17AE0", Offset = "0xE17AE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17AE0", Offset = "0xE17AE0")]
		public float weight;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17B34", Offset = "0xE17B34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17B34", Offset = "0xE17B34")]
		public float rotationWeight;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17B88", Offset = "0xE17B88")]
		public DOF rotationDOF;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17BC0", Offset = "0xE17BC0")]
		public Transform bone1;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17BF8", Offset = "0xE17BF8")]
		public Transform bone2;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17C30", Offset = "0xE17C30")]
		public Transform bone3;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17C68", Offset = "0xE17C68")]
		public Transform tip;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17CA0", Offset = "0xE17CA0")]
		public Transform target;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17CD8", Offset = "0xE17CD8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x170000A1")]
		public bool initiated
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0x2926AE4", Offset = "0x2926AE4", VA = "0x2926AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2573C", Offset = "0xE2573C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000608")]
			[Address(RVA = "0x2926AEC", Offset = "0x2926AEC", VA = "0x2926AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2574C", Offset = "0xE2574C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0x2926AF8", Offset = "0x2926AF8", VA = "0x2926AF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600060A")]
			[Address(RVA = "0x2926B18", Offset = "0x2926B18", VA = "0x2926B18")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0x2926B38", Offset = "0x2926B38", VA = "0x2926B38")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600060C")]
			[Address(RVA = "0x2926B58", Offset = "0x2926B58", VA = "0x2926B58")]
			set
			{
			}
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x2926B78", Offset = "0x2926B78", VA = "0x2926B78")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x2926C8C", Offset = "0x2926C8C", VA = "0x2926C8C")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x2927010", Offset = "0x2927010", VA = "0x2927010")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x29270E8", Offset = "0x29270E8", VA = "0x29270E8")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x29271AC", Offset = "0x29271AC", VA = "0x29271AC")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x29274A0", Offset = "0x29274A0", VA = "0x29274A0")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17CE8", Offset = "0xE17CE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17CE8", Offset = "0xE17CE8")]
		public float weight;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17D3C", Offset = "0xE17D3C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170000A4")]
		public bool initiated
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0x29274B0", Offset = "0x29274B0", VA = "0x29274B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2575C", Offset = "0xE2575C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000614")]
			[Address(RVA = "0x29274B8", Offset = "0x29274B8", VA = "0x29274B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2576C", Offset = "0xE2576C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x29274C4", Offset = "0x29274C4", VA = "0x29274C4")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x292754C", Offset = "0x292754C", VA = "0x292754C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2577C", Offset = "0xE2577C")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x29278D8", Offset = "0x29278D8", VA = "0x29278D8")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x2927A9C", Offset = "0x2927A9C", VA = "0x2927A9C")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x29277D4", Offset = "0x29277D4", VA = "0x29277D4")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x2927C28", Offset = "0x2927C28", VA = "0x2927C28", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x2927CE8", Offset = "0x2927CE8", VA = "0x2927CE8")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x2927D60", Offset = "0x2927D60", VA = "0x2927D60")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x2927DD4", Offset = "0x2927DD4", VA = "0x2927DD4")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x2927E3C", Offset = "0x2927E3C", VA = "0x2927E3C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x2927E40", Offset = "0x2927E40", VA = "0x2927E40", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x2927E54", Offset = "0x2927E54", VA = "0x2927E54")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x200011C")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17D4C", Offset = "0xE17D4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE17D4C", Offset = "0xE17D4C")]
		public float weight;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17DA0", Offset = "0xE17DA0")]
		public Grounding solver;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE17DD8", Offset = "0xE17DD8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170000A5")]
		public bool initiated
		{
			[Token(Token = "0x6000622")]
			[Address(RVA = "0x29D1A04", Offset = "0x29D1A04", VA = "0x29D1A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE257B4", Offset = "0xE257B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000623")]
			[Address(RVA = "0x29D1A0C", Offset = "0x29D1A0C", VA = "0x29D1A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE257C4", Offset = "0xE257C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000621")]
		public abstract void ResetPosition();

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x29D1A18", Offset = "0x29D1A18", VA = "0x29D1A18")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x29D1BC4", Offset = "0x29D1BC4", VA = "0x29D1BC4")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x29D1AC4", Offset = "0x29D1AC4", VA = "0x29D1AC4")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x29D1BF8", Offset = "0x29D1BF8", VA = "0x29D1BF8")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000628")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000629")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x29D1D34", Offset = "0x29D1D34", VA = "0x29D1D34")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE027EC", Offset = "0xE027EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE027EC", Offset = "0xE027EC")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17DE8", Offset = "0xE17DE8")]
		public BipedIK ik;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17E20", Offset = "0xE17E20")]
		public float spineBend;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17E58", Offset = "0xE17E58")]
		public float spineSpeed;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x29D1DAC", Offset = "0x29D1DAC", VA = "0x29D1DAC", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE257D4", Offset = "0xE257D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x29D1DF4", Offset = "0x29D1DF4", VA = "0x29D1DF4", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2580C", Offset = "0xE2580C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x29D1E3C", Offset = "0x29D1E3C", VA = "0x29D1E3C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x29D1E7C", Offset = "0x29D1E7C", VA = "0x29D1E7C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x29D1F28", Offset = "0x29D1F28", VA = "0x29D1F28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x29D1F88", Offset = "0x29D1F88", VA = "0x29D1F88")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x29D22A8", Offset = "0x29D22A8", VA = "0x29D22A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x29D22FC", Offset = "0x29D22FC", VA = "0x29D22FC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x29D26F8", Offset = "0x29D26F8", VA = "0x29D26F8")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x29D27CC", Offset = "0x29D27CC", VA = "0x29D27CC")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x29D290C", Offset = "0x29D290C", VA = "0x29D290C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x29D2AD0", Offset = "0x29D2AD0", VA = "0x29D2AD0")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE0284C", Offset = "0xE0284C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE0284C", Offset = "0xE0284C")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x200011F")]
		public class SpineEffector
		{
			[Token(Token = "0x40005EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17F38", Offset = "0xE17F38")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40005F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17F70", Offset = "0xE17F70")]
			public float horizontalWeight;

			[Token(Token = "0x40005F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17FA8", Offset = "0xE17FA8")]
			public float verticalWeight;

			[Token(Token = "0x6000649")]
			[Address(RVA = "0x2732020", Offset = "0x2732020", VA = "0x2732020")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x600064A")]
			[Address(RVA = "0x2732030", Offset = "0x2732030", VA = "0x2732030")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17E90", Offset = "0xE17E90")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17EC8", Offset = "0xE17EC8")]
		public float spineBend;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17F00", Offset = "0xE17F00")]
		public float spineSpeed;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x309FF08", Offset = "0x309FF08", VA = "0x309FF08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25844", Offset = "0xE25844")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x309FF50", Offset = "0x309FF50", VA = "0x309FF50", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2587C", Offset = "0xE2587C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x309FF98", Offset = "0x309FF98", VA = "0x309FF98", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE258B4", Offset = "0xE258B4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x309FFE0", Offset = "0x309FFE0", VA = "0x309FFE0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x30A00A8", Offset = "0x30A00A8", VA = "0x30A00A8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x30A013C", Offset = "0x30A013C", VA = "0x30A013C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x30A03F8", Offset = "0x30A03F8", VA = "0x30A03F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x30A0404", Offset = "0x30A0404", VA = "0x30A0404")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x30A01A4", Offset = "0x30A01A4", VA = "0x30A01A4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x30A06E0", Offset = "0x30A06E0", VA = "0x30A06E0")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x30A0D04", Offset = "0x30A0D04", VA = "0x30A0D04")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x30A0E14", Offset = "0x30A0E14", VA = "0x30A0E14")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x30A0F90", Offset = "0x30A0F90", VA = "0x30A0F90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x30A10C8", Offset = "0x30A10C8", VA = "0x30A10C8")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE028AC", Offset = "0xE028AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE028AC", Offset = "0xE028AC")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE17FE0", Offset = "0xE17FE0")]
		public Transform pelvis;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18018", Offset = "0xE18018")]
		public Transform characterRoot;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18050", Offset = "0xE18050")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE18050", Offset = "0xE18050")]
		public float rootRotationWeight;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE180A4", Offset = "0xE180A4")]
		public float rootRotationSpeed;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE180DC", Offset = "0xE180DC")]
		public float maxRootRotationAngle;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x30A116C", Offset = "0x30A116C", VA = "0x30A116C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE258EC", Offset = "0xE258EC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x30A11B4", Offset = "0x30A11B4", VA = "0x30A11B4", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25924", Offset = "0xE25924")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x30A11FC", Offset = "0x30A11FC", VA = "0x30A11FC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x30A1214", Offset = "0x30A1214", VA = "0x30A1214")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x30A1434", Offset = "0x30A1434", VA = "0x30A1434")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x30A1530", Offset = "0x30A1530", VA = "0x30A1530")]
		private void Update()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x30A1AD8", Offset = "0x30A1AD8", VA = "0x30A1AD8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x30A1F3C", Offset = "0x30A1F3C", VA = "0x30A1F3C")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x30A20C8", Offset = "0x30A20C8", VA = "0x30A20C8")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x30A23CC", Offset = "0x30A23CC", VA = "0x30A23CC")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x30A2510", Offset = "0x30A2510", VA = "0x30A2510")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x30A271C", Offset = "0x30A271C", VA = "0x30A271C")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE0290C", Offset = "0xE0290C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE0290C", Offset = "0xE0290C")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x2000122")]
		public struct Foot
		{
			[Token(Token = "0x400061D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x400061E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x400061F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4000620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6000669")]
			[Address(RVA = "0x2732078", Offset = "0x2732078", VA = "0x2732078")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18114", Offset = "0xE18114")]
		public Grounding forelegSolver;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1814C", Offset = "0xE1814C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1814C", Offset = "0xE1814C")]
		public float rootRotationWeight;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE181A0", Offset = "0xE181A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE181A0", Offset = "0xE181A0")]
		public float minRootRotation;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE181F8", Offset = "0xE181F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE181F8", Offset = "0xE181F8")]
		public float maxRootRotation;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18250", Offset = "0xE18250")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18288", Offset = "0xE18288")]
		public float maxLegOffset;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE182C0", Offset = "0xE182C0")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE182F8", Offset = "0xE182F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE182F8", Offset = "0xE182F8")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1834C", Offset = "0xE1834C")]
		public Transform characterRoot;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18384", Offset = "0xE18384")]
		public Transform pelvis;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE183BC", Offset = "0xE183BC")]
		public Transform lastSpineBone;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE183F4", Offset = "0xE183F4")]
		public Transform head;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x30A27C0", Offset = "0x30A27C0", VA = "0x30A27C0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2595C", Offset = "0xE2595C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x30A2808", Offset = "0x30A2808", VA = "0x30A2808", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25994", Offset = "0xE25994")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x30A2850", Offset = "0x30A2850", VA = "0x30A2850", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x30A2884", Offset = "0x30A2884", VA = "0x30A2884")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x30A29B0", Offset = "0x30A29B0", VA = "0x30A29B0")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x30A2BA0", Offset = "0x30A2BA0", VA = "0x30A2BA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x30A2C08", Offset = "0x30A2C08", VA = "0x30A2C08")]
		private void Update()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x30A2C6C", Offset = "0x30A2C6C", VA = "0x30A2C6C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x30A2FCC", Offset = "0x30A2FCC", VA = "0x30A2FCC")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x30A3364", Offset = "0x30A3364", VA = "0x30A3364")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x30A345C", Offset = "0x30A345C", VA = "0x30A345C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x30A3828", Offset = "0x30A3828", VA = "0x30A3828")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x30A3E44", Offset = "0x30A3E44", VA = "0x30A3E44")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x30A4014", Offset = "0x30A4014", VA = "0x30A4014")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x30A40F0", Offset = "0x30A40F0", VA = "0x30A40F0")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x30A4338", Offset = "0x30A4338", VA = "0x30A4338")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x30A4370", Offset = "0x30A4370", VA = "0x30A4370")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x30A4574", Offset = "0x30A4574", VA = "0x30A4574")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE0296C", Offset = "0xE0296C")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1843C", Offset = "0xE1843C")]
		public VRIK ik;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x30A46E4", Offset = "0x30A46E4", VA = "0x30A46E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE259CC", Offset = "0xE259CC")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x30A46E8", Offset = "0x30A46E8", VA = "0x30A46E8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25A04", Offset = "0xE25A04")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x30A46EC", Offset = "0x30A46EC", VA = "0x30A46EC", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25A3C", Offset = "0xE25A3C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x30A46F0", Offset = "0x30A46F0", VA = "0x30A46F0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x30A4708", Offset = "0x30A4708", VA = "0x30A4708")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x30A479C", Offset = "0x30A479C", VA = "0x30A479C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x30A47FC", Offset = "0x30A47FC", VA = "0x30A47FC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x30A4A68", Offset = "0x30A4A68", VA = "0x30A4A68")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x30A4C58", Offset = "0x30A4C58", VA = "0x30A4C58")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x30A4CE8", Offset = "0x30A4CE8", VA = "0x30A4CE8")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x30A4EA4", Offset = "0x30A4EA4", VA = "0x30A4EA4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x30A5020", Offset = "0x30A5020", VA = "0x30A5020")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x30A51D4", Offset = "0x30A51D4", VA = "0x30A51D4")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000124")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x2000125")]
		public enum Quality
		{
			[Token(Token = "0x400063E")]
			Fastest,
			[Token(Token = "0x400063F")]
			Simple,
			[Token(Token = "0x4000640")]
			Best
		}

		[Token(Token = "0x2000126")]
		public class Leg
		{
			[Token(Token = "0x4000641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18920", Offset = "0xE18920")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x4000642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18930", Offset = "0xE18930")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x4000643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x4000644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18940", Offset = "0xE18940")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x4000645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18950", Offset = "0xE18950")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x4000646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18960", Offset = "0xE18960")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x4000647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18970", Offset = "0xE18970")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x4000648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18980", Offset = "0xE18980")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x4000649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x400064A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Grounding grounding;

			[Token(Token = "0x400064B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float lastTime;

			[Token(Token = "0x400064C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float deltaTime;

			[Token(Token = "0x400064D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3 lastPosition;

			[Token(Token = "0x400064E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion toHitNormal;

			[Token(Token = "0x400064F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Quaternion r;

			[Token(Token = "0x4000650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private RaycastHit heelHit;

			[Token(Token = "0x4000651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 up;

			[Token(Token = "0x170000AE")]
			public bool isGrounded
			{
				[Token(Token = "0x600068F")]
				[Address(RVA = "0x27320DC", Offset = "0x27320DC", VA = "0x27320DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B14", Offset = "0xE25B14")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000690")]
				[Address(RVA = "0x27320E4", Offset = "0x27320E4", VA = "0x27320E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B24", Offset = "0xE25B24")]
				private set
				{
				}
			}

			[Token(Token = "0x170000AF")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6000691")]
				[Address(RVA = "0x27320F0", Offset = "0x27320F0", VA = "0x27320F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B34", Offset = "0xE25B34")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000692")]
				[Address(RVA = "0x27320FC", Offset = "0x27320FC", VA = "0x27320FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B44", Offset = "0xE25B44")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B0")]
			public bool initiated
			{
				[Token(Token = "0x6000693")]
				[Address(RVA = "0x2732108", Offset = "0x2732108", VA = "0x2732108")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B54", Offset = "0xE25B54")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000694")]
				[Address(RVA = "0x2732110", Offset = "0x2732110", VA = "0x2732110")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B64", Offset = "0xE25B64")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B1")]
			public float heightFromGround
			{
				[Token(Token = "0x6000695")]
				[Address(RVA = "0x273211C", Offset = "0x273211C", VA = "0x273211C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B74", Offset = "0xE25B74")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000696")]
				[Address(RVA = "0x2732124", Offset = "0x2732124", VA = "0x2732124")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B84", Offset = "0xE25B84")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B2")]
			public Vector3 velocity
			{
				[Token(Token = "0x6000697")]
				[Address(RVA = "0x273212C", Offset = "0x273212C", VA = "0x273212C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B94", Offset = "0xE25B94")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000698")]
				[Address(RVA = "0x2732138", Offset = "0x2732138", VA = "0x2732138")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25BA4", Offset = "0xE25BA4")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B3")]
			public Transform transform
			{
				[Token(Token = "0x6000699")]
				[Address(RVA = "0x2732144", Offset = "0x2732144", VA = "0x2732144")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25BB4", Offset = "0xE25BB4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600069A")]
				[Address(RVA = "0x273214C", Offset = "0x273214C", VA = "0x273214C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25BC4", Offset = "0xE25BC4")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B4")]
			public float IKOffset
			{
				[Token(Token = "0x600069B")]
				[Address(RVA = "0x2732154", Offset = "0x2732154", VA = "0x2732154")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25BD4", Offset = "0xE25BD4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600069C")]
				[Address(RVA = "0x273215C", Offset = "0x273215C", VA = "0x273215C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25BE4", Offset = "0xE25BE4")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B5")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x60006A1")]
				[Address(RVA = "0x2732FE4", Offset = "0x2732FE4", VA = "0x2732FE4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000B6")]
			private float rootYOffset
			{
				[Token(Token = "0x60006AA")]
				[Address(RVA = "0x2733164", Offset = "0x2733164", VA = "0x2733164")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600069D")]
			[Address(RVA = "0x2732164", Offset = "0x2732164", VA = "0x2732164")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x600069E")]
			[Address(RVA = "0x27321F4", Offset = "0x27321F4", VA = "0x27321F4")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x600069F")]
			[Address(RVA = "0x2732240", Offset = "0x2732240", VA = "0x2732240")]
			public void Reset()
			{
			}

			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x27322B0", Offset = "0x27322B0", VA = "0x27322B0")]
			public void Process()
			{
			}

			[Token(Token = "0x60006A2")]
			[Address(RVA = "0x2732CF0", Offset = "0x2732CF0", VA = "0x2732CF0")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x60006A3")]
			[Address(RVA = "0x27328B4", Offset = "0x27328B4", VA = "0x27328B4")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x60006A4")]
			[Address(RVA = "0x2733078", Offset = "0x2733078", VA = "0x2733078")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x2732B2C", Offset = "0x2732B2C", VA = "0x2732B2C")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x2732BB8", Offset = "0x2732BB8", VA = "0x2732BB8")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x27330E8", Offset = "0x27330E8", VA = "0x27330E8")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x273300C", Offset = "0x273300C", VA = "0x273300C")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x2733210", Offset = "0x2733210", VA = "0x2733210")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x273329C", Offset = "0x273329C", VA = "0x273329C")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x2000127")]
		public class Pelvis
		{
			[Token(Token = "0x4000652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18990", Offset = "0xE18990")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4000653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE189A0", Offset = "0xE189A0")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4000654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4000655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x4000656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4000657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4000658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x170000B7")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x60006AC")]
				[Address(RVA = "0x27332E0", Offset = "0x27332E0", VA = "0x27332E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25BF4", Offset = "0xE25BF4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60006AD")]
				[Address(RVA = "0x27332EC", Offset = "0x27332EC", VA = "0x27332EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25C04", Offset = "0xE25C04")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B8")]
			public float heightOffset
			{
				[Token(Token = "0x60006AE")]
				[Address(RVA = "0x27332F8", Offset = "0x27332F8", VA = "0x27332F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25C14", Offset = "0xE25C14")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60006AF")]
				[Address(RVA = "0x2733300", Offset = "0x2733300", VA = "0x2733300")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25C24", Offset = "0xE25C24")]
				private set
				{
				}
			}

			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x2733308", Offset = "0x2733308", VA = "0x2733308")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x2733398", Offset = "0x2733398", VA = "0x2733398")]
			public void Reset()
			{
			}

			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x2733338", Offset = "0x2733338", VA = "0x2733338")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x2733404", Offset = "0x2733404", VA = "0x2733404")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x27335A4", Offset = "0x27335A4", VA = "0x27335A4")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18474", Offset = "0xE18474")]
		public LayerMask layers;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE184AC", Offset = "0xE184AC")]
		public float maxStep;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE184E4", Offset = "0xE184E4")]
		public float heightOffset;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1851C", Offset = "0xE1851C")]
		public float footSpeed;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18554", Offset = "0xE18554")]
		public float footRadius;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1858C", Offset = "0xE1858C")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE185D8", Offset = "0xE185D8")]
		public float prediction;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18610", Offset = "0xE18610")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE18610", Offset = "0xE18610")]
		public float footRotationWeight;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18664", Offset = "0xE18664")]
		public float footRotationSpeed;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1869C", Offset = "0xE1869C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1869C", Offset = "0xE1869C")]
		public float maxFootRotationAngle;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE186F4", Offset = "0xE186F4")]
		public bool rotateSolver;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1872C", Offset = "0xE1872C")]
		public float pelvisSpeed;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE18764", Offset = "0xE18764")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18764", Offset = "0xE18764")]
		public float pelvisDamper;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE187B8", Offset = "0xE187B8")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE187F0", Offset = "0xE187F0")]
		public float liftPelvisWeight;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18828", Offset = "0xE18828")]
		public float rootSphereCastRadius;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18860", Offset = "0xE18860")]
		public bool overstepFallsDown;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18898", Offset = "0xE18898")]
		public Quality quality;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE188D0", Offset = "0xE188D0")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE188E0", Offset = "0xE188E0")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE188F0", Offset = "0xE188F0")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18900", Offset = "0xE18900")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE18910", Offset = "0xE18910")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int gFixedCounter;

		[Token(Token = "0x400063B")]
		private const int UPDATE_FRAME = 3;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool initiated;

		[Token(Token = "0x170000A6")]
		public Leg[] legs
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0x30A523C", Offset = "0x30A523C", VA = "0x30A523C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25A74", Offset = "0xE25A74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000678")]
			[Address(RVA = "0x30A5244", Offset = "0x30A5244", VA = "0x30A5244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25A84", Offset = "0xE25A84")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0x30A524C", Offset = "0x30A524C", VA = "0x30A524C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25A94", Offset = "0xE25A94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x30A5254", Offset = "0x30A5254", VA = "0x30A5254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AA4", Offset = "0xE25AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool isGrounded
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x30A525C", Offset = "0x30A525C", VA = "0x30A525C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AB4", Offset = "0xE25AB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x30A5264", Offset = "0x30A5264", VA = "0x30A5264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AC4", Offset = "0xE25AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public Transform root
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x30A5270", Offset = "0x30A5270", VA = "0x30A5270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AD4", Offset = "0xE25AD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067E")]
			[Address(RVA = "0x30A5278", Offset = "0x30A5278", VA = "0x30A5278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AE4", Offset = "0xE25AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x30A5280", Offset = "0x30A5280", VA = "0x30A5280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AF4", Offset = "0xE25AF4")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000680")]
			[Address(RVA = "0x30A5298", Offset = "0x30A5298", VA = "0x30A5298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25B04", Offset = "0xE25B04")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x30A52B8", Offset = "0x30A52B8", VA = "0x30A52B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public Vector3 up
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x30A55F4", Offset = "0x30A55F4", VA = "0x30A55F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000AD")]
		private bool useRootRotation
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x30A5764", Offset = "0x30A5764", VA = "0x30A5764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x30A530C", Offset = "0x30A530C", VA = "0x30A530C")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x30A5638", Offset = "0x30A5638", VA = "0x30A5638")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x30A0410", Offset = "0x30A0410", VA = "0x30A0410")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x30A0A00", Offset = "0x30A0A00", VA = "0x30A0A00")]
		public void Update()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x30A1978", Offset = "0x30A1978", VA = "0x30A1978")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x30A001C", Offset = "0x30A001C", VA = "0x30A001C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x30A574C", Offset = "0x30A574C", VA = "0x30A574C")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x30A57E4", Offset = "0x30A57E4", VA = "0x30A57E4")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x30A5874", Offset = "0x30A5874", VA = "0x30A5874")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x30A5930", Offset = "0x30A5930", VA = "0x30A5930")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x30A4690", Offset = "0x30A4690", VA = "0x30A4690")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE029A4", Offset = "0xE029A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE029A4", Offset = "0xE029A4")]
	public class AimIK : IK
	{
		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x2A9F904", Offset = "0x2A9F904", VA = "0x2A9F904", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25C34", Offset = "0xE25C34")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x2A9F94C", Offset = "0x2A9F94C", VA = "0x2A9F94C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25C6C", Offset = "0xE25C6C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x2A9F994", Offset = "0x2A9F994", VA = "0x2A9F994")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25CA4", Offset = "0xE25CA4")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2A9F9DC", Offset = "0x2A9F9DC", VA = "0x2A9F9DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25CDC", Offset = "0xE25CDC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2A9FA24", Offset = "0x2A9FA24", VA = "0x2A9FA24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25D14", Offset = "0xE25D14")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2A9FA6C", Offset = "0x2A9FA6C", VA = "0x2A9FA6C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2A9FA74", Offset = "0x2A9FA74", VA = "0x2A9FA74")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02A04", Offset = "0xE02A04")]
	public class ArmIK : IK
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2AA8B9C", Offset = "0x2AA8B9C", VA = "0x2AA8B9C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25D4C", Offset = "0xE25D4C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2AA8C10", Offset = "0x2AA8C10", VA = "0x2AA8C10", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25D84", Offset = "0xE25D84")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x2AA8C84", Offset = "0x2AA8C84", VA = "0x2AA8C84")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25DBC", Offset = "0xE25DBC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x2AA8CCC", Offset = "0x2AA8CCC", VA = "0x2AA8CCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25DF4", Offset = "0xE25DF4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x2AA8D14", Offset = "0x2AA8D14", VA = "0x2AA8D14", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x2AA8D1C", Offset = "0x2AA8D1C", VA = "0x2AA8D1C")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02A3C", Offset = "0xE02A3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02A3C", Offset = "0xE02A3C")]
	public class CCDIK : IK
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x2DF63F0", Offset = "0x2DF63F0", VA = "0x2DF63F0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25E2C", Offset = "0xE25E2C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x2DF6438", Offset = "0x2DF6438", VA = "0x2DF6438", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25E64", Offset = "0xE25E64")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x2DF6480", Offset = "0x2DF6480", VA = "0x2DF6480")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25E9C", Offset = "0xE25E9C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x2DF64C8", Offset = "0x2DF64C8", VA = "0x2DF64C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25ED4", Offset = "0xE25ED4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x2DF6510", Offset = "0x2DF6510", VA = "0x2DF6510", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x2DF6518", Offset = "0x2DF6518", VA = "0x2DF6518")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02A9C", Offset = "0xE02A9C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02A9C", Offset = "0xE02A9C")]
	public class FABRIK : IK
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x28CF87C", Offset = "0x28CF87C", VA = "0x28CF87C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25F0C", Offset = "0xE25F0C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x28CF8C4", Offset = "0x28CF8C4", VA = "0x28CF8C4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25F44", Offset = "0xE25F44")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x28CF90C", Offset = "0x28CF90C", VA = "0x28CF90C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25F7C", Offset = "0xE25F7C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x28CF954", Offset = "0x28CF954", VA = "0x28CF954")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25FB4", Offset = "0xE25FB4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x28CF99C", Offset = "0x28CF99C", VA = "0x28CF99C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x28CF9A4", Offset = "0x28CF9A4", VA = "0x28CF9A4")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02AFC", Offset = "0xE02AFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02AFC", Offset = "0xE02AFC")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x28CFEEC", Offset = "0x28CFEEC", VA = "0x28CFEEC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE25FEC", Offset = "0xE25FEC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x28CFF34", Offset = "0x28CFF34", VA = "0x28CFF34", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26024", Offset = "0xE26024")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x28CFF7C", Offset = "0x28CFF7C", VA = "0x28CFF7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2605C", Offset = "0xE2605C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x28CFFC4", Offset = "0x28CFFC4", VA = "0x28CFFC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26094", Offset = "0xE26094")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x28D000C", Offset = "0x28D000C", VA = "0x28D000C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x28D0014", Offset = "0x28D0014", VA = "0x28D0014")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02B5C", Offset = "0xE02B5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02B5C", Offset = "0xE02B5C")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x2933964", Offset = "0x2933964", VA = "0x2933964", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE260CC", Offset = "0xE260CC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x29339AC", Offset = "0x29339AC", VA = "0x29339AC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26104", Offset = "0xE26104")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x29339F4", Offset = "0x29339F4", VA = "0x29339F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2613C", Offset = "0xE2613C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x2933A3C", Offset = "0x2933A3C", VA = "0x2933A3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26174", Offset = "0xE26174")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x2933A84", Offset = "0x2933A84", VA = "0x2933A84")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE261AC", Offset = "0xE261AC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x2933ACC", Offset = "0x2933ACC", VA = "0x2933ACC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE261E4", Offset = "0xE261E4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x2933B14", Offset = "0x2933B14", VA = "0x2933B14")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x2933B58", Offset = "0x2933B58", VA = "0x2933B58", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x2933B60", Offset = "0x2933B60", VA = "0x2933B60")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x2933D48", Offset = "0x2933D48", VA = "0x2933D48")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x2933FE8", Offset = "0x2933FE8", VA = "0x2933FE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2621C", Offset = "0xE2621C")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x2934008", Offset = "0x2934008", VA = "0x2934008")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26254", Offset = "0xE26254")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x29340F8", Offset = "0x29340F8", VA = "0x29340F8")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x60006E1")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x30AD24C", Offset = "0x30AD24C", VA = "0x30AD24C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x30AD340", Offset = "0x30AD340", VA = "0x30AD340", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x30AD530", Offset = "0x30AD530", VA = "0x30AD530", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60006E5")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x60006E6")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x30AD590", Offset = "0x30AD590", VA = "0x30AD590")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE189B0", Offset = "0xE189B0")]
		public IK[] IKComponents;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE189E8", Offset = "0xE189E8")]
		public Animator animator;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x170000B9")]
		private bool animatePhysics
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x30AFBC4", Offset = "0x30AFBC4", VA = "0x30AFBC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x30AFC5C", Offset = "0x30AFC5C", VA = "0x30AFC5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x30AFCCC", Offset = "0x30AFCCC", VA = "0x30AFCCC")]
		private void Update()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x30AFD88", Offset = "0x30AFD88", VA = "0x30AFD88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x30AFDC4", Offset = "0x30AFDC4", VA = "0x30AFDC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x30AFD00", Offset = "0x30AFD00", VA = "0x30AFD00")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x30AFE50", Offset = "0x30AFE50", VA = "0x30AFE50")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02BBC", Offset = "0xE02BBC")]
	public class LegIK : IK
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x2CF80B0", Offset = "0x2CF80B0", VA = "0x2CF80B0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2628C", Offset = "0xE2628C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x2CF8124", Offset = "0x2CF8124", VA = "0x2CF8124", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE262C4", Offset = "0xE262C4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x2CF8198", Offset = "0x2CF8198", VA = "0x2CF8198")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE262FC", Offset = "0xE262FC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x2CF81E0", Offset = "0x2CF81E0", VA = "0x2CF81E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26334", Offset = "0xE26334")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x2CF8228", Offset = "0x2CF8228", VA = "0x2CF8228", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x2CF8230", Offset = "0x2CF8230", VA = "0x2CF8230")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02BF4", Offset = "0xE02BF4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02BF4", Offset = "0xE02BF4")]
	public class LimbIK : IK
	{
		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x2CF8760", Offset = "0x2CF8760", VA = "0x2CF8760", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2636C", Offset = "0xE2636C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x2CF87A8", Offset = "0x2CF87A8", VA = "0x2CF87A8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE263A4", Offset = "0xE263A4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x2CF87F0", Offset = "0x2CF87F0", VA = "0x2CF87F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE263DC", Offset = "0xE263DC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x2CF8838", Offset = "0x2CF8838", VA = "0x2CF8838")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26414", Offset = "0xE26414")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x2CF8880", Offset = "0x2CF8880", VA = "0x2CF8880", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x2CF8888", Offset = "0x2CF8888", VA = "0x2CF8888")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02C54", Offset = "0xE02C54")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02C54", Offset = "0xE02C54")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x2CFA5A4", Offset = "0x2CFA5A4", VA = "0x2CFA5A4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2644C", Offset = "0xE2644C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x2CFA5EC", Offset = "0x2CFA5EC", VA = "0x2CFA5EC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26484", Offset = "0xE26484")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x2CFA634", Offset = "0x2CFA634", VA = "0x2CFA634")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE264BC", Offset = "0xE264BC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x2CFA67C", Offset = "0x2CFA67C", VA = "0x2CFA67C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE264F4", Offset = "0xE264F4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x2CFA6C4", Offset = "0x2CFA6C4", VA = "0x2CFA6C4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x2CFA6CC", Offset = "0x2CFA6CC", VA = "0x2CFA6CC")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02CB4", Offset = "0xE02CB4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02CB4", Offset = "0xE02CB4")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x27B43CC", Offset = "0x27B43CC", VA = "0x27B43CC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2652C", Offset = "0xE2652C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x27B4414", Offset = "0x27B4414", VA = "0x27B4414", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26564", Offset = "0xE26564")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x27B445C", Offset = "0x27B445C", VA = "0x27B445C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2659C", Offset = "0xE2659C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x27B44A4", Offset = "0x27B44A4", VA = "0x27B44A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE265D4", Offset = "0xE265D4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x27B44EC", Offset = "0x27B44EC", VA = "0x27B44EC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x27B44F4", Offset = "0x27B44F4", VA = "0x27B44F4")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02D14", Offset = "0xE02D14")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x2000135")]
		public class References
		{
			[Token(Token = "0x4000669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x400066A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x400066B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x400066C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18AD4", Offset = "0xE18AD4")]
			public Transform chest;

			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18B0C", Offset = "0xE18B0C")]
			public Transform neck;

			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18B44", Offset = "0xE18B44")]
			public Transform leftShoulder;

			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4000671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4000672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4000673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18B7C", Offset = "0xE18B7C")]
			public Transform rightShoulder;

			[Token(Token = "0x4000674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x4000675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x4000676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x4000677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18BB4", Offset = "0xE18BB4")]
			public Transform leftThigh;

			[Token(Token = "0x4000678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18BEC", Offset = "0xE18BEC")]
			public Transform leftCalf;

			[Token(Token = "0x4000679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18C24", Offset = "0xE18C24")]
			public Transform leftFoot;

			[Token(Token = "0x400067A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18C5C", Offset = "0xE18C5C")]
			public Transform leftToes;

			[Token(Token = "0x400067B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18C94", Offset = "0xE18C94")]
			public Transform rightThigh;

			[Token(Token = "0x400067C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18CCC", Offset = "0xE18CCC")]
			public Transform rightCalf;

			[Token(Token = "0x400067D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18D04", Offset = "0xE18D04")]
			public Transform rightFoot;

			[Token(Token = "0x400067E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18D3C", Offset = "0xE18D3C")]
			public Transform rightToes;

			[Token(Token = "0x170000BA")]
			public bool isFilled
			{
				[Token(Token = "0x6000711")]
				[Address(RVA = "0x31347F8", Offset = "0x31347F8", VA = "0x31347F8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000BB")]
			public bool isEmpty
			{
				[Token(Token = "0x6000712")]
				[Address(RVA = "0x3134C70", Offset = "0x3134C70", VA = "0x3134C70")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000710")]
			[Address(RVA = "0x31342A8", Offset = "0x31342A8", VA = "0x31342A8")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6000713")]
			[Address(RVA = "0x31350E8", Offset = "0x31350E8", VA = "0x31350E8")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6000714")]
			[Address(RVA = "0x3135594", Offset = "0x3135594", VA = "0x3135594")]
			public References()
			{
			}
		}

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xE18A20", Offset = "0xE18A20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18A20", Offset = "0xE18A20")]
		public References references;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18A9C", Offset = "0xE18A9C")]
		public IKSolverVR solver;

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x27BFD04", Offset = "0x27BFD04", VA = "0x27BFD04", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2660C", Offset = "0xE2660C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x27BFD78", Offset = "0x27BFD78", VA = "0x27BFD78", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26644", Offset = "0xE26644")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x27BFDEC", Offset = "0x27BFDEC", VA = "0x27BFDEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2667C", Offset = "0xE2667C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x27BFE34", Offset = "0x27BFE34", VA = "0x27BFE34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE266B4", Offset = "0xE266B4")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x27BFE60", Offset = "0x27BFE60", VA = "0x27BFE60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE266EC", Offset = "0xE266EC")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x27BFE88", Offset = "0x27BFE88", VA = "0x27BFE88", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x27BFE90", Offset = "0x27BFE90", VA = "0x27BFE90", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x27BFF10", Offset = "0x27BFF10", VA = "0x27BFF10", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x27C007C", Offset = "0x27C007C", VA = "0x27C007C")]
		public VRIK()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02D4C", Offset = "0xE02D4C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02D4C", Offset = "0xE02D4C")]
	public class AimIKJ : MonoBehaviour
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18D74", Offset = "0xE18D74")]
		public Transform target;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18DAC", Offset = "0xE18DAC")]
		public Transform poleTarget;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18DE4", Offset = "0xE18DE4")]
		public Transform aimTransform;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE18E1C", Offset = "0xE18E1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18E1C", Offset = "0xE18E1C")]
		public float axisX;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18E6C", Offset = "0xE18E6C")]
		public float axisY;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18EA4", Offset = "0xE18EA4")]
		public float axisZ;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18EDC", Offset = "0xE18EDC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE18EDC", Offset = "0xE18EDC")]
		public float poleAxisX;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18F2C", Offset = "0xE18F2C")]
		public float poleAxisY;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18F64", Offset = "0xE18F64")]
		public float poleAxisZ;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE18F9C", Offset = "0xE18F9C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE18F9C", Offset = "0xE18F9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE18F9C", Offset = "0xE18F9C")]
		public float weight;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19004", Offset = "0xE19004")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19004", Offset = "0xE19004")]
		public float poleWeight;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19058", Offset = "0xE19058")]
		public float tolerance;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19090", Offset = "0xE19090")]
		public int maxIterations;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE190C8", Offset = "0xE190C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE190C8", Offset = "0xE190C8")]
		public float clampWeight;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1911C", Offset = "0xE1911C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1911C", Offset = "0xE1911C")]
		public int clampSmoothing;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19170", Offset = "0xE19170")]
		public bool useRotationLimits;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE191A8", Offset = "0xE191A8")]
		public bool XY;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE191E0", Offset = "0xE191E0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE191E0", Offset = "0xE191E0")]
		public Transform[] bones;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19230", Offset = "0xE19230")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayableGraph graph;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AnimationScriptPlayable IKPlayable;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AimIKJob job;

		[Token(Token = "0x170000BC")]
		public bool initiated
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x2A9FAE4", Offset = "0x2A9FAE4", VA = "0x2A9FAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26724", Offset = "0xE26724")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x2A9FAEC", Offset = "0x2A9FAEC", VA = "0x2A9FAEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26734", Offset = "0xE26734")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public Vector3 axis
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x2A9FAF8", Offset = "0x2A9FAF8", VA = "0x2A9FAF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x2A9FB04", Offset = "0x2A9FB04", VA = "0x2A9FB04")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public Vector3 poleAxis
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x2A9FB10", Offset = "0x2A9FB10", VA = "0x2A9FB10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x2A9FB1C", Offset = "0x2A9FB1C", VA = "0x2A9FB1C")]
			set
			{
			}
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x2A9FB28", Offset = "0x2A9FB28", VA = "0x2A9FB28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x2AA091C", Offset = "0x2AA091C", VA = "0x2AA091C")]
		private void Update()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x2AA0D20", Offset = "0x2AA0D20", VA = "0x2AA0D20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x2AA0E24", Offset = "0x2AA0E24", VA = "0x2AA0E24")]
		public AimIKJ()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public struct AimIKJob : IAnimationJob
	{
		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TransformSceneHandle _target;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TransformSceneHandle _poleTarget;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransformStreamHandle _transform;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PropertySceneHandle _IKPositionWeight;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PropertySceneHandle _poleWeight;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PropertySceneHandle _axisX;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PropertySceneHandle _axisY;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public PropertySceneHandle _axisZ;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PropertySceneHandle _poleAxisX;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PropertySceneHandle _poleAxisY;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public PropertySceneHandle _poleAxisZ;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public PropertySceneHandle _clampWeight;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public PropertySceneHandle _clampSmoothing;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public PropertySceneHandle _maxIterations;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PropertySceneHandle _tolerance;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public PropertySceneHandle _XY;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public PropertySceneHandle _useRotationLimits;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NativeArray<TransformStreamHandle> bones;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NativeArray<PropertySceneHandle> boneWeights;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lastLocalDirection;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float step;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NativeArray<Quaternion> limitDefaultLocalRotationArray;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NativeArray<Vector3> limitAxisArray;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NativeArray<int> hingeFlags;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NativeArray<PropertySceneHandle> hingeMinArray;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private NativeArray<PropertySceneHandle> hingeMaxArray;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private NativeArray<PropertySceneHandle> hingeUseLimitsArray;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NativeArray<Quaternion> hingeLastRotations;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private NativeArray<float> hingeLastAngles;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private NativeArray<int> angleFlags;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private NativeArray<Vector3> angleSecondaryAxisArray;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private NativeArray<PropertySceneHandle> angleLimitArray;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private NativeArray<PropertySceneHandle> angleTwistLimitArray;

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x2AA015C", Offset = "0x2AA015C", VA = "0x2AA015C")]
		public void Setup(Animator animator, Transform[] bones, Transform target, Transform poleTarget, Transform aimTransform)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x2AA0EBC", Offset = "0x2AA0EBC", VA = "0x2AA0EBC")]
		private void SetUpRotationLimits(Animator animator, Transform[] bones)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x2AA15EC", Offset = "0x2AA15EC", VA = "0x2AA15EC")]
		private void DisposeRotationLimits()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x2AA171C", Offset = "0x2AA171C", VA = "0x2AA171C", Slot = "5")]
		public void ProcessRootMotion(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x2AA1720", Offset = "0x2AA1720", VA = "0x2AA1720", Slot = "4")]
		public void ProcessAnimation(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x2AA1758", Offset = "0x2AA1758", VA = "0x2AA1758")]
		private void Update(AnimationStream s)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x2AA239C", Offset = "0x2AA239C", VA = "0x2AA239C")]
		private void RotateToTarget(AnimationStream s, Vector3 targetPosition, Vector3 polePosition, int i, float weight, float poleWeight, bool XY, bool useRotationLimits, Vector3 axis, Vector3 poleAxis)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x2AA2220", Offset = "0x2AA2220", VA = "0x2AA2220")]
		public float GetAngle(AnimationStream s, Vector3 axis, Vector3 IKPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x2AA206C", Offset = "0x2AA206C", VA = "0x2AA206C")]
		private Vector3 GetClampedIKPosition(AnimationStream s, float clampWeight, int clampSmoothing, Vector3 IKPosition, Vector3 transformPosition, Vector3 transformAxis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x2AA2308", Offset = "0x2AA2308", VA = "0x2AA2308")]
		private Vector3 GetLocalDirection(AnimationStream s, Vector3 transformAxis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x2AA2F24", Offset = "0x2AA2F24", VA = "0x2AA2F24")]
		private float GetPositionOffset(AnimationStream s, Vector3 localDirection)
		{
			return default(float);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x2AA0DB0", Offset = "0x2AA0DB0", VA = "0x2AA0DB0")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02DD0", Offset = "0xE02DD0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02DD0", Offset = "0xE02DD0")]
	public class CCDIKJ : MonoBehaviour
	{
		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19240", Offset = "0xE19240")]
		public Transform target;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19278", Offset = "0xE19278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19278", Offset = "0xE19278")]
		public float weight;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE192CC", Offset = "0xE192CC")]
		public float tolerance;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19304", Offset = "0xE19304")]
		public int maxIterations;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1933C", Offset = "0xE1933C")]
		public bool useRotationLimits;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19374", Offset = "0xE19374")]
		public bool XY;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE193AC", Offset = "0xE193AC")]
		public Transform[] bones;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE193E4", Offset = "0xE193E4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayableGraph graph;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationScriptPlayable IKPlayable;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CCDIKJob job;

		[Token(Token = "0x170000BF")]
		public bool initiated
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x2DF6588", Offset = "0x2DF6588", VA = "0x2DF6588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26744", Offset = "0xE26744")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x2DF6590", Offset = "0x2DF6590", VA = "0x2DF6590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26754", Offset = "0xE26754")]
			private set
			{
			}
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x2DF659C", Offset = "0x2DF659C", VA = "0x2DF659C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x2DF6E94", Offset = "0x2DF6E94", VA = "0x2DF6E94")]
		private void Update()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x2DF704C", Offset = "0x2DF704C", VA = "0x2DF704C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x2DF7170", Offset = "0x2DF7170", VA = "0x2DF7170")]
		public CCDIKJ()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public struct CCDIKJob : IAnimationJob
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TransformSceneHandle _target;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PropertySceneHandle _IKPositionWeight;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PropertySceneHandle _maxIterations;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PropertySceneHandle _tolerance;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropertySceneHandle _XY;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropertySceneHandle _useRotationLimits;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NativeArray<TransformStreamHandle> bones;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NativeArray<PropertySceneHandle> boneWeights;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NativeArray<float> boneSqrMags;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float chainSqrMag;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 lastLocalDirection;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NativeArray<Quaternion> limitDefaultLocalRotationArray;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NativeArray<Vector3> limitAxisArray;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NativeArray<int> hingeFlags;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NativeArray<PropertySceneHandle> hingeMinArray;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NativeArray<PropertySceneHandle> hingeMaxArray;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NativeArray<PropertySceneHandle> hingeUseLimitsArray;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NativeArray<Quaternion> hingeLastRotations;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NativeArray<float> hingeLastAngles;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NativeArray<int> angleFlags;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private NativeArray<Vector3> angleSecondaryAxisArray;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private NativeArray<PropertySceneHandle> angleLimitArray;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NativeArray<PropertySceneHandle> angleTwistLimitArray;

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x2DF699C", Offset = "0x2DF699C", VA = "0x2DF699C")]
		public void Setup(Animator animator, Transform[] bones, Transform target)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x2DF71F0", Offset = "0x2DF71F0", VA = "0x2DF71F0")]
		private void SetUpRotationLimits(Animator animator, Transform[] bones)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x2DF7920", Offset = "0x2DF7920", VA = "0x2DF7920")]
		private void DisposeRotationLimits()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x2DF7A50", Offset = "0x2DF7A50", VA = "0x2DF7A50", Slot = "5")]
		public void ProcessRootMotion(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x2DF7A54", Offset = "0x2DF7A54", VA = "0x2DF7A54", Slot = "4")]
		public void ProcessAnimation(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x2DF7A8C", Offset = "0x2DF7A8C", VA = "0x2DF7A8C")]
		private void Update(AnimationStream s)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x2DF7EE8", Offset = "0x2DF7EE8", VA = "0x2DF7EE8")]
		private void Read(AnimationStream s)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x2DF83DC", Offset = "0x2DF83DC", VA = "0x2DF83DC")]
		private void Solve(AnimationStream s, Vector3 targetPosition, bool XY, float weight, int it, bool useRotationLimits)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x2DF824C", Offset = "0x2DF824C", VA = "0x2DF824C")]
		private Vector3 GetLocalDirection(AnimationStream s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x2DF83B0", Offset = "0x2DF83B0", VA = "0x2DF83B0")]
		private float GetPositionOffset(AnimationStream s, Vector3 localDirection)
		{
			return default(float);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x2DF8040", Offset = "0x2DF8040", VA = "0x2DF8040")]
		private Vector3 GetSingularityOffset(AnimationStream s, Vector3 IKPosition, bool useRotationLimits)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x2DF8C88", Offset = "0x2DF8C88", VA = "0x2DF8C88")]
		private bool SingularityDetected(AnimationStream s, Vector3 IKPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x2DF70DC", Offset = "0x2DF70DC", VA = "0x2DF70DC")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class IKJBoneParams : MonoBehaviour
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE193F4", Offset = "0xE193F4")]
		public float weight;

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x30AFE58", Offset = "0x30AFE58", VA = "0x30AFE58")]
		public IKJBoneParams()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public static class RotationLimitUtilities
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x2B42E20", Offset = "0x2B42E20", VA = "0x2B42E20")]
		public static Quaternion LimitHinge(Quaternion rotation, float min, float max, bool useLimits, Vector3 axis, ref Quaternion lastRotation, ref float lastAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x2B43058", Offset = "0x2B43058", VA = "0x2B43058")]
		public static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x2B430D4", Offset = "0x2B430D4", VA = "0x2B430D4")]
		public static Quaternion LimitAngle(Quaternion rotation, Vector3 axis, Vector3 secondaryAxis, float limit, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x2B4313C", Offset = "0x2B4313C", VA = "0x2B4313C")]
		public static Quaternion LimitSwing(Quaternion rotation, Vector3 axis, float limit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x2B432DC", Offset = "0x2B432DC", VA = "0x2B432DC")]
		public static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200013C")]
	public class FABRIKChain
	{
		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1940C", Offset = "0xE1940C")]
		public float pull;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19424", Offset = "0xE19424")]
		public float pin;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x28CFA14", Offset = "0x28CFA14", VA = "0x28CFA14")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x28CFAF0", Offset = "0x28CFAF0", VA = "0x28CFAF0")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x28CFB10", Offset = "0x28CFB10", VA = "0x28CFB10")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x28CFD84", Offset = "0x28CFD84", VA = "0x28CFD84")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x28CFBE4", Offset = "0x28CFBE4", VA = "0x28CFBE4")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x28CFE7C", Offset = "0x28CFE7C", VA = "0x28CFE7C")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x28D0084", Offset = "0x28D0084", VA = "0x28D0084")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x28D04FC", Offset = "0x28D04FC", VA = "0x28D04FC")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x28D06B8", Offset = "0x28D06B8", VA = "0x28D06B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x28D07E8", Offset = "0x28D07E8", VA = "0x28D07E8")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200013F")]
		public class BendBone
		{
			[Token(Token = "0x4000715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19A7C", Offset = "0xE19A7C")]
			public Transform transform;

			[Token(Token = "0x4000716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19AB4", Offset = "0xE19AB4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19AB4", Offset = "0xE19AB4")]
			public float weight;

			[Token(Token = "0x4000717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x600075C")]
			[Address(RVA = "0x272F304", Offset = "0x272F304", VA = "0x272F304")]
			public BendBone()
			{
			}

			[Token(Token = "0x600075D")]
			[Address(RVA = "0x272F340", Offset = "0x272F340", VA = "0x272F340")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x600075E")]
			[Address(RVA = "0x272F3A4", Offset = "0x272F3A4", VA = "0x272F3A4")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600075F")]
			[Address(RVA = "0x272F3DC", Offset = "0x272F3DC", VA = "0x272F3DC")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1943C", Offset = "0xE1943C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19474", Offset = "0xE19474")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19474", Offset = "0xE19474")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE19474", Offset = "0xE19474")]
		public float positionWeight;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE194EC", Offset = "0xE194EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE194EC", Offset = "0xE194EC")]
		public float bodyWeight;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19540", Offset = "0xE19540")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19540", Offset = "0xE19540")]
		public float thighWeight;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19594", Offset = "0xE19594")]
		public bool handsPullBody;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE195CC", Offset = "0xE195CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE195CC", Offset = "0xE195CC")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE195CC", Offset = "0xE195CC")]
		public float rotationWeight;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19644", Offset = "0xE19644")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19644", Offset = "0xE19644")]
		public float bodyClampWeight;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19698", Offset = "0xE19698")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19698", Offset = "0xE19698")]
		public float headClampWeight;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE196EC", Offset = "0xE196EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE196EC", Offset = "0xE196EC")]
		public float bendWeight;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19740", Offset = "0xE19740")]
		public BendBone[] bendBones;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19778", Offset = "0xE19778")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19778", Offset = "0xE19778")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE19778", Offset = "0xE19778")]
		public float CCDWeight;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE197F0", Offset = "0xE197F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE197F0", Offset = "0xE197F0")]
		public float roll;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19844", Offset = "0xE19844")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19844", Offset = "0xE19844")]
		public float damper;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1989C", Offset = "0xE1989C")]
		public Transform[] CCDBones;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE198D4", Offset = "0xE198D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE198D4", Offset = "0xE198D4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE198D4", Offset = "0xE198D4")]
		public float postStretchWeight;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1994C", Offset = "0xE1994C")]
		public float maxStretch;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19984", Offset = "0xE19984")]
		public float stretchDamper;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE199BC", Offset = "0xE199BC")]
		public bool fixHead;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE199F4", Offset = "0xE199F4")]
		public Transform[] stretchBones;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE19A2C", Offset = "0xE19A2C")]
		public Vector3 chestDirection;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19A64", Offset = "0xE19A64")]
		public float chestDirectionWeight;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x28D07F0", Offset = "0x28D07F0", VA = "0x28D07F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x28D0B78", Offset = "0x28D0B78", VA = "0x28D0B78")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x28D1054", Offset = "0x28D1054", VA = "0x28D1054")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x28D1420", Offset = "0x28D1420", VA = "0x28D1420")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x28D1BAC", Offset = "0x28D1BAC", VA = "0x28D1BAC")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x28D1E8C", Offset = "0x28D1E8C", VA = "0x28D1E8C")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x28D2190", Offset = "0x28D2190", VA = "0x28D2190")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x28D2964", Offset = "0x28D2964", VA = "0x28D2964")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x28D1990", Offset = "0x28D1990", VA = "0x28D1990")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x28D2B2C", Offset = "0x28D2B2C", VA = "0x28D2B2C")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x28D287C", Offset = "0x28D287C", VA = "0x28D287C")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x28D27B0", Offset = "0x28D27B0", VA = "0x28D27B0")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x28D2DB0", Offset = "0x28D2DB0", VA = "0x28D2DB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x28D30E4", Offset = "0x28D30E4", VA = "0x28D30E4")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000140")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000141")]
		public class ChildConstraint
		{
			[Token(Token = "0x400072F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4000730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4000731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4000732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4000733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19BA0", Offset = "0xE19BA0")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4000734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19BB0", Offset = "0xE19BB0")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4000735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4000736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4000737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4000738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x170000C0")]
			public float nominalDistance
			{
				[Token(Token = "0x6000774")]
				[Address(RVA = "0x272F498", Offset = "0x272F498", VA = "0x272F498")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26764", Offset = "0xE26764")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000775")]
				[Address(RVA = "0x272F4A0", Offset = "0x272F4A0", VA = "0x272F4A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26774", Offset = "0xE26774")]
				private set
				{
				}
			}

			[Token(Token = "0x170000C1")]
			public bool isRigid
			{
				[Token(Token = "0x6000776")]
				[Address(RVA = "0x272F4A8", Offset = "0x272F4A8", VA = "0x272F4A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26784", Offset = "0xE26784")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000777")]
				[Address(RVA = "0x272F4B0", Offset = "0x272F4B0", VA = "0x272F4B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26794", Offset = "0xE26794")]
				private set
				{
				}
			}

			[Token(Token = "0x6000778")]
			[Address(RVA = "0x272F4BC", Offset = "0x272F4BC", VA = "0x272F4BC")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6000779")]
			[Address(RVA = "0x272F524", Offset = "0x272F524", VA = "0x272F524")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600077A")]
			[Address(RVA = "0x272F57C", Offset = "0x272F57C", VA = "0x272F57C")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600077B")]
			[Address(RVA = "0x272F720", Offset = "0x272F720", VA = "0x272F720")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000142")]
		public enum Smoothing
		{
			[Token(Token = "0x400073A")]
			None,
			[Token(Token = "0x400073B")]
			Exponential,
			[Token(Token = "0x400073C")]
			Cubic
		}

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19B08", Offset = "0xE19B08")]
		public float pin;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19B20", Offset = "0xE19B20")]
		public float pull;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19B38", Offset = "0xE19B38")]
		public float push;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19B50", Offset = "0xE19B50")]
		public float pushParent;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19B68", Offset = "0xE19B68")]
		public float reach;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x400072E")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x28D3840", Offset = "0x28D3840", VA = "0x28D3840")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x28D395C", Offset = "0x28D395C", VA = "0x28D395C")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x28D3ACC", Offset = "0x28D3ACC", VA = "0x28D3ACC")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x28D3C08", Offset = "0x28D3C08", VA = "0x28D3C08")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x28D3CE0", Offset = "0x28D3CE0", VA = "0x28D3CE0")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x28D3E04", Offset = "0x28D3E04", VA = "0x28D3E04")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x28D44D4", Offset = "0x28D44D4", VA = "0x28D44D4")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x28D3FA0", Offset = "0x28D3FA0", VA = "0x28D3FA0")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x28D48C4", Offset = "0x28D48C4", VA = "0x28D48C4")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x28D4B24", Offset = "0x28D4B24", VA = "0x28D4B24")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x28D4D90", Offset = "0x28D4D90", VA = "0x28D4D90")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x28D5134", Offset = "0x28D5134", VA = "0x28D5134")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x28D55C8", Offset = "0x28D55C8", VA = "0x28D55C8")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x28D57EC", Offset = "0x28D57EC", VA = "0x28D57EC")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x28D5558", Offset = "0x28D5558", VA = "0x28D5558")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x28D4FC0", Offset = "0x28D4FC0", VA = "0x28D4FC0")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x28D54DC", Offset = "0x28D54DC", VA = "0x28D54DC")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x28D58D4", Offset = "0x28D58D4", VA = "0x28D58D4")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x28D53FC", Offset = "0x28D53FC", VA = "0x28D53FC")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x28D56D4", Offset = "0x28D56D4", VA = "0x28D56D4")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000143")]
	public class IKConstraintBend
	{
		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19BC0", Offset = "0xE19BC0")]
		public float weight;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19BD8", Offset = "0xE19BD8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x170000C2")]
		public bool initiated
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x30AD780", Offset = "0x30AD780", VA = "0x30AD780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE267A4", Offset = "0xE267A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x30AD788", Offset = "0x30AD788", VA = "0x30AD788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE267B4", Offset = "0xE267B4")]
			private set
			{
			}
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x30AD598", Offset = "0x30AD598", VA = "0x30AD598")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x30AD794", Offset = "0x30AD794", VA = "0x30AD794")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x30AD7D4", Offset = "0x30AD7D4", VA = "0x30AD7D4")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x30AD83C", Offset = "0x30AD83C", VA = "0x30AD83C")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x30AD88C", Offset = "0x30AD88C", VA = "0x30AD88C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x30ADBA0", Offset = "0x30ADBA0", VA = "0x30ADBA0")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x30ADD90", Offset = "0x30ADD90", VA = "0x30ADD90")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x30AE0DC", Offset = "0x30AE0DC", VA = "0x30AE0DC")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x30ADA50", Offset = "0x30ADA50", VA = "0x30ADA50")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x30ADAF8", Offset = "0x30ADAF8", VA = "0x30ADAF8")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public class IKEffector
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19BE8", Offset = "0xE19BE8")]
		public float positionWeight;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19C00", Offset = "0xE19C00")]
		public float rotationWeight;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19C18", Offset = "0xE19C18")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19C28", Offset = "0xE19C28")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x170000C3")]
		public bool isEndEffector
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x30AE578", Offset = "0x30AE578", VA = "0x30AE578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE267C4", Offset = "0xE267C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x30AE580", Offset = "0x30AE580", VA = "0x30AE580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE267D4", Offset = "0xE267D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x30AE510", Offset = "0x30AE510", VA = "0x30AE510")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x30AE58C", Offset = "0x30AE58C", VA = "0x30AE58C")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x30AE61C", Offset = "0x30AE61C", VA = "0x30AE61C")]
		public IKEffector()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x30AE760", Offset = "0x30AE760", VA = "0x30AE760")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x30AE8E0", Offset = "0x30AE8E0", VA = "0x30AE8E0")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x30AEC08", Offset = "0x30AEC08", VA = "0x30AEC08")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x30AEED4", Offset = "0x30AEED4", VA = "0x30AEED4")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x30AEFA8", Offset = "0x30AEFA8", VA = "0x30AEFA8")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x30AF050", Offset = "0x30AF050", VA = "0x30AF050")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x30AF58C", Offset = "0x30AF58C", VA = "0x30AF58C")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x30AF5B8", Offset = "0x30AF5B8", VA = "0x30AF5B8")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x30AF718", Offset = "0x30AF718", VA = "0x30AF718")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x30AF9A4", Offset = "0x30AF9A4", VA = "0x30AF9A4")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000145")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000146")]
		public class BoneMap
		{
			[Token(Token = "0x400076F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4000771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4000772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4000774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x4000775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4000776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4000777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4000778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4000779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x400077A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x400077B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x400077C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x400077D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x400077E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x400077F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4000780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4000781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4000782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4000783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4000784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x170000C4")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x600079D")]
				[Address(RVA = "0x2735880", Offset = "0x2735880", VA = "0x2735880")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000C5")]
			public bool isNodeBone
			{
				[Token(Token = "0x60007A0")]
				[Address(RVA = "0x273595C", Offset = "0x273595C", VA = "0x273595C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000C6")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x60007B4")]
				[Address(RVA = "0x2735D2C", Offset = "0x2735D2C", VA = "0x2735D2C")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x600079C")]
			[Address(RVA = "0x2735830", Offset = "0x2735830", VA = "0x2735830")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600079E")]
			[Address(RVA = "0x27358BC", Offset = "0x27358BC", VA = "0x27358BC")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600079F")]
			[Address(RVA = "0x273590C", Offset = "0x273590C", VA = "0x273590C")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x273596C", Offset = "0x273596C", VA = "0x273596C")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x27359F4", Offset = "0x27359F4", VA = "0x27359F4")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x27359FC", Offset = "0x27359FC", VA = "0x27359FC")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x2735AD4", Offset = "0x2735AD4", VA = "0x2735AD4")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x2735B4C", Offset = "0x2735B4C", VA = "0x2735B4C")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x2735C10", Offset = "0x2735C10", VA = "0x2735C10")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x2735E6C", Offset = "0x2735E6C", VA = "0x2735E6C")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x2735EA4", Offset = "0x2735EA4", VA = "0x2735EA4")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x2735EDC", Offset = "0x2735EDC", VA = "0x2735EDC")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x2735F04", Offset = "0x2735F04", VA = "0x2735F04")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x2735FF0", Offset = "0x2735FF0", VA = "0x2735FF0")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x273617C", Offset = "0x273617C", VA = "0x273617C")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x27361AC", Offset = "0x27361AC", VA = "0x27361AC")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x2736274", Offset = "0x2736274", VA = "0x2736274")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x27362E4", Offset = "0x27362E4", VA = "0x27362E4")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x2736434", Offset = "0x2736434", VA = "0x2736434")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x2736584", Offset = "0x2736584", VA = "0x2736584")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x2736604", Offset = "0x2736604", VA = "0x2736604")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x273606C", Offset = "0x273606C", VA = "0x273606C")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x273673C", Offset = "0x273673C", VA = "0x273673C")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x30AFE68", Offset = "0x30AFE68", VA = "0x30AFE68", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x30AFE70", Offset = "0x30AFE70", VA = "0x30AFE70", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x30AFE74", Offset = "0x30AFE74", VA = "0x30AFE74")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x30AFFC4", Offset = "0x30AFFC4", VA = "0x30AFFC4")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x30B0034", Offset = "0x30B0034", VA = "0x30B0034")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000147")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19C40", Offset = "0xE19C40")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x30B003C", Offset = "0x30B003C", VA = "0x30B003C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x30B00F0", Offset = "0x30B00F0", VA = "0x30B00F0")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x30B0168", Offset = "0x30B0168", VA = "0x30B0168")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x30B01FC", Offset = "0x30B01FC", VA = "0x30B01FC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x30B0218", Offset = "0x30B0218", VA = "0x30B0218")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x30B0238", Offset = "0x30B0238", VA = "0x30B0238", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x30B02D0", Offset = "0x30B02D0", VA = "0x30B02D0")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x30B02EC", Offset = "0x30B02EC", VA = "0x30B02EC")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000148")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000149")]
		public enum BoneMapType
		{
			[Token(Token = "0x4000793")]
			Parent,
			[Token(Token = "0x4000794")]
			Bone1,
			[Token(Token = "0x4000795")]
			Bone2,
			[Token(Token = "0x4000796")]
			Bone3
		}

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19C58", Offset = "0xE19C58")]
		public float maintainRotationWeight;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19C70", Offset = "0xE19C70")]
		public float weight;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoneMap boneMapParent;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap3;

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x30B0314", Offset = "0x30B0314", VA = "0x30B0314", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x30B0398", Offset = "0x30B0398", VA = "0x30B0398")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x30B0474", Offset = "0x30B0474", VA = "0x30B0474")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x30B0698", Offset = "0x30B0698", VA = "0x30B0698")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x30B0784", Offset = "0x30B0784", VA = "0x30B0784")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x30B08A8", Offset = "0x30B08A8", VA = "0x30B08A8")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x30B090C", Offset = "0x30B090C", VA = "0x30B090C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x30B09C0", Offset = "0x30B09C0", VA = "0x30B09C0")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x30B0A84", Offset = "0x30B0A84", VA = "0x30B0A84", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x30B0D1C", Offset = "0x30B0D1C", VA = "0x30B0D1C")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x30B0D90", Offset = "0x30B0D90", VA = "0x30B0D90")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19C88", Offset = "0xE19C88")]
		public int iterations;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19CA0", Offset = "0xE19CA0")]
		public float twistWeight;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x30B0F10", Offset = "0x30B0F10", VA = "0x30B0F10", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x30B127C", Offset = "0x30B127C", VA = "0x30B127C")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x30B139C", Offset = "0x30B139C", VA = "0x30B139C")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x30B14FC", Offset = "0x30B14FC", VA = "0x30B14FC")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x30B157C", Offset = "0x30B157C", VA = "0x30B157C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x30B15E8", Offset = "0x30B15E8", VA = "0x30B15E8")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x30B166C", Offset = "0x30B166C", VA = "0x30B166C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x30B1CB0", Offset = "0x30B1CB0", VA = "0x30B1CB0")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x30B1CE8", Offset = "0x30B1CE8", VA = "0x30B1CE8")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x30B1F6C", Offset = "0x30B1F6C", VA = "0x30B1F6C")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x30B2274", Offset = "0x30B2274", VA = "0x30B2274")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x30B2360", Offset = "0x30B2360", VA = "0x30B2360")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x30B2428", Offset = "0x30B2428", VA = "0x30B2428")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014B")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x200014C")]
		public class Point
		{
			[Token(Token = "0x40007AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40007AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19D64", Offset = "0xE19D64")]
			public float weight;

			[Token(Token = "0x40007B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40007B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x2737288", Offset = "0x2737288", VA = "0x2737288")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x27372D8", Offset = "0x27372D8", VA = "0x27372D8")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x60007EE")]
			[Address(RVA = "0x2737378", Offset = "0x2737378", VA = "0x2737378")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x27373B0", Offset = "0x27373B0", VA = "0x27373B0")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x60007F0")]
			[Address(RVA = "0x27373E8", Offset = "0x27373E8", VA = "0x27373E8")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x2737438", Offset = "0x2737438", VA = "0x2737438")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x2736E3C", Offset = "0x2736E3C", VA = "0x2736E3C")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014D")]
		public class Bone : Point
		{
			[Token(Token = "0x40007B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40007B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x170000C8")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x60007F3")]
				[Address(RVA = "0x2736758", Offset = "0x2736758", VA = "0x2736758")]
				get
				{
					return null;
				}
				[Token(Token = "0x60007F4")]
				[Address(RVA = "0x273685C", Offset = "0x273685C", VA = "0x273685C")]
				set
				{
				}
			}

			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x27368EC", Offset = "0x27368EC", VA = "0x27368EC")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x2736A9C", Offset = "0x2736A9C", VA = "0x2736A9C")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x2736C70", Offset = "0x2736C70", VA = "0x2736C70")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x2736DD0", Offset = "0x2736DD0", VA = "0x2736DD0")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x2736DF8", Offset = "0x2736DF8", VA = "0x2736DF8")]
			public Bone()
			{
			}

			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x2736E78", Offset = "0x2736E78", VA = "0x2736E78")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x2736ED0", Offset = "0x2736ED0", VA = "0x2736ED0")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014E")]
		public class Node : Point
		{
			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x2737210", Offset = "0x2737210", VA = "0x2737210")]
			public Node()
			{
			}

			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x2737214", Offset = "0x2737214", VA = "0x2737214")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x2737244", Offset = "0x2737244", VA = "0x2737244")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x200014F")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000150")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19CC8", Offset = "0xE19CC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19CC8", Offset = "0xE19CC8")]
		public float IKPositionWeight;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19D1C", Offset = "0xE19D1C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool firstInitiation;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		protected Transform root;

		[Token(Token = "0x170000C7")]
		public bool initiated
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x30B2760", Offset = "0x30B2760", VA = "0x30B2760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE267E4", Offset = "0xE267E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x30B2768", Offset = "0x30B2768", VA = "0x30B2768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE267F4", Offset = "0xE267F4")]
			private set
			{
			}
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x30B2690", Offset = "0x30B2690", VA = "0x30B2690")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D7")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x30AD3B0", Offset = "0x30AD3B0", VA = "0x30AD3B0")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x30AD2D0", Offset = "0x30AD2D0", VA = "0x30AD2D0")]
		public void Update()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x30B2708", Offset = "0x30B2708", VA = "0x30B2708", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x30B2714", Offset = "0x30B2714", VA = "0x30B2714")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x30B2720", Offset = "0x30B2720", VA = "0x30B2720")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x30B2728", Offset = "0x30B2728", VA = "0x30B2728")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x30B2758", Offset = "0x30B2758", VA = "0x30B2758")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x60007E2")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x60007E3")]
		public abstract void FixTransforms();

		[Token(Token = "0x60007E4")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x60007E5")]
		protected abstract void OnInitiate();

		[Token(Token = "0x60007E6")]
		protected abstract void OnUpdate();

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x30B2774", Offset = "0x30B2774", VA = "0x30B2774")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x30B278C", Offset = "0x30B278C", VA = "0x30B278C")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x30B28C4", Offset = "0x30B28C4", VA = "0x30B28C4")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x30B296C", Offset = "0x30B296C", VA = "0x30B296C")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x30B2BF4", Offset = "0x30B2BF4", VA = "0x30B2BF4")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000151")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19D7C", Offset = "0xE19D7C")]
		public float poleWeight;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19D94", Offset = "0xE19D94")]
		public float clampWeight;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19DAC", Offset = "0xE19DAC")]
		public int clampSmoothing;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x170000C9")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x30B2C88", Offset = "0x30B2C88", VA = "0x30B2C88")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000CA")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x30B2CC4", Offset = "0x30B2CC4", VA = "0x30B2CC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000CB")]
		protected override int minBones
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x30B379C", Offset = "0x30B379C", VA = "0x30B379C", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CC")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x30B3B80", Offset = "0x30B3B80", VA = "0x30B3B80", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x30B2C0C", Offset = "0x30B2C0C", VA = "0x30B2C0C")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x30B2D00", Offset = "0x30B2D00", VA = "0x30B2D00", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x30B2F20", Offset = "0x30B2F20", VA = "0x30B2F20", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x30B36E8", Offset = "0x30B36E8", VA = "0x30B36E8")]
		private void Solve()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x30B3478", Offset = "0x30B3478", VA = "0x30B3478")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x30B37A4", Offset = "0x30B37A4", VA = "0x30B37A4")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x30B3BF4", Offset = "0x30B3BF4", VA = "0x30B3BF4")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000152")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19DC4", Offset = "0xE19DC4")]
		public float IKRotationWeight;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x30B3C48", Offset = "0x30B3C48", VA = "0x30B3C48", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x30B402C", Offset = "0x30B402C", VA = "0x30B402C")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x30B40E0", Offset = "0x30B40E0", VA = "0x30B40E0", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x30B4274", Offset = "0x30B4274", VA = "0x30B4274", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x30B4408", Offset = "0x30B4408", VA = "0x30B4408", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x30B4464", Offset = "0x30B4464", VA = "0x30B4464", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x30B44D4", Offset = "0x30B44D4", VA = "0x30B44D4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x30B4844", Offset = "0x30B4844", VA = "0x30B4844", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x30B4870", Offset = "0x30B4870", VA = "0x30B4870")]
		private void Solve()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x30B4538", Offset = "0x30B4538", VA = "0x30B4538")]
		private void Read()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x30B48DC", Offset = "0x30B48DC", VA = "0x30B48DC")]
		private void Write()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x30B4A68", Offset = "0x30B4A68", VA = "0x30B4A68")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x3174A70", Offset = "0x3174A70", VA = "0x3174A70")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x3174B20", Offset = "0x3174B20", VA = "0x3174B20", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x3175018", Offset = "0x3175018", VA = "0x3175018", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x3175610", Offset = "0x3175610", VA = "0x3175610")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x3175BEC", Offset = "0x3175BEC", VA = "0x3175BEC")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000154")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x170000CD")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x3176BAC", Offset = "0x3176BAC", VA = "0x3176BAC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x3175C68", Offset = "0x3175C68", VA = "0x3175C68")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x3176228", Offset = "0x3176228", VA = "0x3176228")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x3176364", Offset = "0x3176364", VA = "0x3176364", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x31763F8", Offset = "0x31763F8", VA = "0x31763F8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x31768EC", Offset = "0x31768EC", VA = "0x31768EC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x3176BB4", Offset = "0x3176BB4", VA = "0x3176BB4")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x3175D40", Offset = "0x3175D40", VA = "0x3175D40")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x3176310", Offset = "0x3176310", VA = "0x3176310")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x3176B50", Offset = "0x3176B50", VA = "0x3176B50")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x317609C", Offset = "0x317609C", VA = "0x317609C")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x3177204", Offset = "0x3177204", VA = "0x3177204")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x3177278", Offset = "0x3177278", VA = "0x3177278")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x3177340", Offset = "0x3177340", VA = "0x3177340")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x31773F0", Offset = "0x31773F0", VA = "0x31773F0")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x317669C", Offset = "0x317669C", VA = "0x317669C")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x31767C4", Offset = "0x31767C4", VA = "0x31767C4")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x31774F4", Offset = "0x31774F4", VA = "0x31774F4")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x3176DD4", Offset = "0x3176DD4", VA = "0x3176DD4")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x3176300", Offset = "0x3176300", VA = "0x3176300")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x3177A84", Offset = "0x3177A84", VA = "0x3177A84")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x3177638", Offset = "0x3177638", VA = "0x3177638")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x3176C30", Offset = "0x3176C30", VA = "0x3176C30")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x3176D10", Offset = "0x3176D10", VA = "0x3176D10")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x3177B50", Offset = "0x3177B50", VA = "0x3177B50")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000155")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19DDC", Offset = "0xE19DDC")]
		public float rootPin;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x3177BE4", Offset = "0x3177BE4", VA = "0x3177BE4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x3178270", Offset = "0x3178270", VA = "0x3178270", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x3178308", Offset = "0x3178308", VA = "0x3178308", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x31783A8", Offset = "0x31783A8", VA = "0x31783A8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x31784B4", Offset = "0x31784B4", VA = "0x31784B4")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x3178550", Offset = "0x3178550", VA = "0x3178550", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x3178980", Offset = "0x3178980", VA = "0x3178980", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x3178B90", Offset = "0x3178B90", VA = "0x3178B90", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x3178A2C", Offset = "0x3178A2C", VA = "0x3178A2C")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x317873C", Offset = "0x317873C", VA = "0x317873C")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x3178C28", Offset = "0x3178C28", VA = "0x3178C28")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000156")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19DF4", Offset = "0xE19DF4")]
		public int iterations;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x3178C98", Offset = "0x3178C98", VA = "0x3178C98")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x3178D88", Offset = "0x3178D88", VA = "0x3178D88")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x3178DE4", Offset = "0x3178DE4", VA = "0x3178DE4")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x3178F14", Offset = "0x3178F14", VA = "0x3178F14")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x3178F70", Offset = "0x3178F70", VA = "0x3178F70")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x3178FF0", Offset = "0x3178FF0", VA = "0x3178FF0", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x317918C", Offset = "0x317918C", VA = "0x317918C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x31792FC", Offset = "0x31792FC", VA = "0x31792FC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x317950C", Offset = "0x317950C", VA = "0x317950C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x31795E4", Offset = "0x31795E4", VA = "0x31795E4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x31796D0", Offset = "0x31796D0", VA = "0x31796D0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x3179844", Offset = "0x3179844", VA = "0x3179844", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x317999C", Offset = "0x317999C", VA = "0x317999C", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x3179BE8", Offset = "0x3179BE8", VA = "0x3179BE8", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x3179EC4", Offset = "0x3179EC4", VA = "0x3179EC4", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x3179F08", Offset = "0x3179F08", VA = "0x3179F08", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x3179FF8", Offset = "0x3179FF8", VA = "0x3179FF8")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000157")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x40007EF")]
		Body,
		[Token(Token = "0x40007F0")]
		LeftShoulder,
		[Token(Token = "0x40007F1")]
		RightShoulder,
		[Token(Token = "0x40007F2")]
		LeftThigh,
		[Token(Token = "0x40007F3")]
		RightThigh,
		[Token(Token = "0x40007F4")]
		LeftHand,
		[Token(Token = "0x40007F5")]
		RightHand,
		[Token(Token = "0x40007F6")]
		LeftFoot,
		[Token(Token = "0x40007F7")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x2000158")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x40007F9")]
		LeftArm,
		[Token(Token = "0x40007FA")]
		RightArm,
		[Token(Token = "0x40007FB")]
		LeftLeg,
		[Token(Token = "0x40007FC")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x2000159")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19E0C", Offset = "0xE19E0C")]
		public float spineStiffness;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19E24", Offset = "0xE19E24")]
		public float pullBodyVertical;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19E3C", Offset = "0xE19E3C")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19E54", Offset = "0xE19E54")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x170000CE")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x317A138", Offset = "0x317A138", VA = "0x317A138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x317A280", Offset = "0x317A280", VA = "0x317A280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x317A288", Offset = "0x317A288", VA = "0x317A288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x317A290", Offset = "0x317A290", VA = "0x317A290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x317A298", Offset = "0x317A298", VA = "0x317A298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x317A2A0", Offset = "0x317A2A0", VA = "0x317A2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x317A2A8", Offset = "0x317A2A8", VA = "0x317A2A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x317A2B0", Offset = "0x317A2B0", VA = "0x317A2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x317A2B8", Offset = "0x317A2B8", VA = "0x317A2B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x317A2C0", Offset = "0x317A2C0", VA = "0x317A2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x317A2F8", Offset = "0x317A2F8", VA = "0x317A2F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x317A330", Offset = "0x317A330", VA = "0x317A330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x317A368", Offset = "0x317A368", VA = "0x317A368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x317A3A0", Offset = "0x317A3A0", VA = "0x317A3A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x317A3D4", Offset = "0x317A3D4", VA = "0x317A3D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x317A40C", Offset = "0x317A40C", VA = "0x317A40C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x317A444", Offset = "0x317A444", VA = "0x317A444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x317A47C", Offset = "0x317A47C", VA = "0x317A47C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x317C60C", Offset = "0x317C60C", VA = "0x317C60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26804", Offset = "0xE26804")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x317C618", Offset = "0x317C618", VA = "0x317C618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26814", Offset = "0xE26814")]
			private set
			{
			}
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x317A4B0", Offset = "0x317A4B0", VA = "0x317A4B0")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x317A5BC", Offset = "0x317A5BC", VA = "0x317A5BC")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x317A504", Offset = "0x317A504", VA = "0x317A504")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x317A648", Offset = "0x317A648", VA = "0x317A648")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x317A140", Offset = "0x317A140", VA = "0x317A140")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x317A718", Offset = "0x317A718", VA = "0x317A718")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x317A7D0", Offset = "0x317A7D0", VA = "0x317A7D0")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x317A884", Offset = "0x317A884", VA = "0x317A884")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x317A938", Offset = "0x317A938", VA = "0x317A938")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x317A940", Offset = "0x317A940", VA = "0x317A940")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x317A974", Offset = "0x317A974", VA = "0x317A974")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x317AA3C", Offset = "0x317AA3C", VA = "0x317AA3C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x317ABE4", Offset = "0x317ABE4", VA = "0x317ABE4")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x317C088", Offset = "0x317C088", VA = "0x317C088")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x317C49C", Offset = "0x317C49C", VA = "0x317C49C")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x317C4FC", Offset = "0x317C4FC", VA = "0x317C4FC")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x317C324", Offset = "0x317C324", VA = "0x317C324")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x317C3E0", Offset = "0x317C3E0", VA = "0x317C3E0")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x317C624", Offset = "0x317C624", VA = "0x317C624")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x317C6FC", Offset = "0x317C6FC", VA = "0x317C6FC", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x317C7F8", Offset = "0x317C7F8", VA = "0x317C7F8")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x317C920", Offset = "0x317C920", VA = "0x317C920")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x317CA64", Offset = "0x317CA64", VA = "0x317CA64")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x317CB94", Offset = "0x317CB94", VA = "0x317CB94", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x317CDD4", Offset = "0x317CDD4", VA = "0x317CDD4", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x317CE58", Offset = "0x317CE58", VA = "0x317CE58")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x170000E1")]
		protected virtual int minBones
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x317D718", Offset = "0x317D718", VA = "0x317D718", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E2")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x317D720", Offset = "0x317D720", VA = "0x317D720", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E3")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x317D728", Offset = "0x317D728", VA = "0x317D728", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x317D738", Offset = "0x317D738", VA = "0x317D738", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E5")]
		protected float positionOffset
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x31755BC", Offset = "0x31755BC", VA = "0x31755BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x317CE64", Offset = "0x317CE64", VA = "0x317CE64")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x317D020", Offset = "0x317D020", VA = "0x317D020")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x317D180", Offset = "0x317D180", VA = "0x317D180", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x317D1EC", Offset = "0x317D1EC", VA = "0x317D1EC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x317D26C", Offset = "0x317D26C", VA = "0x317D26C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x317D620", Offset = "0x317D620", VA = "0x317D620", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x317D628", Offset = "0x317D628", VA = "0x317D628", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x317D730", Offset = "0x317D730", VA = "0x317D730", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x317D734", Offset = "0x317D734", VA = "0x317D734", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x3174BA0", Offset = "0x3174BA0", VA = "0x3174BA0")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x31752A4", Offset = "0x31752A4", VA = "0x31752A4")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x317D800", Offset = "0x317D800", VA = "0x317D800")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x3175BF0", Offset = "0x3175BF0", VA = "0x3175BF0")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015B")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19E64", Offset = "0xE19E64")]
		public float IKRotationWeight;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x317D9F4", Offset = "0x317D9F4", VA = "0x317D9F4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x317DDDC", Offset = "0x317DDDC", VA = "0x317DDDC")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x317DE94", Offset = "0x317DE94", VA = "0x317DE94", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x317E028", Offset = "0x317E028", VA = "0x317E028", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x317E1BC", Offset = "0x317E1BC", VA = "0x317E1BC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x317E218", Offset = "0x317E218", VA = "0x317E218", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x317E288", Offset = "0x317E288", VA = "0x317E288", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x317E5F8", Offset = "0x317E5F8", VA = "0x317E5F8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x317E624", Offset = "0x317E624", VA = "0x317E624")]
		private void Solve()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x317E2EC", Offset = "0x317E2EC", VA = "0x317E2EC")]
		private void Read()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x317E6B8", Offset = "0x317E6B8", VA = "0x317E6B8")]
		private void Write()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x317E844", Offset = "0x317E844", VA = "0x317E844")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x200015D")]
		public enum BendModifier
		{
			[Token(Token = "0x4000827")]
			Animation,
			[Token(Token = "0x4000828")]
			Target,
			[Token(Token = "0x4000829")]
			Parent,
			[Token(Token = "0x400082A")]
			Arm,
			[Token(Token = "0x400082B")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x200015E")]
		public struct AxisDirection
		{
			[Token(Token = "0x400082C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x400082D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x400082E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x27376E0", Offset = "0x27376E0", VA = "0x27376E0")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19E7C", Offset = "0xE19E7C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19E94", Offset = "0xE19E94")]
		public float bendModifierWeight;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x170000E6")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x317FB74", Offset = "0x317FB74", VA = "0x317FB74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x317E9FC", Offset = "0x317E9FC", VA = "0x317E9FC")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x317EA4C", Offset = "0x317EA4C", VA = "0x317EA4C")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x317EA98", Offset = "0x317EA98", VA = "0x317EA98", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x317EF6C", Offset = "0x317EF6C", VA = "0x317EF6C", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x317F8B4", Offset = "0x317F8B4", VA = "0x317F8B4", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x317F960", Offset = "0x317F960", VA = "0x317F960")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x317FAD8", Offset = "0x317FAD8", VA = "0x317FAD8")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x317ED94", Offset = "0x317ED94", VA = "0x317ED94")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x317F050", Offset = "0x317F050", VA = "0x317F050")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000160")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x170000ED")]
			public Vector3 forward
			{
				[Token(Token = "0x60008CD")]
				[Address(RVA = "0x2737974", Offset = "0x2737974", VA = "0x2737974")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x2737740", Offset = "0x2737740", VA = "0x2737740")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x2737744", Offset = "0x2737744", VA = "0x2737744")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x2737774", Offset = "0x2737774", VA = "0x2737774")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x273786C", Offset = "0x273786C", VA = "0x273786C")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19EAC", Offset = "0xE19EAC")]
		public float bodyWeight;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19EC4", Offset = "0xE19EC4")]
		public float headWeight;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19EDC", Offset = "0xE19EDC")]
		public float eyesWeight;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19EF4", Offset = "0xE19EF4")]
		public float clampWeight;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19F0C", Offset = "0xE19F0C")]
		public float clampWeightHead;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19F24", Offset = "0xE19F24")]
		public float clampWeightEyes;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19F3C", Offset = "0xE19F3C")]
		public int clampSmoothing;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] spineForwards;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] headForwards;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3[] eyeForward;

		[Token(Token = "0x170000E7")]
		private bool spineIsValid
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x3180320", Offset = "0x3180320", VA = "0x3180320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		private bool spineIsEmpty
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x31804F0", Offset = "0x31804F0", VA = "0x31804F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E9")]
		private bool headIsValid
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x3180400", Offset = "0x3180400", VA = "0x3180400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		private bool headIsEmpty
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x3180514", Offset = "0x3180514", VA = "0x3180514")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		private bool eyesIsValid
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x3180410", Offset = "0x3180410", VA = "0x3180410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		private bool eyesIsEmpty
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x318058C", Offset = "0x318058C", VA = "0x318058C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x317FB90", Offset = "0x317FB90", VA = "0x317FB90")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x317FBC0", Offset = "0x317FBC0", VA = "0x317FBC0")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x317FC18", Offset = "0x317FC18", VA = "0x317FC18")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x317FC94", Offset = "0x317FC94", VA = "0x317FC94")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x317FD2C", Offset = "0x317FD2C", VA = "0x317FD2C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x317FDEC", Offset = "0x317FDEC", VA = "0x317FDEC")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x317FEE8", Offset = "0x317FEE8", VA = "0x317FEE8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x3180014", Offset = "0x3180014", VA = "0x3180014", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x3180154", Offset = "0x3180154", VA = "0x3180154", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x31805B0", Offset = "0x31805B0", VA = "0x31805B0", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x3180820", Offset = "0x3180820", VA = "0x3180820", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x31809BC", Offset = "0x31809BC", VA = "0x31809BC")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x3180C20", Offset = "0x3180C20", VA = "0x3180C20", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x3180F34", Offset = "0x3180F34", VA = "0x3180F34", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x3181004", Offset = "0x3181004", VA = "0x3181004")]
		private void SolveSpine()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x31811A4", Offset = "0x31811A4", VA = "0x31811A4")]
		private void SolveHead()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x31813C8", Offset = "0x31813C8", VA = "0x31813C8")]
		private void SolveEyes()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x31815E0", Offset = "0x31815E0", VA = "0x31815E0")]
		private Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x3180A74", Offset = "0x3180A74", VA = "0x3180A74")]
		private void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x3181850", Offset = "0x3181850", VA = "0x3181850")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000162")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4000848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4000849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x27379B0", Offset = "0x27379B0", VA = "0x27379B0")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x2737AAC", Offset = "0x2737AAC", VA = "0x2737AAC")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x2737ADC", Offset = "0x2737ADC", VA = "0x2737ADC")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x2737B18", Offset = "0x2737B18", VA = "0x2737B18")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE19F54", Offset = "0xE19F54")]
		public float IKRotationWeight;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x3181AB4", Offset = "0x3181AB4", VA = "0x3181AB4")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x3181C10", Offset = "0x3181C10", VA = "0x3181C10")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x3181D54", Offset = "0x3181D54", VA = "0x3181D54")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x3181D60", Offset = "0x3181D60", VA = "0x3181D60")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x3181D90", Offset = "0x3181D90", VA = "0x3181D90")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x3181D9C", Offset = "0x3181D9C", VA = "0x3181D9C")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x3181DA4", Offset = "0x3181DA4", VA = "0x3181DA4", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x3181EC8", Offset = "0x3181EC8", VA = "0x3181EC8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x3181FE4", Offset = "0x3181FE4", VA = "0x3181FE4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x3182030", Offset = "0x3182030", VA = "0x3182030", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x3182090", Offset = "0x3182090", VA = "0x3182090", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x3182488", Offset = "0x3182488", VA = "0x3182488")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x3182508", Offset = "0x3182508", VA = "0x3182508")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x31828C4", Offset = "0x31828C4", VA = "0x31828C4")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x3182A2C", Offset = "0x3182A2C", VA = "0x3182A2C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x3182B94", Offset = "0x3182B94", VA = "0x3182B94")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x3182B08", Offset = "0x3182B08", VA = "0x3182B08")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x3182C98", Offset = "0x3182C98", VA = "0x3182C98", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x318345C", Offset = "0x318345C", VA = "0x318345C", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x3183460", Offset = "0x3183460", VA = "0x3183460", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x3183464", Offset = "0x3183464", VA = "0x3183464", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x3183284", Offset = "0x3183284", VA = "0x3183284")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x317F9E8", Offset = "0x317F9E8", VA = "0x317F9E8")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000164")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x2000165")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4000889")]
				YawPitch,
				[Token(Token = "0x400088A")]
				FromTo
			}

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A104", Offset = "0xE1A104")]
			public Transform target;

			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A13C", Offset = "0xE1A13C")]
			public Transform bendGoal;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A174", Offset = "0xE1A174")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A174", Offset = "0xE1A174")]
			public float positionWeight;

			[Token(Token = "0x400086F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A1C8", Offset = "0xE1A1C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A1C8", Offset = "0xE1A1C8")]
			public float rotationWeight;

			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A21C", Offset = "0xE1A21C")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A254", Offset = "0xE1A254")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A254", Offset = "0xE1A254")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A2A8", Offset = "0xE1A2A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A2A8", Offset = "0xE1A2A8")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A2FC", Offset = "0xE1A2FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A2FC", Offset = "0xE1A2FC")]
			public float bendGoalWeight;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A350", Offset = "0xE1A350")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A350", Offset = "0xE1A350")]
			public float swivelOffset;

			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A3AC", Offset = "0xE1A3AC")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A3E4", Offset = "0xE1A3E4")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A41C", Offset = "0xE1A41C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A41C", Offset = "0xE1A41C")]
			public float armLengthMlp;

			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A474", Offset = "0xE1A474")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A4EC", Offset = "0xE1A4EC")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A4FC", Offset = "0xE1A4FC")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4000885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4000886")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4000887")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x170000EF")]
			public Vector3 position
			{
				[Token(Token = "0x6000907")]
				[Address(RVA = "0x2737B1C", Offset = "0x2737B1C", VA = "0x2737B1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26844", Offset = "0xE26844")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000908")]
				[Address(RVA = "0x2737B28", Offset = "0x2737B28", VA = "0x2737B28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26854", Offset = "0xE26854")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F0")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000909")]
				[Address(RVA = "0x2737B34", Offset = "0x2737B34", VA = "0x2737B34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26864", Offset = "0xE26864")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600090A")]
				[Address(RVA = "0x2737B40", Offset = "0x2737B40", VA = "0x2737B40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26874", Offset = "0xE26874")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F1")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x600090B")]
				[Address(RVA = "0x2737B4C", Offset = "0x2737B4C", VA = "0x2737B4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x600090C")]
				[Address(RVA = "0x2737B80", Offset = "0x2737B80", VA = "0x2737B80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F3")]
			private VirtualBone forearm
			{
				[Token(Token = "0x600090D")]
				[Address(RVA = "0x2737BC0", Offset = "0x2737BC0", VA = "0x2737BC0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private VirtualBone hand
			{
				[Token(Token = "0x600090E")]
				[Address(RVA = "0x2737C0C", Offset = "0x2737C0C", VA = "0x2737C0C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600090F")]
			[Address(RVA = "0x2737C58", Offset = "0x2737C58", VA = "0x2737C58", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000910")]
			[Address(RVA = "0x27383E0", Offset = "0x27383E0", VA = "0x27383E0", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000911")]
			[Address(RVA = "0x273859C", Offset = "0x273859C", VA = "0x273859C", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000912")]
			[Address(RVA = "0x27385C0", Offset = "0x27385C0", VA = "0x27385C0")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000913")]
			[Address(RVA = "0x2738860", Offset = "0x2738860", VA = "0x2738860")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6000914")]
			[Address(RVA = "0x2739AE8", Offset = "0x2739AE8", VA = "0x2739AE8", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000915")]
			[Address(RVA = "0x2739B14", Offset = "0x2739B14", VA = "0x2739B14", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000916")]
			[Address(RVA = "0x2739668", Offset = "0x2739668", VA = "0x2739668")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6000917")]
			[Address(RVA = "0x27396E4", Offset = "0x27396E4", VA = "0x27396E4")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000918")]
			[Address(RVA = "0x2739D34", Offset = "0x2739D34", VA = "0x2739D34")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6000919")]
			[Address(RVA = "0x2739D38", Offset = "0x2739D38", VA = "0x2739D38")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000166")]
		public abstract class BodyPart
		{
			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A50C", Offset = "0xE1A50C")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A51C", Offset = "0xE1A51C")]
			private float <mag>k__BackingField;

			[Token(Token = "0x400088D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4000891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x170000F5")]
			public float sqrMag
			{
				[Token(Token = "0x600091F")]
				[Address(RVA = "0x2ED68A8", Offset = "0x2ED68A8", VA = "0x2ED68A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26884", Offset = "0xE26884")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000920")]
				[Address(RVA = "0x2ED68B0", Offset = "0x2ED68B0", VA = "0x2ED68B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26894", Offset = "0xE26894")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F6")]
			public float mag
			{
				[Token(Token = "0x6000921")]
				[Address(RVA = "0x2ED68B8", Offset = "0x2ED68B8", VA = "0x2ED68B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE268A4", Offset = "0xE268A4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000922")]
				[Address(RVA = "0x2ED68C0", Offset = "0x2ED68C0", VA = "0x2ED68C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE268B4", Offset = "0xE268B4")]
				private set
				{
				}
			}

			[Token(Token = "0x600091A")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x600091B")]
			public abstract void PreSolve();

			[Token(Token = "0x600091C")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x600091D")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x600091E")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6000923")]
			[Address(RVA = "0x2ED68C8", Offset = "0x2ED68C8", VA = "0x2ED68C8")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000924")]
			[Address(RVA = "0x2ED6B88", Offset = "0x2ED6B88", VA = "0x2ED6B88")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000925")]
			[Address(RVA = "0x2ED6C1C", Offset = "0x2ED6C1C", VA = "0x2ED6C1C")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6000926")]
			[Address(RVA = "0x2ED6DEC", Offset = "0x2ED6DEC", VA = "0x2ED6DEC")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000927")]
			[Address(RVA = "0x2ED6E40", Offset = "0x2ED6E40", VA = "0x2ED6E40")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6000928")]
			[Address(RVA = "0x2ED6F78", Offset = "0x2ED6F78", VA = "0x2ED6F78")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6000929")]
			[Address(RVA = "0x2ED70B8", Offset = "0x2ED70B8", VA = "0x2ED70B8")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x600092A")]
			[Address(RVA = "0x2ED70BC", Offset = "0x2ED70BC", VA = "0x2ED70BC")]
			public void Visualize()
			{
			}

			[Token(Token = "0x600092B")]
			[Address(RVA = "0x2ED70C4", Offset = "0x2ED70C4", VA = "0x2ED70C4")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000167")]
		public class Footstep
		{
			[Token(Token = "0x4000892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4000893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x4000894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4000895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4000896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4000897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4000898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A53C", Offset = "0xE1A53C")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4000899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x400089A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x400089F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x170000F7")]
			public bool isStepping
			{
				[Token(Token = "0x600092C")]
				[Address(RVA = "0x2ED7144", Offset = "0x2ED7144", VA = "0x2ED7144")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000F8")]
			public float stepProgress
			{
				[Token(Token = "0x600092D")]
				[Address(RVA = "0x2ED7158", Offset = "0x2ED7158", VA = "0x2ED7158")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE268C4", Offset = "0xE268C4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600092E")]
				[Address(RVA = "0x2ED7160", Offset = "0x2ED7160", VA = "0x2ED7160")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE268D4", Offset = "0xE268D4")]
				private set
				{
				}
			}

			[Token(Token = "0x600092F")]
			[Address(RVA = "0x2ED7168", Offset = "0x2ED7168", VA = "0x2ED7168")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6000930")]
			[Address(RVA = "0x2ED72A0", Offset = "0x2ED72A0", VA = "0x2ED72A0")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6000931")]
			[Address(RVA = "0x2ED72E8", Offset = "0x2ED72E8", VA = "0x2ED72E8")]
			public void StepTo(Vector3 p, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6000932")]
			[Address(RVA = "0x2ED7364", Offset = "0x2ED7364", VA = "0x2ED7364")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6000933")]
			[Address(RVA = "0x2ED74D8", Offset = "0x2ED74D8", VA = "0x2ED74D8")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6000934")]
			[Address(RVA = "0x2ED7630", Offset = "0x2ED7630", VA = "0x2ED7630")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000168")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x40008A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A54C", Offset = "0xE1A54C")]
			public Transform target;

			[Token(Token = "0x40008A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A584", Offset = "0xE1A584")]
			public Transform bendGoal;

			[Token(Token = "0x40008A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A5BC", Offset = "0xE1A5BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A5BC", Offset = "0xE1A5BC")]
			public float positionWeight;

			[Token(Token = "0x40008A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A610", Offset = "0xE1A610")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A610", Offset = "0xE1A610")]
			public float rotationWeight;

			[Token(Token = "0x40008A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A664", Offset = "0xE1A664")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A664", Offset = "0xE1A664")]
			public float bendGoalWeight;

			[Token(Token = "0x40008A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A6B8", Offset = "0xE1A6B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A6B8", Offset = "0xE1A6B8")]
			public float swivelOffset;

			[Token(Token = "0x40008A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A714", Offset = "0xE1A714")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A714", Offset = "0xE1A714")]
			public float bendToTargetWeight;

			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A768", Offset = "0xE1A768")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A768", Offset = "0xE1A768")]
			public float legLengthMlp;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A7C0", Offset = "0xE1A7C0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40008AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A858", Offset = "0xE1A858")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40008B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A868", Offset = "0xE1A868")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40008B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A878", Offset = "0xE1A878")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40008B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1A888", Offset = "0xE1A888")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40008B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 footPosition;

			[Token(Token = "0x40008B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Quaternion footRotation;

			[Token(Token = "0x40008B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 bendNormal;

			[Token(Token = "0x40008B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40008B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40008B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40008B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x170000F9")]
			public Vector3 position
			{
				[Token(Token = "0x6000935")]
				[Address(RVA = "0x2ED776C", Offset = "0x2ED776C", VA = "0x2ED776C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE268E4", Offset = "0xE268E4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000936")]
				[Address(RVA = "0x2ED7778", Offset = "0x2ED7778", VA = "0x2ED7778")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE268F4", Offset = "0xE268F4")]
				private set
				{
				}
			}

			[Token(Token = "0x170000FA")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000937")]
				[Address(RVA = "0x2ED7784", Offset = "0x2ED7784", VA = "0x2ED7784")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26904", Offset = "0xE26904")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000938")]
				[Address(RVA = "0x2ED7790", Offset = "0x2ED7790", VA = "0x2ED7790")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26914", Offset = "0xE26914")]
				private set
				{
				}
			}

			[Token(Token = "0x170000FB")]
			public bool hasToes
			{
				[Token(Token = "0x6000939")]
				[Address(RVA = "0x2ED779C", Offset = "0x2ED779C", VA = "0x2ED779C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26924", Offset = "0xE26924")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600093A")]
				[Address(RVA = "0x2ED77A4", Offset = "0x2ED77A4", VA = "0x2ED77A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26934", Offset = "0xE26934")]
				private set
				{
				}
			}

			[Token(Token = "0x170000FC")]
			public VirtualBone thigh
			{
				[Token(Token = "0x600093B")]
				[Address(RVA = "0x2ED77B0", Offset = "0x2ED77B0", VA = "0x2ED77B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FD")]
			private VirtualBone calf
			{
				[Token(Token = "0x600093C")]
				[Address(RVA = "0x2ED77E4", Offset = "0x2ED77E4", VA = "0x2ED77E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private VirtualBone foot
			{
				[Token(Token = "0x600093D")]
				[Address(RVA = "0x2ED781C", Offset = "0x2ED781C", VA = "0x2ED781C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FF")]
			private VirtualBone toes
			{
				[Token(Token = "0x600093E")]
				[Address(RVA = "0x2ED7854", Offset = "0x2ED7854", VA = "0x2ED7854")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x600093F")]
				[Address(RVA = "0x2ED788C", Offset = "0x2ED788C", VA = "0x2ED788C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000101")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6000940")]
				[Address(RVA = "0x2ED78CC", Offset = "0x2ED78CC", VA = "0x2ED78CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26944", Offset = "0xE26944")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000941")]
				[Address(RVA = "0x2ED78D8", Offset = "0x2ED78D8", VA = "0x2ED78D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26954", Offset = "0xE26954")]
				private set
				{
				}
			}

			[Token(Token = "0x6000942")]
			[Address(RVA = "0x2ED78E4", Offset = "0x2ED78E4", VA = "0x2ED78E4", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000943")]
			[Address(RVA = "0x2ED7FA0", Offset = "0x2ED7FA0", VA = "0x2ED7FA0", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000944")]
			[Address(RVA = "0x2ED84D8", Offset = "0x2ED84D8", VA = "0x2ED84D8", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000945")]
			[Address(RVA = "0x2ED8488", Offset = "0x2ED8488", VA = "0x2ED8488")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x6000946")]
			[Address(RVA = "0x2ED8318", Offset = "0x2ED8318", VA = "0x2ED8318")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x6000947")]
			[Address(RVA = "0x2ED88C0", Offset = "0x2ED88C0", VA = "0x2ED88C0")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x6000948")]
			[Address(RVA = "0x2ED8CCC", Offset = "0x2ED8CCC", VA = "0x2ED8CCC")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0x2ED93A8", Offset = "0x2ED93A8", VA = "0x2ED93A8", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x600094A")]
			[Address(RVA = "0x2ED95C4", Offset = "0x2ED95C4", VA = "0x2ED95C4", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x600094B")]
			[Address(RVA = "0x2ED9610", Offset = "0x2ED9610", VA = "0x2ED9610")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000169")]
		public class Locomotion
		{
			[Token(Token = "0x40008BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1A898", Offset = "0xE1A898")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A898", Offset = "0xE1A898")]
			public float weight;

			[Token(Token = "0x40008BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A8EC", Offset = "0xE1A8EC")]
			public float footDistance;

			[Token(Token = "0x40008BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A924", Offset = "0xE1A924")]
			public float stepThreshold;

			[Token(Token = "0x40008BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A95C", Offset = "0xE1A95C")]
			public float angleThreshold;

			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A994", Offset = "0xE1A994")]
			public float comAngleMlp;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A9CC", Offset = "0xE1A9CC")]
			public float maxVelocity;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AA04", Offset = "0xE1AA04")]
			public float velocityFactor;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AA3C", Offset = "0xE1AA3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1AA3C", Offset = "0xE1AA3C")]
			public float maxLegStretch;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AA94", Offset = "0xE1AA94")]
			public float rootSpeed;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AACC", Offset = "0xE1AACC")]
			public float stepSpeed;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AB04", Offset = "0xE1AB04")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AB3C", Offset = "0xE1AB3C")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AB74", Offset = "0xE1AB74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1AB74", Offset = "0xE1AB74")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1ABCC", Offset = "0xE1ABCC")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AC04", Offset = "0xE1AC04")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AC3C", Offset = "0xE1AC3C")]
			public Vector3 offset;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1ACB4", Offset = "0xE1ACB4")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1ACEC", Offset = "0xE1ACEC")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1AD24", Offset = "0xE1AD24")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x17000102")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x600094C")]
				[Address(RVA = "0x2ED96EC", Offset = "0x2ED96EC", VA = "0x2ED96EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26964", Offset = "0xE26964")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600094D")]
				[Address(RVA = "0x2ED96F8", Offset = "0x2ED96F8", VA = "0x2ED96F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26974", Offset = "0xE26974")]
				private set
				{
				}
			}

			[Token(Token = "0x17000103")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6000953")]
				[Address(RVA = "0x2EDB19C", Offset = "0x2EDB19C", VA = "0x2EDB19C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000104")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x6000954")]
				[Address(RVA = "0x2EDB1DC", Offset = "0x2EDB1DC", VA = "0x2EDB1DC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000105")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x6000955")]
				[Address(RVA = "0x2EDB220", Offset = "0x2EDB220", VA = "0x2EDB220")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x17000106")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x6000956")]
				[Address(RVA = "0x2EDB260", Offset = "0x2EDB260", VA = "0x2EDB260")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x600094E")]
			[Address(RVA = "0x2ED9704", Offset = "0x2ED9704", VA = "0x2ED9704")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x600094F")]
			[Address(RVA = "0x2ED99C4", Offset = "0x2ED99C4", VA = "0x2ED99C4")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6000950")]
			[Address(RVA = "0x2ED9B94", Offset = "0x2ED9B94", VA = "0x2ED9B94")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6000951")]
			[Address(RVA = "0x2ED9DDC", Offset = "0x2ED9DDC", VA = "0x2ED9DDC")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6000952")]
			[Address(RVA = "0x2ED9EA0", Offset = "0x2ED9EA0", VA = "0x2ED9EA0")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x6000957")]
			[Address(RVA = "0x2EDAF14", Offset = "0x2EDAF14", VA = "0x2EDAF14")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x6000958")]
			[Address(RVA = "0x2EDB04C", Offset = "0x2EDB04C", VA = "0x2EDB04C")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x6000959")]
			[Address(RVA = "0x2EDB0D0", Offset = "0x2EDB0D0", VA = "0x2EDB0D0")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x600095A")]
			[Address(RVA = "0x2EDB2A4", Offset = "0x2EDB2A4", VA = "0x2EDB2A4")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016A")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AD34", Offset = "0xE1AD34")]
			public Transform headTarget;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AD6C", Offset = "0xE1AD6C")]
			public Transform pelvisTarget;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1ADA4", Offset = "0xE1ADA4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1ADA4", Offset = "0xE1ADA4")]
			public float positionWeight;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1ADF8", Offset = "0xE1ADF8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1ADF8", Offset = "0xE1ADF8")]
			public float rotationWeight;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1AE4C", Offset = "0xE1AE4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AE4C", Offset = "0xE1AE4C")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AEA0", Offset = "0xE1AEA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1AEA0", Offset = "0xE1AEA0")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AEF4", Offset = "0xE1AEF4")]
			public Transform chestGoal;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AF2C", Offset = "0xE1AF2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1AF2C", Offset = "0xE1AF2C")]
			public float chestGoalWeight;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AF80", Offset = "0xE1AF80")]
			public float minHeadHeight;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1AFB8", Offset = "0xE1AFB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1AFB8", Offset = "0xE1AFB8")]
			public float bodyPosStiffness;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B00C", Offset = "0xE1B00C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B00C", Offset = "0xE1B00C")]
			public float bodyRotStiffness;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE1B060", Offset = "0xE1B060")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B060", Offset = "0xE1B060")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B060", Offset = "0xE1B060")]
			public float neckStiffness;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B0D8", Offset = "0xE1B0D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B0D8", Offset = "0xE1B0D8")]
			public float rotateChestByHands;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B12C", Offset = "0xE1B12C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B12C", Offset = "0xE1B12C")]
			public float chestClampWeight;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B180", Offset = "0xE1B180")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B180", Offset = "0xE1B180")]
			public float headClampWeight;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B1D4", Offset = "0xE1B1D4")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B20C", Offset = "0xE1B20C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B20C", Offset = "0xE1B20C")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B260", Offset = "0xE1B260")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B260", Offset = "0xE1B260")]
			public float maxRootAngle;

			[NonSerialized]
			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1B398", Offset = "0xE1B398")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			private Quaternion headRotation;

			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private Quaternion anchorRelativeToHead;

			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x40008FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x40008FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x40008FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
			private int pelvisIndex;

			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int spineIndex;

			[Token(Token = "0x4000902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int chestIndex;

			[Token(Token = "0x4000903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int neckIndex;

			[Token(Token = "0x4000904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int headIndex;

			[Token(Token = "0x4000905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private float length;

			[Token(Token = "0x4000906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private bool hasChest;

			[Token(Token = "0x4000907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
			private bool hasNeck;

			[Token(Token = "0x4000908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
			private bool hasLegs;

			[Token(Token = "0x4000909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private float headHeight;

			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float sizeMlp;

			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private Vector3 chestForward;

			[Token(Token = "0x17000107")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x600095B")]
				[Address(RVA = "0x2EDAE94", Offset = "0x2EDAE94", VA = "0x2EDAE94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000108")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x600095C")]
				[Address(RVA = "0x2EDB3B4", Offset = "0x2EDB3B4", VA = "0x2EDB3B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000109")]
			public VirtualBone chest
			{
				[Token(Token = "0x600095D")]
				[Address(RVA = "0x2EDB3F4", Offset = "0x2EDB3F4", VA = "0x2EDB3F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010A")]
			private VirtualBone neck
			{
				[Token(Token = "0x600095E")]
				[Address(RVA = "0x2EDB448", Offset = "0x2EDB448", VA = "0x2EDB448")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			public VirtualBone head
			{
				[Token(Token = "0x600095F")]
				[Address(RVA = "0x2EDAED4", Offset = "0x2EDAED4", VA = "0x2EDAED4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010C")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6000960")]
				[Address(RVA = "0x2EDB488", Offset = "0x2EDB488", VA = "0x2EDB488")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26984", Offset = "0xE26984")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000961")]
				[Address(RVA = "0x2EDB49C", Offset = "0x2EDB49C", VA = "0x2EDB49C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26994", Offset = "0xE26994")]
				private set
				{
				}
			}

			[Token(Token = "0x6000962")]
			[Address(RVA = "0x2EDB4B0", Offset = "0x2EDB4B0", VA = "0x2EDB4B0", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000963")]
			[Address(RVA = "0x2EDBEE8", Offset = "0x2EDBEE8", VA = "0x2EDBEE8", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000964")]
			[Address(RVA = "0x2EDC0F4", Offset = "0x2EDC0F4", VA = "0x2EDC0F4", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000965")]
			[Address(RVA = "0x2EDC4DC", Offset = "0x2EDC4DC", VA = "0x2EDC4DC")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x6000966")]
			[Address(RVA = "0x2EDC910", Offset = "0x2EDC910", VA = "0x2EDC910")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x6000967")]
			[Address(RVA = "0x2EDCFC0", Offset = "0x2EDCFC0", VA = "0x2EDCFC0")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp)
			{
			}

			[Token(Token = "0x6000968")]
			[Address(RVA = "0x2EDD5EC", Offset = "0x2EDD5EC", VA = "0x2EDD5EC")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x6000969")]
			[Address(RVA = "0x2EDDBCC", Offset = "0x2EDDBCC", VA = "0x2EDDBCC", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x600096A")]
			[Address(RVA = "0x2EDDDA8", Offset = "0x2EDDDA8", VA = "0x2EDDDA8", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x600096B")]
			[Address(RVA = "0x2EDC674", Offset = "0x2EDC674", VA = "0x2EDC674")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x600096C")]
			[Address(RVA = "0x2EDD338", Offset = "0x2EDD338", VA = "0x2EDD338")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x600096D")]
			[Address(RVA = "0x2EDCC90", Offset = "0x2EDCC90", VA = "0x2EDCC90")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x600096E")]
			[Address(RVA = "0x2EDDE3C", Offset = "0x2EDDE3C", VA = "0x2EDDE3C")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600096F")]
			[Address(RVA = "0x2EDD418", Offset = "0x2EDD418", VA = "0x2EDD418")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000970")]
			[Address(RVA = "0x2EDD0E4", Offset = "0x2EDD0E4", VA = "0x2EDD0E4")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000971")]
			[Address(RVA = "0x2EDE030", Offset = "0x2EDE030", VA = "0x2EDE030")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016B")]
		public enum PositionOffset
		{
			[Token(Token = "0x400090D")]
			Pelvis,
			[Token(Token = "0x400090E")]
			Chest,
			[Token(Token = "0x400090F")]
			Head,
			[Token(Token = "0x4000910")]
			LeftHand,
			[Token(Token = "0x4000911")]
			RightHand,
			[Token(Token = "0x4000912")]
			LeftFoot,
			[Token(Token = "0x4000913")]
			RightFoot,
			[Token(Token = "0x4000914")]
			LeftHeel,
			[Token(Token = "0x4000915")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x200016C")]
		public enum RotationOffset
		{
			[Token(Token = "0x4000917")]
			Pelvis,
			[Token(Token = "0x4000918")]
			Chest,
			[Token(Token = "0x4000919")]
			Head
		}

		[Serializable]
		[Token(Token = "0x200016D")]
		public class VirtualBone
		{
			[Token(Token = "0x400091A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x400091B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x400091C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x400091D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x400091E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400091F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x4000920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6000972")]
			[Address(RVA = "0x2ED7F04", Offset = "0x2ED7F04", VA = "0x2ED7F04")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000973")]
			[Address(RVA = "0x2ED7F80", Offset = "0x2ED7F80", VA = "0x2ED7F80")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000974")]
			[Address(RVA = "0x2EDE1B8", Offset = "0x2EDE1B8", VA = "0x2EDE1B8")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000975")]
			[Address(RVA = "0x2ED6998", Offset = "0x2ED6998", VA = "0x2ED6998")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x6000976")]
			[Address(RVA = "0x2ED6CC4", Offset = "0x2ED6CC4", VA = "0x2ED6CC4")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000977")]
			[Address(RVA = "0x2EDE33C", Offset = "0x2EDE33C", VA = "0x2EDE33C")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000978")]
			[Address(RVA = "0x2EDE49C", Offset = "0x2EDE49C", VA = "0x2EDE49C")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000979")]
			[Address(RVA = "0x2EDE5D8", Offset = "0x2EDE5D8", VA = "0x2EDE5D8")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x600097A")]
			[Address(RVA = "0x2ED8FA4", Offset = "0x2ED8FA4", VA = "0x2ED8FA4")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x600097B")]
			[Address(RVA = "0x2EDE690", Offset = "0x2EDE690", VA = "0x2EDE690")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600097C")]
			[Address(RVA = "0x2EDD85C", Offset = "0x2EDD85C", VA = "0x2EDD85C")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x600097D")]
			[Address(RVA = "0x2EDE7F8", Offset = "0x2EDE7F8", VA = "0x2EDE7F8")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600097E")]
			[Address(RVA = "0x2EDE868", Offset = "0x2EDE868", VA = "0x2EDE868")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19F6C", Offset = "0xE19F6C")]
		public bool plantFeet;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE19FA4", Offset = "0xE19FA4")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19FB4", Offset = "0xE19FB4")]
		public Spine spine;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE19FEC", Offset = "0xE19FEC")]
		public Arm leftArm;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A024", Offset = "0xE1A024")]
		public Arm rightArm;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A05C", Offset = "0xE1A05C")]
		public Leg leftLeg;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A094", Offset = "0xE1A094")]
		public Leg rightLeg;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1A0CC", Offset = "0xE1A0CC")]
		public Locomotion locomotion;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Leg[] legs;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Arm[] arms;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 headPosition;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 debugPos2;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 debugPos3;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 debugPos4;

		[Token(Token = "0x170000EE")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x3186B18", Offset = "0x3186B18", VA = "0x3186B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26824", Offset = "0xE26824")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x3186B20", Offset = "0x3186B20", VA = "0x3186B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26834", Offset = "0xE26834")]
			private set
			{
			}
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x3183468", Offset = "0x3183468", VA = "0x3183468")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x3183924", Offset = "0x3183924", VA = "0x3183924")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x31837B0", Offset = "0x31837B0", VA = "0x31837B0")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x3184084", Offset = "0x3184084", VA = "0x3184084")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x31841C8", Offset = "0x31841C8", VA = "0x31841C8")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x31841F8", Offset = "0x31841F8", VA = "0x31841F8")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x31842A8", Offset = "0x31842A8", VA = "0x31842A8")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x3184390", Offset = "0x3184390", VA = "0x3184390")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x3184B48", Offset = "0x3184B48", VA = "0x3184B48", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x3184CB8", Offset = "0x3184CB8", VA = "0x3184CB8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x3184E58", Offset = "0x3184E58", VA = "0x3184E58", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x3184ED4", Offset = "0x3184ED4", VA = "0x3184ED4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x3184F50", Offset = "0x3184F50", VA = "0x3184F50", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x3185134", Offset = "0x3185134", VA = "0x3185134")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x3183B58", Offset = "0x3183B58", VA = "0x3183B58")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x3183C48", Offset = "0x3183C48", VA = "0x3183C48")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x3183F64", Offset = "0x3183F64", VA = "0x3183F64")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x3184484", Offset = "0x3184484", VA = "0x3184484")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x31852F4", Offset = "0x31852F4", VA = "0x31852F4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x318533C", Offset = "0x318533C", VA = "0x318533C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x31863A0", Offset = "0x31863A0", VA = "0x31863A0")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x31845E8", Offset = "0x31845E8", VA = "0x31845E8")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x31853A8", Offset = "0x31853A8", VA = "0x31853A8")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x31865F8", Offset = "0x31865F8", VA = "0x31865F8")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x3186640", Offset = "0x3186640", VA = "0x3186640")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x3186250", Offset = "0x3186250", VA = "0x3186250")]
		private void Write()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x3186684", Offset = "0x3186684", VA = "0x3186684")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x3186B28", Offset = "0x3186B28", VA = "0x3186B28")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B3A8", Offset = "0xE1B3A8")]
		public Transform parent;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B3E0", Offset = "0xE1B3E0")]
		public Transform child;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B418", Offset = "0xE1B418")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B418", Offset = "0xE1B418")]
		public float weight;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B46C", Offset = "0xE1B46C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B46C", Offset = "0xE1B46C")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B4C0", Offset = "0xE1B4C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1B4C0", Offset = "0xE1B4C0")]
		public float twistAngleOffset;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x27B50EC", Offset = "0x27B50EC", VA = "0x27B50EC")]
		public void Relax()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x27B5408", Offset = "0x27B5408", VA = "0x27B5408")]
		private void Start()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x27B581C", Offset = "0x27B581C", VA = "0x27B581C")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x27B58A0", Offset = "0x27B58A0", VA = "0x27B58A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x27B5924", Offset = "0x27B5924", VA = "0x27B5924")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x27B5A60", Offset = "0x27B5A60", VA = "0x27B5A60")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class InteractionEffector
	{
		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1B51C", Offset = "0xE1B51C")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1B52C", Offset = "0xE1B52C")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1B53C", Offset = "0xE1B53C")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float resetTimer;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool positionWeightUsed;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool rotationWeightUsed;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool pullUsed;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		private bool reachUsed;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool pushUsed;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool pushParentUsed;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pickedUp;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool defaults;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform target;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<bool> triggered;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool started;

		[Token(Token = "0x1700010D")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x2E29888", Offset = "0x2E29888", VA = "0x2E29888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE269A4", Offset = "0xE269A4")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x2E29890", Offset = "0x2E29890", VA = "0x2E29890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE269B4", Offset = "0xE269B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public bool isPaused
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x2E29898", Offset = "0x2E29898", VA = "0x2E29898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE269C4", Offset = "0xE269C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x2E298A0", Offset = "0x2E298A0", VA = "0x2E298A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE269D4", Offset = "0xE269D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x2E298AC", Offset = "0x2E298AC", VA = "0x2E298AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE269E4", Offset = "0xE269E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x2E298B4", Offset = "0x2E298B4", VA = "0x2E298B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE269F4", Offset = "0xE269F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public bool inInteraction
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x2E298BC", Offset = "0x2E298BC", VA = "0x2E298BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public float progress
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x2E2BCA4", Offset = "0x2E2BCA4", VA = "0x2E2BCA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x2E29928", Offset = "0x2E29928", VA = "0x2E29928")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x2E299C0", Offset = "0x2E299C0", VA = "0x2E299C0")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x2E29A8C", Offset = "0x2E29A8C", VA = "0x2E29A8C")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x2E29BCC", Offset = "0x2E29BCC", VA = "0x2E29BCC")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x2E29EA4", Offset = "0x2E29EA4", VA = "0x2E29EA4")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x2E29F60", Offset = "0x2E29F60", VA = "0x2E29F60")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x2E29FB8", Offset = "0x2E29FB8", VA = "0x2E29FB8")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x2E2A9F0", Offset = "0x2E2A9F0", VA = "0x2E2A9F0")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x2E2B4A0", Offset = "0x2E2B4A0", VA = "0x2E2B4A0")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x2E2B6E4", Offset = "0x2E2B6E4", VA = "0x2E2B6E4")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x2E2BB34", Offset = "0x2E2BB34", VA = "0x2E2BB34")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x2E2BE04", Offset = "0x2E2BE04", VA = "0x2E2BE04")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class InteractionLookAt
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B54C", Offset = "0xE1B54C")]
		public LookAtIK ik;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B584", Offset = "0xE1B584")]
		public float lerpSpeed;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B5BC", Offset = "0xE1B5BC")]
		public float weightSpeed;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x2E2BFF4", Offset = "0x2E2BFF4", VA = "0x2E2BFF4")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x2E2C11C", Offset = "0x2E2C11C", VA = "0x2E2C11C")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x2E2C1C0", Offset = "0x2E2C1C0", VA = "0x2E2C1C0")]
		public void Update()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x2E2C808", Offset = "0x2E2C808", VA = "0x2E2C808")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x2E2C8FC", Offset = "0x2E2C8FC", VA = "0x2E2C8FC")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x2E2C9C4", Offset = "0x2E2C9C4", VA = "0x2E2C9C4")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02E54", Offset = "0xE02E54")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02E54", Offset = "0xE02E54")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000172")]
		public class InteractionEvent
		{
			[Token(Token = "0x400095E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B6CC", Offset = "0xE1B6CC")]
			public float time;

			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B704", Offset = "0xE1B704")]
			public bool pause;

			[Token(Token = "0x4000960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B73C", Offset = "0xE1B73C")]
			public bool pickUp;

			[Token(Token = "0x4000961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B774", Offset = "0xE1B774")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B7AC", Offset = "0xE1B7AC")]
			public Message[] messages;

			[Token(Token = "0x4000963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B7E4", Offset = "0xE1B7E4")]
			public UnityEvent unityEvent;

			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x2EDF064", Offset = "0x2EDF064", VA = "0x2EDF064")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x2EDF238", Offset = "0x2EDF238", VA = "0x2EDF238")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000173")]
		public class Message
		{
			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B81C", Offset = "0xE1B81C")]
			public string function;

			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B854", Offset = "0xE1B854")]
			public GameObject recipient;

			[Token(Token = "0x4000966")]
			private const string empty = "";

			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x2EDF134", Offset = "0x2EDF134", VA = "0x2EDF134")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x2EDF240", Offset = "0x2EDF240", VA = "0x2EDF240")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000174")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B88C", Offset = "0xE1B88C")]
			public Animator animator;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B8C4", Offset = "0xE1B8C4")]
			public Animation animation;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B8FC", Offset = "0xE1B8FC")]
			public string animationState;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B934", Offset = "0xE1B934")]
			public float crossfadeTime;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B96C", Offset = "0xE1B96C")]
			public int layer;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B9A4", Offset = "0xE1B9A4")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400096D")]
			private const string empty = "";

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x2EDEDD0", Offset = "0x2EDEDD0", VA = "0x2EDEDD0")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x2EDEEC0", Offset = "0x2EDEEC0", VA = "0x2EDEEC0")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x2EDEF74", Offset = "0x2EDEF74", VA = "0x2EDEF74")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x2EDF050", Offset = "0x2EDF050", VA = "0x2EDF050")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000175")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x2000176")]
			public enum Type
			{
				[Token(Token = "0x4000971")]
				PositionWeight,
				[Token(Token = "0x4000972")]
				RotationWeight,
				[Token(Token = "0x4000973")]
				PositionOffsetX,
				[Token(Token = "0x4000974")]
				PositionOffsetY,
				[Token(Token = "0x4000975")]
				PositionOffsetZ,
				[Token(Token = "0x4000976")]
				Pull,
				[Token(Token = "0x4000977")]
				Reach,
				[Token(Token = "0x4000978")]
				RotateBoneWeight,
				[Token(Token = "0x4000979")]
				Push,
				[Token(Token = "0x400097A")]
				PushParent,
				[Token(Token = "0x400097B")]
				PoserWeight
			}

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B9DC", Offset = "0xE1B9DC")]
			public Type type;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BA14", Offset = "0xE1BA14")]
			public AnimationCurve curve;

			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x2EDF284", Offset = "0x2EDF284", VA = "0x2EDF284")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x2EDF2B0", Offset = "0x2EDF2B0", VA = "0x2EDF2B0")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000177")]
		public class Multiplier
		{
			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BA4C", Offset = "0xE1BA4C")]
			public WeightCurve.Type curve;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BA84", Offset = "0xE1BA84")]
			public float multiplier;

			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BABC", Offset = "0xE1BABC")]
			public WeightCurve.Type result;

			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x2EDF248", Offset = "0x2EDF248", VA = "0x2EDF248")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x2EDF2A0", Offset = "0x2EDF2A0", VA = "0x2EDF2A0")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B604", Offset = "0xE1B604")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B63C", Offset = "0xE1B63C")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1B674", Offset = "0xE1B674")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1B6AC", Offset = "0xE1B6AC")]
		private float <length>k__BackingField;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1B6BC", Offset = "0xE1B6BC")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000112")]
		public float length
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x2E2CB88", Offset = "0x2E2CB88", VA = "0x2E2CB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26B54", Offset = "0xE26B54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x2E2CB90", Offset = "0x2E2CB90", VA = "0x2E2CB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26B64", Offset = "0xE26B64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x2E2CB98", Offset = "0x2E2CB98", VA = "0x2E2CB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26B74", Offset = "0xE26B74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x2E2CBA0", Offset = "0x2E2CBA0", VA = "0x2E2CBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26B84", Offset = "0xE26B84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x2E2CD70", Offset = "0x2E2CD70", VA = "0x2E2CD70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public Transform targetsRoot
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x2E2BCE0", Offset = "0x2E2BCE0", VA = "0x2E2BCE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x2E2C9D8", Offset = "0x2E2C9D8", VA = "0x2E2C9D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26A04", Offset = "0xE26A04")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x2E2CA20", Offset = "0x2E2CA20", VA = "0x2E2CA20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26A3C", Offset = "0xE26A3C")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x2E2CA68", Offset = "0x2E2CA68", VA = "0x2E2CA68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26A74", Offset = "0xE26A74")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x2E2CAB0", Offset = "0x2E2CAB0", VA = "0x2E2CAB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26AAC", Offset = "0xE26AAC")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x2E2CAF8", Offset = "0x2E2CAF8", VA = "0x2E2CAF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26AE4", Offset = "0xE26AE4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x2E2CB40", Offset = "0x2E2CB40", VA = "0x2E2CB40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26B1C", Offset = "0xE26B1C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x2E2CBA8", Offset = "0x2E2CBA8", VA = "0x2E2CBA8")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x2E2CDFC", Offset = "0x2E2CDFC", VA = "0x2E2CDFC")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x2E2A560", Offset = "0x2E2A560", VA = "0x2E2A560")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x2E2CF88", Offset = "0x2E2CF88", VA = "0x2E2CF88")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x2E2A40C", Offset = "0x2E2A40C", VA = "0x2E2A40C")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x2E2A558", Offset = "0x2E2A558", VA = "0x2E2A558")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x2E2B044", Offset = "0x2E2B044", VA = "0x2E2B044")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x2E2B914", Offset = "0x2E2B914", VA = "0x2E2B914")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x2E2D518", Offset = "0x2E2D518", VA = "0x2E2D518")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x2E2D070", Offset = "0x2E2D070", VA = "0x2E2D070")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x2E2CF90", Offset = "0x2E2CF90", VA = "0x2E2CF90")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x2E2D4B0", Offset = "0x2E2D4B0", VA = "0x2E2D4B0")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x2E2D51C", Offset = "0x2E2D51C", VA = "0x2E2D51C")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x2E2D584", Offset = "0x2E2D584", VA = "0x2E2D584")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26B94", Offset = "0xE26B94")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x2E2D5CC", Offset = "0x2E2D5CC", VA = "0x2E2D5CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26BCC", Offset = "0xE26BCC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x2E2D614", Offset = "0x2E2D614", VA = "0x2E2D614")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02EB4", Offset = "0xE02EB4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02EB4", Offset = "0xE02EB4")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x2000179")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x200017A")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BAF4", Offset = "0xE1BAF4")]
		public string targetTag;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BB2C", Offset = "0xE1BB2C")]
		public float fadeInTime;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BB64", Offset = "0xE1BB64")]
		public float speed;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BB9C", Offset = "0xE1BB9C")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE1BBD4", Offset = "0xE1BBD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BBD4", Offset = "0xE1BBD4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1BBD4", Offset = "0xE1BBD4")]
		public Collider characterCollider;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE1BC58", Offset = "0xE1BC58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BC58", Offset = "0xE1BC58")]
		public Transform FPSCamera;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BCB8", Offset = "0xE1BCB8")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BCF0", Offset = "0xE1BCF0")]
		public float camRaycastDistance;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1BD28", Offset = "0xE1BD28")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE1BD38", Offset = "0xE1BD38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BD38", Offset = "0xE1BD38")]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BD98", Offset = "0xE1BD98")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000116")]
		public bool inInteraction
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x2E29760", Offset = "0x2E29760", VA = "0x2E29760")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x2E2F2E0", Offset = "0x2E2F2E0", VA = "0x2E2F2E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x2E2F2E8", Offset = "0x2E2F2E8", VA = "0x2E2F2E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x2E2F2F0", Offset = "0x2E2F2F0", VA = "0x2E2F2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26D54", Offset = "0xE26D54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x2E2F2F8", Offset = "0x2E2F2F8", VA = "0x2E2F2F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26D64", Offset = "0xE26D64")]
			private set
			{
			}
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x2E2D67C", Offset = "0x2E2D67C", VA = "0x2E2D67C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26C04", Offset = "0xE26C04")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x2E2D6C4", Offset = "0x2E2D6C4", VA = "0x2E2D6C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26C3C", Offset = "0xE26C3C")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x2E2D70C", Offset = "0x2E2D70C", VA = "0x2E2D70C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26C74", Offset = "0xE26C74")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x2E2D754", Offset = "0x2E2D754", VA = "0x2E2D754")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26CAC", Offset = "0xE26CAC")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x2E2D79C", Offset = "0x2E2D79C", VA = "0x2E2D79C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26CE4", Offset = "0xE26CE4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x2E2D7E4", Offset = "0x2E2D7E4", VA = "0x2E2D7E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26D1C", Offset = "0xE26D1C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x2E2D924", Offset = "0x2E2D924", VA = "0x2E2D924")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x2E2D9F0", Offset = "0x2E2D9F0", VA = "0x2E2D9F0")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x2E2DABC", Offset = "0x2E2DABC", VA = "0x2E2DABC")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x2E2DB68", Offset = "0x2E2DB68", VA = "0x2E2DB68")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x2E28E40", Offset = "0x2E28E40", VA = "0x2E28E40")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x2E2DC60", Offset = "0x2E2DC60", VA = "0x2E2DC60")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x2E2DCF0", Offset = "0x2E2DCF0", VA = "0x2E2DCF0")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x2E2DD80", Offset = "0x2E2DD80", VA = "0x2E2DD80")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x2E2DE10", Offset = "0x2E2DE10", VA = "0x2E2DE10")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x2E2980C", Offset = "0x2E2980C", VA = "0x2E2980C")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x2E2DE84", Offset = "0x2E2DE84", VA = "0x2E2DE84")]
		public void StopAll()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x2E2DEEC", Offset = "0x2E2DEEC", VA = "0x2E2DEEC")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x2E2DF78", Offset = "0x2E2DF78", VA = "0x2E2DF78")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x2E2E02C", Offset = "0x2E2E02C", VA = "0x2E2E02C")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x2E2E110", Offset = "0x2E2E110", VA = "0x2E2E110")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x2E2E3E8", Offset = "0x2E2E3E8", VA = "0x2E2E3E8")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x2E2E5E0", Offset = "0x2E2E5E0", VA = "0x2E2E5E0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x2E2E884", Offset = "0x2E2E884", VA = "0x2E2E884")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x2E2EB5C", Offset = "0x2E2EB5C", VA = "0x2E2EB5C")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x2E2EBA0", Offset = "0x2E2EBA0", VA = "0x2E2EBA0")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x2E2EC18", Offset = "0x2E2EC18", VA = "0x2E2EC18")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x2E2ED4C", Offset = "0x2E2ED4C", VA = "0x2E2ED4C")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x2E2EEF0", Offset = "0x2E2EEF0", VA = "0x2E2EEF0")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x2E2F194", Offset = "0x2E2F194", VA = "0x2E2F194")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x2E2E998", Offset = "0x2E2E998", VA = "0x2E2E998")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x2E2F300", Offset = "0x2E2F300", VA = "0x2E2F300")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x2E2FB28", Offset = "0x2E2FB28", VA = "0x2E2FB28")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x2E2FB48", Offset = "0x2E2FB48", VA = "0x2E2FB48")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x2E2FB64", Offset = "0x2E2FB64", VA = "0x2E2FB64")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x2E2FB80", Offset = "0x2E2FB80", VA = "0x2E2FB80")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x2E2FBE0", Offset = "0x2E2FBE0", VA = "0x2E2FBE0")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x2E2FD1C", Offset = "0x2E2FD1C", VA = "0x2E2FD1C")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x2E2FE2C", Offset = "0x2E2FE2C", VA = "0x2E2FE2C")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x2E301D0", Offset = "0x2E301D0", VA = "0x2E301D0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x2E302FC", Offset = "0x2E302FC", VA = "0x2E302FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x2E3058C", Offset = "0x2E3058C", VA = "0x2E3058C")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x2E2F874", Offset = "0x2E2F874", VA = "0x2E2F874")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x2E306C8", Offset = "0x2E306C8", VA = "0x2E306C8")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x2E307F0", Offset = "0x2E307F0", VA = "0x2E307F0")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x2E30894", Offset = "0x2E30894", VA = "0x2E30894")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x2E30978", Offset = "0x2E30978", VA = "0x2E30978")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x2E30990", Offset = "0x2E30990", VA = "0x2E30990")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x2E2D82C", Offset = "0x2E2D82C", VA = "0x2E2D82C")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x2E2E2B8", Offset = "0x2E2E2B8", VA = "0x2E2E2B8")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x2E30D8C", Offset = "0x2E30D8C", VA = "0x2E30D8C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26D74", Offset = "0xE26D74")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x2E30DD4", Offset = "0x2E30DD4", VA = "0x2E30DD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26DAC", Offset = "0xE26DAC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x2E30E1C", Offset = "0x2E30E1C", VA = "0x2E30E1C")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02F14", Offset = "0xE02F14")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02F14", Offset = "0xE02F14")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200017C")]
		public class Multiplier
		{
			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BF90", Offset = "0xE1BF90")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BFC8", Offset = "0xE1BFC8")]
			public float multiplier;

			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x2EDF924", Offset = "0x2EDF924", VA = "0x2EDF924")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BDD0", Offset = "0xE1BDD0")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BE08", Offset = "0xE1BE08")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BE40", Offset = "0xE1BE40")]
		public float interactionSpeedMlp;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BE78", Offset = "0xE1BE78")]
		public Transform pivot;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BEB0", Offset = "0xE1BEB0")]
		public Vector3 twistAxis;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BEE8", Offset = "0xE1BEE8")]
		public float twistWeight;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BF20", Offset = "0xE1BF20")]
		public float swingWeight;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1BF58", Offset = "0xE1BF58")]
		public bool rotateOnce;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x2E31604", Offset = "0x2E31604", VA = "0x2E31604")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26DE4", Offset = "0xE26DE4")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x2E3164C", Offset = "0x2E3164C", VA = "0x2E3164C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26E1C", Offset = "0xE26E1C")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x2E31694", Offset = "0x2E31694", VA = "0x2E31694")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26E54", Offset = "0xE26E54")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x2E316DC", Offset = "0x2E316DC", VA = "0x2E316DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26E8C", Offset = "0xE26E8C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x2E31724", Offset = "0x2E31724", VA = "0x2E31724")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26EC4", Offset = "0xE26EC4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x2E3176C", Offset = "0x2E3176C", VA = "0x2E3176C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26EFC", Offset = "0xE26EFC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x2E2D000", Offset = "0x2E2D000", VA = "0x2E2D000")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x2E2BD6C", Offset = "0x2E2BD6C", VA = "0x2E2BD6C")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x2E2A614", Offset = "0x2E2A614", VA = "0x2E2A614")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x2E317B4", Offset = "0x2E317B4", VA = "0x2E317B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26F34", Offset = "0xE26F34")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x2E317FC", Offset = "0x2E317FC", VA = "0x2E317FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26F6C", Offset = "0xE26F6C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x2E31844", Offset = "0x2E31844", VA = "0x2E31844")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE02F74", Offset = "0xE02F74")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE02F74", Offset = "0xE02F74")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200017E")]
		public class CharacterPosition
		{
			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C038", Offset = "0xE1C038")]
			public bool use;

			[Token(Token = "0x40009A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C070", Offset = "0xE1C070")]
			public Vector2 offset;

			[Token(Token = "0x40009A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C0A8", Offset = "0xE1C0A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C0A8", Offset = "0xE1C0A8")]
			public float angleOffset;

			[Token(Token = "0x40009A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C104", Offset = "0xE1C104")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C104", Offset = "0xE1C104")]
			public float maxAngle;

			[Token(Token = "0x40009A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C15C", Offset = "0xE1C15C")]
			public float radius;

			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C194", Offset = "0xE1C194")]
			public bool orbit;

			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C1CC", Offset = "0xE1C1CC")]
			public bool fixYAxis;

			[Token(Token = "0x17000119")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6000A1C")]
				[Address(RVA = "0x2EDFC94", Offset = "0x2EDFC94", VA = "0x2EDFC94")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700011A")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6000A1D")]
				[Address(RVA = "0x2EDFCA0", Offset = "0x2EDFCA0", VA = "0x2EDFCA0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x2EDFD28", Offset = "0x2EDFD28", VA = "0x2EDFD28")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x2EE016C", Offset = "0x2EE016C", VA = "0x2EE016C")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200017F")]
		public class CameraPosition
		{
			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C204", Offset = "0xE1C204")]
			public Collider lookAtTarget;

			[Token(Token = "0x40009AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C23C", Offset = "0xE1C23C")]
			public Vector3 direction;

			[Token(Token = "0x40009AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C274", Offset = "0xE1C274")]
			public float maxDistance;

			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C2AC", Offset = "0xE1C2AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C2AC", Offset = "0xE1C2AC")]
			public float maxAngle;

			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C304", Offset = "0xE1C304")]
			public bool fixYAxis;

			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x2EDF92C", Offset = "0x2EDF92C", VA = "0x2EDF92C")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x2EDFA20", Offset = "0x2EDFA20", VA = "0x2EDFA20")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x2EDFC48", Offset = "0x2EDFC48", VA = "0x2EDFC48")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000180")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x2000181")]
			public class Interaction
			{
				[Token(Token = "0x40009B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C454", Offset = "0xE1C454")]
				public InteractionObject interactionObject;

				[Token(Token = "0x40009B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C48C", Offset = "0xE1C48C")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6000A25")]
				[Address(RVA = "0x3138680", Offset = "0x3138680", VA = "0x3138680")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C3AC", Offset = "0xE1C3AC")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C3E4", Offset = "0xE1C3E4")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C41C", Offset = "0xE1C41C")]
			public Interaction[] interactions;

			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x2EE0180", Offset = "0x2EE0180", VA = "0x2EE0180")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x2EE0234", Offset = "0x2EE0234", VA = "0x2EE0234")]
			public Range()
			{
			}
		}

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C000", Offset = "0xE1C000")]
		public Range[] ranges;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x2E3188C", Offset = "0x2E3188C", VA = "0x2E3188C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26FA4", Offset = "0xE26FA4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x2E318D4", Offset = "0x2E318D4", VA = "0x2E318D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE26FDC", Offset = "0xE26FDC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x2E3191C", Offset = "0x2E3191C", VA = "0x2E3191C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE27014", Offset = "0xE27014")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x2E31964", Offset = "0x2E31964", VA = "0x2E31964")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x2E2FFFC", Offset = "0x2E2FFFC", VA = "0x2E2FFFC")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x2E31968", Offset = "0x2E31968", VA = "0x2E31968")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x2000183")]
		public class Map
		{
			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x2730B28", Offset = "0x2730B28", VA = "0x2730B28")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x2730B80", Offset = "0x2730B80", VA = "0x2730B80")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x2730BD0", Offset = "0x2730BD0", VA = "0x2730BD0")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x2730C1C", Offset = "0x2730C1C", VA = "0x2730C1C")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x2936210", Offset = "0x2936210", VA = "0x2936210", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2704C", Offset = "0xE2704C")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x29365A0", Offset = "0x29365A0", VA = "0x29365A0", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x29365A4", Offset = "0x29365A4", VA = "0x29365A4", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x29366AC", Offset = "0x29366AC", VA = "0x29366AC", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x2936534", Offset = "0x2936534", VA = "0x2936534")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x2936494", Offset = "0x2936494", VA = "0x2936494")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x2936718", Offset = "0x2936718", VA = "0x2936718")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x30A6668", Offset = "0x30A6668", VA = "0x30A6668", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x30A6744", Offset = "0x30A6744", VA = "0x30A6744", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x30A692C", Offset = "0x30A692C", VA = "0x30A692C", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x30A6A28", Offset = "0x30A6A28", VA = "0x30A6A28", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x30A67A8", Offset = "0x30A67A8", VA = "0x30A67A8")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x30A6D88", Offset = "0x30A6D88", VA = "0x30A6D88")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C4C4", Offset = "0xE1C4C4")]
		public float weight;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C4DC", Offset = "0xE1C4DC")]
		public float localRotationWeight;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C4F4", Offset = "0xE1C4F4")]
		public float localPositionWeight;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6000A37")]
		public abstract void AutoMapping();

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x26AC1D0", Offset = "0x26AC1D0", VA = "0x26AC1D0")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6000A39")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6000A3A")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6000A3B")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x26AC1DC", Offset = "0x26AC1DC", VA = "0x26AC1DC", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x26AC230", Offset = "0x26AC230", VA = "0x26AC230", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x26AC26C", Offset = "0x26AC26C", VA = "0x26AC26C", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x26AC284", Offset = "0x26AC284", VA = "0x26AC284")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE02FD4", Offset = "0xE02FD4")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x2000187")]
		public class Rigidbone
		{
			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x2EE4BCC", Offset = "0x2EE4BCC", VA = "0x2EE4BCC")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x2EE4D90", Offset = "0x2EE4D90", VA = "0x2EE4D90")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x2EE4E70", Offset = "0x2EE4E70", VA = "0x2EE4E70")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x2000188")]
		public class Child
		{
			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x2EE49C4", Offset = "0x2EE49C4", VA = "0x2EE49C4")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x2EE4A3C", Offset = "0x2EE4A3C", VA = "0x2EE4A3C")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x2EE4B7C", Offset = "0x2EE4B7C", VA = "0x2EE4B7C")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x2000189")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03034", Offset = "0xE03034")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A5B")]
				[Address(RVA = "0x2EE4974", Offset = "0x2EE4974", VA = "0x2EE4974", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A5D")]
				[Address(RVA = "0x2EE49BC", Offset = "0x2EE49BC", VA = "0x2EE49BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x2EE4738", Offset = "0x2EE4738", VA = "0x2EE4738")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x2EE4764", Offset = "0x2EE4764", VA = "0x2EE4764", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x2EE4768", Offset = "0x2EE4768", VA = "0x2EE4768", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x2EE497C", Offset = "0x2EE497C", VA = "0x2EE497C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C50C", Offset = "0xE1C50C")]
		public IK ik;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C544", Offset = "0xE1C544")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C57C", Offset = "0xE1C57C")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C5B4", Offset = "0xE1C5B4")]
		public float applyVelocity;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C5EC", Offset = "0xE1C5EC")]
		public float applyAngularVelocity;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x1700011B")]
		private bool isRagdoll
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x2685744", Offset = "0x2685744", VA = "0x2685744")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011C")]
		private bool ikUsed
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x2686178", Offset = "0x2686178", VA = "0x2686178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x268570C", Offset = "0x268570C", VA = "0x268570C")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x26857BC", Offset = "0x26857BC", VA = "0x26857BC")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x26858F8", Offset = "0x26858F8", VA = "0x26858F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x2685880", Offset = "0x2685880", VA = "0x2685880")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27084", Offset = "0xE27084")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x2685DB4", Offset = "0x2685DB4", VA = "0x2685DB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x2686000", Offset = "0x2686000", VA = "0x2686000")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x26860BC", Offset = "0x26860BC", VA = "0x26860BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x26862F8", Offset = "0x26862F8", VA = "0x26862F8")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x268613C", Offset = "0x268613C", VA = "0x268613C")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x26862B4", Offset = "0x26862B4", VA = "0x26862B4")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x2686398", Offset = "0x2686398", VA = "0x2686398")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x268632C", Offset = "0x268632C", VA = "0x268632C")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x2685814", Offset = "0x2685814", VA = "0x2685814")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x2686040", Offset = "0x2686040", VA = "0x2686040")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x26865C4", Offset = "0x26865C4", VA = "0x26865C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x2686700", Offset = "0x2686700", VA = "0x2686700")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool initiated;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool applicationQuit;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x1700011F")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x2B409E4", Offset = "0x2B409E4", VA = "0x2B409E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000120")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x2B409F0", Offset = "0x2B409F0", VA = "0x2B409F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x2B40708", Offset = "0x2B40708", VA = "0x2B40708")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x2B4074C", Offset = "0x2B4074C", VA = "0x2B4074C")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x2B4093C", Offset = "0x2B4093C", VA = "0x2B4093C")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x2B409AC", Offset = "0x2B409AC", VA = "0x2B409AC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000A64")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x2B40864", Offset = "0x2B40864", VA = "0x2B40864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x2B40A0C", Offset = "0x2B40A0C", VA = "0x2B40A0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x2B40A10", Offset = "0x2B40A10", VA = "0x2B40A10")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x2B40A44", Offset = "0x2B40A44", VA = "0x2B40A44")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x2B40AC0", Offset = "0x2B40AC0", VA = "0x2B40AC0")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x2B40C54", Offset = "0x2B40C54", VA = "0x2B40C54")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x2B40CC4", Offset = "0x2B40CC4", VA = "0x2B40CC4")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE03044", Offset = "0xE03044")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE03044", Offset = "0xE03044")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C634", Offset = "0xE1C634")]
		public float limit;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C650", Offset = "0xE1C650")]
		public float twistLimit;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x2B40CF8", Offset = "0x2B40CF8", VA = "0x2B40CF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE27134", Offset = "0xE27134")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x2B40D40", Offset = "0x2B40D40", VA = "0x2B40D40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2716C", Offset = "0xE2716C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x2B40D88", Offset = "0x2B40D88", VA = "0x2B40D88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE271A4", Offset = "0xE271A4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x2B40DD0", Offset = "0x2B40DD0", VA = "0x2B40DD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE271DC", Offset = "0xE271DC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x2B40E18", Offset = "0x2B40E18", VA = "0x2B40E18", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x2B40E5C", Offset = "0x2B40E5C", VA = "0x2B40E5C")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x2B4101C", Offset = "0x2B4101C", VA = "0x2B4101C")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE030A4", Offset = "0xE030A4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE030A4", Offset = "0xE030A4")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool useLimits;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float min;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float max;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion lastRotation;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastAngle;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x2B4105C", Offset = "0x2B4105C", VA = "0x2B4105C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE27214", Offset = "0xE27214")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x2B410A4", Offset = "0x2B410A4", VA = "0x2B410A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2724C", Offset = "0xE2724C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x2B410EC", Offset = "0x2B410EC", VA = "0x2B410EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE27284", Offset = "0xE27284")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x2B41134", Offset = "0x2B41134", VA = "0x2B41134")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE272BC", Offset = "0xE272BC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x2B4117C", Offset = "0x2B4117C", VA = "0x2B4117C", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x2B411A4", Offset = "0x2B411A4", VA = "0x2B411A4")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x2B413A0", Offset = "0x2B413A0", VA = "0x2B413A0")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE03104", Offset = "0xE03104")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE03104", Offset = "0xE03104")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x200018E")]
		public class ReachCone
		{
			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000121")]
			public Vector3 o
			{
				[Token(Token = "0x6000A8A")]
				[Address(RVA = "0x2EE8130", Offset = "0x2EE8130", VA = "0x2EE8130")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000122")]
			public Vector3 a
			{
				[Token(Token = "0x6000A8B")]
				[Address(RVA = "0x2EE8168", Offset = "0x2EE8168", VA = "0x2EE8168")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000123")]
			public Vector3 b
			{
				[Token(Token = "0x6000A8C")]
				[Address(RVA = "0x2EE81A4", Offset = "0x2EE81A4", VA = "0x2EE81A4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000124")]
			public Vector3 c
			{
				[Token(Token = "0x6000A8D")]
				[Address(RVA = "0x2EE81E0", Offset = "0x2EE81E0", VA = "0x2EE81E0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000125")]
			public bool isValid
			{
				[Token(Token = "0x6000A8F")]
				[Address(RVA = "0x2EE836C", Offset = "0x2EE836C", VA = "0x2EE836C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x2EE821C", Offset = "0x2EE821C", VA = "0x2EE821C")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x2EE837C", Offset = "0x2EE837C", VA = "0x2EE837C")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200018F")]
		public class LimitPoint
		{
			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x2EE80F4", Offset = "0x2EE80F4", VA = "0x2EE80F4")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C67C", Offset = "0xE1C67C")]
		public float twistLimit;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C698", Offset = "0xE1C698")]
		public int smoothIterations;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x2B413F8", Offset = "0x2B413F8", VA = "0x2B413F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE272F4", Offset = "0xE272F4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x2B41440", Offset = "0x2B41440", VA = "0x2B41440")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2732C", Offset = "0xE2732C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x2B41488", Offset = "0x2B41488", VA = "0x2B41488")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE27364", Offset = "0xE27364")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x2B414D0", Offset = "0x2B414D0", VA = "0x2B414D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2739C", Offset = "0xE2739C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x2B41518", Offset = "0x2B41518", VA = "0x2B41518")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x2B41A14", Offset = "0x2B41A14", VA = "0x2B41A14", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x2B41AA8", Offset = "0x2B41AA8", VA = "0x2B41AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x2B4201C", Offset = "0x2B4201C", VA = "0x2B4201C")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x2B415C0", Offset = "0x2B415C0", VA = "0x2B415C0")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x2B423C8", Offset = "0x2B423C8", VA = "0x2B423C8")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x2B427D4", Offset = "0x2B427D4", VA = "0x2B427D4")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x2B42818", Offset = "0x2B42818", VA = "0x2B42818")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x2B42878", Offset = "0x2B42878", VA = "0x2B42878")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x2B41DAC", Offset = "0x2B41DAC", VA = "0x2B41DAC")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x2B428E4", Offset = "0x2B428E4", VA = "0x2B428E4")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x2B429C0", Offset = "0x2B429C0", VA = "0x2B429C0")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE03164", Offset = "0xE03164")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE03164", Offset = "0xE03164")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C758", Offset = "0xE1C758")]
		public float twistLimit;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x2B42A40", Offset = "0x2B42A40", VA = "0x2B42A40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE273D4", Offset = "0xE273D4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x2B42A88", Offset = "0x2B42A88", VA = "0x2B42A88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2740C", Offset = "0xE2740C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x2B42AD0", Offset = "0x2B42AD0", VA = "0x2B42AD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE27444", Offset = "0xE27444")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x2B42B18", Offset = "0x2B42B18", VA = "0x2B42B18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2747C", Offset = "0xE2747C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x2B42B60", Offset = "0x2B42B60", VA = "0x2B42B60")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x2B42B7C", Offset = "0x2B42B7C", VA = "0x2B42B7C", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x2B42BC0", Offset = "0x2B42BC0", VA = "0x2B42BC0")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x2B42DE4", Offset = "0x2B42DE4", VA = "0x2B42DE4")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x2000192")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE031C4", Offset = "0xE031C4")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AA4")]
				[Address(RVA = "0x2728F34", Offset = "0x2728F34", VA = "0x2728F34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AA6")]
				[Address(RVA = "0x2728F7C", Offset = "0x2728F7C", VA = "0x2728F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x2728E38", Offset = "0x2728E38", VA = "0x2728E38")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x2728E64", Offset = "0x2728E64", VA = "0x2728E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x2728E68", Offset = "0x2728E68", VA = "0x2728E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x2728F3C", Offset = "0x2728F3C", VA = "0x2728F3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C7AC", Offset = "0xE1C7AC")]
		public AimIK ik;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1C7E4", Offset = "0xE1C7E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C7E4", Offset = "0xE1C7E4")]
		public float weight;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1C838", Offset = "0xE1C838")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C838", Offset = "0xE1C838")]
		public Transform target;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C898", Offset = "0xE1C898")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C8D0", Offset = "0xE1C8D0")]
		public float weightSmoothTime;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C908", Offset = "0xE1C908")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1C908", Offset = "0xE1C908")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C968", Offset = "0xE1C968")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C9A0", Offset = "0xE1C9A0")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1C9D8", Offset = "0xE1C9D8")]
		public float slerpSpeed;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CA10", Offset = "0xE1CA10")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CA48", Offset = "0xE1CA48")]
		public float minDistance;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CA80", Offset = "0xE1CA80")]
		public Vector3 offset;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CAB8", Offset = "0xE1CAB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1CAB8", Offset = "0xE1CAB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1CAB8", Offset = "0xE1CAB8")]
		public float maxRootAngle;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CB34", Offset = "0xE1CB34")]
		public bool turnToTarget;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CB6C", Offset = "0xE1CB6C")]
		public float turnToTargetTime;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1CBA4", Offset = "0xE1CBA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CBA4", Offset = "0xE1CBA4")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CC04", Offset = "0xE1CC04")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x17000126")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x2A9EEE0", Offset = "0x2A9EEE0", VA = "0x2A9EEE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x2A9EE54", Offset = "0x2A9EE54", VA = "0x2A9EE54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x2A9EF70", Offset = "0x2A9EF70", VA = "0x2A9EF70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x2A9F4C0", Offset = "0x2A9F4C0", VA = "0x2A9F4C0")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x2A9F5AC", Offset = "0x2A9F5AC", VA = "0x2A9F5AC")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x2A9F7FC", Offset = "0x2A9F7FC", VA = "0x2A9F7FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE274B4", Offset = "0xE274B4")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x2A9F874", Offset = "0x2A9F874", VA = "0x2A9F874")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000194")]
		public class Pose
		{
			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x2728F84", Offset = "0x2728F84", VA = "0x2728F84")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x2729110", Offset = "0x2729110", VA = "0x2729110")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x2729118", Offset = "0x2729118", VA = "0x2729118")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x2AA2F50", Offset = "0x2AA2F50", VA = "0x2AA2F50")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x2AA3030", Offset = "0x2AA3030", VA = "0x2AA3030")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x2AA309C", Offset = "0x2AA309C", VA = "0x2AA309C")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000196")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000197")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A31")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CDC4", Offset = "0xE1CDC4")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A32")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CDFC", Offset = "0xE1CDFC")]
				public float weight;

				[Token(Token = "0x6000AB2")]
				[Address(RVA = "0x3138264", Offset = "0x3138264", VA = "0x3138264")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CC74", Offset = "0xE1CC74")]
			public Transform transform;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CCAC", Offset = "0xE1CCAC")]
			public Transform relativeTo;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CCE4", Offset = "0xE1CCE4")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CD1C", Offset = "0xE1CD1C")]
			public float verticalWeight;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CD54", Offset = "0xE1CD54")]
			public float horizontalWeight;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CD8C", Offset = "0xE1CD8C")]
			public float speed;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x2729134", Offset = "0x2729134", VA = "0x2729134")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x2729460", Offset = "0x2729460", VA = "0x2729460")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x2729470", Offset = "0x2729470", VA = "0x2729470")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CC3C", Offset = "0xE1CC3C")]
		public Body[] bodies;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x2AA31B8", Offset = "0x2AA31B8", VA = "0x2AA31B8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x2AA3304", Offset = "0x2AA3304", VA = "0x2AA3304")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CE34", Offset = "0xE1CE34")]
		public float tiltSpeed;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CE6C", Offset = "0xE1CE6C")]
		public float tiltSensitivity;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CEA4", Offset = "0xE1CEA4")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CEDC", Offset = "0xE1CEDC")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x2DF5084", Offset = "0x2DF5084", VA = "0x2DF5084", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x2DF50CC", Offset = "0x2DF50CC", VA = "0x2DF50CC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x2DF5284", Offset = "0x2DF5284", VA = "0x2DF5284")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200019A")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CF84", Offset = "0xE1CF84")]
			public string name;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CFBC", Offset = "0xE1CFBC")]
			public Collider collider;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CFF4", Offset = "0xE1CFF4")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D040", Offset = "0xE1D040")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D050", Offset = "0xE1D050")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D060", Offset = "0xE1D060")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D070", Offset = "0xE1D070")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700012A")]
			public bool inProgress
			{
				[Token(Token = "0x6000ABA")]
				[Address(RVA = "0x2733704", Offset = "0x2733704", VA = "0x2733704")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700012B")]
			protected float crossFader
			{
				[Token(Token = "0x6000ABB")]
				[Address(RVA = "0x2733718", Offset = "0x2733718", VA = "0x2733718")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27564", Offset = "0xE27564")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000ABC")]
				[Address(RVA = "0x2733720", Offset = "0x2733720", VA = "0x2733720")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27574", Offset = "0xE27574")]
				private set
				{
				}
			}

			[Token(Token = "0x1700012C")]
			protected float timer
			{
				[Token(Token = "0x6000ABD")]
				[Address(RVA = "0x2733728", Offset = "0x2733728", VA = "0x2733728")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27584", Offset = "0xE27584")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000ABE")]
				[Address(RVA = "0x2733730", Offset = "0x2733730", VA = "0x2733730")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27594", Offset = "0xE27594")]
				private set
				{
				}
			}

			[Token(Token = "0x1700012D")]
			protected Vector3 force
			{
				[Token(Token = "0x6000ABF")]
				[Address(RVA = "0x2733738", Offset = "0x2733738", VA = "0x2733738")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE275A4", Offset = "0xE275A4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000AC0")]
				[Address(RVA = "0x2733744", Offset = "0x2733744", VA = "0x2733744")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE275B4", Offset = "0xE275B4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700012E")]
			protected Vector3 point
			{
				[Token(Token = "0x6000AC1")]
				[Address(RVA = "0x2733750", Offset = "0x2733750", VA = "0x2733750")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE275C4", Offset = "0xE275C4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000AC2")]
				[Address(RVA = "0x273375C", Offset = "0x273375C", VA = "0x273375C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE275D4", Offset = "0xE275D4")]
				private set
				{
				}
			}

			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x2733768", Offset = "0x2733768", VA = "0x2733768")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x273389C", Offset = "0x273389C", VA = "0x273389C")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000AC5")]
			protected abstract float GetLength();

			[Token(Token = "0x6000AC6")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6000AC7")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x2733970", Offset = "0x2733970", VA = "0x2733970")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200019B")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x200019C")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A48")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D128", Offset = "0xE1D128")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A49")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D160", Offset = "0xE1D160")]
				public float weight;

				[Token(Token = "0x4000A4A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000A4B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000ACD")]
				[Address(RVA = "0x31383D4", Offset = "0x31383D4", VA = "0x31383D4")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000ACE")]
				[Address(RVA = "0x3138484", Offset = "0x3138484", VA = "0x3138484")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000ACF")]
				[Address(RVA = "0x3138498", Offset = "0x3138498", VA = "0x3138498")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D080", Offset = "0xE1D080")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D0B8", Offset = "0xE1D0B8")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D0F0", Offset = "0xE1D0F0")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x2733CAC", Offset = "0x2733CAC", VA = "0x2733CAC", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x2733DDC", Offset = "0x2733DDC", VA = "0x2733DDC", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x2733E48", Offset = "0x2733E48", VA = "0x2733E48", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x2733FB0", Offset = "0x2733FB0", VA = "0x2733FB0")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200019D")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x200019E")]
			public class BoneLink
			{
				[Token(Token = "0x4000A4F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D208", Offset = "0xE1D208")]
				public Transform bone;

				[Token(Token = "0x4000A50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D240", Offset = "0xE1D240")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1D240", Offset = "0xE1D240")]
				public float weight;

				[Token(Token = "0x4000A51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4000A52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6000AD4")]
				[Address(RVA = "0x313826C", Offset = "0x313826C", VA = "0x313826C")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6000AD5")]
				[Address(RVA = "0x3138384", Offset = "0x3138384", VA = "0x3138384")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000AD6")]
				[Address(RVA = "0x3138390", Offset = "0x3138390", VA = "0x3138390")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D198", Offset = "0xE1D198")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D1D0", Offset = "0xE1D1D0")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x2733984", Offset = "0x2733984", VA = "0x2733984", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x2733A28", Offset = "0x2733A28", VA = "0x2733A28", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x2733A94", Offset = "0x2733A94", VA = "0x2733A94", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x2733C98", Offset = "0x2733C98", VA = "0x2733C98")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CF14", Offset = "0xE1CF14")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1CF4C", Offset = "0xE1CF4C")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x17000129")]
		public bool inProgress
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x30A7C74", Offset = "0x30A7C74", VA = "0x30A7C74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x30A7D44", Offset = "0x30A7D44", VA = "0x30A7D44", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x30A7E20", Offset = "0x30A7E20", VA = "0x30A7E20")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x30A807C", Offset = "0x30A807C", VA = "0x30A807C")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x20001A0")]
		public abstract class Offset
		{
			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D304", Offset = "0xE1D304")]
			public string name;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D33C", Offset = "0xE1D33C")]
			public Collider collider;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D374", Offset = "0xE1D374")]
			private float crossFadeTime;

			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D3C0", Offset = "0xE1D3C0")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D3D0", Offset = "0xE1D3D0")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D3E0", Offset = "0xE1D3E0")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1D3F0", Offset = "0xE1D3F0")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700012F")]
			protected float crossFader
			{
				[Token(Token = "0x6000ADA")]
				[Address(RVA = "0x2733FC4", Offset = "0x2733FC4", VA = "0x2733FC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE275E4", Offset = "0xE275E4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000ADB")]
				[Address(RVA = "0x2733FCC", Offset = "0x2733FCC", VA = "0x2733FCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE275F4", Offset = "0xE275F4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000130")]
			protected float timer
			{
				[Token(Token = "0x6000ADC")]
				[Address(RVA = "0x2733FD4", Offset = "0x2733FD4", VA = "0x2733FD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27604", Offset = "0xE27604")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000ADD")]
				[Address(RVA = "0x2733FDC", Offset = "0x2733FDC", VA = "0x2733FDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27614", Offset = "0xE27614")]
				private set
				{
				}
			}

			[Token(Token = "0x17000131")]
			protected Vector3 force
			{
				[Token(Token = "0x6000ADE")]
				[Address(RVA = "0x2733FE4", Offset = "0x2733FE4", VA = "0x2733FE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27624", Offset = "0xE27624")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000ADF")]
				[Address(RVA = "0x2733FF0", Offset = "0x2733FF0", VA = "0x2733FF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27634", Offset = "0xE27634")]
				private set
				{
				}
			}

			[Token(Token = "0x17000132")]
			protected Vector3 point
			{
				[Token(Token = "0x6000AE0")]
				[Address(RVA = "0x2733FFC", Offset = "0x2733FFC", VA = "0x2733FFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27644", Offset = "0xE27644")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000AE1")]
				[Address(RVA = "0x2734008", Offset = "0x2734008", VA = "0x2734008")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27654", Offset = "0xE27654")]
				private set
				{
				}
			}

			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x2734014", Offset = "0x2734014", VA = "0x2734014")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x273415C", Offset = "0x273415C", VA = "0x273415C")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000AE4")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6000AE5")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6000AE6")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x2734244", Offset = "0x2734244", VA = "0x2734244")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A1")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20001A2")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4000A63")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D4A8", Offset = "0xE1D4A8")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4000A64")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D4E0", Offset = "0xE1D4E0")]
				public float weight;

				[Token(Token = "0x4000A65")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000A66")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000AEC")]
				[Address(RVA = "0x31384A0", Offset = "0x31384A0", VA = "0x31384A0")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000AED")]
				[Address(RVA = "0x3138530", Offset = "0x3138530", VA = "0x3138530")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000AEE")]
				[Address(RVA = "0x3138544", Offset = "0x3138544", VA = "0x3138544")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D400", Offset = "0xE1D400")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D438", Offset = "0xE1D438")]
			public int upDirCurveIndex;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D470", Offset = "0xE1D470")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x2734258", Offset = "0x2734258", VA = "0x2734258", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x2734408", Offset = "0x2734408", VA = "0x2734408", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x2734474", Offset = "0x2734474", VA = "0x2734474", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x2734614", Offset = "0x2734614", VA = "0x2734614")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A3")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20001A4")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4000A6A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D588", Offset = "0xE1D588")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4000A6B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D5C0", Offset = "0xE1D5C0")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1D5C0", Offset = "0xE1D5C0")]
				public float weight;

				[Token(Token = "0x4000A6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4000A6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6000AF3")]
				[Address(RVA = "0x313854C", Offset = "0x313854C", VA = "0x313854C")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6000AF4")]
				[Address(RVA = "0x3138628", Offset = "0x3138628", VA = "0x3138628")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000AF5")]
				[Address(RVA = "0x3138634", Offset = "0x3138634", VA = "0x3138634")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D518", Offset = "0xE1D518")]
			public int curveIndex;

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D550", Offset = "0xE1D550")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x2734630", Offset = "0x2734630", VA = "0x2734630", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x2734714", Offset = "0x2734714", VA = "0x2734714", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x2734780", Offset = "0x2734780", VA = "0x2734780", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x2734A3C", Offset = "0x2734A3C", VA = "0x2734A3C")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D294", Offset = "0xE1D294")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D2CC", Offset = "0xE1D2CC")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x30A83DC", Offset = "0x30A83DC", VA = "0x30A83DC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x30A84B0", Offset = "0x30A84B0", VA = "0x30A84B0")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x30A8714", Offset = "0x30A8714", VA = "0x30A8714")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001A6")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20001A7")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A7B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D7F0", Offset = "0xE1D7F0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A7C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D828", Offset = "0xE1D828")]
				public float weight;

				[Token(Token = "0x6000AFC")]
				[Address(RVA = "0x3138678", Offset = "0x3138678", VA = "0x3138678")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D684", Offset = "0xE1D684")]
			public Transform transform;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D6BC", Offset = "0xE1D6BC")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D6F4", Offset = "0xE1D6F4")]
			public float speed;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D72C", Offset = "0xE1D72C")]
			public float acceleration;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1D764", Offset = "0xE1D764")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D764", Offset = "0xE1D764")]
			public float matchVelocity;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D7B8", Offset = "0xE1D7B8")]
			public float gravity;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x2EDE9F0", Offset = "0x2EDE9F0", VA = "0x2EDE9F0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x2EDEAA8", Offset = "0x2EDEAA8", VA = "0x2EDEAA8")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x2EDED64", Offset = "0x2EDED64", VA = "0x2EDED64")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D614", Offset = "0xE1D614")]
		public Body[] bodies;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D64C", Offset = "0xE1D64C")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x2E26D3C", Offset = "0x2E26D3C", VA = "0x2E26D3C")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x2E26DB8", Offset = "0x2E26DB8", VA = "0x2E26DB8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x2E26E78", Offset = "0x2E26E78", VA = "0x2E26E78")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D860", Offset = "0xE1D860")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1D860", Offset = "0xE1D860")]
		public Transform target;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1D8C0", Offset = "0xE1D8C0")]
		public float weight;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D8D8", Offset = "0xE1D8D8")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D910", Offset = "0xE1D910")]
		public float weightSmoothTime;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1D948", Offset = "0xE1D948")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D948", Offset = "0xE1D948")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D9A8", Offset = "0xE1D9A8")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1D9E0", Offset = "0xE1D9E0")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DA18", Offset = "0xE1DA18")]
		public float slerpSpeed;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DA50", Offset = "0xE1DA50")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DA88", Offset = "0xE1DA88")]
		public float minDistance;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1DAC0", Offset = "0xE1DAC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1DAC0", Offset = "0xE1DAC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DAC0", Offset = "0xE1DAC0")]
		public float maxRootAngle;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000133")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x2CF9CA8", Offset = "0x2CF9CA8", VA = "0x2CF9CA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x2CF9C34", Offset = "0x2CF9C34", VA = "0x2CF9C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x2CF9D38", Offset = "0x2CF9D38", VA = "0x2CF9D38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x2CFA250", Offset = "0x2CFA250", VA = "0x2CFA250")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x2CFA33C", Offset = "0x2CFA33C", VA = "0x2CFA33C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x2CFA534", Offset = "0x2CFA534", VA = "0x2CFA534")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AA")]
		public class OffsetLimits
		{
			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DBAC", Offset = "0xE1DBAC")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DBE4", Offset = "0xE1DBE4")]
			public float spring;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DC1C", Offset = "0xE1DC1C")]
			public bool x;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DC54", Offset = "0xE1DC54")]
			public bool y;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DC8C", Offset = "0xE1DC8C")]
			public bool z;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DCC4", Offset = "0xE1DCC4")]
			public float minX;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DCFC", Offset = "0xE1DCFC")]
			public float maxX;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DD34", Offset = "0xE1DD34")]
			public float minY;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DD6C", Offset = "0xE1DD6C")]
			public float maxY;

			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DDA4", Offset = "0xE1DDA4")]
			public float minZ;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DDDC", Offset = "0xE1DDDC")]
			public float maxZ;

			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x2EE2A6C", Offset = "0x2EE2A6C", VA = "0x2EE2A6C")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x2EE2BC4", Offset = "0x2EE2BC4", VA = "0x2EE2BC4")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x2EE2C3C", Offset = "0x2EE2C3C", VA = "0x2EE2C3C")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x2EE2C94", Offset = "0x2EE2C94", VA = "0x2EE2C94")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x20001AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE031D4", Offset = "0xE031D4")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x17000135")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B12")]
				[Address(RVA = "0x2EE2A1C", Offset = "0x2EE2A1C", VA = "0x2EE2A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000136")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B14")]
				[Address(RVA = "0x2EE2A64", Offset = "0x2EE2A64", VA = "0x2EE2A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x2EE287C", Offset = "0x2EE287C", VA = "0x2EE287C")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x2EE28A8", Offset = "0x2EE28A8", VA = "0x2EE28A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x2EE28AC", Offset = "0x2EE28AC", VA = "0x2EE28AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x2EE2A24", Offset = "0x2EE2A24", VA = "0x2EE2A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DB3C", Offset = "0xE1DB3C")]
		public float weight;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DB74", Offset = "0xE1DB74")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000134")]
		protected float deltaTime
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x26A1998", Offset = "0x26A1998", VA = "0x26A1998")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B04")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x26A17C0", Offset = "0x26A17C0", VA = "0x26A17C0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x26A19C4", Offset = "0x26A19C4", VA = "0x26A19C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27664", Offset = "0xE27664")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x26A1A3C", Offset = "0x26A1A3C", VA = "0x26A1A3C")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x26A1B18", Offset = "0x26A1B18", VA = "0x26A1B18")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x26A1BD8", Offset = "0x26A1BD8", VA = "0x26A1BD8", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x26A1988", Offset = "0x26A1988", VA = "0x26A1988")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x20001AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE031E4", Offset = "0xE031E4")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x17000138")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B1F")]
				[Address(RVA = "0x2EE2E3C", Offset = "0x2EE2E3C", VA = "0x2EE2E3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000139")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B21")]
				[Address(RVA = "0x2EE2E84", Offset = "0x2EE2E84", VA = "0x2EE2E84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x2EE2C9C", Offset = "0x2EE2C9C", VA = "0x2EE2C9C")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x2EE2CC8", Offset = "0x2EE2CC8", VA = "0x2EE2CC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x2EE2CCC", Offset = "0x2EE2CCC", VA = "0x2EE2CCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x2EE2E44", Offset = "0x2EE2E44", VA = "0x2EE2E44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DE14", Offset = "0xE1DE14")]
		public float weight;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DE4C", Offset = "0xE1DE4C")]
		public VRIK ik;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x17000137")]
		protected float deltaTime
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x26A1D08", Offset = "0x26A1D08", VA = "0x26A1D08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B16")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x26A1D34", Offset = "0x26A1D34", VA = "0x26A1D34", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x26A1D60", Offset = "0x26A1D60", VA = "0x26A1D60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27714", Offset = "0xE27714")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x26A1DD8", Offset = "0x26A1DD8", VA = "0x26A1DD8")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x26A1EB4", Offset = "0x26A1EB4", VA = "0x26A1EB4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x26A1FE4", Offset = "0x26A1FE4", VA = "0x26A1FE4")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AF")]
		public class EffectorLink
		{
			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x2EE2E8C", Offset = "0x2EE2E8C", VA = "0x2EE2E8C")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x2EE30A8", Offset = "0x2EE30A8", VA = "0x2EE30A8")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x26A1FF4", Offset = "0x26A1FF4", VA = "0x26A1FF4")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x26A20B8", Offset = "0x26A20B8", VA = "0x26A20B8")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x26A2174", Offset = "0x26A2174", VA = "0x26A2174")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001B1")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x20001B2")]
			public class EffectorLink
			{
				[Token(Token = "0x4000AB8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E060", Offset = "0xE1E060")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000AB9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E098", Offset = "0xE1E098")]
				public float weight;

				[Token(Token = "0x6000B2D")]
				[Address(RVA = "0x3138688", Offset = "0x3138688", VA = "0x3138688")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DEBC", Offset = "0xE1DEBC")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DEF4", Offset = "0xE1DEF4")]
			public Transform raycastTo;

			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DF2C", Offset = "0xE1DF2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1DF2C", Offset = "0xE1DF2C")]
			public float raycastRadius;

			[Token(Token = "0x4000AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DF80", Offset = "0xE1DF80")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4000AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DFB8", Offset = "0xE1DFB8")]
			public float smoothTimeIn;

			[Token(Token = "0x4000AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DFF0", Offset = "0xE1DFF0")]
			public float smoothTimeOut;

			[Token(Token = "0x4000AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E028", Offset = "0xE1E028")]
			public LayerMask layers;

			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x4000AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x2EE35B0", Offset = "0x2EE35B0", VA = "0x2EE35B0")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x2EE36F4", Offset = "0x2EE36F4", VA = "0x2EE36F4")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x2EE37EC", Offset = "0x2EE37EC", VA = "0x2EE37EC")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x2EE39BC", Offset = "0x2EE39BC", VA = "0x2EE39BC")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1DE84", Offset = "0xE1DE84")]
		public Avoider[] avoiders;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x26A760C", Offset = "0x26A760C", VA = "0x26A760C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x26A7694", Offset = "0x26A7694", VA = "0x26A7694")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001B4")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x20001B5")]
			public class EffectorLink
			{
				[Token(Token = "0x4000AD7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E424", Offset = "0xE1E424")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000AD8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E45C", Offset = "0xE1E45C")]
				public float weight;

				[Token(Token = "0x6000B3D")]
				[Address(RVA = "0x3138690", Offset = "0x3138690", VA = "0x3138690")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E328", Offset = "0xE1E328")]
			public Vector3 offset;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E360", Offset = "0xE1E360")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1E360", Offset = "0xE1E360")]
			public float additivity;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E3B4", Offset = "0xE1E3B4")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E3EC", Offset = "0xE1E3EC")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x2EE56E8", Offset = "0x2EE56E8", VA = "0x2EE56E8")]
			public void Start()
			{
			}

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x2EE5738", Offset = "0x2EE5738", VA = "0x2EE5738")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x2EE58FC", Offset = "0x2EE58FC", VA = "0x2EE58FC")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B6")]
		public enum Handedness
		{
			[Token(Token = "0x4000ADA")]
			Right,
			[Token(Token = "0x4000ADB")]
			Left
		}

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E0D0", Offset = "0xE1E0D0")]
		public AimIK aimIK;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E108", Offset = "0xE1E108")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E140", Offset = "0xE1E140")]
		public Handedness handedness;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E178", Offset = "0xE1E178")]
		public bool twoHanded;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E1B0", Offset = "0xE1E1B0")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E1E8", Offset = "0xE1E1E8")]
		public float magnitudeRandom;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E220", Offset = "0xE1E220")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E258", Offset = "0xE1E258")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E290", Offset = "0xE1E290")]
		public float blendTime;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE1E2C8", Offset = "0xE1E2C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E2C8", Offset = "0xE1E2C8")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x1700013A")]
		public bool isFinished
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x2687934", Offset = "0x2687934", VA = "0x2687934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x26883D0", Offset = "0x26883D0", VA = "0x26883D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x2688410", Offset = "0x2688410", VA = "0x2688410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private Transform primaryHand
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x2688390", Offset = "0x2688390", VA = "0x2688390")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x26883B0", Offset = "0x26883B0", VA = "0x26883B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x2687964", Offset = "0x2687964", VA = "0x2687964")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x2687990", Offset = "0x2687990", VA = "0x2687990")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x2687AD8", Offset = "0x2687AD8", VA = "0x2687AD8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x2688450", Offset = "0x2688450", VA = "0x2688450")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x2688504", Offset = "0x2688504", VA = "0x2688504")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x2688540", Offset = "0x2688540", VA = "0x2688540", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x2688730", Offset = "0x2688730", VA = "0x2688730")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E494", Offset = "0xE1E494")]
		public float weight;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E4CC", Offset = "0xE1E4CC")]
		public float offset;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x2B4EDB4", Offset = "0x2B4EDB4", VA = "0x2B4EDB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2B4EEBC", Offset = "0x2B4EEBC", VA = "0x2B4EEBC")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x2B4EFA4", Offset = "0x2B4EFA4", VA = "0x2B4EFA4")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2B4F2F8", Offset = "0x2B4F2F8", VA = "0x2B4F2F8")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x2B4F330", Offset = "0x2B4F330", VA = "0x2B4F330")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2B4F460", Offset = "0x2B4F460", VA = "0x2B4F460")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x20001B9")]
		public class Settings
		{
			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E504", Offset = "0xE1E504")]
			public float scaleMlp;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E53C", Offset = "0xE1E53C")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E574", Offset = "0xE1E574")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E5AC", Offset = "0xE1E5AC")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E5E4", Offset = "0xE1E5E4")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E61C", Offset = "0xE1E61C")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E654", Offset = "0xE1E654")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E68C", Offset = "0xE1E68C")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E6C4", Offset = "0xE1E6C4")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE1E6FC", Offset = "0xE1E6FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E6FC", Offset = "0xE1E6FC")]
			public Vector3 headOffset;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E74C", Offset = "0xE1E74C")]
			public Vector3 handOffset;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E784", Offset = "0xE1E784")]
			public float footForwardOffset;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E7BC", Offset = "0xE1E7BC")]
			public float footInwardOffset;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1E7F4", Offset = "0xE1E7F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1E7F4", Offset = "0xE1E7F4")]
			public float footHeadingOffset;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1E850", Offset = "0xE1E850")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1E868", Offset = "0xE1E868")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x31355A4", Offset = "0x31355A4", VA = "0x31355A4")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001BA")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x20001BB")]
			public class Target
			{
				[Token(Token = "0x4000AFC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4000AFD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4000AFE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6000B4B")]
				[Address(RVA = "0x3138698", Offset = "0x3138698", VA = "0x3138698")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6000B4C")]
				[Address(RVA = "0x3138758", Offset = "0x3138758", VA = "0x3138758")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x4000AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x313559C", Offset = "0x313559C", VA = "0x313559C")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x27C1FF8", Offset = "0x27C1FF8", VA = "0x27C1FF8")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x27C0294", Offset = "0x27C0294", VA = "0x27C0294")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x27C2160", Offset = "0x27C2160", VA = "0x27C2160")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x27C14F8", Offset = "0x27C14F8", VA = "0x27C14F8")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x27C29A4", Offset = "0x27C29A4", VA = "0x27C29A4")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E880", Offset = "0xE1E880")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x1700013F")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x27C34E8", Offset = "0x27C34E8", VA = "0x27C34E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE277C4", Offset = "0xE277C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x27C34F4", Offset = "0x27C34F4", VA = "0x27C34F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE277D4", Offset = "0xE277D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x27C3500", Offset = "0x27C3500", VA = "0x27C3500")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x27C2774", Offset = "0x27C2774", VA = "0x27C2774")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x27C2C3C", Offset = "0x27C2C3C", VA = "0x27C2C3C")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x27C3610", Offset = "0x27C3610", VA = "0x27C3610")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x27C3A2C", Offset = "0x27C3A2C", VA = "0x27C3A2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x27C3B5C", Offset = "0x27C3B5C", VA = "0x27C3B5C")]
		public VRIKRootController()
		{
		}
	}
}
namespace FlowCanvas
{
	[Token(Token = "0x20001BD")]
	public class BinderConnection<T> : BinderConnection
	{
		[Token(Token = "0x6000B55")]
		public override void Bind()
		{
		}

		[Token(Token = "0x6000B56")]
		public override void UnBind()
		{
		}

		[Token(Token = "0x6000B57")]
		public BinderConnection()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class BinderConnection : Connection
	{
		[Serializable]
		[Token(Token = "0x20001BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE031F4", Offset = "0xE031F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ValueHandlerObject <>9__19_0;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static FlowHandler <>9__20_0;

			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x27295F8", Offset = "0x27295F8", VA = "0x27295F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x2729600", Offset = "0x2729600", VA = "0x2729600")]
			internal object <GatherAndValidateSourcePort>b__19_0()
			{
				return null;
			}

			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x2729654", Offset = "0x2729654", VA = "0x2729654")]
			internal void <GatherAndValidateTargetPort>b__20_0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE1E890", Offset = "0xE1E890")]
		private string _sourcePortID;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE1E8C8", Offset = "0xE1E8C8")]
		private string _targetPortID;

		[NonSerialized]
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Port _sourcePort;

		[NonSerialized]
		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Port _targetPort;

		[Token(Token = "0x17000140")]
		public string sourcePortID
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x2DE8CC4", Offset = "0x2DE8CC4", VA = "0x2DE8CC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x2DE8DB4", Offset = "0x2DE8DB4", VA = "0x2DE8DB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public string targetPortID
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0x2DE8DBC", Offset = "0x2DE8DBC", VA = "0x2DE8DBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x2DE8EAC", Offset = "0x2DE8EAC", VA = "0x2DE8EAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public Port sourcePort
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0x2DE8D08", Offset = "0x2DE8D08", VA = "0x2DE8D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public Port targetPort
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x2DE8E00", Offset = "0x2DE8E00", VA = "0x2DE8E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public Type bindingType
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0x2DE8EB4", Offset = "0x2DE8EB4", VA = "0x2DE8EB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x2DE8FF0", Offset = "0x2DE8FF0", VA = "0x2DE8FF0")]
		public static BinderConnection Create(Port source, Port target)
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x2DE947C", Offset = "0x2DE947C", VA = "0x2DE947C")]
		public void SetSourcePort(Port newSourcePort)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x2DE98FC", Offset = "0x2DE98FC", VA = "0x2DE98FC")]
		public void SetTargetPort(Port newTargetPort)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x2DE95DC", Offset = "0x2DE95DC", VA = "0x2DE95DC")]
		public void GatherAndValidateSourcePort()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x2DE9A5C", Offset = "0x2DE9A5C", VA = "0x2DE9A5C")]
		public void GatherAndValidateTargetPort()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x2DE9EB8", Offset = "0x2DE9EB8", VA = "0x2DE9EB8")]
		public static bool CanBeBound(Port source, Port target, BinderConnection refConnection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x2DE9438", Offset = "0x2DE9438", VA = "0x2DE9438")]
		public static bool CanBeBoundVerbosed(Port source, Port target, BinderConnection refConnection, out string verbose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x2DE9EF0", Offset = "0x2DE9EF0", VA = "0x2DE9EF0")]
		private static string CanBeBoundVerbosed_Internal(Port source, Port target, BinderConnection refConnection)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x2DEA1BC", Offset = "0x2DEA1BC", VA = "0x2DEA1BC", Slot = "10")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x2DEA2D8", Offset = "0x2DEA2D8", VA = "0x2DEA2D8", Slot = "11")]
		public virtual void Bind()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x2DEA480", Offset = "0x2DEA480", VA = "0x2DEA480", Slot = "12")]
		public virtual void UnBind()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x2DE9474", Offset = "0x2DE9474", VA = "0x2DE9474")]
		public BinderConnection()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public delegate void FlowHandler(Flow f);
	[Token(Token = "0x20001C1")]
	[SpoofAOT]
	public delegate T ValueHandler<T>();
	[Token(Token = "0x20001C2")]
	public delegate object ValueHandlerObject();
	[Token(Token = "0x20001C3")]
	public delegate void FlowBreak();
	[Token(Token = "0x20001C4")]
	public delegate void FlowReturn(object value);
	[Token(Token = "0x20001C5")]
	[SpoofAOT]
	public struct Flow
	{
		[Token(Token = "0x20001C6")]
		public struct ReturnData
		{
			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E910", Offset = "0xE1E910")]
			private FlowReturn <returnCall>k__BackingField;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E920", Offset = "0xE1E920")]
			private Type <returnType>k__BackingField;

			[Token(Token = "0x17000147")]
			public FlowReturn returnCall
			{
				[Token(Token = "0x6000B8E")]
				[Address(RVA = "0x272FE10", Offset = "0x272FE10", VA = "0x272FE10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2782C", Offset = "0xE2782C")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6000B8F")]
				[Address(RVA = "0x272FE18", Offset = "0x272FE18", VA = "0x272FE18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27864", Offset = "0xE27864")]
				private set
				{
				}
			}

			[Token(Token = "0x17000148")]
			public Type returnType
			{
				[Token(Token = "0x6000B90")]
				[Address(RVA = "0x272FE20", Offset = "0x272FE20", VA = "0x272FE20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27874", Offset = "0xE27874")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6000B91")]
				[Address(RVA = "0x272FE28", Offset = "0x272FE28", VA = "0x272FE28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE278AC", Offset = "0xE278AC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x272FE30", Offset = "0x272FE30", VA = "0x272FE30")]
			public ReturnData(FlowReturn call, Type type)
			{
			}
		}

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E900", Offset = "0xE1E900")]
		private int <ticks>k__BackingField;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, object> parameters;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReturnData returnData;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FlowBreak breakCall;

		[Token(Token = "0x17000145")]
		public int ticks
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x292983C", Offset = "0x292983C", VA = "0x292983C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE277E4", Offset = "0xE277E4")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x2929844", Offset = "0x2929844", VA = "0x2929844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2781C", Offset = "0xE2781C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public static Flow New
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x292984C", Offset = "0x292984C", VA = "0x292984C")]
			get
			{
				return default(Flow);
			}
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x292985C", Offset = "0x292985C", VA = "0x292985C")]
		public void Call(FlowOutput port)
		{
		}

		[Token(Token = "0x6000B87")]
		public T ReadParameter<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B88")]
		public void WriteParameter<T>(string name, T value)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x29298AC", Offset = "0x29298AC", VA = "0x29298AC")]
		public void SetReturnData(FlowReturn call, Type expectedType)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x29298F4", Offset = "0x29298F4", VA = "0x29298F4")]
		public void Return(object value, FlowNode context)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x2929E98", Offset = "0x2929E98", VA = "0x2929E98")]
		public void BeginBreakBlock(FlowBreak callback)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x2929EA0", Offset = "0x2929EA0", VA = "0x2929EA0")]
		public void EndBreakBlock()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x2929EB8", Offset = "0x2929EB8", VA = "0x2929EB8")]
		public void Break(FlowNode context)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C7")]
	[GraphInfo]
	public abstract class FlowGraph : Graph
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<IUpdatable> updatableNodes;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<MacroNodeWrapper> macroWrappers;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<string, IInvokable> functions;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<Type, Component> cachedAgentComponents;

		[Token(Token = "0x17000149")]
		public override Type baseNodeType
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x292A194", Offset = "0x292A194", VA = "0x292A194", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public override bool allowBlackboardOverrides
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x292A20C", Offset = "0x292A20C", VA = "0x292A20C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014B")]
		public override bool requiresAgent
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x292A214", Offset = "0x292A214", VA = "0x292A214", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x292A21C", Offset = "0x292A21C", VA = "0x292A21C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014D")]
		public override bool isTree
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x292A224", Offset = "0x292A224", VA = "0x292A224", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014E")]
		public override bool canAcceptVariableDrops
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x292A22C", Offset = "0x292A22C", VA = "0x292A22C", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B99")]
		public T CallFunction<T>(string name, params object[] args)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x292A234", Offset = "0x292A234", VA = "0x292A234")]
		public object CallFunction(string name, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x292A39C", Offset = "0x292A39C", VA = "0x292A39C")]
		public void CallFunctionAsync(string name, Action<object> callback, params object[] args)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x292A504", Offset = "0x292A504", VA = "0x292A504")]
		public UnityEngine.Object GetAgentComponent(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x292A860", Offset = "0x292A860", VA = "0x292A860", Slot = "22")]
		protected override void OnGraphInitialize()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x292AD38", Offset = "0x292AD38", VA = "0x292AD38")]
		private void InitSecondPass()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x292B210", Offset = "0x292B210", VA = "0x292B210", Slot = "23")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x292B3B0", Offset = "0x292B3B0", VA = "0x292B3B0", Slot = "24")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x292B4C8", Offset = "0x292B4C8", VA = "0x292B4C8", Slot = "25")]
		protected override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x292B628", Offset = "0x292B628", VA = "0x292B628")]
		protected FlowGraph()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public abstract class FlowNode : Node, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20001C9")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE032BC", Offset = "0xE032BC")]
		public class ContextDefinedInputsAttribute : Attribute
		{
			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type[] types;

			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x2730290", Offset = "0x2730290", VA = "0x2730290")]
			public ContextDefinedInputsAttribute(params Type[] types)
			{
			}
		}

		[Token(Token = "0x20001CA")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE032D0", Offset = "0xE032D0")]
		public class ContextDefinedOutputsAttribute : Attribute
		{
			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type[] types;

			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x27302C4", Offset = "0x27302C4", VA = "0x27302C4")]
			public ContextDefinedOutputsAttribute(params Type[] types)
			{
			}
		}

		[Token(Token = "0x20001CB")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE032E4", Offset = "0xE032E4")]
		public class HasRefreshButtonAttribute : Attribute
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x2730348", Offset = "0x2730348", VA = "0x2730348")]
			public HasRefreshButtonAttribute()
			{
			}
		}

		[Token(Token = "0x20001CC")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE032F8", Offset = "0xE032F8")]
		public class GatherPortsCallbackAttribute : CallbackAttribute
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x27302F8", Offset = "0x27302F8", VA = "0x27302F8")]
			public GatherPortsCallbackAttribute()
			{
			}
		}

		[Token(Token = "0x20001CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0330C", Offset = "0xE0330C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowNode <>4__this;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ID;

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x2730090", Offset = "0x2730090", VA = "0x2730090")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x2730098", Offset = "0x2730098", VA = "0x2730098")]
			internal bool <GetInputPort>b__0(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0331C", Offset = "0xE0331C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowNode <>4__this;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ID;

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x27300BC", Offset = "0x27300BC", VA = "0x27300BC")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x27300C4", Offset = "0x27300C4", VA = "0x27300C4")]
			internal bool <GetOutputPort>b__0(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0332C", Offset = "0xE0332C")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x27300E8", Offset = "0x27300E8", VA = "0x27300E8")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x27300F0", Offset = "0x27300F0", VA = "0x27300F0")]
			internal bool <GetFirstInputOfType>b__1(Port p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0333C", Offset = "0xE0333C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Port, int> <>9__45_0;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Port, int> <>9__46_0;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ValueInput, bool> <>9__47_0;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<string, object>, string> <>9__70_0;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<KeyValuePair<string, object>, object> <>9__70_1;

			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x272FEC8", Offset = "0x272FEC8", VA = "0x272FEC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x272FED0", Offset = "0x272FED0", VA = "0x272FED0")]
			internal int <GetFirstInputOfType>b__45_0(Port p)
			{
				return default(int);
			}

			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x272FF4C", Offset = "0x272FF4C", VA = "0x272FF4C")]
			internal int <GetFirstOutputOfType>b__46_0(Port p)
			{
				return default(int);
			}

			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x272FFC8", Offset = "0x272FFC8", VA = "0x272FFC8")]
			internal bool <AssignSelfInstancePort>b__47_0(ValueInput p)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x2730010", Offset = "0x2730010", VA = "0x2730010")]
			internal string <ReplaceWith>b__70_0(KeyValuePair<string, object> k)
			{
				return null;
			}

			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x2730050", Offset = "0x2730050", VA = "0x2730050")]
			internal object <ReplaceWith>b__70_1(KeyValuePair<string, object> v)
			{
				return null;
			}
		}

		[Token(Token = "0x20001D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0334C", Offset = "0xE0334C")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x2730188", Offset = "0x2730188", VA = "0x2730188")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x2730190", Offset = "0x2730190", VA = "0x2730190")]
			internal bool <GetFirstOutputOfType>b__1(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0335C", Offset = "0xE0335C")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, object> pair;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowNode <>4__this;

			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x2730228", Offset = "0x2730228", VA = "0x2730228")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x2730230", Offset = "0x2730230", VA = "0x2730230")]
			internal bool <DeserializeInputPortValues>b__0(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Dictionary<string, object> _inputPortValues;

		[NonSerialized]
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, Port> inputPorts;

		[NonSerialized]
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<string, Port> outputPorts;

		[Token(Token = "0x1700014F")]
		public sealed override int maxInConnections
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x292BAD4", Offset = "0x292BAD4", VA = "0x292BAD4", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000150")]
		public sealed override int maxOutConnections
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x292BADC", Offset = "0x292BADC", VA = "0x292BADC", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000151")]
		public sealed override bool allowAsPrime
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x292BAE4", Offset = "0x292BAE4", VA = "0x292BAE4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		public sealed override bool canSelfConnect
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x292BAEC", Offset = "0x292BAEC", VA = "0x292BAEC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x292BAF4", Offset = "0x292BAF4", VA = "0x292BAF4", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x292BB6C", Offset = "0x292BB6C", VA = "0x292BB6C", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000155")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x292BB74", Offset = "0x292BB74", VA = "0x292BB74", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000156")]
		public FlowGraph flowGraph
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x292BB7C", Offset = "0x292BB7C", VA = "0x292BB7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		protected string SPACE
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x292BBF8", Offset = "0x292BBF8", VA = "0x292BBF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public virtual bool ignoreSelfInstancePortAssignment
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x292BC3C", Offset = "0x292BC3C", VA = "0x292BC3C", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x292BC44", Offset = "0x292BC44", VA = "0x292BC44", Slot = "40")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x292C0A0", Offset = "0x292C0A0", VA = "0x292C0A0", Slot = "41")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x292C0A4", Offset = "0x292C0A4", VA = "0x292C0A4", Slot = "27")]
		public sealed override void OnValidate(Graph flowGraph)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x292C278", Offset = "0x292C278", VA = "0x292C278", Slot = "29")]
		public sealed override void OnParentConnected(int i)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x292C27C", Offset = "0x292C27C", VA = "0x292C27C", Slot = "31")]
		public sealed override void OnChildConnected(int i)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x292C280", Offset = "0x292C280", VA = "0x292C280", Slot = "30")]
		public sealed override void OnParentDisconnected(int i)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x292C284", Offset = "0x292C284", VA = "0x292C284", Slot = "32")]
		public sealed override void OnChildDisconnected(int i)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x292C288", Offset = "0x292C288", VA = "0x292C288", Slot = "43")]
		public virtual void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x292C3CC", Offset = "0x292C3CC", VA = "0x292C3CC", Slot = "44")]
		public virtual void OnPortDisconnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x292AEB8", Offset = "0x292AEB8", VA = "0x292AEB8")]
		public void BindPorts()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x292C4B0", Offset = "0x292C4B0", VA = "0x292C4B0")]
		public void UnBindPorts()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x292C5B4", Offset = "0x292C5B4", VA = "0x292C5B4")]
		public Port GetInputPort(string ID)
		{
			return null;
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x292C738", Offset = "0x292C738", VA = "0x292C738")]
		public Port GetOutputPort(string ID)
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x292C8BC", Offset = "0x292C8BC", VA = "0x292C8BC")]
		public IEnumerable<Port> GetAllPorts()
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x292C94C", Offset = "0x292C94C", VA = "0x292C94C")]
		public IEnumerable<FlowOutput> GetOutputFlowPorts()
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x292C9BC", Offset = "0x292C9BC", VA = "0x292C9BC")]
		public IEnumerable<ValueOutput> GetOutputValuePorts()
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x292CA2C", Offset = "0x292CA2C", VA = "0x292CA2C")]
		public IEnumerable<FlowInput> GetInputFlowPorts()
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x292CA9C", Offset = "0x292CA9C", VA = "0x292CA9C")]
		public IEnumerable<ValueInput> GetInputValuePorts()
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x292CB0C", Offset = "0x292CB0C", VA = "0x292CB0C")]
		public Port GetFirstInputOfType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x292CD2C", Offset = "0x292CD2C", VA = "0x292CD2C")]
		public Port GetFirstOutputOfType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x292AFBC", Offset = "0x292AFBC", VA = "0x292AFBC")]
		public void AssignSelfInstancePort()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x292C0A8", Offset = "0x292C0A8", VA = "0x292C0A8")]
		public void GatherPorts()
		{
		}

		[Token(Token = "0x6000BC3")]
		protected abstract void RegisterPorts();

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x292D344", Offset = "0x292D344", VA = "0x292D344")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE278BC", Offset = "0xE278BC")]
		private void ValidateConnections()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x292CF4C", Offset = "0x292CF4C", VA = "0x292CF4C")]
		private void DeserializeInputPortValues()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x292D348", Offset = "0x292D348", VA = "0x292D348")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE278F4", Offset = "0xE278F4")]
		private void RefreshEditorPorts()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x292D34C", Offset = "0x292D34C", VA = "0x292D34C")]
		public FlowInput AddFlowInput(string name, string ID, FlowHandler pointer)
		{
			return null;
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x2928024", Offset = "0x2928024", VA = "0x2928024")]
		public FlowInput AddFlowInput(string name, FlowHandler pointer, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x2928240", Offset = "0x2928240", VA = "0x2928240")]
		public FlowOutput AddFlowOutput(string name, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BCA")]
		public ValueInput<T> AddValueInput<T>(string name, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BCB")]
		public ValueOutput<T> AddValueOutput<T>(string name, string ID, ValueHandler<T> getter)
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		public ValueOutput<T> AddValueOutput<T>(string name, ValueHandler<T> getter, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x292D4E8", Offset = "0x292D4E8", VA = "0x292D4E8")]
		public ValueInput AddValueInput(string name, string ID, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x292D4F8", Offset = "0x292D4F8", VA = "0x292D4F8")]
		public ValueInput AddValueInput(string name, Type type, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x292D600", Offset = "0x292D600", VA = "0x292D600")]
		public ValueOutput AddValueOutput(string name, string ID, Type type, ValueHandlerObject getter)
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x292D614", Offset = "0x292D614", VA = "0x292D614")]
		public ValueOutput AddValueOutput(string name, Type type, ValueHandlerObject getter, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x292D35C", Offset = "0x292D35C", VA = "0x292D35C")]
		private void QualifyPortNameAndID(ref string name, ref string ID, IDictionary dict)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x292D724", Offset = "0x292D724", VA = "0x292D724")]
		private bool CheckReverseIDEquality(Port port, string requestedID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x292D84C", Offset = "0x292D84C", VA = "0x292D84C")]
		public void TryAddReflectionBasedRegistrationForObject(object instance)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x292DA90", Offset = "0x292DA90", VA = "0x292DA90")]
		public FlowInput TryAddMethodFlowInput(MethodInfo method, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x292E158", Offset = "0x292E158", VA = "0x292E158")]
		public FlowOutput TryAddFieldDelegateFlowOutput(FieldInfo field, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x292E32C", Offset = "0x292E32C", VA = "0x292E32C")]
		public ValueInput TryAddFieldDelegateValueInput(FieldInfo field, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x292DCE8", Offset = "0x292DCE8", VA = "0x292DCE8")]
		public ValueOutput TryAddPropertyValueOutput(PropertyInfo prop, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x292E8B8", Offset = "0x292E8B8", VA = "0x292E8B8")]
		public FlowNode ReplaceWith(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x292C3D0", Offset = "0x292C3D0", VA = "0x292C3D0")]
		private void TryRemovePortIfMissingAndClean(Port port)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x292EC3C", Offset = "0x292EC3C", VA = "0x292EC3C", Slot = "46")]
		public virtual Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x292C2F0", Offset = "0x292C2F0", VA = "0x292C2F0")]
		private void TryHandleWildPortConnection(Type currentType, Type targetType)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x292ECB4", Offset = "0x292ECB4", VA = "0x292ECB4")]
		public static Type TryGetNewGenericTypeForWild(Type wildType, Type currentType, Type targetType, Type content, Type context)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x292F020", Offset = "0x292F020", VA = "0x292F020")]
		public static MethodInfo TryGetNewGenericMethodForWild(Type wildType, Type currentType, Type targetType, MethodInfo content)
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x292A18C", Offset = "0x292A18C", VA = "0x292A18C")]
		protected FlowNode()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0336C", Offset = "0xE0336C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE0336C", Offset = "0xE0336C")]
	public abstract class FlowNodeNested<T> : FlowNode, IGraphAssignable<T>, IGraphAssignable, IGraphElement where T : Graph
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<BBMappingParameter> _variablesMap;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E950", Offset = "0xE1E950")]
		private T <currentInstance>k__BackingField;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E960", Offset = "0xE1E960")]
		private Dictionary<Graph, Graph> <instances>k__BackingField;

		[Token(Token = "0x17000159")]
		public abstract T subGraph
		{
			[Token(Token = "0x6000BF4")]
			get;
			[Token(Token = "0x6000BF5")]
			set;
		}

		[Token(Token = "0x1700015A")]
		public abstract BBParameter subGraphParameter
		{
			[Token(Token = "0x6000BF6")]
			get;
		}

		[Token(Token = "0x1700015B")]
		public T currentInstance
		{
			[Token(Token = "0x6000BF7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2792C", Offset = "0xE2792C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2793C", Offset = "0xE2793C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public Dictionary<Graph, Graph> instances
		{
			[Token(Token = "0x6000BF9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2794C", Offset = "0xE2794C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2795C", Offset = "0xE2795C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public List<BBMappingParameter> variablesMap
		{
			[Token(Token = "0x6000BFB")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		private Graph NodeCanvas.Framework.IGraphAssignable.subGraph
		{
			[Token(Token = "0x6000BFD")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFE")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		private Graph NodeCanvas.Framework.IGraphAssignable.currentInstance
		{
			[Token(Token = "0x6000BFF")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C00")]
			set
			{
			}
		}

		[Token(Token = "0x6000C01")]
		protected FlowNodeNested()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE033CC", Offset = "0xE033CC")]
	public class FlowScript : FlowScriptBase
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x292F4F4", Offset = "0x292F4F4", VA = "0x292F4F4")]
		public FlowScript()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public abstract class FlowScriptBase : FlowGraph
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x292F4FC", Offset = "0x292F4FC", VA = "0x292F4FC")]
		protected FlowScriptBase()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE03410", Offset = "0xE03410")]
	public class FlowScriptController : GraphOwner<FlowScript>
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x292F504", Offset = "0x292F504", VA = "0x292F504")]
		public void CallFunction(string name)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x292F60C", Offset = "0x292F60C", VA = "0x292F60C")]
		public object CallFunction(string name, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x292F67C", Offset = "0x292F67C", VA = "0x292F67C")]
		public void CallFunctionAsync(string name, Action<object> callback, params object[] args)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x292F6FC", Offset = "0x292F6FC", VA = "0x292F6FC")]
		public FlowScriptController()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public interface IEditorMenuCallbackReceiver
	{
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE03448", Offset = "0xE03448")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE03448", Offset = "0xE03448")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03448", Offset = "0xE03448")]
	public class RenderImageEvent : RouterEventNode<Camera>
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RenderTexture t1;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RenderTexture t2;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x2B3A8F4", Offset = "0x2B3A8F4", VA = "0x2B3A8F4", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x2B3A99C", Offset = "0x2B3A99C", VA = "0x2B3A99C", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x2B3AA44", Offset = "0x2B3AA44", VA = "0x2B3AA44")]
		private void OnRenderImage(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x2B3AAC0", Offset = "0x2B3AAC0", VA = "0x2B3AAC0", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x2B3AC3C", Offset = "0x2B3AC3C", VA = "0x2B3AC3C")]
		public RenderImageEvent()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x2B3AC88", Offset = "0x2B3AC88", VA = "0x2B3AC88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2796C", Offset = "0xE2796C")]
		private RenderTexture <RegisterPorts>b__6_0()
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x2B3AC90", Offset = "0x2B3AC90", VA = "0x2B3AC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2797C", Offset = "0xE2797C")]
		private RenderTexture <RegisterPorts>b__6_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20001D9")]
	[SpoofAOT]
	public abstract class Port
	{
		[Token(Token = "0x20001DA")]
		public enum BindStatus
		{
			[Token(Token = "0x4000B35")]
			Valid,
			[Token(Token = "0x4000B36")]
			Missing,
			[Token(Token = "0x4000B37")]
			InvalidCast
		}

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E970", Offset = "0xE1E970")]
		private FlowNode <parent>k__BackingField;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E980", Offset = "0xE1E980")]
		private string <ID>k__BackingField;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E990", Offset = "0xE1E990")]
		private string <name>k__BackingField;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9A0", Offset = "0xE1E9A0")]
		private int <connections>k__BackingField;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9B0", Offset = "0xE1E9B0")]
		private BindStatus <bindStatus>k__BackingField;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9C0", Offset = "0xE1E9C0")]
		private GUIContent <displayContent>k__BackingField;

		[Token(Token = "0x17000160")]
		public FlowNode parent
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x26AB434", Offset = "0x26AB434", VA = "0x26AB434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2798C", Offset = "0xE2798C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x26AB43C", Offset = "0x26AB43C", VA = "0x26AB43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2799C", Offset = "0xE2799C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public string ID
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x26AB444", Offset = "0x26AB444", VA = "0x26AB444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279AC", Offset = "0xE279AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x26AB44C", Offset = "0x26AB44C", VA = "0x26AB44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279BC", Offset = "0xE279BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public string name
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x26AB454", Offset = "0x26AB454", VA = "0x26AB454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279CC", Offset = "0xE279CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x26AB45C", Offset = "0x26AB45C", VA = "0x26AB45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279DC", Offset = "0xE279DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public int connections
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x26AB464", Offset = "0x26AB464", VA = "0x26AB464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279EC", Offset = "0xE279EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x26AB46C", Offset = "0x26AB46C", VA = "0x26AB46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279FC", Offset = "0xE279FC")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public bool isConnected
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x26AB474", Offset = "0x26AB474", VA = "0x26AB474")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		internal BindStatus bindStatus
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x26AB484", Offset = "0x26AB484", VA = "0x26AB484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A0C", Offset = "0xE27A0C")]
			get
			{
				return default(BindStatus);
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x26AB48C", Offset = "0x26AB48C", VA = "0x26AB48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A1C", Offset = "0xE27A1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000166")]
		internal GUIContent displayContent
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x26AB494", Offset = "0x26AB494", VA = "0x26AB494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A2C", Offset = "0xE27A2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x26AB49C", Offset = "0x26AB49C", VA = "0x26AB49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A3C", Offset = "0xE27A3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public abstract Type type
		{
			[Token(Token = "0x6000C1E")]
			get;
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x26AB3C8", Offset = "0x26AB3C8", VA = "0x26AB3C8")]
		public Port()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x26AB3D0", Offset = "0x26AB3D0", VA = "0x26AB3D0")]
		public Port(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x26AB4A4", Offset = "0x26AB4A4", VA = "0x26AB4A4")]
		internal Port FlagMissing()
		{
			return null;
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x26AB4D8", Offset = "0x26AB4D8", VA = "0x26AB4D8")]
		internal Port FlagInvalidCast()
		{
			return null;
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x26AB50C", Offset = "0x26AB50C", VA = "0x26AB50C")]
		internal Port FlagValid()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x26AB53C", Offset = "0x26AB53C", VA = "0x26AB53C")]
		public bool CanAcceptConnections()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x26AB67C", Offset = "0x26AB67C", VA = "0x26AB67C")]
		public IEnumerable<BinderConnection> GetPortConnections()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x26AB86C", Offset = "0x26AB86C", VA = "0x26AB86C")]
		public BinderConnection GetFirstInputConnection()
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x26AB950", Offset = "0x26AB950", VA = "0x26AB950")]
		public BinderConnection GetFirstOutputConnection()
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x26ABA34", Offset = "0x26ABA34", VA = "0x26ABA34")]
		public bool IsFlowPort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x26ABAF0", Offset = "0x26ABAF0", VA = "0x26ABAF0")]
		public bool IsValuePort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x26AB7B0", Offset = "0x26AB7B0", VA = "0x26AB7B0")]
		public bool IsInputPort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x26ABBAC", Offset = "0x26ABBAC", VA = "0x26ABBAC")]
		public bool IsOutputPort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x26ABC68", Offset = "0x26ABC68", VA = "0x26ABC68")]
		public bool IsUnityObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x26ABD3C", Offset = "0x26ABD3C", VA = "0x26ABD3C")]
		public bool IsUnitySceneObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x26ABE94", Offset = "0x26ABE94", VA = "0x26ABE94")]
		public bool IsDelegate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x26ABF68", Offset = "0x26ABF68", VA = "0x26ABF68")]
		public bool IsEnumerableCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x26ABFE4", Offset = "0x26ABFE4", VA = "0x26ABFE4")]
		public bool IsWild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x26AC088", Offset = "0x26AC088", VA = "0x26AC088", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x26AC0F0", Offset = "0x26AC0F0", VA = "0x26AC0F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A4C", Offset = "0xE27A4C")]
		private bool <GetPortConnections>b__35_0(BinderConnection c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x26AC128", Offset = "0x26AC128", VA = "0x26AC128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A5C", Offset = "0xE27A5C")]
		private bool <GetPortConnections>b__35_1(BinderConnection c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x26AC160", Offset = "0x26AC160", VA = "0x26AC160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A6C", Offset = "0xE27A6C")]
		private bool <GetFirstInputConnection>b__36_0(BinderConnection c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x26AC198", Offset = "0x26AC198", VA = "0x26AC198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A7C", Offset = "0xE27A7C")]
		private bool <GetFirstOutputConnection>b__37_0(BinderConnection c)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001DB")]
	public class FlowInput : Port
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9D0", Offset = "0xE1E9D0")]
		private FlowHandler <pointer>k__BackingField;

		[Token(Token = "0x17000168")]
		public FlowHandler pointer
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x292BA00", Offset = "0x292BA00", VA = "0x292BA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A8C", Offset = "0xE27A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x292BA08", Offset = "0x292BA08", VA = "0x292BA08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A9C", Offset = "0xE27A9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public override Type type
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x292BA10", Offset = "0x292BA10", VA = "0x292BA10", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x292B9CC", Offset = "0x292B9CC", VA = "0x292B9CC")]
		public FlowInput(FlowNode parent, string name, string ID, FlowHandler pointer)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class FlowOutput : Port
	{
		[Token(Token = "0x1700016A")]
		public override Type type
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x292F40C", Offset = "0x292F40C", VA = "0x292F40C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000001")]
		public event FlowHandler pointer
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x292F2CC", Offset = "0x292F2CC", VA = "0x292F2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27AAC", Offset = "0xE27AAC")]
			add
			{
			}
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x292F36C", Offset = "0x292F36C", VA = "0x292F36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27ABC", Offset = "0xE27ABC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x292D4E0", Offset = "0x292D4E0", VA = "0x292D4E0")]
		public FlowOutput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x29284D8", Offset = "0x29284D8", VA = "0x29284D8")]
		public void Call(Flow f)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x292F484", Offset = "0x292F484", VA = "0x292F484")]
		public void BindTo(FlowInput target)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x292F4A0", Offset = "0x292F4A0", VA = "0x292F4A0")]
		public void Append(FlowHandler callback)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x292F4A4", Offset = "0x292F4A4", VA = "0x292F4A4")]
		public void UnBind()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public abstract class ValueInput : Port
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9F0", Offset = "0xE1E9F0")]
		private bool <skipSelfInstanceAssignment>k__BackingField;

		[Token(Token = "0x1700016B")]
		public object value
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x27BB534", Offset = "0x27BB534", VA = "0x27BB534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public bool skipSelfInstanceAssignment
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x27C407C", Offset = "0x27C407C", VA = "0x27C407C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27ACC", Offset = "0xE27ACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x27C4084", Offset = "0x27C4084", VA = "0x27C4084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27ADC", Offset = "0xE27ADC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public abstract object defaultValue
		{
			[Token(Token = "0x6000C48")]
			get;
			[Token(Token = "0x6000C49")]
			set;
		}

		[Token(Token = "0x1700016E")]
		public abstract object serializedValue
		{
			[Token(Token = "0x6000C4A")]
			get;
			[Token(Token = "0x6000C4B")]
			set;
		}

		[Token(Token = "0x1700016F")]
		public abstract bool isDefaultValue
		{
			[Token(Token = "0x6000C4C")]
			get;
		}

		[Token(Token = "0x17000170")]
		public abstract override Type type
		{
			[Token(Token = "0x6000C4D")]
			get;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x27C3DB0", Offset = "0x27C3DB0", VA = "0x27C3DB0")]
		public ValueInput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000C41")]
		public static ValueInput<T> CreateInstance<T>(FlowNode parent, string name, string ID)
		{
			return null;
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x27C3DB8", Offset = "0x27C3DB8", VA = "0x27C3DB8")]
		public static ValueInput CreateInstance(Type t, FlowNode parent, string name, string ID)
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x27C402C", Offset = "0x27C402C", VA = "0x27C402C")]
		public ValueInput SetDefaultAndSerializedValue(object v)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x27C4070", Offset = "0x27C4070", VA = "0x27C4070")]
		public ValueInput SkipSelfInstanceAssignment(bool skip)
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		public abstract void BindTo(ValueOutput target);

		[Token(Token = "0x6000C4F")]
		public abstract void UnBind();

		[Token(Token = "0x6000C50")]
		public abstract object GetObjectValue();
	}
	[Token(Token = "0x20001DE")]
	public class ValueInput<T> : ValueInput
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> callback;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _defaultValue;

		[Token(Token = "0x17000171")]
		public new T value
		{
			[Token(Token = "0x6000C54")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000172")]
		public override object defaultValue
		{
			[Token(Token = "0x6000C55")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C56")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public override object serializedValue
		{
			[Token(Token = "0x6000C57")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C58")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public override bool isDefaultValue
		{
			[Token(Token = "0x6000C59")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		public override Type type
		{
			[Token(Token = "0x6000C5A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000002")]
		public event ValueHandler<T> getter
		{
			[Token(Token = "0x6000C52")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27AEC", Offset = "0xE27AEC")]
			add
			{
			}
			[Token(Token = "0x6000C53")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27AFC", Offset = "0xE27AFC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C51")]
		public ValueInput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000C5B")]
		public ValueInput<T> SetDefaultAndSerializedValue(T v)
		{
			return null;
		}

		[Token(Token = "0x6000C5C")]
		public T GetValue()
		{
			return (T)null;
		}

		[Token(Token = "0x6000C5D")]
		public override object GetObjectValue()
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		public override void BindTo(ValueOutput source)
		{
		}

		[Token(Token = "0x6000C5F")]
		public void Append(Action<T> callback)
		{
		}

		[Token(Token = "0x6000C60")]
		public override void UnBind()
		{
		}

		[Token(Token = "0x6000C61")]
		public static explicit operator T(ValueInput<T> port)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001DF")]
	public abstract class ValueOutput : Port
	{
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x27C4090", Offset = "0x27C4090", VA = "0x27C4090")]
		public ValueOutput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000C63")]
		public static ValueOutput<T> CreateInstance<T>(FlowNode parent, string name, string ID, ValueHandler<T> getter)
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x27C4098", Offset = "0x27C4098", VA = "0x27C4098")]
		public static ValueOutput CreateInstance(Type t, FlowNode parent, string name, string ID, ValueHandlerObject getter)
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		public abstract object GetObjectValue();
	}
	[Token(Token = "0x20001E0")]
	public class ValueOutput<T> : ValueOutput
	{
		[Token(Token = "0x20001E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE034E0", Offset = "0xE034E0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueHandlerObject getter;

			[Token(Token = "0x6000C6D")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000C6E")]
			internal T <.ctor>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA10", Offset = "0xE1EA10")]
		private ValueHandler<T> <getter>k__BackingField;

		[Token(Token = "0x17000176")]
		public ValueHandler<T> getter
		{
			[Token(Token = "0x6000C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B0C", Offset = "0xE27B0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C69")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B1C", Offset = "0xE27B1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public override Type type
		{
			[Token(Token = "0x6000C6B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C66")]
		public ValueOutput(FlowNode parent, string name, string ID, ValueHandler<T> getter)
		{
		}

		[Token(Token = "0x6000C67")]
		public ValueOutput(FlowNode parent, string name, string ID, ValueHandlerObject getter)
		{
		}

		[Token(Token = "0x6000C6A")]
		public override object GetObjectValue()
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		public static explicit operator T(ValueOutput<T> port)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001E2")]
	[SpoofAOT]
	public static class TypeConverter
	{
		[Token(Token = "0x20001E3")]
		public delegate ValueHandler<object> CustomConverter(Type sourceType, Type targetType, ValueHandler<object> func);

		[Token(Token = "0x20001E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03500", Offset = "0xE03500")]
		private sealed class <>c__DisplayClass4_0<T>
		{
			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueHandler<object> func;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type targetType;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnaryExpression exp;

			[Token(Token = "0x6000C79")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000C7A")]
			internal T <GetConverterFuncFromTo>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C7B")]
			internal T <GetConverterFuncFromTo>b__1()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C7C")]
			internal T <GetConverterFuncFromTo>b__2()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C7D")]
			internal T <GetConverterFuncFromTo>b__3()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C7E")]
			internal T <GetConverterFuncFromTo>b__4()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C7F")]
			internal T <GetConverterFuncFromTo>b__5()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C80")]
			internal T <GetConverterFuncFromTo>b__6()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C81")]
			internal T <GetConverterFuncFromTo>b__7()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C82")]
			internal T <GetConverterFuncFromTo>b__8()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C83")]
			internal T <GetConverterFuncFromTo>b__9()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C84")]
			internal T <GetConverterFuncFromTo>b__10()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C85")]
			internal T <GetConverterFuncFromTo>b__11()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C86")]
			internal T <GetConverterFuncFromTo>b__12()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C87")]
			internal T <GetConverterFuncFromTo>b__13()
			{
				return (T)null;
			}

			[Token(Token = "0x6000C88")]
			internal T <GetConverterFuncFromTo>b__14()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20001E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03510", Offset = "0xE03510")]
		private sealed class <>c__DisplayClass4_1<T>
		{
			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueHandler<object> converter;

			[Token(Token = "0x6000C89")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6000C8A")]
			internal T <GetConverterFuncFromTo>b__15()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20001E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03520", Offset = "0xE03520")]
		private sealed class <>c__DisplayClass4_2<T>
		{
			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type listType;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0<T> CS$<>8__locals1;

			[Token(Token = "0x6000C8B")]
			public <>c__DisplayClass4_2()
			{
			}

			[Token(Token = "0x6000C8C")]
			internal T <GetConverterFuncFromTo>b__16()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20001E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03530", Offset = "0xE03530")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object obj;

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x31326BC", Offset = "0x31326BC", VA = "0x31326BC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x31326C4", Offset = "0x31326C4", VA = "0x31326C4")]
			internal object <QuickConvert>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x14000003")]
		public static event CustomConverter customConverter
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x27B60BC", Offset = "0x27B60BC", VA = "0x27B60BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B2C", Offset = "0xE27B2C")]
			add
			{
			}
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x27B6178", Offset = "0x27B6178", VA = "0x27B6178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B3C", Offset = "0xE27B3C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C71")]
		public static ValueHandler<T> GetConverterFuncFromTo<T>(Type sourceType, Type targetType, ValueHandler<object> func)
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x27B6234", Offset = "0x27B6234", VA = "0x27B6234")]
		public static bool HasConvertion(Type sourceType, Type targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		public static T QuickConvert<T>(object obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x27B6338", Offset = "0x27B6338", VA = "0x27B6338")]
		public static object QuickConvert(object obj, Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	public class Wild
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x2D1130C", Offset = "0x2D1130C", VA = "0x2D1130C")]
		public Wild()
		{
		}
	}
}
namespace FlowCanvas.Nodes
{
	[Token(Token = "0x20001E9")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE03540", Offset = "0xE03540")]
	public class ExternalImplementedNodeWrapper : FlowNode
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UnityEngine.Object _target;

		[Token(Token = "0x17000178")]
		public IExternalImplementedNode target
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x28CE2E4", Offset = "0x28CE2E4", VA = "0x28CE2E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x28CE330", Offset = "0x28CE330", VA = "0x28CE330")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public override string name
		{
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x28CE3E8", Offset = "0x28CE3E8", VA = "0x28CE3E8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x28CE480", Offset = "0x28CE480", VA = "0x28CE480")]
		protected Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x28CE494", Offset = "0x28CE494", VA = "0x28CE494", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x28CE59C", Offset = "0x28CE59C", VA = "0x28CE59C")]
		public void SetTarget(IExternalImplementedNode target)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x28CE5A0", Offset = "0x28CE5A0", VA = "0x28CE5A0")]
		public ExternalImplementedNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public interface IDropedReferenceNode : IGraphElement
	{
		[Token(Token = "0x6000C97")]
		void SetTarget(UnityEngine.Object target);
	}
	[Token(Token = "0x20001EB")]
	public interface IExternalImplementedNode
	{
		[Token(Token = "0x6000C98")]
		void RegisterPorts(FlowNode parent);
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE035A4", Offset = "0xE035A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE035A4", Offset = "0xE035A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE035A4", Offset = "0xE035A4")]
	public class ApplicationPauseEvent : EventNode
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput pause;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isPause;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x2AA72F4", Offset = "0x2AA72F4", VA = "0x2AA72F4", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x2AA73A8", Offset = "0x2AA73A8", VA = "0x2AA73A8", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x2AA745C", Offset = "0x2AA745C", VA = "0x2AA745C")]
		private void ApplicationPause(bool isPause)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x2AA74BC", Offset = "0x2AA74BC", VA = "0x2AA74BC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x2AA75D4", Offset = "0x2AA75D4", VA = "0x2AA75D4")]
		public ApplicationPauseEvent()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x2AA75DC", Offset = "0x2AA75DC", VA = "0x2AA75DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B4C", Offset = "0xE27B4C")]
		private bool <RegisterPorts>b__5_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0362C", Offset = "0xE0362C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0362C", Offset = "0xE0362C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0362C", Offset = "0xE0362C")]
	public class ApplicationQuitEvent : EventNode
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput quit;

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x2AA7628", Offset = "0x2AA7628", VA = "0x2AA7628", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x2AA76C8", Offset = "0x2AA76C8", VA = "0x2AA76C8", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x2AA7768", Offset = "0x2AA7768", VA = "0x2AA7768")]
		private void ApplicationQuit()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x2AA77BC", Offset = "0x2AA77BC", VA = "0x2AA77BC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x2AA7834", Offset = "0x2AA7834", VA = "0x2AA7834")]
		public ApplicationQuitEvent()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE036B4", Offset = "0xE036B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE036B4", Offset = "0xE036B4")]
	public class CSharpAutoCallbackEvent : EventNode, IReflectedWrapper
	{
		[Token(Token = "0x20001EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03728", Offset = "0xE03728")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CSharpAutoCallbackEvent <>4__this;

			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x272973C", Offset = "0x272973C", VA = "0x272973C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x2729744", Offset = "0x2729744", VA = "0x2729744")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SerializedEventInfo _event;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ReflectedDelegateEvent reflectedEvent;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput instancePort;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput callback;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private object instance;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private object[] args;

		[Token(Token = "0x1700017A")]
		private EventInfo eventInfo
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x2DF8E50", Offset = "0x2DF8E50", VA = "0x2DF8E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private bool isStaticEvent
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x2DF8E5C", Offset = "0x2DF8E5C", VA = "0x2DF8E5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public override string name
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x2DF8F00", Offset = "0x2DF8F00", VA = "0x2DF8F00", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x2DF9088", Offset = "0x2DF9088", VA = "0x2DF9088", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x2DF9090", Offset = "0x2DF9090", VA = "0x2DF9090")]
		public void SetEvent(EventInfo info, [Optional] object instance)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x2DF9110", Offset = "0x2DF9110", VA = "0x2DF9110", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x2DF94C4", Offset = "0x2DF94C4", VA = "0x2DF94C4", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x2DF962C", Offset = "0x2DF962C", VA = "0x2DF962C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x2DF9738", Offset = "0x2DF9738", VA = "0x2DF9738")]
		private void OnEventRaised(params object[] args)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x2DF97A4", Offset = "0x2DF97A4", VA = "0x2DF97A4")]
		public CSharpAutoCallbackEvent()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE03738", Offset = "0xE03738")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03738", Offset = "0xE03738")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE03738", Offset = "0xE03738")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE03738", Offset = "0xE03738")]
	public class CSharpEventCallback : EventNode, IReflectedWrapper
	{
		[Token(Token = "0x20001F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0383C", Offset = "0xE0383C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CSharpEventCallback <>4__this;

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x272978C", Offset = "0x272978C", VA = "0x272978C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x2729794", Offset = "0x2729794", VA = "0x2729794")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1EA50", Offset = "0xE1EA50")]
		[SerializeField]
		[GatherPortsCallback]
		[ExposeField]
		protected bool _autoHandleRegistration;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object[] argValues;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput eventInput;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput flowCallback;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ReflectedDelegateEvent reflectedEvent;

		[Token(Token = "0x1700017D")]
		private Type type
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x2DF97AC", Offset = "0x2DF97AC", VA = "0x2DF97AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x2DF97B8", Offset = "0x2DF97B8", VA = "0x2DF97B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		private bool autoHandleRegistration
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x2DF9890", Offset = "0x2DF9890", VA = "0x2DF9890")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x2DF9898", Offset = "0x2DF9898", VA = "0x2DF9898", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x2DF98A0", Offset = "0x2DF98A0", VA = "0x2DF98A0", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x2DF99F0", Offset = "0x2DF99F0", VA = "0x2DF99F0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x2DF9B28", Offset = "0x2DF9B28", VA = "0x2DF9B28", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x2DF98B0", Offset = "0x2DF98B0", VA = "0x2DF98B0")]
		private void Register([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x2DF9A28", Offset = "0x2DF9A28", VA = "0x2DF9A28")]
		private void Unregister([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x2DFA04C", Offset = "0x2DFA04C", VA = "0x2DFA04C")]
		private void Callback(params object[] args)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x2DFA0B8", Offset = "0x2DFA0B8", VA = "0x2DFA0B8", Slot = "46")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x2DFA130", Offset = "0x2DFA130", VA = "0x2DFA130", Slot = "43")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x2DFA268", Offset = "0x2DFA268", VA = "0x2DFA268")]
		public CSharpEventCallback()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0384C", Offset = "0xE0384C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0384C", Offset = "0xE0384C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0384C", Offset = "0xE0384C")]
	public class CustomEvent : RouterEventNode<GraphOwner>
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[DelayedField]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1EACC", Offset = "0xE1EACC")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onReceived;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GraphOwner sender;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GraphOwner receiver;

		[Token(Token = "0x1700017F")]
		public override string name
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x2830970", Offset = "0x2830970", VA = "0x2830970", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x28309F8", Offset = "0x28309F8", VA = "0x28309F8", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x2830A8C", Offset = "0x2830A8C", VA = "0x2830A8C", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x2830B20", Offset = "0x2830B20", VA = "0x2830B20", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x2830C9C", Offset = "0x2830C9C", VA = "0x2830C9C")]
		private void OnCustomEvent(string eventName, IEventData msg)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x2830F28", Offset = "0x2830F28", VA = "0x2830F28")]
		public CustomEvent()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x2830FB8", Offset = "0x2830FB8", VA = "0x2830FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B5C", Offset = "0xE27B5C")]
		private GraphOwner <RegisterPorts>b__8_0()
		{
			return null;
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x2830FC0", Offset = "0x2830FC0", VA = "0x2830FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B6C", Offset = "0xE27B6C")]
		private GraphOwner <RegisterPorts>b__8_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE038D4", Offset = "0xE038D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE038D4", Offset = "0xE038D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE038D4", Offset = "0xE038D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE038D4", Offset = "0xE038D4")]
	public class CustomEvent<T> : RouterEventNode<GraphOwner>
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[DelayedField]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1EB04", Offset = "0xE1EB04")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput onReceived;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GraphOwner sender;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GraphOwner receiver;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T receivedValue;

		[Token(Token = "0x17000180")]
		public override string name
		{
			[Token(Token = "0x6000CC7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC8")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000CC9")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000CCA")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CCB")]
		private void OnCustomEvent(string eventName, IEventData msg)
		{
		}

		[Token(Token = "0x6000CCC")]
		public CustomEvent()
		{
		}

		[Token(Token = "0x6000CCD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B7C", Offset = "0xE27B7C")]
		private GraphOwner <RegisterPorts>b__9_0()
		{
			return null;
		}

		[Token(Token = "0x6000CCE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B8C", Offset = "0xE27B8C")]
		private GraphOwner <RegisterPorts>b__9_1()
		{
			return null;
		}

		[Token(Token = "0x6000CCF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B9C", Offset = "0xE27B9C")]
		private T <RegisterPorts>b__9_2()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE039D8", Offset = "0xE039D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE039D8", Offset = "0xE039D8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE039D8", Offset = "0xE039D8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE039D8", Offset = "0xE039D8")]
	public class DelegateCallbackEvent : EventNode, IReflectedWrapper
	{
		[Token(Token = "0x20001F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03B08", Offset = "0xE03B08")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DelegateCallbackEvent <>4__this;

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x272C138", Offset = "0x272C138", VA = "0x272C138")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x272C140", Offset = "0x272C140", VA = "0x272C140")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ReflectedDelegateEvent reflectedEvent;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueOutput delegatePort;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput callbackPort;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private object[] args;

		[Token(Token = "0x17000181")]
		private Type delegateType
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x283A0D8", Offset = "0x283A0D8", VA = "0x283A0D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x283A0E4", Offset = "0x283A0E4", VA = "0x283A0E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x283A1BC", Offset = "0x283A1BC", VA = "0x283A1BC", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x283A1C4", Offset = "0x283A1C4", VA = "0x283A1C4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x283A690", Offset = "0x283A690", VA = "0x283A690")]
		private void Callback(params object[] args)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x283A6FC", Offset = "0x283A6FC", VA = "0x283A6FC", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x283A708", Offset = "0x283A708", VA = "0x283A708", Slot = "43")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x283A840", Offset = "0x283A840", VA = "0x283A840")]
		public DelegateCallbackEvent()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x283A848", Offset = "0x283A848", VA = "0x283A848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BAC", Offset = "0xE27BAC")]
		private object <RegisterPorts>b__9_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F6")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03B18", Offset = "0xE03B18")]
	public class GetSharpEvent : FlowNode, IReflectedWrapper
	{
		[Token(Token = "0x20001F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03B64", Offset = "0xE03B64")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SharpEvent wrapper;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GetSharpEvent <>4__this;

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x2730F44", Offset = "0x2730F44", VA = "0x2730F44")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x2730F4C", Offset = "0x2730F4C", VA = "0x2730F4C")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SerializedEventInfo _event;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput instancePort;

		[Token(Token = "0x17000182")]
		private EventInfo eventInfo
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x29BCAB4", Offset = "0x29BCAB4", VA = "0x29BCAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public override string name
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x29BCAC0", Offset = "0x29BCAC0", VA = "0x29BCAC0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x29BCCA8", Offset = "0x29BCCA8", VA = "0x29BCCA8", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x29BCCB0", Offset = "0x29BCCB0", VA = "0x29BCCB0")]
		public void SetEvent(EventInfo info, [Optional] object instance)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x29BCD30", Offset = "0x29BCD30", VA = "0x29BCD30", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x29BCF84", Offset = "0x29BCF84", VA = "0x29BCF84")]
		public GetSharpEvent()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE03B74", Offset = "0xE03B74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03B74", Offset = "0xE03B74")]
	[HasRefreshButton]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE03B74", Offset = "0xE03B74")]
	public class InvokeSignal : FlowNode, IDropedReferenceNode, IGraphElement
	{
		[Token(Token = "0x20001F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03C2C", Offset = "0xE03C2C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InvokeSignal <>4__this;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput exit;

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x2EE0244", Offset = "0x2EE0244", VA = "0x2EE0244")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x2EE024C", Offset = "0x2EE024C", VA = "0x2EE024C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[GatherPortsCallback]
		public BBParameter<SignalDefinition> _signalDefinition;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[GatherPortsCallback]
		public bool global;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<Transform> target;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput[] inputArgs;

		[Token(Token = "0x17000184")]
		private SignalDefinition signalDefinition
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x2E35030", Offset = "0x2E35030", VA = "0x2E35030")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x2E35084", Offset = "0x2E35084", VA = "0x2E35084")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public override string name
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x2E350E8", Offset = "0x2E350E8", VA = "0x2E350E8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x2E351E8", Offset = "0x2E351E8", VA = "0x2E351E8", Slot = "47")]
		public void SetTarget(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x2E35284", Offset = "0x2E35284", VA = "0x2E35284", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x2E355AC", Offset = "0x2E355AC", VA = "0x2E355AC")]
		public InvokeSignal()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE03C3C", Offset = "0xE03C3C")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE03C3C", Offset = "0xE03C3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03C3C", Offset = "0xE03C3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE03C3C", Offset = "0xE03C3C")]
	[HasRefreshButton]
	public class SignalCallback : RouterEventNode<Transform>, IDropedReferenceNode, IGraphElement
	{
		[Token(Token = "0x20001FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03D08", Offset = "0xE03D08")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SignalCallback <>4__this;

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x312E9B8", Offset = "0x312E9B8", VA = "0x312E9B8")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x312E9C0", Offset = "0x312E9C0", VA = "0x312E9C0")]
			internal object <RegisterPorts>b__2()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[GatherPortsCallback]
		public BBParameter<SignalDefinition> _signalDefinition;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onReceived;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform receiver;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform sender;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private object[] args;

		[Token(Token = "0x17000186")]
		private SignalDefinition signalDefinition
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x25822C4", Offset = "0x25822C4", VA = "0x25822C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x2582318", Offset = "0x2582318", VA = "0x2582318")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public override string name
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x258237C", Offset = "0x258237C", VA = "0x258237C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x2582490", Offset = "0x2582490", VA = "0x2582490", Slot = "49")]
		public void SetTarget(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x258252C", Offset = "0x258252C", VA = "0x258252C", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x2582530", Offset = "0x2582530", VA = "0x2582530", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x2582534", Offset = "0x2582534", VA = "0x2582534", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x25827D8", Offset = "0x25827D8", VA = "0x25827D8", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x25828F4", Offset = "0x25828F4", VA = "0x25828F4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x2582C20", Offset = "0x2582C20", VA = "0x2582C20")]
		private void OnInvoked(Transform sender, Transform receiver, bool isGlobal, object[] args)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x2582D94", Offset = "0x2582D94", VA = "0x2582D94")]
		public SignalCallback()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x2582DE0", Offset = "0x2582DE0", VA = "0x2582DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BBC", Offset = "0xE27BBC")]
		private Transform <RegisterPorts>b__15_0()
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x2582DE8", Offset = "0x2582DE8", VA = "0x2582DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BCC", Offset = "0xE27BCC")]
		private Transform <RegisterPorts>b__15_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FC")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03D18", Offset = "0xE03D18")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE03D18", Offset = "0xE03D18")]
	public class UnityEventAutoCallbackEvent : EventNode, IReflectedWrapper
	{
		[Token(Token = "0x20001FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03D8C", Offset = "0xE03D8C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEventAutoCallbackEvent <>4__this;

			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x3133EDC", Offset = "0x3133EDC", VA = "0x3133EDC")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x3133EE4", Offset = "0x3133EE4", VA = "0x3133EE4")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE1EB8C", Offset = "0xE1EB8C")]
		private SerializedUnityEventInfo _eventMember;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ReflectedUnityEvent reflectedEvent;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UnityEventBase unityEvent;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput instancePort;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput callback;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private object[] args;

		[Token(Token = "0x17000188")]
		private MemberInfo member
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x27BAC88", Offset = "0x27BAC88", VA = "0x27BAC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private bool isStatic
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x27BACA0", Offset = "0x27BACA0", VA = "0x27BACA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018A")]
		private Type eventType
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x27BACB4", Offset = "0x27BACB4", VA = "0x27BACB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private FieldInfo field
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x27BACC8", Offset = "0x27BACC8", VA = "0x27BACC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private PropertyInfo prop
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x27BACD4", Offset = "0x27BACD4", VA = "0x27BACD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public override string name
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x27BACE0", Offset = "0x27BACE0", VA = "0x27BACE0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x27BAE68", Offset = "0x27BAE68", VA = "0x27BAE68", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x27BAE70", Offset = "0x27BAE70", VA = "0x27BAE70")]
		public void SetEvent(MemberInfo newMember, [Optional] object instance)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x27BAEF0", Offset = "0x27BAEF0", VA = "0x27BAEF0", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x27BB2CC", Offset = "0x27BB2CC", VA = "0x27BB2CC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x27BB540", Offset = "0x27BB540", VA = "0x27BB540", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x27BB5F0", Offset = "0x27BB5F0", VA = "0x27BB5F0")]
		private void OnEventRaised(params object[] args)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x27BB65C", Offset = "0x27BB65C", VA = "0x27BB65C")]
		public UnityEventAutoCallbackEvent()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE03D9C", Offset = "0xE03D9C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE03D9C", Offset = "0xE03D9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE03D9C", Offset = "0xE03D9C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE03D9C", Offset = "0xE03D9C")]
	public class UnityEventCallbackEvent : EventNode, IReflectedWrapper
	{
		[Token(Token = "0x20001FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE03EA0", Offset = "0xE03EA0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEventCallbackEvent <>4__this;

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x3133F2C", Offset = "0x3133F2C", VA = "0x3133F2C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x3133F34", Offset = "0x3133F34", VA = "0x3133F34")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1EBC4", Offset = "0xE1EBC4")]
		[ExposeField]
		[GatherPortsCallback]
		[SerializeField]
		protected bool _autoHandleRegistration;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object[] argValues;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput eventInput;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput flowCallback;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ReflectedUnityEvent reflectedEvent;

		[Token(Token = "0x1700018E")]
		private Type eventType
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x27BB664", Offset = "0x27BB664", VA = "0x27BB664")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x27BB670", Offset = "0x27BB670", VA = "0x27BB670")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public bool autoHandleRegistration
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x27BB748", Offset = "0x27BB748", VA = "0x27BB748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x27BB750", Offset = "0x27BB750", VA = "0x27BB750", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x27BB758", Offset = "0x27BB758", VA = "0x27BB758", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x27BB8B0", Offset = "0x27BB8B0", VA = "0x27BB8B0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x27BB9C4", Offset = "0x27BB9C4", VA = "0x27BB9C4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x27BB768", Offset = "0x27BB768", VA = "0x27BB768")]
		private void Register([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x27BB8C0", Offset = "0x27BB8C0", VA = "0x27BB8C0")]
		private void Unregister([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x27BBF50", Offset = "0x27BBF50", VA = "0x27BBF50")]
		private void OnEventRaised(params object[] args)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x27BBFBC", Offset = "0x27BBFBC", VA = "0x27BBFBC", Slot = "46")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x27BC034", Offset = "0x27BC034", VA = "0x27BC034", Slot = "43")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x27BC16C", Offset = "0x27BC16C", VA = "0x27BC16C")]
		public UnityEventCallbackEvent()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE03EB0", Offset = "0xE03EB0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE03EB0", Offset = "0xE03EB0")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE03EB0", Offset = "0xE03EB0")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE03EB0", Offset = "0xE03EB0")]
	public abstract class EventNode : FlowNode
	{
		[Token(Token = "0x17000190")]
		public override string name
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x28C01A8", Offset = "0x28C01A8", VA = "0x28C01A8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x28BF5E8", Offset = "0x28BF5E8", VA = "0x28BF5E8")]
		protected EventNode()
		{
		}
	}
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE03FA0", Offset = "0xE03FA0")]
	public abstract class EventNode<T> : EventNode where T : Component
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> target;

		[Token(Token = "0x17000191")]
		public override string name
		{
			[Token(Token = "0x6000D1A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1B")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000D1C")]
		protected void ResolveSelf()
		{
		}

		[Token(Token = "0x6000D1D")]
		protected EventNode()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE04034", Offset = "0xE04034")]
	public abstract class RouterEventNode<T> : EventNode where T : Component
	{
		[Token(Token = "0x2000203")]
		public enum TargetMode
		{
			[Token(Token = "0x4000B93")]
			SingleTarget,
			[Token(Token = "0x4000B94")]
			MultipleTargets
		}

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TargetMode targetMode;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE1EC40", Offset = "0xE1EC40")]
		public BBParameter<T> target;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE1EC7C", Offset = "0xE1EC7C")]
		public BBParameter<List<T>> targets;

		[Token(Token = "0x17000192")]
		public override string name
		{
			[Token(Token = "0x6000D1E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1F")]
		protected abstract void Subscribe(EventRouter router);

		[Token(Token = "0x6000D20")]
		protected abstract void UnSubscribe(EventRouter router);

		[Token(Token = "0x6000D21")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000D22")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D23")]
		protected T ResolveReceiver(GameObject receiver)
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		protected RouterEventNode()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE040C8", Offset = "0xE040C8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE040C8", Offset = "0xE040C8")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE040C8", Offset = "0xE040C8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE040C8", Offset = "0xE040C8")]
	public class ConstructionEvent : EventNode
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput awake;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool called;

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x282BED4", Offset = "0x282BED4", VA = "0x282BED4", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x282BF3C", Offset = "0x282BF3C", VA = "0x282BF3C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x282BFB4", Offset = "0x282BFB4", VA = "0x282BFB4")]
		public ConstructionEvent()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04164", Offset = "0xE04164")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04164", Offset = "0xE04164")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04164", Offset = "0xE04164")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE04164", Offset = "0xE04164")]
	public class DisableEvent : EventNode
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput disable;

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x283E8E0", Offset = "0x283E8E0", VA = "0x283E8E0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x283E934", Offset = "0x283E934", VA = "0x283E934", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x283E9AC", Offset = "0x283E9AC", VA = "0x283E9AC")]
		public DisableEvent()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04200", Offset = "0xE04200")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04200", Offset = "0xE04200")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE04200", Offset = "0xE04200")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04200", Offset = "0xE04200")]
	public class EnableEvent : EventNode
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput enable;

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x28BF514", Offset = "0x28BF514", VA = "0x28BF514", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x28BF568", Offset = "0x28BF568", VA = "0x28BF568", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x28BF5E0", Offset = "0x28BF5E0", VA = "0x28BF5E0")]
		public EnableEvent()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0429C", Offset = "0xE0429C")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE0429C", Offset = "0xE0429C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0429C", Offset = "0xE0429C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0429C", Offset = "0xE0429C")]
	public class FixedUpdateEvent : EventNode
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput fixedUpdate;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x29281CC", Offset = "0x29281CC", VA = "0x29281CC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x2928348", Offset = "0x2928348", VA = "0x2928348", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x29283E8", Offset = "0x29283E8", VA = "0x29283E8", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x2928488", Offset = "0x2928488", VA = "0x2928488")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x2928550", Offset = "0x2928550", VA = "0x2928550")]
		public FixedUpdateEvent()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04338", Offset = "0xE04338")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04338", Offset = "0xE04338")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE04338", Offset = "0xE04338")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04338", Offset = "0xE04338")]
	public class LateUpdateEvent : EventNode
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput lateUpdate;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x2E39784", Offset = "0x2E39784", VA = "0x2E39784", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x2E397FC", Offset = "0x2E397FC", VA = "0x2E397FC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x2E3989C", Offset = "0x2E3989C", VA = "0x2E3989C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x2E3993C", Offset = "0x2E3993C", VA = "0x2E3993C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x2E39990", Offset = "0x2E39990", VA = "0x2E39990")]
		public LateUpdateEvent()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE043D4", Offset = "0xE043D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE043D4", Offset = "0xE043D4")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE043D4", Offset = "0xE043D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE043D4", Offset = "0xE043D4")]
	public class StartEvent : EventNode
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput start;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool called;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x2587E38", Offset = "0x2587E38", VA = "0x2587E38", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x2587F70", Offset = "0x2587F70", VA = "0x2587F70")]
		private void OnStartCallback()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x2587FF4", Offset = "0x2587FF4", VA = "0x2587FF4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x258806C", Offset = "0x258806C", VA = "0x258806C")]
		public StartEvent()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04470", Offset = "0xE04470")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04470", Offset = "0xE04470")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04470", Offset = "0xE04470")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0xE04470", Offset = "0xE04470")]
	public class UpdateEvent : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<float> updateInterval;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput update;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastUpdatedTime;

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x27BEA2C", Offset = "0x27BEA2C", VA = "0x27BEA2C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x27BEAA4", Offset = "0x27BEAA4", VA = "0x27BEAA4", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x27BEAB0", Offset = "0x27BEAB0", VA = "0x27BEAB0", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x27BEBC4", Offset = "0x27BEBC4", VA = "0x27BEBC4")]
		public UpdateEvent()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0450C", Offset = "0xE0450C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0450C", Offset = "0xE0450C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0450C", Offset = "0xE0450C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0450C", Offset = "0xE0450C")]
	public class InputAxisEvent : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput o;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float horizontal;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float vertical;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool calledLastFrame;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x2E26E80", Offset = "0x2E26E80", VA = "0x2E26E80", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x2E26FFC", Offset = "0x2E26FFC", VA = "0x2E26FFC", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x2E27130", Offset = "0x2E27130", VA = "0x2E27130")]
		public InputAxisEvent()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x2E27138", Offset = "0x2E27138", VA = "0x2E27138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BDC", Offset = "0xE27BDC")]
		private float <RegisterPorts>b__4_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x2E27140", Offset = "0x2E27140", VA = "0x2E27140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BEC", Offset = "0xE27BEC")]
		private float <RegisterPorts>b__4_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE045B8", Offset = "0xE045B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE045B8", Offset = "0xE045B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE045B8", Offset = "0xE045B8")]
	public class InputButtonEvents : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1ECB8", Offset = "0xE1ECB8")]
		public BBParameter<string> buttonName;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput down;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput up;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput pressed;

		[Token(Token = "0x17000193")]
		public override string name
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x2E27148", Offset = "0x2E27148", VA = "0x2E27148", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x2E271AC", Offset = "0x2E271AC", VA = "0x2E271AC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x2E27294", Offset = "0x2E27294", VA = "0x2E27294", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x2E273C0", Offset = "0x2E273C0", VA = "0x2E273C0")]
		public InputButtonEvents()
		{
		}
	}
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04640", Offset = "0xE04640")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04640", Offset = "0xE04640")]
	[HasRefreshButton]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04640", Offset = "0xE04640")]
	public class InputCustomAxisEvent : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x200020E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE046D8", Offset = "0xE046D8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputCustomAxisEvent <>4__this;

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x2EDED80", Offset = "0x2EDED80", VA = "0x2EDED80")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x2EDED88", Offset = "0x2EDED88", VA = "0x2EDED88")]
			internal float <RegisterPorts>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<List<string>> axis;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] axisValues;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool calledLastFrame;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput o;

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x2E2743C", Offset = "0x2E2743C", VA = "0x2E2743C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x2E276DC", Offset = "0x2E276DC", VA = "0x2E276DC", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x2E27898", Offset = "0x2E27898", VA = "0x2E27898")]
		public InputCustomAxisEvent()
		{
		}
	}
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE046E8", Offset = "0xE046E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE046E8", Offset = "0xE046E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE046E8", Offset = "0xE046E8")]
	public class KeyboardEvents : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<KeyCode> keyCode;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput down;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput up;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput pressed;

		[Token(Token = "0x17000194")]
		public override string name
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x2E385DC", Offset = "0x2E385DC", VA = "0x2E385DC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x2E38640", Offset = "0x2E38640", VA = "0x2E38640", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x2E38728", Offset = "0x2E38728", VA = "0x2E38728", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x2E38854", Offset = "0x2E38854", VA = "0x2E38854")]
		public KeyboardEvents()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04770", Offset = "0xE04770")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04770", Offset = "0xE04770")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04770", Offset = "0xE04770")]
	public class MouseEvents : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x2000211")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4000BB7")]
			Left,
			[Token(Token = "0x4000BB8")]
			Right,
			[Token(Token = "0x4000BB9")]
			Middle
		}

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<ButtonKeys> buttonKey;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput down;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput pressed;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput up;

		[Token(Token = "0x17000195")]
		public override string name
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x2698524", Offset = "0x2698524", VA = "0x2698524", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x2698588", Offset = "0x2698588", VA = "0x2698588", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x2698670", Offset = "0x2698670", VA = "0x2698670", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x269879C", Offset = "0x269879C", VA = "0x269879C")]
		public MouseEvents()
		{
		}
	}
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE047F8", Offset = "0xE047F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE047F8", Offset = "0xE047F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE047F8", Offset = "0xE047F8")]
	public class MousePickEvent : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x2000213")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4000BBF")]
			Left,
			[Token(Token = "0x4000BC0")]
			Right,
			[Token(Token = "0x4000BC1")]
			Middle
		}

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<ButtonKeys> buttonKey;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BBParameter<LayerMask> mask;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput o;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RaycastHit hit;

		[Token(Token = "0x17000196")]
		public override string name
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x26987A4", Offset = "0x26987A4", VA = "0x26987A4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x2698808", Offset = "0x2698808", VA = "0x2698808", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x2698920", Offset = "0x2698920", VA = "0x2698920", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x2698A58", Offset = "0x2698A58", VA = "0x2698A58")]
		public MousePickEvent()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x2698AFC", Offset = "0x2698AFC", VA = "0x2698AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BFC", Offset = "0xE27BFC")]
		private RaycastHit <RegisterPorts>b__7_0()
		{
			return default(RaycastHit);
		}
	}
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04880", Offset = "0xE04880")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04880", Offset = "0xE04880")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04880", Offset = "0xE04880")]
	public class AnimatorEvents : RouterEventNode<Animator>
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onAnimatorMove;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onAnimatorIK;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Animator receiver;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int layerIndex;

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x2AA5314", Offset = "0x2AA5314", VA = "0x2AA5314", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x2AA54FC", Offset = "0x2AA54FC", VA = "0x2AA54FC", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x2AA55F8", Offset = "0x2AA55F8", VA = "0x2AA55F8", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x2AA56F4", Offset = "0x2AA56F4", VA = "0x2AA56F4")]
		private void OnAnimatorMove(EventData msg)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x2AA57A8", Offset = "0x2AA57A8", VA = "0x2AA57A8")]
		private void OnAnimatorIK(EventData<int> msg)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x2AA587C", Offset = "0x2AA587C", VA = "0x2AA587C")]
		public AnimatorEvents()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x2AA58C8", Offset = "0x2AA58C8", VA = "0x2AA58C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C0C", Offset = "0xE27C0C")]
		private Animator <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x2AA58D0", Offset = "0x2AA58D0", VA = "0x2AA58D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C1C", Offset = "0xE27C1C")]
		private int <RegisterPorts>b__4_1()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04908", Offset = "0xE04908")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04908", Offset = "0xE04908")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04908", Offset = "0xE04908")]
	public class CharacterControllerEvents : RouterEventNode<CharacterController>, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onHit;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CharacterController receiver;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ControllerColliderHit hitInfo;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onGrounded;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput onUnGrounded;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool wasGrounded;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool[] wasGroundedMulti;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x22A4498", Offset = "0x22A4498", VA = "0x22A4498", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x22A45A4", Offset = "0x22A45A4", VA = "0x22A45A4", Slot = "49")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x22A48C8", Offset = "0x22A48C8", VA = "0x22A48C8", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x22A4C18", Offset = "0x22A4C18", VA = "0x22A4C18", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x22A4CC0", Offset = "0x22A4CC0", VA = "0x22A4CC0", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x22A4D68", Offset = "0x22A4D68", VA = "0x22A4D68")]
		private void OnControllerColliderHit(EventData<ControllerColliderHit> msg)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x22A4E44", Offset = "0x22A4E44", VA = "0x22A4E44")]
		public CharacterControllerEvents()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x22A4E90", Offset = "0x22A4E90", VA = "0x22A4E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C2C", Offset = "0xE27C2C")]
		private CharacterController <RegisterPorts>b__9_0()
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x22A4E98", Offset = "0x22A4E98", VA = "0x22A4E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C3C", Offset = "0xE27C3C")]
		private GameObject <RegisterPorts>b__9_1()
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x22A4EB4", Offset = "0x22A4EB4", VA = "0x22A4EB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C4C", Offset = "0xE27C4C")]
		private Vector3 <RegisterPorts>b__9_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x22A4ED0", Offset = "0x22A4ED0", VA = "0x22A4ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C5C", Offset = "0xE27C5C")]
		private ControllerColliderHit <RegisterPorts>b__9_3()
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04990", Offset = "0xE04990")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04990", Offset = "0xE04990")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04990", Offset = "0xE04990")]
	public class Collision2DEvents_Rigidbody : RouterEventNode<Rigidbody2D>
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rigidbody2D receiver;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collision2D collision;

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x22B552C", Offset = "0x22B552C", VA = "0x22B552C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x22B587C", Offset = "0x22B587C", VA = "0x22B587C", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x22B59AC", Offset = "0x22B59AC", VA = "0x22B59AC", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x22B5ADC", Offset = "0x22B5ADC", VA = "0x22B5ADC")]
		private void OnCollisionEnter2D(EventData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x22B5BB8", Offset = "0x22B5BB8", VA = "0x22B5BB8")]
		private void OnCollisionStay2D(EventData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x22B5C94", Offset = "0x22B5C94", VA = "0x22B5C94")]
		private void OnCollisionExit2D(EventData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x22B5D70", Offset = "0x22B5D70", VA = "0x22B5D70")]
		public Collision2DEvents_Rigidbody()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x22B5DBC", Offset = "0x22B5DBC", VA = "0x22B5DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C6C", Offset = "0xE27C6C")]
		private Rigidbody2D <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x22B5DC4", Offset = "0x22B5DC4", VA = "0x22B5DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C7C", Offset = "0xE27C7C")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x22B5DE0", Offset = "0x22B5DE0", VA = "0x22B5DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C8C", Offset = "0xE27C8C")]
		private ContactPoint2D <RegisterPorts>b__5_2()
		{
			return default(ContactPoint2D);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x22B5E40", Offset = "0x22B5E40", VA = "0x22B5E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C9C", Offset = "0xE27C9C")]
		private Collision2D <RegisterPorts>b__5_3()
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04A18", Offset = "0xE04A18")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04A18", Offset = "0xE04A18")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04A18", Offset = "0xE04A18")]
	public class Collision2DEvents : RouterEventNode<Collider2D>
	{
		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Collider2D receiver;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collision2D collision;

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x22B4C10", Offset = "0x22B4C10", VA = "0x22B4C10", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x22B4F60", Offset = "0x22B4F60", VA = "0x22B4F60", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x22B5090", Offset = "0x22B5090", VA = "0x22B5090", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x22B51C0", Offset = "0x22B51C0", VA = "0x22B51C0")]
		private void OnCollisionEnter2D(EventData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x22B529C", Offset = "0x22B529C", VA = "0x22B529C")]
		private void OnCollisionStay2D(EventData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x22B5378", Offset = "0x22B5378", VA = "0x22B5378")]
		private void OnCollisionExit2D(EventData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x22B5454", Offset = "0x22B5454", VA = "0x22B5454")]
		public Collision2DEvents()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x22B54A0", Offset = "0x22B54A0", VA = "0x22B54A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27CAC", Offset = "0xE27CAC")]
		private Collider2D <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x22B54A8", Offset = "0x22B54A8", VA = "0x22B54A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27CBC", Offset = "0xE27CBC")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x22B54C4", Offset = "0x22B54C4", VA = "0x22B54C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27CCC", Offset = "0xE27CCC")]
		private ContactPoint2D <RegisterPorts>b__5_2()
		{
			return default(ContactPoint2D);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x22B5524", Offset = "0x22B5524", VA = "0x22B5524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27CDC", Offset = "0xE27CDC")]
		private Collision2D <RegisterPorts>b__5_3()
		{
			return null;
		}
	}
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04AB0", Offset = "0xE04AB0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04AB0", Offset = "0xE04AB0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04AB0", Offset = "0xE04AB0")]
	public class CollisionEvents_Rigidbody : RouterEventNode<Rigidbody>
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rigidbody receiver;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collision collision;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x22B675C", Offset = "0x22B675C", VA = "0x22B675C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x22B6AAC", Offset = "0x22B6AAC", VA = "0x22B6AAC", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x22B6BDC", Offset = "0x22B6BDC", VA = "0x22B6BDC", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x22B6D0C", Offset = "0x22B6D0C", VA = "0x22B6D0C")]
		private void OnCollisionEnter(EventData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x22B6DE8", Offset = "0x22B6DE8", VA = "0x22B6DE8")]
		private void OnCollisionStay(EventData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x22B6EC4", Offset = "0x22B6EC4", VA = "0x22B6EC4")]
		private void OnCollisionExit(EventData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x22B6FA0", Offset = "0x22B6FA0", VA = "0x22B6FA0")]
		public CollisionEvents_Rigidbody()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x22B6FEC", Offset = "0x22B6FEC", VA = "0x22B6FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27CEC", Offset = "0xE27CEC")]
		private Rigidbody <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x22B6FF4", Offset = "0x22B6FF4", VA = "0x22B6FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27CFC", Offset = "0xE27CFC")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x22B7010", Offset = "0x22B7010", VA = "0x22B7010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D0C", Offset = "0xE27D0C")]
		private ContactPoint <RegisterPorts>b__5_2()
		{
			return default(ContactPoint);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x22B7068", Offset = "0x22B7068", VA = "0x22B7068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D1C", Offset = "0xE27D1C")]
		private Collision <RegisterPorts>b__5_3()
		{
			return null;
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04B38", Offset = "0xE04B38")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04B38", Offset = "0xE04B38")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04B38", Offset = "0xE04B38")]
	[DoNotList]
	public class CollisionEvents : RouterEventNode<Collider>
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Collider receiver;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collision collision;

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x22B5E48", Offset = "0x22B5E48", VA = "0x22B5E48", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x22B6198", Offset = "0x22B6198", VA = "0x22B6198", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x22B62C8", Offset = "0x22B62C8", VA = "0x22B62C8", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x22B63F8", Offset = "0x22B63F8", VA = "0x22B63F8")]
		private void OnCollisionEnter(EventData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x22B64D4", Offset = "0x22B64D4", VA = "0x22B64D4")]
		private void OnCollisionStay(EventData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x22B65B0", Offset = "0x22B65B0", VA = "0x22B65B0")]
		private void OnCollisionExit(EventData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x22B668C", Offset = "0x22B668C", VA = "0x22B668C")]
		public CollisionEvents()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x22B66D8", Offset = "0x22B66D8", VA = "0x22B66D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D2C", Offset = "0xE27D2C")]
		private Collider <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x22B66E0", Offset = "0x22B66E0", VA = "0x22B66E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D3C", Offset = "0xE27D3C")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x22B66FC", Offset = "0x22B66FC", VA = "0x22B66FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D4C", Offset = "0xE27D4C")]
		private ContactPoint <RegisterPorts>b__5_2()
		{
			return default(ContactPoint);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x22B6754", Offset = "0x22B6754", VA = "0x22B6754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D5C", Offset = "0xE27D5C")]
		private Collision <RegisterPorts>b__5_3()
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04BD0", Offset = "0xE04BD0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04BD0", Offset = "0xE04BD0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04BD0", Offset = "0xE04BD0")]
	public class MouseAgent2DEvents : RouterEventNode<Collider2D>
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onOver;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onDown;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput onUp;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FlowOutput onDrag;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider2D receiver;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RaycastHit2D hit;

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x2D0D4D8", Offset = "0x2D0D4D8", VA = "0x2D0D4D8", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x2D0D7A0", Offset = "0x2D0D7A0", VA = "0x2D0D7A0", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x2D0D974", Offset = "0x2D0D974", VA = "0x2D0D974", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x2D0DB48", Offset = "0x2D0DB48", VA = "0x2D0DB48")]
		private void OnMouseEnter(EventData msg)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x2D0DD7C", Offset = "0x2D0DD7C", VA = "0x2D0DD7C")]
		private void OnMouseOver(EventData msg)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x2D0DE38", Offset = "0x2D0DE38", VA = "0x2D0DE38")]
		private void OnMouseExit(EventData msg)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x2D0DEF4", Offset = "0x2D0DEF4", VA = "0x2D0DEF4")]
		private void OnMouseDown(EventData msg)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x2D0DFB0", Offset = "0x2D0DFB0", VA = "0x2D0DFB0")]
		private void OnMouseUp(EventData msg)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x2D0E06C", Offset = "0x2D0E06C", VA = "0x2D0E06C")]
		private void OnMouseDrag(EventData msg)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x2D0DC04", Offset = "0x2D0DC04", VA = "0x2D0DC04")]
		private void StoreHit()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x2D0E128", Offset = "0x2D0E128", VA = "0x2D0E128")]
		public MouseAgent2DEvents()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x2D0E174", Offset = "0x2D0E174", VA = "0x2D0E174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D6C", Offset = "0xE27D6C")]
		private Collider2D <RegisterPorts>b__8_0()
		{
			return null;
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x2D0E17C", Offset = "0x2D0E17C", VA = "0x2D0E17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D7C", Offset = "0xE27D7C")]
		private RaycastHit2D <RegisterPorts>b__8_1()
		{
			return default(RaycastHit2D);
		}
	}
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04C58", Offset = "0xE04C58")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04C58", Offset = "0xE04C58")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04C58", Offset = "0xE04C58")]
	public class MouseAgentEvents : RouterEventNode<Collider>
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onOver;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onDown;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput onUp;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FlowOutput onDrag;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider receiver;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RaycastHit hit;

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x2697904", Offset = "0x2697904", VA = "0x2697904", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x2697BCC", Offset = "0x2697BCC", VA = "0x2697BCC", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x2697DA0", Offset = "0x2697DA0", VA = "0x2697DA0", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x2697F74", Offset = "0x2697F74", VA = "0x2697F74")]
		private void OnMouseEnter(EventData msg)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x269810C", Offset = "0x269810C", VA = "0x269810C")]
		private void OnMouseOver(EventData msg)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x26981C8", Offset = "0x26981C8", VA = "0x26981C8")]
		private void OnMouseExit(EventData msg)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x2698284", Offset = "0x2698284", VA = "0x2698284")]
		private void OnMouseDown(EventData msg)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x2698340", Offset = "0x2698340", VA = "0x2698340")]
		private void OnMouseUp(EventData msg)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x26983FC", Offset = "0x26983FC", VA = "0x26983FC")]
		private void OnMouseDrag(EventData msg)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x2698030", Offset = "0x2698030", VA = "0x2698030")]
		private void StoreHit()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x26984B8", Offset = "0x26984B8", VA = "0x26984B8")]
		public MouseAgentEvents()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x2698504", Offset = "0x2698504", VA = "0x2698504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D8C", Offset = "0xE27D8C")]
		private Collider <RegisterPorts>b__8_0()
		{
			return null;
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x269850C", Offset = "0x269850C", VA = "0x269850C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D9C", Offset = "0xE27D9C")]
		private RaycastHit <RegisterPorts>b__8_1()
		{
			return default(RaycastHit);
		}
	}
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04CE0", Offset = "0xE04CE0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04CE0", Offset = "0xE04CE0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04CE0", Offset = "0xE04CE0")]
	public class ObjectStateEvents : RouterEventNode<Transform>
	{
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnable;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onDisable;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onDestroy;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject receiver;

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x26A0B38", Offset = "0x26A0B38", VA = "0x26A0B38", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x26A0CC0", Offset = "0x26A0CC0", VA = "0x26A0CC0", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x26A0DD4", Offset = "0x26A0DD4", VA = "0x26A0DD4", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x26A0EE8", Offset = "0x26A0EE8", VA = "0x26A0EE8")]
		private void OnEnable(EventData msg)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x26A0FA8", Offset = "0x26A0FA8", VA = "0x26A0FA8")]
		private void OnDisable(EventData msg)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x26A1068", Offset = "0x26A1068", VA = "0x26A1068")]
		private void OnDestroy(EventData msg)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x26A1128", Offset = "0x26A1128", VA = "0x26A1128")]
		public ObjectStateEvents()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x26A1174", Offset = "0x26A1174", VA = "0x26A1174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27DAC", Offset = "0xE27DAC")]
		private GameObject <RegisterPorts>b__4_0()
		{
			return null;
		}
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04D68", Offset = "0xE04D68")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04D68", Offset = "0xE04D68")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04D68", Offset = "0xE04D68")]
	public class DrawGizmosEvents : RouterEventNode<Transform>
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onDrawGizmos;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject receiver;

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x283EB60", Offset = "0x283EB60", VA = "0x283EB60", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x283EC78", Offset = "0x283EC78", VA = "0x283EC78", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x283ED0C", Offset = "0x283ED0C", VA = "0x283ED0C", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x283EDA0", Offset = "0x283EDA0", VA = "0x283EDA0")]
		private void OnDrawGizmos(EventData msg)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x283EE60", Offset = "0x283EE60", VA = "0x283EE60")]
		public DrawGizmosEvents()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x283EEAC", Offset = "0x283EEAC", VA = "0x283EEAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27DBC", Offset = "0xE27DBC")]
		private GameObject <RegisterPorts>b__2_0()
		{
			return null;
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04DF0", Offset = "0xE04DF0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04DF0", Offset = "0xE04DF0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04DF0", Offset = "0xE04DF0")]
	public class ParticleCollision2DEvents : RouterEventNode<Collider2D>
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onCollision;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider2D receiver;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ParticleSystem particle;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x26A3888", Offset = "0x26A3888", VA = "0x26A3888", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x26A3B90", Offset = "0x26A3B90", VA = "0x26A3B90", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x26A3C38", Offset = "0x26A3C38", VA = "0x26A3C38", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x26A3CE0", Offset = "0x26A3CE0", VA = "0x26A3CE0")]
		private void OnParticleCollision(EventData<GameObject> msg)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x26A3EAC", Offset = "0x26A3EAC", VA = "0x26A3EAC")]
		public ParticleCollision2DEvents()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x26A3EF8", Offset = "0x26A3EF8", VA = "0x26A3EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27DCC", Offset = "0xE27DCC")]
		private Collider2D <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x26A3F00", Offset = "0x26A3F00", VA = "0x26A3F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27DDC", Offset = "0xE27DDC")]
		private ParticleSystem <RegisterPorts>b__4_1()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x26A3F08", Offset = "0x26A3F08", VA = "0x26A3F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27DEC", Offset = "0xE27DEC")]
		private Vector3 <RegisterPorts>b__4_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x26A3F94", Offset = "0x26A3F94", VA = "0x26A3F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27DFC", Offset = "0xE27DFC")]
		private Vector3 <RegisterPorts>b__4_3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x26A4020", Offset = "0x26A4020", VA = "0x26A4020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E0C", Offset = "0xE27E0C")]
		private Vector3 <RegisterPorts>b__4_4()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04E78", Offset = "0xE04E78")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04E78", Offset = "0xE04E78")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04E78", Offset = "0xE04E78")]
	public class ParticleCollisionEvents : RouterEventNode<Collider>
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onCollision;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider receiver;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ParticleSystem particle;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x26A40AC", Offset = "0x26A40AC", VA = "0x26A40AC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x26A43B4", Offset = "0x26A43B4", VA = "0x26A43B4", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x26A445C", Offset = "0x26A445C", VA = "0x26A445C", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x26A4504", Offset = "0x26A4504", VA = "0x26A4504")]
		private void OnParticleCollision(EventData<GameObject> msg)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x26A46D0", Offset = "0x26A46D0", VA = "0x26A46D0")]
		public ParticleCollisionEvents()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x26A471C", Offset = "0x26A471C", VA = "0x26A471C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E1C", Offset = "0xE27E1C")]
		private Collider <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x26A4724", Offset = "0x26A4724", VA = "0x26A4724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E2C", Offset = "0xE27E2C")]
		private ParticleSystem <RegisterPorts>b__4_1()
		{
			return null;
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x26A472C", Offset = "0x26A472C", VA = "0x26A472C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E3C", Offset = "0xE27E3C")]
		private Vector3 <RegisterPorts>b__4_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x26A47B8", Offset = "0x26A47B8", VA = "0x26A47B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E4C", Offset = "0xE27E4C")]
		private Vector3 <RegisterPorts>b__4_3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x26A4844", Offset = "0x26A4844", VA = "0x26A4844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E5C", Offset = "0xE27E5C")]
		private Vector3 <RegisterPorts>b__4_4()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04F00", Offset = "0xE04F00")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04F00", Offset = "0xE04F00")]
	public class TransformEvents : RouterEventNode<Transform>
	{
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onParentChanged;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onChildrenChanged;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform receiver;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform parent;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IEnumerable<Transform> children;

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x2597B90", Offset = "0x2597B90", VA = "0x2597B90", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x2597DDC", Offset = "0x2597DDC", VA = "0x2597DDC", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x2597EB0", Offset = "0x2597EB0", VA = "0x2597EB0", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x2597F84", Offset = "0x2597F84", VA = "0x2597F84")]
		private void OnTransformParentChanged(EventData msg)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x2598088", Offset = "0x2598088", VA = "0x2598088")]
		private void OnTransformChildrenChanged(EventData msg)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x259818C", Offset = "0x259818C", VA = "0x259818C")]
		public TransformEvents()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x25981D8", Offset = "0x25981D8", VA = "0x25981D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E6C", Offset = "0xE27E6C")]
		private Transform <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x25981E0", Offset = "0x25981E0", VA = "0x25981E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E7C", Offset = "0xE27E7C")]
		private Transform <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x25981E8", Offset = "0x25981E8", VA = "0x25981E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E8C", Offset = "0xE27E8C")]
		private IEnumerable<Transform> <RegisterPorts>b__5_2()
		{
			return null;
		}
	}
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04F60", Offset = "0xE04F60")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04F60", Offset = "0xE04F60")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04F60", Offset = "0xE04F60")]
	public class Trigger2DEvents_Transform : RouterEventNode<Transform>
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform receiver;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject other;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x27B2930", Offset = "0x27B2930", VA = "0x27B2930", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x27B2B50", Offset = "0x27B2B50", VA = "0x27B2B50", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x27B2C80", Offset = "0x27B2C80", VA = "0x27B2C80", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x27B2DB0", Offset = "0x27B2DB0", VA = "0x27B2DB0")]
		private void OnTriggerEnter2D(EventData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x27B2E9C", Offset = "0x27B2E9C", VA = "0x27B2E9C")]
		private void OnTriggerStay2D(EventData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x27B2F88", Offset = "0x27B2F88", VA = "0x27B2F88")]
		private void OnTriggerExit2D(EventData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x27B3074", Offset = "0x27B3074", VA = "0x27B3074")]
		public Trigger2DEvents_Transform()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x27B30C0", Offset = "0x27B30C0", VA = "0x27B30C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E9C", Offset = "0xE27E9C")]
		private Transform <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x27B30C8", Offset = "0x27B30C8", VA = "0x27B30C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27EAC", Offset = "0xE27EAC")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE04FE8", Offset = "0xE04FE8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE04FE8", Offset = "0xE04FE8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE04FE8", Offset = "0xE04FE8")]
	[DoNotList]
	public class Trigger2DEvents : RouterEventNode<Collider2D>
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Collider2D receiver;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject other;

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x27B2190", Offset = "0x27B2190", VA = "0x27B2190", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x27B23B0", Offset = "0x27B23B0", VA = "0x27B23B0", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x27B24E0", Offset = "0x27B24E0", VA = "0x27B24E0", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x27B2610", Offset = "0x27B2610", VA = "0x27B2610")]
		private void OnTriggerEnter2D(EventData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x27B26FC", Offset = "0x27B26FC", VA = "0x27B26FC")]
		private void OnTriggerStay2D(EventData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x27B27E8", Offset = "0x27B27E8", VA = "0x27B27E8")]
		private void OnTriggerExit2D(EventData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x27B28D4", Offset = "0x27B28D4", VA = "0x27B28D4")]
		public Trigger2DEvents()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x27B2920", Offset = "0x27B2920", VA = "0x27B2920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27EBC", Offset = "0xE27EBC")]
		private Collider2D <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x27B2928", Offset = "0x27B2928", VA = "0x27B2928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27ECC", Offset = "0xE27ECC")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05080", Offset = "0xE05080")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05080", Offset = "0xE05080")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05080", Offset = "0xE05080")]
	public class TriggerEvents_Transform : RouterEventNode<Transform>
	{
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform receiver;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject other;

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x27B3C2C", Offset = "0x27B3C2C", VA = "0x27B3C2C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x27B3E4C", Offset = "0x27B3E4C", VA = "0x27B3E4C", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x27B3F7C", Offset = "0x27B3F7C", VA = "0x27B3F7C", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x27B40AC", Offset = "0x27B40AC", VA = "0x27B40AC")]
		private void OnTriggerEnter(EventData<Collider> msg)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x27B4198", Offset = "0x27B4198", VA = "0x27B4198")]
		private void OnTriggerStay(EventData<Collider> msg)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x27B4284", Offset = "0x27B4284", VA = "0x27B4284")]
		private void OnTriggerExit(EventData<Collider> msg)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x27B4370", Offset = "0x27B4370", VA = "0x27B4370")]
		public TriggerEvents_Transform()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x27B43BC", Offset = "0x27B43BC", VA = "0x27B43BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27EDC", Offset = "0xE27EDC")]
		private Transform <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x27B43C4", Offset = "0x27B43C4", VA = "0x27B43C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27EEC", Offset = "0xE27EEC")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05108", Offset = "0xE05108")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05108", Offset = "0xE05108")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05108", Offset = "0xE05108")]
	[DoNotList]
	public class TriggerEvents : RouterEventNode<Collider>
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Collider receiver;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject other;

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x27B348C", Offset = "0x27B348C", VA = "0x27B348C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x27B36AC", Offset = "0x27B36AC", VA = "0x27B36AC", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x27B37DC", Offset = "0x27B37DC", VA = "0x27B37DC", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x27B390C", Offset = "0x27B390C", VA = "0x27B390C")]
		private void OnTriggerEnter(EventData<Collider> msg)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x27B39F8", Offset = "0x27B39F8", VA = "0x27B39F8")]
		private void OnTriggerStay(EventData<Collider> msg)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x27B3AE4", Offset = "0x27B3AE4", VA = "0x27B3AE4")]
		private void OnTriggerExit(EventData<Collider> msg)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x27B3BD0", Offset = "0x27B3BD0", VA = "0x27B3BD0")]
		public TriggerEvents()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x27B3C1C", Offset = "0x27B3C1C", VA = "0x27B3C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27EFC", Offset = "0xE27EFC")]
		private Collider <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x27B3C24", Offset = "0x27B3C24", VA = "0x27B3C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F0C", Offset = "0xE27F0C")]
		private GameObject <RegisterPorts>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE051A0", Offset = "0xE051A0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE051A0", Offset = "0xE051A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE051A0", Offset = "0xE051A0")]
	public class UIButtonEvent : EventNode<Button>
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput o;

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x27B7B80", Offset = "0x27B7B80", VA = "0x27B7B80", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x27B7C80", Offset = "0x27B7C80", VA = "0x27B7C80", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x27B7D60", Offset = "0x27B7D60", VA = "0x27B7D60", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x27B7E78", Offset = "0x27B7E78", VA = "0x27B7E78")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x27B7ECC", Offset = "0x27B7ECC", VA = "0x27B7ECC")]
		public UIButtonEvent()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x27B7F18", Offset = "0x27B7F18", VA = "0x27B7F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F1C", Offset = "0xE27F1C")]
		private Button <RegisterPorts>b__3_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05228", Offset = "0xE05228")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05228", Offset = "0xE05228")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05228", Offset = "0xE05228")]
	public class UIDropdownEvent : EventNode<Dropdown>
	{
		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput o;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int value;

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x27B7F6C", Offset = "0x27B7F6C", VA = "0x27B7F6C", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x27B8094", Offset = "0x27B8094", VA = "0x27B8094", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x27B819C", Offset = "0x27B819C", VA = "0x27B819C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x27B834C", Offset = "0x27B834C", VA = "0x27B834C")]
		private void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x27B83A4", Offset = "0x27B83A4", VA = "0x27B83A4")]
		public UIDropdownEvent()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x27B83F0", Offset = "0x27B83F0", VA = "0x27B83F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F2C", Offset = "0xE27F2C")]
		private Dropdown <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x27B8444", Offset = "0x27B8444", VA = "0x27B8444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F3C", Offset = "0xE27F3C")]
		private int <RegisterPorts>b__4_1()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE052B0", Offset = "0xE052B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE052B0", Offset = "0xE052B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE052B0", Offset = "0xE052B0")]
	public class UIInputFieldEvent : EventNode<InputField>
	{
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onValueChanged;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onEndEdit;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string value;

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x27B844C", Offset = "0x27B844C", VA = "0x27B844C", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x27B85E8", Offset = "0x27B85E8", VA = "0x27B85E8", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x27B8764", Offset = "0x27B8764", VA = "0x27B8764", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x27B894C", Offset = "0x27B894C", VA = "0x27B894C")]
		private void OnValueChanged(string value)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x27B89B8", Offset = "0x27B89B8", VA = "0x27B89B8")]
		private void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x27B8A24", Offset = "0x27B8A24", VA = "0x27B8A24")]
		public UIInputFieldEvent()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x27B8A70", Offset = "0x27B8A70", VA = "0x27B8A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F4C", Offset = "0xE27F4C")]
		private InputField <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x27B8AC4", Offset = "0x27B8AC4", VA = "0x27B8AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F5C", Offset = "0xE27F5C")]
		private string <RegisterPorts>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05338", Offset = "0xE05338")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05338", Offset = "0xE05338")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05338", Offset = "0xE05338")]
	public class UIPointerEvents : RouterEventNode<Transform>
	{
		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE053C0", Offset = "0xE053C0")]
		private sealed class <UpdatePressed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPointerEvents <>4__this;

			[Token(Token = "0x17000197")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2A")]
				[Address(RVA = "0x3133E8C", Offset = "0x3133E8C", VA = "0x3133E8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2C")]
				[Address(RVA = "0x3133ED4", Offset = "0x3133ED4", VA = "0x3133ED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x3133DB8", Offset = "0x3133DB8", VA = "0x3133DB8")]
			[DebuggerHidden]
			public <UpdatePressed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x3133DE4", Offset = "0x3133DE4", VA = "0x3133DE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x3133DE8", Offset = "0x3133DE8", VA = "0x3133DE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x3133E94", Offset = "0x3133E94", VA = "0x3133E94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onPointerDown;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onPointerPressed;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onPointerUp;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onPointerEnter;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput onPointerExit;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FlowOutput onPointerClick;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FlowOutput onPointerDrag;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private FlowOutput onPointerDrop;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private FlowOutput onPointerScroll;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject receiver;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PointerEventData eventData;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool updatePressed;

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x27B8ACC", Offset = "0x27B8ACC", VA = "0x27B8ACC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x27B8E3C", Offset = "0x27B8E3C", VA = "0x27B8E3C", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x27B90AC", Offset = "0x27B90AC", VA = "0x27B90AC", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x27B931C", Offset = "0x27B931C", VA = "0x27B931C")]
		private void OnPointerDown(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x27B949C", Offset = "0x27B949C", VA = "0x27B949C")]
		private void OnPointerUp(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x27B9424", Offset = "0x27B9424", VA = "0x27B9424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27F6C", Offset = "0xE27F6C")]
		private IEnumerator UpdatePressed()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x27B9588", Offset = "0x27B9588", VA = "0x27B9588")]
		private void OnPointerEnter(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x27B9670", Offset = "0x27B9670", VA = "0x27B9670")]
		private void OnPointerExit(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x27B9758", Offset = "0x27B9758", VA = "0x27B9758")]
		private void OnPointerClick(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x27B9840", Offset = "0x27B9840", VA = "0x27B9840")]
		private void OnPointerDrag(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x27B9928", Offset = "0x27B9928", VA = "0x27B9928")]
		private void OnPointerDrop(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x27B9A10", Offset = "0x27B9A10", VA = "0x27B9A10")]
		private void OnPointerScroll(EventData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x27B9AF8", Offset = "0x27B9AF8", VA = "0x27B9AF8")]
		public UIPointerEvents()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x27B9B44", Offset = "0x27B9B44", VA = "0x27B9B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27FCC", Offset = "0xE27FCC")]
		private GameObject <RegisterPorts>b__12_0()
		{
			return null;
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x27B9B4C", Offset = "0x27B9B4C", VA = "0x27B9B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27FDC", Offset = "0xE27FDC")]
		private PointerEventData <RegisterPorts>b__12_1()
		{
			return null;
		}
	}
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE053D0", Offset = "0xE053D0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE053D0", Offset = "0xE053D0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE053D0", Offset = "0xE053D0")]
	public class UIScrollbarEvent : EventNode<Scrollbar>
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput o;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float value;

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x27B9B54", Offset = "0x27B9B54", VA = "0x27B9B54", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x27B9C7C", Offset = "0x27B9C7C", VA = "0x27B9C7C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x27B9D84", Offset = "0x27B9D84", VA = "0x27B9D84", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x27B9F34", Offset = "0x27B9F34", VA = "0x27B9F34")]
		private void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x27B9F8C", Offset = "0x27B9F8C", VA = "0x27B9F8C")]
		public UIScrollbarEvent()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x27B9FD8", Offset = "0x27B9FD8", VA = "0x27B9FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2803C", Offset = "0xE2803C")]
		private Scrollbar <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x27BA02C", Offset = "0x27BA02C", VA = "0x27BA02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2804C", Offset = "0xE2804C")]
		private float <RegisterPorts>b__4_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05458", Offset = "0xE05458")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05458", Offset = "0xE05458")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05458", Offset = "0xE05458")]
	public class UISliderEvent : EventNode<Slider>
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput o;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float value;

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x27BA034", Offset = "0x27BA034", VA = "0x27BA034", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x27BA15C", Offset = "0x27BA15C", VA = "0x27BA15C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x27BA264", Offset = "0x27BA264", VA = "0x27BA264", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x27BA414", Offset = "0x27BA414", VA = "0x27BA414")]
		private void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x27BA46C", Offset = "0x27BA46C", VA = "0x27BA46C")]
		public UISliderEvent()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x27BA4B8", Offset = "0x27BA4B8", VA = "0x27BA4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2805C", Offset = "0xE2805C")]
		private Slider <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x27BA50C", Offset = "0x27BA50C", VA = "0x27BA50C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2806C", Offset = "0xE2806C")]
		private float <RegisterPorts>b__4_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE054E0", Offset = "0xE054E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE054E0", Offset = "0xE054E0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE054E0", Offset = "0xE054E0")]
	public class UIToggleEvent : EventNode<UnityEngine.UI.Toggle>
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput o;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool state;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x27BA514", Offset = "0x27BA514", VA = "0x27BA514", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x27BA63C", Offset = "0x27BA63C", VA = "0x27BA63C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x27BA744", Offset = "0x27BA744", VA = "0x27BA744", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x27BA8F4", Offset = "0x27BA8F4", VA = "0x27BA8F4")]
		private void OnValueChanged(bool state)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x27BA954", Offset = "0x27BA954", VA = "0x27BA954")]
		public UIToggleEvent()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x27BA9A0", Offset = "0x27BA9A0", VA = "0x27BA9A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2807C", Offset = "0xE2807C")]
		private UnityEngine.UI.Toggle <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x27BA9F4", Offset = "0x27BA9F4", VA = "0x27BA9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2808C", Offset = "0xE2808C")]
		private bool <RegisterPorts>b__4_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05568", Offset = "0xE05568")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05568", Offset = "0xE05568")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05568", Offset = "0xE05568")]
	public class VisibilityEvents : RouterEventNode<Transform>
	{
		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onVisible;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onInvisible;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject receiver;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x2D0E190", Offset = "0x2D0E190", VA = "0x2D0E190", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x2D0E2E0", Offset = "0x2D0E2E0", VA = "0x2D0E2E0", Slot = "47")]
		protected override void Subscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x2D0E3B4", Offset = "0x2D0E3B4", VA = "0x2D0E3B4", Slot = "48")]
		protected override void UnSubscribe(EventRouter router)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x2D0E488", Offset = "0x2D0E488", VA = "0x2D0E488")]
		private void OnBecameVisible(EventData msg)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x2D0E548", Offset = "0x2D0E548", VA = "0x2D0E548")]
		private void OnBecameInvisible(EventData msg)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x2D0E608", Offset = "0x2D0E608", VA = "0x2D0E608")]
		public VisibilityEvents()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x2D0E654", Offset = "0x2D0E654", VA = "0x2D0E654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2809C", Offset = "0xE2809C")]
		private GameObject <RegisterPorts>b__3_0()
		{
			return null;
		}
	}
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE055F0", Offset = "0xE055F0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE055F0", Offset = "0xE055F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE055F0", Offset = "0xE055F0")]
	public class ConditionalUpdateEvent : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput becameTrue;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput becameFalse;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<bool> condition;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool lastState;

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x22B9C3C", Offset = "0x22B9C3C", VA = "0x22B9C3C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x22B9D38", Offset = "0x22B9D38", VA = "0x22B9D38", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x22B9E28", Offset = "0x22B9E28", VA = "0x22B9E28")]
		public ConditionalUpdateEvent()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05678", Offset = "0xE05678")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05678", Offset = "0xE05678")]
	public class DebugEvent : EventNode
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x28396B4", Offset = "0x28396B4", VA = "0x28396B4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x28396B8", Offset = "0x28396B8", VA = "0x28396B8")]
		public DebugEvent()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE056D8", Offset = "0xE056D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE056D8", Offset = "0xE056D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE056D8", Offset = "0xE056D8")]
	public class OscillatorEvent : EventNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float time;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float value;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput hi;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput low;

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x26A260C", Offset = "0x26A260C", VA = "0x26A260C")]
		public OscillatorEvent()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x26A283C", Offset = "0x26A283C", VA = "0x26A283C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x26A298C", Offset = "0x26A298C", VA = "0x26A298C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x26A2994", Offset = "0x26A2994", VA = "0x26A2994", Slot = "47")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x26A2A84", Offset = "0x26A2A84", VA = "0x26A2A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE280AC", Offset = "0xE280AC")]
		private float <RegisterPorts>b__6_0()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05760", Offset = "0xE05760")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05760", Offset = "0xE05760")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05760", Offset = "0xE05760")]
	public class VariableChangedEvent : EventNode
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBObjectParameter targetVariable;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object newValue;

		[Token(Token = "0x17000199")]
		public override string name
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x27C4F98", Offset = "0x27C4F98", VA = "0x27C4F98", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x27C4FFC", Offset = "0x27C4FFC", VA = "0x27C4FFC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x27C50FC", Offset = "0x27C50FC", VA = "0x27C50FC", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x27C51B8", Offset = "0x27C51B8", VA = "0x27C51B8", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x27C52D8", Offset = "0x27C52D8", VA = "0x27C52D8")]
		private void OnValueChanged(object value)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x27C5344", Offset = "0x27C5344", VA = "0x27C5344")]
		private void OnVariableRefChange(Variable newVarRef)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x27C53A8", Offset = "0x27C53A8", VA = "0x27C53A8")]
		public VariableChangedEvent()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x27C53B0", Offset = "0x27C53B0", VA = "0x27C53B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE280BC", Offset = "0xE280BC")]
		private object <RegisterPorts>b__7_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE057E8", Offset = "0xE057E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE057E8", Offset = "0xE057E8")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE057E8", Offset = "0xE057E8")]
	public class Chance : FlowControlNode
	{
		[Token(Token = "0x2000233")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE058C4", Offset = "0xE058C4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<float> min;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<float> max;

			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<float> chance;

			[Token(Token = "0x4000C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput success;

			[Token(Token = "0x4000C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput failure;

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x2729AD8", Offset = "0x2729AD8", VA = "0x2729AD8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x2729AE0", Offset = "0x2729AE0", VA = "0x2729AE0")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x2DFE534", Offset = "0x2DFE534", VA = "0x2DFE534", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x2DFE790", Offset = "0x2DFE790", VA = "0x2DFE790")]
		public Chance()
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE058D4", Offset = "0xE058D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE058D4", Offset = "0xE058D4")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE058D4", Offset = "0xE058D4")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE058D4", Offset = "0xE058D4")]
	public class Cooldown : FlowControlNode
	{
		[Token(Token = "0x2000235")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE059F8", Offset = "0xE059F8")]
		private sealed class <CountDown>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cooldown <>4__this;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Flow f;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <total>5__2;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E6C")]
				[Address(RVA = "0x272BB84", Offset = "0x272BB84", VA = "0x272BB84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E6E")]
				[Address(RVA = "0x272BBCC", Offset = "0x272BBCC", VA = "0x272BBCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x272B934", Offset = "0x272B934", VA = "0x272B934")]
			[DebuggerHidden]
			public <CountDown>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x272B960", Offset = "0x272B960", VA = "0x272B960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x272B964", Offset = "0x272B964", VA = "0x272B964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x272BB8C", Offset = "0x272BB8C", VA = "0x272BB8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine coroutine;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float remaining;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float remainingNormalized;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput start;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput finish;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput update;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<float> time;

		[Token(Token = "0x1700019A")]
		public override string name
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x282D094", Offset = "0x282D094", VA = "0x282D094", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x282D12C", Offset = "0x282D12C", VA = "0x282D12C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x282D13C", Offset = "0x282D13C", VA = "0x282D13C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x282D180", Offset = "0x282D180", VA = "0x282D180", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x282D4FC", Offset = "0x282D4FC", VA = "0x282D4FC")]
		private void Begin(Flow f)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x282D624", Offset = "0x282D624", VA = "0x282D624")]
		private void Cancel(Flow f)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x282D580", Offset = "0x282D580", VA = "0x282D580")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE280CC", Offset = "0xE280CC")]
		private IEnumerator CountDown(Flow f)
		{
			return null;
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x282D668", Offset = "0x282D668", VA = "0x282D668")]
		public Cooldown()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x282D670", Offset = "0x282D670", VA = "0x282D670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2812C", Offset = "0xE2812C")]
		private float <RegisterPorts>b__11_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x282D680", Offset = "0x282D680", VA = "0x282D680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2813C", Offset = "0xE2813C")]
		private float <RegisterPorts>b__11_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05A08", Offset = "0xE05A08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05A08", Offset = "0xE05A08")]
	public class DoOnce : FlowControlNode
	{
		[Token(Token = "0x2000237")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05A68", Offset = "0xE05A68")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DoOnce <>4__this;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x272D738", Offset = "0x272D738", VA = "0x272D738")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x272D740", Offset = "0x272D740", VA = "0x272D740")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x272D7A8", Offset = "0x272D7A8", VA = "0x272D7A8")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool called;

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x283E9BC", Offset = "0x283E9BC", VA = "0x283E9BC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x283E9C4", Offset = "0x283E9C4", VA = "0x283E9C4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x283EB58", Offset = "0x283EB58", VA = "0x283EB58")]
		public DoOnce()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05A78", Offset = "0xE05A78")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05A78", Offset = "0xE05A78")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05A78", Offset = "0xE05A78")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE05A78", Offset = "0xE05A78")]
	public class ReadFlowParameter<T> : FlowControlNode
	{
		[Token(Token = "0x2000239")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05B7C", Offset = "0xE05B7C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReadFlowParameter<T> <>4__this;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> pName;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000E77")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000E78")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x6000E79")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T flowValue;

		[Token(Token = "0x6000E75")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E76")]
		public ReadFlowParameter()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05B8C", Offset = "0xE05B8C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE05B8C", Offset = "0xE05B8C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05B8C", Offset = "0xE05B8C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05B8C", Offset = "0xE05B8C")]
	public class WriteFlowParameter<T> : FlowControlNode
	{
		[Token(Token = "0x200023B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05C90", Offset = "0xE05C90")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> pName;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> pValue;

			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000E7C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000E7D")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E7A")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E7B")]
		public WriteFlowParameter()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05CA0", Offset = "0xE05CA0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05CA0", Offset = "0xE05CA0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05CA0", Offset = "0xE05CA0")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE05CA0", Offset = "0xE05CA0")]
	[AttributeAttribute(Name = "DeserializeFromAttribute", RVA = "0xE05CA0", Offset = "0xE05CA0")]
	public class LatchBool : FlowControlNode
	{
		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05DC8", Offset = "0xE05DC8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LatchBool <>4__this;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x2EE0C10", Offset = "0x2EE0C10", VA = "0x2EE0C10")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x2EE0C18", Offset = "0x2EE0C18", VA = "0x2EE0C18")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x2EE0C78", Offset = "0x2EE0C78", VA = "0x2EE0C78")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x2EE0CD4", Offset = "0x2EE0CD4", VA = "0x2EE0CD4")]
			internal bool <RegisterPorts>b__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool latched;

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x2E392FC", Offset = "0x2E392FC", VA = "0x2E392FC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x2E39528", Offset = "0x2E39528", VA = "0x2E39528")]
		public LatchBool()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05DD8", Offset = "0xE05DD8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05DD8", Offset = "0xE05DD8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05DD8", Offset = "0xE05DD8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE05DD8", Offset = "0xE05DD8")]
	public class LatchInt : FlowControlNode
	{
		[Token(Token = "0x200023F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05EDC", Offset = "0xE05EDC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LatchInt <>4__this;

			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x2EE0CF0", Offset = "0x2EE0CF0", VA = "0x2EE0CF0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x2EE0CF8", Offset = "0x2EE0CF8", VA = "0x2EE0CF8")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05EEC", Offset = "0xE05EEC")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x4000C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass2_0 CS$<>8__locals1;

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x2EE0D14", Offset = "0x2EE0D14", VA = "0x2EE0D14")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x2EE0D1C", Offset = "0x2EE0D1C", VA = "0x2EE0D1C")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DelayedField]
		[SerializeField]
		[ExposeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1ECD8", Offset = "0xE1ECD8")]
		[GatherPortsCallback]
		private int _portCount;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int latched;

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x2E39530", Offset = "0x2E39530", VA = "0x2E39530", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x2E39774", Offset = "0x2E39774", VA = "0x2E39774")]
		public LatchInt()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05EFC", Offset = "0xE05EFC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE05EFC", Offset = "0xE05EFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05EFC", Offset = "0xE05EFC")]
	public class ANDMerge : FlowControlNode
	{
		[Token(Token = "0x2000242")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE05F84", Offset = "0xE05F84")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ANDMerge <>4__this;

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x27289DC", Offset = "0x27289DC", VA = "0x27289DC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x27289E4", Offset = "0x27289E4", VA = "0x27289E4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[GatherPortsCallback]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1ED44", Offset = "0xE1ED44")]
		[ExposeField]
		[SerializeField]
		private int _portCount;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float maxAwaitTime;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] calls;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int lastFrameCall;

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x2A996BC", Offset = "0x2A996BC", VA = "0x2A996BC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x2A99718", Offset = "0x2A99718", VA = "0x2A99718", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x2A996C0", Offset = "0x2A996C0", VA = "0x2A996C0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x2A998B8", Offset = "0x2A998B8", VA = "0x2A998B8")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x2A999DC", Offset = "0x2A999DC", VA = "0x2A999DC")]
		public ANDMerge()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE05F94", Offset = "0xE05F94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE05F94", Offset = "0xE05F94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE05F94", Offset = "0xE05F94")]
	public class AwaitAll : FlowControlNode
	{
		[Token(Token = "0x2000244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06018", Offset = "0xE06018")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AwaitAll <>4__this;

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x2729488", Offset = "0x2729488", VA = "0x2729488")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x2729490", Offset = "0x2729490", VA = "0x2729490")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DelayedField]
		[ExposeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1EDB0", Offset = "0xE1EDB0")]
		[GatherPortsCallback]
		[SerializeField]
		private int _portCount;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float maxAwaitTime;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] calls;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int lastFrameCall;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x2AA9728", Offset = "0x2AA9728", VA = "0x2AA9728", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x2AA9784", Offset = "0x2AA9784", VA = "0x2AA9784", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x2AA972C", Offset = "0x2AA972C", VA = "0x2AA972C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x2AA9924", Offset = "0x2AA9924", VA = "0x2AA9924")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x2AA9A48", Offset = "0x2AA9A48", VA = "0x2AA9A48")]
		public AwaitAll()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06028", Offset = "0xE06028")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06028", Offset = "0xE06028")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06028", Offset = "0xE06028")]
	public class ORMerge : FlowControlNode
	{
		[Token(Token = "0x2000246")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE060B0", Offset = "0xE060B0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ORMerge <>4__this;

			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x2EE2764", Offset = "0x2EE2764", VA = "0x2EE2764")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x2EE276C", Offset = "0x2EE276C", VA = "0x2EE276C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[GatherPortsCallback]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1EE1C", Offset = "0xE1EE1C")]
		[ExposeField]
		[SerializeField]
		private int _portCount;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int lastFrameCall;

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x26A0938", Offset = "0x26A0938", VA = "0x26A0938", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x26A0AA8", Offset = "0x26A0AA8", VA = "0x26A0AA8")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x26A0B28", Offset = "0x26A0B28", VA = "0x26A0B28")]
		public ORMerge()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE060C0", Offset = "0xE060C0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE060C0", Offset = "0xE060C0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE060C0", Offset = "0xE060C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE060C0", Offset = "0xE060C0")]
	public class XORMerge : FlowControlNode
	{
		[Token(Token = "0x2000248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06158", Offset = "0xE06158")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public XORMerge <>4__this;

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x313672C", Offset = "0x313672C", VA = "0x313672C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x3136734", Offset = "0x3136734", VA = "0x3136734")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1EE88", Offset = "0xE1EE88")]
		[GatherPortsCallback]
		[ExposeField]
		[SerializeField]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] calls;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int lastFrameCall;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x2D12AA4", Offset = "0x2D12AA4", VA = "0x2D12AA4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x2D12C44", Offset = "0x2D12C44", VA = "0x2D12C44")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x2D12D40", Offset = "0x2D12D40", VA = "0x2D12D40")]
		public XORMerge()
		{
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06168", Offset = "0xE06168")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE06168", Offset = "0xE06168")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06168", Offset = "0xE06168")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06168", Offset = "0xE06168")]
	public abstract class FlowControlNode : FlowNode
	{
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x2928150", Offset = "0x2928150", VA = "0x2928150")]
		protected FlowControlNode()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0628C", Offset = "0xE0628C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0628C", Offset = "0xE0628C")]
	public class Break : FlowControlNode
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x2DF56CC", Offset = "0x2DF56CC", VA = "0x2DF56CC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x2DF577C", Offset = "0x2DF577C", VA = "0x2DF577C")]
		public Break()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x2DF5784", Offset = "0x2DF5784", VA = "0x2DF5784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2819C", Offset = "0xE2819C")]
		private void <RegisterPorts>b__0_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE062EC", Offset = "0xE062EC")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE062EC", Offset = "0xE062EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE062EC", Offset = "0xE062EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE062EC", Offset = "0xE062EC")]
	public class ForEach : FlowControlNode
	{
		[Token(Token = "0x200024C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06424", Offset = "0xE06424")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ForEach <>4__this;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fFinish;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fCurrent;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowBreak <>9__4;

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x2730350", Offset = "0x2730350", VA = "0x2730350")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x2730358", Offset = "0x2730358", VA = "0x2730358")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x2730374", Offset = "0x2730374", VA = "0x2730374")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x2730390", Offset = "0x2730390", VA = "0x2730390")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x2730800", Offset = "0x2730800", VA = "0x2730800")]
			internal void <RegisterPorts>b__4()
			{
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x2730820", Offset = "0x2730820", VA = "0x2730820")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object currentObject;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int currentIndex;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool broken;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<IEnumerable> enumerableInput;

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x292F748", Offset = "0x292F748", VA = "0x292F748", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x292FA98", Offset = "0x292FA98", VA = "0x292FA98", Slot = "46")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x292FB10", Offset = "0x292FB10", VA = "0x292FB10", Slot = "43")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x292FCFC", Offset = "0x292FCFC", VA = "0x292FCFC")]
		public ForEach()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06434", Offset = "0xE06434")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06434", Offset = "0xE06434")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06434", Offset = "0xE06434")]
	public class ForEach<T> : FlowControlNode
	{
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06520", Offset = "0xE06520")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ForEach<T> <>4__this;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<IEnumerable<T>> list;

			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput fFinish;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput fCurrent;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowBreak <>9__4;

			[Token(Token = "0x6000EB2")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000EB3")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x6000EB4")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x6000EB5")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x6000EB6")]
			internal void <RegisterPorts>b__4()
			{
			}

			[Token(Token = "0x6000EB7")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T currentObject;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentIndex;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool broken;

		[Token(Token = "0x6000EB0")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EB1")]
		public ForEach()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06530", Offset = "0xE06530")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06530", Offset = "0xE06530")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06530", Offset = "0xE06530")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06530", Offset = "0xE06530")]
	public class ForLoop : FlowControlNode
	{
		[Token(Token = "0x2000250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06654", Offset = "0xE06654")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ForLoop <>4__this;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fCurrent;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFinish;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowBreak <>9__3;

			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x2730840", Offset = "0x2730840", VA = "0x2730840")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x2730848", Offset = "0x2730848", VA = "0x2730848")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x2730864", Offset = "0x2730864", VA = "0x2730864")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x2730AE8", Offset = "0x2730AE8", VA = "0x2730AE8")]
			internal void <RegisterPorts>b__3()
			{
			}

			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x2730B08", Offset = "0x2730B08", VA = "0x2730B08")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1EEF4", Offset = "0xE1EEF4")]
		public bool reverse;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int current;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool broken;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<int> first;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<int> last;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<int> step;

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x292FD04", Offset = "0x292FD04", VA = "0x292FD04", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x2930064", Offset = "0x2930064", VA = "0x2930064")]
		public ForLoop()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06664", Offset = "0xE06664")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06664", Offset = "0xE06664")]
	public class Dummy : FlowControlNode
	{
		[Token(Token = "0x2000252")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE066C8", Offset = "0xE066C8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput fOut;

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x272D7C4", Offset = "0x272D7C4", VA = "0x272D7C4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x272D7CC", Offset = "0x272D7CC", VA = "0x272D7CC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public override string name
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x283EEF8", Offset = "0x283EEF8", VA = "0x283EEF8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x283EF00", Offset = "0x283EF00", VA = "0x283EF00", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x283F020", Offset = "0x283F020", VA = "0x283F020")]
		public Dummy()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE066D8", Offset = "0xE066D8")]
	public class Finish : FlowControlNode
	{
		[Token(Token = "0x2000254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06710", Offset = "0xE06710")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Finish <>4__this;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<bool> c;

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x272FCF4", Offset = "0x272FCF4", VA = "0x272FCF4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x272FCFC", Offset = "0x272FCFC", VA = "0x272FCFC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x2927EC4", Offset = "0x2927EC4", VA = "0x2927EC4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x2928148", Offset = "0x2928148", VA = "0x2928148")]
		public Finish()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06720", Offset = "0xE06720")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06720", Offset = "0xE06720")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE06720", Offset = "0xE06720")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06720", Offset = "0xE06720")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06720", Offset = "0xE06720")]
	public class GoToLabel : FlowControlNode, IEditorMenuCallbackReceiver
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DelayedField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1EF2C", Offset = "0xE1EF2C")]
		public string identifier;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF78", Offset = "0xE1EF78")]
		private FlowOutput <port>k__BackingField;

		[Token(Token = "0x1700019E")]
		[HideInInspector]
		public FlowOutput port
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x29C4BEC", Offset = "0x29C4BEC", VA = "0x29C4BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE281AC", Offset = "0xE281AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x29C4BF4", Offset = "0x29C4BF4", VA = "0x29C4BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE281BC", Offset = "0xE281BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public override string name
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x29C4BFC", Offset = "0x29C4BFC", VA = "0x29C4BFC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x29C4C64", Offset = "0x29C4C64", VA = "0x29C4C64", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x29C4CDC", Offset = "0x29C4CDC", VA = "0x29C4CDC")]
		public GoToLabel()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06848", Offset = "0xE06848")]
	[DoNotList]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06848", Offset = "0xE06848")]
	public class GoToStatement : FlowControlNode, IHaveNodeReference, IGraphElement
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE1EF88", Offset = "0xE1EF88")]
		public NodeReference<GoToLabel> _targetLabel;

		[Token(Token = "0x170001A0")]
		private INodeReference NodeCanvas.Framework.IHaveNodeReference.targetReference
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x29C4DD8", Offset = "0x29C4DD8", VA = "0x29C4DD8", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private GoToLabel target
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x29C4DE0", Offset = "0x29C4DE0", VA = "0x29C4DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public override string name
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x29C4E38", Offset = "0x29C4E38", VA = "0x29C4E38", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x29C4ED0", Offset = "0x29C4ED0", VA = "0x29C4ED0")]
		public void SetTarget(GoToLabel newTarget)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x29C4F58", Offset = "0x29C4F58", VA = "0x29C4F58", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x29C5008", Offset = "0x29C5008", VA = "0x29C5008")]
		public GoToStatement()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x29C5010", Offset = "0x29C5010", VA = "0x29C5010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE281CC", Offset = "0xE281CC")]
		private void <RegisterPorts>b__8_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06910", Offset = "0xE06910")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06910", Offset = "0xE06910")]
	public class Merge : FlowControlNode
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[GatherPortsCallback]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1EFC0", Offset = "0xE1EFC0")]
		[ExposeField]
		private int _portCount;

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x2D00ABC", Offset = "0x2D00ABC", VA = "0x2D00ABC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x2D00BDC", Offset = "0x2D00BDC", VA = "0x2D00BDC")]
		public Merge()
		{
		}
	}
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06974", Offset = "0xE06974")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06974", Offset = "0xE06974")]
	public class Split : FlowControlNode
	{
		[Token(Token = "0x2000259")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE069D8", Offset = "0xE069D8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FlowOutput> outs;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Split <>4__this;

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x312F358", Offset = "0x312F358", VA = "0x312F358")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x312F360", Offset = "0x312F360", VA = "0x312F360")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ExposeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F02C", Offset = "0xE1F02C")]
		[DelayedField]
		[GatherPortsCallback]
		[SerializeField]
		private int _portCount;

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x2587884", Offset = "0x2587884", VA = "0x2587884", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x2587A64", Offset = "0x2587A64", VA = "0x2587A64")]
		public Split()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE069E8", Offset = "0xE069E8")]
	public class TryCatch : FlowControlNode
	{
		[Token(Token = "0x200025B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06A20", Offset = "0xE06A20")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput fTry;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fCatch;

			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFinally;

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x3131568", Offset = "0x3131568", VA = "0x3131568")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x3131570", Offset = "0x3131570", VA = "0x3131570")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x27B4564", Offset = "0x27B4564", VA = "0x27B4564", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x27B46F4", Offset = "0x27B46F4", VA = "0x27B46F4")]
		public TryCatch()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06A30", Offset = "0xE06A30")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06A30", Offset = "0xE06A30")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06A30", Offset = "0xE06A30")]
	public class CoroutineState : FlowControlNode
	{
		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06AB8", Offset = "0xE06AB8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CoroutineState <>4__this;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fStart;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput fFinish;

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x272BBD4", Offset = "0x272BBD4", VA = "0x272BBD4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x272BBDC", Offset = "0x272BBDC", VA = "0x272BBDC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x272BC78", Offset = "0x272BC78", VA = "0x272BC78")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06AC8", Offset = "0xE06AC8")]
		private sealed class <DoRepeat>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fStart;

			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Flow f;

			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public CoroutineState <>4__this;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public FlowOutput fFinish;

			[Token(Token = "0x170001A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE9")]
				[Address(RVA = "0x272BEB4", Offset = "0x272BEB4", VA = "0x272BEB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EEB")]
				[Address(RVA = "0x272BEFC", Offset = "0x272BEFC", VA = "0x272BEFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x272BC94", Offset = "0x272BC94", VA = "0x272BC94")]
			[DebuggerHidden]
			public <DoRepeat>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x272BCC0", Offset = "0x272BCC0", VA = "0x272BCC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x272BCC4", Offset = "0x272BCC4", VA = "0x272BCC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x272BEBC", Offset = "0x272BEBC", VA = "0x272BEBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool active;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine coroutine;

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x282EDF0", Offset = "0x282EDF0", VA = "0x282EDF0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x282EE20", Offset = "0x282EE20", VA = "0x282EE20", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x282F010", Offset = "0x282F010", VA = "0x282F010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE281DC", Offset = "0xE281DC")]
		private IEnumerator DoRepeat(FlowOutput fStart, FlowOutput fUpdate, FlowOutput fFinish, Flow f)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x282F0F8", Offset = "0x282F0F8", VA = "0x282F0F8")]
		public CoroutineState()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x282F100", Offset = "0x282F100", VA = "0x282F100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2823C", Offset = "0xE2823C")]
		private void <DoRepeat>b__4_0()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06AD8", Offset = "0xE06AD8")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06AD8", Offset = "0xE06AD8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06AD8", Offset = "0xE06AD8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE06AD8", Offset = "0xE06AD8")]
	public class While : FlowControlNode
	{
		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06BDC", Offset = "0xE06BDC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public While <>4__this;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFinish;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<bool> c;

			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x31363C8", Offset = "0x31363C8", VA = "0x31363C8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x31363D0", Offset = "0x31363D0", VA = "0x31363D0")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x2000261")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06BEC", Offset = "0xE06BEC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool active;

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x3136450", Offset = "0x3136450", VA = "0x3136450")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x3136458", Offset = "0x3136458", VA = "0x3136458")]
			internal void <DoWhile>b__0()
			{
			}
		}

		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06BFC", Offset = "0xE06BFC")]
		private sealed class <DoWhile>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Flow f;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public While <>4__this;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public ValueInput<bool> condition;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public FlowOutput fFinish;

			[Token(Token = "0x170001A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF8")]
				[Address(RVA = "0x31366DC", Offset = "0x31366DC", VA = "0x31366DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EFA")]
				[Address(RVA = "0x3136724", Offset = "0x3136724", VA = "0x3136724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x3136460", Offset = "0x3136460", VA = "0x3136460")]
			[DebuggerHidden]
			public <DoWhile>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x313648C", Offset = "0x313648C", VA = "0x313648C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x3136490", Offset = "0x3136490", VA = "0x3136490", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x31366E4", Offset = "0x31366E4", VA = "0x31366E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine coroutine;

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x2D11014", Offset = "0x2D11014", VA = "0x2D11014", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x2D11020", Offset = "0x2D11020", VA = "0x2D11020", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x2D11068", Offset = "0x2D11068", VA = "0x2D11068", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x2D11220", Offset = "0x2D11220", VA = "0x2D11220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2829C", Offset = "0xE2829C")]
		private IEnumerator DoWhile(FlowOutput fUpdate, FlowOutput fFinish, Flow f, ValueInput<bool> condition)
		{
			return null;
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x2D11304", Offset = "0x2D11304", VA = "0x2D11304")]
		public While()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06C0C", Offset = "0xE06C0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06C0C", Offset = "0xE06C0C")]
	public class SelectOnBool<T> : FlowControlNode
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<bool> condition;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<T> isTrue;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<T> isFalse;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueOutput<T> result;

		[Token(Token = "0x6000EFB")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000EFC")]
		public SelectOnBool()
		{
		}

		[Token(Token = "0x6000EFD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2834C", Offset = "0xE2834C")]
		private T <RegisterPorts>b__4_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06C7C", Offset = "0xE06C7C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06C7C", Offset = "0xE06C7C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06C7C", Offset = "0xE06C7C")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06C7C", Offset = "0xE06C7C")]
	public class SelectOnEnum<T> : FlowControlNode
	{
		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06DDC", Offset = "0xE06DDC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput selector;

			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x6000F04")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000F05")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x170001A7")]
		private Type type
		{
			[Token(Token = "0x6000EFE")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFF")]
			set
			{
			}
		}

		[Token(Token = "0x6000F00")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F01")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000F02")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000F03")]
		public SelectOnEnum()
		{
		}
	}
	[Token(Token = "0x2000266")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06DEC", Offset = "0xE06DEC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06DEC", Offset = "0xE06DEC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06DEC", Offset = "0xE06DEC")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06DEC", Offset = "0xE06DEC")]
	public class SelectOnInt<T> : FlowControlNode
	{
		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE06F4C", Offset = "0xE06F4C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<int> selector;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> defaultCase;

			[Token(Token = "0x6000F08")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F09")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F0A8", Offset = "0xE1F0A8")]
		[DelayedField]
		[SerializeField]
		private int _portCount;

		[Token(Token = "0x6000F06")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F07")]
		public SelectOnInt()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE06F5C", Offset = "0xE06F5C")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE06F5C", Offset = "0xE06F5C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE06F5C", Offset = "0xE06F5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE06F5C", Offset = "0xE06F5C")]
	[HasRefreshButton]
	[ExposeAsDefinition]
	public class SelectOnString<T> : FlowControlNode
	{
		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE070CC", Offset = "0xE070CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> selector;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectOnString<T> <>4__this;

			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> defaultCase;

			[Token(Token = "0x6000F0C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F0D")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1F114", Offset = "0xE1F114")]
		public List<string> stringCases;

		[Token(Token = "0x6000F0A")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F0B")]
		public SelectOnString()
		{
		}
	}
	[Token(Token = "0x200026A")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE070DC", Offset = "0xE070DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE070DC", Offset = "0xE070DC")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE070DC", Offset = "0xE070DC")]
	[HasRefreshButton]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE070DC", Offset = "0xE070DC")]
	public class SelectOnTag<T> : FlowControlNode
	{
		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0724C", Offset = "0xE0724C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<GameObject> selector;

			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectOnTag<T> <>4__this;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x6000F10")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F11")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x6000F0E")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F0F")]
		public SelectOnTag()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0725C", Offset = "0xE0725C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0725C", Offset = "0xE0725C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0725C", Offset = "0xE0725C")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0725C", Offset = "0xE0725C")]
	public class Random : FlowControlNode
	{
		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0738C", Offset = "0xE0738C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Random <>4__this;

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<FlowOutput> outs;

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x2EE5014", Offset = "0x2EE5014", VA = "0x2EE5014")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x2EE501C", Offset = "0x2EE501C", VA = "0x2EE501C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x2EE50F0", Offset = "0x2EE50F0", VA = "0x2EE50F0")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F160", Offset = "0xE1F160")]
		[ExposeField]
		[SerializeField]
		[GatherPortsCallback]
		private int _portCount;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int current;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x2686A24", Offset = "0x2686A24", VA = "0x2686A24", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x2686C9C", Offset = "0x2686C9C", VA = "0x2686C9C")]
		public Random()
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0739C", Offset = "0xE0739C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0739C", Offset = "0xE0739C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0739C", Offset = "0xE0739C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0739C", Offset = "0xE0739C")]
	public class SwitchBool : FlowControlNode
	{
		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE074A0", Offset = "0xE074A0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<bool> selector;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput caseTrue;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput caseFalse;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput caseThen;

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x312F97C", Offset = "0x312F97C", VA = "0x312F97C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x312F984", Offset = "0x312F984", VA = "0x312F984")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x258D088", Offset = "0x258D088", VA = "0x258D088", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x258D264", Offset = "0x258D264", VA = "0x258D264")]
		public SwitchBool()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE074B0", Offset = "0xE074B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE074B0", Offset = "0xE074B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE074B0", Offset = "0xE074B0")]
	public class SwitchComparison : FlowControlNode
	{
		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0758C", Offset = "0xE0758C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<IComparable> a;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<IComparable> b;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput equal;

			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput notEqual;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput greater;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FlowOutput less;

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x312FA14", Offset = "0x312FA14", VA = "0x312FA14")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x312FA1C", Offset = "0x312FA1C", VA = "0x312FA1C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x258D26C", Offset = "0x258D26C", VA = "0x258D26C", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x258D508", Offset = "0x258D508", VA = "0x258D508")]
		public SwitchComparison()
		{
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0759C", Offset = "0xE0759C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0759C", Offset = "0xE0759C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0759C", Offset = "0xE0759C")]
	public class SwitchEnum : FlowControlNode
	{
		[Token(Token = "0x2000273")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07678", Offset = "0xE07678")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput selector;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, FlowOutput> cases;

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x312FC34", Offset = "0x312FC34", VA = "0x312FC34")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x312FC3C", Offset = "0x312FC3C", VA = "0x312FC3C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x170001A8")]
		private Type type
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x258D510", Offset = "0x258D510", VA = "0x258D510")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x258D51C", Offset = "0x258D51C", VA = "0x258D51C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x258D5F4", Offset = "0x258D5F4", VA = "0x258D5F4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x258D9A4", Offset = "0x258D9A4", VA = "0x258D9A4", Slot = "46")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x258DA1C", Offset = "0x258DA1C", VA = "0x258DA1C", Slot = "43")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x258DB9C", Offset = "0x258DB9C", VA = "0x258DB9C")]
		public SwitchEnum()
		{
		}
	}
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE07688", Offset = "0xE07688")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE07688", Offset = "0xE07688")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07688", Offset = "0xE07688")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07688", Offset = "0xE07688")]
	public class SwitchInt : FlowControlNode
	{
		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0778C", Offset = "0xE0778C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> selector;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput[] cases;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput defaultCase;

			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x312FD00", Offset = "0x312FD00", VA = "0x312FD00")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x312FD08", Offset = "0x312FD08", VA = "0x312FD08")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F1DC", Offset = "0xE1F1DC")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x258DCF0", Offset = "0x258DCF0", VA = "0x258DCF0", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x258DF60", Offset = "0x258DF60", VA = "0x258DF60")]
		public SwitchInt()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[HasRefreshButton]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0779C", Offset = "0xE0779C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0779C", Offset = "0xE0779C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0779C", Offset = "0xE0779C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0779C", Offset = "0xE0779C")]
	public class SwitchIntCustom : FlowControlNode
	{
		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE078B0", Offset = "0xE078B0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> selector;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SwitchIntCustom <>4__this;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput[] cases;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput defaultCase;

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x312FDB0", Offset = "0x312FDB0", VA = "0x312FDB0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x312FDB8", Offset = "0x312FDB8", VA = "0x312FDB8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<int> intCases;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x258DF70", Offset = "0x258DF70", VA = "0x258DF70", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x258E254", Offset = "0x258E254", VA = "0x258E254")]
		public SwitchIntCustom()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE078C0", Offset = "0xE078C0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE078C0", Offset = "0xE078C0")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE078C0", Offset = "0xE078C0")]
	public class SwitchProbability : FlowControlNode
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ExposeField]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F248", Offset = "0xE1F248")]
		[GatherPortsCallback]
		[SerializeField]
		private int _portCount;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<ValueInput<float>> probabilityValues;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<FlowOutput> probabilityOuts;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float[] cacheValues;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int current;

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x258E2D8", Offset = "0x258E2D8", VA = "0x258E2D8", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x258E668", Offset = "0x258E668", VA = "0x258E668")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x258E848", Offset = "0x258E848", VA = "0x258E848")]
		public SwitchProbability()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x258E858", Offset = "0x258E858", VA = "0x258E858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2835C", Offset = "0xE2835C")]
		private int <RegisterPorts>b__5_0()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE079C8", Offset = "0xE079C8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE079C8", Offset = "0xE079C8")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE079C8", Offset = "0xE079C8")]
	[HasRefreshButton]
	public class SwitchString : FlowControlNode
	{
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07AB4", Offset = "0xE07AB4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> selector;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SwitchString <>4__this;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput[] cases;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput defaultCase;

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x312FF34", Offset = "0x312FF34", VA = "0x312FF34")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x312FF3C", Offset = "0x312FF3C", VA = "0x312FF3C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1F2B4", Offset = "0xE1F2B4")]
		public List<string> comparisonOutputs;

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x258E860", Offset = "0x258E860", VA = "0x258E860", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x258EB48", Offset = "0x258EB48", VA = "0x258EB48")]
		public SwitchString()
		{
		}
	}
	[Token(Token = "0x200027B")]
	[HasRefreshButton]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE07AC4", Offset = "0xE07AC4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07AC4", Offset = "0xE07AC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07AC4", Offset = "0xE07AC4")]
	public class SwitchTag : FlowControlNode
	{
		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07BB0", Offset = "0xE07BB0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SwitchTag <>4__this;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<GameObject> selector;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput[] cases;

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x31300CC", Offset = "0x31300CC", VA = "0x31300CC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x31300D4", Offset = "0x31300D4", VA = "0x31300D4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x258EBCC", Offset = "0x258EBCC", VA = "0x258EBCC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x258EE34", Offset = "0x258EE34", VA = "0x258EE34")]
		public SwitchTag()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE07BC0", Offset = "0xE07BC0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07BC0", Offset = "0xE07BC0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07BC0", Offset = "0xE07BC0")]
	public class FlipFlop : FlowControlNode
	{
		[Token(Token = "0x200027E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07C9C", Offset = "0xE07C9C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlipFlop <>4__this;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fFlip;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFlop;

			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x272FD70", Offset = "0x272FD70", VA = "0x272FD70")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x272FD78", Offset = "0x272FD78", VA = "0x272FD78")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x272FDD8", Offset = "0x272FDD8", VA = "0x272FDD8")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x272FDF4", Offset = "0x272FDF4", VA = "0x272FDF4")]
			internal bool <RegisterPorts>b__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isFlip;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool original;

		[Token(Token = "0x170001A9")]
		public override string name
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x2928BB0", Offset = "0x2928BB0", VA = "0x2928BB0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x2928C40", Offset = "0x2928C40", VA = "0x2928C40", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x2928C4C", Offset = "0x2928C4C", VA = "0x2928C4C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x2928C58", Offset = "0x2928C58", VA = "0x2928C58", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x2928EC4", Offset = "0x2928EC4", VA = "0x2928EC4")]
		public FlipFlop()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE07CAC", Offset = "0xE07CAC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07CAC", Offset = "0xE07CAC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07CAC", Offset = "0xE07CAC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE07CAC", Offset = "0xE07CAC")]
	public class MultiToggle : FlowControlNode
	{
		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07DB0", Offset = "0xE07DB0")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FlowOutput> outs;

			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiToggle <>4__this;

			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x2EE2240", Offset = "0x2EE2240", VA = "0x2EE2240")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x2EE2248", Offset = "0x2EE2248", VA = "0x2EE2248")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x2EE2300", Offset = "0x2EE2300", VA = "0x2EE2300")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x2EE2360", Offset = "0x2EE2360", VA = "0x2EE2360")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x2EE23C0", Offset = "0x2EE23C0", VA = "0x2EE23C0")]
			internal int <RegisterPorts>b__3()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F300", Offset = "0xE1F300")]
		[ExposeField]
		[SerializeField]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1F36C", Offset = "0xE1F36C")]
		public int current;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int original;

		[Token(Token = "0x170001AA")]
		public override string name
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x269A3A8", Offset = "0x269A3A8", VA = "0x269A3A8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x269A59C", Offset = "0x269A59C", VA = "0x269A59C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x269A5D0", Offset = "0x269A5D0", VA = "0x269A5D0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x269A5DC", Offset = "0x269A5DC", VA = "0x269A5DC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x269A90C", Offset = "0x269A90C", VA = "0x269A90C")]
		public MultiToggle()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE07DC0", Offset = "0xE07DC0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07DC0", Offset = "0xE07DC0")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE07DC0", Offset = "0xE07DC0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07DC0", Offset = "0xE07DC0")]
	public class Sequence : FlowControlNode
	{
		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07EC4", Offset = "0xE07EC4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FlowOutput> outs;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sequence <>4__this;

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x312E5C0", Offset = "0x312E5C0", VA = "0x312E5C0")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x312E5C8", Offset = "0x312E5C8", VA = "0x312E5C8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x312E6C4", Offset = "0x312E6C4", VA = "0x312E6C4")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x312E6E0", Offset = "0x312E6E0", VA = "0x312E6E0")]
			internal int <RegisterPorts>b__2()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F3A8", Offset = "0xE1F3A8")]
		[ExposeField]
		[GatherPortsCallback]
		private int _portCount;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F414", Offset = "0xE1F414")]
		public int current;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int original;

		[Token(Token = "0x170001AB")]
		public override string name
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x2B47ECC", Offset = "0x2B47ECC", VA = "0x2B47ECC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x2B47E8C", Offset = "0x2B47E8C", VA = "0x2B47E8C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2B47EC0", Offset = "0x2B47EC0", VA = "0x2B47EC0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x2B47F64", Offset = "0x2B47F64", VA = "0x2B47F64", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x2B48238", Offset = "0x2B48238", VA = "0x2B48238")]
		public Sequence()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07ED4", Offset = "0xE07ED4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07ED4", Offset = "0xE07ED4")]
	public class Toggle : FlowControlNode
	{
		[Token(Token = "0x2000284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE07F34", Offset = "0xE07F34")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle <>4__this;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fOn;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fOff;

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x31304E4", Offset = "0x31304E4", VA = "0x31304E4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x31304EC", Offset = "0x31304EC", VA = "0x31304EC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x3130528", Offset = "0x3130528", VA = "0x3130528")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x3130548", Offset = "0x3130548", VA = "0x3130548")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x3130564", Offset = "0x3130564", VA = "0x3130564")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1F428", Offset = "0xE1F428")]
		public bool open;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool original;

		[Token(Token = "0x170001AC")]
		public override string name
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x2597498", Offset = "0x2597498", VA = "0x2597498", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x2597528", Offset = "0x2597528", VA = "0x2597528", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x2597534", Offset = "0x2597534", VA = "0x2597534", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x2597540", Offset = "0x2597540", VA = "0x2597540", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x25977C4", Offset = "0x25977C4", VA = "0x25977C4")]
		public Toggle()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE07F44", Offset = "0xE07F44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE07F44", Offset = "0xE07F44")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE07F44", Offset = "0xE07F44")]
	[AttributeAttribute(Name = "DeserializeFromAttribute", RVA = "0xE07F44", Offset = "0xE07F44")]
	[HasRefreshButton]
	public class CustomFunctionCall : FlowControlNode
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string _sourceOutputUID;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput[] portArgs;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object[] objectArgs;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private WeakReference<CustomFunctionEvent> _sourceFunctionRef;

		[Token(Token = "0x170001AD")]
		private string sourceFunctionUID
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x2830FC8", Offset = "0x2830FC8", VA = "0x2830FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x2830FD0", Offset = "0x2830FD0", VA = "0x2830FD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public CustomFunctionEvent sourceFunction
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x2830FD8", Offset = "0x2830FD8", VA = "0x2830FD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public override string name
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x283115C", Offset = "0x283115C", VA = "0x283115C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public override string description
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x28311E8", Offset = "0x28311E8", VA = "0x28311E8", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x2831250", Offset = "0x2831250", VA = "0x2831250")]
		public void SetFunction(CustomFunctionEvent func)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x2831314", Offset = "0x2831314", VA = "0x2831314", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x28316B8", Offset = "0x28316B8", VA = "0x28316B8")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x2831A14", Offset = "0x2831A14", VA = "0x2831A14")]
		public CustomFunctionCall()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x2831A1C", Offset = "0x2831A1C", VA = "0x2831A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2836C", Offset = "0xE2836C")]
		private bool <get_sourceFunction>b__9_0(CustomFunctionEvent i)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08010", Offset = "0xE08010")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08010", Offset = "0xE08010")]
	[AttributeAttribute(Name = "DeserializeFromAttribute", RVA = "0xE08010", Offset = "0xE08010")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08010", Offset = "0xE08010")]
	public class CustomFunctionEvent : EventNode, IInvokable, IGraphElement, IEditorMenuCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000287")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE080BC", Offset = "0xE080BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DynamicParameterDefinition, Type> <>9__15_0;

			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x272BF68", Offset = "0x272BF68", VA = "0x272BF68")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x272BF70", Offset = "0x272BF70", VA = "0x272BF70")]
			internal Type <get_parameterTypes>b__15_0(DynamicParameterDefinition p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE080CC", Offset = "0xE080CC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomFunctionEvent <>4__this;

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x272BF88", Offset = "0x272BF88", VA = "0x272BF88")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x272BF90", Offset = "0x272BF90", VA = "0x272BF90")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000289")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE080DC", Offset = "0xE080DC")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<object> callback;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomFunctionEvent <>4__this;

			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x272BFD8", Offset = "0x272BFD8", VA = "0x272BFD8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x272BFE0", Offset = "0x272BFE0", VA = "0x272BFE0")]
			internal void <NodeCanvas.Framework.IInvokable.InvokeAsync>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x200028A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE080EC", Offset = "0xE080EC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomFunctionEvent <>4__this;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowHandler flowCallback;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Flow f;

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x272C040", Offset = "0x272C040", VA = "0x272C040")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x272C048", Offset = "0x272C048", VA = "0x272C048")]
			internal void <InvokeAsync>b__0(object o)
			{
			}
		}

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DelayedField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F474", Offset = "0xE1F474")]
		public string identifier;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private List<DynamicParameterDefinition> _parameters;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private DynamicParameterDefinition _returns;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private object[] args;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private object returnValue;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onInvoke;

		[Token(Token = "0x170001B1")]
		public List<DynamicParameterDefinition> parameters
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x2831A54", Offset = "0x2831A54", VA = "0x2831A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x2831A5C", Offset = "0x2831A5C", VA = "0x2831A5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public DynamicParameterDefinition returns
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x2831A64", Offset = "0x2831A64", VA = "0x2831A64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x2831A6C", Offset = "0x2831A6C", VA = "0x2831A6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		private Type returnType
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x2831A74", Offset = "0x2831A74", VA = "0x2831A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private Type[] parameterTypes
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x2831A90", Offset = "0x2831A90", VA = "0x2831A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public override string name
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x2831BD0", Offset = "0x2831BD0", VA = "0x2831BD0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x2831C20", Offset = "0x2831C20", VA = "0x2831C20", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x2831C54", Offset = "0x2831C54", VA = "0x2831C54", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x2831E18", Offset = "0x2831E18", VA = "0x2831E18", Slot = "47")]
		private string NodeCanvas.Framework.IInvokable.GetInvocationID()
		{
			return null;
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x2831E20", Offset = "0x2831E20", VA = "0x2831E20", Slot = "48")]
		private object NodeCanvas.Framework.IInvokable.Invoke(params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2831F2C", Offset = "0x2831F2C", VA = "0x2831F2C", Slot = "49")]
		private void NodeCanvas.Framework.IInvokable.InvokeAsync(Action<object> callback, params object[] args)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2831E28", Offset = "0x2831E28", VA = "0x2831E28")]
		public object Invoke(Flow f, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x2831888", Offset = "0x2831888", VA = "0x2831888")]
		public void InvokeAsync(Flow f, FlowHandler flowCallback, params object[] args)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x283202C", Offset = "0x283202C", VA = "0x283202C")]
		public object GetReturnValue()
		{
			return null;
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x2832034", Offset = "0x2832034", VA = "0x2832034")]
		private void AddParameter(Type type)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x28321E8", Offset = "0x28321E8", VA = "0x28321E8")]
		private void GatherPortsUpdateRefs()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x2832554", Offset = "0x2832554", VA = "0x2832554")]
		public CustomFunctionEvent()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x283264C", Offset = "0x283264C", VA = "0x283264C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2837C", Offset = "0xE2837C")]
		private void <Invoke>b__23_0(object o)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x2832654", Offset = "0x2832654", VA = "0x2832654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2838C", Offset = "0xE2838C")]
		private bool <GatherPortsUpdateRefs>b__27_0(CustomFunctionCall n)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE080FC", Offset = "0xE080FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE080FC", Offset = "0xE080FC")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE080FC", Offset = "0xE080FC")]
	public class Return : FlowControlNode
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[GatherPortsCallback]
		public bool useReturnValue;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<object> returnPort;

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x2B3B030", Offset = "0x2B3B030", VA = "0x2B3B030", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x2B3B13C", Offset = "0x2B3B13C", VA = "0x2B3B13C")]
		public Return()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x2B3B14C", Offset = "0x2B3B14C", VA = "0x2B3B14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2839C", Offset = "0xE2839C")]
		private void <RegisterPorts>b__2_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public abstract class CallableActionNodeBase : SimplexNode
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x2DFA3A4", Offset = "0x2DFA3A4", VA = "0x2DFA3A4")]
		protected CallableActionNodeBase()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public abstract class CallableActionNode : CallableActionNodeBase
	{
		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE081D8", Offset = "0xE081D8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CallableActionNode <>4__this;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x27297DC", Offset = "0x27297DC", VA = "0x27297DC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x27297E4", Offset = "0x27297E4", VA = "0x27297E4")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F8C")]
		public abstract void Invoke();

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x2DFA270", Offset = "0x2DFA270", VA = "0x2DFA270", Slot = "6")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x2DFA39C", Offset = "0x2DFA39C", VA = "0x2DFA39C")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public abstract class CallableActionNode<T1> : CallableActionNodeBase
	{
		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE081E8", Offset = "0xE081E8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1> <>4__this;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000F94")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F95")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F91")]
		public abstract void Invoke(T1 a);

		[Token(Token = "0x6000F92")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F93")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public abstract class CallableActionNode<T1, T2> : CallableActionNodeBase
	{
		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE081F8", Offset = "0xE081F8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2> <>4__this;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000F99")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F9A")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F96")]
		public abstract void Invoke(T1 a, T2 b);

		[Token(Token = "0x6000F97")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F98")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public abstract class CallableActionNode<T1, T2, T3> : CallableActionNodeBase
	{
		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08208", Offset = "0xE08208")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3> <>4__this;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000F9E")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F9F")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F9B")]
		public abstract void Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6000F9C")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F9D")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public abstract class CallableActionNode<T1, T2, T3, T4> : CallableActionNodeBase
	{
		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08218", Offset = "0xE08218")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FA3")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FA4")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FA0")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x6000FA1")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FA2")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5> : CallableActionNodeBase
	{
		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08228", Offset = "0xE08228")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FA8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FA9")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FA5")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x6000FA6")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FA7")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6> : CallableActionNodeBase
	{
		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08238", Offset = "0xE08238")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FAD")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FAE")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FAA")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x6000FAB")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FAC")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7> : CallableActionNodeBase
	{
		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08248", Offset = "0xE08248")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FB2")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FB3")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FAF")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x6000FB0")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FB1")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8> : CallableActionNodeBase
	{
		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08258", Offset = "0xE08258")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FB7")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FB8")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FB4")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x6000FB5")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FB6")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> : CallableActionNodeBase
	{
		[Token(Token = "0x20002A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08268", Offset = "0xE08268")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FBC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FBD")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FB9")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x6000FBA")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FBB")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : CallableActionNodeBase
	{
		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08278", Offset = "0xE08278")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FC1")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000FC2")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FBE")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x6000FBF")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FC0")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public abstract class CallableFunctionNodeBase : SimplexNode
	{
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x2DFA3AC", Offset = "0x2DFA3AC", VA = "0x2DFA3AC")]
		protected CallableFunctionNodeBase()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public abstract class CallableFunctionNode<TResult> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08288", Offset = "0xE08288")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult> <>4__this;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FC7")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FC8")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FC9")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FC4")]
		public abstract TResult Invoke();

		[Token(Token = "0x6000FC5")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FC6")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public abstract class CallableFunctionNode<TResult, T1> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08298", Offset = "0xE08298")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1> <>4__this;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FCD")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FCE")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FCF")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FCA")]
		public abstract TResult Invoke(T1 a);

		[Token(Token = "0x6000FCB")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FCC")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public abstract class CallableFunctionNode<TResult, T1, T2> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE082A8", Offset = "0xE082A8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2> <>4__this;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FD3")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FD4")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FD5")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FD0")]
		public abstract TResult Invoke(T1 a, T2 b);

		[Token(Token = "0x6000FD1")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FD2")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE082B8", Offset = "0xE082B8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3> <>4__this;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FD9")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FDA")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FDB")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FD6")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6000FD7")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FD8")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE082C8", Offset = "0xE082C8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FDF")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FE0")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FE1")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FDC")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x6000FDD")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FDE")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE082D8", Offset = "0xE082D8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FE5")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FE6")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FE7")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FE2")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x6000FE3")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FE4")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE082E8", Offset = "0xE082E8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FEB")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FEC")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FED")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FE8")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x6000FE9")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FEA")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE082F8", Offset = "0xE082F8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FF1")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FF2")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FF3")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FEE")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x6000FEF")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FF0")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08308", Offset = "0xE08308")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FF7")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FF8")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FF9")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FF4")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x6000FF5")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FF6")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08318", Offset = "0xE08318")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6000FFD")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000FFE")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6000FFF")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000FFA")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x6000FFB")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FFC")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : CallableFunctionNodeBase
	{
		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08328", Offset = "0xE08328")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001003")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001004")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6001005")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6001000")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x6001001")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001002")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public abstract class ExtractorNode : SimplexNode
	{
		[Serializable]
		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08338", Offset = "0xE08338")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, bool> <>9__1_0;

			[Token(Token = "0x6001009")]
			[Address(RVA = "0x272F2C8", Offset = "0x272F2C8", VA = "0x272F2C8")]
			public <>c()
			{
			}

			[Token(Token = "0x600100A")]
			[Address(RVA = "0x272F2D0", Offset = "0x272F2D0", VA = "0x272F2D0")]
			internal bool <GetExtractorType>b__1_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, Type> _extractors;

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x28CF288", Offset = "0x28CF288", VA = "0x28CF288")]
		public static Type GetExtractorType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x28CF874", Offset = "0x28CF874", VA = "0x28CF874")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public abstract class ExtractorNode<TInstance, T1, T2> : ExtractorNode
	{
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08348", Offset = "0xE08348")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2> <>4__this;

			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x600100E")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600100F")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001010")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x600100B")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b);

		[Token(Token = "0x600100C")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600100D")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3> : ExtractorNode
	{
		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08358", Offset = "0xE08358")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3> <>4__this;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x6001014")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001015")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001016")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x6001017")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x6001011")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c);

		[Token(Token = "0x6001012")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001013")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3, T4> : ExtractorNode
	{
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08368", Offset = "0xE08368")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x600101B")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600101C")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x600101D")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x600101E")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}

			[Token(Token = "0x600101F")]
			internal T4 <OnRegisterPorts>b__3()
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 d;

		[Token(Token = "0x6001018")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c, out T4 d);

		[Token(Token = "0x6001019")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600101A")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3, T4, T5> : ExtractorNode
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08378", Offset = "0xE08378")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x6001023")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001024")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001025")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x6001026")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}

			[Token(Token = "0x6001027")]
			internal T4 <OnRegisterPorts>b__3()
			{
				return (T4)null;
			}

			[Token(Token = "0x6001028")]
			internal T5 <OnRegisterPorts>b__4()
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 d;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 e;

		[Token(Token = "0x6001020")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c, out T4 d, out T5 e);

		[Token(Token = "0x6001021")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001022")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3, T4, T5, T6> : ExtractorNode
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE08388", Offset = "0xE08388")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x600102C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600102D")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x600102E")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x600102F")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}

			[Token(Token = "0x6001030")]
			internal T4 <OnRegisterPorts>b__3()
			{
				return (T4)null;
			}

			[Token(Token = "0x6001031")]
			internal T5 <OnRegisterPorts>b__4()
			{
				return (T5)null;
			}

			[Token(Token = "0x6001032")]
			internal T6 <OnRegisterPorts>b__5()
			{
				return (T6)null;
			}
		}

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 d;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 e;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T6 f;

		[Token(Token = "0x6001029")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c, out T4 d, out T5 e, out T6 f);

		[Token(Token = "0x600102A")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600102B")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08398", Offset = "0xE08398")]
	[ExposeAsDefinition]
	public class AddDictionaryItem<T> : CallableFunctionNode<IDictionary<string, T>, IDictionary<string, T>, string, T>
	{
		[Token(Token = "0x6001033")]
		public override IDictionary<string, T> Invoke(IDictionary<string, T> dict, string key, T item)
		{
			return null;
		}

		[Token(Token = "0x6001034")]
		public AddDictionaryItem()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE083E4", Offset = "0xE083E4")]
	[ExposeAsDefinition]
	public class GetDictionaryItem<T> : CallableFunctionNode<T, IDictionary<string, T>, string>
	{
		[Token(Token = "0x6001035")]
		public override T Invoke(IDictionary<string, T> dict, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6001036")]
		public GetDictionaryItem()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08430", Offset = "0xE08430")]
	[ExposeAsDefinition]
	public class RemoveDictionaryKey<T> : CallableFunctionNode<IDictionary<string, T>, IDictionary<string, T>, string>
	{
		[Token(Token = "0x6001037")]
		public override IDictionary<string, T> Invoke(IDictionary<string, T> dict, string key)
		{
			return null;
		}

		[Token(Token = "0x6001038")]
		public RemoveDictionaryKey()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0847C", Offset = "0xE0847C")]
	[ExposeAsDefinition]
	public class ClearDictionary : CallableFunctionNode<IDictionary, IDictionary>
	{
		[Token(Token = "0x6001039")]
		[Address(RVA = "0x22B3B9C", Offset = "0x22B3B9C", VA = "0x22B3B9C", Slot = "12")]
		public override IDictionary Invoke(IDictionary dict)
		{
			return null;
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x22B3C50", Offset = "0x22B3C50", VA = "0x22B3C50")]
		public ClearDictionary()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE084C8", Offset = "0xE084C8")]
	[ExposeAsDefinition]
	public class TryGetValue<T> : CallableFunctionNode<T, IDictionary<string, T>, string>
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F4F0", Offset = "0xE1F4F0")]
		private bool <exists>k__BackingField;

		[Token(Token = "0x170001B6")]
		public bool exists
		{
			[Token(Token = "0x600103B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE283AC", Offset = "0xE283AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600103C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE283BC", Offset = "0xE283BC")]
			private set
			{
			}
		}

		[Token(Token = "0x600103D")]
		public override T Invoke(IDictionary<string, T> dict, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x600103E")]
		public TryGetValue()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08514", Offset = "0xE08514")]
	public class DictionaryContainsKey<T> : CallableFunctionNode<bool, IDictionary<string, T>, string>
	{
		[Token(Token = "0x600103F")]
		public override bool Invoke(IDictionary<string, T> dict, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001040")]
		public DictionaryContainsKey()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08560", Offset = "0xE08560")]
	public class ClearList : CallableFunctionNode<IList, IList>
	{
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x22B3C9C", Offset = "0x22B3C9C", VA = "0x22B3C9C", Slot = "12")]
		public override IList Invoke(IList list)
		{
			return null;
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x22B3D50", Offset = "0x22B3D50", VA = "0x22B3D50")]
		public ClearList()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08598", Offset = "0xE08598")]
	[ExposeAsDefinition]
	public class AddListItem<T> : CallableFunctionNode<IList<T>, List<T>, T>
	{
		[Token(Token = "0x6001043")]
		public override IList<T> Invoke(List<T> list, T item)
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		public AddListItem()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE085E4", Offset = "0xE085E4")]
	[ExposeAsDefinition]
	public class InsertListItem<T> : CallableFunctionNode<IList<T>, List<T>, int, T>
	{
		[Token(Token = "0x6001045")]
		public override IList<T> Invoke(List<T> list, int index, T item)
		{
			return null;
		}

		[Token(Token = "0x6001046")]
		public InsertListItem()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08630", Offset = "0xE08630")]
	[ExposeAsDefinition]
	public class RemoveListItem<T> : CallableFunctionNode<IList<T>, List<T>, T>
	{
		[Token(Token = "0x6001047")]
		public override IList<T> Invoke(List<T> list, T item)
		{
			return null;
		}

		[Token(Token = "0x6001048")]
		public RemoveListItem()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0867C", Offset = "0xE0867C")]
	public class RemoveListItemAt<T> : CallableFunctionNode<IList<T>, List<T>, int>
	{
		[Token(Token = "0x6001049")]
		public override IList<T> Invoke(List<T> list, int index)
		{
			return null;
		}

		[Token(Token = "0x600104A")]
		public RemoveListItemAt()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE086C8", Offset = "0xE086C8")]
	[ExposeAsDefinition]
	public class SetListItem<T> : CallableFunctionNode<IList<T>, IList<T>, int, T>
	{
		[Token(Token = "0x600104B")]
		public override IList<T> Invoke(IList<T> list, int index, T item)
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		public SetListItem()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08714", Offset = "0xE08714")]
	[ExposeAsDefinition]
	public class ShuffleList<T> : CallableFunctionNode<IList<T>, IList<T>>
	{
		[Token(Token = "0x600104D")]
		public override IList<T> Invoke(IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		public ShuffleList()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08760", Offset = "0xE08760")]
	[ExposeAsDefinition]
	public class GetListItem<T> : PureFunctionNode<T, IList<T>, int>
	{
		[Token(Token = "0x600104F")]
		public override T Invoke(IList<T> list, int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6001050")]
		public GetListItem()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE087AC", Offset = "0xE087AC")]
	[ExposeAsDefinition]
	public class GetRandomListItem<T> : PureFunctionNode<T, IList<T>>
	{
		[Token(Token = "0x6001051")]
		public override T Invoke(IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6001052")]
		public GetRandomListItem()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE087F8", Offset = "0xE087F8")]
	public class GetLastListItem<T> : PureFunctionNode<T, IList<T>>
	{
		[Token(Token = "0x6001053")]
		public override T Invoke(IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6001054")]
		public GetLastListItem()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08844", Offset = "0xE08844")]
	[ExposeAsDefinition]
	public class GetFirstListItem<T> : PureFunctionNode<T, IList<T>>
	{
		[Token(Token = "0x6001055")]
		public override T Invoke(IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6001056")]
		public GetFirstListItem()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08890", Offset = "0xE08890")]
	[ExposeAsDefinition]
	public class GetListItemIndex : PureFunctionNode<int, IList, object>
	{
		[Token(Token = "0x6001057")]
		[Address(RVA = "0x293947C", Offset = "0x293947C", VA = "0x293947C", Slot = "12")]
		public override int Invoke(IList list, object item)
		{
			return default(int);
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x2939538", Offset = "0x2939538", VA = "0x2939538")]
		public GetListItemIndex()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE088DC", Offset = "0xE088DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE088DC", Offset = "0xE088DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE088DC", Offset = "0xE088DC")]
	public class IsNotNull : PureFunctionNode<bool, object>
	{
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x2E3629C", Offset = "0x2E3629C", VA = "0x2E3629C", Slot = "12")]
		public override bool Invoke(object OBJECT)
		{
			return default(bool);
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x2E362D4", Offset = "0x2E362D4", VA = "0x2E362D4")]
		public IsNotNull()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08964", Offset = "0xE08964")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08964", Offset = "0xE08964")]
	public class IsOfType : PureFunctionNode<bool, object, Type>
	{
		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F500", Offset = "0xE1F500")]
		private object <OBJECT>k__BackingField;

		[Token(Token = "0x170001B7")]
		public object OBJECT
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x2E36320", Offset = "0x2E36320", VA = "0x2E36320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE283CC", Offset = "0xE283CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x2E36328", Offset = "0x2E36328", VA = "0x2E36328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE283DC", Offset = "0xE283DC")]
			private set
			{
			}
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x2E36330", Offset = "0x2E36330", VA = "0x2E36330", Slot = "12")]
		public override bool Invoke(object OBJECT, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x2E363E4", Offset = "0x2E363E4", VA = "0x2E363E4")]
		public IsOfType()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE089C4", Offset = "0xE089C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE089C4", Offset = "0xE089C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE089C4", Offset = "0xE089C4")]
	public class AnyGreaterThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x600105F")]
		[Address(RVA = "0x2AA6A1C", Offset = "0x2AA6A1C", VA = "0x2AA6A1C", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x2AA6AE0", Offset = "0x2AA6AE0", VA = "0x2AA6AE0")]
		public AnyGreaterThan()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08A4C", Offset = "0xE08A4C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08A4C", Offset = "0xE08A4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08A4C", Offset = "0xE08A4C")]
	public class AnyGreaterEqualThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6001061")]
		[Address(RVA = "0x2AA68F0", Offset = "0x2AA68F0", VA = "0x2AA68F0", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x2AA69D0", Offset = "0x2AA69D0", VA = "0x2AA69D0")]
		public AnyGreaterEqualThan()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08AD4", Offset = "0xE08AD4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08AD4", Offset = "0xE08AD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08AD4", Offset = "0xE08AD4")]
	public class AnyLessThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0x2AA6C5C", Offset = "0x2AA6C5C", VA = "0x2AA6C5C", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x2AA6D20", Offset = "0x2AA6D20", VA = "0x2AA6D20")]
		public AnyLessThan()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08B5C", Offset = "0xE08B5C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08B5C", Offset = "0xE08B5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08B5C", Offset = "0xE08B5C")]
	public class AnyLessEqualThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6001065")]
		[Address(RVA = "0x2AA6B2C", Offset = "0x2AA6B2C", VA = "0x2AA6B2C", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x2AA6C10", Offset = "0x2AA6C10", VA = "0x2AA6C10")]
		public AnyLessEqualThan()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08BE4", Offset = "0xE08BE4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08BE4", Offset = "0xE08BE4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08BE4", Offset = "0xE08BE4")]
	public class AnyEqual : PureFunctionNode<bool, object, object>
	{
		[Token(Token = "0x6001067")]
		[Address(RVA = "0x2AA6894", Offset = "0x2AA6894", VA = "0x2AA6894", Slot = "12")]
		public override bool Invoke(object a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x2AA68A4", Offset = "0x2AA68A4", VA = "0x2AA68A4")]
		public AnyEqual()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08C6C", Offset = "0xE08C6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08C6C", Offset = "0xE08C6C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08C6C", Offset = "0xE08C6C")]
	public class AnyNotEqual : PureFunctionNode<bool, object, object>
	{
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x2AA6D6C", Offset = "0x2AA6D6C", VA = "0x2AA6D6C", Slot = "12")]
		public override bool Invoke(object a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x2AA6D94", Offset = "0x2AA6D94", VA = "0x2AA6D94")]
		public AnyNotEqual()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08CF4", Offset = "0xE08CF4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08CF4", Offset = "0xE08CF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08CF4", Offset = "0xE08CF4")]
	public class FloatAdd : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x29290C4", Offset = "0x29290C4", VA = "0x29290C4", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x29290CC", Offset = "0x29290CC", VA = "0x29290CC")]
		public FloatAdd()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08D7C", Offset = "0xE08D7C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08D7C", Offset = "0xE08D7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08D7C", Offset = "0xE08D7C")]
	public class FloatSubtract : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x2929588", Offset = "0x2929588", VA = "0x2929588", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x2929590", Offset = "0x2929590", VA = "0x2929590")]
		public FloatSubtract()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08E04", Offset = "0xE08E04")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08E04", Offset = "0xE08E04")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08E04", Offset = "0xE08E04")]
	public class FloatMultiply : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x600106F")]
		[Address(RVA = "0x29293C8", Offset = "0x29293C8", VA = "0x29293C8", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x29293D0", Offset = "0x29293D0", VA = "0x29293D0")]
		public FloatMultiply()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08E8C", Offset = "0xE08E8C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08E8C", Offset = "0xE08E8C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08E8C", Offset = "0xE08E8C")]
	public class FloatDivide : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6001071")]
		[Address(RVA = "0x2929118", Offset = "0x2929118", VA = "0x2929118", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x2929120", Offset = "0x2929120", VA = "0x2929120")]
		public FloatDivide()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08F14", Offset = "0xE08F14")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08F14", Offset = "0xE08F14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08F14", Offset = "0xE08F14")]
	public class FloatModulo : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6001073")]
		[Address(RVA = "0x2929378", Offset = "0x2929378", VA = "0x2929378", Slot = "12")]
		public override float Invoke(float value, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x292937C", Offset = "0x292937C", VA = "0x292937C")]
		public FloatModulo()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE08F9C", Offset = "0xE08F9C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE08F9C", Offset = "0xE08F9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE08F9C", Offset = "0xE08F9C")]
	public class FloatGreaterThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6001075")]
		[Address(RVA = "0x292921C", Offset = "0x292921C", VA = "0x292921C", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x2929228", Offset = "0x2929228", VA = "0x2929228")]
		public FloatGreaterThan()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09024", Offset = "0xE09024")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09024", Offset = "0xE09024")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09024", Offset = "0xE09024")]
	public class FloatGreaterEqualThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x29291C4", Offset = "0x29291C4", VA = "0x29291C4", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x29291D0", Offset = "0x29291D0", VA = "0x29291D0")]
		public FloatGreaterEqualThan()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE090AC", Offset = "0xE090AC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE090AC", Offset = "0xE090AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE090AC", Offset = "0xE090AC")]
	public class FloatLessThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6001079")]
		[Address(RVA = "0x2929320", Offset = "0x2929320", VA = "0x2929320", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x292932C", Offset = "0x292932C", VA = "0x292932C")]
		public FloatLessThan()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09134", Offset = "0xE09134")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09134", Offset = "0xE09134")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09134", Offset = "0xE09134")]
	public class FloatLessEqualThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x600107B")]
		[Address(RVA = "0x29292C8", Offset = "0x29292C8", VA = "0x29292C8", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x29292D4", Offset = "0x29292D4", VA = "0x29292D4")]
		public FloatLessEqualThan()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE091BC", Offset = "0xE091BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE091BC", Offset = "0xE091BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE091BC", Offset = "0xE091BC")]
	public class FloatEqual : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x292916C", Offset = "0x292916C", VA = "0x292916C", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x2929178", Offset = "0x2929178", VA = "0x2929178")]
		public FloatEqual()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09244", Offset = "0xE09244")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09244", Offset = "0xE09244")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09244", Offset = "0xE09244")]
	public class FloatNotEqual : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x600107F")]
		[Address(RVA = "0x292941C", Offset = "0x292941C", VA = "0x292941C", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x2929428", Offset = "0x2929428", VA = "0x2929428")]
		public FloatNotEqual()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE092CC", Offset = "0xE092CC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE092CC", Offset = "0xE092CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE092CC", Offset = "0xE092CC")]
	public class FloatInvert : PureFunctionNode<float, float>
	{
		[Token(Token = "0x6001081")]
		[Address(RVA = "0x2929274", Offset = "0x2929274", VA = "0x2929274", Slot = "12")]
		public override float Invoke(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x292927C", Offset = "0x292927C", VA = "0x292927C")]
		public FloatInvert()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09354", Offset = "0xE09354")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09354", Offset = "0xE09354")]
	public class FloatSnap : PureFunctionNode<int, float, int>
	{
		[Token(Token = "0x6001083")]
		[Address(RVA = "0x2929474", Offset = "0x2929474", VA = "0x2929474", Slot = "12")]
		public override int Invoke(float value, int interval)
		{
			return default(int);
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x292953C", Offset = "0x292953C", VA = "0x292953C")]
		public FloatSnap()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE093B4", Offset = "0xE093B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE093B4", Offset = "0xE093B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE093B4", Offset = "0xE093B4")]
	public class IntegerAdd : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6001085")]
		[Address(RVA = "0x2E287F0", Offset = "0x2E287F0", VA = "0x2E287F0", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x2E287F8", Offset = "0x2E287F8", VA = "0x2E287F8")]
		public IntegerAdd()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0943C", Offset = "0xE0943C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0943C", Offset = "0xE0943C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0943C", Offset = "0xE0943C")]
	public class IntegerSubtract : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6001087")]
		[Address(RVA = "0x2E28CB8", Offset = "0x2E28CB8", VA = "0x2E28CB8", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x2E28CC0", Offset = "0x2E28CC0", VA = "0x2E28CC0")]
		public IntegerSubtract()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE094C4", Offset = "0xE094C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE094C4", Offset = "0xE094C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE094C4", Offset = "0xE094C4")]
	public class IntegerMultiply : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6001089")]
		[Address(RVA = "0x2E28B04", Offset = "0x2E28B04", VA = "0x2E28B04", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x2E28B0C", Offset = "0x2E28B0C", VA = "0x2E28B0C")]
		public IntegerMultiply()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0954C", Offset = "0xE0954C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0954C", Offset = "0xE0954C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0954C", Offset = "0xE0954C")]
	public class IntegerDivide : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x600108B")]
		[Address(RVA = "0x2E28844", Offset = "0x2E28844", VA = "0x2E28844", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x2E28854", Offset = "0x2E28854", VA = "0x2E28854")]
		public IntegerDivide()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE095D4", Offset = "0xE095D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE095D4", Offset = "0xE095D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE095D4", Offset = "0xE095D4")]
	public class IntegerModulo : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x600108D")]
		[Address(RVA = "0x2E28AAC", Offset = "0x2E28AAC", VA = "0x2E28AAC", Slot = "12")]
		public override int Invoke(int value, int mod)
		{
			return default(int);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x2E28AB8", Offset = "0x2E28AB8", VA = "0x2E28AB8")]
		public IntegerModulo()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0965C", Offset = "0xE0965C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0965C", Offset = "0xE0965C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0965C", Offset = "0xE0965C")]
	public class IntegerGreaterThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x2E28950", Offset = "0x2E28950", VA = "0x2E28950", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x2E2895C", Offset = "0x2E2895C", VA = "0x2E2895C")]
		public IntegerGreaterThan()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE096E4", Offset = "0xE096E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE096E4", Offset = "0xE096E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE096E4", Offset = "0xE096E4")]
	public class IntegerGreaterEqualThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x2E288F8", Offset = "0x2E288F8", VA = "0x2E288F8", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x2E28904", Offset = "0x2E28904", VA = "0x2E28904")]
		public IntegerGreaterEqualThan()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0976C", Offset = "0xE0976C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0976C", Offset = "0xE0976C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0976C", Offset = "0xE0976C")]
	public class IntegerLessThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x2E28A54", Offset = "0x2E28A54", VA = "0x2E28A54", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x2E28A60", Offset = "0x2E28A60", VA = "0x2E28A60")]
		public IntegerLessThan()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE097F4", Offset = "0xE097F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE097F4", Offset = "0xE097F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE097F4", Offset = "0xE097F4")]
	public class IntegerLessEqualThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x2E289FC", Offset = "0x2E289FC", VA = "0x2E289FC", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x2E28A08", Offset = "0x2E28A08", VA = "0x2E28A08")]
		public IntegerLessEqualThan()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0987C", Offset = "0xE0987C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0987C", Offset = "0xE0987C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0987C", Offset = "0xE0987C")]
	public class IntegerEqual : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x2E288A0", Offset = "0x2E288A0", VA = "0x2E288A0", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x2E288AC", Offset = "0x2E288AC", VA = "0x2E288AC")]
		public IntegerEqual()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09904", Offset = "0xE09904")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09904", Offset = "0xE09904")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09904", Offset = "0xE09904")]
	public class IntegerNotEqual : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x2E28B58", Offset = "0x2E28B58", VA = "0x2E28B58", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x2E28B64", Offset = "0x2E28B64", VA = "0x2E28B64")]
		public IntegerNotEqual()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0998C", Offset = "0xE0998C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0998C", Offset = "0xE0998C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0998C", Offset = "0xE0998C")]
	public class IntegerInvert : PureFunctionNode<int, int>
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x2E289A8", Offset = "0x2E289A8", VA = "0x2E289A8", Slot = "12")]
		public override int Invoke(int value)
		{
			return default(int);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x2E289B0", Offset = "0x2E289B0", VA = "0x2E289B0")]
		public IntegerInvert()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09A14", Offset = "0xE09A14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09A14", Offset = "0xE09A14")]
	public class IntegerSnap : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x2E28BB0", Offset = "0x2E28BB0", VA = "0x2E28BB0", Slot = "12")]
		public override int Invoke(int value, int interval)
		{
			return default(int);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x2E28C6C", Offset = "0x2E28C6C", VA = "0x2E28C6C")]
		public IntegerSnap()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09A74", Offset = "0xE09A74")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09A74", Offset = "0xE09A74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09A74", Offset = "0xE09A74")]
	public class BooleanEqual : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x2DF5298", Offset = "0x2DF5298", VA = "0x2DF5298", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x2DF52A4", Offset = "0x2DF52A4", VA = "0x2DF52A4")]
		public BooleanEqual()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09AFC", Offset = "0xE09AFC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09AFC", Offset = "0xE09AFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09AFC", Offset = "0xE09AFC")]
	public class BooleanNotEqual : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x2DF52F0", Offset = "0x2DF52F0", VA = "0x2DF52F0", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x2DF52FC", Offset = "0x2DF52FC", VA = "0x2DF52FC")]
		public BooleanNotEqual()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09B84", Offset = "0xE09B84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09B84", Offset = "0xE09B84")]
	public class AND : PureFunctionNode<bool>
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ValueInput<bool> a;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ValueInput<bool> b;

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x2A99520", Offset = "0x2A99520", VA = "0x2A99520", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x2A99598", Offset = "0x2A99598", VA = "0x2A99598", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x2A99670", Offset = "0x2A99670", VA = "0x2A99670")]
		public AND()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09BE4", Offset = "0xE09BE4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09BE4", Offset = "0xE09BE4")]
	public class OR : PureFunctionNode<bool>
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ValueInput<bool> a;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ValueInput<bool> b;

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x26A079C", Offset = "0x26A079C", VA = "0x26A079C", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x26A0814", Offset = "0x26A0814", VA = "0x26A0814", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x26A08EC", Offset = "0x26A08EC", VA = "0x26A08EC")]
		public OR()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09C44", Offset = "0xE09C44")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09C44", Offset = "0xE09C44")]
	public class XOR : PureFunctionNode<bool>
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ValueInput<bool> a;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ValueInput<bool> b;

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x2D12908", Offset = "0x2D12908", VA = "0x2D12908", Slot = "12")]
		public override bool Invoke()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x2D12980", Offset = "0x2D12980", VA = "0x2D12980", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x2D12A58", Offset = "0x2D12A58", VA = "0x2D12A58")]
		public XOR()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09CA4", Offset = "0xE09CA4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09CA4", Offset = "0xE09CA4")]
	public class NOT : PureFunctionNode<bool, bool>
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x269B5E8", Offset = "0x269B5E8", VA = "0x269B5E8", Slot = "12")]
		public override bool Invoke(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x269B5F4", Offset = "0x269B5F4", VA = "0x269B5F4")]
		public NOT()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09D04", Offset = "0xE09D04")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09D04", Offset = "0xE09D04")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09D04", Offset = "0xE09D04")]
	public class Vector3Equal : PureFunctionNode<bool, Vector3, Vector3>
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x27C5C5C", Offset = "0x27C5C5C", VA = "0x27C5C5C", Slot = "12")]
		public override bool Invoke(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x27C5C64", Offset = "0x27C5C64", VA = "0x27C5C64")]
		public Vector3Equal()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09D8C", Offset = "0xE09D8C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09D8C", Offset = "0xE09D8C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09D8C", Offset = "0xE09D8C")]
	public class Vector3NotEqual : PureFunctionNode<bool, Vector3, Vector3>
	{
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x27C60E0", Offset = "0x27C60E0", VA = "0x27C60E0", Slot = "12")]
		public override bool Invoke(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x27C60E8", Offset = "0x27C60E8", VA = "0x27C60E8")]
		public Vector3NotEqual()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09E14", Offset = "0xE09E14")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09E14", Offset = "0xE09E14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09E14", Offset = "0xE09E14")]
	public class Vector3Add : PureFunctionNode<Vector3, Vector3, Vector3>
	{
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x27C5BA4", Offset = "0x27C5BA4", VA = "0x27C5BA4", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x27C5BB4", Offset = "0x27C5BB4", VA = "0x27C5BB4")]
		public Vector3Add()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09E9C", Offset = "0xE09E9C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09E9C", Offset = "0xE09E9C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09E9C", Offset = "0xE09E9C")]
	public class Vector3Subtract : PureFunctionNode<Vector3, Vector3, Vector3>
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x27C63BC", Offset = "0x27C63BC", VA = "0x27C63BC", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x27C63CC", Offset = "0x27C63CC", VA = "0x27C63CC")]
		public Vector3Subtract()
		{
		}
	}
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09F24", Offset = "0xE09F24")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09F24", Offset = "0xE09F24")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09F24", Offset = "0xE09F24")]
	public class Vector3Multiply : PureFunctionNode<Vector3, Vector3, float>
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x27C6084", Offset = "0x27C6084", VA = "0x27C6084", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, float b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x27C6094", Offset = "0x27C6094", VA = "0x27C6094")]
		public Vector3Multiply()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE09FAC", Offset = "0xE09FAC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE09FAC", Offset = "0xE09FAC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE09FAC", Offset = "0xE09FAC")]
	public class Vector3Divide : PureFunctionNode<Vector3, Vector3, float>
	{
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x27C5C00", Offset = "0x27C5C00", VA = "0x27C5C00", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, float b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x27C5C10", Offset = "0x27C5C10", VA = "0x27C5C10")]
		public Vector3Divide()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A034", Offset = "0xE0A034")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A034", Offset = "0xE0A034")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0A034", Offset = "0xE0A034")]
	public class Vector3Invert : PureFunctionNode<Vector3, Vector3>
	{
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x27C6028", Offset = "0x27C6028", VA = "0x27C6028", Slot = "12")]
		public override Vector3 Invoke(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x27C6038", Offset = "0x27C6038", VA = "0x27C6038")]
		public Vector3Invert()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A0BC", Offset = "0xE0A0BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A0BC", Offset = "0xE0A0BC")]
	public class Wait : LatentActionNode<float>
	{
		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A11C", Offset = "0xE0A11C")]
		private sealed class <Invoke>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Wait <>4__this;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x170001BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C5")]
				[Address(RVA = "0x313587C", Offset = "0x313587C", VA = "0x313587C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C7")]
				[Address(RVA = "0x31358C4", Offset = "0x31358C4", VA = "0x31358C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x3135788", Offset = "0x3135788", VA = "0x3135788")]
			[DebuggerHidden]
			public <Invoke>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x31357B4", Offset = "0x31357B4", VA = "0x31357B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x31357B8", Offset = "0x31357B8", VA = "0x31357B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x3135884", Offset = "0x3135884", VA = "0x3135884", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F510", Offset = "0xE1F510")]
		private float <timeLeft>k__BackingField;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F520", Offset = "0xE1F520")]
		private float <normalized>k__BackingField;

		[Token(Token = "0x170001B8")]
		public float timeLeft
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x2D0E65C", Offset = "0x2D0E65C", VA = "0x2D0E65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE283EC", Offset = "0xE283EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x2D0E664", Offset = "0x2D0E664", VA = "0x2D0E664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE283FC", Offset = "0xE283FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float normalized
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x2D0E66C", Offset = "0x2D0E66C", VA = "0x2D0E66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2840C", Offset = "0xE2840C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x2D0E674", Offset = "0x2D0E674", VA = "0x2D0E674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2841C", Offset = "0xE2841C")]
			private set
			{
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x2D0E67C", Offset = "0x2D0E67C", VA = "0x2D0E67C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2842C", Offset = "0xE2842C")]
		public override IEnumerator Invoke(float time = 1f)
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x2D0E704", Offset = "0x2D0E704", VA = "0x2D0E704")]
		public Wait()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A12C", Offset = "0xE0A12C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A12C", Offset = "0xE0A12C")]
	public class WaitForOneFrame : LatentActionNode
	{
		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A18C", Offset = "0xE0A18C")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010CE")]
				[Address(RVA = "0x3135A70", Offset = "0x3135A70", VA = "0x3135A70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D0")]
				[Address(RVA = "0x3135AB8", Offset = "0x3135AB8", VA = "0x3135AB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x31359E4", Offset = "0x31359E4", VA = "0x31359E4")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x3135A10", Offset = "0x3135A10", VA = "0x3135A10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x3135A14", Offset = "0x3135A14", VA = "0x3135A14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x3135A78", Offset = "0x3135A78", VA = "0x3135A78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x2D0E918", Offset = "0x2D0E918", VA = "0x2D0E918", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x2D0E920", Offset = "0x2D0E920", VA = "0x2D0E920", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE284DC", Offset = "0xE284DC")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x2D0E97C", Offset = "0x2D0E97C", VA = "0x2D0E97C")]
		public WaitForOneFrame()
		{
		}
	}
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A19C", Offset = "0xE0A19C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A19C", Offset = "0xE0A19C")]
	public class WaitForPhysicsFrame : LatentActionNode
	{
		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A1FC", Offset = "0xE0A1FC")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D7")]
				[Address(RVA = "0x3135B88", Offset = "0x3135B88", VA = "0x3135B88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D9")]
				[Address(RVA = "0x3135BD0", Offset = "0x3135BD0", VA = "0x3135BD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x3135AC0", Offset = "0x3135AC0", VA = "0x3135AC0")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x3135AEC", Offset = "0x3135AEC", VA = "0x3135AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x3135AF0", Offset = "0x3135AF0", VA = "0x3135AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x3135B90", Offset = "0x3135B90", VA = "0x3135B90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x2D0E984", Offset = "0x2D0E984", VA = "0x2D0E984", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x2D0E98C", Offset = "0x2D0E98C", VA = "0x2D0E98C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2858C", Offset = "0xE2858C")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x2D0E9E8", Offset = "0x2D0E9E8", VA = "0x2D0E9E8")]
		public WaitForPhysicsFrame()
		{
		}
	}
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A20C", Offset = "0xE0A20C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A20C", Offset = "0xE0A20C")]
	public class WaitForEndOfFrame : LatentActionNode
	{
		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A26C", Offset = "0xE0A26C")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E0")]
				[Address(RVA = "0x3135994", Offset = "0x3135994", VA = "0x3135994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E2")]
				[Address(RVA = "0x31359DC", Offset = "0x31359DC", VA = "0x31359DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x31358CC", Offset = "0x31358CC", VA = "0x31358CC")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x31358F8", Offset = "0x31358F8", VA = "0x31358F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x31358FC", Offset = "0x31358FC", VA = "0x31358FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x313599C", Offset = "0x313599C", VA = "0x313599C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x2D0E8AC", Offset = "0x2D0E8AC", VA = "0x2D0E8AC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x2D0E8B4", Offset = "0x2D0E8B4", VA = "0x2D0E8B4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2863C", Offset = "0xE2863C")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x2D0E910", Offset = "0x2D0E910", VA = "0x2D0E910")]
		public WaitForEndOfFrame()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A27C", Offset = "0xE0A27C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A27C", Offset = "0xE0A27C")]
	public class WaitUntil : LatentActionNode
	{
		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A2DC", Offset = "0xE0A2DC")]
		private sealed class <Invoke>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitUntil <>4__this;

			[Token(Token = "0x170001C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010EA")]
				[Address(RVA = "0x3135D14", Offset = "0x3135D14", VA = "0x3135D14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010EC")]
				[Address(RVA = "0x3135D5C", Offset = "0x3135D5C", VA = "0x3135D5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x3135BD8", Offset = "0x3135BD8", VA = "0x3135BD8")]
			[DebuggerHidden]
			public <Invoke>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x3135C04", Offset = "0x3135C04", VA = "0x3135C04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x3135C08", Offset = "0x3135C08", VA = "0x3135C08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x3135D1C", Offset = "0x3135D1C", VA = "0x3135D1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ValueInput<bool> condition;

		[Token(Token = "0x170001C5")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x2D0EF74", Offset = "0x2D0EF74", VA = "0x2D0EF74", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x2D0EF7C", Offset = "0x2D0EF7C", VA = "0x2D0EF7C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE286EC", Offset = "0xE286EC")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x2D0EFF4", Offset = "0x2D0EFF4", VA = "0x2D0EFF4", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x2D0F094", Offset = "0x2D0F094", VA = "0x2D0F094")]
		public WaitUntil()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A2EC", Offset = "0xE0A2EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A2EC", Offset = "0xE0A2EC")]
	public class WaitWhile : LatentActionNode
	{
		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A34C", Offset = "0xE0A34C")]
		private sealed class <Invoke>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitWhile <>4__this;

			[Token(Token = "0x170001C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F4")]
				[Address(RVA = "0x3135EA0", Offset = "0x3135EA0", VA = "0x3135EA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F6")]
				[Address(RVA = "0x3135EE8", Offset = "0x3135EE8", VA = "0x3135EE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x3135D64", Offset = "0x3135D64", VA = "0x3135D64")]
			[DebuggerHidden]
			public <Invoke>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x3135D90", Offset = "0x3135D90", VA = "0x3135D90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x3135D94", Offset = "0x3135D94", VA = "0x3135D94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x3135EA8", Offset = "0x3135EA8", VA = "0x3135EA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ValueInput<bool> condition;

		[Token(Token = "0x170001C8")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x2D0F2A4", Offset = "0x2D0F2A4", VA = "0x2D0F2A4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x2D0F2AC", Offset = "0x2D0F2AC", VA = "0x2D0F2AC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2879C", Offset = "0xE2879C")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x2D0F324", Offset = "0x2D0F324", VA = "0x2D0F324", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x2D0F3C4", Offset = "0x2D0F3C4", VA = "0x2D0F3C4")]
		public WaitWhile()
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0A35C", Offset = "0xE0A35C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A35C", Offset = "0xE0A35C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A35C", Offset = "0xE0A35C")]
	public class DeltaTimed : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x283A864", Offset = "0x283A864", VA = "0x283A864", Slot = "12")]
		public override float Invoke(float value, float multiplier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x283A894", Offset = "0x283A894", VA = "0x283A894")]
		public DeltaTimed()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0A3E4", Offset = "0xE0A3E4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A3E4", Offset = "0xE0A3E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A3E4", Offset = "0xE0A3E4")]
	public class DeltaTimedVector3 : PureFunctionNode<Vector3, Vector3, float>
	{
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x283A8E0", Offset = "0x283A8E0", VA = "0x283A8E0", Slot = "12")]
		public override Vector3 Invoke(Vector3 value, float multiplier = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x283A924", Offset = "0x283A924", VA = "0x283A924")]
		public DeltaTimedVector3()
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A46C", Offset = "0xE0A46C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A46C", Offset = "0xE0A46C")]
	[ExposeAsDefinition]
	public class Buffer<T> : PureFunctionNode<T, T, int>
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastFrame;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> q;

		[Token(Token = "0x60010FB")]
		public override T Invoke(T value, int size = 60)
		{
			return (T)null;
		}

		[Token(Token = "0x60010FC")]
		public Buffer()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A4DC", Offset = "0xE0A4DC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0A4DC", Offset = "0xE0A4DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A4DC", Offset = "0xE0A4DC")]
	public class DampFloat : PureFunctionNode<float, float, float, float>
	{
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x28393E4", Offset = "0x28393E4", VA = "0x28393E4", Slot = "12")]
		public override float Invoke(float current, float target, float damp = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x2839428", Offset = "0x2839428", VA = "0x2839428")]
		public DampFloat()
		{
		}
	}
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0A564", Offset = "0xE0A564")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A564", Offset = "0xE0A564")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A564", Offset = "0xE0A564")]
	public class DampVector3 : PureFunctionNode<Vector3, Vector3, Vector3, float>
	{
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x2839474", Offset = "0x2839474", VA = "0x2839474", Slot = "12")]
		public override Vector3 Invoke(Vector3 current, Vector3 target, float damp = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x28394F8", Offset = "0x28394F8", VA = "0x28394F8")]
		public DampVector3()
		{
		}
	}
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A5EC", Offset = "0xE0A5EC")]
	public class LerpFloat : PureFunctionNode<float, float, float, float, EaseType>
	{
		[Token(Token = "0x6001101")]
		[Address(RVA = "0x2CF8410", Offset = "0x2CF8410", VA = "0x2CF8410", Slot = "12")]
		public override float Invoke(float a, float b, float t, EaseType interpolation)
		{
			return default(float);
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x2CF849C", Offset = "0x2CF849C", VA = "0x2CF849C")]
		public LerpFloat()
		{
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A624", Offset = "0xE0A624")]
	public class LerpVector3 : PureFunctionNode<Vector3, Vector3, Vector3, float, EaseType>
	{
		[Token(Token = "0x6001103")]
		[Address(RVA = "0x2CF8658", Offset = "0x2CF8658", VA = "0x2CF8658", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, Vector3 b, float t, EaseType interpolation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x2CF8714", Offset = "0x2CF8714", VA = "0x2CF8714")]
		public LerpVector3()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A65C", Offset = "0xE0A65C")]
	public class LerpQuaternion : PureFunctionNode<Quaternion, Quaternion, Quaternion, float, EaseType>
	{
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x2CF84E8", Offset = "0x2CF84E8", VA = "0x2CF84E8", Slot = "12")]
		public override Quaternion Invoke(Quaternion a, Quaternion b, float t, EaseType interpolation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x2CF860C", Offset = "0x2CF860C", VA = "0x2CF860C")]
		public LerpQuaternion()
		{
		}
	}
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A694", Offset = "0xE0A694")]
	public class LerpColor : PureFunctionNode<Color, Color, Color, float, EaseType>
	{
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x2CF82A0", Offset = "0x2CF82A0", VA = "0x2CF82A0", Slot = "12")]
		public override Color Invoke(Color a, Color b, float t, EaseType interpolation)
		{
			return default(Color);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x2CF83C4", Offset = "0x2CF83C4", VA = "0x2CF83C4")]
		public LerpColor()
		{
		}
	}
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A6CC", Offset = "0xE0A6CC")]
	public class TweenFloat : LatentActionNode<float, float, float, EaseType>
	{
		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A704", Offset = "0xE0A704")]
		private sealed class <Invoke>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenFloat <>4__this;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EaseType interpolation;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float from;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float to;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__2;

			[Token(Token = "0x170001CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001110")]
				[Address(RVA = "0x3131BB0", Offset = "0x3131BB0", VA = "0x3131BB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0x3131BF8", Offset = "0x3131BF8", VA = "0x3131BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110D")]
			[Address(RVA = "0x3131A64", Offset = "0x3131A64", VA = "0x3131A64")]
			[DebuggerHidden]
			public <Invoke>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600110E")]
			[Address(RVA = "0x3131A90", Offset = "0x3131A90", VA = "0x3131A90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0x3131A94", Offset = "0x3131A94", VA = "0x3131A94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x3131BB8", Offset = "0x3131BB8", VA = "0x3131BB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F530", Offset = "0xE1F530")]
		private float <value>k__BackingField;

		[Token(Token = "0x170001CB")]
		public float value
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x27B48C8", Offset = "0x27B48C8", VA = "0x27B48C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2884C", Offset = "0xE2884C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x27B48D0", Offset = "0x27B48D0", VA = "0x27B48D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2885C", Offset = "0xE2885C")]
			private set
			{
			}
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x27B48D8", Offset = "0x27B48D8", VA = "0x27B48D8", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2886C", Offset = "0xE2886C")]
		public override IEnumerator Invoke(float from, float to, float duration = 1f, EaseType interpolation = EaseType.QuadraticInOut)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x27B4984", Offset = "0x27B4984", VA = "0x27B4984")]
		public TweenFloat()
		{
		}
	}
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A714", Offset = "0xE0A714")]
	public class TweenVector3 : LatentActionNode<Vector3, Vector3, float, EaseType>
	{
		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A74C", Offset = "0xE0A74C")]
		private sealed class <Invoke>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenVector3 <>4__this;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EaseType interpolation;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 from;

			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 to;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float duration;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x170001CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111A")]
				[Address(RVA = "0x313266C", Offset = "0x313266C", VA = "0x313266C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111C")]
				[Address(RVA = "0x31326B4", Offset = "0x31326B4", VA = "0x31326B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0x31324F4", Offset = "0x31324F4", VA = "0x31324F4")]
			[DebuggerHidden]
			public <Invoke>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0x3132520", Offset = "0x3132520", VA = "0x3132520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x3132524", Offset = "0x3132524", VA = "0x3132524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x3132674", Offset = "0x3132674", VA = "0x3132674", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F540", Offset = "0xE1F540")]
		private Vector3 <value>k__BackingField;

		[Token(Token = "0x170001CE")]
		public Vector3 value
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0x27B4FB4", Offset = "0x27B4FB4", VA = "0x27B4FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2891C", Offset = "0xE2891C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001114")]
			[Address(RVA = "0x27B4FC0", Offset = "0x27B4FC0", VA = "0x27B4FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2892C", Offset = "0xE2892C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x27B4FCC", Offset = "0x27B4FCC", VA = "0x27B4FCC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2893C", Offset = "0xE2893C")]
		public override IEnumerator Invoke(Vector3 from, Vector3 to, float duration = 1f, EaseType interpolation = EaseType.QuadraticInOut)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x27B50A0", Offset = "0x27B50A0", VA = "0x27B50A0")]
		public TweenVector3()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A75C", Offset = "0xE0A75C")]
	public class TweenQuaternion : LatentActionNode<Quaternion, Quaternion, float, EaseType>
	{
		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A794", Offset = "0xE0A794")]
		private sealed class <Invoke>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenQuaternion <>4__this;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EaseType interpolation;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion from;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion to;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float duration;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <t>5__2;

			[Token(Token = "0x170001D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001124")]
				[Address(RVA = "0x3131FEC", Offset = "0x3131FEC", VA = "0x3131FEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0x3132034", Offset = "0x3132034", VA = "0x3132034", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0x3131E5C", Offset = "0x3131E5C", VA = "0x3131E5C")]
			[DebuggerHidden]
			public <Invoke>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001122")]
			[Address(RVA = "0x3131E88", Offset = "0x3131E88", VA = "0x3131E88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x3131E8C", Offset = "0x3131E8C", VA = "0x3131E8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0x3131FF4", Offset = "0x3131FF4", VA = "0x3131FF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F550", Offset = "0xE1F550")]
		private Quaternion <value>k__BackingField;

		[Token(Token = "0x170001D1")]
		public Quaternion value
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x27B4C1C", Offset = "0x27B4C1C", VA = "0x27B4C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE289EC", Offset = "0xE289EC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x27B4C28", Offset = "0x27B4C28", VA = "0x27B4C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE289FC", Offset = "0xE289FC")]
			private set
			{
			}
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x27B4C34", Offset = "0x27B4C34", VA = "0x27B4C34", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28A0C", Offset = "0xE28A0C")]
		public override IEnumerator Invoke(Quaternion from, Quaternion to, float duration = 1f, EaseType interpolation = EaseType.QuadraticInOut)
		{
			return null;
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x27B4D18", Offset = "0x27B4D18", VA = "0x27B4D18")]
		public TweenQuaternion()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A7A4", Offset = "0xE0A7A4")]
	public class TweenColor : LatentActionNode<Color, Color, float, EaseType>
	{
		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A7DC", Offset = "0xE0A7DC")]
		private sealed class <Invoke>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenColor <>4__this;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EaseType interpolation;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color from;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Color to;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float duration;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <t>5__2;

			[Token(Token = "0x170001D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600112E")]
				[Address(RVA = "0x3131A14", Offset = "0x3131A14", VA = "0x3131A14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001130")]
				[Address(RVA = "0x3131A5C", Offset = "0x3131A5C", VA = "0x3131A5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0x3131884", Offset = "0x3131884", VA = "0x3131884")]
			[DebuggerHidden]
			public <Invoke>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x31318B0", Offset = "0x31318B0", VA = "0x31318B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0x31318B4", Offset = "0x31318B4", VA = "0x31318B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0x3131A1C", Offset = "0x3131A1C", VA = "0x3131A1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F560", Offset = "0xE1F560")]
		private Color <value>k__BackingField;

		[Token(Token = "0x170001D4")]
		public Color value
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x27B4780", Offset = "0x27B4780", VA = "0x27B4780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28ABC", Offset = "0xE28ABC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x27B478C", Offset = "0x27B478C", VA = "0x27B478C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28ACC", Offset = "0xE28ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x27B4798", Offset = "0x27B4798", VA = "0x27B4798", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28ADC", Offset = "0xE28ADC")]
		public override IEnumerator Invoke(Color from, Color to, float duration = 1f, EaseType interpolation = EaseType.QuadraticInOut)
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x27B487C", Offset = "0x27B487C", VA = "0x27B487C")]
		public TweenColor()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A7EC", Offset = "0xE0A7EC")]
	public class TweenPosition : LatentActionNode<Transform, Vector3, float, EaseType, bool>
	{
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A824", Offset = "0xE0A824")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool relative;

			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform transform;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TweenPosition <>4__this;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public EaseType interpolation;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float duration;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <from>5__3;

			[Token(Token = "0x170001D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001136")]
				[Address(RVA = "0x3131E0C", Offset = "0x3131E0C", VA = "0x3131E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001138")]
				[Address(RVA = "0x3131E54", Offset = "0x3131E54", VA = "0x3131E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001133")]
			[Address(RVA = "0x3131C00", Offset = "0x3131C00", VA = "0x3131C00")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0x3131C2C", Offset = "0x3131C2C", VA = "0x3131C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0x3131C30", Offset = "0x3131C30", VA = "0x3131C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x3131E14", Offset = "0x3131E14", VA = "0x3131E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x27B4AF4", Offset = "0x27B4AF4", VA = "0x27B4AF4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28B8C", Offset = "0xE28B8C")]
		public override IEnumerator Invoke(Transform transform, Vector3 position, float duration = 0.25f, EaseType interpolation = EaseType.QuadraticInOut, bool relative = false)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x27B4BD0", Offset = "0x27B4BD0", VA = "0x27B4BD0")]
		public TweenPosition()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A834", Offset = "0xE0A834")]
	public class TweenRotation : LatentActionNode<Transform, Vector3, float, EaseType, bool>
	{
		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A86C", Offset = "0xE0A86C")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 rotation;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool relative;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform transform;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TweenRotation <>4__this;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public EaseType interpolation;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float duration;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <from>5__3;

			[Token(Token = "0x170001D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113E")]
				[Address(RVA = "0x3132248", Offset = "0x3132248", VA = "0x3132248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001140")]
				[Address(RVA = "0x3132290", Offset = "0x3132290", VA = "0x3132290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0x313203C", Offset = "0x313203C", VA = "0x313203C")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0x3132068", Offset = "0x3132068", VA = "0x3132068", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0x313206C", Offset = "0x313206C", VA = "0x313206C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0x3132250", Offset = "0x3132250", VA = "0x3132250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x27B4D64", Offset = "0x27B4D64", VA = "0x27B4D64", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28C3C", Offset = "0xE28C3C")]
		public override IEnumerator Invoke(Transform transform, Vector3 rotation, float duration = 0.25f, EaseType interpolation = EaseType.QuadraticInOut, bool relative = false)
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x27B4E40", Offset = "0x27B4E40", VA = "0x27B4E40")]
		public TweenRotation()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A87C", Offset = "0xE0A87C")]
	public class TweenScale : LatentActionNode<Transform, Vector3, float, EaseType, bool>
	{
		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0A8B4", Offset = "0xE0A8B4")]
		private sealed class <Invoke>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 scale;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool relative;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform transform;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TweenScale <>4__this;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public EaseType interpolation;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float duration;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <from>5__3;

			[Token(Token = "0x170001DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001146")]
				[Address(RVA = "0x31324A4", Offset = "0x31324A4", VA = "0x31324A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001148")]
				[Address(RVA = "0x31324EC", Offset = "0x31324EC", VA = "0x31324EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001143")]
			[Address(RVA = "0x3132298", Offset = "0x3132298", VA = "0x3132298")]
			[DebuggerHidden]
			public <Invoke>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001144")]
			[Address(RVA = "0x31322C4", Offset = "0x31322C4", VA = "0x31322C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001145")]
			[Address(RVA = "0x31322C8", Offset = "0x31322C8", VA = "0x31322C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001147")]
			[Address(RVA = "0x31324AC", Offset = "0x31324AC", VA = "0x31324AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x27B4E8C", Offset = "0x27B4E8C", VA = "0x27B4E8C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28CEC", Offset = "0xE28CEC")]
		public override IEnumerator Invoke(Transform transform, Vector3 scale, float duration = 0.25f, EaseType interpolation = EaseType.QuadraticInOut, bool relative = false)
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x27B4F68", Offset = "0x27B4F68", VA = "0x27B4F68")]
		public TweenScale()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A8C4", Offset = "0xE0A8C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A8C4", Offset = "0xE0A8C4")]
	public class AddComponent<T> : CallableFunctionNode<T, GameObject, bool> where T : Component
	{
		[Token(Token = "0x6001149")]
		public override T Invoke(GameObject gameObject, bool tryGetExisting)
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		public AddComponent()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A924", Offset = "0xE0A924")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A924", Offset = "0xE0A924")]
	public class GetComponent<T> : PureFunctionNode<T, GameObject> where T : Component
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _component;

		[Token(Token = "0x600114B")]
		public override T Invoke(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		public GetComponent()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A984", Offset = "0xE0A984")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A984", Offset = "0xE0A984")]
	[ExposeAsDefinition]
	public class Instantiate<T> : CallableFunctionNode<T, T, Vector3, Quaternion, Transform> where T : UnityEngine.Object
	{
		[Token(Token = "0x600114D")]
		public override T Invoke(T original, Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		public Instantiate()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0A9F4", Offset = "0xE0A9F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0A9F4", Offset = "0xE0A9F4")]
	public class NewScriptableObject<T> : CallableFunctionNode<T> where T : ScriptableObject
	{
		[Token(Token = "0x600114F")]
		public override T Invoke()
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		public NewScriptableObject()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AA54", Offset = "0xE0AA54")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AA54", Offset = "0xE0AA54")]
	public class GetChildTransforms : PureFunctionNode<IEnumerable<Transform>, Transform>
	{
		[Token(Token = "0x6001151")]
		[Address(RVA = "0x2937008", Offset = "0x2937008", VA = "0x2937008", Slot = "12")]
		public override IEnumerable<Transform> Invoke(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x2937054", Offset = "0x2937054", VA = "0x2937054")]
		public GetChildTransforms()
		{
		}
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AAB4", Offset = "0xE0AAB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AAB4", Offset = "0xE0AAB4")]
	public class MoveTo : LatentActionNode<NavMeshAgent, Vector3, float, float>
	{
		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0AB14", Offset = "0xE0AB14")]
		private sealed class <Invoke>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MoveTo <>4__this;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NavMeshAgent agent;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float speed;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float stoppingDistance;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 destination;

			[Token(Token = "0x170001DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001159")]
				[Address(RVA = "0x2EE21F0", Offset = "0x2EE21F0", VA = "0x2EE21F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115B")]
				[Address(RVA = "0x2EE2238", Offset = "0x2EE2238", VA = "0x2EE2238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0x2EE20AC", Offset = "0x2EE20AC", VA = "0x2EE20AC")]
			[DebuggerHidden]
			public <Invoke>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001157")]
			[Address(RVA = "0x2EE20D8", Offset = "0x2EE20D8", VA = "0x2EE20D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001158")]
			[Address(RVA = "0x2EE20DC", Offset = "0x2EE20DC", VA = "0x2EE20DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x2EE21F8", Offset = "0x2EE21F8", VA = "0x2EE21F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NavMeshAgent agent;

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x26992E4", Offset = "0x26992E4", VA = "0x26992E4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28D9C", Offset = "0xE28D9C")]
		public override IEnumerator Invoke(NavMeshAgent agent, Vector3 destination, float speed, float stoppingDistance)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x26993B0", Offset = "0x26993B0", VA = "0x26993B0", Slot = "13")]
		public override void OnBreak()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x26993CC", Offset = "0x26993CC", VA = "0x26993CC")]
		public MoveTo()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AB24", Offset = "0xE0AB24")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AB24", Offset = "0xE0AB24")]
	public class Cast<T> : PureFunctionNode<T, object>
	{
		[Token(Token = "0x600115C")]
		public override T Invoke(object obj)
		{
			return (T)null;
		}

		[Token(Token = "0x600115D")]
		public Cast()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0AB94", Offset = "0xE0AB94")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AB94", Offset = "0xE0AB94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AB94", Offset = "0xE0AB94")]
	public class Identity<T> : PureFunctionNode<T, T>
	{
		[Token(Token = "0x170001DF")]
		public override string name
		{
			[Token(Token = "0x600115E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115F")]
		public override T Invoke(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6001160")]
		public Identity()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AC2C", Offset = "0xE0AC2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AC2C", Offset = "0xE0AC2C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0AC2C", Offset = "0xE0AC2C")]
	public class Cache<T> : CallableFunctionNode<T, T>
	{
		[Token(Token = "0x6001161")]
		public override T Invoke(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6001162")]
		public Cache()
		{
		}
	}
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0ACC4", Offset = "0xE0ACC4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0ACC4", Offset = "0xE0ACC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0ACC4", Offset = "0xE0ACC4")]
	public class RemapFloat : PureFunctionNode<float, float, float, float, float, float>
	{
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x2B3A6F4", Offset = "0x2B3A6F4", VA = "0x2B3A6F4", Slot = "12")]
		public override float Invoke(float current, float iMin, float iMax = 1f, float oMin = 0f, float oMax = 100f)
		{
			return default(float);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x2B3A73C", Offset = "0x2B3A73C", VA = "0x2B3A73C")]
		public RemapFloat()
		{
		}
	}
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AD4C", Offset = "0xE0AD4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AD4C", Offset = "0xE0AD4C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0AD4C", Offset = "0xE0AD4C")]
	public class RemapVector3 : PureFunctionNode<Vector3, float, float, float, Vector3, Vector3>
	{
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x2B3A788", Offset = "0x2B3A788", VA = "0x2B3A788", Slot = "12")]
		public override Vector3 Invoke(float current, float iMin, float iMax, Vector3 oMin, Vector3 oMax)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x2B3A808", Offset = "0x2B3A808", VA = "0x2B3A808")]
		public RemapVector3()
		{
		}
	}
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0ADD4", Offset = "0xE0ADD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0ADD4", Offset = "0xE0ADD4")]
	public class LogValue : CallableActionNode<object>
	{
		[Token(Token = "0x6001167")]
		[Address(RVA = "0x2CF8F1C", Offset = "0x2CF8F1C", VA = "0x2CF8F1C", Slot = "12")]
		public override void Invoke(object obj)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x2CF8F20", Offset = "0x2CF8F20", VA = "0x2CF8F20")]
		public LogValue()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AE34", Offset = "0xE0AE34")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AE34", Offset = "0xE0AE34")]
	public class LogText : CallableActionNode<string>
	{
		[Token(Token = "0x6001169")]
		[Address(RVA = "0x2CF8ECC", Offset = "0x2CF8ECC", VA = "0x2CF8ECC", Slot = "12")]
		public override void Invoke(string text)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x2CF8ED0", Offset = "0x2CF8ED0", VA = "0x2CF8ED0")]
		public LogText()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AE94", Offset = "0xE0AE94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AE94", Offset = "0xE0AE94")]
	public class SendEvent : CallableActionNode<GraphOwner, string>
	{
		[Token(Token = "0x600116B")]
		[Address(RVA = "0x2B47584", Offset = "0x2B47584", VA = "0x2B47584", Slot = "12")]
		public override void Invoke(GraphOwner target, string eventName)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x2B475AC", Offset = "0x2B475AC", VA = "0x2B475AC")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AEF4", Offset = "0xE0AEF4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AEF4", Offset = "0xE0AEF4")]
	public class SendEvent<T> : CallableActionNode<GraphOwner, string, T>
	{
		[Token(Token = "0x600116D")]
		public override void Invoke(GraphOwner target, string eventName, T eventValue)
		{
		}

		[Token(Token = "0x600116E")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AF64", Offset = "0xE0AF64")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AF64", Offset = "0xE0AF64")]
	public class SendGlobalEvent : CallableActionNode<string>
	{
		[Token(Token = "0x600116F")]
		[Address(RVA = "0x2B47CF4", Offset = "0x2B47CF4", VA = "0x2B47CF4", Slot = "12")]
		public override void Invoke(string eventName)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x2B47D08", Offset = "0x2B47D08", VA = "0x2B47D08")]
		public SendGlobalEvent()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0AFC4", Offset = "0xE0AFC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0AFC4", Offset = "0xE0AFC4")]
	public class SendGlobalEvent<T> : CallableActionNode<string, T>
	{
		[Token(Token = "0x6001171")]
		public override void Invoke(string eventName, T eventValue)
		{
		}

		[Token(Token = "0x6001172")]
		public SendGlobalEvent()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public abstract class LatentActionNodeBase : SimplexNode
	{
		[Token(Token = "0x200033D")]
		public enum InvocationMode
		{
			[Token(Token = "0x4000E5E")]
			QueueCalls,
			[Token(Token = "0x4000E5F")]
			FilterCalls
		}

		[Token(Token = "0x200033E")]
		private struct RoutineData
		{
			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator enumerator;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Flow flow;

			[Token(Token = "0x6001181")]
			[Address(RVA = "0x2EE11D8", Offset = "0x2EE11D8", VA = "0x2EE11D8")]
			public RoutineData(IEnumerator enumerator, Flow flow)
			{
			}
		}

		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B034", Offset = "0xE0B034")]
		private sealed class <InternalCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoutineData data;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public LatentActionNodeBase <>4__this;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Flow <f>5__2;

			[Token(Token = "0x170001E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001185")]
				[Address(RVA = "0x2EE1188", Offset = "0x2EE1188", VA = "0x2EE1188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0x2EE11D0", Offset = "0x2EE11D0", VA = "0x2EE11D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x2EE0D8C", Offset = "0x2EE0D8C", VA = "0x2EE0D8C")]
			[DebuggerHidden]
			public <InternalCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0x2EE0DB8", Offset = "0x2EE0DB8", VA = "0x2EE0DB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x2EE0DBC", Offset = "0x2EE0DBC", VA = "0x2EE0DBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x2EE1190", Offset = "0x2EE1190", VA = "0x2EE1190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InvocationMode invocationMode;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FlowOutput onStart;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FlowOutput onUpdate;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FlowOutput onFinish;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Queue<RoutineData> routineQueue;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool graphStoped;

		[Token(Token = "0x170001E0")]
		public override string name
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x2E39C60", Offset = "0x2E39C60", VA = "0x2E39C60", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public virtual bool allowRoutineQueueing
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x2E3A138", Offset = "0x2E3A138", VA = "0x2E3A138", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x2E39D28", Offset = "0x2E39D28", VA = "0x2E39D28", Slot = "8")]
		public sealed override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x2E39D30", Offset = "0x2E39D30", VA = "0x2E39D30", Slot = "11")]
		public sealed override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x2E39AC8", Offset = "0x2E39AC8", VA = "0x2E39AC8")]
		protected void Begin(IEnumerator enumerator, Flow f)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x2E39D40", Offset = "0x2E39D40", VA = "0x2E39D40")]
		protected void BreakAll(bool callFinish)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x2E39E24", Offset = "0x2E39E24", VA = "0x2E39E24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28E4C", Offset = "0xE28E4C")]
		private IEnumerator InternalCoroutine(RoutineData data)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x2E39EC4", Offset = "0x2E39EC4", VA = "0x2E39EC4", Slot = "6")]
		protected override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600117A")]
		protected abstract void OnRegisterDerivedPorts(FlowNode node);

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x2E3A134", Offset = "0x2E3A134", VA = "0x2E3A134", Slot = "13")]
		public virtual void OnBreak()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x2E39A64", Offset = "0x2E39A64", VA = "0x2E39A64")]
		protected LatentActionNodeBase()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x2E3A140", Offset = "0x2E3A140", VA = "0x2E3A140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28EAC", Offset = "0xE28EAC")]
		private void <InternalCoroutine>b__15_0()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x2E3A148", Offset = "0x2E3A148", VA = "0x2E3A148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28EBC", Offset = "0xE28EBC")]
		private void <OnRegisterPorts>b__16_0(Flow f)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x2E3A150", Offset = "0x2E3A150", VA = "0x2E3A150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28ECC", Offset = "0xE28ECC")]
		private void <OnRegisterPorts>b__16_1(Flow f)
		{
		}
	}
	[Token(Token = "0x2000340")]
	public abstract class LatentActionNode : LatentActionNodeBase
	{
		[Token(Token = "0x6001188")]
		public abstract IEnumerator Invoke();

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x2E39998", Offset = "0x2E39998", VA = "0x2E39998", Slot = "12")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x2E39A5C", Offset = "0x2E39A5C", VA = "0x2E39A5C")]
		protected LatentActionNode()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x2E39A6C", Offset = "0x2E39A6C", VA = "0x2E39A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F2C", Offset = "0xE28F2C")]
		private void <OnRegisterDerivedPorts>b__1_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000341")]
	public abstract class LatentActionNode<T1> : LatentActionNodeBase
	{
		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B044", Offset = "0xE0B044")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1> <>4__this;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x600118F")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001190")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x600118C")]
		public abstract IEnumerator Invoke(T1 a);

		[Token(Token = "0x600118D")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600118E")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public abstract class LatentActionNode<T1, T2> : LatentActionNodeBase
	{
		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B054", Offset = "0xE0B054")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2> <>4__this;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x6001194")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001195")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001191")]
		public abstract IEnumerator Invoke(T1 a, T2 b);

		[Token(Token = "0x6001192")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001193")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public abstract class LatentActionNode<T1, T2, T3> : LatentActionNodeBase
	{
		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B064", Offset = "0xE0B064")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3> <>4__this;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x6001199")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600119A")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001196")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6001197")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001198")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public abstract class LatentActionNode<T1, T2, T3, T4> : LatentActionNodeBase
	{
		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B074", Offset = "0xE0B074")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x600119E")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600119F")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x600119B")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x600119C")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x600119D")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5> : LatentActionNodeBase
	{
		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B084", Offset = "0xE0B084")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x60011A3")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011A4")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x60011A0")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x60011A1")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011A2")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6> : LatentActionNodeBase
	{
		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B094", Offset = "0xE0B094")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x60011A8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011A9")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x60011A5")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x60011A6")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011A7")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7> : LatentActionNodeBase
	{
		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B0A4", Offset = "0xE0B0A4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x60011AD")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011AE")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x60011AA")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x60011AB")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011AC")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8> : LatentActionNodeBase
	{
		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B0B4", Offset = "0xE0B0B4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x60011B2")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011B3")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x60011AF")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x60011B0")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011B1")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> : LatentActionNodeBase
	{
		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B0C4", Offset = "0xE0B0C4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x60011B7")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011B8")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x60011B4")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x60011B5")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011B6")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : LatentActionNodeBase
	{
		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B0D4", Offset = "0xE0B0D4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x60011BC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011BD")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x60011B9")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x60011BA")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011BB")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public abstract class PureFunctionNodeBase : SimplexNode
	{
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x2680034", Offset = "0x2680034", VA = "0x2680034")]
		protected PureFunctionNodeBase()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public abstract class PureFunctionNode<TResult> : PureFunctionNodeBase
	{
		[Token(Token = "0x60011BF")]
		public abstract TResult Invoke();

		[Token(Token = "0x60011C0")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011C1")]
		protected PureFunctionNode()
		{
		}

		[Token(Token = "0x60011C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F3C", Offset = "0xE28F3C")]
		private TResult <OnRegisterPorts>b__1_0()
		{
			return (TResult)null;
		}
	}
	[Token(Token = "0x2000357")]
	public abstract class PureFunctionNode<TResult, T1> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B0E4", Offset = "0xE0B0E4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1> <>4__this;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x60011C6")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011C7")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011C3")]
		public abstract TResult Invoke(T1 a);

		[Token(Token = "0x60011C4")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011C5")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public abstract class PureFunctionNode<TResult, T1, T2> : PureFunctionNodeBase
	{
		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B0F4", Offset = "0xE0B0F4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2> <>4__this;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x60011CB")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011CC")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011C8")]
		public abstract TResult Invoke(T1 a, T2 b);

		[Token(Token = "0x60011C9")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011CA")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3> : PureFunctionNodeBase
	{
		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B104", Offset = "0xE0B104")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3> <>4__this;

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x60011D0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011D1")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011CD")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x60011CE")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011CF")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4> : PureFunctionNodeBase
	{
		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B114", Offset = "0xE0B114")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x60011D5")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011D6")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011D2")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x60011D3")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011D4")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B124", Offset = "0xE0B124")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x60011DA")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011DB")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011D7")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x60011D8")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011D9")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B134", Offset = "0xE0B134")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x60011DF")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011E0")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011DC")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x60011DD")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011DE")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B144", Offset = "0xE0B144")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x60011E4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011E5")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011E1")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x60011E2")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011E3")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B154", Offset = "0xE0B154")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x60011E9")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011EA")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011E6")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x60011E7")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011E8")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B164", Offset = "0xE0B164")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x60011EE")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011EF")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011EB")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x60011EC")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011ED")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : PureFunctionNodeBase
	{
		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B174", Offset = "0xE0B174")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x60011F3")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011F4")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x60011F0")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x60011F1")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011F2")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[SpoofAOT]
	public abstract class SimplexNode
	{
		[NonSerialized]
		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _name;

		[NonSerialized]
		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _description;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F570", Offset = "0xE1F570")]
		private FlowNode <parentNode>k__BackingField;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParameterInfo[] _parameters;

		[Token(Token = "0x170001E4")]
		protected FlowNode parentNode
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x2583C8C", Offset = "0x2583C8C", VA = "0x2583C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F4C", Offset = "0xE28F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x2583C94", Offset = "0x2583C94", VA = "0x2583C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F5C", Offset = "0xE28F5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public virtual string name
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x2583C9C", Offset = "0x2583C9C", VA = "0x2583C9C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public virtual string description
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x2583FC0", Offset = "0x2583FC0", VA = "0x2583FC0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public ParameterInfo[] parameters
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x258409C", Offset = "0x258409C", VA = "0x258409C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x2584180", Offset = "0x2584180", VA = "0x2584180")]
		public void RegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x2584298", Offset = "0x2584298", VA = "0x2584298")]
		public void SetDefaultParameters(FlowNode node)
		{
		}

		[Token(Token = "0x60011FC")]
		protected abstract void OnRegisterPorts(FlowNode node);

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x25843FC", Offset = "0x25843FC", VA = "0x25843FC", Slot = "7")]
		protected virtual void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x2584400", Offset = "0x2584400", VA = "0x2584400", Slot = "8")]
		public virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x2584404", Offset = "0x2584404", VA = "0x2584404", Slot = "9")]
		public virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x2584408", Offset = "0x2584408", VA = "0x2584408", Slot = "10")]
		public virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x258440C", Offset = "0x258440C", VA = "0x258440C", Slot = "11")]
		public virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x2584410", Offset = "0x2584410", VA = "0x2584410")]
		protected SimplexNode()
		{
		}
	}
	[Token(Token = "0x200036C")]
	[DoNotList]
	public abstract class SimplexNodeWrapper : FlowNode
	{
		[Token(Token = "0x6001203")]
		[Address(RVA = "0x2584418", Offset = "0x2584418", VA = "0x2584418")]
		protected SimplexNodeWrapper()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class SimplexNodeWrapper<T> : SimplexNodeWrapper where T : SimplexNode
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _simplexNode;

		[Token(Token = "0x170001E8")]
		public T simplexNode
		{
			[Token(Token = "0x6001204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public override string name
		{
			[Token(Token = "0x6001205")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public override string description
		{
			[Token(Token = "0x6001206")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001207")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		public override void OnCreate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001209")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x600120A")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x600120B")]
		public override void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x600120C")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x600120D")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600120E")]
		public SimplexNodeWrapper()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public delegate void EventUniversalDelegate();
	[Token(Token = "0x200036F")]
	public delegate void EventUniversalDelegate<in T1>(T1 arg1);
	[Token(Token = "0x2000370")]
	public delegate void EventUniversalDelegate<in T1, in T2>(T1 arg1, T2 arg2);
	[Token(Token = "0x2000371")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3>(T1 arg1, T2 arg2, T3 arg3);
	[Token(Token = "0x2000372")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4>(T1 arg1, T2 arg2, T3 arg3, T4 arg4);
	[Token(Token = "0x2000373")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
	[Token(Token = "0x2000374")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
	[Token(Token = "0x2000375")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
	[Token(Token = "0x2000376")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7, in T8>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);
	[Token(Token = "0x2000377")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7, in T8, in T9>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9);
	[Token(Token = "0x2000378")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7, in T8, in T9, in T10>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10);
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE0B1A4", Offset = "0xE0B1A4")]
	public class GeneratedKeyAttribute : Attribute
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string memberString;

		[Token(Token = "0x170001EB")]
		public string MemberName
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x2936208", Offset = "0x2936208", VA = "0x2936208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x29361D4", Offset = "0x29361D4", VA = "0x29361D4")]
		public GeneratedKeyAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x200037A")]
	public struct ParamDef
	{
		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type paramType;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type arrayType;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParamMode paramMode;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string portName;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string portId;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isParamsArray;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MemberInfo presentedInfo;
	}
	[Token(Token = "0x200037B")]
	public enum ParamMode
	{
		[Token(Token = "0x4000EF7")]
		Undefined = 0,
		[Token(Token = "0x4000EF8")]
		In = 1,
		[Token(Token = "0x4000EF9")]
		Out = 2,
		[Token(Token = "0x4000EFA")]
		Ref = 3,
		[Token(Token = "0x4000EFB")]
		Instance = 4,
		[Token(Token = "0x4000EFC")]
		Result = 6
	}
	[Token(Token = "0x200037C")]
	public struct ParametresDef
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<ParamDef> paramDefinitions;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ParamDef instanceDef;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ParamDef resultDef;
	}
	[Token(Token = "0x200037D")]
	public static class ReflectedNodesHelper
	{
		[Token(Token = "0x4000F00")]
		private const string RETURN_VALUE_NAME = "Value";

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x268E0B0", Offset = "0x268E0B0", VA = "0x268E0B0")]
		public static ParamDef GetGetterDefFromInfo(MemberInfo info)
		{
			return default(ParamDef);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x268E318", Offset = "0x268E318", VA = "0x268E318")]
		public static ParamDef GetDefFromInfo(ParameterInfo info, bool last)
		{
			return default(ParamDef);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x268E744", Offset = "0x268E744", VA = "0x268E744")]
		public static bool InitParams(Type targetType, bool isStatic, MemberInfo[] infos, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x268EA64", Offset = "0x268EA64", VA = "0x268EA64")]
		private static bool InitParams(ParameterInfo[] prms, Type returnType, ref ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x268ED00", Offset = "0x268ED00", VA = "0x268ED00")]
		public static bool InitParams(ConstructorInfo constructor, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x268EFA4", Offset = "0x268EFA4", VA = "0x268EFA4")]
		public static bool InitParams(MethodInfo method, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x268F1FC", Offset = "0x268F1FC", VA = "0x268F1FC")]
		public static bool InitParams(FieldInfo field, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x268F444", Offset = "0x268F444", VA = "0x268F444")]
		public static string GetGeneratedKey(MemberInfo memberInfo)
		{
			return null;
		}
	}
	[Token(Token = "0x200037E")]
	public delegate void UniversalDelegate(UniversalDelegateParam[] delegateParams);
	[Token(Token = "0x200037F")]
	public abstract class UniversalDelegateParam
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParamDef paramDef;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool paramsArrayNeeded;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int paramsArrayCount;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UniversalDelegate referencedDelegate;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UniversalDelegateParam[] referencedParams;

		[Token(Token = "0x170001EC")]
		public abstract FieldInfo ValueField
		{
			[Token(Token = "0x6001250")]
			get;
		}

		[Token(Token = "0x6001249")]
		public abstract Type GetCurrentType();

		[Token(Token = "0x600124A")]
		public abstract void RegisterAsInput(FlowNode node);

		[Token(Token = "0x600124B")]
		public abstract void RegisterAsOutput(FlowNode node);

		[Token(Token = "0x600124C")]
		public abstract void RegisterAsOutput(FlowNode node, Action beforeReturn);

		[Token(Token = "0x600124D")]
		public abstract void RegisterAsOutput(FlowNode node, Action<UniversalDelegateParam> beforeReturn);

		[Token(Token = "0x600124E")]
		public abstract void SetFromInput();

		[Token(Token = "0x600124F")]
		public abstract void SetFromValue(object value);

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x27BEA24", Offset = "0x27BEA24", VA = "0x27BEA24")]
		protected UniversalDelegateParam()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class UniversalDelegateParam<T> : UniversalDelegateParam
	{
		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B1B8", Offset = "0xE0B1B8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Delegate beforeReturn;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UniversalDelegateParam<T> <>4__this;

			[Token(Token = "0x600125C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600125D")]
			internal T <RegisterAsOutputInternal>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<T> valueInput;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FieldInfo _fieldInfo;

		[Token(Token = "0x170001ED")]
		public override FieldInfo ValueField
		{
			[Token(Token = "0x600125B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001252")]
		public UniversalDelegateParam()
		{
		}

		[Token(Token = "0x6001253")]
		public override Type GetCurrentType()
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		public override void RegisterAsInput(FlowNode node)
		{
		}

		[Token(Token = "0x6001255")]
		private void RegisterAsOutputInternal(FlowNode node, Delegate beforeReturn)
		{
		}

		[Token(Token = "0x6001256")]
		public override void RegisterAsOutput(FlowNode node)
		{
		}

		[Token(Token = "0x6001257")]
		public override void RegisterAsOutput(FlowNode node, Action beforeReturn)
		{
		}

		[Token(Token = "0x6001258")]
		public override void RegisterAsOutput(FlowNode node, Action<UniversalDelegateParam> beforeReturn)
		{
		}

		[Token(Token = "0x6001259")]
		public override void SetFromInput()
		{
		}

		[Token(Token = "0x600125A")]
		public override void SetFromValue(object newValue)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class UniversalDelegateParam<TArray, TValue> : UniversalDelegateParam<TArray>
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<TValue>[] valueInputs;

		[Token(Token = "0x600125E")]
		public override void RegisterAsInput(FlowNode node)
		{
		}

		[Token(Token = "0x600125F")]
		public override void SetFromInput()
		{
		}

		[Token(Token = "0x6001260")]
		public UniversalDelegateParam()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public abstract class BaseReflectedConstructorNode
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ConstructorInfo constructorInfo;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ParamDef> paramDefinitions;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ParamDef instanceDef;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ParamDef resultDef;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected ReflectedMethodRegistrationOptions options;

		[Token(Token = "0x14000004")]
		protected static event Func<ConstructorInfo, BaseReflectedConstructorNode> OnGetAotReflectedConstructorNode
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x2AAB948", Offset = "0x2AAB948", VA = "0x2AAB948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F6C", Offset = "0xE28F6C")]
			add
			{
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x2AABA04", Offset = "0x2AABA04", VA = "0x2AABA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F7C", Offset = "0xE28F7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x2AABAC0", Offset = "0x2AABAC0", VA = "0x2AABAC0")]
		public static BaseReflectedConstructorNode GetConstructorNode(ConstructorInfo targetConstructor, ReflectedMethodRegistrationOptions options)
		{
			return null;
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x2AABC00", Offset = "0x2AABC00", VA = "0x2AABC00")]
		protected bool Init(ConstructorInfo constructor, ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001265")]
		protected abstract bool InitInternal(ConstructorInfo constructor);

		[Token(Token = "0x6001266")]
		public abstract void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options);

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x2AABDC4", Offset = "0x2AABDC4", VA = "0x2AABDC4")]
		protected BaseReflectedConstructorNode()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class PureReflectionConstructorNode : BaseReflectedConstructorNode
	{
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B1C8", Offset = "0xE0B1C8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool callable;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PureReflectionConstructorNode <>4__this;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int idx;

			[Token(Token = "0x600126E")]
			[Address(RVA = "0x2EE46C4", Offset = "0x2EE46C4", VA = "0x2EE46C4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600126F")]
			[Address(RVA = "0x2EE46CC", Offset = "0x2EE46CC", VA = "0x2EE46CC")]
			internal object <RegisterOutput>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B1D8", Offset = "0xE0B1D8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectionConstructorNode <>4__this;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6001270")]
			[Address(RVA = "0x2EE45F8", Offset = "0x2EE45F8", VA = "0x2EE45F8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001271")]
			[Address(RVA = "0x2EE4600", Offset = "0x2EE4600", VA = "0x2EE4600")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B1E8", Offset = "0xE0B1E8")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x6001272")]
			[Address(RVA = "0x2EE4644", Offset = "0x2EE4644", VA = "0x2EE4644")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0x2EE464C", Offset = "0x2EE464C", VA = "0x2EE464C")]
			internal void <RegisterPorts>b__1(Flow flow)
			{
			}
		}

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object resultObject;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object[] callParams;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput[] inputs;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput[] arrayInputs;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int arrayParamsInput;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Type arrayParamsType;

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x2683044", Offset = "0x2683044", VA = "0x2683044", Slot = "4")]
		protected override bool InitInternal(ConstructorInfo constructor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x26831C8", Offset = "0x26831C8", VA = "0x26831C8")]
		private void Call()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x2683388", Offset = "0x2683388", VA = "0x2683388")]
		private void RegisterOutput(FlowNode node, bool callable, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x268348C", Offset = "0x268348C", VA = "0x268348C")]
		private void RegisterInput(FlowNode node, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x268366C", Offset = "0x268366C", VA = "0x268366C", Slot = "5")]
		public override void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x2683A0C", Offset = "0x2683A0C", VA = "0x2683A0C")]
		public PureReflectionConstructorNode()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[SpoofAOT]
	public class ReflectedDelegateEvent
	{
		[Token(Token = "0x2000389")]
		public delegate void DelegateEventCallback(params object[] args);

		[Serializable]
		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B208", Offset = "0xE0B208")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__10_0;

			[Token(Token = "0x600128D")]
			[Address(RVA = "0x2EE59EC", Offset = "0x2EE59EC", VA = "0x2EE59EC")]
			public <>c()
			{
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x2EE59F4", Offset = "0x2EE59F4", VA = "0x2EE59F4")]
			internal Type <GetMethodForDelegateType>b__10_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Delegate theDelegate;

		[Token(Token = "0x14000005")]
		private event DelegateEventCallback onCallback
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x268A8DC", Offset = "0x268A8DC", VA = "0x268A8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F8C", Offset = "0xE28F8C")]
			add
			{
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x268A97C", Offset = "0x268A97C", VA = "0x268A97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F9C", Offset = "0xE28F9C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x268AA1C", Offset = "0x268AA1C", VA = "0x268AA1C")]
		public ReflectedDelegateEvent()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x268AA24", Offset = "0x268AA24", VA = "0x268AA24")]
		public ReflectedDelegateEvent(Type delegateType)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x268B268", Offset = "0x268B268", VA = "0x268B268")]
		public void Add(DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x268B26C", Offset = "0x268B26C", VA = "0x268B26C")]
		public void Remove(DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x268B270", Offset = "0x268B270", VA = "0x268B270")]
		public Delegate AsDelegate()
		{
			return null;
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x268AAC8", Offset = "0x268AAC8", VA = "0x268AAC8")]
		private MethodInfo GetMethodForDelegateType(Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x268B278", Offset = "0x268B278", VA = "0x268B278")]
		public void Callback0()
		{
		}

		[Token(Token = "0x600127D")]
		public void Callback1<T0>(T0 arg0)
		{
		}

		[Token(Token = "0x600127E")]
		public void Callback2<T0, T1>(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600127F")]
		public void Callback3<T0, T1, T2>(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001280")]
		public void Callback4<T0, T1, T2, T3>(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x6001281")]
		public void Callback5<T0, T1, T2, T3, T4>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
		}

		[Token(Token = "0x6001282")]
		public void Callback6<T0, T1, T2, T3, T4, T5>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
		}

		[Token(Token = "0x6001283")]
		public void Callback7<T0, T1, T2, T3, T4, T5, T6>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
		{
		}

		[Token(Token = "0x6001284")]
		public void Callback8<T0, T1, T2, T3, T4, T5, T6, T7>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
		{
		}

		[Token(Token = "0x6001285")]
		public void Callback9<T0, T1, T2, T3, T4, T5, T6, T7, T8>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
		{
		}

		[Token(Token = "0x6001286")]
		public void Callback10<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x268B35C", Offset = "0x268B35C", VA = "0x268B35C")]
		public static explicit operator Delegate(ReflectedDelegateEvent that)
		{
			return null;
		}
	}
	[Token(Token = "0x200038B")]
	[SpoofAOT]
	public class ReflectedUnityEvent
	{
		[Token(Token = "0x200038C")]
		public delegate void UnityEventCallback(params object[] args);

		[Serializable]
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B228", Offset = "0xE0B228")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__15_0;

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x2EE5F98", Offset = "0x2EE5F98", VA = "0x2EE5F98")]
			public <>c()
			{
			}

			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x2EE5FA0", Offset = "0x2EE5FA0", VA = "0x2EE5FA0")]
			internal Type <InitForEventType>b__15_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type _eventType;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MethodInfo _addListenerMethod;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MethodInfo _removeListenerMethod;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParameterInfo[] _parameters;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MethodInfo _callMethod;

		[Token(Token = "0x170001EE")]
		public ParameterInfo[] parameters
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x268F68C", Offset = "0x268F68C", VA = "0x268F68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public Type eventType
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x268F694", Offset = "0x268F694", VA = "0x268F694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000006")]
		private event UnityEventCallback _callback
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x268F54C", Offset = "0x268F54C", VA = "0x268F54C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28FAC", Offset = "0xE28FAC")]
			add
			{
			}
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x268F5EC", Offset = "0x268F5EC", VA = "0x268F5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28FBC", Offset = "0xE28FBC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x268F69C", Offset = "0x268F69C", VA = "0x268F69C")]
		public ReflectedUnityEvent()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x268F6A4", Offset = "0x268F6A4", VA = "0x268F6A4")]
		public ReflectedUnityEvent(Type eventType)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x268F6D4", Offset = "0x268F6D4", VA = "0x268F6D4")]
		public void InitForEventType(Type eventType)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x268FEB0", Offset = "0x268FEB0", VA = "0x268FEB0")]
		public void StartListening(UnityEventBase targetEvent, UnityEventCallback callback)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x268FFBC", Offset = "0x268FFBC", VA = "0x268FFBC")]
		public void StopListening(UnityEventBase targetEvent, UnityEventCallback callback)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x26900C8", Offset = "0x26900C8", VA = "0x26900C8")]
		public void CallbackMethod0()
		{
		}

		[Token(Token = "0x6001299")]
		public void CallbackMethod1<T0>(T0 arg0)
		{
		}

		[Token(Token = "0x600129A")]
		public void CallbackMethod2<T0, T1>(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600129B")]
		public void CallbackMethod3<T0, T1, T2>(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x600129C")]
		public void CallbackMethod4<T0, T1, T2, T3>(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
		{
		}
	}
	[Token(Token = "0x200038E")]
	public abstract class SharpEvent
	{
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F5C0", Offset = "0xE1F5C0")]
		private object <instance>k__BackingField;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F5D0", Offset = "0xE1F5D0")]
		private EventInfo <eventInfo>k__BackingField;

		[Token(Token = "0x170001F0")]
		public object instance
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x2B4E5C8", Offset = "0x2B4E5C8", VA = "0x2B4E5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28FCC", Offset = "0xE28FCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x2B4E5D0", Offset = "0x2B4E5D0", VA = "0x2B4E5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28FDC", Offset = "0xE28FDC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public EventInfo eventInfo
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x2B4E5D8", Offset = "0x2B4E5D8", VA = "0x2B4E5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28FEC", Offset = "0xE28FEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x2B4E5E0", Offset = "0x2B4E5E0", VA = "0x2B4E5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28FFC", Offset = "0xE28FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2B4E5E8", Offset = "0x2B4E5E8", VA = "0x2B4E5E8")]
		public static SharpEvent Create(EventInfo eventInfo)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x2B4E7C8", Offset = "0x2B4E7C8", VA = "0x2B4E7C8")]
		public void SetInstance(object instance)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x2B4E7D0", Offset = "0x2B4E7D0", VA = "0x2B4E7D0")]
		public void StartListening(ReflectedDelegateEvent reflectedEvent, ReflectedDelegateEvent.DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x2B4E834", Offset = "0x2B4E834", VA = "0x2B4E834")]
		public void StopListening(ReflectedDelegateEvent reflectedEvent, ReflectedDelegateEvent.DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x2B4E898", Offset = "0x2B4E898", VA = "0x2B4E898")]
		protected SharpEvent()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class SharpEvent<T> : SharpEvent
	{
		[Token(Token = "0x60012AD")]
		public SharpEvent()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public abstract class BaseReflectedExtractorNode
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F5F0", Offset = "0xE1F5F0")]
		private ParametresDef <Params>k__BackingField;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F600", Offset = "0xE1F600")]
		private Type <TargetType>k__BackingField;

		[Token(Token = "0x170001F2")]
		protected ParametresDef Params
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x2AAC148", Offset = "0x2AAC148", VA = "0x2AAC148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2902C", Offset = "0xE2902C")]
			get
			{
				return default(ParametresDef);
			}
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x2AAC158", Offset = "0x2AAC158", VA = "0x2AAC158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2903C", Offset = "0xE2903C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		protected Type TargetType
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x2AAC188", Offset = "0x2AAC188", VA = "0x2AAC188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2904C", Offset = "0xE2904C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x2AAC190", Offset = "0x2AAC190", VA = "0x2AAC190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2905C", Offset = "0xE2905C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000007")]
		protected static event Func<Type, bool, MemberInfo[], BaseReflectedExtractorNode> OnGetAotExtractorNode
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x2AABDCC", Offset = "0x2AABDCC", VA = "0x2AABDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2900C", Offset = "0xE2900C")]
			add
			{
			}
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x2AABE88", Offset = "0x2AABE88", VA = "0x2AABE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2901C", Offset = "0xE2901C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x2AABF44", Offset = "0x2AABF44", VA = "0x2AABF44")]
		public static BaseReflectedExtractorNode GetExtractorNode(Type targetType, bool isStatic, MemberInfo[] infos)
		{
			return null;
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2AAC0E8", Offset = "0x2AAC0E8", VA = "0x2AAC0E8")]
		protected bool Init(ParametresDef paramsDef, Type targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		protected abstract bool InitInternal();

		[Token(Token = "0x60012B7")]
		public abstract void RegisterPorts(FlowNode node);

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x2AAC198", Offset = "0x2AAC198", VA = "0x2AAC198")]
		protected BaseReflectedExtractorNode()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class PureReflectedExtractorNode : BaseReflectedExtractorNode
	{
		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B238", Offset = "0xE0B238")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedExtractorNode <>4__this;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FieldInfo info;

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x2EE4074", Offset = "0x2EE4074", VA = "0x2EE4074")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x2EE407C", Offset = "0x2EE407C", VA = "0x2EE407C")]
			internal object <GetPortHandler>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B248", Offset = "0xE0B248")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedExtractorNode <>4__this;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MethodInfo info;

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x2EE40D4", Offset = "0x2EE40D4", VA = "0x2EE40D4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x2EE40DC", Offset = "0x2EE40DC", VA = "0x2EE40DC")]
			internal object <GetPortHandler>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput instanceInput;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x268003C", Offset = "0x268003C", VA = "0x268003C", Slot = "4")]
		protected override bool InitInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x268005C", Offset = "0x268005C", VA = "0x268005C")]
		private ValueHandlerObject GetPortHandler(FieldInfo info)
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x268014C", Offset = "0x268014C", VA = "0x268014C")]
		private ValueHandlerObject GetPortHandler(MethodInfo info)
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x268023C", Offset = "0x268023C", VA = "0x268023C", Slot = "5")]
		public override void RegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x2680470", Offset = "0x2680470", VA = "0x2680470")]
		public PureReflectedExtractorNode()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public abstract class BaseReflectedFieldNode
	{
		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected FieldInfo fieldInfo;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ParamDef instanceDef;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ParamDef resultDef;

		[Token(Token = "0x14000008")]
		protected static event Func<FieldInfo, BaseReflectedFieldNode> OnGetAotReflectedFieldNode
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x2AAC1A0", Offset = "0x2AAC1A0", VA = "0x2AAC1A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2906C", Offset = "0xE2906C")]
			add
			{
			}
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x2AAC25C", Offset = "0x2AAC25C", VA = "0x2AAC25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2907C", Offset = "0xE2907C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2AAC318", Offset = "0x2AAC318", VA = "0x2AAC318")]
		public static BaseReflectedFieldNode GetFieldNode(FieldInfo targetField)
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x2AAC45C", Offset = "0x2AAC45C", VA = "0x2AAC45C")]
		protected bool Init(FieldInfo field, ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		protected abstract bool InitInternal(FieldInfo field);

		[Token(Token = "0x60012C8")]
		public abstract void RegisterPorts(FlowNode node, ReflectedFieldNodeWrapper.AccessMode accessMode);

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x2AAC5B4", Offset = "0x2AAC5B4", VA = "0x2AAC5B4")]
		protected BaseReflectedFieldNode()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class PureReflectedFieldNode : BaseReflectedFieldNode
	{
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B258", Offset = "0xE0B258")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PureReflectedFieldNode <>4__this;

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x2EE4188", Offset = "0x2EE4188", VA = "0x2EE4188")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x2EE4190", Offset = "0x2EE4190", VA = "0x2EE4190")]
			internal void <RegisterPorts>b__2(Flow flow)
			{
			}
		}

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ValueInput instanceInput;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput valueInput;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object instanceObject;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object valueObject;

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x26804EC", Offset = "0x26804EC", VA = "0x26804EC", Slot = "4")]
		protected override bool InitInternal(FieldInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x2680538", Offset = "0x2680538", VA = "0x2680538")]
		private void SetValue()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x26805C0", Offset = "0x26805C0", VA = "0x26805C0")]
		private void GetValue()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x2680634", Offset = "0x2680634", VA = "0x2680634", Slot = "5")]
		public override void RegisterPorts(FlowNode node, ReflectedFieldNodeWrapper.AccessMode accessMode)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x26809EC", Offset = "0x26809EC", VA = "0x26809EC")]
		public PureReflectedFieldNode()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x26809F4", Offset = "0x26809F4", VA = "0x26809F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2908C", Offset = "0xE2908C")]
		private object <RegisterPorts>b__7_0()
		{
			return null;
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x26809FC", Offset = "0x26809FC", VA = "0x26809FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2909C", Offset = "0xE2909C")]
		private object <RegisterPorts>b__7_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000397")]
	public abstract class BaseReflectedMethodNode
	{
		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected MethodInfo methodInfo;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ParamDef> paramDefinitions;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ParamDef instanceDef;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ParamDef resultDef;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected ReflectedMethodRegistrationOptions options;

		[Token(Token = "0x14000009")]
		protected static event Func<MethodInfo, BaseReflectedMethodNode> OnGetAotReflectedMethodNode
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x2AAC5BC", Offset = "0x2AAC5BC", VA = "0x2AAC5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290AC", Offset = "0xE290AC")]
			add
			{
			}
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x2AAC678", Offset = "0x2AAC678", VA = "0x2AAC678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290BC", Offset = "0xE290BC")]
			remove
			{
			}
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x2AAC734", Offset = "0x2AAC734", VA = "0x2AAC734")]
		public static BaseReflectedMethodNode GetMethodNode(MethodInfo targetMethod, ReflectedMethodRegistrationOptions options)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x2AAC874", Offset = "0x2AAC874", VA = "0x2AAC874")]
		protected bool Init(MethodInfo method, ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		protected abstract bool InitInternal(MethodInfo method);

		[Token(Token = "0x60012D8")]
		public abstract void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options);

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x2AACA0C", Offset = "0x2AACA0C", VA = "0x2AACA0C")]
		protected BaseReflectedMethodNode()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class PureReflectedMethodNode : BaseReflectedMethodNode
	{
		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B268", Offset = "0xE0B268")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool callable;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PureReflectedMethodNode <>4__this;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int idx;

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x2EE4344", Offset = "0x2EE4344", VA = "0x2EE4344")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x2EE434C", Offset = "0x2EE434C", VA = "0x2EE434C")]
			internal object <RegisterOutput>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B278", Offset = "0xE0B278")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedMethodNode <>4__this;

			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x2EE43B8", Offset = "0x2EE43B8", VA = "0x2EE43B8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x2EE43C0", Offset = "0x2EE43C0", VA = "0x2EE43C0")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x2EE43DC", Offset = "0x2EE43DC", VA = "0x2EE43DC")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B288", Offset = "0xE0B288")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x2EE4420", Offset = "0x2EE4420", VA = "0x2EE4420")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x2EE4428", Offset = "0x2EE4428", VA = "0x2EE4428")]
			internal void <RegisterPorts>b__2(Flow flow)
			{
			}
		}

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput instanceInput;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object instanceObject;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private object resultObject;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object[] callParams;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput[] inputs;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput[] arrayInputs;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int arrayParamsInput;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Type arrayParamsType;

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x2681674", Offset = "0x2681674", VA = "0x2681674", Slot = "4")]
		protected override bool InitInternal(MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x2681808", Offset = "0x2681808", VA = "0x2681808")]
		private void Call()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x26819F0", Offset = "0x26819F0", VA = "0x26819F0")]
		private void RegisterOutput(FlowNode node, bool callable, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x2681AF4", Offset = "0x2681AF4", VA = "0x2681AF4")]
		private void RegisterInput(FlowNode node, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x2681CD4", Offset = "0x2681CD4", VA = "0x2681CD4", Slot = "5")]
		public override void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x2682108", Offset = "0x2682108", VA = "0x2682108")]
		public PureReflectedMethodNode()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class ReflectedConstructorNodeWrapper : ReflectedMethodBaseNodeWrapper
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SerializedConstructorInfo _constructor;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F640", Offset = "0xE1F640")]
		private BaseReflectedConstructorNode <reflectedConstructorNode>k__BackingField;

		[Token(Token = "0x170001F4")]
		private BaseReflectedConstructorNode reflectedConstructorNode
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x268A3A4", Offset = "0x268A3A4", VA = "0x268A3A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290CC", Offset = "0xE290CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x268A3AC", Offset = "0x268A3AC", VA = "0x268A3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290DC", Offset = "0xE290DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		private ConstructorInfo constructor
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x268A3B4", Offset = "0x268A3B4", VA = "0x268A3B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		protected override ISerializedMethodBaseInfo serializedMethodBase
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x268A3C0", Offset = "0x268A3C0", VA = "0x268A3C0", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public override string name
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x268A3C8", Offset = "0x268A3C8", VA = "0x268A3C8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x268A550", Offset = "0x268A550", VA = "0x268A550", Slot = "49")]
		public override void SetMethodBase(MethodBase newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x268A5E8", Offset = "0x268A5E8", VA = "0x268A5E8")]
		private void SetConstructor(ConstructorInfo newConstructor)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x268A7DC", Offset = "0x268A7DC", VA = "0x268A7DC", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x268A8CC", Offset = "0x268A8CC", VA = "0x268A8CC")]
		public ReflectedConstructorNodeWrapper()
		{
		}
	}
	[Token(Token = "0x200039D")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0B298", Offset = "0xE0B298")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0B298", Offset = "0xE0B298")]
	public class ReflectedExtractorNodeWrapper<T> : FlowNode
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, MemberInfo> _memberInfos;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _instanceMemberNames;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _staticMemberNames;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<string> _selectedInstanceMembers;

		[NonSerialized]
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BaseReflectedExtractorNode extractorNode;

		[Token(Token = "0x170001F8")]
		public override string name
		{
			[Token(Token = "0x60012F2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F0")]
		public Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		private static void PopulateInfos()
		{
		}

		[Token(Token = "0x60012F3")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60012F4")]
		public ReflectedExtractorNodeWrapper()
		{
		}
	}
	[Token(Token = "0x200039E")]
	internal class ReflectedFieldNodeWrapper_0
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string fieldName;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x268BC5C", Offset = "0x268BC5C", VA = "0x268BC5C")]
		public ReflectedFieldNodeWrapper_0()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0B320", Offset = "0xE0B320")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0B320", Offset = "0xE0B320")]
	public class ReflectedFieldNodeWrapper : FlowNode, IReflectedWrapper, IMigratable<ReflectedFieldNodeWrapper_0>, IMigratable
	{
		[Token(Token = "0x20003A0")]
		public enum AccessMode
		{
			[Token(Token = "0x4000F62")]
			GetField,
			[Token(Token = "0x4000F63")]
			SetField
		}

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SerializedFieldInfo _field;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AccessMode accessMode;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F6A0", Offset = "0xE1F6A0")]
		private BaseReflectedFieldNode <reflectedFieldNode>k__BackingField;

		[Token(Token = "0x170001F9")]
		private BaseReflectedFieldNode reflectedFieldNode
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x268B69C", Offset = "0x268B69C", VA = "0x268B69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290EC", Offset = "0xE290EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x268B6A4", Offset = "0x268B6A4", VA = "0x268B6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290FC", Offset = "0xE290FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		private FieldInfo field
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x268B690", Offset = "0x268B690", VA = "0x268B690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public override string name
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x268B6AC", Offset = "0x268B6AC", VA = "0x268B6AC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x268B3CC", Offset = "0x268B3CC", VA = "0x268B3CC", Slot = "48")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<FlowCanvas.Nodes.ReflectedFieldNodeWrapper_0>.Migrate(ReflectedFieldNodeWrapper_0 model)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x268B624", Offset = "0x268B624", VA = "0x268B624", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x268B62C", Offset = "0x268B62C", VA = "0x268B62C")]
		private Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x268B9B4", Offset = "0x268B9B4", VA = "0x268B9B4")]
		public void SetField(FieldInfo newField, AccessMode mode, [Optional] object instance)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x268BBD4", Offset = "0x268BBD4", VA = "0x268BBD4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x268BC54", Offset = "0x268BC54", VA = "0x268BC54")]
		public ReflectedFieldNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0B400", Offset = "0xE0B400")]
	public abstract class ReflectedMethodBaseNodeWrapper : FlowNode, IReflectedWrapper
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected bool _callable;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		protected bool _exposeParams;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		protected int _exposedParamsCount;

		[Token(Token = "0x170001FC")]
		protected abstract ISerializedMethodBaseInfo serializedMethodBase
		{
			[Token(Token = "0x6001302")]
			get;
		}

		[Token(Token = "0x170001FD")]
		private MethodBase method
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x268C2D0", Offset = "0x268C2D0", VA = "0x268C2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public bool callable
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x268C3B4", Offset = "0x268C3B4", VA = "0x268C3B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x268C3BC", Offset = "0x268C3BC", VA = "0x268C3BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool exposeParams
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x268C3E4", Offset = "0x268C3E4", VA = "0x268C3E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x268C3EC", Offset = "0x268C3EC", VA = "0x268C3EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public int exposedParamsCount
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x268C444", Offset = "0x268C444", VA = "0x268C444")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x268C44C", Offset = "0x268C44C", VA = "0x268C44C")]
			set
			{
			}
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x268C268", Offset = "0x268C268", VA = "0x268C268", Slot = "47")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x268C278", Offset = "0x268C278", VA = "0x268C278")]
		public Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		public abstract void SetMethodBase(MethodBase newMethod, [Optional] object instance);

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x268A674", Offset = "0x268A674", VA = "0x268A674")]
		public void SetDefaultParameterValues(MethodBase newMethod)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x268C474", Offset = "0x268C474", VA = "0x268C474")]
		public void SetDropInstanceReference(MethodBase newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x268A8D4", Offset = "0x268A8D4", VA = "0x268A8D4")]
		protected ReflectedMethodBaseNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class ReflectedMethodNodeWrapper : ReflectedMethodBaseNodeWrapper
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SerializedMethodInfo _method;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F6F0", Offset = "0xE1F6F0")]
		private BaseReflectedMethodNode <reflectedMethodNode>k__BackingField;

		[Token(Token = "0x17000201")]
		private BaseReflectedMethodNode reflectedMethodNode
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x268D154", Offset = "0x268D154", VA = "0x268D154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2910C", Offset = "0xE2910C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x268D15C", Offset = "0x268D15C", VA = "0x268D15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2911C", Offset = "0xE2911C")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		private MethodInfo method
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x268D164", Offset = "0x268D164", VA = "0x268D164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		protected override ISerializedMethodBaseInfo serializedMethodBase
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x268D170", Offset = "0x268D170", VA = "0x268D170", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public override string name
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x268D178", Offset = "0x268D178", VA = "0x268D178", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x268D99C", Offset = "0x268D99C", VA = "0x268D99C", Slot = "49")]
		public override void SetMethodBase(MethodBase newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x268DA3C", Offset = "0x268DA3C", VA = "0x268DA3C")]
		private void SetMethod(MethodInfo newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x268DE0C", Offset = "0x268DE0C", VA = "0x268DE0C", Slot = "43")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x268DF90", Offset = "0x268DF90", VA = "0x268DF90", Slot = "46")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x268E004", Offset = "0x268E004", VA = "0x268E004", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x268E0A8", Offset = "0x268E0A8", VA = "0x268E0A8")]
		public ReflectedMethodNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public struct ReflectedMethodRegistrationOptions
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool callable;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool exposeParams;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int exposedParamsCount;
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0B464", Offset = "0xE0B464")]
	public abstract class FlowNestedBase<T> : FlowNodeNested<T>, IDropedReferenceNode, IGraphElement, IUpdatable where T : Graph
	{
		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B49C", Offset = "0xE0B49C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowNestedBase<T> <>4__this;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Flow f;

			[Token(Token = "0x6001327")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001328")]
			internal void <Start>b__0(bool result)
			{
			}
		}

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> _subGraph;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<Component> targetAgent;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput onStart;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput onUpdate;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput onFinish;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool paused;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool endResult;

		[Token(Token = "0x17000205")]
		public override T subGraph
		{
			[Token(Token = "0x6001319")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131A")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x600131B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131C")]
		private void FlowCanvas.Nodes.IDropedReferenceNode.SetTarget(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x600131D")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600131E")]
		private void Start(Flow f)
		{
		}

		[Token(Token = "0x600131F")]
		private void Stop(Flow f)
		{
		}

		[Token(Token = "0x6001320")]
		private void OnStop(Flow f)
		{
		}

		[Token(Token = "0x6001321")]
		private void Pause(Flow f)
		{
		}

		[Token(Token = "0x6001322")]
		private void Resume(Flow f)
		{
		}

		[Token(Token = "0x6001323")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6001324")]
		protected FlowNestedBase()
		{
		}

		[Token(Token = "0x6001325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2912C", Offset = "0xE2912C")]
		private float <RegisterPorts>b__13_0()
		{
			return default(float);
		}

		[Token(Token = "0x6001326")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2913C", Offset = "0xE2913C")]
		private bool <RegisterPorts>b__13_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0B4AC", Offset = "0xE0B4AC")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE0B4AC", Offset = "0xE0B4AC")]
	public class FlowNestedFlow : FlowNestedBase<FlowScript>
	{
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x292BA88", Offset = "0x292BA88", VA = "0x292BA88")]
		public FlowNestedFlow()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0B534", Offset = "0xE0B534")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0B534", Offset = "0xE0B534")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0B534", Offset = "0xE0B534")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0B534", Offset = "0xE0B534")]
	public class CreateCollection<T> : FlowNode
	{
		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B66C", Offset = "0xE0B66C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ValueInput<T>> ins;

			[Token(Token = "0x600132C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600132D")]
			internal T[] <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B67C", Offset = "0xE0B67C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ValueInput<T>, T> <>9__1_1;

			[Token(Token = "0x600132F")]
			public <>c()
			{
			}

			[Token(Token = "0x6001330")]
			internal T <RegisterPorts>b__1_1(ValueInput<T> p)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[DelayedField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F700", Offset = "0xE1F700")]
		[ExposeField]
		[SerializeField]
		[GatherPortsCallback]
		private int _portCount;

		[Token(Token = "0x600132A")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600132B")]
		public CreateCollection()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0B68C", Offset = "0xE0B68C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0B68C", Offset = "0xE0B68C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0B68C", Offset = "0xE0B68C")]
	public class CreateDictionary<T> : FlowNode
	{
		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B794", Offset = "0xE0B794")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ValueInput<string>> keys;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ValueInput<T>> values;

			[Token(Token = "0x6001333")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001334")]
			internal IDictionary<string, T> <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B7A4", Offset = "0xE0B7A4")]
		private sealed class <>c__DisplayClass1_1
		{
			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<T> v;

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<string> k;

			[Token(Token = "0x6001335")]
			public <>c__DisplayClass1_1()
			{
			}

			[Token(Token = "0x6001336")]
			internal T <RegisterPorts>b__4(string x)
			{
				return (T)null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B7B4", Offset = "0xE0B7B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ValueInput<string>, string> <>9__1_1;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ValueInput<T>, T> <>9__1_2;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<string, string> <>9__1_3;

			[Token(Token = "0x6001338")]
			public <>c()
			{
			}

			[Token(Token = "0x6001339")]
			internal string <RegisterPorts>b__1_1(ValueInput<string> x)
			{
				return null;
			}

			[Token(Token = "0x600133A")]
			internal T <RegisterPorts>b__1_2(ValueInput<T> x)
			{
				return (T)null;
			}

			[Token(Token = "0x600133B")]
			internal string <RegisterPorts>b__1_3(string x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ExposeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xE1F76C", Offset = "0xE1F76C")]
		[DelayedField]
		[GatherPortsCallback]
		private int _portCount;

		[Token(Token = "0x6001331")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001332")]
		public CreateDictionary()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0B7C4", Offset = "0xE0B7C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0B7C4", Offset = "0xE0B7C4")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0B7C4", Offset = "0xE0B7C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0B7C4", Offset = "0xE0B7C4")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0B7C4", Offset = "0xE0B7C4")]
	public class GetOtherVariable<T> : FlowNode
	{
		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0B924", Offset = "0xE0B924")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<IBlackboard> bb;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> varName;

			[Token(Token = "0x600133F")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001340")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000207")]
		public override string name
		{
			[Token(Token = "0x600133C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600133D")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600133E")]
		public GetOtherVariable()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0B934", Offset = "0xE0B934")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0B934", Offset = "0xE0B934")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0B934", Offset = "0xE0B934")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0B934", Offset = "0xE0B934")]
	public class GetVariable<T> : ParameterVariableNode
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> value;

		[Token(Token = "0x17000208")]
		public override BBParameter parameter
		{
			[Token(Token = "0x6001341")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001342")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001343")]
		public GetVariable()
		{
		}

		[Token(Token = "0x6001344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2914C", Offset = "0xE2914C")]
		private T <RegisterPorts>b__3_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0BA38", Offset = "0xE0BA38")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0BA38", Offset = "0xE0BA38")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0BA38", Offset = "0xE0BA38")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE0BA38", Offset = "0xE0BA38")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0BA38", Offset = "0xE0BA38")]
	public abstract class RelayValueInputBase : FlowNode
	{
		[Token(Token = "0x17000209")]
		public abstract Type relayType
		{
			[Token(Token = "0x6001345")]
			get;
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x2B3A6E4", Offset = "0x2B3A6E4", VA = "0x2B3A6E4")]
		protected RelayValueInputBase()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class RelayValueInput<T> : RelayValueInputBase, IEditorMenuCallbackReceiver
	{
		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0BB70", Offset = "0xE0BB70")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RelayValueInput<T> <>4__this;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput fOut;

			[Token(Token = "0x6001351")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001352")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[DelayedField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F7D8", Offset = "0xE1F7D8")]
		public string identifier;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F824", Offset = "0xE1F824")]
		private ValueInput<T> <port>k__BackingField;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F834", Offset = "0xE1F834")]
		private bool <cached>k__BackingField;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F844", Offset = "0xE1F844")]
		private T <cachedValue>k__BackingField;

		[Token(Token = "0x1700020A")]
		public ValueInput<T> port
		{
			[Token(Token = "0x6001347")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2915C", Offset = "0xE2915C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2916C", Offset = "0xE2916C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool cached
		{
			[Token(Token = "0x6001349")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2917C", Offset = "0xE2917C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600134A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2918C", Offset = "0xE2918C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public T cachedValue
		{
			[Token(Token = "0x600134B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2919C", Offset = "0xE2919C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600134C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291AC", Offset = "0xE291AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public override Type relayType
		{
			[Token(Token = "0x600134D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public override string name
		{
			[Token(Token = "0x600134E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134F")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001350")]
		public RelayValueInput()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0BB80", Offset = "0xE0BB80")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE0BB80", Offset = "0xE0BB80")]
	[DoNotList]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0BB80", Offset = "0xE0BB80")]
	public abstract class RelayValueOutputBase : FlowNode
	{
		[Token(Token = "0x6001353")]
		public abstract void SetSource(RelayValueInputBase source);

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x2B3A6EC", Offset = "0x2B3A6EC", VA = "0x2B3A6EC")]
		protected RelayValueOutputBase()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class RelayValueOutput<T> : RelayValueOutputBase
	{
		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _sourceInputUID;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private WeakReference<RelayValueInputBase> _sourceInputRef;

		[Token(Token = "0x1700020F")]
		private string sourceInputUID
		{
			[Token(Token = "0x6001355")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001356")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		private RelayValueInput<T> sourceInput
		{
			[Token(Token = "0x6001357")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public override string name
		{
			[Token(Token = "0x6001358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001359")]
		public override void SetSource(RelayValueInputBase source)
		{
		}

		[Token(Token = "0x600135A")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600135B")]
		public RelayValueOutput()
		{
		}

		[Token(Token = "0x600135C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291BC", Offset = "0xE291BC")]
		private bool <get_sourceInput>b__6_0(RelayValueInput<T> i)
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291CC", Offset = "0xE291CC")]
		private T <RegisterPorts>b__10_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0BC6C", Offset = "0xE0BC6C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0BC6C", Offset = "0xE0BC6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0BC6C", Offset = "0xE0BC6C")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0BC6C", Offset = "0xE0BC6C")]
	public class NullObject : FlowNode
	{
		[Serializable]
		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0BD70", Offset = "0xE0BD70")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ValueHandler<object> <>9__0_0;

			[Token(Token = "0x6001361")]
			[Address(RVA = "0x2EE2754", Offset = "0x2EE2754", VA = "0x2EE2754")]
			public <>c()
			{
			}

			[Token(Token = "0x6001362")]
			[Address(RVA = "0x2EE275C", Offset = "0x2EE275C", VA = "0x2EE275C")]
			internal object <RegisterPorts>b__0_0()
			{
				return null;
			}
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x26A0630", Offset = "0x26A0630", VA = "0x26A0630", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x26A0794", Offset = "0x26A0794", VA = "0x26A0794")]
		public NullObject()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xE0BD80", Offset = "0xE0BD80")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0BD80", Offset = "0xE0BD80")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0BD80", Offset = "0xE0BD80")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0BD80", Offset = "0xE0BD80")]
	public class OwnerVariable : FlowNode
	{
		[Token(Token = "0x17000212")]
		public override string name
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x26A2A8C", Offset = "0x26A2A8C", VA = "0x26A2A8C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x26A2AD0", Offset = "0x26A2AD0", VA = "0x26A2AD0", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x26A2BA8", Offset = "0x26A2BA8", VA = "0x26A2BA8")]
		public OwnerVariable()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x26A2BB0", Offset = "0x26A2BB0", VA = "0x26A2BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291DC", Offset = "0xE291DC")]
		private GameObject <RegisterPorts>b__2_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B9")]
	public abstract class ParameterVariableNode : FlowNode
	{
		[Token(Token = "0x17000213")]
		public abstract BBParameter parameter
		{
			[Token(Token = "0x6001367")]
			get;
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x26A3880", Offset = "0x26A3880", VA = "0x26A3880")]
		protected ParameterVariableNode()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0BE84", Offset = "0xE0BE84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0BE84", Offset = "0xE0BE84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0BE84", Offset = "0xE0BE84")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0BE84", Offset = "0xE0BE84")]
	public class SetOtherVariable<T> : FlowNode
	{
		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0BFB4", Offset = "0xE0BFB4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<Blackboard> bb;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SetOtherVariable<T> <>4__this;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> v;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600136D")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600136E")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x600136F")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OperationMethod operation;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<string> varName;

		[Token(Token = "0x17000214")]
		public override string name
		{
			[Token(Token = "0x6001369")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136A")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600136B")]
		private void DoSet(Blackboard bb, string name, T value)
		{
		}

		[Token(Token = "0x600136C")]
		public SetOtherVariable()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0BFC4", Offset = "0xE0BFC4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0BFC4", Offset = "0xE0BFC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0BFC4", Offset = "0xE0BFC4")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0xE0BFC4", Offset = "0xE0BFC4")]
	public class SetVariable<T> : ParameterVariableNode
	{
		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C0C8", Offset = "0xE0C0C8")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SetVariable<T> <>4__this;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> v;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001375")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001376")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x6001377")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> targetVariable;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public OperationMethod operation;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool perSecond;

		[Token(Token = "0x17000215")]
		public override BBParameter parameter
		{
			[Token(Token = "0x6001370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public override string name
		{
			[Token(Token = "0x6001371")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001372")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001373")]
		private void DoSet(T value)
		{
		}

		[Token(Token = "0x6001374")]
		public SetVariable()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C0D8", Offset = "0xE0C0D8")]
	public abstract class CodeEventBase : EventNode<Transform>
	{
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected string eventName;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Type targetType;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Component targetComponent;

		[Token(Token = "0x17000217")]
		protected EventInfo eventInfo
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x22B48B0", Offset = "0x22B48B0", VA = "0x22B48B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x22B4B5C", Offset = "0x22B4B5C", VA = "0x22B4B5C")]
		public void SetEvent(EventInfo e, [Optional] object instace)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x22B46CC", Offset = "0x22B46CC", VA = "0x22B46CC", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x22B4B10", Offset = "0x22B4B10", VA = "0x22B4B10")]
		protected CodeEventBase()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C0E8", Offset = "0xE0C0E8")]
	public class CodeEvent : CodeEventBase
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput o;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Action pointer;

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x22B461C", Offset = "0x22B461C", VA = "0x22B461C", Slot = "35")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x22B4970", Offset = "0x22B4970", VA = "0x22B4970", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x22B4A38", Offset = "0x22B4A38", VA = "0x22B4A38", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x22B4AB8", Offset = "0x22B4AB8", VA = "0x22B4AB8")]
		private void Call()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x22B4B0C", Offset = "0x22B4B0C", VA = "0x22B4B0C")]
		public CodeEvent()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C0F8", Offset = "0xE0C0F8")]
	public class CodeEvent<T> : CodeEventBase
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput o;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> pointer;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T eventValue;

		[Token(Token = "0x6001381")]
		public override void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6001382")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001383")]
		private void Call(T eventValue)
		{
		}

		[Token(Token = "0x6001384")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001385")]
		public CodeEvent()
		{
		}

		[Token(Token = "0x6001386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291EC", Offset = "0xE291EC")]
		private T <RegisterPorts>b__6_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C108", Offset = "0xE0C108")]
	public class NewGameObject : CallableFunctionNode<GameObject, string, Vector3, Quaternion>
	{
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x269D78C", Offset = "0x269D78C", VA = "0x269D78C", Slot = "12")]
		public override GameObject Invoke(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x269D87C", Offset = "0x269D87C", VA = "0x269D87C")]
		public NewGameObject()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C118", Offset = "0xE0C118")]
	public class NewVector2 : PureFunctionNode<Vector2, float, float>
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x269DA20", Offset = "0x269DA20", VA = "0x269DA20", Slot = "12")]
		public override Vector2 Invoke(float x, float y)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x269DA24", Offset = "0x269DA24", VA = "0x269DA24")]
		public NewVector2()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C128", Offset = "0xE0C128")]
	public class NewVector3 : PureFunctionNode<Vector3, float, float, float>
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x269DA70", Offset = "0x269DA70", VA = "0x269DA70", Slot = "12")]
		public override Vector3 Invoke(float x, float y, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x269DA74", Offset = "0x269DA74", VA = "0x269DA74")]
		public NewVector3()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C138", Offset = "0xE0C138")]
	public class NewVector4 : PureFunctionNode<Vector4, float, float, float, float>
	{
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x269DAC0", Offset = "0x269DAC0", VA = "0x269DAC0", Slot = "12")]
		public override Vector4 Invoke(float x, float y, float z, float w)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x269DAF0", Offset = "0x269DAF0", VA = "0x269DAF0")]
		public NewVector4()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C148", Offset = "0xE0C148")]
	public class NewQuaternion : PureFunctionNode<Quaternion, float, float, float, float>
	{
		[Token(Token = "0x600138F")]
		[Address(RVA = "0x269D8C8", Offset = "0x269D8C8", VA = "0x269D8C8", Slot = "12")]
		public override Quaternion Invoke(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x269D8F8", Offset = "0x269D8F8", VA = "0x269D8F8")]
		public NewQuaternion()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C158", Offset = "0xE0C158")]
	public class NewColor : PureFunctionNode<Color, float, float, float, float>
	{
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x269D710", Offset = "0x269D710", VA = "0x269D710", Slot = "12")]
		public override Color Invoke(float r, float g, float b, float a = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x269D740", Offset = "0x269D740", VA = "0x269D740")]
		public NewColor()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C168", Offset = "0xE0C168")]
	public class NewBounds : PureFunctionNode<Bounds, Vector3, Vector3>
	{
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x269D6B0", Offset = "0x269D6B0", VA = "0x269D6B0", Slot = "12")]
		public override Bounds Invoke(Vector3 center, Vector3 size)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x269D6C4", Offset = "0x269D6C4", VA = "0x269D6C4")]
		public NewBounds()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C178", Offset = "0xE0C178")]
	public class NewRect : PureFunctionNode<Rect, float, float, float, float>
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x269D9A4", Offset = "0x269D9A4", VA = "0x269D9A4", Slot = "12")]
		public override Rect Invoke(float left, float top, float width, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x269D9D4", Offset = "0x269D9D4", VA = "0x269D9D4")]
		public NewRect()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C188", Offset = "0xE0C188")]
	public class NewRay : PureFunctionNode<Ray, Vector3, Vector3>
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0x269D944", Offset = "0x269D944", VA = "0x269D944", Slot = "12")]
		public override Ray Invoke(Vector3 origin, Vector3 direction)
		{
			return default(Ray);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x269D958", Offset = "0x269D958", VA = "0x269D958")]
		public NewRay()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C198", Offset = "0xE0C198")]
	public class ConvertTo<T> : PureFunctionNode<T, IConvertible> where T : IConvertible
	{
		[Token(Token = "0x6001399")]
		public override T Invoke(IConvertible obj)
		{
			return (T)null;
		}

		[Token(Token = "0x600139A")]
		public ConvertTo()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C1A8", Offset = "0xE0C1A8")]
	public class CastTo<T> : PureFunctionNode<T, object>
	{
		[Token(Token = "0x600139B")]
		public override T Invoke(object obj)
		{
			return (T)null;
		}

		[Token(Token = "0x600139C")]
		public CastTo()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C1B8", Offset = "0xE0C1B8")]
	public class ToArray<T> : PureFunctionNode<T[], IList<T>>
	{
		[Token(Token = "0x600139D")]
		public override T[] Invoke(IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		public ToArray()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C1C8", Offset = "0xE0C1C8")]
	public class ToList<T> : PureFunctionNode<List<T>, IList<T>>
	{
		[Token(Token = "0x600139F")]
		public override List<T> Invoke(IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		public ToList()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C1D8", Offset = "0xE0C1D8")]
	public abstract class CustomObjectWrapper : FlowNode
	{
		[Token(Token = "0x60013A1")]
		public abstract void SetTarget(UnityEngine.Object target);

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x2832688", Offset = "0x2832688", VA = "0x2832688")]
		protected CustomObjectWrapper()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0C210", Offset = "0xE0C210")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C210", Offset = "0xE0C210")]
	public abstract class CustomObjectWrapper<T> : CustomObjectWrapper where T : UnityEngine.Object
	{
		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _target;

		[Token(Token = "0x17000218")]
		public T target
		{
			[Token(Token = "0x60013A3")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public override string name
		{
			[Token(Token = "0x60013A5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A6")]
		public override void SetTarget(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x60013A7")]
		protected Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		protected CustomObjectWrapper()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C290", Offset = "0xE0C290")]
	public class ExtractVector2 : ExtractorNode<Vector2, float, float>
	{
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x28CF174", Offset = "0x28CF174", VA = "0x28CF174", Slot = "12")]
		public override void Invoke(Vector2 vector, out float x, out float y)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x28CF180", Offset = "0x28CF180", VA = "0x28CF180")]
		public ExtractVector2()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C2A0", Offset = "0xE0C2A0")]
	public class ExtractVector3 : ExtractorNode<Vector3, float, float, float>
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x28CF1CC", Offset = "0x28CF1CC", VA = "0x28CF1CC", Slot = "12")]
		public override void Invoke(Vector3 vector, out float x, out float y, out float z)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x28CF1DC", Offset = "0x28CF1DC", VA = "0x28CF1DC")]
		public ExtractVector3()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C2B0", Offset = "0xE0C2B0")]
	public class ExtractVector4 : ExtractorNode<Vector4, float, float, float, float>
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x28CF228", Offset = "0x28CF228", VA = "0x28CF228", Slot = "12")]
		public override void Invoke(Vector4 vector, out float x, out float y, out float z, out float w)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x28CF23C", Offset = "0x28CF23C", VA = "0x28CF23C")]
		public ExtractVector4()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C2C0", Offset = "0xE0C2C0")]
	public class ExtractQuaternion : ExtractorNode<Quaternion, float, float, float, float, Vector3>
	{
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x28CEC84", Offset = "0x28CEC84", VA = "0x28CEC84", Slot = "12")]
		public override void Invoke(Quaternion quaternion, out float x, out float y, out float z, out float w, out Vector3 eulerAngles)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x28CECD4", Offset = "0x28CECD4", VA = "0x28CECD4")]
		public ExtractQuaternion()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C2D0", Offset = "0xE0C2D0")]
	public class ExtractRect : ExtractorNode<Rect, Vector2, float, float, float, float>
	{
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x28CF08C", Offset = "0x28CF08C", VA = "0x28CF08C", Slot = "12")]
		public override void Invoke(Rect rect, out Vector2 center, out float xMin, out float xMax, out float yMin, out float yMax)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x28CF128", Offset = "0x28CF128", VA = "0x28CF128")]
		public ExtractRect()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C2E0", Offset = "0xE0C2E0")]
	public class ExtractColor : ExtractorNode<Color, float, float, float, float>
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x28CE99C", Offset = "0x28CE99C", VA = "0x28CE99C", Slot = "12")]
		public override void Invoke(Color color, out float r, out float g, out float b, out float a)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x28CE9B0", Offset = "0x28CE9B0", VA = "0x28CE9B0")]
		public ExtractColor()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C2F0", Offset = "0xE0C2F0")]
	public class ExtractRaycastHit : ExtractorNode<RaycastHit, GameObject, float, Vector3, Vector3>
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x28CEDC0", Offset = "0x28CEDC0", VA = "0x28CEDC0", Slot = "12")]
		public override void Invoke(RaycastHit hit, out GameObject gameObject, out float distance, out Vector3 normal, out Vector3 point)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x28CEECC", Offset = "0x28CEECC", VA = "0x28CEECC")]
		public ExtractRaycastHit()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C300", Offset = "0xE0C300")]
	public class ExtractRaycastHit2D : ExtractorNode<RaycastHit2D, GameObject, float, float, Vector3, Vector3>
	{
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x28CEF18", Offset = "0x28CEF18", VA = "0x28CEF18", Slot = "12")]
		public override void Invoke(RaycastHit2D hit, out GameObject gameObject, out float distance, out float fraction, out Vector3 normal, out Vector3 point)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x28CF040", Offset = "0x28CF040", VA = "0x28CF040")]
		public ExtractRaycastHit2D()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C310", Offset = "0xE0C310")]
	public class ExtractRay : ExtractorNode<Ray, Vector3, Vector3>
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x28CED20", Offset = "0x28CED20", VA = "0x28CED20", Slot = "12")]
		public override void Invoke(Ray ray, out Vector3 origin, out Vector3 direction)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x28CED74", Offset = "0x28CED74", VA = "0x28CED74")]
		public ExtractRay()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C320", Offset = "0xE0C320")]
	public class ExtractBounds : ExtractorNode<Bounds, Vector3, Vector3, Vector3, Vector3, Vector3>
	{
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x28CE688", Offset = "0x28CE688", VA = "0x28CE688", Slot = "12")]
		public override void Invoke(Bounds bounds, out Vector3 center, out Vector3 extents, out Vector3 max, out Vector3 min, out Vector3 size)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x28CE72C", Offset = "0x28CE72C", VA = "0x28CE72C")]
		public ExtractBounds()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C330", Offset = "0xE0C330")]
	public class ExtractCollision : ExtractorNode<Collision, ContactPoint[], ContactPoint, GameObject, Vector3>
	{
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x28CE778", Offset = "0x28CE778", VA = "0x28CE778", Slot = "12")]
		public override void Invoke(Collision collision, out ContactPoint[] contacts, out ContactPoint firstContact, out GameObject gameObject, out Vector3 velocity)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x28CE83C", Offset = "0x28CE83C", VA = "0x28CE83C")]
		public ExtractCollision()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C340", Offset = "0xE0C340")]
	public class ExtractCollision2D : ExtractorNode<Collision2D, ContactPoint2D[], ContactPoint2D, GameObject, Vector2>
	{
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x28CE888", Offset = "0x28CE888", VA = "0x28CE888", Slot = "12")]
		public override void Invoke(Collision2D collision, out ContactPoint2D[] contacts, out ContactPoint2D firstContact, out GameObject gameObject, out Vector2 velocity)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x28CE950", Offset = "0x28CE950", VA = "0x28CE950")]
		public ExtractCollision2D()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C350", Offset = "0xE0C350")]
	public class ExtractContactPoint : ExtractorNode<ContactPoint, Vector3, Vector3, Collider, Collider>
	{
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x28CE9FC", Offset = "0x28CE9FC", VA = "0x28CE9FC", Slot = "12")]
		public override void Invoke(ContactPoint contactPoint, out Vector3 normal, out Vector3 point, out Collider colliderA, out Collider colliderB)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x28CEA94", Offset = "0x28CEA94", VA = "0x28CEA94")]
		public ExtractContactPoint()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C360", Offset = "0xE0C360")]
	public class ExtractContactPoint2D : ExtractorNode<ContactPoint2D, Vector2, Vector2, Collider2D, Collider2D>
	{
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x28CEAE0", Offset = "0x28CEAE0", VA = "0x28CEAE0", Slot = "12")]
		public override void Invoke(ContactPoint2D contactPoint, out Vector2 normal, out Vector2 point, out Collider2D colliderA, out Collider2D colliderB)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x28CEB70", Offset = "0x28CEB70", VA = "0x28CEB70")]
		public ExtractContactPoint2D()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C370", Offset = "0xE0C370")]
	public class ExtractAnimationCurve : ExtractorNode<AnimationCurve, Keyframe[], float, WrapMode, WrapMode>
	{
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x28CE5A8", Offset = "0x28CE5A8", VA = "0x28CE5A8", Slot = "12")]
		public override void Invoke(AnimationCurve curve, out Keyframe[] keys, out float length, out WrapMode postWrapMode, out WrapMode preWrapMode)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x28CE63C", Offset = "0x28CE63C", VA = "0x28CE63C")]
		public ExtractAnimationCurve()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C380", Offset = "0xE0C380")]
	public class ExtractKeyFrame : ExtractorNode<Keyframe, float, float, float, float>
	{
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x28CEBBC", Offset = "0x28CEBBC", VA = "0x28CEBBC", Slot = "12")]
		public override void Invoke(Keyframe key, out float inTangent, out float outTangent, out float time, out float value)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x28CEC38", Offset = "0x28CEC38", VA = "0x28CEC38")]
		public ExtractKeyFrame()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C390", Offset = "0xE0C390")]
	public class SwitchValue<T> : PureFunctionNode<T, bool, T, T>
	{
		[Token(Token = "0x60013C9")]
		public override T Invoke(bool condition, T isTrue, T isFalse)
		{
			return (T)null;
		}

		[Token(Token = "0x60013CA")]
		public SwitchValue()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C3A0", Offset = "0xE0C3A0")]
	public class PickValue<T> : PureFunctionNode<T, int, IList<T>>
	{
		[Token(Token = "0x60013CB")]
		public override T Invoke(int index, IList<T> values)
		{
			return (T)null;
		}

		[Token(Token = "0x60013CC")]
		public PickValue()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C3B0", Offset = "0xE0C3B0")]
	public abstract class StaticCodeEventBase : EventNode
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected string eventName;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected Type targetType;

		[Token(Token = "0x1700021A")]
		protected EventInfo eventInfo
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x25889E8", Offset = "0x25889E8", VA = "0x25889E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x2588C00", Offset = "0x2588C00", VA = "0x2588C00")]
		public void SetEvent(EventInfo e)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x25888DC", Offset = "0x25888DC", VA = "0x25888DC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x2588BF8", Offset = "0x2588BF8", VA = "0x2588BF8")]
		protected StaticCodeEventBase()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C3C0", Offset = "0xE0C3C0")]
	public class StaticCodeEvent : StaticCodeEventBase
	{
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput o;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Action pointer;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x2588820", Offset = "0x2588820", VA = "0x2588820", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x2588AA8", Offset = "0x2588AA8", VA = "0x2588AA8", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x2588B1C", Offset = "0x2588B1C", VA = "0x2588B1C")]
		private void Call()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x2588B70", Offset = "0x2588B70", VA = "0x2588B70", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x2588BF0", Offset = "0x2588BF0", VA = "0x2588BF0")]
		public StaticCodeEvent()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C3D0", Offset = "0xE0C3D0")]
	public class StaticCodeEvent<T> : StaticCodeEventBase
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput o;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> pointer;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T eventValue;

		[Token(Token = "0x60013D6")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60013D7")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x60013D8")]
		private void Call(T value)
		{
		}

		[Token(Token = "0x60013D9")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60013DA")]
		public StaticCodeEvent()
		{
		}

		[Token(Token = "0x60013DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291FC", Offset = "0xE291FC")]
		private T <RegisterPorts>b__6_0()
		{
			return (T)null;
		}
	}
}
namespace FlowCanvas.Nodes.Legacy
{
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C3E0", Offset = "0xE0C3E0")]
	public abstract class ReflectedFieldNode
	{
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x268B374", Offset = "0x268B374", VA = "0x268B374")]
		public static ReflectedFieldNode Create(FieldInfo field)
		{
			return null;
		}

		[Token(Token = "0x60013DD")]
		public abstract void RegisterPorts(FlowNode node, FieldInfo field, ReflectedFieldNodeWrapper.AccessMode accessMode);

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x268166C", Offset = "0x268166C", VA = "0x268166C")]
		protected ReflectedFieldNode()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C3F0", Offset = "0xE0C3F0")]
	public sealed class PureReflectedFieldNode : ReflectedFieldNode
	{
		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C400", Offset = "0xE0C400")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo field;

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x2EE4200", Offset = "0x2EE4200", VA = "0x2EE4200")]
			public <>c__DisplayClass0_0()
			{
			}
		}

		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C410", Offset = "0xE0C410")]
		private sealed class <>c__DisplayClass0_1
		{
			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object constantValue;

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x2EE4208", Offset = "0x2EE4208", VA = "0x2EE4208")]
			public <>c__DisplayClass0_1()
			{
			}

			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x2EE4210", Offset = "0x2EE4210", VA = "0x2EE4210")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C420", Offset = "0xE0C420")]
		private sealed class <>c__DisplayClass0_2
		{
			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput instanceInput;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass0_0 CS$<>8__locals1;

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x2EE4218", Offset = "0x2EE4218", VA = "0x2EE4218")]
			public <>c__DisplayClass0_2()
			{
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x2EE4220", Offset = "0x2EE4220", VA = "0x2EE4220")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C430", Offset = "0xE0C430")]
		private sealed class <>c__DisplayClass0_3
		{
			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object instance;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput instanceInput;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput valueInput;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public <>c__DisplayClass0_0 CS$<>8__locals2;

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x2EE4270", Offset = "0x2EE4270", VA = "0x2EE4270")]
			public <>c__DisplayClass0_3()
			{
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x2EE4278", Offset = "0x2EE4278", VA = "0x2EE4278")]
			internal object <RegisterPorts>b__2()
			{
				return null;
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x2EE4280", Offset = "0x2EE4280", VA = "0x2EE4280")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x2680A20", Offset = "0x2680A20", VA = "0x2680A20", Slot = "4")]
		public override void RegisterPorts(FlowNode node, FieldInfo field, ReflectedFieldNodeWrapper.AccessMode accessMode)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x2681664", Offset = "0x2681664", VA = "0x2681664")]
		public PureReflectedFieldNode()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C440", Offset = "0xE0C440")]
	public abstract class ReflectedMethodNode
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C450", Offset = "0xE0C450")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParameterInfo[] parameters;

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x2EE5E78", Offset = "0x2EE5E78", VA = "0x2EE5E78")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x2EE5E80", Offset = "0x2EE5E80", VA = "0x2EE5E80")]
			internal bool <Create>b__0(ParameterInfo p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C460", Offset = "0xE0C460")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__2_0;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ParameterInfo, Type> <>9__2_1;

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x2EE5E30", Offset = "0x2EE5E30", VA = "0x2EE5E30")]
			public <>c()
			{
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x2EE5E38", Offset = "0x2EE5E38", VA = "0x2EE5E38")]
			internal Type <TryCreateJit>b__2_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x2EE5E58", Offset = "0x2EE5E58", VA = "0x2EE5E58")]
			internal Type <TryCreateJit>b__2_1(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x268303C", Offset = "0x268303C", VA = "0x268303C")]
		public ReflectedMethodNode()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x268C54C", Offset = "0x268C54C", VA = "0x268C54C")]
		public static ReflectedMethodNode Create(MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x268C788", Offset = "0x268C788", VA = "0x268C788")]
		private static ReflectedMethodNode TryCreateJit(MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x268CFBC", Offset = "0x268CFBC", VA = "0x268CFBC")]
		public string GetName(MethodInfo method, int i)
		{
			return null;
		}

		[Token(Token = "0x60013ED")]
		public abstract void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options);
	}
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C470", Offset = "0xE0C470")]
	public sealed class PureReflectedMethodNode : ReflectedMethodNode
	{
		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C480", Offset = "0xE0C480")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedMethodNode <>4__this;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x2EE44A0", Offset = "0x2EE44A0", VA = "0x2EE44A0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x2EE44A8", Offset = "0x2EE44A8", VA = "0x2EE44A8")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x2EE44C4", Offset = "0x2EE44C4", VA = "0x2EE44C4")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C490", Offset = "0xE0C490")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput o;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x2EE44F4", Offset = "0x2EE44F4", VA = "0x2EE44F4")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x2EE44FC", Offset = "0x2EE44FC", VA = "0x2EE44FC")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x20003F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C4A0", Offset = "0xE0C4A0")]
		private sealed class <>c__DisplayClass8_2
		{
			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals2;

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x2EE4574", Offset = "0x2EE4574", VA = "0x2EE4574")]
			public <>c__DisplayClass8_2()
			{
			}

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x2EE457C", Offset = "0x2EE457C", VA = "0x2EE457C")]
			internal object <RegisterPorts>b__3()
			{
				return null;
			}
		}

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MethodInfo method;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ValueInput instanceInput;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ValueInput> inputs;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ValueInput> paramsInputs;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Type paramsArrayType;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object[] args;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object instance;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object returnValue;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x2682118", Offset = "0x2682118", VA = "0x2682118", Slot = "4")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x2682D54", Offset = "0x2682D54", VA = "0x2682D54")]
		private object CallMethod()
		{
			return null;
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x2683034", Offset = "0x2683034", VA = "0x2683034")]
		public PureReflectedMethodNode()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C4B0", Offset = "0xE0C4B0")]
	public sealed class ReflectedActionNode : ReflectedMethodNode
	{
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C4C0", Offset = "0xE0C4C0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReflectedActionNode <>4__this;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x6001401")]
			[Address(RVA = "0x2EE5910", Offset = "0x2EE5910", VA = "0x2EE5910")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0x2EE5918", Offset = "0x2EE5918", VA = "0x2EE5918")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ActionCall call;

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x2689C34", Offset = "0x2689C34", VA = "0x2689C34")]
		private void Call()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x2689C50", Offset = "0x2689C50", VA = "0x2689C50", Slot = "4")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x2689DE0", Offset = "0x2689DE0", VA = "0x2689DE0")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C4D0", Offset = "0xE0C4D0")]
	public sealed class ReflectedActionNode<T1> : ReflectedMethodNode
	{
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C4E0", Offset = "0xE0C4E0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1> <>4__this;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001406")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001407")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6001408")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1> call;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001403")]
		private void Call(T1 a)
		{
		}

		[Token(Token = "0x6001404")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001405")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C4F0", Offset = "0xE0C4F0")]
	public sealed class ReflectedActionNode<T1, T2> : ReflectedMethodNode
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C500", Offset = "0xE0C500")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2> <>4__this;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600140C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600140D")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x600140E")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2> call;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001409")]
		private void Call(T1 a, T2 b)
		{
		}

		[Token(Token = "0x600140A")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600140B")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C510", Offset = "0xE0C510")]
	public sealed class ReflectedActionNode<T1, T2, T3> : ReflectedMethodNode
	{
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C520", Offset = "0xE0C520")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3> <>4__this;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001412")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001413")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6001414")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3> call;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600140F")]
		private void Call(T1 a, T2 b, T3 c)
		{
		}

		[Token(Token = "0x6001410")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001411")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C530", Offset = "0xE0C530")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4> : ReflectedMethodNode
	{
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C540", Offset = "0xE0C540")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001418")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001419")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x600141A")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4> call;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001415")]
		private void Call(T1 a, T2 b, T3 c, T4 d)
		{
		}

		[Token(Token = "0x6001416")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001417")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C550", Offset = "0xE0C550")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5> : ReflectedMethodNode
	{
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C560", Offset = "0xE0C560")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600141E")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600141F")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6001420")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5> call;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600141B")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e)
		{
		}

		[Token(Token = "0x600141C")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600141D")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C570", Offset = "0xE0C570")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5, T6> : ReflectedMethodNode
	{
		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C580", Offset = "0xE0C580")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001424")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001425")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6001426")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6> call;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001421")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f)
		{
		}

		[Token(Token = "0x6001422")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001423")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C590", Offset = "0xE0C590")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7> : ReflectedMethodNode
	{
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C5A0", Offset = "0xE0C5A0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600142A")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600142B")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x600142C")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6, T7> call;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001427")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g)
		{
		}

		[Token(Token = "0x6001428")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001429")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C5B0", Offset = "0xE0C5B0")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7, T8> : ReflectedMethodNode
	{
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C5C0", Offset = "0xE0C5C0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6001430")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001431")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6001432")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6, T7, T8> call;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600142D")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h)
		{
		}

		[Token(Token = "0x600142E")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600142F")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C5D0", Offset = "0xE0C5D0")]
	public sealed class ReflectedFunctionNode<TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C5E0", Offset = "0xE0C5E0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<TResult> <>4__this;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6001436")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001437")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C5F0", Offset = "0xE0C5F0")]
		private sealed class <>c__DisplayClass3_1
		{
			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass3_0 CS$<>8__locals1;

			[Token(Token = "0x6001438")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x6001439")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<TResult> call;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x6001433")]
		private TResult Call()
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001434")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001435")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C600", Offset = "0xE0C600")]
	public sealed class ReflectedFunctionNode<T1, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C610", Offset = "0xE0C610")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, TResult> <>4__this;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x600143D")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600143E")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x600143F")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C620", Offset = "0xE0C620")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001440")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001441")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, TResult> call;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600143A")]
		private TResult Call(T1 a)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600143B")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600143C")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C630", Offset = "0xE0C630")]
	public sealed class ReflectedFunctionNode<T1, T2, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C640", Offset = "0xE0C640")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, TResult> <>4__this;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6001445")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001446")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001447")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C650", Offset = "0xE0C650")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001448")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001449")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, TResult> call;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001442")]
		private TResult Call(T1 a, T2 b)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001443")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001444")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C660", Offset = "0xE0C660")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C670", Offset = "0xE0C670")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, TResult> <>4__this;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x600144D")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600144E")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x600144F")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C680", Offset = "0xE0C680")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001450")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001451")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, TResult> call;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600144A")]
		private TResult Call(T1 a, T2 b, T3 c)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600144B")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600144C")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C690", Offset = "0xE0C690")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C6A0", Offset = "0xE0C6A0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, TResult> <>4__this;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6001455")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001456")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001457")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C6B0", Offset = "0xE0C6B0")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001458")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001459")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, TResult> call;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001452")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001453")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001454")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C6C0", Offset = "0xE0C6C0")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C6D0", Offset = "0xE0C6D0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, TResult> <>4__this;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x600145D")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600145E")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x600145F")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C6E0", Offset = "0xE0C6E0")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001460")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001461")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, TResult> call;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600145A")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600145B")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600145C")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C6F0", Offset = "0xE0C6F0")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C700", Offset = "0xE0C700")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, TResult> <>4__this;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6001465")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001466")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001467")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C710", Offset = "0xE0C710")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001468")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001469")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, TResult> call;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001462")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001463")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001464")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C720", Offset = "0xE0C720")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C730", Offset = "0xE0C730")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, TResult> <>4__this;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x600146D")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600146E")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x600146F")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C740", Offset = "0xE0C740")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001470")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001471")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, T7, TResult> call;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600146A")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600146B")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600146C")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0C750", Offset = "0xE0C750")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, T8, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C760", Offset = "0xE0C760")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, T8, TResult> <>4__this;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6001475")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001476")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x6001477")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C770", Offset = "0xE0C770")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001478")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001479")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, T7, T8, TResult> call;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001472")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001473")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001474")]
		public ReflectedFunctionNode()
		{
		}
	}
}
namespace FlowCanvas.Macros
{
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE0C780", Offset = "0xE0C780")]
	public class Macro : FlowScriptBase
	{
		[Serializable]
		[Token(Token = "0x2000420")]
		private class DerivedSerializationData
		{
			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<DynamicParameterDefinition> inputDefinitions;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<DynamicParameterDefinition> outputDefinitions;

			[Token(Token = "0x6001487")]
			[Address(RVA = "0x2EE1844", Offset = "0x2EE1844", VA = "0x2EE1844")]
			public DerivedSerializationData()
			{
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C7C4", Offset = "0xE0C7C4")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicParameterDefinition def;

			[Token(Token = "0x6001488")]
			[Address(RVA = "0x2EE16B8", Offset = "0x2EE16B8", VA = "0x2EE16B8")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001489")]
			[Address(RVA = "0x2EE16C0", Offset = "0x2EE16C0", VA = "0x2EE16C0")]
			internal bool <AddInputDefinition>b__0(DynamicParameterDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C7D4", Offset = "0xE0C7D4")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicParameterDefinition def;

			[Token(Token = "0x600148A")]
			[Address(RVA = "0x2EE1714", Offset = "0x2EE1714", VA = "0x2EE1714")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0x2EE171C", Offset = "0x2EE171C", VA = "0x2EE171C")]
			internal bool <AddOutputDefinition>b__0(DynamicParameterDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C7E4", Offset = "0xE0C7E4")]
		private sealed class <>c__DisplayClass21_0<T>
		{
			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x600148C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x600148D")]
			internal bool <SetValueInput>b__0(DynamicParameterDefinition d)
			{
				return default(bool);
			}

			[Token(Token = "0x600148E")]
			internal object <SetValueInput>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C7F4", Offset = "0xE0C7F4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x600148F")]
			[Address(RVA = "0x2EE1770", Offset = "0x2EE1770", VA = "0x2EE1770")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001490")]
			[Address(RVA = "0x2EE1778", Offset = "0x2EE1778", VA = "0x2EE1778")]
			internal bool <CallFlowInput>b__0(DynamicParameterDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C804", Offset = "0xE0C804")]
		private sealed class <>c__DisplayClass23_0<T>
		{
			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x6001491")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001492")]
			internal bool <GetValueOutput>b__0(DynamicParameterDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public List<DynamicParameterDefinition> inputDefinitions;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public List<DynamicParameterDefinition> outputDefinitions;

		[NonSerialized]
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<string, FlowHandler> entryActionMap;

		[NonSerialized]
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Dictionary<string, FlowHandler> exitActionMap;

		[NonSerialized]
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Dictionary<string, ValueHandlerObject> entryFunctionMap;

		[NonSerialized]
		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Dictionary<string, ValueHandlerObject> exitFunctionMap;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MacroInputNode _entry;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private MacroOutputNode _exit;

		[Token(Token = "0x1700021B")]
		public override bool allowBlackboardOverrides
		{
			[Token(Token = "0x600147C")]
			[Address(RVA = "0x2CFAAA4", Offset = "0x2CFAAA4", VA = "0x2CFAAA4", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public MacroInputNode entry
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x2CFAAAC", Offset = "0x2CFAAAC", VA = "0x2CFAAAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public MacroOutputNode exit
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x2CFABAC", Offset = "0x2CFABAC", VA = "0x2CFABAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x2CFA940", Offset = "0x2CFA940", VA = "0x2CFA940", Slot = "20")]
		public override object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x2CFA9C4", Offset = "0x2CFA9C4", VA = "0x2CFA9C4", Slot = "21")]
		public override void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x2CFACB4", Offset = "0x2CFACB4", VA = "0x2CFACB4", Slot = "31")]
		protected override void OnGraphValidate()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x2CFAD34", Offset = "0x2CFAD34", VA = "0x2CFAD34")]
		public Port AddInputDefinition(DynamicParameterDefinition def)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x2CFAEC8", Offset = "0x2CFAEC8", VA = "0x2CFAEC8")]
		public Port AddOutputDefinition(DynamicParameterDefinition def)
		{
			return null;
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x2CFB05C", Offset = "0x2CFB05C", VA = "0x2CFB05C")]
		public void AddExamplePorts()
		{
		}

		[Token(Token = "0x6001483")]
		public void SetValueInput<T>(string name, T value)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x2CFB1F4", Offset = "0x2CFB1F4", VA = "0x2CFB1F4")]
		public void CallFlowInput(string name)
		{
		}

		[Token(Token = "0x6001485")]
		public T GetValueOutput<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x2CFB364", Offset = "0x2CFB364", VA = "0x2CFB364")]
		public Macro()
		{
		}
	}
	[Token(Token = "0x2000426")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0C814", Offset = "0xE0C814")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0C814", Offset = "0xE0C814")]
	[ProtectedSingleton]
	public class MacroInputNode : FlowNode
	{
		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C8B4", Offset = "0xE0C8B4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicParameterDefinition def;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MacroInputNode <>4__this;

			[Token(Token = "0x6001497")]
			[Address(RVA = "0x2EE184C", Offset = "0x2EE184C", VA = "0x2EE184C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0x2EE1854", Offset = "0x2EE1854", VA = "0x2EE1854")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x2CFB648", Offset = "0x2CFB648", VA = "0x2CFB648", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700021F")]
		private Macro macro
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x2CFB650", Offset = "0x2CFB650", VA = "0x2CFB650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x2CFB6D0", Offset = "0x2CFB6D0", VA = "0x2CFB6D0", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x2CFBA14", Offset = "0x2CFBA14", VA = "0x2CFBA14")]
		public MacroInputNode()
		{
		}
	}
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE0C8C4", Offset = "0xE0C8C4")]
	[HasRefreshButton]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE0C8C4", Offset = "0xE0C8C4")]
	[DoNotList]
	public class MacroNodeWrapper : FlowNode, IGraphAssignable, IGraphElement, IUpdatable
	{
		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C968", Offset = "0xE0C968")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Macro target;

			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x2EE18E4", Offset = "0x2EE18E4", VA = "0x2EE18E4")]
			public <>c__DisplayClass25_0()
			{
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C978", Offset = "0xE0C978")]
		private sealed class <>c__DisplayClass25_1
		{
			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicParameterDefinition defIn;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass25_0 CS$<>8__locals1;

			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x2EE18EC", Offset = "0x2EE18EC", VA = "0x2EE18EC")]
			public <>c__DisplayClass25_1()
			{
			}

			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x2EE18F4", Offset = "0x2EE18F4", VA = "0x2EE18F4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0C988", Offset = "0xE0C988")]
		private sealed class <>c__DisplayClass25_2
		{
			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicParameterDefinition defOut;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass25_0 CS$<>8__locals2;

			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x2EE19B8", Offset = "0x2EE19B8", VA = "0x2EE19B8")]
			public <>c__DisplayClass25_2()
			{
			}

			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x2EE19C0", Offset = "0x2EE19C0", VA = "0x2EE19C0")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Macro _macro;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Macro _currentInstance;

		[Token(Token = "0x17000220")]
		public override string name
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x2CFBA1C", Offset = "0x2CFBA1C", VA = "0x2CFBA1C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public override string description
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x2CFBAC4", Offset = "0x2CFBAC4", VA = "0x2CFBAC4", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public Macro macro
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x2CFBB78", Offset = "0x2CFBB78", VA = "0x2CFBB78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x2CFBB80", Offset = "0x2CFBB80", VA = "0x2CFBB80")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		private Graph NodeCanvas.Framework.IGraphAssignable.subGraph
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x2CFBC64", Offset = "0x2CFBC64", VA = "0x2CFBC64", Slot = "47")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x2CFBC6C", Offset = "0x2CFBC6C", VA = "0x2CFBC6C", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		private Graph NodeCanvas.Framework.IGraphAssignable.currentInstance
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x2CFBCFC", Offset = "0x2CFBCFC", VA = "0x2CFBCFC", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x2CFBD04", Offset = "0x2CFBD04", VA = "0x2CFBD04", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		private List<BBMappingParameter> NodeCanvas.Framework.IGraphAssignable.variablesMap
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x2CFBD98", Offset = "0x2CFBD98", VA = "0x2CFBD98", Slot = "54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x2CFBDA0", Offset = "0x2CFBDA0", VA = "0x2CFBDA0", Slot = "55")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		private BBParameter NodeCanvas.Framework.IGraphAssignable.subGraphParameter
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x2CFBDA4", Offset = "0x2CFBDA4", VA = "0x2CFBDA4", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private Dictionary<Graph, Graph> NodeCanvas.Framework.IGraphAssignable.instances
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x2CFBDAC", Offset = "0x2CFBDAC", VA = "0x2CFBDAC", Slot = "51")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x2CFBE4C", Offset = "0x2CFBE4C", VA = "0x2CFBE4C", Slot = "52")]
			set
			{
			}
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x2CFBEA0", Offset = "0x2CFBEA0", VA = "0x2CFBEA0")]
		public void MakeInstance()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x2CFBFBC", Offset = "0x2CFBFBC", VA = "0x2CFBFBC", Slot = "56")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x2CFC058", Offset = "0x2CFC058", VA = "0x2CFC058", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x2CFC644", Offset = "0x2CFC644", VA = "0x2CFC644")]
		public MacroNodeWrapper()
		{
		}
	}
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0C998", Offset = "0xE0C998")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0C998", Offset = "0xE0C998")]
	[ProtectedSingleton]
	public class MacroOutputNode : FlowNode
	{
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0CA38", Offset = "0xE0CA38")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicParameterDefinition def;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MacroOutputNode <>4__this;

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x2EE1A48", Offset = "0x2EE1A48", VA = "0x2EE1A48")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x2EE1A50", Offset = "0x2EE1A50", VA = "0x2EE1A50")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x17000228")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x2CFC64C", Offset = "0x2CFC64C", VA = "0x2CFC64C", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000229")]
		private Macro macro
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x2CFC654", Offset = "0x2CFC654", VA = "0x2CFC654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x2CFC6D4", Offset = "0x2CFC6D4", VA = "0x2CFC6D4", Slot = "45")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x2CFCA0C", Offset = "0x2CFCA0C", VA = "0x2CFCA0C")]
		public MacroOutputNode()
		{
		}
	}
}
namespace NodeCanvas
{
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE0CA48", Offset = "0xE0CA48")]
	public class ActionListPlayer : MonoBehaviour, ITaskSystem, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playOnAwake;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _serializedList;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Blackboard _blackboard;

		[NonSerialized]
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ActionList _actionList;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float timeStarted;

		[Token(Token = "0x1700022A")]
		public ActionList actionList
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x2A9DC30", Offset = "0x2A9DC30", VA = "0x2A9DC30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public float elapsedTime
		{
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x2A9DC38", Offset = "0x2A9DC38", VA = "0x2A9DC38", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022C")]
		public float deltaTime
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x2A9DC64", Offset = "0x2A9DC64", VA = "0x2A9DC64", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022D")]
		private UnityEngine.Object NodeCanvas.Framework.ITaskSystem.contextObject
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x2A9DC6C", Offset = "0x2A9DC6C", VA = "0x2A9DC6C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private Component NodeCanvas.Framework.ITaskSystem.agent
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x2A9DC70", Offset = "0x2A9DC70", VA = "0x2A9DC70", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x2A9DC74", Offset = "0x2A9DC74", VA = "0x2A9DC74", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x2A9DC7C", Offset = "0x2A9DC7C", VA = "0x2A9DC7C")]
			set
			{
			}
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x2A9D908", Offset = "0x2A9D908", VA = "0x2A9D908", Slot = "12")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x2A9DAC0", Offset = "0x2A9DAC0", VA = "0x2A9DAC0", Slot = "13")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x2A9DE88", Offset = "0x2A9DE88", VA = "0x2A9DE88")]
		public static ActionListPlayer Create()
		{
			return null;
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x2A9DF18", Offset = "0x2A9DF18", VA = "0x2A9DF18")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x2A9DD34", Offset = "0x2A9DD34", VA = "0x2A9DD34", Slot = "9")]
		public void UpdateTasksOwner()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x2A9E0A4", Offset = "0x2A9E0A4", VA = "0x2A9E0A4", Slot = "10")]
		private void NodeCanvas.Framework.ITaskSystem.SendEvent(string name, object value, object sender)
		{
		}

		[Token(Token = "0x60014C2")]
		private void NodeCanvas.Framework.ITaskSystem.SendEvent<T>(string name, T value, object sender)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x2A9DF5C", Offset = "0x2A9DF5C", VA = "0x2A9DF5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2920C", Offset = "0xE2920C")]
		public void Play()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x2A9E118", Offset = "0x2A9E118", VA = "0x2A9E118")]
		public void Play(Action<Status> OnFinish)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x2A9E0A8", Offset = "0x2A9E0A8", VA = "0x2A9E0A8")]
		public void Play(Component agent, IBlackboard blackboard, Action<Status> OnFinish)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x2A9E1B4", Offset = "0x2A9E1B4", VA = "0x2A9E1B4")]
		public Status Execute()
		{
			return default(Status);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x2A9E1D4", Offset = "0x2A9E1D4", VA = "0x2A9E1D4")]
		public Status Execute(Component agent)
		{
			return default(Status);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x2A9E1F4", Offset = "0x2A9E1F4", VA = "0x2A9E1F4")]
		public ActionListPlayer()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Conditions
{
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0CA80", Offset = "0xE0CA80")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CA80", Offset = "0xE0CA80")]
	public class InvokeSignal : ActionTask<Transform>
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<SignalDefinition> signalDefinition;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool global;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Dictionary<string, BBObjectParameter> argumentsMap;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object[] args;

		[Token(Token = "0x17000230")]
		protected override string info
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x2E355B4", Offset = "0x2E355B4", VA = "0x2E355B4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x2E355D4", Offset = "0x2E355D4", VA = "0x2E355D4", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x2E35694", Offset = "0x2E35694", VA = "0x2E35694", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x2E35874", Offset = "0x2E35874", VA = "0x2E35874")]
		public InvokeSignal()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CAE0", Offset = "0xE0CAE0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0CAE0", Offset = "0xE0CAE0")]
	public class MecanimCheckBool : ConditionTask<Animator>
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1F954", Offset = "0xE1F954")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<bool> value;

		[Token(Token = "0x17000231")]
		protected override string info
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x2CFD0E0", Offset = "0x2CFD0E0", VA = "0x2CFD0E0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x2CFD198", Offset = "0x2CFD198", VA = "0x2CFD198", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x2CFD260", Offset = "0x2CFD260", VA = "0x2CFD260")]
		public MecanimCheckBool()
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0CB44", Offset = "0xE0CB44")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CB44", Offset = "0xE0CB44")]
	public class MecanimCheckFloat : ConditionTask<Animator>
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1F964", Offset = "0xE1F964")]
		public BBParameter<string> parameter;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod comparison;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> value;

		[Token(Token = "0x17000232")]
		protected override string info
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x2CFD2AC", Offset = "0x2CFD2AC", VA = "0x2CFD2AC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x2CFD360", Offset = "0x2CFD360", VA = "0x2CFD360", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x2CFD43C", Offset = "0x2CFD43C", VA = "0x2CFD43C")]
		public MecanimCheckFloat()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CBA8", Offset = "0xE0CBA8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0CBA8", Offset = "0xE0CBA8")]
	public class MecanimCheckInt : ConditionTask<Animator>
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1F974", Offset = "0xE1F974")]
		public BBParameter<string> parameter;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod comparison;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> value;

		[Token(Token = "0x17000233")]
		protected override string info
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x2CFD488", Offset = "0x2CFD488", VA = "0x2CFD488", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x2CFD53C", Offset = "0x2CFD53C", VA = "0x2CFD53C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x2CFD60C", Offset = "0x2CFD60C", VA = "0x2CFD60C")]
		public MecanimCheckInt()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0CC0C", Offset = "0xE0CC0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CC0C", Offset = "0xE0CC0C")]
	public class MecanimIsInTransition : ConditionTask<Animator>
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<int> layerIndex;

		[Token(Token = "0x17000234")]
		protected override string info
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x2CFD658", Offset = "0x2CFD658", VA = "0x2CFD658", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x2CFD69C", Offset = "0x2CFD69C", VA = "0x2CFD69C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x2CFD72C", Offset = "0x2CFD72C", VA = "0x2CFD72C")]
		public MecanimIsInTransition()
		{
		}
	}
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CC70", Offset = "0xE0CC70")]
	public class CheckBoolean : ConditionTask
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<bool> valueA;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<bool> valueB;

		[Token(Token = "0x17000235")]
		protected override string info
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x22A6BF4", Offset = "0x22A6BF4", VA = "0x22A6BF4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x22A6C88", Offset = "0x22A6C88", VA = "0x22A6C88", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x22A6D00", Offset = "0x22A6D00", VA = "0x22A6D00")]
		public CheckBoolean()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CCA8", Offset = "0xE0CCA8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0CCA8", Offset = "0xE0CCA8")]
	public class CheckBooleanTrigger : ConditionTask
	{
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<bool> trigger;

		[Token(Token = "0x17000236")]
		protected override string info
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x22A6D80", Offset = "0x22A6D80", VA = "0x22A6D80", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x22A6DD0", Offset = "0x22A6DD0", VA = "0x22A6DD0", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x22A6E60", Offset = "0x22A6E60", VA = "0x22A6E60")]
		public CheckBooleanTrigger()
		{
		}
	}
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CD08", Offset = "0xE0CD08")]
	public class CheckEnum : ConditionTask
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBObjectParameter valueA;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBObjectParameter valueB;

		[Token(Token = "0x17000237")]
		protected override string info
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x22AAEA8", Offset = "0x22AAEA8", VA = "0x22AAEA8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x22AAF3C", Offset = "0x22AAF3C", VA = "0x22AAF3C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x22AAFB8", Offset = "0x22AAFB8", VA = "0x22AAFB8")]
		public CheckEnum()
		{
		}
	}
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CD40", Offset = "0xE0CD40")]
	public class CheckFloat : ConditionTask
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<float> valueA;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> valueB;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1F9C4", Offset = "0xE1F9C4")]
		public float differenceThreshold;

		[Token(Token = "0x17000238")]
		protected override string info
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x22AC070", Offset = "0x22AC070", VA = "0x22AC070", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x22AC0EC", Offset = "0x22AC0EC", VA = "0x22AC0EC", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x22AC174", Offset = "0x22AC174", VA = "0x22AC174")]
		public CheckFloat()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CD78", Offset = "0xE0CD78")]
	public class CheckInt : ConditionTask
	{
		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<int> valueA;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> valueB;

		[Token(Token = "0x17000239")]
		protected override string info
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x22ADAB8", Offset = "0x22ADAB8", VA = "0x22ADAB8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x22ADB34", Offset = "0x22ADB34", VA = "0x22ADB34", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x22ADBBC", Offset = "0x22ADBBC", VA = "0x22ADBBC")]
		public CheckInt()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0CDB0", Offset = "0xE0CDB0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CDB0", Offset = "0xE0CDB0")]
	public class CheckNull : ConditionTask
	{
		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<object> variable;

		[Token(Token = "0x1700023A")]
		protected override string info
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x22AFED4", Offset = "0x22AFED4", VA = "0x22AFED4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x22AFF34", Offset = "0x22AFF34", VA = "0x22AFF34", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x22AFF94", Offset = "0x22AFF94", VA = "0x22AFF94")]
		public CheckNull()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CE10", Offset = "0xE0CE10")]
	public class CheckString : ConditionTask
	{
		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<string> valueA;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<string> valueB;

		[Token(Token = "0x1700023B")]
		protected override string info
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x22B1854", Offset = "0x22B1854", VA = "0x22B1854", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x22B18E8", Offset = "0x22B18E8", VA = "0x22B18E8", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x22B1964", Offset = "0x22B1964", VA = "0x22B1964")]
		public CheckString()
		{
		}
	}
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CE48", Offset = "0xE0CE48")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE0CE48", Offset = "0xE0CE48")]
	public class CheckUnityObject : ConditionTask
	{
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<UnityEngine.Object> valueA;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<UnityEngine.Object> valueB;

		[Token(Token = "0x1700023C")]
		protected override string info
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x22B3680", Offset = "0x22B3680", VA = "0x22B3680", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x22B3714", Offset = "0x22B3714", VA = "0x22B3714", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x22B37C4", Offset = "0x22B37C4", VA = "0x22B37C4")]
		public CheckUnityObject()
		{
		}
	}
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CEA8", Offset = "0xE0CEA8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0CEA8", Offset = "0xE0CEA8")]
	public class CheckVariable<T> : ConditionTask
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> valueA;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> valueB;

		[Token(Token = "0x1700023D")]
		protected override string info
		{
			[Token(Token = "0x60014F1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F2")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F3")]
		public CheckVariable()
		{
		}
	}
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CF08", Offset = "0xE0CF08")]
	public class CheckVectorDistance : ConditionTask
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<Vector3> vectorA;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<Vector3> vectorB;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CompareMethod comparison;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> distance;

		[Token(Token = "0x1700023E")]
		protected override string info
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x22B37D4", Offset = "0x22B37D4", VA = "0x22B37D4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x22B3958", Offset = "0x22B3958", VA = "0x22B3958", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x22B3A38", Offset = "0x22B3A38", VA = "0x22B3A38")]
		public CheckVectorDistance()
		{
		}
	}
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CF40", Offset = "0xE0CF40")]
	public class TryGetValue<T> : ConditionTask
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FA50", Offset = "0xE1FA50")]
		public BBParameter<Dictionary<string, T>> targetDictionary;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FA88", Offset = "0xE1FA88")]
		public BBParameter<string> key;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveValueAs;

		[Token(Token = "0x1700023F")]
		protected override string info
		{
			[Token(Token = "0x60014F7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F8")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F9")]
		public TryGetValue()
		{
		}
	}
	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0CF78", Offset = "0xE0CF78")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CF78", Offset = "0xE0CF78")]
	public class ListContainsElement<T> : ConditionTask
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FAA8", Offset = "0xE1FAA8")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> checkElement;

		[Token(Token = "0x17000240")]
		protected override string info
		{
			[Token(Token = "0x60014FA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FB")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FC")]
		public ListContainsElement()
		{
		}
	}
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0CFD8", Offset = "0xE0CFD8")]
	public class ListIsEmpty : ConditionTask
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FAE0", Offset = "0xE1FAE0")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x17000241")]
		protected override string info
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x2CF89C8", Offset = "0x2CF89C8", VA = "0x2CF89C8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x2CF8A18", Offset = "0x2CF8A18", VA = "0x2CF8A18", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x2CF8AF8", Offset = "0x2CF8AF8", VA = "0x2CF8AF8")]
		public ListIsEmpty()
		{
		}
	}
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D010", Offset = "0xE0D010")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D010", Offset = "0xE0D010")]
	public class BBVariableChanged : ConditionTask
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBObjectParameter targetVariable;

		[Token(Token = "0x17000242")]
		protected override string info
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x2AAB1C4", Offset = "0x2AAB1C4", VA = "0x2AAB1C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x2AAB224", Offset = "0x2AAB224", VA = "0x2AAB224", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x2AAB284", Offset = "0x2AAB284", VA = "0x2AAB284", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x2AAB334", Offset = "0x2AAB334", VA = "0x2AAB334", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x2AAB3E4", Offset = "0x2AAB3E4", VA = "0x2AAB3E4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x2AAB3EC", Offset = "0x2AAB3EC", VA = "0x2AAB3EC")]
		private void OnValueChanged(object varValue)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x2AAB3F8", Offset = "0x2AAB3F8", VA = "0x2AAB3F8")]
		public BBVariableChanged()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D074", Offset = "0xE0D074")]
	public class StringContains : ConditionTask
	{
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FB28", Offset = "0xE1FB28")]
		[BlackboardOnly]
		public BBParameter<string> targetString;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<string> checkString;

		[Token(Token = "0x17000243")]
		protected override string info
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x258A81C", Offset = "0x258A81C", VA = "0x258A81C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x258A86C", Offset = "0x258A86C", VA = "0x258A86C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x258A8EC", Offset = "0x258A8EC", VA = "0x258A8EC")]
		public StringContains()
		{
		}
	}
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D0AC", Offset = "0xE0D0AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D0AC", Offset = "0xE0D0AC")]
	public class CanSeeTarget : ConditionTask<Transform>
	{
		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FB60", Offset = "0xE1FB60")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> awarnessDistance;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FB70", Offset = "0xE1FB70")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 offset;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x17000244")]
		protected override string info
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x2DFB760", Offset = "0x2DFB760", VA = "0x2DFB760", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x2DFB7D0", Offset = "0x2DFB7D0", VA = "0x2DFB7D0", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x2DFBAF4", Offset = "0x2DFBAF4", VA = "0x2DFBAF4", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x2DFBF14", Offset = "0x2DFBF14", VA = "0x2DFBF14")]
		public CanSeeTarget()
		{
		}
	}
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D10C", Offset = "0xE0D10C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D10C", Offset = "0xE0D10C")]
	public class CanSeeTarget2D : ConditionTask<Transform>
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FB88", Offset = "0xE1FB88")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> awarnessDistance;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FB98", Offset = "0xE1FB98")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 offset;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RaycastHit2D hit;

		[Token(Token = "0x17000245")]
		protected override string info
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x2DFBFD0", Offset = "0x2DFBFD0", VA = "0x2DFBFD0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x2DFC040", Offset = "0x2DFC040", VA = "0x2DFC040", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x2DFC444", Offset = "0x2DFC444", VA = "0x2DFC444", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x2DFC800", Offset = "0x2DFC800", VA = "0x2DFC800")]
		public CanSeeTarget2D()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D16C", Offset = "0xE0D16C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D16C", Offset = "0xE0D16C")]
	public class CanSeeTargetAny : ConditionTask<Transform>
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> awarnessDistance;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FBB0", Offset = "0xE1FBB0")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 offset;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> allResults;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<GameObject> closerResult;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit hit;

		[Token(Token = "0x17000246")]
		protected override string info
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x2DFC8BC", Offset = "0x2DFC8BC", VA = "0x2DFC8BC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x2DFC92C", Offset = "0x2DFC92C", VA = "0x2DFC92C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x2DFD0B8", Offset = "0x2DFD0B8", VA = "0x2DFD0B8", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x2DFD4D8", Offset = "0x2DFD4D8", VA = "0x2DFD4D8")]
		public CanSeeTargetAny()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x2DFD594", Offset = "0x2DFD594", VA = "0x2DFD594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29244", Offset = "0xE29244")]
		private float <OnCheck>b__10_0(GameObject x)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D1CC", Offset = "0xE0D1CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D1CC", Offset = "0xE0D1CC")]
	public class CanSeeTargetAny2D : ConditionTask<Transform>
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> awarnessDistance;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FBE8", Offset = "0xE1FBE8")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 offset;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> allResults;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<GameObject> closerResult;

		[Token(Token = "0x17000247")]
		protected override string info
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x2DFD654", Offset = "0x2DFD654", VA = "0x2DFD654", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x2DFD6C4", Offset = "0x2DFD6C4", VA = "0x2DFD6C4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x2DFDF6C", Offset = "0x2DFDF6C", VA = "0x2DFDF6C", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x2DFE320", Offset = "0x2DFE320", VA = "0x2DFE320")]
		public CanSeeTargetAny2D()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x2DFE3DC", Offset = "0x2DFE3DC", VA = "0x2DFE3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29254", Offset = "0xE29254")]
		private float <OnCheck>b__9_0(GameObject x)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D22C", Offset = "0xE0D22C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D22C", Offset = "0xE0D22C")]
	public class CheckDistanceToGameObject : ConditionTask<Transform>
	{
		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FC20", Offset = "0xE1FC20")]
		public BBParameter<GameObject> checkTarget;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> distance;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FC30", Offset = "0xE1FC30")]
		public float floatingPoint;

		[Token(Token = "0x17000248")]
		protected override string info
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x22A92BC", Offset = "0x22A92BC", VA = "0x22A92BC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x22A94D4", Offset = "0x22A94D4", VA = "0x22A94D4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x22A95E8", Offset = "0x22A95E8", VA = "0x22A95E8", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x22A9710", Offset = "0x22A9710", VA = "0x22A9710")]
		public CheckDistanceToGameObject()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D290", Offset = "0xE0D290")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D290", Offset = "0xE0D290")]
	public class CheckDistanceToGameObject2D : ConditionTask<Transform>
	{
		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FC4C", Offset = "0xE1FC4C")]
		public BBParameter<GameObject> checkTarget;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> distance;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FC5C", Offset = "0xE1FC5C")]
		public float floatingPoint;

		[Token(Token = "0x17000249")]
		protected override string info
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x22A97A0", Offset = "0x22A97A0", VA = "0x22A97A0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x22A99B8", Offset = "0x22A99B8", VA = "0x22A99B8", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x22A9AB8", Offset = "0x22A9AB8", VA = "0x22A9AB8", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x22A9BD0", Offset = "0x22A9BD0", VA = "0x22A9BD0")]
		public CheckDistanceToGameObject2D()
		{
		}
	}
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D2F4", Offset = "0xE0D2F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D2F4", Offset = "0xE0D2F4")]
	public class CheckDistanceToGameObjectAny : ConditionTask<Transform>
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> distance;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FC78", Offset = "0xE1FC78")]
		public float floatingPoint;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> allResults;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<GameObject> closerResult;

		[Token(Token = "0x1700024A")]
		protected override string info
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x22A9C60", Offset = "0x22A9C60", VA = "0x22A9C60", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x22A9E78", Offset = "0x22A9E78", VA = "0x22A9E78", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x22AA328", Offset = "0x22AA328", VA = "0x22AA328", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x22AA450", Offset = "0x22AA450", VA = "0x22AA450")]
		public CheckDistanceToGameObjectAny()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x22AA4E0", Offset = "0x22AA4E0", VA = "0x22AA4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29264", Offset = "0xE29264")]
		private float <OnCheck>b__8_0(GameObject x)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D358", Offset = "0xE0D358")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D358", Offset = "0xE0D358")]
	public class CheckDistanceToGameObjectAny2D : ConditionTask<Transform>
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> distance;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FCB4", Offset = "0xE1FCB4")]
		public float floatingPoint;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> allResults;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<GameObject> closerResult;

		[Token(Token = "0x1700024B")]
		protected override string info
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x22AA5A0", Offset = "0x22AA5A0", VA = "0x22AA5A0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x22AA7B8", Offset = "0x22AA7B8", VA = "0x22AA7B8", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x22AAC54", Offset = "0x22AAC54", VA = "0x22AAC54", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x22AAD6C", Offset = "0x22AAD6C", VA = "0x22AAD6C")]
		public CheckDistanceToGameObjectAny2D()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x22AADFC", Offset = "0x22AADFC", VA = "0x22AADFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29274", Offset = "0xE29274")]
		private float <OnCheck>b__8_0(GameObject x)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D3BC", Offset = "0xE0D3BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D3BC", Offset = "0xE0D3BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D3BC", Offset = "0xE0D3BC")]
	public class CheckLOS : ConditionTask<Transform>
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FCF0", Offset = "0xE1FCF0")]
		public BBParameter<GameObject> LOSTarget;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<LayerMask> layerMask;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 offset;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RaycastHit hit;

		[Token(Token = "0x1700024C")]
		protected override string info
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x22ADD1C", Offset = "0x22ADD1C", VA = "0x22ADD1C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x22ADD88", Offset = "0x22ADD88", VA = "0x22ADD88", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x22ADFC8", Offset = "0x22ADFC8", VA = "0x22ADFC8", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x22AE180", Offset = "0x22AE180", VA = "0x22AE180")]
		public CheckLOS()
		{
		}
	}
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D444", Offset = "0xE0D444")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D444", Offset = "0xE0D444")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D444", Offset = "0xE0D444")]
	public class CheckLOS2D : ConditionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0D4CC", Offset = "0xE0D4CC")]
		private sealed class <>c
		{
			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RaycastHit2D, Collider2D> <>9__7_0;

			[Token(Token = "0x6001537")]
			[Address(RVA = "0x2729C04", Offset = "0x2729C04", VA = "0x2729C04")]
			public <>c()
			{
			}

			[Token(Token = "0x6001538")]
			[Address(RVA = "0x2729C0C", Offset = "0x2729C0C", VA = "0x2729C0C")]
			internal Collider2D <OnCheck>b__7_0(RaycastHit2D h)
			{
				return null;
			}
		}

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FD10", Offset = "0xE1FD10")]
		public BBParameter<GameObject> LOSTarget;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<LayerMask> layerMask;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[GetFromAgent]
		protected Collider2D agentCollider;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit2D[] hits;

		[Token(Token = "0x1700024D")]
		protected override string info
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x22AE208", Offset = "0x22AE208", VA = "0x22AE208", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x22AE274", Offset = "0x22AE274", VA = "0x22AE274", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x22AE828", Offset = "0x22AE828", VA = "0x22AE828", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x22AE9A8", Offset = "0x22AE9A8", VA = "0x22AE9A8")]
		public CheckLOS2D()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D4DC", Offset = "0xE0D4DC")]
	public class HasComponent<T> : ConditionTask<Transform> where T : Component
	{
		[Token(Token = "0x6001539")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		public HasComponent()
		{
		}
	}
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D514", Offset = "0xE0D514")]
	public class IsActive : ConditionTask<Transform>
	{
		[Token(Token = "0x1700024E")]
		protected override string info
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x2E3590C", Offset = "0x2E3590C", VA = "0x2E3590C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x2E35964", Offset = "0x2E35964", VA = "0x2E35964", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x2E359CC", Offset = "0x2E359CC", VA = "0x2E359CC")]
		public IsActive()
		{
		}
	}
	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D54C", Offset = "0xE0D54C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D54C", Offset = "0xE0D54C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D54C", Offset = "0xE0D54C")]
	public class IsInFront : ConditionTask<Transform>
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FD40", Offset = "0xE1FD40")]
		public BBParameter<GameObject> checkTarget;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FD50", Offset = "0xE1FD50")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x1700024F")]
		protected override string info
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x2E35A18", Offset = "0x2E35A18", VA = "0x2E35A18", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x2E35A78", Offset = "0x2E35A78", VA = "0x2E35A78", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x2E35BB8", Offset = "0x2E35BB8", VA = "0x2E35BB8", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x2E35D80", Offset = "0x2E35D80", VA = "0x2E35D80")]
		public IsInFront()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0D5D4", Offset = "0xE0D5D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D5D4", Offset = "0xE0D5D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D5D4", Offset = "0xE0D5D4")]
	public class IsInFront2D : ConditionTask<Transform>
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FD68", Offset = "0xE1FD68")]
		public BBParameter<GameObject> checkTarget;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE1FD78", Offset = "0xE1FD78")]
		public BBParameter<float> viewAngle;

		[Token(Token = "0x17000250")]
		protected override string info
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x2E35E00", Offset = "0x2E35E00", VA = "0x2E35E00", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x2E35E60", Offset = "0x2E35E60", VA = "0x2E35E60", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x2E36060", Offset = "0x2E36060", VA = "0x2E36060", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x2E3621C", Offset = "0x2E3621C", VA = "0x2E3621C")]
		public IsInFront2D()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D65C", Offset = "0xE0D65C")]
	public class IsWithinLayerMask : ConditionTask<Transform>
	{
		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<LayerMask> targetLayers;

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x2E36430", Offset = "0x2E36430", VA = "0x2E36430", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x2E364C8", Offset = "0x2E364C8", VA = "0x2E364C8")]
		public IsWithinLayerMask()
		{
		}
	}
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D694", Offset = "0xE0D694")]
	public class CheckButtonInput : ConditionTask
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PressTypes pressType;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE1FD90", Offset = "0xE1FD90")]
		public BBParameter<string> buttonName;

		[Token(Token = "0x17000251")]
		protected override string info
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x22A6E70", Offset = "0x22A6E70", VA = "0x22A6E70", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x22A6F2C", Offset = "0x22A6F2C", VA = "0x22A6F2C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x22A7000", Offset = "0x22A7000", VA = "0x22A7000")]
		public CheckButtonInput()
		{
		}
	}
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D6CC", Offset = "0xE0D6CC")]
	public class CheckKeyboardInput : ConditionTask
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PressTypes pressType;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public KeyCode key;

		[Token(Token = "0x17000252")]
		protected override string info
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x22ADBCC", Offset = "0x22ADBCC", VA = "0x22ADBCC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x22ADCC0", Offset = "0x22ADCC0", VA = "0x22ADCC0", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x22ADD04", Offset = "0x22ADD04", VA = "0x22ADD04")]
		public CheckKeyboardInput()
		{
		}
	}
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D704", Offset = "0xE0D704")]
	public class CheckMousePick : ConditionTask
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[LayerField]
		public int layer;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGoAs;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePosAs;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit hit;

		[Token(Token = "0x17000253")]
		protected override string info
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x22AF7D0", Offset = "0x22AF7D0", VA = "0x22AF7D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x22AF928", Offset = "0x22AF928", VA = "0x22AF928", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x22AFA98", Offset = "0x22AFA98", VA = "0x22AFA98")]
		public CheckMousePick()
		{
		}
	}
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D73C", Offset = "0xE0D73C")]
	public class CheckMousePick2D : ConditionTask
	{
		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LayerMask mask;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGoAs;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePosAs;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int buttonID;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit2D hit;

		[Token(Token = "0x17000254")]
		protected override string info
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x22AFAA8", Offset = "0x22AFAA8", VA = "0x22AFAA8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x22AFC24", Offset = "0x22AFC24", VA = "0x22AFC24", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x22AFE98", Offset = "0x22AFE98", VA = "0x22AFE98")]
		public CheckMousePick2D()
		{
		}
	}
	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D774", Offset = "0xE0D774")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D774", Offset = "0xE0D774")]
	public class PathExists : ConditionTask<NavMeshAgent>
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<Vector3>> savePathAs;

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x26A4D6C", Offset = "0x26A4D6C", VA = "0x26A4D6C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x26A4E9C", Offset = "0x26A4E9C", VA = "0x26A4E9C")]
		public PathExists()
		{
		}
	}
	[Token(Token = "0x2000458")]
	internal class CheckCSharpEvent_0
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x22A7870", Offset = "0x22A7870", VA = "0x22A7870")]
		public CheckCSharpEvent_0()
		{
		}
	}
	[Token(Token = "0x2000459")]
	internal class CheckCSharpEvent_0<T>
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x6001557")]
		public CheckCSharpEvent_0()
		{
		}
	}
	[Token(Token = "0x200045A")]
	internal class CheckCSharpEventValue_0<T>
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x6001558")]
		public CheckCSharpEventValue_0()
		{
		}
	}
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "fsMigrateToAttribute", RVA = "0xE0D7D4", Offset = "0xE0D7D4")]
	internal class CheckStaticCSharpEvent
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x22B184C", Offset = "0x22B184C", VA = "0x22B184C")]
		public CheckStaticCSharpEvent()
		{
		}
	}
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "fsMigrateToAttribute", RVA = "0xE0D834", Offset = "0xE0D834")]
	internal class CheckStaticCSharpEvent<T>
	{
		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x600155A")]
		public CheckStaticCSharpEvent()
		{
		}
	}
	[Token(Token = "0x200045D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D894", Offset = "0xE0D894")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D894", Offset = "0xE0D894")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0D894", Offset = "0xE0D894")]
	public class CheckCSharpEvent : ConditionTask, IReflectedWrapper, IMigratable<CheckCSharpEvent_0>, IMigratable, IMigratable<CheckStaticCSharpEvent>
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SerializedEventInfo eventInfo;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Delegate handler;

		[Token(Token = "0x17000255")]
		private EventInfo targetEvent
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x22A725C", Offset = "0x22A725C", VA = "0x22A725C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public override Type agentType
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x22A7268", Offset = "0x22A7268", VA = "0x22A7268", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		protected override string info
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x22A73B0", Offset = "0x22A73B0", VA = "0x22A73B0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x22A7084", Offset = "0x22A7084", VA = "0x22A7084", Slot = "20")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckCSharpEvent_0>.Migrate(CheckCSharpEvent_0 model)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x22A71BC", Offset = "0x22A71BC", VA = "0x22A71BC", Slot = "21")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckStaticCSharpEvent>.Migrate(CheckStaticCSharpEvent model)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x22A74C4", Offset = "0x22A74C4", VA = "0x22A74C4", Slot = "19")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x22A74CC", Offset = "0x22A74CC", VA = "0x22A74CC", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x22A7648", Offset = "0x22A7648", VA = "0x22A7648", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x22A772C", Offset = "0x22A772C", VA = "0x22A772C", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x22A7810", Offset = "0x22A7810", VA = "0x22A7810")]
		public void Raised()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x22A7858", Offset = "0x22A7858", VA = "0x22A7858", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x22A7124", Offset = "0x22A7124", VA = "0x22A7124")]
		private void SetTargetEvent(EventInfo info)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x22A7860", Offset = "0x22A7860", VA = "0x22A7860")]
		public CheckCSharpEvent()
		{
		}
	}
	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0D970", Offset = "0xE0D970")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0D970", Offset = "0xE0D970")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0D970", Offset = "0xE0D970")]
	public class CheckCSharpEvent<T> : ConditionTask, IReflectedWrapper, IMigratable<CheckCSharpEvent_0<T>>, IMigratable, IMigratable<CheckStaticCSharpEvent<T>>
	{
		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SerializedEventInfo eventInfo;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[BlackboardOnly]
		private BBParameter<T> saveAs;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Delegate handler;

		[Token(Token = "0x17000258")]
		private EventInfo targetEvent
		{
			[Token(Token = "0x600156A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public override Type agentType
		{
			[Token(Token = "0x600156B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		protected override string info
		{
			[Token(Token = "0x600156C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001568")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckCSharpEvent_0<T>>.Migrate(CheckCSharpEvent_0<T> model)
		{
		}

		[Token(Token = "0x6001569")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckStaticCSharpEvent<T>>.Migrate(CheckStaticCSharpEvent<T> model)
		{
		}

		[Token(Token = "0x600156D")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600156F")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001570")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001571")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x6001572")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		private void SetTargetEvent(EventInfo info)
		{
		}

		[Token(Token = "0x6001574")]
		public CheckCSharpEvent()
		{
		}
	}
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DA4C", Offset = "0xE0DA4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DA4C", Offset = "0xE0DA4C")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0DA4C", Offset = "0xE0DA4C")]
	public class CheckCSharpEventValue<T> : ConditionTask, IReflectedWrapper, IMigratable<CheckCSharpEventValue_0<T>>, IMigratable
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SerializedEventInfo eventInfo;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BBParameter<T> checkValue;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Delegate handler;

		[Token(Token = "0x1700025B")]
		private EventInfo targetEvent
		{
			[Token(Token = "0x6001576")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public override Type agentType
		{
			[Token(Token = "0x6001577")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		protected override string info
		{
			[Token(Token = "0x6001578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001575")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckCSharpEventValue_0<T>>.Migrate(CheckCSharpEventValue_0<T> model)
		{
		}

		[Token(Token = "0x6001579")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600157C")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600157D")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x600157E")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600157F")]
		private void SetTargetEvent(EventInfo info)
		{
		}

		[Token(Token = "0x6001580")]
		public CheckCSharpEventValue()
		{
		}
	}
	[Token(Token = "0x2000460")]
	internal class CheckField_0
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public BBParameter checkValue;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string fieldName;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x22AC068", Offset = "0x22AC068", VA = "0x22AC068")]
		public CheckField_0()
		{
		}
	}
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0DB28", Offset = "0xE0DB28")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DB28", Offset = "0xE0DB28")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0DB28", Offset = "0xE0DB28")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DB28", Offset = "0xE0DB28")]
	public class CheckField : ConditionTask, IReflectedWrapper, IMigratable<CheckField_0>, IMigratable
	{
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected BBObjectParameter checkValue;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected CompareMethod comparison;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected SerializedFieldInfo field;

		[Token(Token = "0x1700025E")]
		private FieldInfo targetField
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x22AB790", Offset = "0x22AB790", VA = "0x22AB790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public override Type agentType
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x22AB79C", Offset = "0x22AB79C", VA = "0x22AB79C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		protected override string info
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x22AB8B8", Offset = "0x22AB8B8", VA = "0x22AB8B8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x22AB5F8", Offset = "0x22AB5F8", VA = "0x22AB5F8", Slot = "20")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckField_0>.Migrate(CheckField_0 model)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x22ABB84", Offset = "0x22ABB84", VA = "0x22ABB84", Slot = "19")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x22ABB8C", Offset = "0x22ABB8C", VA = "0x22ABB8C", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x22ABC58", Offset = "0x22ABC58", VA = "0x22ABC58", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x22ABF90", Offset = "0x22ABF90", VA = "0x22ABF90")]
		private void SetTargetField(FieldInfo newField)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x22AC058", Offset = "0x22AC058", VA = "0x22AC058")]
		public CheckField()
		{
		}
	}
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DC2C", Offset = "0xE0DC2C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0DC2C", Offset = "0xE0DC2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DC2C", Offset = "0xE0DC2C")]
	public class CheckFunction_Multiplatform : ConditionTask, IReflectedWrapper
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedMethodInfo method;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected List<BBObjectParameter> parameters;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected CompareMethod comparison;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[BlackboardOnly]
		protected BBObjectParameter checkValue;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private object[] args;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] parameterIsByRef;

		[Token(Token = "0x17000261")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x22ACBF4", Offset = "0x22ACBF4", VA = "0x22ACBF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public override Type agentType
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x22ACC00", Offset = "0x22ACC00", VA = "0x22ACC00", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		protected override string info
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x22ACD1C", Offset = "0x22ACD1C", VA = "0x22ACD1C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x22AD0F0", Offset = "0x22AD0F0", VA = "0x22AD0F0", Slot = "19")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x22AD0F8", Offset = "0x22AD0F8", VA = "0x22AD0F8", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x22AD3D4", Offset = "0x22AD3D4", VA = "0x22AD3D4", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x22AD59C", Offset = "0x22AD59C", VA = "0x22AD59C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x22AD140", Offset = "0x22AD140", VA = "0x22AD140")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x22ADA2C", Offset = "0x22ADA2C", VA = "0x22ADA2C")]
		public CheckFunction_Multiplatform()
		{
		}
	}
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DCB4", Offset = "0xE0DCB4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0DCB4", Offset = "0xE0DCB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DCB4", Offset = "0xE0DCB4")]
	public class CheckProperty_Multiplatform : ConditionTask, IReflectedWrapper
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedMethodInfo method;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected BBObjectParameter checkValue;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected CompareMethod comparison;

		[Token(Token = "0x17000264")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x22B0834", Offset = "0x22B0834", VA = "0x22B0834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public override Type agentType
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x22B0840", Offset = "0x22B0840", VA = "0x22B0840", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		protected override string info
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x22B095C", Offset = "0x22B095C", VA = "0x22B095C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x22B0B50", Offset = "0x22B0B50", VA = "0x22B0B50", Slot = "19")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x22B0B58", Offset = "0x22B0B58", VA = "0x22B0B58", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x22B0C68", Offset = "0x22B0C68", VA = "0x22B0C68", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x22B0CF4", Offset = "0x22B0CF4", VA = "0x22B0CF4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x22B0BA0", Offset = "0x22B0BA0", VA = "0x22B0BA0")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x22B1034", Offset = "0x22B1034", VA = "0x22B1034")]
		public CheckProperty_Multiplatform()
		{
		}
	}
	[Token(Token = "0x2000464")]
	internal class CheckUnityEvent_0
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x22B3678", Offset = "0x22B3678", VA = "0x22B3678")]
		public CheckUnityEvent_0()
		{
		}
	}
	[Token(Token = "0x2000465")]
	internal class CheckUnityEvent_0<T>
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x600159E")]
		public CheckUnityEvent_0()
		{
		}
	}
	[Token(Token = "0x2000466")]
	internal class CheckUnityEventValue_0<T>
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x600159F")]
		public CheckUnityEventValue_0()
		{
		}
	}
	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DD3C", Offset = "0xE0DD3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DD3C", Offset = "0xE0DD3C")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0DD3C", Offset = "0xE0DD3C")]
	public class CheckUnityEvent : ConditionTask, IReflectedWrapper, IMigratable<CheckUnityEvent_0>, IMigratable
	{
		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SerializedUnityEventInfo _eventInfo;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityEvent unityEvent;

		[Token(Token = "0x17000267")]
		private MemberInfo targetMember
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x22B301C", Offset = "0x22B301C", VA = "0x22B301C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private bool isStatic
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x22B3034", Offset = "0x22B3034", VA = "0x22B3034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000269")]
		private Type eventType
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x22B3048", Offset = "0x22B3048", VA = "0x22B3048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private FieldInfo targetEventField
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x22B305C", Offset = "0x22B305C", VA = "0x22B305C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private PropertyInfo targetEventProp
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x22B3068", Offset = "0x22B3068", VA = "0x22B3068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public override Type agentType
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x22B3074", Offset = "0x22B3074", VA = "0x22B3074", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		protected override string info
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x22B318C", Offset = "0x22B318C", VA = "0x22B318C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x22B2F44", Offset = "0x22B2F44", VA = "0x22B2F44", Slot = "20")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckUnityEvent_0>.Migrate(CheckUnityEvent_0 model)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x22B3298", Offset = "0x22B3298", VA = "0x22B3298", Slot = "19")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x22B32A0", Offset = "0x22B32A0", VA = "0x22B32A0", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x22B3480", Offset = "0x22B3480", VA = "0x22B3480", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x22B3520", Offset = "0x22B3520", VA = "0x22B3520", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x22B35C0", Offset = "0x22B35C0", VA = "0x22B35C0")]
		public void Raised()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x22B35C8", Offset = "0x22B35C8", VA = "0x22B35C8", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x22B35D0", Offset = "0x22B35D0", VA = "0x22B35D0")]
		private void SetTargetEvent(MemberInfo newMember)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x22B3668", Offset = "0x22B3668", VA = "0x22B3668")]
		public CheckUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0DE18", Offset = "0xE0DE18")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DE18", Offset = "0xE0DE18")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DE18", Offset = "0xE0DE18")]
	public class CheckUnityEvent<T> : ConditionTask, IReflectedWrapper, IMigratable<CheckUnityEvent_0<T>>, IMigratable
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SerializedUnityEventInfo _eventInfo;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[SerializeField]
		private BBParameter<T> saveAs;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityEvent<T> unityEvent;

		[Token(Token = "0x1700026E")]
		private MemberInfo targetMember
		{
			[Token(Token = "0x60015B1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private bool isStatic
		{
			[Token(Token = "0x60015B2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		private Type eventType
		{
			[Token(Token = "0x60015B3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private FieldInfo targetEventField
		{
			[Token(Token = "0x60015B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		private PropertyInfo targetEventProp
		{
			[Token(Token = "0x60015B5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public override Type agentType
		{
			[Token(Token = "0x60015B6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		protected override string info
		{
			[Token(Token = "0x60015B7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B0")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckUnityEvent_0<T>>.Migrate(CheckUnityEvent_0<T> model)
		{
		}

		[Token(Token = "0x60015B8")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60015BA")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015BB")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015BC")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x60015BD")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BE")]
		private void SetTargetEvent(MemberInfo newMember)
		{
		}

		[Token(Token = "0x60015BF")]
		public CheckUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE0DEF4", Offset = "0xE0DEF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DEF4", Offset = "0xE0DEF4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DEF4", Offset = "0xE0DEF4")]
	public class CheckUnityEventValue<T> : ConditionTask, IReflectedWrapper, IMigratable<CheckUnityEventValue_0<T>>, IMigratable
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SerializedUnityEventInfo _eventInfo;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private BBParameter<T> checkValue;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityEvent<T> unityEvent;

		[Token(Token = "0x17000275")]
		private MemberInfo targetMember
		{
			[Token(Token = "0x60015C1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		private bool isStatic
		{
			[Token(Token = "0x60015C2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		private Type eventType
		{
			[Token(Token = "0x60015C3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private FieldInfo targetEventField
		{
			[Token(Token = "0x60015C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		private PropertyInfo targetEventProp
		{
			[Token(Token = "0x60015C5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public override Type agentType
		{
			[Token(Token = "0x60015C6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		protected override string info
		{
			[Token(Token = "0x60015C7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C0")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Conditions.CheckUnityEventValue_0<T>>.Migrate(CheckUnityEventValue_0<T> model)
		{
		}

		[Token(Token = "0x60015C8")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60015C9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015CB")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015CC")]
		public void Raised(T eventValue)
		{
		}

		[Token(Token = "0x60015CD")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		private void SetTargetEvent(MemberInfo newMember)
		{
		}

		[Token(Token = "0x60015CF")]
		public CheckUnityEventValue()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0DFD0", Offset = "0xE0DFD0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0DFD0", Offset = "0xE0DFD0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0DFD0", Offset = "0xE0DFD0")]
	public class CheckFunction : ConditionTask
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedFunctionWrapper functionWrapper;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected BBParameter checkValue;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected CompareMethod comparison;

		[Token(Token = "0x1700027C")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x22AC190", Offset = "0x22AC190", VA = "0x22AC190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public override Type agentType
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x22AC1A4", Offset = "0x22AC1A4", VA = "0x22AC1A4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		protected override string info
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x22AC2D0", Offset = "0x22AC2D0", VA = "0x22AC2D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x22AC6A8", Offset = "0x22AC6A8", VA = "0x22AC6A8", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x22AC7B0", Offset = "0x22AC7B0", VA = "0x22AC7B0", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x22AC8F8", Offset = "0x22AC8F8", VA = "0x22AC8F8", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x22AC700", Offset = "0x22AC700", VA = "0x22AC700")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x22ACBE4", Offset = "0x22ACBE4", VA = "0x22ACBE4")]
		public CheckFunction()
		{
		}
	}
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E058", Offset = "0xE0E058")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E058", Offset = "0xE0E058")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E058", Offset = "0xE0E058")]
	public class CheckProperty : ConditionTask
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedFunctionWrapper functionWrapper;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected BBParameter checkValue;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected CompareMethod comparison;

		[Token(Token = "0x1700027F")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x22AFFA4", Offset = "0x22AFFA4", VA = "0x22AFFA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public override Type agentType
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x22AFFB8", Offset = "0x22AFFB8", VA = "0x22AFFB8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		protected override string info
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x22B00E4", Offset = "0x22B00E4", VA = "0x22B00E4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x22B02E8", Offset = "0x22B02E8", VA = "0x22B02E8", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x22B03F0", Offset = "0x22B03F0", VA = "0x22B03F0", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x22B0538", Offset = "0x22B0538", VA = "0x22B0538", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x22B0340", Offset = "0x22B0340", VA = "0x22B0340")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x22B0824", Offset = "0x22B0824", VA = "0x22B0824")]
		public CheckProperty()
		{
		}
	}
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E0E0", Offset = "0xE0E0E0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E0E0", Offset = "0xE0E0E0")]
	public class CheckCollision_Rigidbody : ConditionTask<Rigidbody>
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CollisionTypes checkType;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactPoint;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactNormal;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stay;

		[Token(Token = "0x17000282")]
		protected override string info
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x22A8AAC", Offset = "0x22A8AAC", VA = "0x22A8AAC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x22A8B9C", Offset = "0x22A8B9C", VA = "0x22A8B9C", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x22A8CB4", Offset = "0x22A8CB4", VA = "0x22A8CB4", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x22A8DCC", Offset = "0x22A8DCC", VA = "0x22A8DCC", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x22A8DF0", Offset = "0x22A8DF0", VA = "0x22A8DF0")]
		public void OnCollisionEnter(EventData<Collision> data)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x22A8F6C", Offset = "0x22A8F6C", VA = "0x22A8F6C")]
		public void OnCollisionExit(EventData<Collision> data)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x22A9048", Offset = "0x22A9048", VA = "0x22A9048")]
		public CheckCollision_Rigidbody()
		{
		}
	}
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E144", Offset = "0xE0E144")]
	[DoNotList]
	public class CheckCollision : ConditionTask<Collider>
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CollisionTypes checkType;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactPoint;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactNormal;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stay;

		[Token(Token = "0x17000283")]
		protected override string info
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x22A7878", Offset = "0x22A7878", VA = "0x22A7878", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x22A7968", Offset = "0x22A7968", VA = "0x22A7968", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x22A7A80", Offset = "0x22A7A80", VA = "0x22A7A80", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x22A7B98", Offset = "0x22A7B98", VA = "0x22A7B98", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x22A7BBC", Offset = "0x22A7BBC", VA = "0x22A7BBC")]
		public void OnCollisionEnter(EventData<Collision> data)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x22A7D38", Offset = "0x22A7D38", VA = "0x22A7D38")]
		public void OnCollisionExit(EventData<Collision> data)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x22A7E14", Offset = "0x22A7E14", VA = "0x22A7E14")]
		public CheckCollision()
		{
		}
	}
	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E190", Offset = "0xE0E190")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E190", Offset = "0xE0E190")]
	public class CheckCollision2D_Rigidbody : ConditionTask<Rigidbody2D>
	{
		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CollisionTypes checkType;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactPoint;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactNormal;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stay;

		[Token(Token = "0x17000284")]
		protected override string info
		{
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0x22A8498", Offset = "0x22A8498", VA = "0x22A8498", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x22A8588", Offset = "0x22A8588", VA = "0x22A8588", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x22A85AC", Offset = "0x22A85AC", VA = "0x22A85AC", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x22A86C4", Offset = "0x22A86C4", VA = "0x22A86C4", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x22A87DC", Offset = "0x22A87DC", VA = "0x22A87DC")]
		private void OnCollisionEnter2D(EventData<Collision2D> data)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x22A8960", Offset = "0x22A8960", VA = "0x22A8960")]
		private void OnCollisionExit2D(EventData<Collision2D> data)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x22A8A3C", Offset = "0x22A8A3C", VA = "0x22A8A3C")]
		public CheckCollision2D_Rigidbody()
		{
		}
	}
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E1F4", Offset = "0xE0E1F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E1F4", Offset = "0xE0E1F4")]
	[DoNotList]
	public class CheckCollision2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CollisionTypes checkType;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactPoint;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveContactNormal;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stay;

		[Token(Token = "0x17000285")]
		protected override string info
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x22A7E84", Offset = "0x22A7E84", VA = "0x22A7E84", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x22A7F74", Offset = "0x22A7F74", VA = "0x22A7F74", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x22A7F98", Offset = "0x22A7F98", VA = "0x22A7F98", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x22A80B0", Offset = "0x22A80B0", VA = "0x22A80B0", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x22A81C8", Offset = "0x22A81C8", VA = "0x22A81C8")]
		private void OnCollisionEnter2D(EventData<Collision2D> data)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x22A834C", Offset = "0x22A834C", VA = "0x22A834C")]
		private void OnCollisionExit2D(EventData<Collision2D> data)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x22A8428", Offset = "0x22A8428", VA = "0x22A8428")]
		public CheckCollision2D()
		{
		}
	}
	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E268", Offset = "0xE0E268")]
	public class CheckMouse : ConditionTask<Collider>
	{
		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MouseInteractionTypes checkType;

		[Token(Token = "0x17000286")]
		protected override string info
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x22AEA30", Offset = "0x22AEA30", VA = "0x22AEA30", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x22AEABC", Offset = "0x22AEABC", VA = "0x22AEABC", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x22AEAC4", Offset = "0x22AEAC4", VA = "0x22AEAC4", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x22AEC18", Offset = "0x22AEC18", VA = "0x22AEC18", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x22AED6C", Offset = "0x22AED6C", VA = "0x22AED6C")]
		private void OnMouseEnter(EventData msg)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x22AED80", Offset = "0x22AED80", VA = "0x22AED80")]
		private void OnMouseExit(EventData msg)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x22AED98", Offset = "0x22AED98", VA = "0x22AED98")]
		private void OnMouseOver(EventData msg)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x22AEDB0", Offset = "0x22AEDB0", VA = "0x22AEDB0")]
		public CheckMouse()
		{
		}
	}
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E2A0", Offset = "0xE0E2A0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E2A0", Offset = "0xE0E2A0")]
	public class CheckMouse2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MouseInteractionTypes checkType;

		[Token(Token = "0x17000287")]
		protected override string info
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x22AEDFC", Offset = "0x22AEDFC", VA = "0x22AEDFC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x22AEE88", Offset = "0x22AEE88", VA = "0x22AEE88", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x22AEFDC", Offset = "0x22AEFDC", VA = "0x22AEFDC", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x22AF130", Offset = "0x22AF130", VA = "0x22AF130", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x22AF138", Offset = "0x22AF138", VA = "0x22AF138")]
		private void OnMouseEnter(EventData msg)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x22AF14C", Offset = "0x22AF14C", VA = "0x22AF14C")]
		private void OnMouseExit(EventData msg)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x22AF164", Offset = "0x22AF164", VA = "0x22AF164")]
		private void OnMouseOver(EventData msg)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x22AF17C", Offset = "0x22AF17C", VA = "0x22AF17C")]
		public CheckMouse2D()
		{
		}
	}
	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E304", Offset = "0xE0E304")]
	public class CheckMouseClick : ConditionTask<Collider>
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MouseClickEvent checkType;

		[Token(Token = "0x17000288")]
		protected override string info
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x22AF1C8", Offset = "0x22AF1C8", VA = "0x22AF1C8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x22AF254", Offset = "0x22AF254", VA = "0x22AF254", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x22AF25C", Offset = "0x22AF25C", VA = "0x22AF25C", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x22AF358", Offset = "0x22AF358", VA = "0x22AF358", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x22AF454", Offset = "0x22AF454", VA = "0x22AF454")]
		private void OnMouseDown(EventData msg)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x22AF468", Offset = "0x22AF468", VA = "0x22AF468")]
		private void OnMouseUp(EventData msg)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x22AF480", Offset = "0x22AF480", VA = "0x22AF480")]
		public CheckMouseClick()
		{
		}
	}
	[Token(Token = "0x2000473")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E33C", Offset = "0xE0E33C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E33C", Offset = "0xE0E33C")]
	public class CheckMouseClick2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MouseClickEvent checkType;

		[Token(Token = "0x17000289")]
		protected override string info
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x22AF4CC", Offset = "0x22AF4CC", VA = "0x22AF4CC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x22AF558", Offset = "0x22AF558", VA = "0x22AF558", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x22AF560", Offset = "0x22AF560", VA = "0x22AF560", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x22AF65C", Offset = "0x22AF65C", VA = "0x22AF65C", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x22AF758", Offset = "0x22AF758", VA = "0x22AF758")]
		private void OnMouseDown(EventData msg)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x22AF76C", Offset = "0x22AF76C", VA = "0x22AF76C")]
		private void OnMouseUp(EventData msg)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x22AF784", Offset = "0x22AF784", VA = "0x22AF784")]
		public CheckMouseClick2D()
		{
		}
	}
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E3A0", Offset = "0xE0E3A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E3A0", Offset = "0xE0E3A0")]
	public class CheckTrigger_Transform : ConditionTask<Transform>
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggerTypes checkType;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE20268", Offset = "0xE20268")]
		public string objectTag;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool stay;

		[Token(Token = "0x1700028A")]
		protected override string info
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0x22B29D0", Offset = "0x22B29D0", VA = "0x22B29D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x22B2AC0", Offset = "0x22B2AC0", VA = "0x22B2AC0", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x22B2AE4", Offset = "0x22B2AE4", VA = "0x22B2AE4", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x22B2BFC", Offset = "0x22B2BFC", VA = "0x22B2BFC", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x22B2D14", Offset = "0x22B2D14", VA = "0x22B2D14")]
		public void OnTriggerEnter(EventData<Collider> data)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x22B2DF8", Offset = "0x22B2DF8", VA = "0x22B2DF8")]
		public void OnTriggerExit(EventData<Collider> data)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x22B2ED4", Offset = "0x22B2ED4", VA = "0x22B2ED4")]
		public CheckTrigger_Transform()
		{
		}
	}
	[Token(Token = "0x2000475")]
	[DoNotList]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E400", Offset = "0xE0E400")]
	public class CheckTrigger : ConditionTask<Collider>
	{
		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggerTypes checkType;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE202C8", Offset = "0xE202C8")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool stay;

		[Token(Token = "0x1700028B")]
		protected override string info
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x22B1974", Offset = "0x22B1974", VA = "0x22B1974", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x22B1A64", Offset = "0x22B1A64", VA = "0x22B1A64", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x22B1A88", Offset = "0x22B1A88", VA = "0x22B1A88", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x22B1BA0", Offset = "0x22B1BA0", VA = "0x22B1BA0", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x22B1CB8", Offset = "0x22B1CB8", VA = "0x22B1CB8")]
		public void OnTriggerEnter(EventData<Collider> data)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x22B1D9C", Offset = "0x22B1D9C", VA = "0x22B1D9C")]
		public void OnTriggerExit(EventData<Collider> data)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x22B1E78", Offset = "0x22B1E78", VA = "0x22B1E78")]
		public CheckTrigger()
		{
		}
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E44C", Offset = "0xE0E44C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E44C", Offset = "0xE0E44C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E44C", Offset = "0xE0E44C")]
	public class CheckTrigger2D_Transform : ConditionTask<Transform>
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggerTypes CheckType;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool stay;

		[Token(Token = "0x1700028C")]
		protected override string info
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x22B245C", Offset = "0x22B245C", VA = "0x22B245C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x22B254C", Offset = "0x22B254C", VA = "0x22B254C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x22B2570", Offset = "0x22B2570", VA = "0x22B2570", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x22B2688", Offset = "0x22B2688", VA = "0x22B2688", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x22B27A0", Offset = "0x22B27A0", VA = "0x22B27A0")]
		public void OnTriggerEnter2D(EventData<Collider2D> data)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x22B2884", Offset = "0x22B2884", VA = "0x22B2884")]
		public void OnTriggerExit2D(EventData<Collider2D> data)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x22B2960", Offset = "0x22B2960", VA = "0x22B2960")]
		public CheckTrigger2D_Transform()
		{
		}
	}
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E4D4", Offset = "0xE0E4D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E4D4", Offset = "0xE0E4D4")]
	[DoNotList]
	public class CheckTrigger2D : ConditionTask<Collider2D>
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggerTypes CheckType;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool specifiedTagOnly;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[TagField]
		public string objectTag;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool stay;

		[Token(Token = "0x1700028D")]
		protected override string info
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0x22B1EE8", Offset = "0x22B1EE8", VA = "0x22B1EE8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x22B1FD8", Offset = "0x22B1FD8", VA = "0x22B1FD8", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x22B1FFC", Offset = "0x22B1FFC", VA = "0x22B1FFC", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x22B2114", Offset = "0x22B2114", VA = "0x22B2114", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x22B222C", Offset = "0x22B222C", VA = "0x22B222C")]
		public void OnTriggerEnter2D(EventData<Collider2D> data)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x22B2310", Offset = "0x22B2310", VA = "0x22B2310")]
		public void OnTriggerExit2D(EventData<Collider2D> data)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x22B23EC", Offset = "0x22B23EC", VA = "0x22B23EC")]
		public CheckTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E548", Offset = "0xE0E548")]
	public class ButtonClicked : ConditionTask
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20368", Offset = "0xE20368")]
		public BBParameter<Button> button;

		[Token(Token = "0x1700028E")]
		protected override string info
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x2DF62A4", Offset = "0x2DF62A4", VA = "0x2DF62A4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x2DF6310", Offset = "0x2DF6310", VA = "0x2DF6310", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x2DF63D4", Offset = "0x2DF63D4", VA = "0x2DF63D4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x2DF63DC", Offset = "0x2DF63DC", VA = "0x2DF63DC")]
		private void OnClick()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x2DF63E8", Offset = "0x2DF63E8", VA = "0x2DF63E8")]
		public ButtonClicked()
		{
		}
	}
	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E580", Offset = "0xE0E580")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E580", Offset = "0xE0E580")]
	public class InterceptEvent : ConditionTask<Transform>
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public EventTriggerType eventType;

		[Token(Token = "0x1700028F")]
		protected override string info
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x2E319D0", Offset = "0x2E319D0", VA = "0x2E319D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x2E31A88", Offset = "0x2E31A88", VA = "0x2E31A88", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x2E32110", Offset = "0x2E32110", VA = "0x2E32110", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x2E32798", Offset = "0x2E32798", VA = "0x2E32798", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x2E327A0", Offset = "0x2E327A0", VA = "0x2E327A0")]
		private void OnPointerEnter(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x2E327AC", Offset = "0x2E327AC", VA = "0x2E327AC")]
		private void OnPointerExit(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x2E327B8", Offset = "0x2E327B8", VA = "0x2E327B8")]
		private void OnPointerDown(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x2E327C4", Offset = "0x2E327C4", VA = "0x2E327C4")]
		private void OnPointerUp(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x2E327D0", Offset = "0x2E327D0", VA = "0x2E327D0")]
		private void OnPointerClick(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x2E327DC", Offset = "0x2E327DC", VA = "0x2E327DC")]
		private void OnDrag(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x2E327E8", Offset = "0x2E327E8", VA = "0x2E327E8")]
		private void OnDrop(EventData<PointerEventData> eventData)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x2E327F4", Offset = "0x2E327F4", VA = "0x2E327F4")]
		private void OnScroll(EventData<PointerEventData> data)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x2E32800", Offset = "0x2E32800", VA = "0x2E32800")]
		private void OnUpdateSelected(EventData<BaseEventData> eventData)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x2E3280C", Offset = "0x2E3280C", VA = "0x2E3280C")]
		private void OnSelect(EventData<BaseEventData> eventData)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x2E32818", Offset = "0x2E32818", VA = "0x2E32818")]
		private void OnDeselect(EventData<BaseEventData> eventData)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x2E32824", Offset = "0x2E32824", VA = "0x2E32824")]
		private void OnMove(EventData<AxisEventData> eventData)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x2E32830", Offset = "0x2E32830", VA = "0x2E32830")]
		private void OnSubmit(EventData<BaseEventData> eventData)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x2E3283C", Offset = "0x2E3283C", VA = "0x2E3283C")]
		public InterceptEvent()
		{
		}
	}
	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E5E0", Offset = "0xE0E5E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E5E0", Offset = "0xE0E5E0")]
	public class CheckEvent : ConditionTask<GraphOwner>
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20378", Offset = "0xE20378")]
		public BBParameter<string> eventName;

		[Token(Token = "0x17000290")]
		protected override string info
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x22AB340", Offset = "0x22AB340", VA = "0x22AB340", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x22AB3C4", Offset = "0x22AB3C4", VA = "0x22AB3C4", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x22AB468", Offset = "0x22AB468", VA = "0x22AB468", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x22AB50C", Offset = "0x22AB50C", VA = "0x22AB50C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x22AB514", Offset = "0x22AB514", VA = "0x22AB514")]
		private void OnCustomEvent(string eventName, IEventData data)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x22AB5AC", Offset = "0x22AB5AC", VA = "0x22AB5AC")]
		public CheckEvent()
		{
		}
	}
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E640", Offset = "0xE0E640")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E640", Offset = "0xE0E640")]
	public class CheckEvent<T> : ConditionTask<GraphOwner>
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20388", Offset = "0xE20388")]
		public BBParameter<string> eventName;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveEventValue;

		[Token(Token = "0x17000291")]
		protected override string info
		{
			[Token(Token = "0x6001653")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001654")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001655")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001656")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		private void OnCustomEvent(string eventName, IEventData data)
		{
		}

		[Token(Token = "0x6001658")]
		public CheckEvent()
		{
		}
	}
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E6A0", Offset = "0xE0E6A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E6A0", Offset = "0xE0E6A0")]
	public class CheckEventValue<T> : ConditionTask<GraphOwner>
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE203A8", Offset = "0xE203A8")]
		public BBParameter<string> eventName;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE203B8", Offset = "0xE203B8")]
		public BBParameter<T> value;

		[Token(Token = "0x17000292")]
		protected override string info
		{
			[Token(Token = "0x6001659")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165A")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600165B")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600165C")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600165D")]
		private void OnCustomEvent(string eventName, IEventData msg)
		{
		}

		[Token(Token = "0x600165E")]
		public CheckEventValue()
		{
		}
	}
	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E700", Offset = "0xE0E700")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E700", Offset = "0xE0E700")]
	public class CheckSignal : ConditionTask<Transform>
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<SignalDefinition> signalDefinition;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Dictionary<string, BBObjectParameter> argumentsMap;

		[Token(Token = "0x17000293")]
		protected override string info
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x22B1044", Offset = "0x22B1044", VA = "0x22B1044", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x22B1064", Offset = "0x22B1064", VA = "0x22B1064", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x22B10C8", Offset = "0x22B10C8", VA = "0x22B10C8", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x22B11D4", Offset = "0x22B11D4", VA = "0x22B11D4", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x22B1290", Offset = "0x22B1290", VA = "0x22B1290")]
		private void OnSignalInvoke(Transform sender, Transform receiver, bool isGlobal, params object[] args)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x22B1474", Offset = "0x22B1474", VA = "0x22B1474", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x22B147C", Offset = "0x22B147C", VA = "0x22B147C")]
		public CheckSignal()
		{
		}
	}
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E760", Offset = "0xE0E760")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E760", Offset = "0xE0E760")]
	public class CheckStateStatus : ConditionTask
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CompactStatus status;

		[Token(Token = "0x17000294")]
		protected override string info
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x22B16C4", Offset = "0x22B16C4", VA = "0x22B16C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x22B174C", Offset = "0x22B174C", VA = "0x22B174C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x22B1834", Offset = "0x22B1834", VA = "0x22B1834")]
		public CheckStateStatus()
		{
		}
	}
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E7C0", Offset = "0xE0E7C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E7C0", Offset = "0xE0E7C0")]
	public class DebugCondition : ConditionTask
	{
		[Token(Token = "0x6001669")]
		[Address(RVA = "0x2839554", Offset = "0x2839554", VA = "0x2839554", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x283955C", Offset = "0x283955C", VA = "0x283955C")]
		public DebugCondition()
		{
		}
	}
	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E820", Offset = "0xE0E820")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E820", Offset = "0xE0E820")]
	public class Probability : ConditionTask
	{
		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> probability;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> maxValue;

		[Token(Token = "0x17000295")]
		protected override string info
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x267ED4C", Offset = "0x267ED4C", VA = "0x267ED4C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x267EE04", Offset = "0x267EE04", VA = "0x267EE04", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x267EE90", Offset = "0x267EE90", VA = "0x267EE90")]
		public Probability()
		{
		}
	}
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E880", Offset = "0xE0E880")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E880", Offset = "0xE0E880")]
	public class Timeout : ConditionTask
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> timeout;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float currentTime;

		[Token(Token = "0x17000296")]
		protected override string info
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x259715C", Offset = "0x259715C", VA = "0x259715C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x25971F8", Offset = "0x25971F8", VA = "0x25971F8", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x259729C", Offset = "0x259729C", VA = "0x259729C", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x259733C", Offset = "0x259733C", VA = "0x259733C")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x25973C4", Offset = "0x25973C4", VA = "0x25973C4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x2597430", Offset = "0x2597430", VA = "0x2597430")]
		public Timeout()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E8E0", Offset = "0xE0E8E0")]
	public class PlayAnimationAdvanced : ActionTask<Animation>
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20404", Offset = "0xE20404")]
		public BBParameter<AnimationClip> animationClip;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WrapMode animationWrap;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public AnimationBlendMode blendMode;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE20414", Offset = "0xE20414")]
		public float playbackSpeed;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE2042C", Offset = "0xE2042C")]
		public float crossFadeTime;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PlayDirections playDirection;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<string> mixTransformName;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<int> animationLayer;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool queueAnimation;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool waitActionFinish;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string animationToPlay;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int dir;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform mixTransform;

		[Token(Token = "0x17000297")]
		protected override string info
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x26A91C4", Offset = "0x26A91C4", VA = "0x26A91C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x26A9230", Offset = "0x26A9230", VA = "0x26A9230", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x26A9318", Offset = "0x26A9318", VA = "0x26A9318", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x26A981C", Offset = "0x26A981C", VA = "0x26A981C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x26A9730", Offset = "0x26A9730", VA = "0x26A9730")]
		private Transform FindTransform(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x26A98D4", Offset = "0x26A98D4", VA = "0x26A98D4")]
		public PlayAnimationAdvanced()
		{
		}
	}
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E918", Offset = "0xE0E918")]
	public class PlayAnimationSimple : ActionTask<Animation>
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20444", Offset = "0xE20444")]
		public BBParameter<AnimationClip> animationClip;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE20454", Offset = "0xE20454")]
		public float crossFadeTime;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public WrapMode animationWrap;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool waitActionFinish;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Animation, AnimationClip> lastPlayedClips;

		[Token(Token = "0x17000298")]
		protected override string info
		{
			[Token(Token = "0x600167A")]
			[Address(RVA = "0x26A9968", Offset = "0x26A9968", VA = "0x26A9968", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x26A99D4", Offset = "0x26A99D4", VA = "0x26A99D4", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x26A9ABC", Offset = "0x26A9ABC", VA = "0x26A9ABC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x26A9D2C", Offset = "0x26A9D2C", VA = "0x26A9D2C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x26A9DD4", Offset = "0x26A9DD4", VA = "0x26A9DD4")]
		public PlayAnimationSimple()
		{
		}
	}
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E950", Offset = "0xE0E950")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E950", Offset = "0xE0E950")]
	public class MecanimPlayAnimation : ActionTask<Animator>
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<int> layerIndex;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2046C", Offset = "0xE2046C")]
		public BBParameter<string> stateName;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE2047C", Offset = "0xE2047C")]
		public float transitTime;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool waitUntilFinish;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AnimatorStateInfo stateInfo;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool played;

		[Token(Token = "0x17000299")]
		protected override string info
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x2CFD778", Offset = "0x2CFD778", VA = "0x2CFD778", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x2CFD7FC", Offset = "0x2CFD7FC", VA = "0x2CFD7FC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x2CFD980", Offset = "0x2CFD980", VA = "0x2CFD980", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x2CFDB18", Offset = "0x2CFDB18", VA = "0x2CFDB18")]
		public MecanimPlayAnimation()
		{
		}
	}
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0E9B4", Offset = "0xE0E9B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0E9B4", Offset = "0xE0E9B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0E9B4", Offset = "0xE0E9B4")]
	public class MecanimSetBool : ActionTask<Animator>
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> parameter;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<bool> setTo;

		[Token(Token = "0x1700029A")]
		protected override string info
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x2CFDB6C", Offset = "0x2CFDB6C", VA = "0x2CFDB6C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x2CFDC28", Offset = "0x2CFDC28", VA = "0x2CFDC28", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x2CFDD7C", Offset = "0x2CFDD7C", VA = "0x2CFDD7C")]
		public MecanimSetBool()
		{
		}
	}
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EA3C", Offset = "0xE0EA3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EA3C", Offset = "0xE0EA3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0EA3C", Offset = "0xE0EA3C")]
	public class MecanimSetFloat : ActionTask<Animator>
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> parameter;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> setTo;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE20494", Offset = "0xE20494")]
		public float transitTime;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentValue;

		[Token(Token = "0x1700029B")]
		protected override string info
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x2CFDDC8", Offset = "0x2CFDDC8", VA = "0x2CFDDC8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x2CFDE84", Offset = "0x2CFDE84", VA = "0x2CFDE84", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x2CFE118", Offset = "0x2CFE118", VA = "0x2CFE118", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x2CFE020", Offset = "0x2CFE020", VA = "0x2CFE020")]
		private float Get()
		{
			return default(float);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x2CFDF10", Offset = "0x2CFDF10", VA = "0x2CFDF10")]
		private void Set(float newValue)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x2CFE1E0", Offset = "0x2CFE1E0", VA = "0x2CFE1E0")]
		public MecanimSetFloat()
		{
		}
	}
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EAC4", Offset = "0xE0EAC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EAC4", Offset = "0xE0EAC4")]
	public class MecanimSetIK : ActionTask<Animator>
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AvatarIKGoal IKGoal;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE204AC", Offset = "0xE204AC")]
		public BBParameter<GameObject> goal;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> weight;

		[Token(Token = "0x1700029C")]
		protected override string info
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x2CFE234", Offset = "0x2CFE234", VA = "0x2CFE234", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x2CFE318", Offset = "0x2CFE318", VA = "0x2CFE318", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x2CFE3D0", Offset = "0x2CFE3D0", VA = "0x2CFE3D0", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x2CFE488", Offset = "0x2CFE488", VA = "0x2CFE488")]
		private void OnAnimatorIK(EventData<int> msg)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x2CFE598", Offset = "0x2CFE598", VA = "0x2CFE598")]
		public MecanimSetIK()
		{
		}
	}
	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0EB28", Offset = "0xE0EB28")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EB28", Offset = "0xE0EB28")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EB28", Offset = "0xE0EB28")]
	public class MecanimSetInt : ActionTask<Animator>
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> parameter;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> setTo;

		[Token(Token = "0x1700029D")]
		protected override string info
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x2CFE5E4", Offset = "0x2CFE5E4", VA = "0x2CFE5E4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x2CFE6A0", Offset = "0x2CFE6A0", VA = "0x2CFE6A0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x2CFE7DC", Offset = "0x2CFE7DC", VA = "0x2CFE7DC")]
		public MecanimSetInt()
		{
		}
	}
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EBB0", Offset = "0xE0EBB0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EBB0", Offset = "0xE0EBB0")]
	public class MecanimSetLayerWeight : ActionTask<Animator>
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<int> layerIndex;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE204BC", Offset = "0xE204BC")]
		public BBParameter<float> layerWeight;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE204D4", Offset = "0xE204D4")]
		public float transitTime;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float currentValue;

		[Token(Token = "0x1700029E")]
		protected override string info
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0x2CFE828", Offset = "0x2CFE828", VA = "0x2CFE828", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x2CFE8E0", Offset = "0x2CFE8E0", VA = "0x2CFE8E0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x2CFE978", Offset = "0x2CFE978", VA = "0x2CFE978", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x2CFEAC4", Offset = "0x2CFEAC4", VA = "0x2CFEAC4")]
		public MecanimSetLayerWeight()
		{
		}
	}
	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EC14", Offset = "0xE0EC14")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EC14", Offset = "0xE0EC14")]
	public class MecanimSetLookAt : ActionTask<Animator>
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<GameObject> targetPosition;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> targetWeight;

		[Token(Token = "0x1700029F")]
		protected override string info
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x2CFEB10", Offset = "0x2CFEB10", VA = "0x2CFEB10", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x2CFEB80", Offset = "0x2CFEB80", VA = "0x2CFEB80", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x2CFEC38", Offset = "0x2CFEC38", VA = "0x2CFEC38", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x2CFECF0", Offset = "0x2CFECF0", VA = "0x2CFECF0")]
		private void OnAnimatorIK(EventData<int> msg)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x2CFEDF0", Offset = "0x2CFEDF0", VA = "0x2CFEDF0")]
		public MecanimSetLookAt()
		{
		}
	}
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0EC78", Offset = "0xE0EC78")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EC78", Offset = "0xE0EC78")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EC78", Offset = "0xE0EC78")]
	public class MecanimSetTrigger : ActionTask<Animator>
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> parameter;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<int> parameterHashID;

		[Token(Token = "0x170002A0")]
		protected override string info
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x2CFEE3C", Offset = "0x2CFEE3C", VA = "0x2CFEE3C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x2CFEEF4", Offset = "0x2CFEEF4", VA = "0x2CFEEF4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x2CFEFF0", Offset = "0x2CFEFF0", VA = "0x2CFEFF0")]
		public MecanimSetTrigger()
		{
		}
	}
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0ED00", Offset = "0xE0ED00")]
	public class LoadScene : ActionTask
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE204EC", Offset = "0xE204EC")]
		public BBParameter<string> sceneName;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<LoadSceneMode> mode;

		[Token(Token = "0x170002A1")]
		protected override string info
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x2CF8C58", Offset = "0x2CF8C58", VA = "0x2CF8C58", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x2CF8CA8", Offset = "0x2CF8CA8", VA = "0x2CF8CA8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x2CF8D80", Offset = "0x2CF8D80", VA = "0x2CF8D80")]
		public LoadScene()
		{
		}
	}
	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0ED38", Offset = "0xE0ED38")]
	public class PlayAudioAtPosition : ActionTask<Transform>
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE204FC", Offset = "0xE204FC")]
		public BBParameter<AudioClip> audioClip;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE2050C", Offset = "0xE2050C")]
		public float volume;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool waitActionFinish;

		[Token(Token = "0x170002A2")]
		protected override string info
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x26A9EC0", Offset = "0x26A9EC0", VA = "0x26A9EC0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x26A9F2C", Offset = "0x26A9F2C", VA = "0x26A9F2C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x26A9FE0", Offset = "0x26A9FE0", VA = "0x26A9FE0", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x26AA07C", Offset = "0x26AA07C", VA = "0x26AA07C")]
		public PlayAudioAtPosition()
		{
		}
	}
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0ED70", Offset = "0xE0ED70")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0ED70", Offset = "0xE0ED70")]
	public class ComposeVector : ActionTask
	{
		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> x;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> y;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> z;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x170002A3")]
		protected override string info
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x22B7E10", Offset = "0x22B7E10", VA = "0x22B7E10", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x22B7E80", Offset = "0x22B7E80", VA = "0x22B7E80", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x22B7F4C", Offset = "0x22B7F4C", VA = "0x22B7F4C")]
		public ComposeVector()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EDD0", Offset = "0xE0EDD0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0EDD0", Offset = "0xE0EDD0")]
	public class DecomposeVector : ActionTask
	{
		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> targetVector;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<float> x;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> y;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> z;

		[Token(Token = "0x170002A4")]
		protected override string info
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x2839F70", Offset = "0x2839F70", VA = "0x2839F70", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x2839FE0", Offset = "0x2839FE0", VA = "0x2839FE0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x283A0C0", Offset = "0x283A0C0", VA = "0x283A0C0")]
		public DecomposeVector()
		{
		}
	}
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EE30", Offset = "0xE0EE30")]
	public class AddElementToDictionary<T> : ActionTask
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20564", Offset = "0xE20564")]
		public BBParameter<Dictionary<string, T>> dictionary;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<string> key;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> value;

		[Token(Token = "0x170002A5")]
		protected override string info
		{
			[Token(Token = "0x60016AE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AF")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016B0")]
		public AddElementToDictionary()
		{
		}
	}
	[Token(Token = "0x2000491")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EE68", Offset = "0xE0EE68")]
	public class GetDictionaryElement<T> : ActionTask
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2059C", Offset = "0xE2059C")]
		[BlackboardOnly]
		public BBParameter<Dictionary<string, T>> dictionary;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<string> key;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x170002A6")]
		protected override string info
		{
			[Token(Token = "0x60016B1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B2")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016B3")]
		public GetDictionaryElement()
		{
		}
	}
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EEA0", Offset = "0xE0EEA0")]
	public class EvaluateCurve : ActionTask
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE205E4", Offset = "0xE205E4")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> from;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> to;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> time;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x28BFC50", Offset = "0x28BFC50", VA = "0x28BFC50", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x28BFDB8", Offset = "0x28BFDB8", VA = "0x28BFDB8")]
		public EvaluateCurve()
		{
		}
	}
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EED8", Offset = "0xE0EED8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0EED8", Offset = "0xE0EED8")]
	public class GetSelf : ActionTask
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x29BCA28", Offset = "0x29BCA28", VA = "0x29BCA28", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x29BCAAC", Offset = "0x29BCAAC", VA = "0x29BCAAC")]
		public GetSelf()
		{
		}
	}
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0EF38", Offset = "0xE0EF38")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EF38", Offset = "0xE0EF38")]
	public class GetOtherBlackboardVariable : ActionTask<Blackboard>
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20614", Offset = "0xE20614")]
		public BBParameter<string> targetVariableName;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBObjectParameter saveAs;

		[Token(Token = "0x170002A7")]
		protected override string info
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x29BB8DC", Offset = "0x29BB8DC", VA = "0x29BB8DC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x29BB92C", Offset = "0x29BB92C", VA = "0x29BB92C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x29BBA14", Offset = "0x29BBA14", VA = "0x29BBA14")]
		public GetOtherBlackboardVariable()
		{
		}
	}
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EF98", Offset = "0xE0EF98")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0EF98", Offset = "0xE0EF98")]
	public class GetToString : ActionTask
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<object> variable;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<string> toString;

		[Token(Token = "0x170002A8")]
		protected override string info
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x29BCF8C", Offset = "0x29BCF8C", VA = "0x29BCF8C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x29BCFDC", Offset = "0x29BCFDC", VA = "0x29BCFDC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x29BD0AC", Offset = "0x29BD0AC", VA = "0x29BD0AC")]
		public GetToString()
		{
		}
	}
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0EFFC", Offset = "0xE0EFFC")]
	public class AddElementToList<T> : ActionTask
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20654", Offset = "0xE20654")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x170002A9")]
		protected override string info
		{
			[Token(Token = "0x60016BE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BF")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016C0")]
		public AddElementToList()
		{
		}
	}
	[Token(Token = "0x2000497")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F034", Offset = "0xE0F034")]
	public class ClearList : ActionTask
	{
		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2068C", Offset = "0xE2068C")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x170002AA")]
		protected override string info
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x22B3D9C", Offset = "0x22B3D9C", VA = "0x22B3D9C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x22B3DEC", Offset = "0x22B3DEC", VA = "0x22B3DEC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x22B3ED0", Offset = "0x22B3ED0", VA = "0x22B3ED0")]
		public ClearList()
		{
		}
	}
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F06C", Offset = "0xE0F06C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F06C", Offset = "0xE0F06C")]
	public class GetCloserGameObjectInList : ActionTask<Transform>
	{
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE206C4", Offset = "0xE206C4")]
		public BBParameter<List<GameObject>> list;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x170002AB")]
		protected override string info
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x29370A0", Offset = "0x29370A0", VA = "0x29370A0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x2937158", Offset = "0x2937158", VA = "0x2937158", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x29373D0", Offset = "0x29373D0", VA = "0x29373D0")]
		public GetCloserGameObjectInList()
		{
		}
	}
	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F0CC", Offset = "0xE0F0CC")]
	public class GetIndexOfElement<T> : ActionTask
	{
		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE206E4", Offset = "0xE206E4")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<int> saveIndexAs;

		[Token(Token = "0x60016C7")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016C8")]
		public GetIndexOfElement()
		{
		}
	}
	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F104", Offset = "0xE0F104")]
	public class GetListCount : ActionTask
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2072C", Offset = "0xE2072C")]
		public BBParameter<IList> targetList;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<int> saveAs;

		[Token(Token = "0x170002AC")]
		protected override string info
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x293930C", Offset = "0x293930C", VA = "0x293930C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x293935C", Offset = "0x293935C", VA = "0x293935C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x2939474", Offset = "0x2939474", VA = "0x2939474")]
		public GetListCount()
		{
		}
	}
	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F13C", Offset = "0xE0F13C")]
	public class InsertElementToList<T> : ActionTask
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20774", Offset = "0xE20774")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> targetIndex;

		[Token(Token = "0x170002AD")]
		protected override string info
		{
			[Token(Token = "0x60016CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CD")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016CE")]
		public InsertElementToList()
		{
		}
	}
	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F174", Offset = "0xE0F174")]
	public class PickListElement<T> : ActionTask
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE207AC", Offset = "0xE207AC")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> index;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x170002AE")]
		protected override string info
		{
			[Token(Token = "0x60016CF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D0")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016D1")]
		public PickListElement()
		{
		}
	}
	[Token(Token = "0x200049D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F1AC", Offset = "0xE0F1AC")]
	public class PickListElementLoop<T> : ActionTask
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE207F4", Offset = "0xE207F4")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> index;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x170002AF")]
		protected override string info
		{
			[Token(Token = "0x60016D2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D3")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016D4")]
		public PickListElementLoop()
		{
		}
	}
	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F1E4", Offset = "0xE0F1E4")]
	public class PickRandomListElement<T> : ActionTask
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2083C", Offset = "0xE2083C")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> saveAs;

		[Token(Token = "0x170002B0")]
		protected override string info
		{
			[Token(Token = "0x60016D5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D6")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016D7")]
		public PickRandomListElement()
		{
		}
	}
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F21C", Offset = "0xE0F21C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F21C", Offset = "0xE0F21C")]
	public class RemoveElementFromList<T> : ActionTask
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2084C", Offset = "0xE2084C")]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> targetElement;

		[Token(Token = "0x170002B1")]
		protected override string info
		{
			[Token(Token = "0x60016D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D9")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016DA")]
		public RemoveElementFromList()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F27C", Offset = "0xE0F27C")]
	public class SetListElement<T> : ActionTask
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20884", Offset = "0xE20884")]
		[BlackboardOnly]
		public BBParameter<List<T>> targetList;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<int> index;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> newValue;

		[Token(Token = "0x60016DB")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016DC")]
		public SetListElement()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F2B4", Offset = "0xE0F2B4")]
	public class ShuffleList : ActionTask
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE208BC", Offset = "0xE208BC")]
		[BlackboardOnly]
		public BBParameter<IList> targetList;

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x2581FAC", Offset = "0x2581FAC", VA = "0x2581FAC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x25822BC", Offset = "0x25822BC", VA = "0x25822BC")]
		public ShuffleList()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F2EC", Offset = "0xE0F2EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F2EC", Offset = "0xE0F2EC")]
	public class SortGameObjectListByDistance : ActionTask<Transform>
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE208F4", Offset = "0xE208F4")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> targetList;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool reverse;

		[Token(Token = "0x170002B2")]
		protected override string info
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x258754C", Offset = "0x258754C", VA = "0x258754C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x2587604", Offset = "0x2587604", VA = "0x2587604", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x2587778", Offset = "0x2587778", VA = "0x2587778")]
		public SortGameObjectListByDistance()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x25877C4", Offset = "0x25877C4", VA = "0x25877C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29284", Offset = "0xE29284")]
		private float <OnExecute>b__5_0(GameObject go)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F34C", Offset = "0xE0F34C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F34C", Offset = "0xE0F34C")]
	public class LoadBlackboard : ActionTask<Blackboard>
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2093C", Offset = "0xE2093C")]
		public BBParameter<string> saveKey;

		[Token(Token = "0x170002B3")]
		protected override string info
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x2CF8B00", Offset = "0x2CF8B00", VA = "0x2CF8B00", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x2CF8B6C", Offset = "0x2CF8B6C", VA = "0x2CF8B6C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x2CF8C0C", Offset = "0x2CF8C0C", VA = "0x2CF8C0C")]
		public LoadBlackboard()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F3AC", Offset = "0xE0F3AC")]
	public class NormalizeVector : ActionTask
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> targetVector;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> multiply;

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x26A04C8", Offset = "0x26A04C8", VA = "0x26A04C8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x26A05C8", Offset = "0x26A05C8", VA = "0x26A05C8")]
		public NormalizeVector()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F3E4", Offset = "0xE0F3E4")]
	public class SampleCurve : ActionTask
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2094C", Offset = "0xE2094C")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE2095C", Offset = "0xE2095C")]
		public BBParameter<float> sampleAt;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x2B46704", Offset = "0x2B46704", VA = "0x2B46704", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x2B467D0", Offset = "0x2B467D0", VA = "0x2B467D0")]
		public SampleCurve()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F41C", Offset = "0xE0F41C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F41C", Offset = "0xE0F41C")]
	public class SaveBlackboard : ActionTask<Blackboard>
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20984", Offset = "0xE20984")]
		public BBParameter<string> saveKey;

		[Token(Token = "0x170002B4")]
		protected override string info
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x2B467D8", Offset = "0x2B467D8", VA = "0x2B467D8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x2B46844", Offset = "0x2B46844", VA = "0x2B46844", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x2B468E0", Offset = "0x2B468E0", VA = "0x2B468E0")]
		public SaveBlackboard()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F47C", Offset = "0xE0F47C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F47C", Offset = "0xE0F47C")]
	public class SetBoolean : ActionTask
	{
		[Token(Token = "0x20004A8")]
		public enum BoolSetModes
		{
			[Token(Token = "0x40011FA")]
			False,
			[Token(Token = "0x40011FB")]
			True,
			[Token(Token = "0x40011FC")]
			Toggle
		}

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20994", Offset = "0xE20994")]
		public BBParameter<bool> boolVariable;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolSetModes setTo;

		[Token(Token = "0x170002B5")]
		protected override string info
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x2B4AE0C", Offset = "0x2B4AE0C", VA = "0x2B4AE0C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x2B4AF24", Offset = "0x2B4AF24", VA = "0x2B4AF24", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x2B4AFD8", Offset = "0x2B4AFD8", VA = "0x2B4AFD8")]
		public SetBoolean()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F4DC", Offset = "0xE0F4DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F4DC", Offset = "0xE0F4DC")]
	public class SetBooleanRandom : ActionTask
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<bool> boolVariable;

		[Token(Token = "0x170002B6")]
		protected override string info
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x2B4AFE8", Offset = "0x2B4AFE8", VA = "0x2B4AFE8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x2B4B070", Offset = "0x2B4B070", VA = "0x2B4B070", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x2B4B0EC", Offset = "0x2B4B0EC", VA = "0x2B4B0EC")]
		public SetBooleanRandom()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F53C", Offset = "0xE0F53C")]
	public class SetEnum : ActionTask
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE209DC", Offset = "0xE209DC")]
		[BlackboardOnly]
		public BBObjectParameter valueA;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBObjectParameter valueB;

		[Token(Token = "0x170002B7")]
		protected override string info
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x2B4B0F4", Offset = "0x2B4B0F4", VA = "0x2B4B0F4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x2B4B188", Offset = "0x2B4B188", VA = "0x2B4B188", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x2B4B214", Offset = "0x2B4B214", VA = "0x2B4B214")]
		public SetEnum()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F574", Offset = "0xE0F574")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F574", Offset = "0xE0F574")]
	public class SetFloat : ActionTask
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<float> valueA;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OperationMethod Operation;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> valueB;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool perSecond;

		[Token(Token = "0x170002B8")]
		protected override string info
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x2B4BCFC", Offset = "0x2B4BCFC", VA = "0x2B4BCFC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x2B4BEB8", Offset = "0x2B4BEB8", VA = "0x2B4BEB8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x2B4BF9C", Offset = "0x2B4BF9C", VA = "0x2B4BF9C")]
		public SetFloat()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F5D4", Offset = "0xE0F5D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F5D4", Offset = "0xE0F5D4")]
	public class SetFloatRandom : ActionTask
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> minValue;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> maxValue;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> floatVariable;

		[Token(Token = "0x170002B9")]
		protected override string info
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x2B4BFA4", Offset = "0x2B4BFA4", VA = "0x2B4BFA4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x2B4C278", Offset = "0x2B4C278", VA = "0x2B4C278", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x2B4C334", Offset = "0x2B4C334", VA = "0x2B4C334")]
		public SetFloatRandom()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0F634", Offset = "0xE0F634")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F634", Offset = "0xE0F634")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F634", Offset = "0xE0F634")]
	public class SetInt : ActionTask
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<int> valueA;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OperationMethod Operation;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> valueB;

		[Token(Token = "0x170002BA")]
		protected override string info
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x2B4C33C", Offset = "0x2B4C33C", VA = "0x2B4C33C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x2B4C3B8", Offset = "0x2B4C3B8", VA = "0x2B4C3B8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x2B4C474", Offset = "0x2B4C474", VA = "0x2B4C474")]
		public SetInt()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE0F6BC", Offset = "0xE0F6BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F6BC", Offset = "0xE0F6BC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F6BC", Offset = "0xE0F6BC")]
	public class SetIntRandom : ActionTask
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<int> minValue;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<int> maxValue;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<int> intVariable;

		[Token(Token = "0x170002BB")]
		protected override string info
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x2B4C47C", Offset = "0x2B4C47C", VA = "0x2B4C47C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x2B4C750", Offset = "0x2B4C750", VA = "0x2B4C750", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x2B4C80C", Offset = "0x2B4C80C", VA = "0x2B4C80C")]
		public SetIntRandom()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F744", Offset = "0xE0F744")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F744", Offset = "0xE0F744")]
	public class SetOtherBlackboardVariable : ActionTask<Blackboard>
	{
		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20A54", Offset = "0xE20A54")]
		public BBParameter<string> targetVariableName;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBObjectParameter newValue;

		[Token(Token = "0x170002BC")]
		protected override string info
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x2B4CCF4", Offset = "0x2B4CCF4", VA = "0x2B4CCF4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x2B4CD9C", Offset = "0x2B4CD9C", VA = "0x2B4CD9C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x2B4CE70", Offset = "0x2B4CE70", VA = "0x2B4CE70")]
		public SetOtherBlackboardVariable()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F7A4", Offset = "0xE0F7A4")]
	public class SetVariable<T> : ActionTask
	{
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> valueA;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> valueB;

		[Token(Token = "0x170002BD")]
		protected override string info
		{
			[Token(Token = "0x6001705")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001706")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001707")]
		public SetVariable()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F7DC", Offset = "0xE0F7DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F7DC", Offset = "0xE0F7DC")]
	public class SetVector3 : ActionTask
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<Vector3> valueA;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OperationMethod operation;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> valueB;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool perSecond;

		[Token(Token = "0x170002BE")]
		protected override string info
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x2B4DD54", Offset = "0x2B4DD54", VA = "0x2B4DD54", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x2B4DF10", Offset = "0x2B4DF10", VA = "0x2B4DF10", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x2B4E020", Offset = "0x2B4E020", VA = "0x2B4E020")]
		public SetVector3()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F83C", Offset = "0xE0F83C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F83C", Offset = "0xE0F83C")]
	public class TriggerBoolean : ActionTask
	{
		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0F89C", Offset = "0xE0F89C")]
		private sealed class <Flip>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerBoolean <>4__this;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001712")]
				[Address(RVA = "0x3131518", Offset = "0x3131518", VA = "0x3131518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001714")]
				[Address(RVA = "0x3131560", Offset = "0x3131560", VA = "0x3131560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600170F")]
			[Address(RVA = "0x3131444", Offset = "0x3131444", VA = "0x3131444")]
			[DebuggerHidden]
			public <Flip>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0x3131470", Offset = "0x3131470", VA = "0x3131470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0x3131474", Offset = "0x3131474", VA = "0x3131474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0x3131520", Offset = "0x3131520", VA = "0x3131520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20A84", Offset = "0xE20A84")]
		[BlackboardOnly]
		public BBParameter<bool> variable;

		[Token(Token = "0x170002BF")]
		protected override string info
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x27B30D0", Offset = "0x27B30D0", VA = "0x27B30D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x27B3120", Offset = "0x27B3120", VA = "0x27B3120", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x27B31C4", Offset = "0x27B31C4", VA = "0x27B31C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29294", Offset = "0xE29294")]
		private IEnumerator Flip()
		{
			return null;
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x27B323C", Offset = "0x27B323C", VA = "0x27B323C")]
		public TriggerBoolean()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class CameraFader : MonoBehaviour
	{
		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0F8AC", Offset = "0xE0F8AC")]
		private sealed class <CoroutineFadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFader <>4__this;

			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001720")]
				[Address(RVA = "0x2729948", Offset = "0x2729948", VA = "0x2729948", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001722")]
				[Address(RVA = "0x2729990", Offset = "0x2729990", VA = "0x2729990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0x2729858", Offset = "0x2729858", VA = "0x2729858")]
			[DebuggerHidden]
			public <CoroutineFadeIn>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600171E")]
			[Address(RVA = "0x2729884", Offset = "0x2729884", VA = "0x2729884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600171F")]
			[Address(RVA = "0x2729888", Offset = "0x2729888", VA = "0x2729888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0x2729950", Offset = "0x2729950", VA = "0x2729950", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0F8BC", Offset = "0xE0F8BC")]
		private sealed class <CoroutineFadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFader <>4__this;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001726")]
				[Address(RVA = "0x2729A88", Offset = "0x2729A88", VA = "0x2729A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001728")]
				[Address(RVA = "0x2729AD0", Offset = "0x2729AD0", VA = "0x2729AD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0x2729998", Offset = "0x2729998", VA = "0x2729998")]
			[DebuggerHidden]
			public <CoroutineFadeOut>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0x27299C4", Offset = "0x27299C4", VA = "0x27299C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001725")]
			[Address(RVA = "0x27299C8", Offset = "0x27299C8", VA = "0x27299C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001727")]
			[Address(RVA = "0x2729A90", Offset = "0x2729A90", VA = "0x2729A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CameraFader _current;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float alpha;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D _blackTexture;

		[Token(Token = "0x170002C2")]
		private Texture2D blackTexture
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x2DFAFB0", Offset = "0x2DFAFB0", VA = "0x2DFAFB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public static CameraFader current
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x2DFB0A0", Offset = "0x2DFB0A0", VA = "0x2DFB0A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x2DFB244", Offset = "0x2DFB244", VA = "0x2DFB244")]
		public void FadeIn(float time)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x2DFB2F8", Offset = "0x2DFB2F8", VA = "0x2DFB2F8")]
		public void FadeOut(float time)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x2DFB270", Offset = "0x2DFB270", VA = "0x2DFB270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29344", Offset = "0xE29344")]
		private IEnumerator CoroutineFadeIn(float time)
		{
			return null;
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x2DFB324", Offset = "0x2DFB324", VA = "0x2DFB324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE293A4", Offset = "0xE293A4")]
		private IEnumerator CoroutineFadeOut(float time)
		{
			return null;
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x2DFB3AC", Offset = "0x2DFB3AC", VA = "0x2DFB3AC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x2DFB4A4", Offset = "0x2DFB4A4", VA = "0x2DFB4A4")]
		public CameraFader()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F8CC", Offset = "0xE0F8CC")]
	public class FadeIn : ActionTask
	{
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float fadeTime;

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x2925328", Offset = "0x2925328", VA = "0x2925328", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x292535C", Offset = "0x292535C", VA = "0x292535C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x29253A0", Offset = "0x29253A0", VA = "0x29253A0")]
		public FadeIn()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F904", Offset = "0xE0F904")]
	public class FadeOut : ActionTask
	{
		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float fadeTime;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x29253B0", Offset = "0x29253B0", VA = "0x29253B0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x29253E4", Offset = "0x29253E4", VA = "0x29253E4", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x2925428", Offset = "0x2925428", VA = "0x2925428")]
		public FadeOut()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F93C", Offset = "0xE0F93C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0F93C", Offset = "0xE0F93C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F93C", Offset = "0xE0F93C")]
	public class Say : ActionTask<IDialogueActor>
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Statement statement;

		[Token(Token = "0x170002C8")]
		protected override string info
		{
			[Token(Token = "0x600172F")]
			[Address(RVA = "0x2B4692C", Offset = "0x2B4692C", VA = "0x2B4692C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x2B469CC", Offset = "0x2B469CC", VA = "0x2B469CC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x2B46AD8", Offset = "0x2B46AD8", VA = "0x2B46AD8")]
		public Say()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0F9E0", Offset = "0xE0F9E0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0F9E0", Offset = "0xE0F9E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0F9E0", Offset = "0xE0F9E0")]
	public class SayRandom : ActionTask<IDialogueActor>
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Statement> statements;

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x2B46B74", Offset = "0x2B46B74", VA = "0x2B46B74", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x2B46CD8", Offset = "0x2B46CD8", VA = "0x2B46CD8")]
		public SayRandom()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FA84", Offset = "0xE0FA84")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE0FA84", Offset = "0xE0FA84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FA84", Offset = "0xE0FA84")]
	public class StartDialogueTree : ActionTask<IDialogueActor>
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20ABC", Offset = "0xE20ABC")]
		public BBParameter<DialogueTreeController> dialogueTreeController;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool waitActionFinish;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool isPrefab;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DialogueTreeController instance;

		[Token(Token = "0x170002C9")]
		protected override string info
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x2587A7C", Offset = "0x2587A7C", VA = "0x2587A7C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x2587ACC", Offset = "0x2587ACC", VA = "0x2587ACC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x2587CAC", Offset = "0x2587CAC", VA = "0x2587CAC")]
		public StartDialogueTree()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x2587D00", Offset = "0x2587D00", VA = "0x2587D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294A4", Offset = "0xE294A4")]
		private void <OnExecute>b__6_0(bool success)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x2587DA4", Offset = "0x2587DA4", VA = "0x2587DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294B4", Offset = "0xE294B4")]
		private void <OnExecute>b__6_1(bool success)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FB28", Offset = "0xE0FB28")]
	public class CreateGameObject : ActionTask
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> objectName;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> position;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> rotation;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x282FB14", Offset = "0x282FB14", VA = "0x282FB14", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x282FC58", Offset = "0x282FC58", VA = "0x282FC58")]
		public CreateGameObject()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FB60", Offset = "0xE0FB60")]
	public class CreatePrimitive : ActionTask
	{
		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> objectName;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> position;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> rotation;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<PrimitiveType> type;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x282FC60", Offset = "0x282FC60", VA = "0x282FC60", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x282FDB4", Offset = "0x282FDB4", VA = "0x282FDB4")]
		public CreatePrimitive()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FB98", Offset = "0xE0FB98")]
	public class DestroyGameObject : ActionTask<Transform>
	{
		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE20AEC", Offset = "0xE20AEC")]
		public bool immediately;

		[Token(Token = "0x170002CA")]
		protected override string info
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x283B49C", Offset = "0x283B49C", VA = "0x283B49C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x283B4FC", Offset = "0x283B4FC", VA = "0x283B4FC", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x283B5D8", Offset = "0x283B5D8", VA = "0x283B5D8")]
		public DestroyGameObject()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FBD0", Offset = "0xE0FBD0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FBD0", Offset = "0xE0FBD0")]
	public class FindAllWithLayer : ActionTask
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20B24", Offset = "0xE20B24")]
		public BBParameter<LayerMask> targetLayers;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x170002CB")]
		protected override string info
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x2925B70", Offset = "0x2925B70", VA = "0x2925B70", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x2925C28", Offset = "0x2925C28", VA = "0x2925C28", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x2925D20", Offset = "0x2925D20", VA = "0x2925D20")]
		public FindAllWithLayer()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FC30", Offset = "0xE0FC30")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FC30", Offset = "0xE0FC30")]
	public class FindAllWithName : ActionTask
	{
		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20B44", Offset = "0xE20B44")]
		public BBParameter<string> searchName;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x170002CC")]
		protected override string info
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x2925D28", Offset = "0x2925D28", VA = "0x2925D28", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x2925DE0", Offset = "0x2925DE0", VA = "0x2925DE0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x2925FB8", Offset = "0x2925FB8", VA = "0x2925FB8")]
		public FindAllWithName()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FC90", Offset = "0xE0FC90")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FC90", Offset = "0xE0FC90")]
	public class FindAllWithTag : ActionTask
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20B64", Offset = "0xE20B64")]
		[TagField]
		public BBParameter<string> searchTag;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x170002CD")]
		protected override string info
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x2926034", Offset = "0x2926034", VA = "0x2926034", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x29260EC", Offset = "0x29260EC", VA = "0x29260EC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x29261DC", Offset = "0x29261DC", VA = "0x29261DC")]
		public FindAllWithTag()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FCF0", Offset = "0xE0FCF0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FCF0", Offset = "0xE0FCF0")]
	public class FindChildByName : ActionTask<Transform>
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20BAC", Offset = "0xE20BAC")]
		public BBParameter<string> childName;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<Transform> saveAs;

		[Token(Token = "0x170002CE")]
		protected override string info
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x2926258", Offset = "0x2926258", VA = "0x2926258", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x29262C4", Offset = "0x29262C4", VA = "0x29262C4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x29263D0", Offset = "0x29263D0", VA = "0x29263D0")]
		public FindChildByName()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FD50", Offset = "0xE0FD50")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FD50", Offset = "0xE0FD50")]
	public class FindClosestWithTag : ActionTask<Transform>
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[TagField]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20BCC", Offset = "0xE20BCC")]
		public BBParameter<string> searchTag;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<bool> ignoreChildren;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveObjectAs;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x29264EC", Offset = "0x29264EC", VA = "0x29264EC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x29267E0", Offset = "0x29267E0", VA = "0x29267E0")]
		public FindClosestWithTag()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FDB0", Offset = "0xE0FDB0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FDB0", Offset = "0xE0FDB0")]
	public class FindObjectOfType<T> : ActionTask where T : Component
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveComponentAs;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveGameObjectAs;

		[Token(Token = "0x600174E")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600174F")]
		public FindObjectOfType()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FE10", Offset = "0xE0FE10")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE0FE10", Offset = "0xE0FE10")]
	public class FindObjectsOfType<T> : ActionTask where T : Component
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0FE70", Offset = "0xE0FE70")]
		private sealed class <>c
		{
			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, GameObject> <>9__2_0;

			[Token(Token = "0x6001753")]
			public <>c()
			{
			}

			[Token(Token = "0x6001754")]
			internal GameObject <OnExecute>b__2_0(T o)
			{
				return null;
			}
		}

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveGameObjects;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<List<T>> saveComponents;

		[Token(Token = "0x6001750")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001751")]
		public FindObjectsOfType()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FE80", Offset = "0xE0FE80")]
	public class FindWithName : ActionTask
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20C64", Offset = "0xE20C64")]
		public BBParameter<string> gameObjectName;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x170002CF")]
		protected override string info
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x292682C", Offset = "0x292682C", VA = "0x292682C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x29268E4", Offset = "0x29268E4", VA = "0x29268E4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x2926978", Offset = "0x2926978", VA = "0x2926978")]
		public FindWithName()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FEB8", Offset = "0xE0FEB8")]
	public class FindWithTag : ActionTask
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20C84", Offset = "0xE20C84")]
		[TagField]
		public string searchTag;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveAs;

		[Token(Token = "0x170002D0")]
		protected override string info
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x2926980", Offset = "0x2926980", VA = "0x2926980", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x2926A18", Offset = "0x2926A18", VA = "0x2926A18", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x2926A88", Offset = "0x2926A88", VA = "0x2926A88")]
		public FindWithTag()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FEF0", Offset = "0xE0FEF0")]
	public class GetAllChildGameObjects : ActionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE0FF28", Offset = "0xE0FF28")]
		private sealed class <>c
		{
			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, GameObject> <>9__4_0;

			[Token(Token = "0x6001760")]
			[Address(RVA = "0x2730DB0", Offset = "0x2730DB0", VA = "0x2730DB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0x2730DB8", Offset = "0x2730DB8", VA = "0x2730DB8")]
			internal GameObject <OnExecute>b__4_0(Transform t)
			{
				return null;
			}
		}

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveAs;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool recursive;

		[Token(Token = "0x170002D1")]
		protected override string info
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0x2936720", Offset = "0x2936720", VA = "0x2936720", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x29367CC", Offset = "0x29367CC", VA = "0x29367CC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x2936C78", Offset = "0x2936C78", VA = "0x2936C78")]
		private List<Transform> Get(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x2936FBC", Offset = "0x2936FBC", VA = "0x2936FBC")]
		public GetAllChildGameObjects()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FF38", Offset = "0xE0FF38")]
	public class GetComponent<T> : ActionTask<Transform> where T : Component
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> saveAs;

		[Token(Token = "0x170002D2")]
		protected override string info
		{
			[Token(Token = "0x6001762")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001763")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001764")]
		public GetComponent()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FF70", Offset = "0xE0FF70")]
	public class GetDistance : ActionTask<Transform>
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20CEC", Offset = "0xE20CEC")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x170002D3")]
		protected override string info
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x293741C", Offset = "0x293741C", VA = "0x293741C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x2937488", Offset = "0x2937488", VA = "0x2937488", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x2937590", Offset = "0x2937590", VA = "0x2937590")]
		public GetDistance()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FFA8", Offset = "0xE0FFA8")]
	public class GetDistancePos : ActionTask<Transform>
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20D0C", Offset = "0xE20D0C")]
		public BBParameter<Vector3> target;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x170002D4")]
		protected override string info
		{
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x29375DC", Offset = "0x29375DC", VA = "0x29375DC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x2937648", Offset = "0x2937648", VA = "0x2937648", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x2937738", Offset = "0x2937738", VA = "0x2937738")]
		public GetDistancePos()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE0FFE0", Offset = "0xE0FFE0")]
	public class CheckDistancePos : ConditionTask<Transform>
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20D2C", Offset = "0xE20D2C")]
		public BBParameter<Vector3> target;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompareMethod checkType;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> valueB;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public float dis;

		[Token(Token = "0x170002D5")]
		protected override string info
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x22A90B8", Offset = "0x22A90B8", VA = "0x22A90B8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x22A916C", Offset = "0x22A916C", VA = "0x22A916C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x22A9270", Offset = "0x22A9270", VA = "0x22A9270")]
		public CheckDistancePos()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE10018", Offset = "0xE10018")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10018", Offset = "0xE10018")]
	public class GetGameObjectPosition : ActionTask<Transform>
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x170002D6")]
		protected override string info
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x2937DBC", Offset = "0x2937DBC", VA = "0x2937DBC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x2937E68", Offset = "0x2937E68", VA = "0x2937E68", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x2937EF8", Offset = "0x2937EF8", VA = "0x2937EF8")]
		public GetGameObjectPosition()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10078", Offset = "0xE10078")]
	public class InstantiateGameObject : ActionTask<Transform>
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Transform> parent;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> clonePosition;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> cloneRotation;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveCloneAs;

		[Token(Token = "0x170002D7")]
		protected override string info
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x2E27F50", Offset = "0x2E27F50", VA = "0x2E27F50", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x2E282DC", Offset = "0x2E282DC", VA = "0x2E282DC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x2E2847C", Offset = "0x2E2847C", VA = "0x2E2847C")]
		public InstantiateGameObject()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE100B0", Offset = "0xE100B0")]
	public class LookAt : ActionTask<Transform>
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20D6C", Offset = "0xE20D6C")]
		public BBParameter<GameObject> lookTarget;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool repeat;

		[Token(Token = "0x170002D8")]
		protected override string info
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x2CF9A6C", Offset = "0x2CF9A6C", VA = "0x2CF9A6C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x2CF9ADC", Offset = "0x2CF9ADC", VA = "0x2CF9ADC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x2CF9BE4", Offset = "0x2CF9BE4", VA = "0x2CF9BE4", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x2CF9AE0", Offset = "0x2CF9AE0", VA = "0x2CF9AE0")]
		private void DoLook()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x2CF9BE8", Offset = "0x2CF9BE8", VA = "0x2CF9BE8")]
		public LookAt()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE100E8", Offset = "0xE100E8")]
	public class RemoveComponent<T> : ActionTask<Transform> where T : Component
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE20D7C", Offset = "0xE20D7C")]
		public bool immediately;

		[Token(Token = "0x170002D9")]
		protected override string info
		{
			[Token(Token = "0x6001779")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177A")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600177B")]
		public RemoveComponent()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10120", Offset = "0xE10120")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10120", Offset = "0xE10120")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10120", Offset = "0xE10120")]
	public class SetObjectActive : ActionTask<Transform>
	{
		[Token(Token = "0x20004D4")]
		public enum SetActiveMode
		{
			[Token(Token = "0x4001263")]
			Deactivate,
			[Token(Token = "0x4001264")]
			Activate,
			[Token(Token = "0x4001265")]
			Toggle
		}

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public SetActiveMode setTo;

		[Token(Token = "0x170002DA")]
		protected override string info
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x2B4C814", Offset = "0x2B4C814", VA = "0x2B4C814", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x2B4C8B0", Offset = "0x2B4C8B0", VA = "0x2B4C8B0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x2B4C970", Offset = "0x2B4C970", VA = "0x2B4C970")]
		public SetObjectActive()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE101A8", Offset = "0xE101A8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE101A8", Offset = "0xE101A8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE101A8", Offset = "0xE101A8")]
	public class SetObjectEnabled : ActionTask<MonoBehaviour>
	{
		[Token(Token = "0x20004D6")]
		public enum SetEnableMode
		{
			[Token(Token = "0x4001268")]
			Disable,
			[Token(Token = "0x4001269")]
			Enable,
			[Token(Token = "0x400126A")]
			Toggle
		}

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public SetEnableMode setTo;

		[Token(Token = "0x170002DB")]
		protected override string info
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0x2B4C9C4", Offset = "0x2B4C9C4", VA = "0x2B4C9C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x2B4CA60", Offset = "0x2B4CA60", VA = "0x2B4CA60", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x2B4CB08", Offset = "0x2B4CB08", VA = "0x2B4CB08")]
		public SetObjectEnabled()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10230", Offset = "0xE10230")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10230", Offset = "0xE10230")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10230", Offset = "0xE10230")]
	public class SetObjectVisibility : ActionTask<Renderer>
	{
		[Token(Token = "0x20004D8")]
		public enum SetVisibleMode
		{
			[Token(Token = "0x400126D")]
			Hide,
			[Token(Token = "0x400126E")]
			Show,
			[Token(Token = "0x400126F")]
			Toggle
		}

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public SetVisibleMode setTo;

		[Token(Token = "0x170002DC")]
		protected override string info
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x2B4CB5C", Offset = "0x2B4CB5C", VA = "0x2B4CB5C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x2B4CBF8", Offset = "0x2B4CBF8", VA = "0x2B4CBF8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x2B4CCA0", Offset = "0x2B4CCA0", VA = "0x2B4CCA0")]
		public SetObjectVisibility()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE102B8", Offset = "0xE102B8")]
	public class GetInputAxis : ActionTask
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<string> xAxisName;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<string> yAxisName;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<string> zAxisName;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> multiplier;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<float> saveXAs;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		public BBParameter<float> saveYAs;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<float> saveZAs;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool repeat;

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x2937F44", Offset = "0x2937F44", VA = "0x2937F44", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x293816C", Offset = "0x293816C", VA = "0x293816C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x2937F48", Offset = "0x2937F48", VA = "0x2937F48")]
		private void Do()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x2938170", Offset = "0x2938170", VA = "0x2938170")]
		public GetInputAxis()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE102F0", Offset = "0xE102F0")]
	public class GetMousePosition : ActionTask
	{
		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveAs;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool repeat;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x2939584", Offset = "0x2939584", VA = "0x2939584", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x2939608", Offset = "0x2939608", VA = "0x2939608", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x2939588", Offset = "0x2939588", VA = "0x2939588")]
		private void Do()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x293960C", Offset = "0x293960C", VA = "0x293960C")]
		public GetMousePosition()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10328", Offset = "0xE10328")]
	public class GetMouseScrollDelta : ActionTask
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<float> saveAs;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool repeat;

		[Token(Token = "0x170002DD")]
		protected override string info
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x2939614", Offset = "0x2939614", VA = "0x2939614", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x2939684", Offset = "0x2939684", VA = "0x2939684", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x2939720", Offset = "0x2939720", VA = "0x2939720", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x2939688", Offset = "0x2939688", VA = "0x2939688")]
		private void Do()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x2939724", Offset = "0x2939724", VA = "0x2939724")]
		public GetMouseScrollDelta()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10360", Offset = "0xE10360")]
	public class WaitMousePick : ActionTask
	{
		[Token(Token = "0x20004DD")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4001285")]
			Left,
			[Token(Token = "0x4001286")]
			Right,
			[Token(Token = "0x4001287")]
			Middle
		}

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask mask;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveObjectAs;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePositionAs;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int buttonID;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit hit;

		[Token(Token = "0x170002DE")]
		protected override string info
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0x2D0E9F0", Offset = "0x2D0E9F0", VA = "0x2D0E9F0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x2D0EA7C", Offset = "0x2D0EA7C", VA = "0x2D0EA7C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x2D0EC08", Offset = "0x2D0EC08", VA = "0x2D0EC08")]
		public WaitMousePick()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10398", Offset = "0xE10398")]
	public class WaitMousePick2D : ActionTask
	{
		[Token(Token = "0x20004DF")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4001290")]
			Left,
			[Token(Token = "0x4001291")]
			Right,
			[Token(Token = "0x4001292")]
			Middle
		}

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ButtonKeys buttonKey;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask mask;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveObjectAs;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePositionAs;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int buttonID;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit2D hit;

		[Token(Token = "0x170002DF")]
		protected override string info
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x2D0EC3C", Offset = "0x2D0EC3C", VA = "0x2D0EC3C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x2D0ECC8", Offset = "0x2D0ECC8", VA = "0x2D0ECC8", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x2D0EF40", Offset = "0x2D0EF40", VA = "0x2D0EF40")]
		public WaitMousePick2D()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE103D0", Offset = "0xE103D0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE103D0", Offset = "0xE103D0")]
	public class CurveTransformTween : ActionTask<Transform>
	{
		[Token(Token = "0x20004E1")]
		public enum TransformMode
		{
			[Token(Token = "0x400129D")]
			Position,
			[Token(Token = "0x400129E")]
			Rotation,
			[Token(Token = "0x400129F")]
			Scale
		}

		[Token(Token = "0x20004E2")]
		public enum TweenMode
		{
			[Token(Token = "0x40012A1")]
			Absolute,
			[Token(Token = "0x40012A2")]
			Additive
		}

		[Token(Token = "0x20004E3")]
		public enum PlayMode
		{
			[Token(Token = "0x40012A4")]
			Normal,
			[Token(Token = "0x40012A5")]
			PingPong
		}

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public TransformMode transformMode;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TweenMode mode;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public PlayMode playMode;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> time;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 original;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 final;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool ponging;

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x282FFB4", Offset = "0x282FFB4", VA = "0x282FFB4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x2830190", Offset = "0x2830190", VA = "0x2830190", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x2830394", Offset = "0x2830394", VA = "0x2830394")]
		public CurveTransformTween()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10434", Offset = "0xE10434")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10434", Offset = "0xE10434")]
	public class InputMove : ActionTask<Transform>
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<float> strafe;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<float> turn;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<float> forward;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> up;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> moveSpeed;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> rotationSpeed;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool repeat;

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x2E279A8", Offset = "0x2E279A8", VA = "0x2E279A8", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x2E27D90", Offset = "0x2E27D90", VA = "0x2E27D90")]
		public InputMove()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10494", Offset = "0xE10494")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10494", Offset = "0xE10494")]
	public class MoveAway : ActionTask<Transform>
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20EB4", Offset = "0xE20EB4")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> stopDistance;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool waitActionFinish;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x2698E54", Offset = "0x2698E54", VA = "0x2698E54", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x2699050", Offset = "0x2699050", VA = "0x2699050")]
		public MoveAway()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE104F4", Offset = "0xE104F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE104F4", Offset = "0xE104F4")]
	public class MoveTowards : ActionTask<Transform>
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20EC4", Offset = "0xE20EC4")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> stopDistance;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool waitActionFinish;

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x269A110", Offset = "0x269A110", VA = "0x269A110", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x269A30C", Offset = "0x269A30C", VA = "0x269A30C")]
		public MoveTowards()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10554", Offset = "0xE10554")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10554", Offset = "0xE10554")]
	public class RotateAway : ActionTask<Transform>
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20ED4", Offset = "0xE20ED4")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE20EE4", Offset = "0xE20EE4")]
		public BBParameter<float> angleDifference;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool waitActionFinish;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x2B3FF24", Offset = "0x2B3FF24", VA = "0x2B3FF24", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x2B401FC", Offset = "0x2B401FC", VA = "0x2B401FC")]
		public RotateAway()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE105B4", Offset = "0xE105B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE105B4", Offset = "0xE105B4")]
	public class RotateTowards : ActionTask<Transform>
	{
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20EFC", Offset = "0xE20EFC")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE20F0C", Offset = "0xE20F0C")]
		public BBParameter<float> angleDifference;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool waitActionFinish;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x2B402C8", Offset = "0x2B402C8", VA = "0x2B402C8", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x2B405A0", Offset = "0x2B405A0", VA = "0x2B405A0")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10614", Offset = "0xE10614")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10614", Offset = "0xE10614")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10614", Offset = "0xE10614")]
	public class FindClosestEdge : ActionTask
	{
		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveFoundPosition;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NavMeshHit hit;

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x292641C", Offset = "0x292641C", VA = "0x292641C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x29264E4", Offset = "0x29264E4", VA = "0x29264E4")]
		public FindClosestEdge()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1069C", Offset = "0xE1069C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE1069C", Offset = "0xE1069C")]
	public class Flee : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20F34", Offset = "0xE20F34")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> fledDistance;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> lookAhead;

		[Token(Token = "0x170002E0")]
		protected override string info
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x2928558", Offset = "0x2928558", VA = "0x2928558", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x29285A8", Offset = "0x29285A8", VA = "0x29285A8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x2928784", Offset = "0x2928784", VA = "0x2928784", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x2928A0C", Offset = "0x2928A0C", VA = "0x2928A0C", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x2928A1C", Offset = "0x2928A1C", VA = "0x2928A1C", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x2928AFC", Offset = "0x2928AFC", VA = "0x2928AFC")]
		public Flee()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE106FC", Offset = "0xE106FC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE106FC", Offset = "0xE106FC")]
	public class MoveToGameObject : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20F44", Offset = "0xE20F44")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3? lastRequest;

		[Token(Token = "0x170002E1")]
		protected override string info
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x2699418", Offset = "0x2699418", VA = "0x2699418", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x2699488", Offset = "0x2699488", VA = "0x2699488", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x269968C", Offset = "0x269968C", VA = "0x269968C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x2699908", Offset = "0x2699908", VA = "0x2699908", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x2699918", Offset = "0x2699918", VA = "0x2699918", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x2699A08", Offset = "0x2699A08", VA = "0x2699A08", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x2699B44", Offset = "0x2699B44", VA = "0x2699B44")]
		public MoveToGameObject()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10760", Offset = "0xE10760")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10760", Offset = "0xE10760")]
	public class MoveToPosition : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> targetPosition;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3? lastRequest;

		[Token(Token = "0x170002E2")]
		protected override string info
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x2699BE0", Offset = "0x2699BE0", VA = "0x2699BE0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x2699C50", Offset = "0x2699C50", VA = "0x2699C50", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x2699DCC", Offset = "0x2699DCC", VA = "0x2699DCC", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x269A05C", Offset = "0x269A05C", VA = "0x269A05C", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x269A06C", Offset = "0x269A06C", VA = "0x269A06C", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x269A074", Offset = "0x269A074", VA = "0x269A074")]
		public MoveToPosition()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE107C4", Offset = "0xE107C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE107C4", Offset = "0xE107C4")]
	public class Patrol : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x20004EE")]
		public enum PatrolMode
		{
			[Token(Token = "0x40012D5")]
			Progressive,
			[Token(Token = "0x40012D6")]
			Random
		}

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20F54", Offset = "0xE20F54")]
		public BBParameter<List<GameObject>> targetList;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<PatrolMode> patrolMode;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int index;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3? lastRequest;

		[Token(Token = "0x170002E3")]
		protected override string info
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x26A62D0", Offset = "0x26A62D0", VA = "0x26A62D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x26A6320", Offset = "0x26A6320", VA = "0x26A6320", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x26A664C", Offset = "0x26A664C", VA = "0x26A664C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x26A68A8", Offset = "0x26A68A8", VA = "0x26A68A8", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x26A68B8", Offset = "0x26A68B8", VA = "0x26A68B8", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x26A69A8", Offset = "0x26A69A8", VA = "0x26A69A8", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x26A6BE0", Offset = "0x26A6BE0", VA = "0x26A6BE0")]
		public Patrol()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10824", Offset = "0xE10824")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10824", Offset = "0xE10824")]
	public class Wander : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> speed;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> minWanderDistance;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> maxWanderDistance;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool repeat;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x2D0F3CC", Offset = "0x2D0F3CC", VA = "0x2D0F3CC", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x2D0F69C", Offset = "0x2D0F69C", VA = "0x2D0F69C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x2D0F460", Offset = "0x2D0F460", VA = "0x2D0F460")]
		private void DoWander()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x2D0F7A4", Offset = "0x2D0F7A4", VA = "0x2D0F7A4", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x2D0F7B4", Offset = "0x2D0F7B4", VA = "0x2D0F7B4", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x2D0F8E8", Offset = "0x2D0F8E8", VA = "0x2D0F8E8")]
		public Wander()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10884", Offset = "0xE10884")]
	public class GetLinecastInfo : ActionTask<Transform>
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20F64", Offset = "0xE20F64")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<LayerMask> layerMask;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveHitGameObjectAs;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePointAs;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveNormalAs;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RaycastHit hit;

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x293824C", Offset = "0x293824C", VA = "0x293824C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x2938464", Offset = "0x2938464", VA = "0x2938464", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x29385F4", Offset = "0x29385F4", VA = "0x29385F4")]
		public GetLinecastInfo()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE108BC", Offset = "0xE108BC")]
	public class GetLinecastInfo2D : ActionTask<Transform>
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE20FB4", Offset = "0xE20FB4")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LayerMask mask;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<GameObject> saveHitGameObjectAs;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<float> saveDistanceAs;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> savePointAs;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> saveNormalAs;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RaycastHit2D hit;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x293867C", Offset = "0x293867C", VA = "0x293867C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x2938918", Offset = "0x2938918", VA = "0x2938918", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x2938AA8", Offset = "0x2938AA8", VA = "0x2938AA8")]
		public GetLinecastInfo2D()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE108F4", Offset = "0xE108F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE108F4", Offset = "0xE108F4")]
	public class GetLinecastInfo2DAll : ActionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE10954", Offset = "0xE10954")]
		private sealed class <>c
		{
			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RaycastHit2D, GameObject> <>9__7_0;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<RaycastHit2D, float> <>9__7_1;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<RaycastHit2D, Vector3> <>9__7_3;

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x2730E38", Offset = "0x2730E38", VA = "0x2730E38")]
			public <>c()
			{
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x2730E40", Offset = "0x2730E40", VA = "0x2730E40")]
			internal GameObject <OnExecute>b__7_0(RaycastHit2D h)
			{
				return null;
			}

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x2730E68", Offset = "0x2730E68", VA = "0x2730E68")]
			internal float <OnExecute>b__7_1(RaycastHit2D h)
			{
				return default(float);
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x2730E74", Offset = "0x2730E74", VA = "0x2730E74")]
			internal Vector3 <OnExecute>b__7_3(RaycastHit2D h)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE21004", Offset = "0xE21004")]
		public BBParameter<GameObject> target;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LayerMask mask;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveHitGameObjectsAs;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<float>> saveDistancesAs;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<List<Vector3>> savePointsAs;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<List<Vector3>> saveNormalsAs;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RaycastHit2D[] hits;

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x2938B04", Offset = "0x2938B04", VA = "0x2938B04", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x2939074", Offset = "0x2939074", VA = "0x2939074", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x2939204", Offset = "0x2939204", VA = "0x2939204")]
		public GetLinecastInfo2DAll()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x2939260", Offset = "0x2939260", VA = "0x2939260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294C4", Offset = "0xE294C4")]
		private Vector3 <OnExecute>b__7_2(RaycastHit2D h)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10964", Offset = "0xE10964")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10964", Offset = "0xE10964")]
	public class GetOverlapSphereObjects : ActionTask<Transform>
	{
		[Serializable]
		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE109C4", Offset = "0xE109C4")]
		private sealed class <>c
		{
			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, GameObject> <>9__3_0;

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x2730F20", Offset = "0x2730F20", VA = "0x2730F20")]
			public <>c()
			{
			}

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x2730F28", Offset = "0x2730F28", VA = "0x2730F28")]
			internal GameObject <OnExecute>b__3_0(Collider c)
			{
				return null;
			}
		}

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LayerMask layerMask;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> radius;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> saveObjectsAs;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x29BBA60", Offset = "0x29BBA60", VA = "0x29BBA60", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x29BBD28", Offset = "0x29BBD28", VA = "0x29BBD28", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x29BBE78", Offset = "0x29BBE78", VA = "0x29BBE78")]
		public GetOverlapSphereObjects()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE109D4", Offset = "0xE109D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE109D4", Offset = "0xE109D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE109D4", Offset = "0xE109D4")]
	public class ExecuteFunction_Multiplatform : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE10A5C", Offset = "0xE10A5C")]
		private sealed class <InternalCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExecuteFunction_Multiplatform <>4__this;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator routine;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0x272EC90", Offset = "0x272EC90", VA = "0x272EC90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EC")]
				[Address(RVA = "0x272ECD8", Offset = "0x272ECD8", VA = "0x272ECD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x272EAC0", Offset = "0x272EAC0", VA = "0x272EAC0")]
			[DebuggerHidden]
			public <InternalCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x272EAEC", Offset = "0x272EAEC", VA = "0x272EAEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x272EAF0", Offset = "0x272EAF0", VA = "0x272EAF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x272EC98", Offset = "0x272EC98", VA = "0x272EC98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedMethodInfo method;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected List<BBObjectParameter> parameters;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[BlackboardOnly]
		protected BBObjectParameter returnValue;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object[] args;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool routineRunning;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] parameterIsByRef;

		[Token(Token = "0x170002E4")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x28C83B0", Offset = "0x28C83B0", VA = "0x28C83B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public override Type agentType
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x28C83BC", Offset = "0x28C83BC", VA = "0x28C83BC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		protected override string info
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x28C84D8", Offset = "0x28C84D8", VA = "0x28C84D8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x28C89C0", Offset = "0x28C89C0", VA = "0x28C89C0", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x28C89C8", Offset = "0x28C89C8", VA = "0x28C89C8", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x28C8DD4", Offset = "0x28C8DD4", VA = "0x28C8DD4", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x28C8FB0", Offset = "0x28C8FB0", VA = "0x28C8FB0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x28C9384", Offset = "0x28C9384", VA = "0x28C9384", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x28C92F0", Offset = "0x28C92F0", VA = "0x28C92F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE294D4", Offset = "0xE294D4")]
		private IEnumerator InternalCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x28C8A10", Offset = "0x28C8A10", VA = "0x28C8A10")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x28C938C", Offset = "0x28C938C", VA = "0x28C938C")]
		public ExecuteFunction_Multiplatform()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	internal class GetField_0
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string fieldName;

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x2937DB4", Offset = "0x2937DB4", VA = "0x2937DB4")]
		public GetField_0()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10A6C", Offset = "0xE10A6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10A6C", Offset = "0xE10A6C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10A6C", Offset = "0xE10A6C")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE10A6C", Offset = "0xE10A6C")]
	public class GetField : ActionTask, IReflectedWrapper, IMigratable<GetField_0>, IMigratable
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedFieldInfo field;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		[SerializeField]
		protected BBObjectParameter saveAs;

		[Token(Token = "0x170002E9")]
		private FieldInfo targetField
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x293785C", Offset = "0x293785C", VA = "0x293785C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public override Type agentType
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x2937868", Offset = "0x2937868", VA = "0x2937868", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		protected override string info
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x2937984", Offset = "0x2937984", VA = "0x2937984", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x2937784", Offset = "0x2937784", VA = "0x2937784", Slot = "23")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Actions.GetField_0>.Migrate(GetField_0 model)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x2937B44", Offset = "0x2937B44", VA = "0x2937B44", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x2937B4C", Offset = "0x2937B4C", VA = "0x2937B4C", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x2937C18", Offset = "0x2937C18", VA = "0x2937C18", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x2937CE0", Offset = "0x2937CE0", VA = "0x2937CE0")]
		private void SetTargetField(FieldInfo newField)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x2937DAC", Offset = "0x2937DAC", VA = "0x2937DAC")]
		public GetField()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10B70", Offset = "0xE10B70")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10B70", Offset = "0xE10B70")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10B70", Offset = "0xE10B70")]
	public class GetProperty_Multiplatform : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedMethodInfo method;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[BlackboardOnly]
		[SerializeField]
		protected BBObjectParameter returnValue;

		[Token(Token = "0x170002EC")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x29BC4A4", Offset = "0x29BC4A4", VA = "0x29BC4A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public override Type agentType
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x29BC4B0", Offset = "0x29BC4B0", VA = "0x29BC4B0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		protected override string info
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x29BC5CC", Offset = "0x29BC5CC", VA = "0x29BC5CC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x29BC78C", Offset = "0x29BC78C", VA = "0x29BC78C", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x29BC794", Offset = "0x29BC794", VA = "0x29BC794", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x29BC8A8", Offset = "0x29BC8A8", VA = "0x29BC8A8", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x29BC95C", Offset = "0x29BC95C", VA = "0x29BC95C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x29BC7DC", Offset = "0x29BC7DC", VA = "0x29BC7DC")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x29BCA20", Offset = "0x29BCA20", VA = "0x29BCA20")]
		public GetProperty_Multiplatform()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10BF8", Offset = "0xE10BF8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10BF8", Offset = "0xE10BF8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10BF8", Offset = "0xE10BF8")]
	public class ImplementedAction_Multiplatform : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SerializedMethodInfo method;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<BBObjectParameter> parameters;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Status actionStatus;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object[] args;

		[Token(Token = "0x170002EF")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x2E26464", Offset = "0x2E26464", VA = "0x2E26464")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public override Type agentType
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x2E26470", Offset = "0x2E26470", VA = "0x2E26470", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		protected override string info
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x2E2658C", Offset = "0x2E2658C", VA = "0x2E2658C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x2E267A4", Offset = "0x2E267A4", VA = "0x2E267A4", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x2E267AC", Offset = "0x2E267AC", VA = "0x2E267AC", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x2E269A4", Offset = "0x2E269A4", VA = "0x2E269A4", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x2E26ABC", Offset = "0x2E26ABC", VA = "0x2E26ABC", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x2E26CA4", Offset = "0x2E26CA4", VA = "0x2E26CA4", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x2E267F4", Offset = "0x2E267F4", VA = "0x2E267F4")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x2E26CB0", Offset = "0x2E26CB0", VA = "0x2E26CB0")]
		public ImplementedAction_Multiplatform()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10C80", Offset = "0xE10C80")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10C80", Offset = "0xE10C80")]
	public class SendMessage : ActionTask<Transform>
	{
		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2118C", Offset = "0xE2118C")]
		public BBParameter<string> methodName;

		[Token(Token = "0x170002F2")]
		protected override string info
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x2B47D54", Offset = "0x2B47D54", VA = "0x2B47D54", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x2B47DA4", Offset = "0x2B47DA4", VA = "0x2B47DA4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x2B47E40", Offset = "0x2B47E40", VA = "0x2B47E40")]
		public SendMessage()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10CE0", Offset = "0xE10CE0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10CE0", Offset = "0xE10CE0")]
	public class SendMessage<T> : ActionTask<Transform>
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2119C", Offset = "0xE2119C")]
		public BBParameter<string> methodName;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> argument;

		[Token(Token = "0x170002F3")]
		protected override string info
		{
			[Token(Token = "0x600180D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180E")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600180F")]
		public SendMessage()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10D40", Offset = "0xE10D40")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10D40", Offset = "0xE10D40")]
	public class SendMessageToType<T> : ActionTask where T : Component
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE211AC", Offset = "0xE211AC")]
		public BBParameter<string> message;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<object> argument;

		[Token(Token = "0x170002F4")]
		protected override string info
		{
			[Token(Token = "0x6001810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001811")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001812")]
		public SendMessageToType()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	internal class SetField_0
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Type targetType;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string fieldName;

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x2B4BCF4", Offset = "0x2B4BCF4", VA = "0x2B4BCF4")]
		public SetField_0()
		{
		}
	}
	[Token(Token = "0x2000500")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10DA0", Offset = "0xE10DA0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10DA0", Offset = "0xE10DA0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10DA0", Offset = "0xE10DA0")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE10DA0", Offset = "0xE10DA0")]
	public class SetField : ActionTask, IReflectedWrapper, IMigratable<SetField_0>, IMigratable
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedFieldInfo field;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected BBObjectParameter setValue;

		[Token(Token = "0x170002F5")]
		private FieldInfo targetField
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x2B4B7C4", Offset = "0x2B4B7C4", VA = "0x2B4B7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public override Type agentType
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x2B4B7DC", Offset = "0x2B4B7DC", VA = "0x2B4B7DC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		protected override string info
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x2B4B900", Offset = "0x2B4B900", VA = "0x2B4B900", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x2B4B6E0", Offset = "0x2B4B6E0", VA = "0x2B4B6E0", Slot = "23")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.Tasks.Actions.SetField_0>.Migrate(SetField_0 model)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x2B4BA98", Offset = "0x2B4BA98", VA = "0x2B4BA98", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x2B4BAA0", Offset = "0x2B4BAA0", VA = "0x2B4BAA0", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x2B4BB64", Offset = "0x2B4BB64", VA = "0x2B4BB64", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x2B4BC14", Offset = "0x2B4BC14", VA = "0x2B4BC14")]
		private void SetTargetField(FieldInfo newField)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x2B4BCEC", Offset = "0x2B4BCEC", VA = "0x2B4BCEC")]
		public SetField()
		{
		}
	}
	[Token(Token = "0x2000501")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10EA4", Offset = "0xE10EA4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10EA4", Offset = "0xE10EA4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10EA4", Offset = "0xE10EA4")]
	public class SetProperty_Multiplatform : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedMethodInfo method;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected BBObjectParameter parameter;

		[Token(Token = "0x170002F8")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0x2B4D458", Offset = "0x2B4D458", VA = "0x2B4D458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		public override Type agentType
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x2B4D470", Offset = "0x2B4D470", VA = "0x2B4D470", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		protected override string info
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0x2B4D594", Offset = "0x2B4D594", VA = "0x2B4D594", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x2B4D748", Offset = "0x2B4D748", VA = "0x2B4D748", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x2B4D750", Offset = "0x2B4D750", VA = "0x2B4D750", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x2B4D874", Offset = "0x2B4D874", VA = "0x2B4D874", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x2B4D920", Offset = "0x2B4D920", VA = "0x2B4D920", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x2B4D76C", Offset = "0x2B4D76C", VA = "0x2B4D76C")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x2B4DA10", Offset = "0x2B4DA10", VA = "0x2B4DA10")]
		public SetProperty_Multiplatform()
		{
		}
	}
	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10F2C", Offset = "0xE10F2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10F2C", Offset = "0xE10F2C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10F2C", Offset = "0xE10F2C")]
	public class ExecuteFunction : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE10FB4", Offset = "0xE10FB4")]
		private sealed class <InternalCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExecuteFunction <>4__this;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator routine;

			[Token(Token = "0x170002FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001834")]
				[Address(RVA = "0x272EA70", Offset = "0x272EA70", VA = "0x272EA70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001836")]
				[Address(RVA = "0x272EAB8", Offset = "0x272EAB8", VA = "0x272EAB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x272E8A0", Offset = "0x272E8A0", VA = "0x272E8A0")]
			[DebuggerHidden]
			public <InternalCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x272E8CC", Offset = "0x272E8CC", VA = "0x272E8CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x272E8D0", Offset = "0x272E8D0", VA = "0x272E8D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0x272EA78", Offset = "0x272EA78", VA = "0x272EA78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedWrapper functionWrapper;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool routineRunning;

		[Token(Token = "0x170002FB")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x28C7634", Offset = "0x28C7634", VA = "0x28C7634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		public override Type agentType
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x28C7648", Offset = "0x28C7648", VA = "0x28C7648", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		protected override string info
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0x28C7774", Offset = "0x28C7774", VA = "0x28C7774", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x28C761C", Offset = "0x28C761C", VA = "0x28C761C", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x28C7D6C", Offset = "0x28C7D6C", VA = "0x28C7D6C", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x28C7E2C", Offset = "0x28C7E2C", VA = "0x28C7E2C", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x28C7FB8", Offset = "0x28C7FB8", VA = "0x28C7FB8", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x28C83A0", Offset = "0x28C83A0", VA = "0x28C83A0", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x28C830C", Offset = "0x28C830C", VA = "0x28C830C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29584", Offset = "0xE29584")]
		private IEnumerator InternalCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x28C7DC4", Offset = "0x28C7DC4", VA = "0x28C7DC4")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x28C83A8", Offset = "0x28C83A8", VA = "0x28C83A8")]
		public ExecuteFunction()
		{
		}
	}
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE10FC4", Offset = "0xE10FC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE10FC4", Offset = "0xE10FC4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE10FC4", Offset = "0xE10FC4")]
	public class GetProperty : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedFunctionWrapper functionWrapper;

		[Token(Token = "0x17000300")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x29BBF04", Offset = "0x29BBF04", VA = "0x29BBF04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public override Type agentType
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x29BBF18", Offset = "0x29BBF18", VA = "0x29BBF18", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		protected override string info
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x29BC044", Offset = "0x29BC044", VA = "0x29BC044", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x29BC22C", Offset = "0x29BC22C", VA = "0x29BC22C", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x29BC244", Offset = "0x29BC244", VA = "0x29BC244", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x29BC304", Offset = "0x29BC304", VA = "0x29BC304", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x29BC44C", Offset = "0x29BC44C", VA = "0x29BC44C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x29BC29C", Offset = "0x29BC29C", VA = "0x29BC29C")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x29BC49C", Offset = "0x29BC49C", VA = "0x29BC49C")]
		public GetProperty()
		{
		}
	}
	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1104C", Offset = "0xE1104C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1104C", Offset = "0xE1104C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE1104C", Offset = "0xE1104C")]
	public class ImplementedAction : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedFunctionWrapper functionWrapper;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Status actionStatus;

		[Token(Token = "0x17000303")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x2E25DE0", Offset = "0x2E25DE0", VA = "0x2E25DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public override Type agentType
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x2E25DF4", Offset = "0x2E25DF4", VA = "0x2E25DF4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		protected override string info
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x2E25F20", Offset = "0x2E25F20", VA = "0x2E25F20", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x2E26170", Offset = "0x2E26170", VA = "0x2E26170", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x2E26188", Offset = "0x2E26188", VA = "0x2E26188", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x2E26248", Offset = "0x2E26248", VA = "0x2E26248", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x2E26390", Offset = "0x2E26390", VA = "0x2E26390", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x2E26448", Offset = "0x2E26448", VA = "0x2E26448", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x2E261E0", Offset = "0x2E261E0", VA = "0x2E261E0")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x2E26454", Offset = "0x2E26454", VA = "0x2E26454")]
		public ImplementedAction()
		{
		}
	}
	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE110D4", Offset = "0xE110D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE110D4", Offset = "0xE110D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE110D4", Offset = "0xE110D4")]
	public class SetProperty : ActionTask, IReflectedWrapper
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedActionWrapper functionWrapper;

		[Token(Token = "0x17000306")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x2B4CEBC", Offset = "0x2B4CEBC", VA = "0x2B4CEBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public override Type agentType
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x2B4CED0", Offset = "0x2B4CED0", VA = "0x2B4CED0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		protected override string info
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x2B4CFFC", Offset = "0x2B4CFFC", VA = "0x2B4CFFC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x2B4D1E0", Offset = "0x2B4D1E0", VA = "0x2B4D1E0", Slot = "22")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x2B4D1F8", Offset = "0x2B4D1F8", VA = "0x2B4D1F8", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x2B4D2B8", Offset = "0x2B4D2B8", VA = "0x2B4D2B8", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x2B4D400", Offset = "0x2B4D400", VA = "0x2B4D400", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x2B4D250", Offset = "0x2B4D250", VA = "0x2B4D250")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x2B4D450", Offset = "0x2B4D450", VA = "0x2B4D450")]
		public SetProperty()
		{
		}
	}
	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1115C", Offset = "0xE1115C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE1115C", Offset = "0xE1115C")]
	public class DebugBeep : ActionTask
	{
		[Token(Token = "0x6001853")]
		[Address(RVA = "0x2839544", Offset = "0x2839544", VA = "0x2839544", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x283954C", Offset = "0x283954C", VA = "0x283954C")]
		public DebugBeep()
		{
		}
	}
	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE111BC", Offset = "0xE111BC")]
	public class DebugDrawLine : ActionTask
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Vector3> from;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Vector3> to;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color color;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float timeToShow;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x2839564", Offset = "0x2839564", VA = "0x2839564", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x2839674", Offset = "0x2839674", VA = "0x2839674")]
		public DebugDrawLine()
		{
		}
	}
	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE111F4", Offset = "0xE111F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE111F4", Offset = "0xE111F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE111F4", Offset = "0xE111F4")]
	public class DebugLogText : ActionTask<Transform>
	{
		[Token(Token = "0x200050A")]
		public enum LogMode
		{
			[Token(Token = "0x400132E")]
			Log,
			[Token(Token = "0x400132F")]
			Warning,
			[Token(Token = "0x4001330")]
			Error
		}

		[Token(Token = "0x200050B")]
		public enum VerboseMode
		{
			[Token(Token = "0x4001332")]
			LogAndDisplayLabel,
			[Token(Token = "0x4001333")]
			LogOnly,
			[Token(Token = "0x4001334")]
			DisplayLabelOnly
		}

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2126C", Offset = "0xE2126C")]
		public BBParameter<string> log;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float labelYOffset;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float secondsToRun;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VerboseMode verboseMode;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LogMode logMode;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CompactStatus finishStatus;

		[Token(Token = "0x17000309")]
		protected override string info
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0x28396C0", Offset = "0x28396C0", VA = "0x28396C0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x28397B0", Offset = "0x28397B0", VA = "0x28397B0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x2839918", Offset = "0x2839918", VA = "0x2839918", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x28399E4", Offset = "0x28399E4", VA = "0x28399E4", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x2839A34", Offset = "0x2839A34", VA = "0x2839A34")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x2839D58", Offset = "0x2839D58", VA = "0x2839D58")]
		public DebugLogText()
		{
		}
	}
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE1127C", Offset = "0xE1127C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1127C", Offset = "0xE1127C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE1127C", Offset = "0xE1127C")]
	public class DebugLogVariable : ActionTask
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[BlackboardOnly]
		public BBParameter<object> log;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<string> prefix;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float secondsToRun;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public CompactStatus finishStatus;

		[Token(Token = "0x1700030A")]
		protected override string info
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x2839DF8", Offset = "0x2839DF8", VA = "0x2839DF8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x2839F08", Offset = "0x2839F08", VA = "0x2839F08", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x2839F0C", Offset = "0x2839F0C", VA = "0x2839F0C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x2839F5C", Offset = "0x2839F5C", VA = "0x2839F5C")]
		public DebugLogVariable()
		{
		}
	}
	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11300", Offset = "0xE11300")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11300", Offset = "0xE11300")]
	public class ForceFinishGraph : ActionTask
	{
		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public CompactStatus finishStatus;

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x293006C", Offset = "0x293006C", VA = "0x293006C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x2930188", Offset = "0x2930188", VA = "0x2930188")]
		public ForceFinishGraph()
		{
		}
	}
	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11360", Offset = "0xE11360")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11360", Offset = "0xE11360")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11360", Offset = "0xE11360")]
	public class GraphOwnerControl : ActionTask<GraphOwner>
	{
		[Token(Token = "0x200050F")]
		public enum Control
		{
			[Token(Token = "0x400133D")]
			StartBehaviour,
			[Token(Token = "0x400133E")]
			StopBehaviour,
			[Token(Token = "0x400133F")]
			PauseBehaviour
		}

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE113E8", Offset = "0xE113E8")]
		private sealed class <YieldDo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GraphOwnerControl <>4__this;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600186D")]
				[Address(RVA = "0x2731D78", Offset = "0x2731D78", VA = "0x2731D78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600186F")]
				[Address(RVA = "0x2731DC0", Offset = "0x2731DC0", VA = "0x2731DC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600186A")]
			[Address(RVA = "0x2731CD8", Offset = "0x2731CD8", VA = "0x2731CD8")]
			[DebuggerHidden]
			public <YieldDo>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600186B")]
			[Address(RVA = "0x2731D04", Offset = "0x2731D04", VA = "0x2731D04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600186C")]
			[Address(RVA = "0x2731D08", Offset = "0x2731D08", VA = "0x2731D08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600186E")]
			[Address(RVA = "0x2731D80", Offset = "0x2731D80", VA = "0x2731D80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Control control;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool waitActionFinish;

		[Token(Token = "0x1700030B")]
		protected override string info
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x29D0C44", Offset = "0x29D0C44", VA = "0x29D0C44", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x29D0D00", Offset = "0x29D0D00", VA = "0x29D0D00", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x29D0EA8", Offset = "0x29D0EA8", VA = "0x29D0EA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29634", Offset = "0xE29634")]
		private IEnumerator YieldDo()
		{
			return null;
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x29D0F20", Offset = "0x29D0F20", VA = "0x29D0F20")]
		private void Do()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x29D0FDC", Offset = "0x29D0FDC", VA = "0x29D0FDC", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x29D1054", Offset = "0x29D1054", VA = "0x29D1054")]
		public GraphOwnerControl()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x29D10A8", Offset = "0x29D10A8", VA = "0x29D10A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29694", Offset = "0xE29694")]
		private void <OnExecute>b__5_0(bool s)
		{
		}
	}
	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE113F8", Offset = "0xE113F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE113F8", Offset = "0xE113F8")]
	public class RunForever : ActionTask
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x2B43B8C", Offset = "0x2B43B8C", VA = "0x2B43B8C")]
		public RunForever()
		{
		}
	}
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11458", Offset = "0xE11458")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11458", Offset = "0xE11458")]
	public class SendEvent : ActionTask<GraphOwner>
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2128C", Offset = "0xE2128C")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> delay;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool sendGlobal;

		[Token(Token = "0x1700030E")]
		protected override string info
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0x2B475F8", Offset = "0x2B475F8", VA = "0x2B475F8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x2B478D4", Offset = "0x2B478D4", VA = "0x2B478D4", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x2B47A00", Offset = "0x2B47A00", VA = "0x2B47A00")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE114B8", Offset = "0xE114B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE114B8", Offset = "0xE114B8")]
	public class SendEvent<T> : ActionTask<GraphOwner>
	{
		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2129C", Offset = "0xE2129C")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> eventValue;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<float> delay;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool sendGlobal;

		[Token(Token = "0x1700030F")]
		protected override string info
		{
			[Token(Token = "0x6001874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001875")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001876")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11518", Offset = "0xE11518")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11518", Offset = "0xE11518")]
	public class SendEventToObjects : ActionTask
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE212AC", Offset = "0xE212AC")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE212BC", Offset = "0xE212BC")]
		public BBParameter<string> eventName;

		[Token(Token = "0x17000310")]
		protected override string info
		{
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x2B47A4C", Offset = "0x2B47A4C", VA = "0x2B47A4C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x2B47A9C", Offset = "0x2B47A9C", VA = "0x2B47A9C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x2B47CEC", Offset = "0x2B47CEC", VA = "0x2B47CEC")]
		public SendEventToObjects()
		{
		}
	}
	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11578", Offset = "0xE11578")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11578", Offset = "0xE11578")]
	public class SendEventToObjects<T> : ActionTask
	{
		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE212CC", Offset = "0xE212CC")]
		public BBParameter<List<GameObject>> targetObjects;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE212DC", Offset = "0xE212DC")]
		public BBParameter<string> eventName;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> eventValue;

		[Token(Token = "0x17000311")]
		protected override string info
		{
			[Token(Token = "0x600187A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187B")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600187C")]
		public SendEventToObjects()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE115D8", Offset = "0xE115D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE115D8", Offset = "0xE115D8")]
	public class ShoutEvent : ActionTask<Transform>
	{
		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE212EC", Offset = "0xE212EC")]
		public BBParameter<string> eventName;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> shoutRange;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> completionTime;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GraphOwner[] owners;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GraphOwner> receivedOwners;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float traveledDistance;

		[Token(Token = "0x17000312")]
		protected override string info
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x2B4F474", Offset = "0x2B4F474", VA = "0x2B4F474", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x2B4F4E0", Offset = "0x2B4F4E0", VA = "0x2B4F4E0", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x2B4F5B0", Offset = "0x2B4F5B0", VA = "0x2B4F5B0", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x2B4F80C", Offset = "0x2B4F80C", VA = "0x2B4F80C", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x2B4F980", Offset = "0x2B4F980", VA = "0x2B4F980")]
		public ShoutEvent()
		{
		}
	}
	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11638", Offset = "0xE11638")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11638", Offset = "0xE11638")]
	public class SwitchBehaviourTree : ActionTask<BehaviourTreeOwner>
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE212FC", Offset = "0xE212FC")]
		public BBParameter<BehaviourTree> behaviourTree;

		[Token(Token = "0x17000313")]
		protected override string info
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x258CF3C", Offset = "0x258CF3C", VA = "0x258CF3C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x258CF8C", Offset = "0x258CF8C", VA = "0x258CF8C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x258D03C", Offset = "0x258D03C", VA = "0x258D03C")]
		public SwitchBehaviourTree()
		{
		}
	}
	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11698", Offset = "0xE11698")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11698", Offset = "0xE11698")]
	public class SwitchFSM : ActionTask<FSMOwner>
	{
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE2130C", Offset = "0xE2130C")]
		public BBParameter<FSM> fsm;

		[Token(Token = "0x17000314")]
		protected override string info
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x258DBA4", Offset = "0x258DBA4", VA = "0x258DBA4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x258DBF4", Offset = "0x258DBF4", VA = "0x258DBF4", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x258DCA4", Offset = "0x258DCA4", VA = "0x258DCA4")]
		public SwitchFSM()
		{
		}
	}
	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE116F8", Offset = "0xE116F8")]
	public class Wait : ActionTask
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<float> waitTime;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CompactStatus finishStatus;

		[Token(Token = "0x17000315")]
		protected override string info
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x2D0E750", Offset = "0x2D0E750", VA = "0x2D0E750", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x2D0E7A0", Offset = "0x2D0E7A0", VA = "0x2D0E7A0", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x2D0E83C", Offset = "0x2D0E83C", VA = "0x2D0E83C")]
		public Wait()
		{
		}
	}
	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11730", Offset = "0xE11730")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11730", Offset = "0xE11730")]
	public class CheckSpeed : ConditionTask<Rigidbody>
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CompareMethod checkType;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<float> value;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE2131C", Offset = "0xE2131C")]
		public float differenceThreshold;

		[Token(Token = "0x17000316")]
		protected override string info
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x22B1514", Offset = "0x22B1514", VA = "0x22B1514", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x22B159C", Offset = "0x22B159C", VA = "0x22B159C", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x22B166C", Offset = "0x22B166C", VA = "0x22B166C")]
		public CheckSpeed()
		{
		}
	}
	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE11790", Offset = "0xE11790")]
	public class ExecuteStaticFunction : ActionTask, ISubParametersContainer
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected ReflectedWrapper functionWrapper;

		[Token(Token = "0x17000317")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x28C9428", Offset = "0x28C9428", VA = "0x28C9428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		protected override string info
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x28C943C", Offset = "0x28C943C", VA = "0x28C943C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x28C9410", Offset = "0x28C9410", VA = "0x28C9410", Slot = "22")]
		private BBParameter[] NodeCanvas.Framework.ISubParametersContainer.GetSubParameters()
		{
			return null;
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x28C9938", Offset = "0x28C9938", VA = "0x28C9938", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x28C99F8", Offset = "0x28C99F8", VA = "0x28C99F8", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x28C9B00", Offset = "0x28C9B00", VA = "0x28C9B00", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x28C9990", Offset = "0x28C9990", VA = "0x28C9990")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x28C9C28", Offset = "0x28C9C28", VA = "0x28C9C28")]
		public ExecuteStaticFunction()
		{
		}
	}
	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE117C8", Offset = "0xE117C8")]
	public class ExecuteStaticFunction_Multiplatform : ActionTask
	{
		[Serializable]
		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE11800", Offset = "0xE11800")]
		private sealed class <>c
		{
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BBObjectParameter, object> <>9__9_0;

			[Token(Token = "0x600189E")]
			[Address(RVA = "0x272ED44", Offset = "0x272ED44", VA = "0x272ED44")]
			public <>c()
			{
			}

			[Token(Token = "0x600189F")]
			[Address(RVA = "0x272ED4C", Offset = "0x272ED4C", VA = "0x272ED4C")]
			internal object <OnExecute>b__9_0(BBObjectParameter p)
			{
				return null;
			}
		}

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SerializedMethodInfo method;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected List<BBObjectParameter> parameters;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[BlackboardOnly]
		protected BBObjectParameter returnValue;

		[Token(Token = "0x17000319")]
		private MethodInfo targetMethod
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0x28C9C30", Offset = "0x28C9C30", VA = "0x28C9C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		protected override string info
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0x28C9C3C", Offset = "0x28C9C3C", VA = "0x28C9C3C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x28CA088", Offset = "0x28CA088", VA = "0x28CA088", Slot = "13")]
		public override void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x28CA3E4", Offset = "0x28CA3E4", VA = "0x28CA3E4", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x28CA498", Offset = "0x28CA498", VA = "0x28CA498", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x28CA0D0", Offset = "0x28CA0D0", VA = "0x28CA0D0")]
		private void SetMethod(MethodInfo method)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x28CA658", Offset = "0x28CA658", VA = "0x28CA658")]
		public ExecuteStaticFunction_Multiplatform()
		{
		}
	}
}
namespace NodeCanvas.StateMachines
{
	[Token(Token = "0x200051E")]
	[GraphInfo]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE11810", Offset = "0xE11810")]
	public class FSM : Graph
	{
		[Token(Token = "0x200051F")]
		public enum TransitionCallMode
		{
			[Token(Token = "0x400136C")]
			Normal,
			[Token(Token = "0x400136D")]
			Stacked,
			[Token(Token = "0x400136E")]
			Clean
		}

		[Serializable]
		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE118DC", Offset = "0xE118DC")]
		private sealed class <>c
		{
			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUpdatable, bool> <>9__42_0;

			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Node, bool> <>9__46_0;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Node, string> <>9__46_1;

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x272F99C", Offset = "0x272F99C", VA = "0x272F99C")]
			public <>c()
			{
			}

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x272F9A4", Offset = "0x272F9A4", VA = "0x272F9A4")]
			internal bool <OnGraphUpdate>b__42_0(IUpdatable n)
			{
				return default(bool);
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x272FA5C", Offset = "0x272FA5C", VA = "0x272FA5C")]
			internal bool <GetStateNames>b__46_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x272FAD8", Offset = "0x272FAD8", VA = "0x272FAD8")]
			internal string <GetStateNames>b__46_1(Node n)
			{
				return null;
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE118EC", Offset = "0xE118EC")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x272FAF8", Offset = "0x272FAF8", VA = "0x272FAF8")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x272FB00", Offset = "0x272FB00", VA = "0x272FB00")]
			internal bool <GetStateWithName>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<IUpdatable> updatableNodes;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IStateCallbackReceiver[] callbackReceivers;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Stack<FSMState> stateStack;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE213E0", Offset = "0xE213E0")]
		private FSMState <currentState>k__BackingField;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE213F0", Offset = "0xE213F0")]
		private FSMState <previousState>k__BackingField;

		[Token(Token = "0x1700031B")]
		public FSMState currentState
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x2922E54", Offset = "0x2922E54", VA = "0x2922E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29774", Offset = "0xE29774")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x2922E5C", Offset = "0x2922E5C", VA = "0x2922E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29784", Offset = "0xE29784")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public FSMState previousState
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x2922E64", Offset = "0x2922E64", VA = "0x2922E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29794", Offset = "0xE29794")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x2922E6C", Offset = "0x2922E6C", VA = "0x2922E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE297A4", Offset = "0xE297A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public string currentStateName
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x2922E74", Offset = "0x2922E74", VA = "0x2922E74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public string previousStateName
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x2922E8C", Offset = "0x2922E8C", VA = "0x2922E8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public override Type baseNodeType
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x2922EA4", Offset = "0x2922EA4", VA = "0x2922EA4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public override bool requiresAgent
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x2922F1C", Offset = "0x2922F1C", VA = "0x2922F1C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000321")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x2922F24", Offset = "0x2922F24", VA = "0x2922F24", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000322")]
		public override bool isTree
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x2922F2C", Offset = "0x2922F2C", VA = "0x2922F2C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000323")]
		public override bool allowBlackboardOverrides
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x2922F34", Offset = "0x2922F34", VA = "0x2922F34", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000324")]
		public sealed override bool canAcceptVariableDrops
		{
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0x2922F3C", Offset = "0x2922F3C", VA = "0x2922F3C", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action<IState> onStateEnter
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x2922954", Offset = "0x2922954", VA = "0x2922954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE296F4", Offset = "0xE296F4")]
			add
			{
			}
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x29229F4", Offset = "0x29229F4", VA = "0x29229F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29704", Offset = "0xE29704")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<IState> onStateUpdate
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x2922A94", Offset = "0x2922A94", VA = "0x2922A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29714", Offset = "0xE29714")]
			add
			{
			}
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x2922B34", Offset = "0x2922B34", VA = "0x2922B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29724", Offset = "0xE29724")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action<IState> onStateExit
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x2922BD4", Offset = "0x2922BD4", VA = "0x2922BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29734", Offset = "0xE29734")]
			add
			{
			}
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x2922C74", Offset = "0x2922C74", VA = "0x2922C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29744", Offset = "0xE29744")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action<IState> onStateTransition
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x2922D14", Offset = "0x2922D14", VA = "0x2922D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29754", Offset = "0xE29754")]
			add
			{
			}
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x2922DB4", Offset = "0x2922DB4", VA = "0x2922DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29764", Offset = "0xE29764")]
			remove
			{
			}
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x2922F44", Offset = "0x2922F44", VA = "0x2922F44", Slot = "22")]
		protected override void OnGraphInitialize()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x2923158", Offset = "0x2923158", VA = "0x2923158", Slot = "23")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x29233DC", Offset = "0x29233DC", VA = "0x29233DC", Slot = "24")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x2923770", Offset = "0x2923770", VA = "0x2923770", Slot = "25")]
		protected override void OnGraphStoped()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x292323C", Offset = "0x292323C", VA = "0x292323C")]
		public bool EnterState(FSMState newState, TransitionCallMode callMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x29237FC", Offset = "0x29237FC", VA = "0x29237FC")]
		public FSMState TriggerState(string stateName, TransitionCallMode callMode)
		{
			return null;
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x292399C", Offset = "0x292399C", VA = "0x292399C")]
		public string[] GetStateNames()
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x2923844", Offset = "0x2923844", VA = "0x2923844")]
		public FSMState GetStateWithName(string name)
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x2923BD4", Offset = "0x2923BD4", VA = "0x2923BD4")]
		private void GatherCallbackReceivers()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x2923D90", Offset = "0x2923D90", VA = "0x2923D90")]
		public FSMState PeekStack()
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x2923E04", Offset = "0x2923E04", VA = "0x2923E04")]
		public FSM()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x2923E0C", Offset = "0x2923E0C", VA = "0x2923E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE297B4", Offset = "0xE297B4")]
		private void <GatherCallbackReceivers>b__48_0(IState x)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x2923F14", Offset = "0x2923F14", VA = "0x2923F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE297C4", Offset = "0xE297C4")]
		private void <GatherCallbackReceivers>b__48_1(IState x)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x2924020", Offset = "0x2924020", VA = "0x2924020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE297D4", Offset = "0xE297D4")]
		private void <GatherCallbackReceivers>b__48_2(IState x)
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class FSMConnection : Connection, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FSM.TransitionCallMode _transitionCallMode;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x17000325")]
		public ConditionTask condition
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x292412C", Offset = "0x292412C", VA = "0x292412C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x2924134", Offset = "0x2924134", VA = "0x2924134")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Task task
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x292413C", Offset = "0x292413C", VA = "0x292413C", Slot = "11")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0x2924144", Offset = "0x2924144", VA = "0x2924144", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public FSM.TransitionCallMode transitionCallMode
		{
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0x29241D8", Offset = "0x29241D8", VA = "0x29241D8")]
			get
			{
				return default(FSM.TransitionCallMode);
			}
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x29241E0", Offset = "0x29241E0", VA = "0x29241E0")]
			private set
			{
			}
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x29241E8", Offset = "0x29241E8", VA = "0x29241E8")]
		public void EnableCondition(Component agent, IBlackboard blackboard)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x29241FC", Offset = "0x29241FC", VA = "0x29241FC")]
		public void DisableCondition()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x2924210", Offset = "0x2924210", VA = "0x2924210")]
		public void PerformTransition()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x29242EC", Offset = "0x29242EC", VA = "0x29242EC")]
		public FSMConnection()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public abstract class FSMNode : Node
	{
		[Token(Token = "0x17000328")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x29242F4", Offset = "0x29242F4", VA = "0x29242F4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public override bool canSelfConnect
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x29242FC", Offset = "0x29242FC", VA = "0x29242FC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		public override int maxInConnections
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x2924304", Offset = "0x2924304", VA = "0x2924304", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032B")]
		public override int maxOutConnections
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x292430C", Offset = "0x292430C", VA = "0x292430C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032C")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x2924314", Offset = "0x2924314", VA = "0x2924314", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x292438C", Offset = "0x292438C", VA = "0x292438C", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700032E")]
		public sealed override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x2924394", Offset = "0x2924394", VA = "0x2924394", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700032F")]
		public FSM FSM
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x292439C", Offset = "0x292439C", VA = "0x292439C", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x2924418", Offset = "0x2924418", VA = "0x2924418")]
		protected FSMNode()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE118FC", Offset = "0xE118FC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE118FC", Offset = "0xE118FC")]
	public abstract class FSMNodeNested<T> : FSMNode, IGraphAssignable<T>, IGraphAssignable, IGraphElement where T : Graph
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<BBMappingParameter> _variablesMap;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21430", Offset = "0xE21430")]
		private T <currentInstance>k__BackingField;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21440", Offset = "0xE21440")]
		private Dictionary<Graph, Graph> <instances>k__BackingField;

		[Token(Token = "0x17000330")]
		public abstract T subGraph
		{
			[Token(Token = "0x60018DC")]
			get;
			[Token(Token = "0x60018DD")]
			set;
		}

		[Token(Token = "0x17000331")]
		public abstract BBParameter subGraphParameter
		{
			[Token(Token = "0x60018DE")]
			get;
		}

		[Token(Token = "0x17000332")]
		public T currentInstance
		{
			[Token(Token = "0x60018DF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE297E4", Offset = "0xE297E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE297F4", Offset = "0xE297F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public Dictionary<Graph, Graph> instances
		{
			[Token(Token = "0x60018E1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29804", Offset = "0xE29804")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29814", Offset = "0xE29814")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public List<BBMappingParameter> variablesMap
		{
			[Token(Token = "0x60018E3")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		private Graph NodeCanvas.Framework.IGraphAssignable.subGraph
		{
			[Token(Token = "0x60018E5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E6")]
			set
			{
			}
		}

		[Token(Token = "0x17000336")]
		private Graph NodeCanvas.Framework.IGraphAssignable.currentInstance
		{
			[Token(Token = "0x60018E7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E8")]
			set
			{
			}
		}

		[Token(Token = "0x60018E9")]
		protected FSMNodeNested()
		{
		}
	}
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1195C", Offset = "0xE1195C")]
	public class FSMOwner : GraphOwner<FSM>
	{
		[Token(Token = "0x17000337")]
		public string currentRootStateName
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x2924420", Offset = "0x2924420", VA = "0x2924420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public string previousRootStateName
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x29244F8", Offset = "0x29244F8", VA = "0x29244F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public string currentDeepStateName
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x29245D0", Offset = "0x29245D0", VA = "0x29245D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public string previousDeepStateName
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x29247F8", Offset = "0x29247F8", VA = "0x29247F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x2924690", Offset = "0x2924690", VA = "0x2924690")]
		public IState GetCurrentState(bool includeSubFSMs = true)
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x29248B8", Offset = "0x29248B8", VA = "0x29248B8")]
		public IState GetPreviousState(bool includeSubFSMs = true)
		{
			return null;
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x2924A9C", Offset = "0x2924A9C", VA = "0x2924A9C")]
		public IState TriggerState(string stateName)
		{
			return null;
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x2924AA4", Offset = "0x2924AA4", VA = "0x2924AA4")]
		public IState TriggerState(string stateName, FSM.TransitionCallMode callMode)
		{
			return null;
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x2924B7C", Offset = "0x2924B7C", VA = "0x2924B7C")]
		public string[] GetStateNames()
		{
			return null;
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x2924C44", Offset = "0x2924C44", VA = "0x2924C44")]
		public FSMOwner()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public abstract class FSMState : FSMNode, IState
	{
		[Token(Token = "0x2000527")]
		public enum TransitionEvaluationMode
		{
			[Token(Token = "0x400137C")]
			CheckContinuously,
			[Token(Token = "0x400137D")]
			CheckAfterStateFinished,
			[Token(Token = "0x400137E")]
			CheckManually
		}

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private TransitionEvaluationMode _transitionEvaluation;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _hasInit;

		[Token(Token = "0x1700033B")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x2924C90", Offset = "0x2924C90", VA = "0x2924C90", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033C")]
		public override bool canSelfConnect
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x2924C98", Offset = "0x2924C98", VA = "0x2924C98", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033D")]
		public override int maxInConnections
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x2924CA0", Offset = "0x2924CA0", VA = "0x2924CA0", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033E")]
		public override int maxOutConnections
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x2924CA8", Offset = "0x2924CA8", VA = "0x2924CA8", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033F")]
		public TransitionEvaluationMode transitionEvaluation
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x2924CB0", Offset = "0x2924CB0", VA = "0x2924CB0")]
			get
			{
				return default(TransitionEvaluationMode);
			}
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x2924CB8", Offset = "0x2924CB8", VA = "0x2924CB8")]
			set
			{
			}
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x2924CC0", Offset = "0x2924CC0", VA = "0x2924CC0", Slot = "45")]
		public FSMConnection[] GetTransitions()
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x2924E64", Offset = "0x2924E64", VA = "0x2924E64")]
		public void Finish()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x2924E78", Offset = "0x2924E78", VA = "0x2924E78", Slot = "47")]
		public void Finish(bool inSuccess)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x2924E70", Offset = "0x2924E70", VA = "0x2924E70")]
		public void Finish(Status status)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x2924E94", Offset = "0x2924E94", VA = "0x2924E94", Slot = "38")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x2924EB4", Offset = "0x2924EB4", VA = "0x2924EB4", Slot = "22")]
		protected override bool CanConnectFromSource(Node sourceNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x2924ED4", Offset = "0x2924ED4", VA = "0x2924ED4", Slot = "21")]
		protected override bool CanConnectToTarget(Node targetNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x2924EF4", Offset = "0x2924EF4", VA = "0x2924EF4", Slot = "24")]
		protected sealed override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x29236F4", Offset = "0x29236F4", VA = "0x29236F4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x2925050", Offset = "0x2925050", VA = "0x2925050", Slot = "46")]
		public bool CheckTransitions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x2925210", Offset = "0x2925210", VA = "0x2925210", Slot = "25")]
		protected sealed override void OnReset()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x292530C", Offset = "0x292530C", VA = "0x292530C", Slot = "48")]
		protected virtual void OnInit()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x2925310", Offset = "0x2925310", VA = "0x2925310", Slot = "49")]
		protected virtual void OnEnter()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x2925314", Offset = "0x2925314", VA = "0x2925314", Slot = "50")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x2925318", Offset = "0x2925318", VA = "0x2925318", Slot = "51")]
		protected virtual void OnExit()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x292531C", Offset = "0x292531C", VA = "0x292531C", Slot = "52")]
		protected virtual void OnPause()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x2925320", Offset = "0x2925320", VA = "0x2925320")]
		protected FSMState()
		{
		}
	}
	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11994", Offset = "0xE11994")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11994", Offset = "0xE11994")]
	public abstract class FSMStateNested<T> : FSMState, IGraphAssignable<T>, IGraphAssignable, IGraphElement where T : Graph
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<BBMappingParameter> _variablesMap;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21470", Offset = "0xE21470")]
		private T <currentInstance>k__BackingField;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21480", Offset = "0xE21480")]
		private Dictionary<Graph, Graph> <instances>k__BackingField;

		[Token(Token = "0x17000340")]
		public abstract T subGraph
		{
			[Token(Token = "0x600190B")]
			get;
			[Token(Token = "0x600190C")]
			set;
		}

		[Token(Token = "0x17000341")]
		public abstract BBParameter subGraphParameter
		{
			[Token(Token = "0x600190D")]
			get;
		}

		[Token(Token = "0x17000342")]
		public T currentInstance
		{
			[Token(Token = "0x600190E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29824", Offset = "0xE29824")]
			get
			{
				return null;
			}
			[Token(Token = "0x600190F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29834", Offset = "0xE29834")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public Dictionary<Graph, Graph> instances
		{
			[Token(Token = "0x6001910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29844", Offset = "0xE29844")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001911")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29854", Offset = "0xE29854")]
			set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public List<BBMappingParameter> variablesMap
		{
			[Token(Token = "0x6001912")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001913")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		private Graph NodeCanvas.Framework.IGraphAssignable.subGraph
		{
			[Token(Token = "0x6001914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001915")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		private Graph NodeCanvas.Framework.IGraphAssignable.currentInstance
		{
			[Token(Token = "0x6001916")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001917")]
			set
			{
			}
		}

		[Token(Token = "0x6001918")]
		protected FSMStateNested()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public interface IState
	{
		[Token(Token = "0x17000347")]
		string name
		{
			[Token(Token = "0x6001919")]
			get;
		}

		[Token(Token = "0x17000348")]
		string tag
		{
			[Token(Token = "0x600191A")]
			get;
		}

		[Token(Token = "0x17000349")]
		float elapsedTime
		{
			[Token(Token = "0x600191B")]
			get;
		}

		[Token(Token = "0x1700034A")]
		FSM FSM
		{
			[Token(Token = "0x600191C")]
			get;
		}

		[Token(Token = "0x600191D")]
		FSMConnection[] GetTransitions();

		[Token(Token = "0x600191E")]
		bool CheckTransitions();

		[Token(Token = "0x600191F")]
		void Finish(bool success);
	}
	[Token(Token = "0x200052A")]
	public interface IStateCallbackReceiver
	{
		[Token(Token = "0x6001920")]
		void OnStateEnter(IState state);

		[Token(Token = "0x6001921")]
		void OnStateUpdate(IState state);

		[Token(Token = "0x6001922")]
		void OnStateExit(IState state);
	}
	[Token(Token = "0x200052B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE119F4", Offset = "0xE119F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE119F4", Offset = "0xE119F4")]
	public class ActionState : FSMState, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionList _actionList;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _repeatStateActions;

		[Token(Token = "0x1700034B")]
		public Task task
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x2A9E934", Offset = "0x2A9E934", VA = "0x2A9E934", Slot = "53")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x2A9E93C", Offset = "0x2A9E93C", VA = "0x2A9E93C", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public ActionList actionList
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x2A9E9D0", Offset = "0x2A9E9D0", VA = "0x2A9E9D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x2A9E9D8", Offset = "0x2A9E9D8", VA = "0x2A9E9D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public bool repeatStateActions
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x2A9E9E0", Offset = "0x2A9E9E0", VA = "0x2A9E9E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001928")]
			[Address(RVA = "0x2A9E9E8", Offset = "0x2A9E9E8", VA = "0x2A9E9E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x2A9E9F4", Offset = "0x2A9E9F4", VA = "0x2A9E9F4", Slot = "27")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x2A9EB08", Offset = "0x2A9EB08", VA = "0x2A9EB08", Slot = "49")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x2A9EB18", Offset = "0x2A9EB18", VA = "0x2A9EB18", Slot = "50")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x2A9EB9C", Offset = "0x2A9EB9C", VA = "0x2A9EB9C", Slot = "51")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x2A9EBB8", Offset = "0x2A9EBB8", VA = "0x2A9EBB8", Slot = "52")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x2A9EBF4", Offset = "0x2A9EBF4", VA = "0x2A9EBF4")]
		public ActionState()
		{
		}
	}
	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11A58", Offset = "0xE11A58")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11A58", Offset = "0xE11A58")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11A58", Offset = "0xE11A58")]
	public class AnyState : FSMNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool dontRetriggerStates;

		[Token(Token = "0x1700034E")]
		public override string name
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x2AA6DE0", Offset = "0x2AA6DE0", VA = "0x2AA6DE0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x2AA6E24", Offset = "0x2AA6E24", VA = "0x2AA6E24", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000350")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x2AA6E2C", Offset = "0x2AA6E2C", VA = "0x2AA6E2C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000351")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x2AA6E34", Offset = "0x2AA6E34", VA = "0x2AA6E34", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x2AA6E3C", Offset = "0x2AA6E3C", VA = "0x2AA6E3C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x2AA6F7C", Offset = "0x2AA6F7C", VA = "0x2AA6F7C", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x2AA7090", Offset = "0x2AA7090", VA = "0x2AA7090", Slot = "41")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x2AA72EC", Offset = "0x2AA72EC", VA = "0x2AA72EC")]
		public AnyState()
		{
		}
	}
	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11AE0", Offset = "0xE11AE0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11AE0", Offset = "0xE11AE0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11AE0", Offset = "0xE11AE0")]
	public class ConcurrentState : FSMNode, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionList _conditionList;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionList _actionList;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _repeatStateActions;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool accessed;

		[Token(Token = "0x17000352")]
		public ConditionList conditionList
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x22B7F54", Offset = "0x22B7F54", VA = "0x22B7F54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x22B7F5C", Offset = "0x22B7F5C", VA = "0x22B7F5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public ActionList actionList
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x22B7F64", Offset = "0x22B7F64", VA = "0x22B7F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x22B7F6C", Offset = "0x22B7F6C", VA = "0x22B7F6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public bool repeatStateActions
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x22B7F74", Offset = "0x22B7F74", VA = "0x22B7F74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x22B7F7C", Offset = "0x22B7F7C", VA = "0x22B7F7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public override string name
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x22B7F88", Offset = "0x22B7F88", VA = "0x22B7F88", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public override int maxInConnections
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x22B7FAC", Offset = "0x22B7FAC", VA = "0x22B7FAC", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000357")]
		public override int maxOutConnections
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x22B7FB4", Offset = "0x22B7FB4", VA = "0x22B7FB4", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000358")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x22B7FBC", Offset = "0x22B7FBC", VA = "0x22B7FBC", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x22B7FC4", Offset = "0x22B7FC4", VA = "0x22B7FC4", Slot = "27")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x22B8198", Offset = "0x22B8198", VA = "0x22B8198", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x22B8274", Offset = "0x22B8274", VA = "0x22B8274", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x22B8308", Offset = "0x22B8308", VA = "0x22B8308", Slot = "38")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x22B8324", Offset = "0x22B8324", VA = "0x22B8324", Slot = "41")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x22B8538", Offset = "0x22B8538", VA = "0x22B8538")]
		public ConcurrentState()
		{
		}
	}
	[Token(Token = "0x200052E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11B68", Offset = "0xE11B68")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11B68", Offset = "0xE11B68")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11B68", Offset = "0xE11B68")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11B68", Offset = "0xE11B68")]
	public class ConcurrentSubFSM : FSMNodeNested<FSM>, IUpdatable, IGraphElement
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE214E0", Offset = "0xE214E0")]
		[SerializeField]
		[ExposeField]
		protected BBParameter<FSM> _subFSM;

		[Token(Token = "0x17000359")]
		public override string name
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0x22B8540", Offset = "0x22B8540", VA = "0x22B8540", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x22B8564", Offset = "0x22B8564", VA = "0x22B8564", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035B")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0x22B856C", Offset = "0x22B856C", VA = "0x22B856C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035C")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x22B8574", Offset = "0x22B8574", VA = "0x22B8574", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035D")]
		public override FSM subGraph
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x22B857C", Offset = "0x22B857C", VA = "0x22B857C", Slot = "54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x22B85D0", Offset = "0x22B85D0", VA = "0x22B85D0", Slot = "55")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x22B8634", Offset = "0x22B8634", VA = "0x22B8634", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x22B863C", Offset = "0x22B863C", VA = "0x22B863C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x22B876C", Offset = "0x22B876C", VA = "0x22B876C", Slot = "57")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x22B8774", Offset = "0x22B8774", VA = "0x22B8774")]
		public ConcurrentSubFSM()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x22B87C0", Offset = "0x22B87C0", VA = "0x22B87C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29864", Offset = "0xE29864")]
		private void <OnGraphStarted>b__14_0(bool result)
		{
		}
	}
	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11C14", Offset = "0xE11C14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11C14", Offset = "0xE11C14")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE11C14", Offset = "0xE11C14")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11C14", Offset = "0xE11C14")]
	public class ConcurrentSubTree : FSMNodeNested<BehaviourTree>, IUpdatable, IGraphElement
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21540", Offset = "0xE21540")]
		[ExposeField]
		[SerializeField]
		protected BBParameter<BehaviourTree> _subTree;

		[Token(Token = "0x1700035F")]
		public override string name
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x22B87DC", Offset = "0x22B87DC", VA = "0x22B87DC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x22B8800", Offset = "0x22B8800", VA = "0x22B8800", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000361")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x22B8808", Offset = "0x22B8808", VA = "0x22B8808", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000362")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x22B8810", Offset = "0x22B8810", VA = "0x22B8810", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000363")]
		public override BehaviourTree subGraph
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x22B8818", Offset = "0x22B8818", VA = "0x22B8818", Slot = "54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001957")]
			[Address(RVA = "0x22B886C", Offset = "0x22B886C", VA = "0x22B886C", Slot = "55")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0x22B88D0", Offset = "0x22B88D0", VA = "0x22B88D0", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x22B88D8", Offset = "0x22B88D8", VA = "0x22B88D8", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x22B8A08", Offset = "0x22B8A08", VA = "0x22B8A08", Slot = "57")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x22B8A10", Offset = "0x22B8A10", VA = "0x22B8A10")]
		public ConcurrentSubTree()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x22B8A5C", Offset = "0x22B8A5C", VA = "0x22B8A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29874", Offset = "0xE29874")]
		private void <OnGraphStarted>b__14_0(bool result)
		{
		}
	}
	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11CC0", Offset = "0xE11CC0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11CC0", Offset = "0xE11CC0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11CC0", Offset = "0xE11CC0")]
	public class EmptyState : FSMState
	{
		[Token(Token = "0x17000365")]
		public override string name
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x28BF4BC", Offset = "0x28BF4BC", VA = "0x28BF4BC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x28BF4E0", Offset = "0x28BF4E0", VA = "0x28BF4E0", Slot = "49")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x28BF50C", Offset = "0x28BF50C", VA = "0x28BF50C")]
		public EmptyState()
		{
		}
	}
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11D48", Offset = "0xE11D48")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11D48", Offset = "0xE11D48")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE11D48", Offset = "0xE11D48")]
	public class EnterExitState : FSMNode
	{
		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ActionList _actionListEnter;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionList _actionListExit;

		[Token(Token = "0x17000366")]
		public ActionList actionListEnter
		{
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x28BF5F0", Offset = "0x28BF5F0", VA = "0x28BF5F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001961")]
			[Address(RVA = "0x28BF5F8", Offset = "0x28BF5F8", VA = "0x28BF5F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public ActionList actionListExit
		{
			[Token(Token = "0x6001962")]
			[Address(RVA = "0x28BF600", Offset = "0x28BF600", VA = "0x28BF600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x28BF608", Offset = "0x28BF608", VA = "0x28BF608")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public override string name
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x28BF610", Offset = "0x28BF610", VA = "0x28BF610", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0x28BF634", Offset = "0x28BF634", VA = "0x28BF634", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036A")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x28BF63C", Offset = "0x28BF63C", VA = "0x28BF63C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036B")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x28BF644", Offset = "0x28BF644", VA = "0x28BF644", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x28BF64C", Offset = "0x28BF64C", VA = "0x28BF64C", Slot = "27")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x28BF80C", Offset = "0x28BF80C", VA = "0x28BF80C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x28BF878", Offset = "0x28BF878", VA = "0x28BF878", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x28BF8E4", Offset = "0x28BF8E4", VA = "0x28BF8E4")]
		public EnterExitState()
		{
		}
	}
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE11DD0", Offset = "0xE11DD0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11DD0", Offset = "0xE11DD0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11DD0", Offset = "0xE11DD0")]
	public class NestedBTState : FSMStateNested<BehaviourTree>
	{
		[Token(Token = "0x2000533")]
		public enum BTExecutionMode
		{
			[Token(Token = "0x4001393")]
			Once,
			[Token(Token = "0x4001394")]
			Repeat
		}

		[Token(Token = "0x2000534")]
		public enum BTExitMode
		{
			[Token(Token = "0x4001396")]
			StopAndRestart,
			[Token(Token = "0x4001397")]
			PauseAndResume
		}

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE215C0", Offset = "0xE215C0")]
		[ExposeField]
		[SerializeField]
		private BBParameter<BehaviourTree> _nestedBT;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BTExitMode exitMode;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public BTExecutionMode executionMode;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "DimIfDefaultAttribute", RVA = "0xE21620", Offset = "0xE21620")]
		public string successEvent;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "DimIfDefaultAttribute", RVA = "0xE21630", Offset = "0xE21630")]
		public string failureEvent;

		[Token(Token = "0x1700036C")]
		public override BehaviourTree subGraph
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x269C1EC", Offset = "0x269C1EC", VA = "0x269C1EC", Slot = "66")]
			get
			{
				return null;
			}
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x269C240", Offset = "0x269C240", VA = "0x269C240", Slot = "67")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0x269C2A4", Offset = "0x269C2A4", VA = "0x269C2A4", Slot = "68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x269C2AC", Offset = "0x269C2AC", VA = "0x269C2AC", Slot = "49")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x269C54C", Offset = "0x269C54C", VA = "0x269C54C", Slot = "50")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x269C60C", Offset = "0x269C60C", VA = "0x269C60C")]
		private void OnFinish(bool success)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x269C6B4", Offset = "0x269C6B4", VA = "0x269C6B4", Slot = "51")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x269C784", Offset = "0x269C784", VA = "0x269C784")]
		public NestedBTState()
		{
		}
	}
	[Token(Token = "0x2000535")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE11E7C", Offset = "0xE11E7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11E7C", Offset = "0xE11E7C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11E7C", Offset = "0xE11E7C")]
	public class NestedDTState : FSMStateNested<DialogueTree>
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[ExposeField]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21640", Offset = "0xE21640")]
		private BBParameter<DialogueTree> _nestedDLG;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "DimIfDefaultAttribute", RVA = "0xE216A0", Offset = "0xE216A0")]
		public string successEvent;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "DimIfDefaultAttribute", RVA = "0xE216B0", Offset = "0xE216B0")]
		public string failureEvent;

		[Token(Token = "0x1700036E")]
		public override DialogueTree subGraph
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0x269CB2C", Offset = "0x269CB2C", VA = "0x269CB2C", Slot = "66")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001975")]
			[Address(RVA = "0x269CB80", Offset = "0x269CB80", VA = "0x269CB80", Slot = "67")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0x269CBE4", Offset = "0x269CBE4", VA = "0x269CBE4", Slot = "68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x269CBEC", Offset = "0x269CBEC", VA = "0x269CBEC", Slot = "49")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x269CDA0", Offset = "0x269CDA0", VA = "0x269CDA0", Slot = "50")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x269CDF8", Offset = "0x269CDF8", VA = "0x269CDF8", Slot = "51")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x269CE98", Offset = "0x269CE98", VA = "0x269CE98")]
		private void OnDialogueFinished(bool success)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x269CF14", Offset = "0x269CF14", VA = "0x269CF14")]
		public NestedDTState()
		{
		}
	}
	[Token(Token = "0x2000536")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11F28", Offset = "0xE11F28")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11F28", Offset = "0xE11F28")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE11F28", Offset = "0xE11F28")]
	public class NestedFSMState : FSMStateNested<FSM>
	{
		[Token(Token = "0x2000537")]
		public enum FSMExitMode
		{
			[Token(Token = "0x400139E")]
			StopAndRestart,
			[Token(Token = "0x400139F")]
			PauseAndResume
		}

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE216C0", Offset = "0xE216C0")]
		[ExposeField]
		[SerializeField]
		protected BBParameter<FSM> _nestedFSM;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSMExitMode exitMode;

		[Token(Token = "0x17000370")]
		public override FSM subGraph
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x269D350", Offset = "0x269D350", VA = "0x269D350", Slot = "66")]
			get
			{
				return null;
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x269D3A4", Offset = "0x269D3A4", VA = "0x269D3A4", Slot = "67")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0x269D408", Offset = "0x269D408", VA = "0x269D408", Slot = "68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x269D410", Offset = "0x269D410", VA = "0x269D410", Slot = "49")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x269D53C", Offset = "0x269D53C", VA = "0x269D53C", Slot = "50")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x269D594", Offset = "0x269D594", VA = "0x269D594", Slot = "51")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x269D664", Offset = "0x269D664", VA = "0x269D664")]
		public NestedFSMState()
		{
		}
	}
	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE11FD4", Offset = "0xE11FD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE11FD4", Offset = "0xE11FD4")]
	public class SuperActionState : FSMState
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionList _onEnterList;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ActionList _onUpdateList;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ActionList _onExitList;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool enterListFinished;

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x258C3DC", Offset = "0x258C3DC", VA = "0x258C3DC", Slot = "27")]
		public override void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x258C874", Offset = "0x258C874", VA = "0x258C874", Slot = "49")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x258C888", Offset = "0x258C888", VA = "0x258C888", Slot = "50")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x258C97C", Offset = "0x258C97C", VA = "0x258C97C", Slot = "51")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x258CA14", Offset = "0x258CA14", VA = "0x258CA14", Slot = "52")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x258CA50", Offset = "0x258CA50", VA = "0x258CA50")]
		public SuperActionState()
		{
		}
	}
}
namespace NodeCanvas.DialogueTrees
{
	[Token(Token = "0x2000539")]
	public class DTConnection : Connection
	{
		[Token(Token = "0x6001989")]
		[Address(RVA = "0x28389C0", Offset = "0x28389C0", VA = "0x28389C0")]
		public DTConnection()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public abstract class DTNode : Node
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string _actorName;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _actorParameterID;

		[Token(Token = "0x17000372")]
		public override string name
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x28389C8", Offset = "0x28389C8", VA = "0x28389C8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public virtual bool requireActorSelection
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x2838D08", Offset = "0x2838D08", VA = "0x2838D08", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000374")]
		public override int maxInConnections
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x2838D10", Offset = "0x2838D10", VA = "0x2838D10", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000375")]
		public override int maxOutConnections
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x2838D18", Offset = "0x2838D18", VA = "0x2838D18", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000376")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x2838D20", Offset = "0x2838D20", VA = "0x2838D20", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public sealed override bool allowAsPrime
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x2838D98", Offset = "0x2838D98", VA = "0x2838D98", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000378")]
		public sealed override bool canSelfConnect
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x2838DA0", Offset = "0x2838DA0", VA = "0x2838DA0", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000379")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x2838DA8", Offset = "0x2838DA8", VA = "0x2838DA8", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700037A")]
		public sealed override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x2838DB0", Offset = "0x2838DB0", VA = "0x2838DB0", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700037B")]
		protected DialogueTree DLGTree
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x2838ABC", Offset = "0x2838ABC", VA = "0x2838ABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public string actorName
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x2838CC4", Offset = "0x2838CC4", VA = "0x2838CC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x2838EB4", Offset = "0x2838EB4", VA = "0x2838EB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public IDialogueActor finalActor
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x283904C", Offset = "0x283904C", VA = "0x283904C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x2839388", Offset = "0x2839388", VA = "0x2839388")]
		protected DTNode()
		{
		}
	}
	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12038", Offset = "0xE12038")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12038", Offset = "0xE12038")]
	public abstract class DTNodeNested<T> : DTNode, IGraphAssignable<T>, IGraphAssignable, IGraphElement where T : Graph
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<BBMappingParameter> _variablesMap;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21780", Offset = "0xE21780")]
		private T <currentInstance>k__BackingField;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21790", Offset = "0xE21790")]
		private Dictionary<Graph, Graph> <instances>k__BackingField;

		[Token(Token = "0x1700037E")]
		public abstract T subGraph
		{
			[Token(Token = "0x6001998")]
			get;
			[Token(Token = "0x6001999")]
			set;
		}

		[Token(Token = "0x1700037F")]
		public abstract BBParameter subGraphParameter
		{
			[Token(Token = "0x600199A")]
			get;
		}

		[Token(Token = "0x17000380")]
		public T currentInstance
		{
			[Token(Token = "0x600199B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29884", Offset = "0xE29884")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29894", Offset = "0xE29894")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public Dictionary<Graph, Graph> instances
		{
			[Token(Token = "0x600199D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298A4", Offset = "0xE298A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298B4", Offset = "0xE298B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public List<BBMappingParameter> variablesMap
		{
			[Token(Token = "0x600199F")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		private Graph NodeCanvas.Framework.IGraphAssignable.subGraph
		{
			[Token(Token = "0x60019A1")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A2")]
			set
			{
			}
		}

		[Token(Token = "0x17000384")]
		private Graph NodeCanvas.Framework.IGraphAssignable.currentInstance
		{
			[Token(Token = "0x60019A3")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A4")]
			set
			{
			}
		}

		[Token(Token = "0x60019A5")]
		protected DTNodeNested()
		{
		}
	}
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE12098", Offset = "0xE12098")]
	public class DialogueActor : MonoBehaviour, IDialogueActor
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Texture2D _portrait;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Color _dialogueColor;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Vector3 _dialogueOffset;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Sprite _portraitSprite;

		[Token(Token = "0x17000385")]
		public new string name
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x283B624", Offset = "0x283B624", VA = "0x283B624", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public Texture2D portrait
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x283B62C", Offset = "0x283B62C", VA = "0x283B62C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public Sprite portraitSprite
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x283B634", Offset = "0x283B634", VA = "0x283B634", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public Color dialogueColor
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x283B774", Offset = "0x283B774", VA = "0x283B774", Slot = "7")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000389")]
		public Vector3 dialoguePosition
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x283B780", Offset = "0x283B780", VA = "0x283B780", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x283B7B8", Offset = "0x283B7B8", VA = "0x283B7B8")]
		public DialogueActor()
		{
		}

		[SpecialName]
		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x283B7EC", Offset = "0x283B7EC", VA = "0x283B7EC", Slot = "9")]
		private Transform NodeCanvas.DialogueTrees.IDialogueActor.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x200053D")]
	public class SubtitlesRequestInfo
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDialogueActor actor;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IStatement statement;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action Continue;

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x25886F4", Offset = "0x25886F4", VA = "0x25886F4")]
		public SubtitlesRequestInfo(IDialogueActor actor, IStatement statement, Action callback)
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class MultipleChoiceRequestInfo
	{
		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDialogueActor actor;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<IStatement, int> options;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float availableTime;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool showLastStatement;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<int> SelectOption;

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x269B1C0", Offset = "0x269B1C0", VA = "0x269B1C0")]
		public MultipleChoiceRequestInfo(IDialogueActor actor, Dictionary<IStatement, int> options, float availableTime, bool showLastStatement, Action<int> callback)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x269AE5C", Offset = "0x269AE5C", VA = "0x269AE5C")]
		public MultipleChoiceRequestInfo(IDialogueActor actor, Dictionary<IStatement, int> options, float availableTime, Action<int> callback)
		{
		}
	}
	[Token(Token = "0x200053F")]
	[GraphInfo]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE120D0", Offset = "0xE120D0")]
	public class DialogueTree : Graph
	{
		[Serializable]
		[Token(Token = "0x2000540")]
		private class DerivedSerializationData
		{
			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ActorParameter> actorParameters;

			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x272C67C", Offset = "0x272C67C", VA = "0x272C67C")]
			public DerivedSerializationData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000541")]
		public class ActorParameter
		{
			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _keyName;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string _id;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private UnityEngine.Object _actorObject;

			[NonSerialized]
			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IDialogueActor _actor;

			[Token(Token = "0x17000394")]
			public string name
			{
				[Token(Token = "0x60019DA")]
				[Address(RVA = "0x272C4CC", Offset = "0x272C4CC", VA = "0x272C4CC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019DB")]
				[Address(RVA = "0x272C4D4", Offset = "0x272C4D4", VA = "0x272C4D4")]
				set
				{
				}
			}

			[Token(Token = "0x17000395")]
			public string ID
			{
				[Token(Token = "0x60019DC")]
				[Address(RVA = "0x272C334", Offset = "0x272C334", VA = "0x272C334")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			public IDialogueActor actor
			{
				[Token(Token = "0x60019DD")]
				[Address(RVA = "0x272C4DC", Offset = "0x272C4DC", VA = "0x272C4DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019DE")]
				[Address(RVA = "0x272C54C", Offset = "0x272C54C", VA = "0x272C54C")]
				set
				{
				}
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x272C5EC", Offset = "0x272C5EC", VA = "0x272C5EC")]
			public ActorParameter()
			{
			}

			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x272C5F4", Offset = "0x272C5F4", VA = "0x272C5F4")]
			public ActorParameter(string name)
			{
			}

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x272C628", Offset = "0x272C628", VA = "0x272C628")]
			public ActorParameter(string name, IDialogueActor actor)
			{
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x272C674", Offset = "0x272C674", VA = "0x272C674", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1219C", Offset = "0xE1219C")]
		private sealed class <>c
		{
			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ActorParameter, string> <>9__46_0;

			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x272C2D8", Offset = "0x272C2D8", VA = "0x272C2D8")]
			public <>c()
			{
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x272C2E0", Offset = "0x272C2E0", VA = "0x272C2E0")]
			internal string <get_definedActorParameterNames>b__46_0(ActorParameter r)
			{
				return null;
			}
		}

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE121AC", Offset = "0xE121AC")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x272C2F8", Offset = "0x272C2F8", VA = "0x272C2F8")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x272C300", Offset = "0x272C300", VA = "0x272C300")]
			internal bool <GetParameterByID>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE121BC", Offset = "0xE121BC")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string paramName;

			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x272C3E4", Offset = "0x272C3E4", VA = "0x272C3E4")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x272C3EC", Offset = "0x272C3EC", VA = "0x272C3EC")]
			internal bool <GetParameterByName>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE121CC", Offset = "0xE121CC")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string paramName;

			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x272C410", Offset = "0x272C410", VA = "0x272C410")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x272C418", Offset = "0x272C418", VA = "0x272C418")]
			internal bool <GetActorReferenceByName>b__0(ActorParameter r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE121DC", Offset = "0xE121DC")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string paramName;

			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x272C43C", Offset = "0x272C43C", VA = "0x272C43C")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x272C444", Offset = "0x272C444", VA = "0x272C444")]
			internal bool <SetActorReference>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE121EC", Offset = "0xE121EC")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, IDialogueActor> pair;

			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x272C468", Offset = "0x272C468", VA = "0x272C468")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x272C470", Offset = "0x272C470", VA = "0x272C470")]
			internal bool <SetActorReferences>b__0(ActorParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013B6")]
		public const string INSTIGATOR_NAME = "INSTIGATOR";

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public List<ActorParameter> actorParameters;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21840", Offset = "0xE21840")]
		private static DialogueTree <currentDialogue>k__BackingField;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21850", Offset = "0xE21850")]
		private static DialogueTree <previousDialogue>k__BackingField;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21860", Offset = "0xE21860")]
		private DTNode <currentNode>k__BackingField;

		[Token(Token = "0x1700038A")]
		public static DialogueTree currentDialogue
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x283C07C", Offset = "0x283C07C", VA = "0x283C07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29964", Offset = "0xE29964")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x283C0C8", Offset = "0x283C0C8", VA = "0x283C0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29974", Offset = "0xE29974")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public static DialogueTree previousDialogue
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x283C11C", Offset = "0x283C11C", VA = "0x283C11C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29984", Offset = "0xE29984")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x283C168", Offset = "0x283C168", VA = "0x283C168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29994", Offset = "0xE29994")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public DTNode currentNode
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x283C1BC", Offset = "0x283C1BC", VA = "0x283C1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE299A4", Offset = "0xE299A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x283C1C4", Offset = "0x283C1C4", VA = "0x283C1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE299B4", Offset = "0xE299B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public override Type baseNodeType
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x283C1CC", Offset = "0x283C1CC", VA = "0x283C1CC", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		public override bool requiresAgent
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x283C244", Offset = "0x283C244", VA = "0x283C244", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038F")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x283C24C", Offset = "0x283C24C", VA = "0x283C24C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000390")]
		public override bool isTree
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x283C254", Offset = "0x283C254", VA = "0x283C254", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000391")]
		public override bool allowBlackboardOverrides
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x283C25C", Offset = "0x283C25C", VA = "0x283C25C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000392")]
		public sealed override bool canAcceptVariableDrops
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x283C264", Offset = "0x283C264", VA = "0x283C264", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		public List<string> definedActorParameterNames
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x2838B38", Offset = "0x2838B38", VA = "0x2838B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000E")]
		public static event Action<DialogueTree> OnDialogueStarted
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x283B904", Offset = "0x283B904", VA = "0x283B904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298C4", Offset = "0xE298C4")]
			add
			{
			}
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x283B9C0", Offset = "0x283B9C0", VA = "0x283B9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298D4", Offset = "0xE298D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public static event Action<DialogueTree> OnDialoguePaused
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x283BA7C", Offset = "0x283BA7C", VA = "0x283BA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298E4", Offset = "0xE298E4")]
			add
			{
			}
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x283BB3C", Offset = "0x283BB3C", VA = "0x283BB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298F4", Offset = "0xE298F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event Action<DialogueTree> OnDialogueFinished
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x283BBFC", Offset = "0x283BBFC", VA = "0x283BBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29904", Offset = "0xE29904")]
			add
			{
			}
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x283BCBC", Offset = "0x283BCBC", VA = "0x283BCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29914", Offset = "0xE29914")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event Action<SubtitlesRequestInfo> OnSubtitlesRequest
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x283BD7C", Offset = "0x283BD7C", VA = "0x283BD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29924", Offset = "0xE29924")]
			add
			{
			}
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x283BE3C", Offset = "0x283BE3C", VA = "0x283BE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29934", Offset = "0xE29934")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event Action<MultipleChoiceRequestInfo> OnMultipleChoiceRequest
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x283BEFC", Offset = "0x283BEFC", VA = "0x283BEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29944", Offset = "0xE29944")]
			add
			{
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x283BFBC", Offset = "0x283BFBC", VA = "0x283BFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29954", Offset = "0xE29954")]
			remove
			{
			}
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x283B7F4", Offset = "0x283B7F4", VA = "0x283B7F4", Slot = "20")]
		public override object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x283B868", Offset = "0x283B868", VA = "0x283B868", Slot = "21")]
		public override void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x2838DB8", Offset = "0x2838DB8", VA = "0x2838DB8")]
		public ActorParameter GetParameterByID(string id)
		{
			return null;
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x2838F50", Offset = "0x2838F50", VA = "0x2838F50")]
		public ActorParameter GetParameterByName(string paramName)
		{
			return null;
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x283909C", Offset = "0x283909C", VA = "0x283909C")]
		public IDialogueActor GetActorReferenceByID(string id)
		{
			return null;
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x28390D4", Offset = "0x28390D4", VA = "0x28390D4")]
		public IDialogueActor GetActorReferenceByName(string paramName)
		{
			return null;
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x283C26C", Offset = "0x283C26C", VA = "0x283C26C")]
		public void SetActorReference(string paramName, IDialogueActor actor)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x283C38C", Offset = "0x283C38C", VA = "0x283C38C")]
		public void SetActorReferences(Dictionary<string, IDialogueActor> actors)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x283C5C8", Offset = "0x283C5C8", VA = "0x283C5C8")]
		public void Continue(int index = 0)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x283C718", Offset = "0x283C718", VA = "0x283C718")]
		public void EnterNode(DTNode node)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x283C7B4", Offset = "0x283C7B4", VA = "0x283C7B4")]
		public static void RequestSubtitles(SubtitlesRequestInfo info)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x283C830", Offset = "0x283C830", VA = "0x283C830")]
		public static void RequestMultipleChoices(MultipleChoiceRequestInfo info)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x283C8AC", Offset = "0x283C8AC", VA = "0x283C8AC", Slot = "23")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x283CA40", Offset = "0x283CA40", VA = "0x283CA40", Slot = "24")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x283CB28", Offset = "0x283CB28", VA = "0x283CB28", Slot = "25")]
		protected override void OnGraphStoped()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x283CC50", Offset = "0x283CC50", VA = "0x283CC50", Slot = "26")]
		protected override void OnGraphPaused()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x283CCCC", Offset = "0x283CCCC", VA = "0x283CCCC", Slot = "27")]
		protected override void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x283CDC8", Offset = "0x283CDC8", VA = "0x283CDC8")]
		public DialogueTree()
		{
		}
	}
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE121FC", Offset = "0xE121FC")]
	public class DialogueTreeController : GraphOwner<DialogueTree>, IDialogueActor
	{
		[Token(Token = "0x17000397")]
		private string NodeCanvas.DialogueTrees.IDialogueActor.name
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x283CE4C", Offset = "0x283CE4C", VA = "0x283CE4C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		private Texture2D NodeCanvas.DialogueTrees.IDialogueActor.portrait
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x283CE54", Offset = "0x283CE54", VA = "0x283CE54", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private Sprite NodeCanvas.DialogueTrees.IDialogueActor.portraitSprite
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x283CE5C", Offset = "0x283CE5C", VA = "0x283CE5C", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		private Color NodeCanvas.DialogueTrees.IDialogueActor.dialogueColor
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x283CE64", Offset = "0x283CE64", VA = "0x283CE64", Slot = "14")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700039B")]
		private Vector3 NodeCanvas.DialogueTrees.IDialogueActor.dialoguePosition
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x283CE6C", Offset = "0x283CE6C", VA = "0x283CE6C", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700039C")]
		private Transform NodeCanvas.DialogueTrees.IDialogueActor.transform
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x283CE74", Offset = "0x283CE74", VA = "0x283CE74", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x283CE7C", Offset = "0x283CE7C", VA = "0x283CE7C")]
		public void StartDialogue()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x283D000", Offset = "0x283D000", VA = "0x283D000")]
		public void StartDialogue(Action<bool> callback)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x283D00C", Offset = "0x283D00C", VA = "0x283D00C")]
		public void StartDialogue(IDialogueActor instigator)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x283D014", Offset = "0x283D014", VA = "0x283D014")]
		public void StartDialogue(DialogueTree newTree, IDialogueActor instigator, Action<bool> callback)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x283CE88", Offset = "0x283CE88", VA = "0x283CE88")]
		public void StartDialogue(IDialogueActor instigator, Action<bool> callback)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x283D058", Offset = "0x283D058", VA = "0x283D058")]
		public void PauseDialogue()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x283D080", Offset = "0x283D080", VA = "0x283D080")]
		public void StopDialogue()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x283D0AC", Offset = "0x283D0AC", VA = "0x283D0AC")]
		public void SetActorReference(string paramName, IDialogueActor actor)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x283D18C", Offset = "0x283D18C", VA = "0x283D18C")]
		public void SetActorReferences(Dictionary<string, IDialogueActor> actors)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x283D258", Offset = "0x283D258", VA = "0x283D258")]
		public IDialogueActor GetActorReferenceByName(string paramName)
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x283D328", Offset = "0x283D328", VA = "0x283D328")]
		public DialogueTreeController()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public interface IDialogueActor
	{
		[Token(Token = "0x1700039D")]
		string name
		{
			[Token(Token = "0x6001A01")]
			get;
		}

		[Token(Token = "0x1700039E")]
		Texture2D portrait
		{
			[Token(Token = "0x6001A02")]
			get;
		}

		[Token(Token = "0x1700039F")]
		Sprite portraitSprite
		{
			[Token(Token = "0x6001A03")]
			get;
		}

		[Token(Token = "0x170003A0")]
		Color dialogueColor
		{
			[Token(Token = "0x6001A04")]
			get;
		}

		[Token(Token = "0x170003A1")]
		Vector3 dialoguePosition
		{
			[Token(Token = "0x6001A05")]
			get;
		}

		[Token(Token = "0x170003A2")]
		Transform transform
		{
			[Token(Token = "0x6001A06")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x200054A")]
	public class ProxyDialogueActor : IDialogueActor
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _name;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _transform;

		[Token(Token = "0x170003A3")]
		public string name
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0x267FFB4", Offset = "0x267FFB4", VA = "0x267FFB4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public Texture2D portrait
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x267FFBC", Offset = "0x267FFBC", VA = "0x267FFBC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public Sprite portraitSprite
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x267FFC4", Offset = "0x267FFC4", VA = "0x267FFC4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public Color dialogueColor
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x267FFCC", Offset = "0x267FFCC", VA = "0x267FFCC", Slot = "7")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003A7")]
		public Vector3 dialoguePosition
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x267FFD4", Offset = "0x267FFD4", VA = "0x267FFD4", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003A8")]
		public Transform transform
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x267FFDC", Offset = "0x267FFDC", VA = "0x267FFDC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x267FFE4", Offset = "0x267FFE4", VA = "0x267FFE4")]
		public ProxyDialogueActor(string name, Transform transform)
		{
		}
	}
	[Token(Token = "0x200054B")]
	public interface IStatement
	{
		[Token(Token = "0x170003A9")]
		string text
		{
			[Token(Token = "0x6001A0E")]
			get;
		}

		[Token(Token = "0x170003AA")]
		AudioClip audio
		{
			[Token(Token = "0x6001A0F")]
			get;
		}

		[Token(Token = "0x170003AB")]
		string meta
		{
			[Token(Token = "0x6001A10")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x200054C")]
	public class Statement : IStatement
	{
		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE12234", Offset = "0xE12234")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IBlackboard bb;

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x312F430", Offset = "0x312F430", VA = "0x312F430")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x312F438", Offset = "0x312F438", VA = "0x312F438")]
			internal string <BlackboardReplace>b__0(string input)
			{
				return null;
			}
		}

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _text;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _audio;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _meta;

		[Token(Token = "0x170003AC")]
		public string text
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x2588074", Offset = "0x2588074", VA = "0x2588074", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0x258807C", Offset = "0x258807C", VA = "0x258807C")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public AudioClip audio
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x2588084", Offset = "0x2588084", VA = "0x2588084", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x258808C", Offset = "0x258808C", VA = "0x258808C")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public string meta
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x2588094", Offset = "0x2588094", VA = "0x2588094", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x258809C", Offset = "0x258809C", VA = "0x258809C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x25880A4", Offset = "0x25880A4", VA = "0x25880A4")]
		public Statement()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x2588120", Offset = "0x2588120", VA = "0x2588120")]
		public Statement(string text)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x25881BC", Offset = "0x25881BC", VA = "0x25881BC")]
		public Statement(string text, AudioClip audio)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x2588274", Offset = "0x2588274", VA = "0x2588274")]
		public Statement(string text, AudioClip audio, string meta)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x2588344", Offset = "0x2588344", VA = "0x2588344")]
		public IStatement BlackboardReplace(IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x25885F8", Offset = "0x25885F8", VA = "0x25885F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12244", Offset = "0xE12244")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12244", Offset = "0xE12244")]
	public class ActionNode : DTNode, ITaskAssignable<ActionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE122A8", Offset = "0xE122A8")]
		private sealed class <UpdateAction>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionNode <>4__this;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Component actionAgent;

			[Token(Token = "0x170003B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A2D")]
				[Address(RVA = "0x2728CB8", Offset = "0x2728CB8", VA = "0x2728CB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A2F")]
				[Address(RVA = "0x2728D00", Offset = "0x2728D00", VA = "0x2728D00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x2728BD0", Offset = "0x2728BD0", VA = "0x2728BD0")]
			[DebuggerHidden]
			public <UpdateAction>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x2728BFC", Offset = "0x2728BFC", VA = "0x2728BFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x2728C00", Offset = "0x2728C00", VA = "0x2728C00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x2728CC0", Offset = "0x2728CC0", VA = "0x2728CC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ActionTask _action;

		[Token(Token = "0x170003AF")]
		public ActionTask action
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x2A9E34C", Offset = "0x2A9E34C", VA = "0x2A9E34C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x2A9E354", Offset = "0x2A9E354", VA = "0x2A9E354")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public Task task
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x2A9E35C", Offset = "0x2A9E35C", VA = "0x2A9E35C", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x2A9E364", Offset = "0x2A9E364", VA = "0x2A9E364", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x2A9E3F8", Offset = "0x2A9E3F8", VA = "0x2A9E3F8", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x2A9E400", Offset = "0x2A9E400", VA = "0x2A9E400", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x2A9E524", Offset = "0x2A9E524", VA = "0x2A9E524")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE299C4", Offset = "0xE299C4")]
		private IEnumerator UpdateAction(Component actionAgent)
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x2A9E5B8", Offset = "0x2A9E5B8", VA = "0x2A9E5B8")]
		private void OnActionEnd(bool success)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x2A9E638", Offset = "0x2A9E638", VA = "0x2A9E638", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x2A9E64C", Offset = "0x2A9E64C", VA = "0x2A9E64C", Slot = "38")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x2A9E67C", Offset = "0x2A9E67C", VA = "0x2A9E67C")]
		public ActionNode()
		{
		}
	}
	[Token(Token = "0x2000550")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE122B8", Offset = "0xE122B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE122B8", Offset = "0xE122B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE122B8", Offset = "0xE122B8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE122B8", Offset = "0xE122B8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE122B8", Offset = "0xE122B8")]
	public class ConditionNode : DTNode, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x170003B4")]
		public ConditionTask condition
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x22B9694", Offset = "0x22B9694", VA = "0x22B9694")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x22B969C", Offset = "0x22B969C", VA = "0x22B969C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public Task task
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x22B96A4", Offset = "0x22B96A4", VA = "0x22B96A4", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x22B96AC", Offset = "0x22B96AC", VA = "0x22B96AC", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x22B9740", Offset = "0x22B9740", VA = "0x22B9740", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B7")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x22B9748", Offset = "0x22B9748", VA = "0x22B9748", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x22B9750", Offset = "0x22B9750", VA = "0x22B9750", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x22B9930", Offset = "0x22B9930", VA = "0x22B9930")]
		public ConditionNode()
		{
		}
	}
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE123A0", Offset = "0xE123A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE123A0", Offset = "0xE123A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE123A0", Offset = "0xE123A0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE123A0", Offset = "0xE123A0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE123A0", Offset = "0xE123A0")]
	public class FinishNode : DTNode
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public CompactStatus finishState;

		[Token(Token = "0x170003B8")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0x2928158", Offset = "0x2928158", VA = "0x2928158", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B9")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x2928160", Offset = "0x2928160", VA = "0x2928160", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x2928168", Offset = "0x2928168", VA = "0x2928168", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x29281BC", Offset = "0x29281BC", VA = "0x29281BC")]
		public FinishNode()
		{
		}
	}
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12490", Offset = "0xE12490")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12490", Offset = "0xE12490")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12490", Offset = "0xE12490")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12490", Offset = "0xE12490")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12490", Offset = "0xE12490")]
	public class Jumper : DTNode, IHaveNodeReference, IGraphElement
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE218F0", Offset = "0xE218F0")]
		public NodeReference<DTNode> _targetNode;

		[Token(Token = "0x170003BA")]
		private INodeReference NodeCanvas.Framework.IHaveNodeReference.targetReference
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x2E384C8", Offset = "0x2E384C8", VA = "0x2E384C8", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private DTNode target
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x2E384D0", Offset = "0x2E384D0", VA = "0x2E384D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0x2E38528", Offset = "0x2E38528", VA = "0x2E38528", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003BD")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x2E38530", Offset = "0x2E38530", VA = "0x2E38530", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x2E38538", Offset = "0x2E38538", VA = "0x2E38538", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x2E385D4", Offset = "0x2E385D4", VA = "0x2E385D4")]
		public Jumper()
		{
		}
	}
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12580", Offset = "0xE12580")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12580", Offset = "0xE12580")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12580", Offset = "0xE12580")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12580", Offset = "0xE12580")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12580", Offset = "0xE12580")]
	public class MultipleChoiceNode : DTNode
	{
		[Serializable]
		[Token(Token = "0x2000554")]
		public class Choice
		{
			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isUnfolded;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Statement statement;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionTask condition;

			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x2EE2420", Offset = "0x2EE2420", VA = "0x2EE2420")]
			public Choice()
			{
			}

			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x2EE2430", Offset = "0x2EE2430", VA = "0x2EE2430")]
			public Choice(Statement statement)
			{
			}
		}

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE12668", Offset = "0xE12668")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MultipleChoiceNode <>4__this;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x2EE23DC", Offset = "0x2EE23DC", VA = "0x2EE23DC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x2EE23E4", Offset = "0x2EE23E4", VA = "0x2EE23E4")]
			internal void <OnOptionSelected>b__0()
			{
			}
		}

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xE21928", Offset = "0xE21928")]
		public float availableTime;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool saySelection;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AutoSortWithChildrenConnections]
		private List<Choice> availableChoices;

		[Token(Token = "0x170003BE")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0x269A91C", Offset = "0x269A91C", VA = "0x269A91C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003BF")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x269A968", Offset = "0x269A968", VA = "0x269A968", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x269A970", Offset = "0x269A970", VA = "0x269A970", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x269AED0", Offset = "0x269AED0", VA = "0x269AED0")]
		private void OnOptionSelected(int index)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x269B13C", Offset = "0x269B13C", VA = "0x269B13C")]
		public MultipleChoiceNode()
		{
		}
	}
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12678", Offset = "0xE12678")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12678", Offset = "0xE12678")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12678", Offset = "0xE12678")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12678", Offset = "0xE12678")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12678", Offset = "0xE12678")]
	public class MultipleConditionNode : DTNode
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AutoSortWithChildrenConnections]
		private List<ConditionTask> conditions;

		[Token(Token = "0x170003C0")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x269B248", Offset = "0x269B248", VA = "0x269B248", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x269B250", Offset = "0x269B250", VA = "0x269B250", Slot = "31")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x269B2F8", Offset = "0x269B2F8", VA = "0x269B2F8", Slot = "32")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x269B35C", Offset = "0x269B35C", VA = "0x269B35C", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x269B564", Offset = "0x269B564", VA = "0x269B564")]
		public MultipleConditionNode()
		{
		}
	}
	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12768", Offset = "0xE12768")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12768", Offset = "0xE12768")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12768", Offset = "0xE12768")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12768", Offset = "0xE12768")]
	public class ProbabilitySelector : DTNode
	{
		[Token(Token = "0x2000558")]
		public class Option
		{
			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BBParameter<float> weight;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ConditionTask condition;

			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x2EE3F8C", Offset = "0x2EE3F8C", VA = "0x2EE3F8C")]
			public Option(float weightValue, IBlackboard bbValue)
			{
			}
		}

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AutoSortWithChildrenConnections]
		private List<Option> childOptions;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<int> successIndeces;

		[Token(Token = "0x170003C1")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x267F478", Offset = "0x267F478", VA = "0x267F478", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x267F480", Offset = "0x267F480", VA = "0x267F480", Slot = "31")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x267F570", Offset = "0x267F570", VA = "0x267F570", Slot = "32")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x267F5D4", Offset = "0x267F5D4", VA = "0x267F5D4", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x267F8EC", Offset = "0x267F8EC", VA = "0x267F8EC")]
		private float GetTotal()
		{
			return default(float);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x267F9F4", Offset = "0x267F9F4", VA = "0x267F9F4", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x267FA00", Offset = "0x267FA00", VA = "0x267FA00")]
		public ProbabilitySelector()
		{
		}
	}
	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12828", Offset = "0xE12828")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12828", Offset = "0xE12828")]
	public class StatementNode : DTNode
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Statement statement;

		[Token(Token = "0x170003C2")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x2588600", Offset = "0x2588600", VA = "0x2588600", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x2588608", Offset = "0x2588608", VA = "0x2588608", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x2588758", Offset = "0x2588758", VA = "0x2588758")]
		private void OnStatementFinish()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x258879C", Offset = "0x258879C", VA = "0x258879C")]
		public StatementNode()
		{
		}
	}
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE1288C", Offset = "0xE1288C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1288C", Offset = "0xE1288C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1288C", Offset = "0xE1288C")]
	public class SubDialogueTree : DTNodeNested<DialogueTree>, IUpdatable, IGraphElement
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[ExposeField]
		private BBParameter<DialogueTree> _subTree;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE21A30", Offset = "0xE21A30")]
		private Dictionary<string, string> _actorParametersMap;

		[Token(Token = "0x170003C3")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x258B960", Offset = "0x258B960", VA = "0x258B960", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C4")]
		public override DialogueTree subGraph
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x258B968", Offset = "0x258B968", VA = "0x258B968", Slot = "54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x258B9BC", Offset = "0x258B9BC", VA = "0x258B9BC", Slot = "55")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0x258BA20", Offset = "0x258BA20", VA = "0x258BA20", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x258BA28", Offset = "0x258BA28", VA = "0x258BA28", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x258BF90", Offset = "0x258BF90", VA = "0x258BF90")]
		private void OnSubDialogueFinish(bool success)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x258BFEC", Offset = "0x258BFEC", VA = "0x258BFEC", Slot = "57")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x258BDC8", Offset = "0x258BDC8", VA = "0x258BDC8")]
		private void TryWriteMappedActorParameters()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x258C0A0", Offset = "0x258C0A0", VA = "0x258C0A0")]
		public SubDialogueTree()
		{
		}
	}
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE12938", Offset = "0xE12938")]
	public class GoToNode : DTNode
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private DTNode _targetNode;

		[Token(Token = "0x170003C6")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x29C4D38", Offset = "0x29C4D38", VA = "0x29C4D38", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C7")]
		public override bool requireActorSelection
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x29C4D40", Offset = "0x29C4D40", VA = "0x29C4D40", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x29C4D48", Offset = "0x29C4D48", VA = "0x29C4D48", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard bb)
		{
			return default(Status);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x29C4DD0", Offset = "0x29C4DD0", VA = "0x29C4DD0")]
		public GoToNode()
		{
		}
	}
}
namespace NodeCanvas.DialogueTrees.UI.Examples
{
	[Token(Token = "0x200055C")]
	public class DialogueUGUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		public class SubtitleDelays
		{
			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float characterDelay;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float sentenceDelay;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float commaDelay;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float finalDelay;

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x272D724", Offset = "0x272D724", VA = "0x272D724")]
			public SubtitleDelays()
			{
			}
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE12970", Offset = "0xE12970")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool inputDown;

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x272C684", Offset = "0x272C684", VA = "0x272C684")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x272C68C", Offset = "0x272C68C", VA = "0x272C68C")]
			internal void <Internal_OnSubtitlesRequestInfo>b__0()
			{
			}
		}

		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE12980", Offset = "0xE12980")]
		private sealed class <Internal_OnSubtitlesRequestInfo>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubtitlesRequestInfo info;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DialogueUGUI <>4__this;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass25_0 <>8__1;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <text>5__2;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AudioClip <audio>5__3;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AudioSource <playSource>5__4;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timer>5__5;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private string <tempText>5__6;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__7;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private char <c>5__8;

			[Token(Token = "0x170003C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A80")]
				[Address(RVA = "0x272D6D4", Offset = "0x272D6D4", VA = "0x272D6D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A82")]
				[Address(RVA = "0x272D71C", Offset = "0x272D71C", VA = "0x272D71C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x272CB14", Offset = "0x272CB14", VA = "0x272CB14")]
			[DebuggerHidden]
			public <Internal_OnSubtitlesRequestInfo>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x272CB40", Offset = "0x272CB40", VA = "0x272CB40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x272CB44", Offset = "0x272CB44", VA = "0x272CB44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x272D6DC", Offset = "0x272D6DC", VA = "0x272D6DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE12990", Offset = "0xE12990")]
		private sealed class <CheckInput>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action Do;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A86")]
				[Address(RVA = "0x272C7D0", Offset = "0x272C7D0", VA = "0x272C7D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A88")]
				[Address(RVA = "0x272C818", Offset = "0x272C818", VA = "0x272C818", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x272C730", Offset = "0x272C730", VA = "0x272C730")]
			[DebuggerHidden]
			public <CheckInput>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x272C75C", Offset = "0x272C75C", VA = "0x272C75C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x272C760", Offset = "0x272C760", VA = "0x272C760", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x272C7D8", Offset = "0x272C7D8", VA = "0x272C7D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE129A0", Offset = "0xE129A0")]
		private sealed class <DelayPrint>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <timer>5__2;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A8C")]
				[Address(RVA = "0x272CAC4", Offset = "0x272CAC4", VA = "0x272CAC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A8E")]
				[Address(RVA = "0x272CB0C", Offset = "0x272CB0C", VA = "0x272CB0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x272CA04", Offset = "0x272CA04", VA = "0x272CA04")]
			[DebuggerHidden]
			public <DelayPrint>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x272CA30", Offset = "0x272CA30", VA = "0x272CA30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x272CA34", Offset = "0x272CA34", VA = "0x272CA34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x272CACC", Offset = "0x272CACC", VA = "0x272CACC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE129B0", Offset = "0xE129B0")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueUGUI <>4__this;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultipleChoiceRequestInfo info;

			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x272C698", Offset = "0x272C698", VA = "0x272C698")]
			public <>c__DisplayClass29_0()
			{
			}
		}

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE129C0", Offset = "0xE129C0")]
		private sealed class <>c__DisplayClass29_1
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button btn;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass29_0 CS$<>8__locals1;

			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x272C6A0", Offset = "0x272C6A0", VA = "0x272C6A0")]
			public <>c__DisplayClass29_1()
			{
			}

			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x272C6A8", Offset = "0x272C6A8", VA = "0x272C6A8")]
			internal void <OnMultipleChoiceRequest>b__0()
			{
			}
		}

		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE129D0", Offset = "0xE129D0")]
		private sealed class <CountDown>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DialogueUGUI <>4__this;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultipleChoiceRequestInfo info;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x170003CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A95")]
				[Address(RVA = "0x272C9B4", Offset = "0x272C9B4", VA = "0x272C9B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A97")]
				[Address(RVA = "0x272C9FC", Offset = "0x272C9FC", VA = "0x272C9FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x272C820", Offset = "0x272C820", VA = "0x272C820")]
			[DebuggerHidden]
			public <CountDown>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x272C84C", Offset = "0x272C84C", VA = "0x272C84C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x272C850", Offset = "0x272C850", VA = "0x272C850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x272C9BC", Offset = "0x272C9BC", VA = "0x272C9BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21A78", Offset = "0xE21A78")]
		public bool skipOnInput;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool waitForInput;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21AB0", Offset = "0xE21AB0")]
		public RectTransform subtitlesGroup;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text actorSpeech;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text actorName;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image actorPortrait;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform waitInputIndicator;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SubtitleDelays subtitleDelays;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<AudioClip> typingSounds;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21AE8", Offset = "0xE21AE8")]
		public RectTransform optionsGroup;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button optionButton;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Button, int> cachedButtons;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 originalSubsPosition;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isWaitingChoice;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource _localSource;

		[Token(Token = "0x170003C8")]
		private AudioSource localSource
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x283D374", Offset = "0x283D374", VA = "0x283D374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x283D444", Offset = "0x283D444", VA = "0x283D444")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x283D608", Offset = "0x283D608", VA = "0x283D608")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x283D7CC", Offset = "0x283D7CC", VA = "0x283D7CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x283D88C", Offset = "0x283D88C", VA = "0x283D88C")]
		private void OnDialogueStarted(DialogueTree dlg)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x283D890", Offset = "0x283D890", VA = "0x283D890")]
		private void OnDialoguePaused(DialogueTree dlg)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x283D8EC", Offset = "0x283D8EC", VA = "0x283D8EC")]
		private void OnDialogueFinished(DialogueTree dlg)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x283DB00", Offset = "0x283DB00", VA = "0x283DB00")]
		private void OnSubtitlesRequest(SubtitlesRequestInfo info)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x283DB2C", Offset = "0x283DB2C", VA = "0x283DB2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29A74", Offset = "0xE29A74")]
		private IEnumerator Internal_OnSubtitlesRequestInfo(SubtitlesRequestInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x283DBC0", Offset = "0x283DBC0", VA = "0x283DBC0")]
		private void PlayTypeSound()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x283DCD8", Offset = "0x283DCD8", VA = "0x283DCD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29AD4", Offset = "0xE29AD4")]
		private IEnumerator CheckInput(Action Do)
		{
			return null;
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x283DD50", Offset = "0x283DD50", VA = "0x283DD50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29B34", Offset = "0xE29B34")]
		private IEnumerator DelayPrint(float time)
		{
			return null;
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x283DDC4", Offset = "0x283DDC4", VA = "0x283DDC4")]
		private void OnMultipleChoiceRequest(MultipleChoiceRequestInfo info)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x283E4D8", Offset = "0x283E4D8", VA = "0x283E4D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29B94", Offset = "0xE29B94")]
		private IEnumerator CountDown(MultipleChoiceRequestInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x283E56C", Offset = "0x283E56C", VA = "0x283E56C")]
		private void Finalize(MultipleChoiceRequestInfo info, int index)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x283E7A0", Offset = "0x283E7A0", VA = "0x283E7A0")]
		private void SetMassAlpha(RectTransform root, float alpha)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x283E858", Offset = "0x283E858", VA = "0x283E858")]
		public DialogueUGUI()
		{
		}
	}
}
namespace NodeCanvas.BehaviourTrees
{
	[Token(Token = "0x2000565")]
	public class BTConnection : Connection
	{
		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x2AAB43C", Offset = "0x2AAB43C", VA = "0x2AAB43C")]
		public BTConnection()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public abstract class BTNode : Node
	{
		[Token(Token = "0x170003D1")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x2AAB4E8", Offset = "0x2AAB4E8", VA = "0x2AAB4E8", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		public sealed override bool allowAsPrime
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x2AAB560", Offset = "0x2AAB560", VA = "0x2AAB560", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D3")]
		public sealed override bool canSelfConnect
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x2AAB568", Offset = "0x2AAB568", VA = "0x2AAB568", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D4")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x2AAB570", Offset = "0x2AAB570", VA = "0x2AAB570", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003D5")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x2AAB578", Offset = "0x2AAB578", VA = "0x2AAB578", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003D6")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x2AAB580", Offset = "0x2AAB580", VA = "0x2AAB580", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003D7")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x2AAB588", Offset = "0x2AAB588", VA = "0x2AAB588", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001AA0")]
		public T AddChild<T>(int childIndex) where T : BTNode
		{
			return null;
		}

		[Token(Token = "0x6001AA1")]
		public T AddChild<T>() where T : BTNode
		{
			return null;
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x2A9E344", Offset = "0x2A9E344", VA = "0x2A9E344")]
		protected BTNode()
		{
		}
	}
	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE129E0", Offset = "0xE129E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE129E0", Offset = "0xE129E0")]
	public abstract class BTNodeNested<T> : BTNode, IGraphAssignable<T>, IGraphAssignable, IGraphElement where T : Graph
	{
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<BBMappingParameter> _variablesMap;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21B30", Offset = "0xE21B30")]
		private T <currentInstance>k__BackingField;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21B40", Offset = "0xE21B40")]
		private Dictionary<Graph, Graph> <instances>k__BackingField;

		[Token(Token = "0x170003D8")]
		public abstract T subGraph
		{
			[Token(Token = "0x6001AA3")]
			get;
			[Token(Token = "0x6001AA4")]
			set;
		}

		[Token(Token = "0x170003D9")]
		public abstract BBParameter subGraphParameter
		{
			[Token(Token = "0x6001AA5")]
			get;
		}

		[Token(Token = "0x170003DA")]
		public T currentInstance
		{
			[Token(Token = "0x6001AA6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D34", Offset = "0xE29D34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D44", Offset = "0xE29D44")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public Dictionary<Graph, Graph> instances
		{
			[Token(Token = "0x6001AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D54", Offset = "0xE29D54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D64", Offset = "0xE29D64")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public List<BBMappingParameter> variablesMap
		{
			[Token(Token = "0x6001AAA")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AAB")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		private Graph NodeCanvas.Framework.IGraphAssignable.subGraph
		{
			[Token(Token = "0x6001AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AAD")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		private Graph NodeCanvas.Framework.IGraphAssignable.currentInstance
		{
			[Token(Token = "0x6001AAE")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AAF")]
			set
			{
			}
		}

		[Token(Token = "0x6001AB0")]
		protected BTNodeNested()
		{
		}
	}
	[Token(Token = "0x2000568")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE12A40", Offset = "0xE12A40")]
	[GraphInfo]
	public class BehaviourTree : Graph
	{
		[Serializable]
		[Token(Token = "0x2000569")]
		private class DerivedSerializationData
		{
			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool repeat;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float updateInterval;

			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x272958C", Offset = "0x272958C", VA = "0x272958C")]
			public DerivedSerializationData()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool repeat;

		[NonSerialized]
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float updateInterval;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Status _rootStatus;

		[Token(Token = "0x170003DF")]
		public Status rootStatus
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x2AACCC0", Offset = "0x2AACCC0", VA = "0x2AACCC0")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0x2AACCC8", Offset = "0x2AACCC8", VA = "0x2AACCC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public override Type baseNodeType
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x2AACD68", Offset = "0x2AACD68", VA = "0x2AACD68", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public override bool requiresAgent
		{
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x2AACDE0", Offset = "0x2AACDE0", VA = "0x2AACDE0", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E2")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x2AACDE8", Offset = "0x2AACDE8", VA = "0x2AACDE8", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E3")]
		public override bool isTree
		{
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x2AACDF0", Offset = "0x2AACDF0", VA = "0x2AACDF0", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E4")]
		public override bool allowBlackboardOverrides
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0x2AACDF8", Offset = "0x2AACDF8", VA = "0x2AACDF8", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E5")]
		public sealed override bool canAcceptVariableDrops
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x2AACE00", Offset = "0x2AACE00", VA = "0x2AACE00", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action<BehaviourTree, Status> onRootStatusChanged
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x2AACB48", Offset = "0x2AACB48", VA = "0x2AACB48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D74", Offset = "0xE29D74")]
			add
			{
			}
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0x2AACC04", Offset = "0x2AACC04", VA = "0x2AACC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D84", Offset = "0xE29D84")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x2AACA14", Offset = "0x2AACA14", VA = "0x2AACA14", Slot = "20")]
		public override object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x2AACA88", Offset = "0x2AACA88", VA = "0x2AACA88", Slot = "21")]
		public override void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x2AACE08", Offset = "0x2AACE08", VA = "0x2AACE08", Slot = "23")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x2AACE44", Offset = "0x2AACE44", VA = "0x2AACE44", Slot = "24")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x2AACEE0", Offset = "0x2AACEE0", VA = "0x2AACEE0")]
		private Status Tick(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x2AACF6C", Offset = "0x2AACF6C", VA = "0x2AACF6C")]
		public BehaviourTree()
		{
		}
	}
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE12B0C", Offset = "0xE12B0C")]
	public class BehaviourTreeOwner : GraphOwner<BehaviourTree>
	{
		[Token(Token = "0x170003E6")]
		public bool repeat
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x2AACF84", Offset = "0x2AACF84", VA = "0x2AACF84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x2AAD04C", Offset = "0x2AAD04C", VA = "0x2AAD04C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public float updateInterval
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x2AAD10C", Offset = "0x2AAD10C", VA = "0x2AAD10C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x2AAD1C8", Offset = "0x2AAD1C8", VA = "0x2AAD1C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public Status rootStatus
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x2AAD28C", Offset = "0x2AAD28C", VA = "0x2AAD28C")]
			get
			{
				return default(Status);
			}
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x2AAD34C", Offset = "0x2AAD34C", VA = "0x2AAD34C")]
		public Status Tick()
		{
			return default(Status);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x2AAD418", Offset = "0x2AAD418", VA = "0x2AAD418")]
		public BehaviourTreeOwner()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public abstract class BTComposite : BTNode
	{
		[Token(Token = "0x170003E9")]
		public override string name
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x2AAB400", Offset = "0x2AAB400", VA = "0x2AAB400", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		public sealed override int maxOutConnections
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x2AAB424", Offset = "0x2AAB424", VA = "0x2AAB424", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003EB")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x2AAB42C", Offset = "0x2AAB42C", VA = "0x2AAB42C", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x2AAB434", Offset = "0x2AAB434", VA = "0x2AAB434")]
		protected BTComposite()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public abstract class BTDecorator : BTNode
	{
		[Token(Token = "0x170003EC")]
		public sealed override int maxOutConnections
		{
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x2AAB444", Offset = "0x2AAB444", VA = "0x2AAB444", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003ED")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x2AAB44C", Offset = "0x2AAB44C", VA = "0x2AAB44C", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003EE")]
		protected Connection decoratedConnection
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x2AAB454", Offset = "0x2AAB454", VA = "0x2AAB454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		protected Node decoratedNode
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x2AAB4C4", Offset = "0x2AAB4C4", VA = "0x2AAB4C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x2AAB4E0", Offset = "0x2AAB4E0", VA = "0x2AAB4E0")]
		protected BTDecorator()
		{
		}
	}
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12B44", Offset = "0xE12B44")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12B44", Offset = "0xE12B44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12B44", Offset = "0xE12B44")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12B44", Offset = "0xE12B44")]
	public class BinarySelector : BTNode, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool dynamic;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int succeedIndex;

		[Token(Token = "0x170003F0")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x2DE8A5C", Offset = "0x2DE8A5C", VA = "0x2DE8A5C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F1")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0x2DE8A64", Offset = "0x2DE8A64", VA = "0x2DE8A64", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170003F2")]
		public override string name
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x2DE8A6C", Offset = "0x2DE8A6C", VA = "0x2DE8A6C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		public Task task
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x2DE8A90", Offset = "0x2DE8A90", VA = "0x2DE8A90", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x2DE8A98", Offset = "0x2DE8A98", VA = "0x2DE8A98", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		private ConditionTask condition
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x2DE8B2C", Offset = "0x2DE8B2C", VA = "0x2DE8B2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x2DE8B34", Offset = "0x2DE8B34", VA = "0x2DE8B34")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x2DE8B3C", Offset = "0x2DE8B3C", VA = "0x2DE8B3C", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x2DE8CA8", Offset = "0x2DE8CA8", VA = "0x2DE8CA8", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x2DE8CBC", Offset = "0x2DE8CBC", VA = "0x2DE8CBC")]
		public BinarySelector()
		{
		}
	}
	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12C04", Offset = "0xE12C04")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12C04", Offset = "0xE12C04")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12C04", Offset = "0xE12C04")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12C04", Offset = "0xE12C04")]
	public class FlipSelector : BTComposite
	{
		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int current;

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x2928ED4", Offset = "0x2928ED4", VA = "0x2928ED4", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x2928FDC", Offset = "0x2928FDC", VA = "0x2928FDC")]
		private void SendToBack(int i)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x29290B4", Offset = "0x29290B4", VA = "0x29290B4", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x29290BC", Offset = "0x29290BC", VA = "0x29290BC")]
		public FlipSelector()
		{
		}
	}
	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12CCC", Offset = "0xE12CCC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12CCC", Offset = "0xE12CCC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12CCC", Offset = "0xE12CCC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12CCC", Offset = "0xE12CCC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12CCC", Offset = "0xE12CCC")]
	public class Parallel : BTComposite
	{
		[Token(Token = "0x2000570")]
		public enum ParallelPolicy
		{
			[Token(Token = "0x400142E")]
			FirstFailure,
			[Token(Token = "0x400142F")]
			FirstSuccess,
			[Token(Token = "0x4001430")]
			FirstSuccessOrFailure
		}

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public ParallelPolicy policy;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21B70", Offset = "0xE21B70")]
		public bool dynamic;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] finishedConnections;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int finishedConnectionsCount;

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x26A34AC", Offset = "0x26A34AC", VA = "0x26A34AC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x26A3528", Offset = "0x26A3528", VA = "0x26A3528", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x26A3820", Offset = "0x26A3820", VA = "0x26A3820", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x26A3748", Offset = "0x26A3748", VA = "0x26A3748")]
		private void ResetRunning()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x26A3878", Offset = "0x26A3878", VA = "0x26A3878")]
		public Parallel()
		{
		}
	}
	[Token(Token = "0x2000571")]
	internal class PrioritySelector_0 : BTComposite
	{
		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public List<BBParameter<float>> priorities;

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x267ED44", Offset = "0x267ED44", VA = "0x267ED44")]
		public PrioritySelector_0()
		{
		}
	}
	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "fsMigrateVersionsAttribute", RVA = "0xE12DBC", Offset = "0xE12DBC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12DBC", Offset = "0xE12DBC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12DBC", Offset = "0xE12DBC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12DBC", Offset = "0xE12DBC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12DBC", Offset = "0xE12DBC")]
	public class PrioritySelector : BTComposite, IMigratable<PrioritySelector_0>, IMigratable
	{
		[Serializable]
		[Token(Token = "0x2000573")]
		public class Desire
		{
			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[fsIgnoreInBuild]
			public string name;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[fsIgnoreInBuild]
			public bool foldout;

			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Consideration> considerations;

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x2EE3D5C", Offset = "0x2EE3D5C", VA = "0x2EE3D5C")]
			public Consideration AddConsideration(IBlackboard bb)
			{
				return null;
			}

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x2EE3DF0", Offset = "0x2EE3DF0", VA = "0x2EE3DF0")]
			public void RemoveConsideration(Consideration consideration)
			{
			}

			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x2EE3E54", Offset = "0x2EE3E54", VA = "0x2EE3E54")]
			public float GetCompoundUtility()
			{
				return default(float);
			}

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x2EE3F08", Offset = "0x2EE3F08", VA = "0x2EE3F08")]
			public Desire()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000574")]
		public class Consideration
		{
			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BBParameter<float> input;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BBParameter<AnimationCurve> function;

			[Token(Token = "0x170003F5")]
			public float utility
			{
				[Token(Token = "0x6001AF1")]
				[Address(RVA = "0x2EE3B6C", Offset = "0x2EE3B6C", VA = "0x2EE3B6C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x2EE3C30", Offset = "0x2EE3C30", VA = "0x2EE3C30")]
			public Consideration(IBlackboard blackboard)
			{
			}
		}

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AutoSortWithChildrenConnections]
		public List<Desire> desires;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Connection[] orderedConnections;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int current;

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x267E73C", Offset = "0x267E73C", VA = "0x267E73C", Slot = "40")]
		private void ParadoxNotion.Serialization.FullSerializer.IMigratable<NodeCanvas.BehaviourTrees.PrioritySelector_0>.Migrate(PrioritySelector_0 model)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x267E968", Offset = "0x267E968", VA = "0x267E968", Slot = "31")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x267EA94", Offset = "0x267EA94", VA = "0x267EA94", Slot = "32")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x267EAF8", Offset = "0x267EAF8", VA = "0x267EAF8", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x267EC8C", Offset = "0x267EC8C", VA = "0x267EC8C", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x267EC94", Offset = "0x267EC94", VA = "0x267EC94")]
		public PrioritySelector()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x267EC9C", Offset = "0x267EC9C", VA = "0x267EC9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29D94", Offset = "0xE29D94")]
		private float <OnExecute>b__8_0(Connection c)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12F00", Offset = "0xE12F00")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12F00", Offset = "0xE12F00")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12F00", Offset = "0xE12F00")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12F00", Offset = "0xE12F00")]
	public class ProbabilitySelector : BTComposite
	{
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AutoSortWithChildrenConnections]
		public List<BBParameter<float>> childWeights;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> failChance;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool[] indexFailed;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] tmpWeights;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float tmpFailWeight;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float tmpTotal;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float tmpDice;

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x267EF14", Offset = "0x267EF14", VA = "0x267EF14", Slot = "31")]
		public override void OnChildConnected(int index)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x267F098", Offset = "0x267F098", VA = "0x267F098", Slot = "32")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x267F0FC", Offset = "0x267F0FC", VA = "0x267F0FC", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x267F10C", Offset = "0x267F10C", VA = "0x267F10C", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x267F3C0", Offset = "0x267F3C0", VA = "0x267F3C0", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x267F470", Offset = "0x267F470", VA = "0x267F470")]
		public ProbabilitySelector()
		{
		}
	}
	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE12FC0", Offset = "0xE12FC0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE12FC0", Offset = "0xE12FC0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE12FC0", Offset = "0xE12FC0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE12FC0", Offset = "0xE12FC0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE12FC0", Offset = "0xE12FC0")]
	public class Selector : BTComposite
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool dynamic;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool random;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lastRunningNodeIndex;

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x2B472F4", Offset = "0x2B472F4", VA = "0x2B472F4", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x2B474D4", Offset = "0x2B474D4", VA = "0x2B474D4", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x2B47548", Offset = "0x2B47548", VA = "0x2B47548", Slot = "32")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x2B47564", Offset = "0x2B47564", VA = "0x2B47564", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x2B47574", Offset = "0x2B47574", VA = "0x2B47574")]
		public Selector()
		{
		}
	}
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE130B0", Offset = "0xE130B0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE130B0", Offset = "0xE130B0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE130B0", Offset = "0xE130B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE130B0", Offset = "0xE130B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE130B0", Offset = "0xE130B0")]
	public class Sequencer : BTComposite
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool dynamic;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool random;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lastRunningNodeIndex;

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x2B48248", Offset = "0x2B48248", VA = "0x2B48248", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x2B48414", Offset = "0x2B48414", VA = "0x2B48414", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x2B48488", Offset = "0x2B48488", VA = "0x2B48488", Slot = "32")]
		public override void OnChildDisconnected(int index)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x2B484A4", Offset = "0x2B484A4", VA = "0x2B484A4", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x2B484B4", Offset = "0x2B484B4", VA = "0x2B484B4")]
		public Sequencer()
		{
		}
	}
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE131A0", Offset = "0xE131A0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE131A0", Offset = "0xE131A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE131A0", Offset = "0xE131A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE131A0", Offset = "0xE131A0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE131A0", Offset = "0xE131A0")]
	public class StepIterator : BTComposite
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int current;

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x2589BD4", Offset = "0x2589BD4", VA = "0x2589BD4", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x2589BDC", Offset = "0x2589BDC", VA = "0x2589BDC", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x2589C8C", Offset = "0x2589C8C", VA = "0x2589C8C", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x2589C9C", Offset = "0x2589C9C", VA = "0x2589C9C")]
		public StepIterator()
		{
		}
	}
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13290", Offset = "0xE13290")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13290", Offset = "0xE13290")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xE13290", Offset = "0xE13290")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13290", Offset = "0xE13290")]
	public class Switch : BTComposite
	{
		[Token(Token = "0x200057A")]
		public enum CaseSelectionMode
		{
			[Token(Token = "0x4001451")]
			IndexBased,
			[Token(Token = "0x4001452")]
			EnumBased
		}

		[Token(Token = "0x200057B")]
		public enum OutOfRangeMode
		{
			[Token(Token = "0x4001454")]
			ReturnFailure,
			[Token(Token = "0x4001455")]
			LoopIndex
		}

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool dynamic;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public CaseSelectionMode selectionMode;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE21BFC", Offset = "0xE21BFC")]
		public BBParameter<int> intCase;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE21C38", Offset = "0xE21C38")]
		public OutOfRangeMode outOfRangeMode;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE21C74", Offset = "0xE21C74")]
		public BBObjectParameter enumCase;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<int, int> enumCasePairing;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int current;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int runningIndex;

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x258CA58", Offset = "0x258CA58", VA = "0x258CA58", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x258CC10", Offset = "0x258CC10", VA = "0x258CC10", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x258CE60", Offset = "0x258CE60", VA = "0x258CE60")]
		public Switch()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13358", Offset = "0xE13358")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13358", Offset = "0xE13358")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13358", Offset = "0xE13358")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13358", Offset = "0xE13358")]
	public class ConditionalEvaluator : BTDecorator, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21CC4", Offset = "0xE21CC4")]
		public bool isDynamic;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21D00", Offset = "0xE21D00")]
		public CompactStatus conditionFailReturn;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool accessed;

		[Token(Token = "0x170003F6")]
		public Task task
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x22B99D8", Offset = "0x22B99D8", VA = "0x22B99D8", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x22B99E0", Offset = "0x22B99E0", VA = "0x22B99E0", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		private ConditionTask condition
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x22B9A74", Offset = "0x22B9A74", VA = "0x22B9A74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x22B9A7C", Offset = "0x22B9A7C", VA = "0x22B9A7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x22B9A84", Offset = "0x22B9A84", VA = "0x22B9A84", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x22B9C08", Offset = "0x22B9C08", VA = "0x22B9C08", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x22B9C34", Offset = "0x22B9C34", VA = "0x22B9C34")]
		public ConditionalEvaluator()
		{
		}
	}
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE1341C", Offset = "0xE1341C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1341C", Offset = "0xE1341C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE1341C", Offset = "0xE1341C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE1341C", Offset = "0xE1341C")]
	public class Filter : BTDecorator
	{
		[Token(Token = "0x200057E")]
		public enum FilterMode
		{
			[Token(Token = "0x4001462")]
			LimitNumberOfTimes,
			[Token(Token = "0x4001463")]
			CoolDown
		}

		[Token(Token = "0x200057F")]
		public enum Policy
		{
			[Token(Token = "0x4001465")]
			SuccessOrFailure,
			[Token(Token = "0x4001466")]
			SuccessOnly,
			[Token(Token = "0x4001467")]
			FailureOnly
		}

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE134E8", Offset = "0xE134E8")]
		private sealed class <Cooldown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Filter <>4__this;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B18")]
				[Address(RVA = "0x272FCA4", Offset = "0x272FCA4", VA = "0x272FCA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B1A")]
				[Address(RVA = "0x272FCEC", Offset = "0x272FCEC", VA = "0x272FCEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x272FBA8", Offset = "0x272FBA8", VA = "0x272FBA8")]
			[DebuggerHidden]
			public <Cooldown>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x272FBD4", Offset = "0x272FBD4", VA = "0x272FBD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x272FBD8", Offset = "0x272FBD8", VA = "0x272FBD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x272FCAC", Offset = "0x272FCAC", VA = "0x272FCAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public FilterMode filterMode;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE21D48", Offset = "0xE21D48")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21D48", Offset = "0xE21D48")]
		public BBParameter<int> maxCount;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21DB0", Offset = "0xE21DB0")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE21DB0", Offset = "0xE21DB0")]
		public Policy policy;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE21E18", Offset = "0xE21E18")]
		public BBParameter<float> coolDownTime;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool inactiveWhenLimited;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int executedCount;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float currentTime;

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x2925738", Offset = "0x2925738", VA = "0x2925738", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x2925740", Offset = "0x2925740", VA = "0x2925740", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x29258D4", Offset = "0x29258D4", VA = "0x29258D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29DA4", Offset = "0xE29DA4")]
		private IEnumerator Cooldown()
		{
			return null;
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x292594C", Offset = "0x292594C", VA = "0x292594C")]
		public Filter()
		{
		}
	}
	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE134F8", Offset = "0xE134F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE134F8", Offset = "0xE134F8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE134F8", Offset = "0xE134F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE134F8", Offset = "0xE134F8")]
	public class Guard : BTDecorator
	{
		[Token(Token = "0x2000582")]
		public enum GuardMode
		{
			[Token(Token = "0x4001470")]
			ReturnFailure,
			[Token(Token = "0x4001471")]
			WaitUntilReleased
		}

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<string> token;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GuardMode ifGuarded;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isGuarding;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<GameObject, List<Guard>> guards;

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x30A59AC", Offset = "0x30A59AC", VA = "0x30A59AC")]
		private static List<Guard> AgentGuards(Component agent)
		{
			return null;
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x30A5A4C", Offset = "0x30A5A4C", VA = "0x30A5A4C", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x30A5CA0", Offset = "0x30A5CA0", VA = "0x30A5CA0", Slot = "36")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x30A60EC", Offset = "0x30A60EC", VA = "0x30A60EC", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x30A6320", Offset = "0x30A6320", VA = "0x30A6320", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x30A5A78", Offset = "0x30A5A78", VA = "0x30A5A78")]
		private void SetGuards(Component guardAgent)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x30A6328", Offset = "0x30A6328", VA = "0x30A6328")]
		public Guard()
		{
		}
	}
	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE135C4", Offset = "0xE135C4")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE135C4", Offset = "0xE135C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE135C4", Offset = "0xE135C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE135C4", Offset = "0xE135C4")]
	public class Interruptor : BTDecorator, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x170003FA")]
		public ConditionTask condition
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x2E32FF0", Offset = "0x2E32FF0", VA = "0x2E32FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x2E32FF8", Offset = "0x2E32FF8", VA = "0x2E32FF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public Task task
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0x2E33000", Offset = "0x2E33000", VA = "0x2E33000", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x2E33008", Offset = "0x2E33008", VA = "0x2E33008", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x2E3309C", Offset = "0x2E3309C", VA = "0x2E3309C", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x2E33188", Offset = "0x2E33188", VA = "0x2E33188", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x2E3319C", Offset = "0x2E3319C", VA = "0x2E3319C")]
		public Interruptor()
		{
		}
	}
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13690", Offset = "0xE13690")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13690", Offset = "0xE13690")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13690", Offset = "0xE13690")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13690", Offset = "0xE13690")]
	public class Inverter : BTDecorator
	{
		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x2E34F9C", Offset = "0x2E34F9C", VA = "0x2E34F9C", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x2E35028", Offset = "0x2E35028", VA = "0x2E35028")]
		public Inverter()
		{
		}
	}
	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13754", Offset = "0xE13754")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13754", Offset = "0xE13754")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13754", Offset = "0xE13754")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13754", Offset = "0xE13754")]
	public class Iterator : BTDecorator
	{
		[Token(Token = "0x2000586")]
		public enum TerminationConditions
		{
			[Token(Token = "0x400147B")]
			None,
			[Token(Token = "0x400147C")]
			FirstSuccess,
			[Token(Token = "0x400147D")]
			FirstFailure
		}

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21E64", Offset = "0xE21E64")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xE21E64", Offset = "0xE21E64")]
		public BBParameter<IList> targetList;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21EC0", Offset = "0xE21EC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21EC0", Offset = "0xE21EC0")]
		public BBObjectParameter current;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21F34", Offset = "0xE21F34")]
		[BlackboardOnly]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE21F34", Offset = "0xE21F34")]
		public BBParameter<int> storeIndex;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21FA8", Offset = "0xE21FA8")]
		public BBParameter<int> maxIteration;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21FE0", Offset = "0xE21FE0")]
		public TerminationConditions terminationCondition;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22018", Offset = "0xE22018")]
		public bool resetIndex;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int currentIndex;

		[Token(Token = "0x170003FC")]
		private IList list
		{
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x2E36C60", Offset = "0x2E36C60", VA = "0x2E36C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x2E36CBC", Offset = "0x2E36CBC", VA = "0x2E36CBC", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x2E370AC", Offset = "0x2E370AC", VA = "0x2E370AC", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x2E370BC", Offset = "0x2E370BC", VA = "0x2E370BC")]
		public Iterator()
		{
		}
	}
	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13818", Offset = "0xE13818")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13818", Offset = "0xE13818")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13818", Offset = "0xE13818")]
	public class Merge : BTDecorator
	{
		[Token(Token = "0x170003FD")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0x2D00BEC", Offset = "0x2D00BEC", VA = "0x2D00BEC", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x2D00BF4", Offset = "0x2D00BF4", VA = "0x2D00BF4", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x2D00C68", Offset = "0x2D00C68", VA = "0x2D00C68")]
		public Merge()
		{
		}
	}
	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE138A0", Offset = "0xE138A0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE138A0", Offset = "0xE138A0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE138A0", Offset = "0xE138A0")]
	public class Monitor : BTDecorator, ITaskAssignable<ActionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x2000589")]
		public enum MonitorMode
		{
			[Token(Token = "0x4001483")]
			Failure = 0,
			[Token(Token = "0x4001484")]
			Success = 1,
			[Token(Token = "0x4001485")]
			AnyStatus = 10
		}

		[Token(Token = "0x200058A")]
		public enum ReturnStatusMode
		{
			[Token(Token = "0x4001487")]
			OriginalDecoratedChildStatus,
			[Token(Token = "0x4001488")]
			NewDecoratorActionStatus
		}

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE22050", Offset = "0xE22050")]
		public MonitorMode monitorMode;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE2208C", Offset = "0xE2208C")]
		public ReturnStatusMode returnMode;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Status decoratorActionStatus;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ActionTask _action;

		[Token(Token = "0x170003FE")]
		public ActionTask action
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x2D0BF24", Offset = "0x2D0BF24", VA = "0x2D0BF24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x2D0BF2C", Offset = "0x2D0BF2C", VA = "0x2D0BF2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003FF")]
		public Task task
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x2D0BF34", Offset = "0x2D0BF34", VA = "0x2D0BF34", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x2D0BF3C", Offset = "0x2D0BF3C", VA = "0x2D0BF3C", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x2D0BFD0", Offset = "0x2D0BFD0", VA = "0x2D0BFD0", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x2D0C0F4", Offset = "0x2D0C0F4", VA = "0x2D0C0F4", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x2D0C12C", Offset = "0x2D0C12C", VA = "0x2D0C12C")]
		public Monitor()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13944", Offset = "0xE13944")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13944", Offset = "0xE13944")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13944", Offset = "0xE13944")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13944", Offset = "0xE13944")]
	public class Optional : BTDecorator
	{
		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x26A2540", Offset = "0x26A2540", VA = "0x26A2540", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x26A2604", Offset = "0x26A2604", VA = "0x26A2604")]
		public Optional()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13A10", Offset = "0xE13A10")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13A10", Offset = "0xE13A10")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13A10", Offset = "0xE13A10")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13A10", Offset = "0xE13A10")]
	public class Remapper : BTDecorator
	{
		[Token(Token = "0x200058D")]
		public enum RemapStatus
		{
			[Token(Token = "0x400148C")]
			Failure,
			[Token(Token = "0x400148D")]
			Success
		}

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public RemapStatus successRemap;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RemapStatus failureRemap;

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x2B3A854", Offset = "0x2B3A854", VA = "0x2B3A854", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x2B3A8E4", Offset = "0x2B3A8E4", VA = "0x2B3A8E4")]
		public Remapper()
		{
		}
	}
	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13ADC", Offset = "0xE13ADC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13ADC", Offset = "0xE13ADC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13ADC", Offset = "0xE13ADC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13ADC", Offset = "0xE13ADC")]
	public class Repeater : BTDecorator
	{
		[Token(Token = "0x200058F")]
		public enum RepeaterMode
		{
			[Token(Token = "0x4001493")]
			RepeatTimes,
			[Token(Token = "0x4001494")]
			RepeatUntil,
			[Token(Token = "0x4001495")]
			RepeatForever
		}

		[Token(Token = "0x2000590")]
		public enum RepeatUntilStatus
		{
			[Token(Token = "0x4001497")]
			Failure,
			[Token(Token = "0x4001498")]
			Success
		}

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public RepeaterMode repeaterMode;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE220D8", Offset = "0xE220D8")]
		public BBParameter<int> repeatTimes;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE22114", Offset = "0xE22114")]
		public RepeatUntilStatus repeatUntilStatus;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int currentIteration;

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x2B3AC98", Offset = "0x2B3AC98", VA = "0x2B3AC98", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x2B3ADF4", Offset = "0x2B3ADF4", VA = "0x2B3ADF4", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x2B3AE00", Offset = "0x2B3AE00", VA = "0x2B3AE00")]
		public Repeater()
		{
		}
	}
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13BA8", Offset = "0xE13BA8")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13BA8", Offset = "0xE13BA8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13BA8", Offset = "0xE13BA8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13BA8", Offset = "0xE13BA8")]
	public class Setter : BTDecorator
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool revertToOriginal;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE22150", Offset = "0xE22150")]
		public BBParameter<GameObject> newAgent;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x2B4E028", Offset = "0x2B4E028", VA = "0x2B4E028", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x2B4E0F4", Offset = "0x2B4E0F4", VA = "0x2B4E0F4")]
		public Setter()
		{
		}
	}
	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13C74", Offset = "0xE13C74")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13C74", Offset = "0xE13C74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13C74", Offset = "0xE13C74")]
	public class Timeout : BTDecorator
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> timeout;

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x2596FF0", Offset = "0x2596FF0", VA = "0x2596FF0", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x25970F4", Offset = "0x25970F4", VA = "0x25970F4")]
		public Timeout()
		{
		}
	}
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13D18", Offset = "0xE13D18")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13D18", Offset = "0xE13D18")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE13D18", Offset = "0xE13D18")]
	public class WaitUntil : BTDecorator, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool accessed;

		[Token(Token = "0x17000400")]
		public Task task
		{
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x2D0F09C", Offset = "0x2D0F09C", VA = "0x2D0F09C", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x2D0F0A4", Offset = "0x2D0F0A4", VA = "0x2D0F0A4", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		private ConditionTask condition
		{
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0x2D0F138", Offset = "0x2D0F138", VA = "0x2D0F138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x2D0F140", Offset = "0x2D0F140", VA = "0x2D0F140")]
			set
			{
			}
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x2D0F148", Offset = "0x2D0F148", VA = "0x2D0F148", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x2D0F26C", Offset = "0x2D0F26C", VA = "0x2D0F26C", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x2D0F29C", Offset = "0x2D0F29C", VA = "0x2D0F29C")]
		public WaitUntil()
		{
		}
	}
	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13DBC", Offset = "0xE13DBC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13DBC", Offset = "0xE13DBC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13DBC", Offset = "0xE13DBC")]
	public class ActionNode : BTNode, ITaskAssignable<ActionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ActionTask _action;

		[Token(Token = "0x17000402")]
		public Task task
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x2A9E1FC", Offset = "0x2A9E1FC", VA = "0x2A9E1FC", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x2A9E204", Offset = "0x2A9E204", VA = "0x2A9E204", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public ActionTask action
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x2A9E298", Offset = "0x2A9E298", VA = "0x2A9E298")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x2A9E2A0", Offset = "0x2A9E2A0", VA = "0x2A9E2A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public override string name
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x2A9E2A8", Offset = "0x2A9E2A8", VA = "0x2A9E2A8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x2A9E2CC", Offset = "0x2A9E2CC", VA = "0x2A9E2CC", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x2A9E2F8", Offset = "0x2A9E2F8", VA = "0x2A9E2F8", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x2A9E30C", Offset = "0x2A9E30C", VA = "0x2A9E30C", Slot = "38")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x2A9E33C", Offset = "0x2A9E33C", VA = "0x2A9E33C")]
		public ActionNode()
		{
		}
	}
	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13E64", Offset = "0xE13E64")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13E64", Offset = "0xE13E64")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13E64", Offset = "0xE13E64")]
	public class ConditionNode : BTNode, ITaskAssignable<ConditionTask>, ITaskAssignable, IGraphElement
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ConditionTask _condition;

		[Token(Token = "0x17000405")]
		public Task task
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x22B953C", Offset = "0x22B953C", VA = "0x22B953C", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x22B9544", Offset = "0x22B9544", VA = "0x22B9544", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public ConditionTask condition
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x22B95D8", Offset = "0x22B95D8", VA = "0x22B95D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x22B95E0", Offset = "0x22B95E0", VA = "0x22B95E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public override string name
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x22B95E8", Offset = "0x22B95E8", VA = "0x22B95E8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x22B960C", Offset = "0x22B960C", VA = "0x22B960C", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x22B967C", Offset = "0x22B967C", VA = "0x22B967C", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x22B968C", Offset = "0x22B968C", VA = "0x22B968C")]
		public ConditionNode()
		{
		}
	}
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13F0C", Offset = "0xE13F0C")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13F0C", Offset = "0xE13F0C")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE13F0C", Offset = "0xE13F0C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13F0C", Offset = "0xE13F0C")]
	public class NestedDT : BTNodeNested<DialogueTree>
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE221BC", Offset = "0xE221BC")]
		[ExposeField]
		private BBParameter<DialogueTree> _nestedDialogueTree;

		[Token(Token = "0x17000408")]
		public override DialogueTree subGraph
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x269C7D8", Offset = "0x269C7D8", VA = "0x269C7D8", Slot = "53")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x269C82C", Offset = "0x269C82C", VA = "0x269C82C", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x269C890", Offset = "0x269C890", VA = "0x269C890", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x269C898", Offset = "0x269C898", VA = "0x269C898", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x269CA28", Offset = "0x269CA28", VA = "0x269CA28")]
		private void OnDLGFinished(bool success)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x269CA40", Offset = "0x269CA40", VA = "0x269CA40", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x269CAE0", Offset = "0x269CAE0", VA = "0x269CAE0")]
		public NestedDT()
		{
		}
	}
	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE13FFC", Offset = "0xE13FFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE13FFC", Offset = "0xE13FFC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE13FFC", Offset = "0xE13FFC")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE13FFC", Offset = "0xE13FFC")]
	public class NestedFSM : BTNodeNested<FSM>
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0xE2221C", Offset = "0xE2221C")]
		[ExposeField]
		private BBParameter<FSM> _nestedFSM;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public string successState;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public string failureState;

		[Token(Token = "0x1700040A")]
		public override FSM subGraph
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0x269CF60", Offset = "0x269CF60", VA = "0x269CF60", Slot = "53")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0x269CFB4", Offset = "0x269CFB4", VA = "0x269CFB4", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0x269D018", Offset = "0x269D018", VA = "0x269D018", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x269D020", Offset = "0x269D020", VA = "0x269D020", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x269D24C", Offset = "0x269D24C", VA = "0x269D24C")]
		private void OnFSMFinish(bool success)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x269D264", Offset = "0x269D264", VA = "0x269D264", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x269D304", Offset = "0x269D304", VA = "0x269D304")]
		public NestedFSM()
		{
		}
	}
	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "DropReferenceType", RVA = "0xE140EC", Offset = "0xE140EC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE140EC", Offset = "0xE140EC")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0xE140EC", Offset = "0xE140EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE140EC", Offset = "0xE140EC")]
	public class SubTree : BTNodeNested<BehaviourTree>
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ExposeField]
		[SerializeField]
		private BBParameter<BehaviourTree> _subTree;

		[Token(Token = "0x1700040C")]
		public override BehaviourTree subGraph
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0x258C0EC", Offset = "0x258C0EC", VA = "0x258C0EC", Slot = "53")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0x258C140", Offset = "0x258C140", VA = "0x258C140", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public override BBParameter subGraphParameter
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0x258C1A4", Offset = "0x258C1A4", VA = "0x258C1A4", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x258C1AC", Offset = "0x258C1AC", VA = "0x258C1AC", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x258C2F0", Offset = "0x258C2F0", VA = "0x258C2F0", Slot = "25")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x258C390", Offset = "0x258C390", VA = "0x258C390")]
		public SubTree()
		{
		}
	}
	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE141DC", Offset = "0xE141DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE141DC", Offset = "0xE141DC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE141DC", Offset = "0xE141DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE141DC", Offset = "0xE141DC")]
	public class NodeToggler : BTNode
	{
		[Token(Token = "0x200059A")]
		public enum ToggleMode
		{
			[Token(Token = "0x40014A9")]
			Enable,
			[Token(Token = "0x40014AA")]
			Disable,
			[Token(Token = "0x40014AB")]
			Toggle
		}

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public ToggleMode toggleMode;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string targetNodeTag;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Node> targetNodes;

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x269F9E0", Offset = "0x269F9E0", VA = "0x269F9E0", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x269FA64", Offset = "0x269FA64", VA = "0x269FA64", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x269FED8", Offset = "0x269FED8", VA = "0x269FED8")]
		public NodeToggler()
		{
		}
	}
	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE14274", Offset = "0xE14274")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xE14274", Offset = "0xE14274")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xE14274", Offset = "0xE14274")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE14274", Offset = "0xE14274")]
	public class RootSwitcher : BTNode
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string targetNodeTag;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Node targetNode;

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x2B3F9E0", Offset = "0x2B3F9E0", VA = "0x2B3F9E0", Slot = "34")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x2B3FA48", Offset = "0x2B3FA48", VA = "0x2B3FA48", Slot = "24")]
		protected override Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x2B3FAB8", Offset = "0x2B3FAB8", VA = "0x2B3FAB8")]
		public RootSwitcher()
		{
		}
	}
}
namespace NodeCanvas.Framework
{
	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE1430C", Offset = "0xE1430C")]
	public class GraphInfoAttribute : Attribute
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string packageName;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string docsURL;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string resourcesURL;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string forumsURL;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x29CEE90", Offset = "0x29CEE90", VA = "0x29CEE90")]
		public GraphInfoAttribute()
		{
		}
	}
	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14320", Offset = "0xE14320")]
	public class DropReferenceType : Attribute
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type type;

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x283EEC4", Offset = "0x283EEC4", VA = "0x283EEC4")]
		public DropReferenceType(Type type)
		{
		}
	}
	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14334", Offset = "0xE14334")]
	public class BlackboardOnlyAttribute : Attribute
	{
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x2DF429C", Offset = "0x2DF429C", VA = "0x2DF429C")]
		public BlackboardOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public static class LogTag
	{
		[Token(Token = "0x40014B3")]
		public const string EDITOR = "Editor";

		[Token(Token = "0x40014B4")]
		public const string EVENT = "Event";

		[Token(Token = "0x40014B5")]
		public const string EXECUTION = "Execution";

		[Token(Token = "0x40014B6")]
		public const string VARIABLE = "Variable";

		[Token(Token = "0x40014B7")]
		public const string BLACKBOARD = "Blackboard";

		[Token(Token = "0x40014B8")]
		public const string GRAPH = "Graph";

		[Token(Token = "0x40014B9")]
		public const string INIT = "Initialization";

		[Token(Token = "0x40014BA")]
		public const string VALIDATION = "Validation";

		[Token(Token = "0x40014BB")]
		public const string SERIALIZATION = "Serialization";
	}
	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE14348", Offset = "0xE14348")]
	public class SignalDefinition : ScriptableObject
	{
		[Token(Token = "0x20005A1")]
		public delegate void InvokeArguments(Transform sender, Transform receiver, bool isGlobal, params object[] args);

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1438C", Offset = "0xE1438C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x312EA08", Offset = "0x312EA08", VA = "0x312EA08")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x312EA10", Offset = "0x312EA10", VA = "0x312EA10")]
			internal bool <RemoveParameter>b__0(DynamicParameterDefinition p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private List<DynamicParameterDefinition> _parameters;

		[Token(Token = "0x1700040E")]
		public List<DynamicParameterDefinition> parameters
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0x2582DF0", Offset = "0x2582DF0", VA = "0x2582DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x2582DF8", Offset = "0x2582DF8", VA = "0x2582DF8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event InvokeArguments onInvoke
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0x2582738", Offset = "0x2582738", VA = "0x2582738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29E54", Offset = "0xE29E54")]
			add
			{
			}
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x2582698", Offset = "0x2582698", VA = "0x2582698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29E64", Offset = "0xE29E64")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x2582E00", Offset = "0x2582E00", VA = "0x2582E00")]
		public void Invoke(Transform sender, Transform receiver, bool isGlobal, params object[] args)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x2582E18", Offset = "0x2582E18", VA = "0x2582E18")]
		public void AddParameter(string name, Type type)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x2582EB0", Offset = "0x2582EB0", VA = "0x2582EB0")]
		public void RemoveParameter(string name)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x2582FE8", Offset = "0x2582FE8", VA = "0x2582FE8")]
		public SignalDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A3")]
	public class CanvasGroup
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect rect;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool autoGroup;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x2DFE49C", Offset = "0x2DFE49C", VA = "0x2DFE49C")]
		public CanvasGroup()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x2DFE4A4", Offset = "0x2DFE4A4", VA = "0x2DFE4A4")]
		public CanvasGroup(Rect rect, string name)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A4")]
	[SpoofAOT]
	[fsDeserializeOverwrite]
	public abstract class Connection : IGraphElement, ISerializationCollectable
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[fsSerializeAsReference]
		[SerializeField]
		private Node _sourceNode;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[fsSerializeAsReference]
		private Node _targetNode;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _UID;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isDisabled;

		[NonSerialized]
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Status _status;

		[Token(Token = "0x1700040F")]
		public string UID
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x22B9E30", Offset = "0x22B9E30", VA = "0x22B9E30", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		public Node sourceNode
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x22B9EE0", Offset = "0x22B9EE0", VA = "0x22B9EE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x22B9EE8", Offset = "0x22B9EE8", VA = "0x22B9EE8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public Node targetNode
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x22B9EF0", Offset = "0x22B9EF0", VA = "0x22B9EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x22B9EF8", Offset = "0x22B9EF8", VA = "0x22B9EF8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000412")]
		private string NodeCanvas.Framework.IGraphElement.name
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x22B9F00", Offset = "0x22B9F00", VA = "0x22B9F00", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		public bool isActive
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x22B9F44", Offset = "0x22B9F44", VA = "0x22B9F44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x22B9F54", Offset = "0x22B9F54", VA = "0x22B9F54")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public Status status
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x22B9F98", Offset = "0x22B9F98", VA = "0x22B9F98", Slot = "7")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x22B9FA0", Offset = "0x22B9FA0", VA = "0x22B9FA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public Graph graph
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x22B9FA8", Offset = "0x22B9FA8", VA = "0x22B9FA8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x22B9FC0", Offset = "0x22B9FC0", VA = "0x22B9FC0")]
		public Connection()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x22B9FD0", Offset = "0x22B9FD0", VA = "0x22B9FD0")]
		public static Connection Create(Node source, Node target, int sourceIndex = -1, int targetIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x22BA4C4", Offset = "0x22BA4C4", VA = "0x22BA4C4")]
		public Connection Duplicate(Node newSource, Node newTarget)
		{
			return null;
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x22BA11C", Offset = "0x22BA11C", VA = "0x22BA11C")]
		public int SetSourceNode(Node newSource, int index = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x22BA2F0", Offset = "0x22BA2F0", VA = "0x22BA2F0")]
		public int SetTargetNode(Node newTarget, int index = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x22B9B88", Offset = "0x22B9B88", VA = "0x22B9B88")]
		public Status Execute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x22B9BCC", Offset = "0x22B9BCC", VA = "0x22B9BCC")]
		public void Reset(bool recursively = true)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x22BA8EC", Offset = "0x22BA8EC", VA = "0x22BA8EC", Slot = "8")]
		public virtual void OnCreate(int sourceIndex, int targetIndex)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x22BA8F0", Offset = "0x22BA8F0", VA = "0x22BA8F0", Slot = "9")]
		public virtual void OnValidate(int sourceIndex, int targetIndex)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x22BA8F4", Offset = "0x22BA8F4", VA = "0x22BA8F4", Slot = "10")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x22BA8F8", Offset = "0x22BA8F8", VA = "0x22BA8F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005A5")]
	[SpoofAOT]
	public abstract class ExposedParameter
	{
		[Token(Token = "0x17000416")]
		public abstract string targetVariableID
		{
			[Token(Token = "0x6001BA0")]
			get;
		}

		[Token(Token = "0x17000417")]
		public abstract Type type
		{
			[Token(Token = "0x6001BA1")]
			get;
		}

		[Token(Token = "0x17000418")]
		public abstract object valueBoxed
		{
			[Token(Token = "0x6001BA2")]
			get;
			[Token(Token = "0x6001BA3")]
			set;
		}

		[Token(Token = "0x17000419")]
		public abstract Variable varRefBoxed
		{
			[Token(Token = "0x6001BA6")]
			get;
		}

		[Token(Token = "0x6001BA4")]
		public abstract void Bind(IBlackboard blackboard);

		[Token(Token = "0x6001BA5")]
		public abstract void UnBind(IBlackboard blackboard);

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x28CDAF0", Offset = "0x28CDAF0", VA = "0x28CDAF0")]
		public static ExposedParameter CreateInstance(Variable target)
		{
			return null;
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x28CDCC0", Offset = "0x28CDCC0", VA = "0x28CDCC0")]
		protected ExposedParameter()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public sealed class ExposedParameter<T> : ExposedParameter
	{
		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _targetVariableID;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _value;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE223CC", Offset = "0xE223CC")]
		private Variable<T> <varRef>k__BackingField;

		[Token(Token = "0x1700041A")]
		public Variable<T> varRef
		{
			[Token(Token = "0x6001BA9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29E74", Offset = "0xE29E74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BAA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29E84", Offset = "0xE29E84")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public override string targetVariableID
		{
			[Token(Token = "0x6001BAD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041C")]
		public override Type type
		{
			[Token(Token = "0x6001BAE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		public override object valueBoxed
		{
			[Token(Token = "0x6001BAF")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public override Variable varRefBoxed
		{
			[Token(Token = "0x6001BB1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		public T value
		{
			[Token(Token = "0x6001BB2")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001BB3")]
			set
			{
			}
		}

		[Token(Token = "0x6001BAB")]
		public ExposedParameter()
		{
		}

		[Token(Token = "0x6001BAC")]
		public ExposedParameter(Variable target)
		{
		}

		[Token(Token = "0x6001BB4")]
		public override void Bind(IBlackboard blackboard)
		{
		}

		[Token(Token = "0x6001BB5")]
		public override void UnBind(IBlackboard blackboard)
		{
		}

		[Token(Token = "0x6001BB6")]
		private T GetRawValue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001BB7")]
		private void SetRawValue(T value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A7")]
	public abstract class Graph : ScriptableObject, ITaskSystem, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20005A8")]
		public enum UpdateMode
		{
			[Token(Token = "0x40014E4")]
			NormalUpdate,
			[Token(Token = "0x40014E5")]
			LateUpdate,
			[Token(Token = "0x40014E6")]
			FixedUpdate,
			[Token(Token = "0x40014E7")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE143E4", Offset = "0xE143E4")]
		private sealed class <>c
		{
			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Node, int> <>9__150_0;

			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Node, bool> <>9__191_0;

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Node, bool> <>9__192_0;

			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<BBParameter, bool> <>9__195_0;

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x2731280", Offset = "0x2731280", VA = "0x2731280")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x2731288", Offset = "0x2731288", VA = "0x2731288")]
			internal int <UpdateNodeIDs>b__150_0(Node n)
			{
				return default(int);
			}

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0x27312F4", Offset = "0x27312F4", VA = "0x27312F4")]
			internal bool <GetRootNodes>b__191_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x273134C", Offset = "0x273134C", VA = "0x273134C")]
			internal bool <GetLeafNodes>b__192_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0x27313A4", Offset = "0x27313A4", VA = "0x27313A4")]
			internal bool <GetDefinedParameters>b__195_0(BBParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE143F4", Offset = "0xE143F4")]
		private sealed class <>c__DisplayClass156_0
		{
			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graph <>4__this;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GraphLoadData data;

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x27313BC", Offset = "0x27313BC", VA = "0x27313BC")]
			public <>c__DisplayClass156_0()
			{
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x27313C4", Offset = "0x27313C4", VA = "0x27313C4")]
			internal void <LoadOverwriteAsync>b__0()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14404", Offset = "0xE14404")]
		private struct <LoadOverwriteAsync>d__156 : IAsyncStateMachine
		{
			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Graph <>4__this;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GraphLoadData data;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action callback;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x2731A08", Offset = "0x2731A08", VA = "0x2731A08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x2731CCC", Offset = "0x2731CCC", VA = "0x2731CCC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14414", Offset = "0xE14414")]
		private sealed class <>c__DisplayClass157_0
		{
			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graph <>4__this;

			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GraphLoadData data;

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x273141C", Offset = "0x273141C", VA = "0x273141C")]
			public <>c__DisplayClass157_0()
			{
			}

			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x2731424", Offset = "0x2731424", VA = "0x2731424")]
			internal void <LoadOverwrite>b__0()
			{
			}
		}

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14424", Offset = "0xE14424")]
		private sealed class <>c__DisplayClass186_0
		{
			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int searchID;

			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x2731460", Offset = "0x2731460", VA = "0x2731460")]
			public <>c__DisplayClass186_0()
			{
			}

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x2731468", Offset = "0x2731468", VA = "0x2731468")]
			internal bool <GetNodeWithID>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14434", Offset = "0xE14434")]
		private sealed class <>c__DisplayClass188_0<T> where T : Node
		{
			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string tagName;

			[Token(Token = "0x6001C63")]
			public <>c__DisplayClass188_0()
			{
			}

			[Token(Token = "0x6001C64")]
			internal bool <GetNodeWithTag>b__0(T n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14444", Offset = "0xE14444")]
		private sealed class <>c__DisplayClass189_0<T> where T : Node
		{
			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string tagName;

			[Token(Token = "0x6001C65")]
			public <>c__DisplayClass189_0()
			{
			}

			[Token(Token = "0x6001C66")]
			internal bool <GetNodesWithTag>b__0(T n)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14454", Offset = "0xE14454")]
		private sealed class <>c__190<T> where T : Node
		{
			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__190<T> <>9;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, bool> <>9__190_0;

			[Token(Token = "0x6001C68")]
			public <>c__190()
			{
			}

			[Token(Token = "0x6001C69")]
			internal bool <GetAllTagedNodes>b__190_0(T n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14464", Offset = "0xE14464")]
		private sealed class <>c__DisplayClass203_0
		{
			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stack<HierarchyTree.Element> stack;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HierarchyTree.Element parentElement;

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x273148C", Offset = "0x273148C", VA = "0x273148C")]
			public <>c__DisplayClass203_0()
			{
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x2731494", Offset = "0x2731494", VA = "0x2731494")]
			internal void <CollectSubElements>b__0(object o)
			{
			}

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x27316B8", Offset = "0x27316B8", VA = "0x27316B8")]
			internal void <CollectSubElements>b__1(object o, fsData d)
			{
			}
		}

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14474", Offset = "0xE14474")]
		private sealed class <>c__DisplayClass206_0
		{
			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Task> result;

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x273175C", Offset = "0x273175C", VA = "0x273175C")]
			public <>c__DisplayClass206_0()
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x2731764", Offset = "0x2731764", VA = "0x2731764")]
			internal void <GetTasksInElement>b__0(object o, fsData d)
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14484", Offset = "0xE14484")]
		private sealed class <>c__DisplayClass207_0
		{
			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<BBParameter> result;

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x273181C", Offset = "0x273181C", VA = "0x273181C")]
			public <>c__DisplayClass207_0()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x2731824", Offset = "0x2731824", VA = "0x2731824")]
			internal void <GetParametersInElement>b__0(object o, fsData d)
			{
			}
		}

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14494", Offset = "0xE14494")]
		private sealed class <>c__DisplayClass212_0
		{
			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x27318DC", Offset = "0x27318DC", VA = "0x27318DC")]
			public <>c__DisplayClass212_0()
			{
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x27318E4", Offset = "0x27318E4", VA = "0x27318E4")]
			internal bool <RemoveNode>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE144A4", Offset = "0xE144A4")]
		private sealed class <>c__DisplayClass215_0
		{
			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graph targetGraph;

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x273198C", Offset = "0x273198C", VA = "0x273198C")]
			public <>c__DisplayClass215_0()
			{
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x2731994", Offset = "0x2731994", VA = "0x2731994")]
			internal bool <CloneNodes>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _serializedGraph;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GraphSource _graphSource;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _haltSerialization;

		[NonSerialized]
		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool haltForUndo;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool isDebugLog;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Graph> _runningGraphs;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2244C", Offset = "0xE2244C")]
		private bool <hasInitialized>k__BackingField;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2245C", Offset = "0xE2245C")]
		private HierarchyTree.Element <flatMetaGraph>k__BackingField;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2246C", Offset = "0xE2246C")]
		private HierarchyTree.Element <fullMetaGraph>k__BackingField;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2247C", Offset = "0xE2247C")]
		private HierarchyTree.Element <nestedMetaGraph>k__BackingField;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2248C", Offset = "0xE2248C")]
		private Graph <parentGraph>k__BackingField;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2249C", Offset = "0xE2249C")]
		private float <elapsedTime>k__BackingField;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE224AC", Offset = "0xE224AC")]
		private float <deltaTime>k__BackingField;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE224BC", Offset = "0xE224BC")]
		private int <lastUpdateFrame>k__BackingField;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE224CC", Offset = "0xE224CC")]
		private bool <isRunning>k__BackingField;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE224DC", Offset = "0xE224DC")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE224EC", Offset = "0xE224EC")]
		private UpdateMode <updateMode>k__BackingField;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE224FC", Offset = "0xE224FC")]
		private Component <agent>k__BackingField;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2250C", Offset = "0xE2250C")]
		private IBlackboard <parentBlackboard>k__BackingField;

		[Token(Token = "0x17000420")]
		private bool hasInitialized
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x29C9F04", Offset = "0x29C9F04", VA = "0x29C9F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29EF4", Offset = "0xE29EF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x29C9F0C", Offset = "0x29C9F0C", VA = "0x29C9F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F04", Offset = "0xE29F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		private HierarchyTree.Element flatMetaGraph
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x29C9F18", Offset = "0x29C9F18", VA = "0x29C9F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F14", Offset = "0xE29F14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x29C9F20", Offset = "0x29C9F20", VA = "0x29C9F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F24", Offset = "0xE29F24")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		private HierarchyTree.Element fullMetaGraph
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x29C9F28", Offset = "0x29C9F28", VA = "0x29C9F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F34", Offset = "0xE29F34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x29C9F30", Offset = "0x29C9F30", VA = "0x29C9F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F44", Offset = "0xE29F44")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		private HierarchyTree.Element nestedMetaGraph
		{
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x29C9F38", Offset = "0x29C9F38", VA = "0x29C9F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F54", Offset = "0xE29F54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x29C9F40", Offset = "0x29C9F40", VA = "0x29C9F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F64", Offset = "0xE29F64")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public abstract Type baseNodeType
		{
			[Token(Token = "0x6001BDA")]
			get;
		}

		[Token(Token = "0x17000425")]
		public abstract bool requiresAgent
		{
			[Token(Token = "0x6001BDB")]
			get;
		}

		[Token(Token = "0x17000426")]
		public abstract bool requiresPrimeNode
		{
			[Token(Token = "0x6001BDC")]
			get;
		}

		[Token(Token = "0x17000427")]
		public abstract bool isTree
		{
			[Token(Token = "0x6001BDD")]
			get;
		}

		[Token(Token = "0x17000428")]
		public abstract bool allowBlackboardOverrides
		{
			[Token(Token = "0x6001BDE")]
			get;
		}

		[Token(Token = "0x17000429")]
		public abstract bool canAcceptVariableDrops
		{
			[Token(Token = "0x6001BDF")]
			get;
		}

		[Token(Token = "0x1700042A")]
		private GraphSource graphSource
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x29C9F48", Offset = "0x29C9F48", VA = "0x29C9F48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x29C9F50", Offset = "0x29C9F50", VA = "0x29C9F50")]
			set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public string category
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x29C9F58", Offset = "0x29C9F58", VA = "0x29C9F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x29C9F74", Offset = "0x29C9F74", VA = "0x29C9F74")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public string comments
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x29C9F90", Offset = "0x29C9F90", VA = "0x29C9F90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0x29C9FAC", Offset = "0x29C9FAC", VA = "0x29C9FAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public Vector2 translation
		{
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0x29C9FC8", Offset = "0x29C9FC8", VA = "0x29C9FC8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x29C9FE4", Offset = "0x29C9FE4", VA = "0x29C9FE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public float zoomFactor
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x29CA000", Offset = "0x29CA000", VA = "0x29CA000")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x29CA01C", Offset = "0x29CA01C", VA = "0x29CA01C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public List<Node> allNodes
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x29C9D8C", Offset = "0x29C9D8C", VA = "0x29C9D8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x29CA038", Offset = "0x29CA038", VA = "0x29CA038")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public List<CanvasGroup> canvasGroups
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x29CA054", Offset = "0x29CA054", VA = "0x29CA054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x29CA070", Offset = "0x29CA070", VA = "0x29CA070")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		private BlackboardSource localBlackboard
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x29C9C94", Offset = "0x29C9C94", VA = "0x29C9C94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x29C9D70", Offset = "0x29C9D70", VA = "0x29C9D70")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		private List<Task> allTasks
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x29C9DA8", Offset = "0x29C9DA8", VA = "0x29C9DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private List<BBParameter> allParameters
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x29CA08C", Offset = "0x29CA08C", VA = "0x29CA08C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000434")]
		private List<Connection> allConnections
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x29CA0A8", Offset = "0x29CA0A8", VA = "0x29CA0A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		public Graph rootGraph
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x29CA0C4", Offset = "0x29CA0C4", VA = "0x29CA0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		public bool serializationHalted
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x29CA154", Offset = "0x29CA154", VA = "0x29CA154")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000437")]
		public static IEnumerable<Graph> runningGraphs
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x29CA15C", Offset = "0x29CA15C", VA = "0x29CA15C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000438")]
		public Graph parentGraph
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x29CA1A8", Offset = "0x29CA1A8", VA = "0x29CA1A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F74", Offset = "0xE29F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x29CA1B0", Offset = "0x29CA1B0", VA = "0x29CA1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F84", Offset = "0xE29F84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public float elapsedTime
		{
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x29CA1B8", Offset = "0x29CA1B8", VA = "0x29CA1B8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F94", Offset = "0xE29F94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x29CA1C0", Offset = "0x29CA1C0", VA = "0x29CA1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FA4", Offset = "0xE29FA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043A")]
		public float deltaTime
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x29CA1C8", Offset = "0x29CA1C8", VA = "0x29CA1C8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FB4", Offset = "0xE29FB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x29CA1D0", Offset = "0x29CA1D0", VA = "0x29CA1D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FC4", Offset = "0xE29FC4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public int lastUpdateFrame
		{
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x29CA1D8", Offset = "0x29CA1D8", VA = "0x29CA1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FD4", Offset = "0xE29FD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x29CA1E0", Offset = "0x29CA1E0", VA = "0x29CA1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FE4", Offset = "0xE29FE4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043C")]
		public bool didUpdateLastFrame
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x29CA1E8", Offset = "0x29CA1E8", VA = "0x29CA1E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043D")]
		public bool isRunning
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x29CA218", Offset = "0x29CA218", VA = "0x29CA218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FF4", Offset = "0xE29FF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0x29CA220", Offset = "0x29CA220", VA = "0x29CA220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A004", Offset = "0xE2A004")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public bool isPaused
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x29CA22C", Offset = "0x29CA22C", VA = "0x29CA22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A014", Offset = "0xE2A014")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x29CA234", Offset = "0x29CA234", VA = "0x29CA234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A024", Offset = "0xE2A024")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x29CA240", Offset = "0x29CA240", VA = "0x29CA240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A034", Offset = "0xE2A034")]
			get
			{
				return default(UpdateMode);
			}
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x29CA248", Offset = "0x29CA248", VA = "0x29CA248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A044", Offset = "0xE2A044")]
			private set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public Node primeNode
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x29CA250", Offset = "0x29CA250", VA = "0x29CA250")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x29CA308", Offset = "0x29CA308", VA = "0x29CA308")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public Component agent
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x29CA460", Offset = "0x29CA460", VA = "0x29CA460", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A054", Offset = "0xE2A054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x29CA468", Offset = "0x29CA468", VA = "0x29CA468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A064", Offset = "0xE2A064")]
			private set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x29CA470", Offset = "0x29CA470", VA = "0x29CA470", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		public IBlackboard parentBlackboard
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x29CA48C", Offset = "0x29CA48C", VA = "0x29CA48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A074", Offset = "0xE2A074")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x29CA494", Offset = "0x29CA494", VA = "0x29CA494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A084", Offset = "0xE2A084")]
			private set
			{
			}
		}

		[Token(Token = "0x17000444")]
		private UnityEngine.Object NodeCanvas.Framework.ITaskSystem.contextObject
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x29CA49C", Offset = "0x29CA49C", VA = "0x29CA49C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000015")]
		public static event Action<Graph> onGraphSerialized
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x29C7C88", Offset = "0x29C7C88", VA = "0x29C7C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29E94", Offset = "0xE29E94")]
			add
			{
			}
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x29C7D44", Offset = "0x29C7D44", VA = "0x29C7D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29EA4", Offset = "0xE29EA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event Action<Graph> onGraphDeserialized
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0x29C7E00", Offset = "0x29C7E00", VA = "0x29C7E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29EB4", Offset = "0xE29EB4")]
			add
			{
			}
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x29C7EC0", Offset = "0x29C7EC0", VA = "0x29C7EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29EC4", Offset = "0xE29EC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<bool> onFinish
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x29C9DC4", Offset = "0x29C9DC4", VA = "0x29C9DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29ED4", Offset = "0xE29ED4")]
			add
			{
			}
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x29C9E64", Offset = "0x29C9E64", VA = "0x29C9E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29EE4", Offset = "0xE29EE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		private event Action delayedInitCalls
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x29CAB14", Offset = "0x29CAB14", VA = "0x29CAB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A094", Offset = "0xE2A094")]
			add
			{
			}
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x29CABB4", Offset = "0x29CABB4", VA = "0x29CABB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A0A4", Offset = "0xE2A0A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x29C7F80", Offset = "0x29C7F80", VA = "0x29C7F80", Slot = "12")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x29C8194", Offset = "0x29C8194", VA = "0x29C8194", Slot = "13")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x29C822C", Offset = "0x29C822C", VA = "0x29C822C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x29C8904", Offset = "0x29C8904", VA = "0x29C8904")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x29C8914", Offset = "0x29C8914", VA = "0x29C8914")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x29C8BC8", Offset = "0x29C8BC8", VA = "0x29C8BC8")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x29C8BCC", Offset = "0x29C8BCC", VA = "0x29C8BCC")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x29C7F84", Offset = "0x29C7F84", VA = "0x29C7F84")]
		public bool SelfSerialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x29C8198", Offset = "0x29C8198", VA = "0x29C8198")]
		public bool SelfDeserialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x29C8BDC", Offset = "0x29C8BDC", VA = "0x29C8BDC")]
		public string Serialize(List<UnityEngine.Object> references)
		{
			return null;
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x29C8D64", Offset = "0x29C8D64", VA = "0x29C8D64")]
		public bool Deserialize(string serializedGraph, List<UnityEngine.Object> references, bool validate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x29C9938", Offset = "0x29C9938", VA = "0x29C9938")]
		public GraphSource GetGraphSource()
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x29C9940", Offset = "0x29C9940", VA = "0x29C9940")]
		public string GetSerializedJsonData()
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x29C9948", Offset = "0x29C9948", VA = "0x29C9948")]
		internal List<UnityEngine.Object> GetSerializedReferencesData()
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x29C999C", Offset = "0x29C999C", VA = "0x29C999C")]
		internal GraphSource GetGraphSourceMetaDataCopy()
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x29C9B74", Offset = "0x29C9B74", VA = "0x29C9B74")]
		internal void SetGraphSourceMetaData(GraphSource source)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x29C9B8C", Offset = "0x29C9B8C", VA = "0x29C9B8C")]
		public string SerializeLocalBlackboard(ref List<UnityEngine.Object> references)
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x29C9CB0", Offset = "0x29C9CB0", VA = "0x29C9CB0")]
		public bool DeserializeLocalBlackboard(string json, List<UnityEngine.Object> references)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		public static T Clone<T>(T graph, Graph parentGraph) where T : Graph
		{
			return null;
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x29C83B8", Offset = "0x29C83B8", VA = "0x29C83B8")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x29CA4A0", Offset = "0x29CA4A0", VA = "0x29CA4A0")]
		public void UpdateReferencesFromOwner(GraphOwner owner, bool force = false)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x29CA550", Offset = "0x29CA550", VA = "0x29CA550")]
		public void UpdateReferences(Component newAgent, IBlackboard newParentBlackboard, bool force = false)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x29CA850", Offset = "0x29CA850", VA = "0x29CA850")]
		private void UpdateNodeBBFields()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x29CA91C", Offset = "0x29CA91C", VA = "0x29CA91C", Slot = "9")]
		private void NodeCanvas.Framework.ITaskSystem.UpdateTasksOwner()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x29C8FD4", Offset = "0x29C8FD4", VA = "0x29C8FD4")]
		public void UpdateNodeIDs(bool alsoReorderList)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x29CA9C8", Offset = "0x29CA9C8", VA = "0x29CA9C8")]
		private int AssignNodeID(Node node, int lastID, ref Node[] parsed)
		{
			return default(int);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x29CAC54", Offset = "0x29CAC54", VA = "0x29CAC54")]
		protected void ThreadSafeInitCall(Action call)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x29CACF0", Offset = "0x29CACF0", VA = "0x29CACF0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xE2A0B4", Offset = "0xE2A0B4")]
		public void LoadOverwriteAsync(GraphLoadData data, Action callback)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x29CAE04", Offset = "0x29CAE04", VA = "0x29CAE04")]
		public void LoadOverwrite(GraphLoadData data)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x29CAF98", Offset = "0x29CAF98", VA = "0x29CAF98")]
		public void Initialize(Component newAgent, IBlackboard newParentBlackboard, bool preInitializeSubGraphs)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x29CB134", Offset = "0x29CB134", VA = "0x29CB134")]
		private void PreInitializeSubGraphs()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x29CB524", Offset = "0x29CB524", VA = "0x29CB524")]
		public void StartGraph(Component newAgent, IBlackboard newParentBlackboard, UpdateMode newUpdateMode, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x29C8948", Offset = "0x29C8948", VA = "0x29C8948")]
		public void Stop(bool success = true)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x29CBA9C", Offset = "0x29CBA9C", VA = "0x29CBA9C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x29CB8F8", Offset = "0x29CB8F8", VA = "0x29CB8F8")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x29CBC3C", Offset = "0x29CBC3C", VA = "0x29CBC3C")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x29CBC80", Offset = "0x29CBC80", VA = "0x29CBC80")]
		public void UpdateGraph()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x29CBCA8", Offset = "0x29CBCA8", VA = "0x29CBCA8")]
		public void UpdateGraph(float deltaTime)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x29CBCFC", Offset = "0x29CBCFC", VA = "0x29CBCFC", Slot = "20")]
		public virtual object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x29CBD04", Offset = "0x29CBD04", VA = "0x29CBD04", Slot = "21")]
		public virtual void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x29CBD08", Offset = "0x29CBD08", VA = "0x29CBD08", Slot = "22")]
		protected virtual void OnGraphInitialize()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x29CBD0C", Offset = "0x29CBD0C", VA = "0x29CBD0C", Slot = "23")]
		protected virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x29CBD10", Offset = "0x29CBD10", VA = "0x29CBD10", Slot = "24")]
		protected virtual void OnGraphUpdate()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x29CBD14", Offset = "0x29CBD14", VA = "0x29CBD14", Slot = "25")]
		protected virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x29CBD18", Offset = "0x29CBD18", VA = "0x29CBD18", Slot = "26")]
		protected virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x29CBD1C", Offset = "0x29CBD1C", VA = "0x29CBD1C", Slot = "27")]
		protected virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x29CBD20", Offset = "0x29CBD20", VA = "0x29CBD20", Slot = "28")]
		protected virtual void OnGraphObjectEnable()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x29CBD24", Offset = "0x29CBD24", VA = "0x29CBD24", Slot = "29")]
		protected virtual void OnGraphObjectDisable()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x29CBD28", Offset = "0x29CBD28", VA = "0x29CBD28", Slot = "30")]
		protected virtual void OnGraphObjectDestroy()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x29CBD2C", Offset = "0x29CBD2C", VA = "0x29CBD2C", Slot = "31")]
		protected virtual void OnGraphValidate()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x29CBD30", Offset = "0x29CBD30", VA = "0x29CBD30", Slot = "10")]
		public void SendEvent(string name, object value, object sender)
		{
		}

		[Token(Token = "0x6001C2E")]
		public void SendEvent<T>(string name, T value, object sender)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x29CBE50", Offset = "0x29CBE50", VA = "0x29CBE50")]
		public static void SendGlobalEvent(string name, object value, object sender)
		{
		}

		[Token(Token = "0x6001C30")]
		public static void SendGlobalEvent<T>(string name, T value, object sender)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x29CC048", Offset = "0x29CC048", VA = "0x29CC048")]
		public IEnumerable<BBParameter> GetAllParameters()
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x29CC064", Offset = "0x29CC064", VA = "0x29CC064")]
		public IEnumerable<Connection> GetAllConnections()
		{
			return null;
		}

		[Token(Token = "0x6001C33")]
		public IEnumerable<T> GetAllTasksOfType<T>() where T : Task
		{
			return null;
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x29CC080", Offset = "0x29CC080", VA = "0x29CC080")]
		public Node GetNodeWithID(int searchID)
		{
			return null;
		}

		[Token(Token = "0x6001C35")]
		public IEnumerable<T> GetAllNodesOfType<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001C36")]
		public T GetNodeWithTag<T>(string tagName) where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001C37")]
		public IEnumerable<T> GetNodesWithTag<T>(string tagName) where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001C38")]
		public IEnumerable<T> GetAllTagedNodes<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x29CC19C", Offset = "0x29CC19C", VA = "0x29CC19C")]
		public IEnumerable<Node> GetRootNodes()
		{
			return null;
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x29CC2CC", Offset = "0x29CC2CC", VA = "0x29CC2CC")]
		public IEnumerable<Node> GetLeafNodes()
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		public IEnumerable<T> GetAllNestedGraphs<T>(bool recursive) where T : Graph
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x29CC3FC", Offset = "0x29CC3FC", VA = "0x29CC3FC")]
		public IEnumerable<Graph> GetAllInstancedNestedGraphs()
		{
			return null;
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x29CCA04", Offset = "0x29CCA04", VA = "0x29CCA04")]
		public IEnumerable<BBParameter> GetDefinedParameters()
		{
			return null;
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x29CCB34", Offset = "0x29CCB34", VA = "0x29CCB34")]
		public void PromoteMissingParametersToVariables(IBlackboard bb)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x29CCE24", Offset = "0x29CCE24", VA = "0x29CCE24")]
		public static Graph GetElementGraph(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x29CD024", Offset = "0x29CD024", VA = "0x29CD024")]
		public HierarchyTree.Element GetFlatMetaGraph()
		{
			return null;
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x29CD28C", Offset = "0x29CD28C", VA = "0x29CD28C")]
		public HierarchyTree.Element GetFullMetaGraph()
		{
			return null;
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x29CD408", Offset = "0x29CD408", VA = "0x29CD408")]
		public HierarchyTree.Element GetNestedMetaGraph()
		{
			return null;
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x29CD498", Offset = "0x29CD498", VA = "0x29CD498")]
		private static void DigNestedGraphs(Graph currentGraph, HierarchyTree.Element currentElement)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x29CD140", Offset = "0x29CD140", VA = "0x29CD140")]
		private static HierarchyTree.Element GetTreeNodeElement(Node node, bool recurse, ref int lastID)
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x29CD6D8", Offset = "0x29CD6D8", VA = "0x29CD6D8")]
		private static HierarchyTree.Element CollectSubElements(IGraphElement obj)
		{
			return null;
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x29CD8BC", Offset = "0x29CD8BC", VA = "0x29CD8BC")]
		public IGraphElement GetTaskParentElement(Task targetTask)
		{
			return null;
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x29CD940", Offset = "0x29CD940", VA = "0x29CD940")]
		public IGraphElement GetParameterParentElement(BBParameter targetParameter)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x29CD9C4", Offset = "0x29CD9C4", VA = "0x29CD9C4")]
		public static IEnumerable<Task> GetTasksInElement(IGraphElement target)
		{
			return null;
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x29CDB38", Offset = "0x29CDB38", VA = "0x29CDB38")]
		public static IEnumerable<BBParameter> GetParametersInElement(IGraphElement target)
		{
			return null;
		}

		[Token(Token = "0x6001C4A")]
		public T AddNode<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001C4B")]
		public T AddNode<T>(Vector2 pos) where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x29CDCAC", Offset = "0x29CDCAC", VA = "0x29CDCAC")]
		public Node AddNode(Type nodeType)
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x29CDCD8", Offset = "0x29CDCD8", VA = "0x29CDCD8")]
		public Node AddNode(Type nodeType, Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x29CDDFC", Offset = "0x29CDDFC", VA = "0x29CDDFC")]
		public void RemoveNode(Node node, bool recordUndo = true, bool force = false)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x29CE370", Offset = "0x29CE370", VA = "0x29CE370")]
		public Connection ConnectNodes(Node sourceNode, Node targetNode, int sourceIndex = -1, int targetIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x29CE228", Offset = "0x29CE228", VA = "0x29CE228")]
		public void RemoveConnection(Connection connection, bool recordUndo = true)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x29CE3F8", Offset = "0x29CE3F8", VA = "0x29CE3F8")]
		public static List<Node> CloneNodes(List<Node> originalNodes, [Optional] Graph targetGraph, [Optional] Vector2 originPosition)
		{
			return null;
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x29CED30", Offset = "0x29CED30", VA = "0x29CED30")]
		public void ClearGraph()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x29CEE04", Offset = "0x29CEE04", VA = "0x29CEE04")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2A114", Offset = "0xE2A114")]
		public void StartGraph(Component newAgent, IBlackboard newBlackboard, bool autoUpdate, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x29CEE24", Offset = "0x29CEE24", VA = "0x29CEE24")]
		protected Graph()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public abstract class GraphOwner : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20005B7")]
		public enum EnableAction
		{
			[Token(Token = "0x4001514")]
			EnableBehaviour,
			[Token(Token = "0x4001515")]
			DoNothing
		}

		[Token(Token = "0x20005B8")]
		public enum DisableAction
		{
			[Token(Token = "0x4001517")]
			DisableBehaviour,
			[Token(Token = "0x4001518")]
			PauseBehaviour,
			[Token(Token = "0x4001519")]
			DoNothing
		}

		[Token(Token = "0x20005B9")]
		public enum FirstActivation
		{
			[Token(Token = "0x400151B")]
			OnEnable,
			[Token(Token = "0x400151C")]
			OnStart,
			[Token(Token = "0x400151D")]
			Async
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE144B4", Offset = "0xE144B4")]
		private sealed class <>c__DisplayClass92_0<T>
		{
			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x6001CB5")]
			public <>c__DisplayClass92_0()
			{
			}

			[Token(Token = "0x6001CB6")]
			internal bool <GetExposedParameterValue>b__0(ExposedParameter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE144C4", Offset = "0xE144C4")]
		private sealed class <>c__DisplayClass93_0<T>
		{
			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x6001CB7")]
			public <>c__DisplayClass93_0()
			{
			}

			[Token(Token = "0x6001CB8")]
			internal bool <SetExposedParameterValue>b__0(ExposedParameter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SerializationPair[] _serializedExposedParameters;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2253C", Offset = "0xE2253C")]
		private List<ExposedParameter> <exposedParameters>k__BackingField;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE2256C", Offset = "0xE2256C")]
		[SerializeField]
		private string _boundGraphSerialization;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE225B8", Offset = "0xE225B8")]
		private List<UnityEngine.Object> _boundGraphObjectReferences;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GraphSource _boundGraphSource;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22614", Offset = "0xE22614")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22614", Offset = "0xE22614")]
		[SerializeField]
		private FirstActivation _firstActivation;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22684", Offset = "0xE22684")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22684", Offset = "0xE22684")]
		[SerializeField]
		private EnableAction _enableAction;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE226F4", Offset = "0xE226F4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE226F4", Offset = "0xE226F4")]
		private DisableAction _disableAction;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22764", Offset = "0xE22764")]
		private bool _lockBoundGraphPrefabOverrides;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE227B0", Offset = "0xE227B0")]
		[SerializeField]
		private bool _preInitializeSubGraphs;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE227FC", Offset = "0xE227FC")]
		[SerializeField]
		private Graph.UpdateMode _updateMode;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Graph, Graph> instances;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22848", Offset = "0xE22848")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22858", Offset = "0xE22858")]
		private bool <enableCalled>k__BackingField;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22868", Offset = "0xE22868")]
		private bool <startCalled>k__BackingField;

		[Token(Token = "0x17000445")]
		public List<ExposedParameter> exposedParameters
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x29CEE98", Offset = "0x29CEE98", VA = "0x29CEE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A15C", Offset = "0xE2A15C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x29CEEA0", Offset = "0x29CEEA0", VA = "0x29CEEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A16C", Offset = "0xE2A16C")]
			set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public abstract Graph graph
		{
			[Token(Token = "0x6001C7D")]
			get;
			[Token(Token = "0x6001C7E")]
			set;
		}

		[Token(Token = "0x17000447")]
		public abstract IBlackboard blackboard
		{
			[Token(Token = "0x6001C7F")]
			get;
			[Token(Token = "0x6001C80")]
			set;
		}

		[Token(Token = "0x17000448")]
		public abstract Type graphType
		{
			[Token(Token = "0x6001C81")]
			get;
		}

		[Token(Token = "0x17000449")]
		public bool initialized
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x29CF540", Offset = "0x29CF540", VA = "0x29CF540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1BC", Offset = "0xE2A1BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x29CF548", Offset = "0x29CF548", VA = "0x29CF548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1CC", Offset = "0xE2A1CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public bool enableCalled
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x29CF554", Offset = "0x29CF554", VA = "0x29CF554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1DC", Offset = "0xE2A1DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x29CF55C", Offset = "0x29CF55C", VA = "0x29CF55C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1EC", Offset = "0xE2A1EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public bool startCalled
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x29CF568", Offset = "0x29CF568", VA = "0x29CF568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1FC", Offset = "0xE2A1FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x29CF570", Offset = "0x29CF570", VA = "0x29CF570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A20C", Offset = "0xE2A20C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public GraphSource boundGraphSource
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x29CF57C", Offset = "0x29CF57C", VA = "0x29CF57C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x29CF584", Offset = "0x29CF584", VA = "0x29CF584")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public string boundGraphSerialization
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x29CF58C", Offset = "0x29CF58C", VA = "0x29CF58C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x29CF594", Offset = "0x29CF594", VA = "0x29CF594")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044E")]
		public List<UnityEngine.Object> boundGraphObjectReferences
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x29CF59C", Offset = "0x29CF59C", VA = "0x29CF59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x29CF5A4", Offset = "0x29CF5A4", VA = "0x29CF5A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public bool lockBoundGraphPrefabOverrides
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x29CF5AC", Offset = "0x29CF5AC", VA = "0x29CF5AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x29CF5FC", Offset = "0x29CF5FC", VA = "0x29CF5FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000450")]
		public bool preInitializeSubGraphs
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x29CF608", Offset = "0x29CF608", VA = "0x29CF608")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x29CF610", Offset = "0x29CF610", VA = "0x29CF610")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public FirstActivation firstActivation
		{
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x29CF61C", Offset = "0x29CF61C", VA = "0x29CF61C")]
			get
			{
				return default(FirstActivation);
			}
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x29CF624", Offset = "0x29CF624", VA = "0x29CF624")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public EnableAction enableAction
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x29CF62C", Offset = "0x29CF62C", VA = "0x29CF62C")]
			get
			{
				return default(EnableAction);
			}
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x29CF634", Offset = "0x29CF634", VA = "0x29CF634")]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public DisableAction disableAction
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x29CF63C", Offset = "0x29CF63C", VA = "0x29CF63C")]
			get
			{
				return default(DisableAction);
			}
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x29CF644", Offset = "0x29CF644", VA = "0x29CF644")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public Graph.UpdateMode updateMode
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x29CF64C", Offset = "0x29CF64C", VA = "0x29CF64C")]
			get
			{
				return default(Graph.UpdateMode);
			}
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x29CF654", Offset = "0x29CF654", VA = "0x29CF654")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public bool graphIsBound
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x29CF5D8", Offset = "0x29CF5D8", VA = "0x29CF5D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000456")]
		public bool isRunning
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x29CF65C", Offset = "0x29CF65C", VA = "0x29CF65C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000457")]
		public bool isPaused
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x29CF710", Offset = "0x29CF710", VA = "0x29CF710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000458")]
		public float elapsedTime
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x29CF7C4", Offset = "0x29CF7C4", VA = "0x29CF7C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000019")]
		public static event Action<GraphOwner> onOwnerBehaviourStateChange
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x29CF288", Offset = "0x29CF288", VA = "0x29CF288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A17C", Offset = "0xE2A17C")]
			add
			{
			}
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x29CF344", Offset = "0x29CF344", VA = "0x29CF344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A18C", Offset = "0xE2A18C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action onMonoBehaviourStart
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x29CF400", Offset = "0x29CF400", VA = "0x29CF400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A19C", Offset = "0xE2A19C")]
			add
			{
			}
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x29CF4A0", Offset = "0x29CF4A0", VA = "0x29CF4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1AC", Offset = "0xE2A1AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x29CEEA8", Offset = "0x29CEEA8", VA = "0x29CEEA8", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x29CF0F8", Offset = "0x29CF0F8", VA = "0x29CF0F8", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x29CF86C", Offset = "0x29CF86C", VA = "0x29CF86C")]
		protected Graph GetInstance(Graph originalGraph)
		{
			return null;
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x29CF9C4", Offset = "0x29CF9C4", VA = "0x29CF9C4")]
		public void StartBehaviour()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x29CFB2C", Offset = "0x29CFB2C", VA = "0x29CFB2C")]
		public void StartBehaviour(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x29CF9D0", Offset = "0x29CF9D0", VA = "0x29CF9D0")]
		public void StartBehaviour(Graph.UpdateMode updateMode, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x29CFB3C", Offset = "0x29CFB3C", VA = "0x29CFB3C")]
		public void PauseBehaviour()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x29CFC2C", Offset = "0x29CFC2C", VA = "0x29CFC2C")]
		public void StopBehaviour(bool success = true)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x29CFD30", Offset = "0x29CFD30", VA = "0x29CFD30")]
		public void UpdateBehaviour()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x29CFDEC", Offset = "0x29CFDEC", VA = "0x29CFDEC")]
		public void RestartBehaviour()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x29CFE1C", Offset = "0x29CFE1C", VA = "0x29CFE1C")]
		public void SendEvent(string eventName)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x29CFEE4", Offset = "0x29CFEE4", VA = "0x29CFEE4")]
		public void SendEvent(string eventName, object value, object sender)
		{
		}

		[Token(Token = "0x6001CA8")]
		public void SendEvent<T>(string eventName, T eventValue, object sender)
		{
		}

		[Token(Token = "0x6001CA9")]
		public T GetExposedParameterValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CAA")]
		public void SetExposedParameterValue<T>(string name, T value)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x29CFFC0", Offset = "0x29CFFC0", VA = "0x29CFFC0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x29CFFC4", Offset = "0x29CFFC4", VA = "0x29CFFC4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x29D03EC", Offset = "0x29D03EC", VA = "0x29D03EC")]
		public void BindExposedParameters()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x29D0514", Offset = "0x29D0514", VA = "0x29D0514")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x29D0578", Offset = "0x29D0578", VA = "0x29D0578")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x29D05D4", Offset = "0x29D05D4", VA = "0x29D05D4")]
		private void InvokeStartEvent()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x29D0618", Offset = "0x29D0618", VA = "0x29D0618")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x29D0664", Offset = "0x29D0664", VA = "0x29D0664")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x29D0B10", Offset = "0x29D0B10", VA = "0x29D0B10")]
		protected GraphOwner()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x29D0BD0", Offset = "0x29D0BD0", VA = "0x29D0BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A21C", Offset = "0xE2A21C")]
		private void <Initialize>b__95_0()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public abstract class GraphOwner<T> : GraphOwner where T : Graph
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _graph;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UnityEngine.Object _blackboard;

		[Token(Token = "0x17000459")]
		public sealed override Graph graph
		{
			[Token(Token = "0x6001CB9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBA")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public T behaviour
		{
			[Token(Token = "0x6001CBB")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public sealed override IBlackboard blackboard
		{
			[Token(Token = "0x6001CBD")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBE")]
			set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public sealed override Type graphType
		{
			[Token(Token = "0x6001CBF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC0")]
		public void StartBehaviour(T newGraph)
		{
		}

		[Token(Token = "0x6001CC1")]
		public void StartBehaviour(T newGraph, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001CC2")]
		public void StartBehaviour(T newGraph, Graph.UpdateMode updateMode, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6001CC3")]
		public void SwitchBehaviour(T newGraph)
		{
		}

		[Token(Token = "0x6001CC4")]
		public void SwitchBehaviour(T newGraph, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001CC5")]
		public void SwitchBehaviour(T newGraph, Graph.UpdateMode updateMode, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6001CC6")]
		protected GraphOwner()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public static class IGraphAssignableExtensions
	{
		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE144E4", Offset = "0xE144E4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IGraphAssignable assignable;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> callback;

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x2735720", Offset = "0x2735720", VA = "0x2735720")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x2735728", Offset = "0x2735728", VA = "0x2735728")]
			internal void <TryStartSubGraph>b__0(bool result)
			{
			}
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x30AB11C", Offset = "0x30AB11C", VA = "0x30AB11C")]
		public static Graph CheckInstance(this IGraphAssignable assignable)
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x30AB7D0", Offset = "0x30AB7D0", VA = "0x30AB7D0")]
		public static bool TryStartSubGraph(this IGraphAssignable assignable, Component agent, [Optional] Action<bool> callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x30ABFB8", Offset = "0x30ABFB8", VA = "0x30ABFB8")]
		public static bool TryStopSubGraph(this IGraphAssignable assignable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x30AC13C", Offset = "0x30AC13C", VA = "0x30AC13C")]
		public static bool TryPauseSubGraph(this IGraphAssignable assignable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x30AC2B8", Offset = "0x30AC2B8", VA = "0x30AC2B8")]
		public static bool TryResumeSubGraph(this IGraphAssignable assignable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x30AC434", Offset = "0x30AC434", VA = "0x30AC434")]
		public static bool TryUpdateSubGraph(this IGraphAssignable assignable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x30ABBC0", Offset = "0x30ABBC0", VA = "0x30ABBC0")]
		public static void TryWriteAndBindMappedVariables(this IGraphAssignable assignable)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x30AC6A8", Offset = "0x30AC6A8", VA = "0x30AC6A8")]
		public static void TryReadAndUnbindMappedVariables(this IGraphAssignable assignable)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x30ACA6C", Offset = "0x30ACA6C", VA = "0x30ACA6C")]
		public static void ValidateSubGraphAndParameters(this IGraphAssignable assignable)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x30ACDD8", Offset = "0x30ACDD8", VA = "0x30ACDD8")]
		public static void AutoLinkByName(this IGraphAssignable assignable)
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public interface IGraphElement
	{
		[Token(Token = "0x1700045D")]
		string name
		{
			[Token(Token = "0x6001CD3")]
			get;
		}

		[Token(Token = "0x1700045E")]
		string UID
		{
			[Token(Token = "0x6001CD4")]
			get;
		}

		[Token(Token = "0x1700045F")]
		Graph graph
		{
			[Token(Token = "0x6001CD5")]
			get;
		}

		[Token(Token = "0x17000460")]
		Status status
		{
			[Token(Token = "0x6001CD6")]
			get;
		}
	}
	[Token(Token = "0x20005C0")]
	public interface IUpdatable : IGraphElement
	{
		[Token(Token = "0x6001CD7")]
		void Update();
	}
	[Token(Token = "0x20005C1")]
	public interface IInvokable : IGraphElement
	{
		[Token(Token = "0x6001CD8")]
		string GetInvocationID();

		[Token(Token = "0x6001CD9")]
		object Invoke(params object[] args);

		[Token(Token = "0x6001CDA")]
		void InvokeAsync(Action<object> callback, params object[] args);
	}
	[Token(Token = "0x20005C2")]
	public interface IGraphAssignable : IGraphElement
	{
		[Token(Token = "0x17000461")]
		Graph subGraph
		{
			[Token(Token = "0x6001CDB")]
			get;
			[Token(Token = "0x6001CDC")]
			set;
		}

		[Token(Token = "0x17000462")]
		Graph currentInstance
		{
			[Token(Token = "0x6001CDD")]
			get;
			[Token(Token = "0x6001CDE")]
			set;
		}

		[Token(Token = "0x17000463")]
		Dictionary<Graph, Graph> instances
		{
			[Token(Token = "0x6001CDF")]
			get;
			[Token(Token = "0x6001CE0")]
			set;
		}

		[Token(Token = "0x17000464")]
		BBParameter subGraphParameter
		{
			[Token(Token = "0x6001CE1")]
			get;
		}

		[Token(Token = "0x17000465")]
		List<BBMappingParameter> variablesMap
		{
			[Token(Token = "0x6001CE2")]
			get;
			[Token(Token = "0x6001CE3")]
			set;
		}
	}
	[Token(Token = "0x20005C3")]
	public interface IGraphAssignable<T> : IGraphAssignable, IGraphElement where T : Graph
	{
		[Token(Token = "0x17000466")]
		new T subGraph
		{
			[Token(Token = "0x6001CE4")]
			get;
			[Token(Token = "0x6001CE5")]
			set;
		}

		[Token(Token = "0x17000467")]
		new T currentInstance
		{
			[Token(Token = "0x6001CE6")]
			get;
			[Token(Token = "0x6001CE7")]
			set;
		}
	}
	[Token(Token = "0x20005C4")]
	public interface ITaskAssignable : IGraphElement
	{
		[Token(Token = "0x17000468")]
		Task task
		{
			[Token(Token = "0x6001CE8")]
			get;
			[Token(Token = "0x6001CE9")]
			set;
		}
	}
	[Token(Token = "0x20005C5")]
	public interface ITaskAssignable<T> : ITaskAssignable, IGraphElement where T : Task
	{
	}
	[Token(Token = "0x20005C6")]
	public interface IHaveNodeReference : IGraphElement
	{
		[Token(Token = "0x17000469")]
		INodeReference targetReference
		{
			[Token(Token = "0x6001CEA")]
			get;
		}
	}
	[Token(Token = "0x20005C7")]
	public interface IReflectedWrapper
	{
		[Token(Token = "0x6001CEB")]
		ISerializedReflectedInfo GetSerializedInfo();
	}
	[Token(Token = "0x20005C8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE144F4", Offset = "0xE144F4")]
	public interface ISubTasksContainer
	{
		[Token(Token = "0x6001CEC")]
		Task[] GetSubTasks();
	}
	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE1452C", Offset = "0xE1452C")]
	public interface ISubParametersContainer
	{
		[Token(Token = "0x6001CED")]
		BBParameter[] GetSubParameters();
	}
	[Serializable]
	[Token(Token = "0x20005CA")]
	[SpoofAOT]
	[fsDeserializeOverwrite]
	[fsSerializeAsReference]
	public abstract class Node : IGraphElement, ISerializationCollectable
	{
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE145AC", Offset = "0xE145AC")]
		protected class AutoSortWithChildrenConnections : Attribute
		{
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x2EE26E8", Offset = "0x2EE26E8", VA = "0x2EE26E8")]
			public AutoSortWithChildrenConnections()
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE145C0", Offset = "0xE145C0")]
		private sealed class <YieldBreak>d__92 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action resume;

			[Token(Token = "0x17000485")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D45")]
				[Address(RVA = "0x2EE2698", Offset = "0x2EE2698", VA = "0x2EE2698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000486")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D47")]
				[Address(RVA = "0x2EE26E0", Offset = "0x2EE26E0", VA = "0x2EE26E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x2EE25B0", Offset = "0x2EE25B0", VA = "0x2EE25B0")]
			[DebuggerHidden]
			public <YieldBreak>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x2EE25DC", Offset = "0x2EE25DC", VA = "0x2EE25DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x2EE25E0", Offset = "0x2EE25E0", VA = "0x2EE25E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x2EE26A0", Offset = "0x2EE26A0", VA = "0x2EE26A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE145D0", Offset = "0xE145D0")]
		private sealed class <>c__DisplayClass102_0
		{
			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node b;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Node a;

			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x2EE2508", Offset = "0x2EE2508", VA = "0x2EE2508")]
			public <>c__DisplayClass102_0()
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x2EE2510", Offset = "0x2EE2510", VA = "0x2EE2510")]
			internal bool <AreNodesConnected>b__0(Connection c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x2EE2534", Offset = "0x2EE2534", VA = "0x2EE2534")]
			internal bool <AreNodesConnected>b__1(Connection c)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE145E0", Offset = "0xE145E0")]
		private sealed class <>c
		{
			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Connection, Node> <>9__105_0;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Connection, Node> <>9__106_0;

			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x2EE24D0", Offset = "0x2EE24D0", VA = "0x2EE24D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x2EE24D8", Offset = "0x2EE24D8", VA = "0x2EE24D8")]
			internal Node <GetParentNodes>b__105_0(Connection c)
			{
				return null;
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x2EE24F0", Offset = "0x2EE24F0", VA = "0x2EE24F0")]
			internal Node <GetChildNodes>b__106_0(Connection c)
			{
				return null;
			}
		}

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE145F0", Offset = "0xE145F0")]
		private sealed class <>c__DisplayClass107_0
		{
			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node parentNode;

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x2EE2558", Offset = "0x2EE2558", VA = "0x2EE2558")]
			public <>c__DisplayClass107_0()
			{
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x2EE2560", Offset = "0x2EE2560", VA = "0x2EE2560")]
			internal bool <IsChildOf>b__0(Connection c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14600", Offset = "0xE14600")]
		private sealed class <>c__DisplayClass108_0
		{
			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node childNode;

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x2EE2584", Offset = "0x2EE2584", VA = "0x2EE2584")]
			public <>c__DisplayClass108_0()
			{
			}

			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x2EE258C", Offset = "0x2EE258C", VA = "0x2EE258C")]
			internal bool <IsParentOf>b__0(Connection c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _UID;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _tag;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[fsIgnoreInBuild]
		[SerializeField]
		private Vector2 _position;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[fsIgnoreInBuild]
		[SerializeField]
		private string _comment;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[fsIgnoreInBuild]
		private bool _isBreakpoint;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Graph _graph;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _ID;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Connection> _inConnections;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Connection> _outConnections;

		[NonSerialized]
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Status _status;

		[NonSerialized]
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _nameCache;

		[NonSerialized]
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _descriptionCache;

		[NonSerialized]
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _priorityCache;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22970", Offset = "0xE22970")]
		private float <timeStarted>k__BackingField;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22980", Offset = "0xE22980")]
		private bool <isChecked>k__BackingField;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22990", Offset = "0xE22990")]
		private bool <breakPointReached>k__BackingField;

		[Token(Token = "0x1700046A")]
		public Graph graph
		{
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x269DB3C", Offset = "0x269DB3C", VA = "0x269DB3C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x269DB44", Offset = "0x269DB44", VA = "0x269DB44")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		public int ID
		{
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x269DB4C", Offset = "0x269DB4C", VA = "0x269DB4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x269DB54", Offset = "0x269DB54", VA = "0x269DB54")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public string UID
		{
			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x269DB5C", Offset = "0x269DB5C", VA = "0x269DB5C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		public List<Connection> inConnections
		{
			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x269DC0C", Offset = "0x269DC0C", VA = "0x269DC0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x269DC14", Offset = "0x269DC14", VA = "0x269DC14")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public List<Connection> outConnections
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x269DC1C", Offset = "0x269DC1C", VA = "0x269DC1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x269DC24", Offset = "0x269DC24", VA = "0x269DC24")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		public Vector2 position
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x269DC2C", Offset = "0x269DC2C", VA = "0x269DC2C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x269DC34", Offset = "0x269DC34", VA = "0x269DC34")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		private string customName
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x269DC3C", Offset = "0x269DC3C", VA = "0x269DC3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x269DC44", Offset = "0x269DC44", VA = "0x269DC44")]
			set
			{
			}
		}

		[Token(Token = "0x17000471")]
		public string tag
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x269DC4C", Offset = "0x269DC4C", VA = "0x269DC4C", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x269DC54", Offset = "0x269DC54", VA = "0x269DC54")]
			set
			{
			}
		}

		[Token(Token = "0x17000472")]
		public string comments
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x269DC5C", Offset = "0x269DC5C", VA = "0x269DC5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x269DC64", Offset = "0x269DC64", VA = "0x269DC64")]
			set
			{
			}
		}

		[Token(Token = "0x17000473")]
		public bool isBreakpoint
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x269DC6C", Offset = "0x269DC6C", VA = "0x269DC6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x269DC74", Offset = "0x269DC74", VA = "0x269DC74")]
			set
			{
			}
		}

		[Token(Token = "0x17000474")]
		public virtual string name
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x269A43C", Offset = "0x269A43C", VA = "0x269A43C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x269DC80", Offset = "0x269DC80", VA = "0x269DC80", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000475")]
		public virtual string description
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x269DC88", Offset = "0x269DC88", VA = "0x269DC88", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		public virtual int priority
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x269DD64", Offset = "0x269DD64", VA = "0x269DD64", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000477")]
		public abstract int maxInConnections
		{
			[Token(Token = "0x6001D05")]
			get;
		}

		[Token(Token = "0x17000478")]
		public abstract int maxOutConnections
		{
			[Token(Token = "0x6001D06")]
			get;
		}

		[Token(Token = "0x17000479")]
		public abstract Type outConnectionType
		{
			[Token(Token = "0x6001D07")]
			get;
		}

		[Token(Token = "0x1700047A")]
		public abstract bool allowAsPrime
		{
			[Token(Token = "0x6001D08")]
			get;
		}

		[Token(Token = "0x1700047B")]
		public abstract bool canSelfConnect
		{
			[Token(Token = "0x6001D09")]
			get;
		}

		[Token(Token = "0x1700047C")]
		public abstract Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001D0A")]
			get;
		}

		[Token(Token = "0x1700047D")]
		public abstract Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001D0B")]
			get;
		}

		[Token(Token = "0x1700047E")]
		public Status status
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x269DE14", Offset = "0x269DE14", VA = "0x269DE14", Slot = "7")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x269B070", Offset = "0x269B070", VA = "0x269B070")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public Component graphAgent
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x269CD14", Offset = "0x269CD14", VA = "0x269CD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		public IBlackboard graphBlackboard
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x269B0A8", Offset = "0x269B0A8", VA = "0x269B0A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		public float elapsedTime
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x269DE1C", Offset = "0x269DE1C", VA = "0x269DE1C", Slot = "20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000482")]
		private float timeStarted
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x269DE50", Offset = "0x269DE50", VA = "0x269DE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A2CC", Offset = "0xE2A2CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x269DE58", Offset = "0x269DE58", VA = "0x269DE58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A2DC", Offset = "0xE2A2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		private bool isChecked
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x269DE60", Offset = "0x269DE60", VA = "0x269DE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A2EC", Offset = "0xE2A2EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x269DE68", Offset = "0x269DE68", VA = "0x269DE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A2FC", Offset = "0xE2A2FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		private bool breakPointReached
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x269DE74", Offset = "0x269DE74", VA = "0x269DE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A30C", Offset = "0xE2A30C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x269DE7C", Offset = "0x269DE7C", VA = "0x269DE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A31C", Offset = "0xE2A31C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x269DE88", Offset = "0x269DE88", VA = "0x269DE88")]
		public Node()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x269DF48", Offset = "0x269DF48", VA = "0x269DF48")]
		public static Node Create(Graph targetGraph, Type nodeType, Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x269E218", Offset = "0x269E218", VA = "0x269E218")]
		public Node Duplicate(Graph targetGraph)
		{
			return null;
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x269E178", Offset = "0x269E178", VA = "0x269E178")]
		public void Validate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x269E938", Offset = "0x269E938", VA = "0x269E938")]
		public Status Execute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x269E9AC", Offset = "0x269E9AC", VA = "0x269E9AC")]
		public void Reset(bool recursively = true)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x269EA94", Offset = "0x269EA94", VA = "0x269EA94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A32C", Offset = "0xE2A32C")]
		private IEnumerator YieldBreak(Action resume)
		{
			return null;
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x269AD48", Offset = "0x269AD48", VA = "0x269AD48")]
		public Status Error(object msg)
		{
			return default(Status);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x269EB0C", Offset = "0x269EB0C", VA = "0x269EB0C")]
		public Status Fail(string msg)
		{
			return default(Status);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x269EB18", Offset = "0x269EB18", VA = "0x269EB18")]
		public void Warn(string msg)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x269EB1C", Offset = "0x269EB1C", VA = "0x269EB1C")]
		public void SetStatus(Status status)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x269C690", Offset = "0x269C690", VA = "0x269C690")]
		protected void SendEvent(string eventName)
		{
		}

		[Token(Token = "0x6001D23")]
		protected void SendEvent<T>(string eventName, T value)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x269EB54", Offset = "0x269EB54", VA = "0x269EB54")]
		public static bool IsNewConnectionAllowed(Node sourceNode, Node targetNode, [Optional] Connection refConnection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x269ECBC", Offset = "0x269ECBC", VA = "0x269ECBC", Slot = "21")]
		protected virtual bool CanConnectToTarget(Node targetNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x269ECC4", Offset = "0x269ECC4", VA = "0x269ECC4", Slot = "22")]
		protected virtual bool CanConnectFromSource(Node sourceNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x269ECCC", Offset = "0x269ECCC", VA = "0x269ECCC")]
		public static bool AreNodesConnected(Node a, Node b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x269EEB8", Offset = "0x269EEB8", VA = "0x269EEB8")]
		public Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x269EF60", Offset = "0x269EF60", VA = "0x269EF60")]
		public void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x269F004", Offset = "0x269F004", VA = "0x269F004")]
		public IEnumerable<Node> GetParentNodes()
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x269F170", Offset = "0x269F170", VA = "0x269F170")]
		public IEnumerable<Node> GetChildNodes()
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x269F2DC", Offset = "0x269F2DC", VA = "0x269F2DC")]
		public bool IsChildOf(Node parentNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x269F3D4", Offset = "0x269F3D4", VA = "0x269F3D4")]
		public bool IsParentOf(Node childNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x269F4CC", Offset = "0x269F4CC", VA = "0x269F4CC", Slot = "23")]
		internal virtual string GetWarningOrError()
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x269E678", Offset = "0x269E678", VA = "0x269E678")]
		private string GetHardError()
		{
			return null;
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x269F640", Offset = "0x269F640", VA = "0x269F640", Slot = "24")]
		protected virtual Status OnExecute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x269F648", Offset = "0x269F648", VA = "0x269F648", Slot = "25")]
		protected virtual void OnReset()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x269F64C", Offset = "0x269F64C", VA = "0x269F64C", Slot = "26")]
		public virtual void OnCreate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x269F650", Offset = "0x269F650", VA = "0x269F650", Slot = "27")]
		public virtual void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x269F654", Offset = "0x269F654", VA = "0x269F654", Slot = "28")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x269F658", Offset = "0x269F658", VA = "0x269F658", Slot = "29")]
		public virtual void OnParentConnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x269F65C", Offset = "0x269F65C", VA = "0x269F65C", Slot = "30")]
		public virtual void OnParentDisconnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x269F660", Offset = "0x269F660", VA = "0x269F660", Slot = "31")]
		public virtual void OnChildConnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x269F664", Offset = "0x269F664", VA = "0x269F664", Slot = "32")]
		public virtual void OnChildDisconnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x269F668", Offset = "0x269F668", VA = "0x269F668", Slot = "33")]
		public virtual void OnChildrenConnectionsSorted(int[] oldIndeces)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x269F66C", Offset = "0x269F66C", VA = "0x269F66C", Slot = "34")]
		public virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x269F670", Offset = "0x269F670", VA = "0x269F670", Slot = "35")]
		public virtual void OnPostGraphStarted()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x269F674", Offset = "0x269F674", VA = "0x269F674", Slot = "36")]
		public virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x269F678", Offset = "0x269F678", VA = "0x269F678", Slot = "37")]
		public virtual void OnPostGraphStoped()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x269F67C", Offset = "0x269F67C", VA = "0x269F67C", Slot = "38")]
		public virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x269F680", Offset = "0x269F680", VA = "0x269F680", Slot = "39")]
		public virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x269F684", Offset = "0x269F684", VA = "0x269F684", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D1")]
	public interface INodeReference
	{
		[Token(Token = "0x17000487")]
		Type type
		{
			[Token(Token = "0x6001D53")]
			get;
		}

		[Token(Token = "0x6001D54")]
		Node Get(Graph graph);

		[Token(Token = "0x6001D55")]
		void Set(Node target);
	}
	[Serializable]
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "fsAutoInstance", RVA = "0xE14610", Offset = "0xE14610")]
	[AttributeAttribute(Name = "fsForwardAttribute", RVA = "0xE14610", Offset = "0xE14610")]
	public class NodeReference<T> : INodeReference where T : Node
	{
		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14660", Offset = "0xE14660")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NodeReference<T> _this;

			[Token(Token = "0x6001D5D")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001D5E")]
			internal bool <Get>b__0(T x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _targetNodeUID;

		[NonSerialized]
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private WeakReference<T> _targetNodeRef;

		[Token(Token = "0x17000488")]
		private Type NodeCanvas.Framework.INodeReference.type
		{
			[Token(Token = "0x6001D56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D57")]
		private Node NodeCanvas.Framework.INodeReference.Get(Graph graph)
		{
			return null;
		}

		[Token(Token = "0x6001D58")]
		private void NodeCanvas.Framework.INodeReference.Set(Node target)
		{
		}

		[Token(Token = "0x6001D59")]
		public NodeReference()
		{
		}

		[Token(Token = "0x6001D5A")]
		public NodeReference(T target)
		{
		}

		[Token(Token = "0x6001D5B")]
		public T Get(Graph graph)
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		public void Set(T target)
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public enum Status
	{
		[Token(Token = "0x4001543")]
		Failure,
		[Token(Token = "0x4001544")]
		Success,
		[Token(Token = "0x4001545")]
		Running,
		[Token(Token = "0x4001546")]
		Resting,
		[Token(Token = "0x4001547")]
		Error,
		[Token(Token = "0x4001548")]
		Optional
	}
	[Token(Token = "0x20005D5")]
	[DoNotList]
	public class ActionList : ActionTask
	{
		[Token(Token = "0x20005D6")]
		public enum ActionsExecutionMode
		{
			[Token(Token = "0x400154E")]
			ActionsRunInSequence,
			[Token(Token = "0x400154F")]
			ActionsRunInParallel
		}

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ActionsExecutionMode executionMode;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<ActionTask> actions;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentActionIndex;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] finishedIndeces;

		[Token(Token = "0x17000489")]
		protected override string info
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x2A9C894", Offset = "0x2A9C894", VA = "0x2A9C894", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x2A9CAE0", Offset = "0x2A9CAE0", VA = "0x2A9CAE0", Slot = "6")]
		public override Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x2A9CE90", Offset = "0x2A9CE90", VA = "0x2A9CE90", Slot = "11")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x2A9CF0C", Offset = "0x2A9CF0C", VA = "0x2A9CF0C", Slot = "16")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x2A9CF9C", Offset = "0x2A9CF9C", VA = "0x2A9CF9C", Slot = "17")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x2A9D440", Offset = "0x2A9D440", VA = "0x2A9D440", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x2A9D5C4", Offset = "0x2A9D5C4", VA = "0x2A9D5C4", Slot = "20")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x2A9D6E4", Offset = "0x2A9D6E4", VA = "0x2A9D6E4", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x2A9CCF4", Offset = "0x2A9CCF4", VA = "0x2A9CCF4")]
		public void AddAction(ActionTask action)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x2A9D7C0", Offset = "0x2A9D7C0", VA = "0x2A9D7C0", Slot = "9")]
		internal override string GetWarningOrError()
		{
			return null;
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x2A9D86C", Offset = "0x2A9D86C", VA = "0x2A9D86C")]
		public ActionList()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public abstract class ActionTask<T> : ActionTask where T : class
	{
		[Token(Token = "0x1700048A")]
		public sealed override Type agentType
		{
			[Token(Token = "0x6001D6A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		public new T agent
		{
			[Token(Token = "0x6001D6B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6C")]
		protected ActionTask()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public abstract class ActionTask : Task
	{
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14680", Offset = "0xE14680")]
		private sealed class <IndependentActionUpdater>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionTask <>4__this;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Component agent;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IBlackboard blackboard;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Status> callback;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D83")]
				[Address(RVA = "0x2728DE8", Offset = "0x2728DE8", VA = "0x2728DE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D85")]
				[Address(RVA = "0x2728E30", Offset = "0x2728E30", VA = "0x2728E30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x2728D08", Offset = "0x2728D08", VA = "0x2728D08")]
			[DebuggerHidden]
			public <IndependentActionUpdater>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x2728D34", Offset = "0x2728D34", VA = "0x2728D34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x2728D38", Offset = "0x2728D38", VA = "0x2728D38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x2728DF0", Offset = "0x2728DF0", VA = "0x2728DF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Status status;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float timeStarted;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool latch;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE229B0", Offset = "0xE229B0")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x1700048C")]
		public float elapsedTime
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x2A9EBFC", Offset = "0x2A9EBFC", VA = "0x2A9EBFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700048D")]
		public bool isRunning
		{
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x2A9CAD0", Offset = "0x2A9CAD0", VA = "0x2A9CAD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048E")]
		public bool isPaused
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x2A9ECC8", Offset = "0x2A9ECC8", VA = "0x2A9ECC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A3DC", Offset = "0xE2A3DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x2A9ECD0", Offset = "0x2A9ECD0", VA = "0x2A9ECD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A3EC", Offset = "0xE2A3EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x2A9E128", Offset = "0x2A9E128", VA = "0x2A9E128")]
		public void ExecuteIndependent(Component agent, IBlackboard blackboard, Action<Status> callback)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x2A9ECDC", Offset = "0x2A9ECDC", VA = "0x2A9ECDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A3FC", Offset = "0xE2A3FC")]
		private IEnumerator IndependentActionUpdater(Component agent, IBlackboard blackboard, Action<Status> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x2A9EDA0", Offset = "0x2A9EDA0", VA = "0x2A9EDA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2A45C", Offset = "0xE2A45C")]
		public Status ExecuteAction(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x2A9D254", Offset = "0x2A9D254", VA = "0x2A9D254")]
		public Status Execute(Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x2A9D24C", Offset = "0x2A9D24C", VA = "0x2A9D24C")]
		public void EndAction()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x2A9D3D0", Offset = "0x2A9D3D0", VA = "0x2A9D3D0")]
		public void EndAction(bool success)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x2A9D514", Offset = "0x2A9D514", VA = "0x2A9D514")]
		public void EndAction(bool? success)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x2A9D6BC", Offset = "0x2A9D6BC", VA = "0x2A9D6BC")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x2A9EDA4", Offset = "0x2A9EDA4", VA = "0x2A9EDA4", Slot = "16")]
		protected virtual void OnExecute()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x2A9EDA8", Offset = "0x2A9EDA8", VA = "0x2A9EDA8", Slot = "17")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x2A9EDAC", Offset = "0x2A9EDAC", VA = "0x2A9EDAC", Slot = "18")]
		protected virtual void OnStop(bool interrupted)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x2A9EDBC", Offset = "0x2A9EDBC", VA = "0x2A9EDBC", Slot = "19")]
		protected virtual void OnStop()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x2A9EDC0", Offset = "0x2A9EDC0", VA = "0x2A9EDC0", Slot = "20")]
		protected virtual void OnPause()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x2A9EDC4", Offset = "0x2A9EDC4", VA = "0x2A9EDC4", Slot = "21")]
		protected virtual void OnResume()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x2A9D8F8", Offset = "0x2A9D8F8", VA = "0x2A9D8F8")]
		protected ActionTask()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	[DoNotList]
	public class ConditionList : ConditionTask
	{
		[Token(Token = "0x20005DB")]
		public enum ConditionsCheckMode
		{
			[Token(Token = "0x400155D")]
			AllTrueRequired,
			[Token(Token = "0x400155E")]
			AnyTrueSuffice
		}

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ConditionsCheckMode checkMode;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<ConditionTask> conditions;

		[Token(Token = "0x17000491")]
		private bool allTrueRequired
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x22B8A78", Offset = "0x22B8A78", VA = "0x22B8A78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000492")]
		protected override string info
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x22B8A88", Offset = "0x22B8A88", VA = "0x22B8A88", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x22B8CE4", Offset = "0x22B8CE4", VA = "0x22B8CE4", Slot = "6")]
		public override Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x22B9094", Offset = "0x22B9094", VA = "0x22B9094", Slot = "16")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x22B9158", Offset = "0x22B9158", VA = "0x22B9158", Slot = "17")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x22B91F4", Offset = "0x22B91F4", VA = "0x22B91F4", Slot = "18")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x22B9328", Offset = "0x22B9328", VA = "0x22B9328", Slot = "15")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x22B8EF8", Offset = "0x22B8EF8", VA = "0x22B8EF8")]
		public void AddCondition(ConditionTask condition)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x22B9404", Offset = "0x22B9404", VA = "0x22B9404", Slot = "9")]
		internal override string GetWarningOrError()
		{
			return null;
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x22B94B0", Offset = "0x22B94B0", VA = "0x22B94B0")]
		public ConditionList()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public abstract class ConditionTask<T> : ConditionTask where T : class
	{
		[Token(Token = "0x17000493")]
		public sealed override Type agentType
		{
			[Token(Token = "0x6001D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		public new T agent
		{
			[Token(Token = "0x6001D91")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D92")]
		protected ConditionTask()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public abstract class ConditionTask : Task
	{
		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE146A0", Offset = "0xE146A0")]
		private sealed class <Flip>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionTask <>4__this;

			[Token(Token = "0x17000496")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA3")]
				[Address(RVA = "0x2729CE0", Offset = "0x2729CE0", VA = "0x2729CE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000497")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA5")]
				[Address(RVA = "0x2729D28", Offset = "0x2729D28", VA = "0x2729D28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x2729C18", Offset = "0x2729C18", VA = "0x2729C18")]
			[DebuggerHidden]
			public <Flip>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x2729C44", Offset = "0x2729C44", VA = "0x2729C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x2729C48", Offset = "0x2729C48", VA = "0x2729C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x2729CE8", Offset = "0x2729CE8", VA = "0x2729CE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _invert;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int yieldReturn;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int yields;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isRuntimeEnabled;

		[Token(Token = "0x17000495")]
		public bool invert
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x22B9938", Offset = "0x22B9938", VA = "0x22B9938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x22B9940", Offset = "0x22B9940", VA = "0x22B9940")]
			set
			{
			}
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x22B81F4", Offset = "0x22B81F4", VA = "0x22B81F4")]
		public void Enable(Component agent, IBlackboard bb)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x22B82B8", Offset = "0x22B82B8", VA = "0x22B82B8")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x22B994C", Offset = "0x22B994C", VA = "0x22B994C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2A4E4", Offset = "0xE2A4E4")]
		public bool CheckCondition(Component agent, IBlackboard blackboard)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x22B841C", Offset = "0x22B841C", VA = "0x22B841C")]
		public bool Check(Component agent, IBlackboard blackboard)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x22B98E0", Offset = "0x22B98E0", VA = "0x22B98E0")]
		public bool CheckOnce(Component agent, IBlackboard blackboard)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x22A7818", Offset = "0x22A7818", VA = "0x22A7818")]
		protected void YieldReturn(bool value)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x22B9950", Offset = "0x22B9950", VA = "0x22B9950")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A51C", Offset = "0xE2A51C")]
		private IEnumerator Flip()
		{
			return null;
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x22B99C8", Offset = "0x22B99C8", VA = "0x22B99C8", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x22B99CC", Offset = "0x22B99CC", VA = "0x22B99CC", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x22B99D0", Offset = "0x22B99D0", VA = "0x22B99D0", Slot = "18")]
		protected virtual bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x22A6D70", Offset = "0x22A6D70", VA = "0x22A6D70")]
		protected ConditionTask()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE146B0", Offset = "0xE146B0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE146B0", Offset = "0xE146B0")]
	public class EventReceiverAttribute : Attribute
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string[] eventMessages;

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x28C045C", Offset = "0x28C045C", VA = "0x28C045C")]
		public EventReceiverAttribute(params string[] args)
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public interface ITaskSystem
	{
		[Token(Token = "0x17000498")]
		Component agent
		{
			[Token(Token = "0x6001DA7")]
			get;
		}

		[Token(Token = "0x17000499")]
		IBlackboard blackboard
		{
			[Token(Token = "0x6001DA8")]
			get;
		}

		[Token(Token = "0x1700049A")]
		UnityEngine.Object contextObject
		{
			[Token(Token = "0x6001DA9")]
			get;
		}

		[Token(Token = "0x1700049B")]
		float elapsedTime
		{
			[Token(Token = "0x6001DAA")]
			get;
		}

		[Token(Token = "0x1700049C")]
		float deltaTime
		{
			[Token(Token = "0x6001DAB")]
			get;
		}

		[Token(Token = "0x6001DAC")]
		void UpdateTasksOwner();

		[Token(Token = "0x6001DAD")]
		void SendEvent(string name, object value, object sender);

		[Token(Token = "0x6001DAE")]
		void SendEvent<T>(string name, T value, object sender);
	}
	[Serializable]
	[Token(Token = "0x20005E1")]
	[fsDeserializeOverwrite]
	[SpoofAOT]
	public abstract class Task : ISerializationCollectable, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14738", Offset = "0xE14738")]
		protected class GetFromAgentAttribute : Attribute
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x31301F8", Offset = "0x31301F8", VA = "0x31301F8")]
			public GetFromAgentAttribute()
			{
			}
		}

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE229D0", Offset = "0xE229D0")]
		private bool _isUserDisabled;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22A08", Offset = "0xE22A08")]
		protected internal TaskAgentParameter _agentParameter;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ITaskSystem _ownerSystem;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Component _currentAgent;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _taskName;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _taskDescription;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _obsoleteInfo;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isRuntimeActive;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isInitSuccess;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventRouter _eventRouter;

		[Token(Token = "0x1700049D")]
		public ITaskSystem ownerSystem
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x258FF8C", Offset = "0x258FF8C", VA = "0x258FF8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x258FF94", Offset = "0x258FF94", VA = "0x258FF94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public Component ownerSystemAgent
		{
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x258FF9C", Offset = "0x258FF9C", VA = "0x258FF9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049F")]
		public IBlackboard ownerSystemBlackboard
		{
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x2590054", Offset = "0x2590054", VA = "0x2590054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		public float ownerSystemElapsedTime
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x2590110", Offset = "0x2590110", VA = "0x2590110")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A1")]
		public bool isUserEnabled
		{
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x25901CC", Offset = "0x25901CC", VA = "0x25901CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x25901DC", Offset = "0x25901DC", VA = "0x25901DC")]
			internal set
			{
			}
		}

		[Token(Token = "0x170004A2")]
		public string obsolete
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x25901EC", Offset = "0x25901EC", VA = "0x25901EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A3")]
		public string name
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x25902C8", Offset = "0x25902C8", VA = "0x25902C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		public string description
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x2590408", Offset = "0x2590408", VA = "0x2590408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A5")]
		public string summaryInfo
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x25904E4", Offset = "0x25904E4", VA = "0x25904E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		protected virtual string info
		{
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x2590690", Offset = "0x2590690", VA = "0x2590690", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A7")]
		public virtual Type agentType
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x2590694", Offset = "0x2590694", VA = "0x2590694", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		public string agentInfo
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x259069C", Offset = "0x259069C", VA = "0x259069C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A9")]
		public string agentParameterName
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x2590700", Offset = "0x2590700", VA = "0x2590700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		public bool agentIsOverride
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x2590680", Offset = "0x2590680", VA = "0x2590680")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x2590718", Offset = "0x2590718", VA = "0x2590718")]
			set
			{
			}
		}

		[Token(Token = "0x170004AB")]
		public Component agent
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x2590838", Offset = "0x2590838", VA = "0x2590838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x2590834", Offset = "0x2590834", VA = "0x2590834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AD")]
		public EventRouter router
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x2590A08", Offset = "0x2590A08", VA = "0x2590A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x258F924", Offset = "0x258F924", VA = "0x258F924", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x258FAB4", Offset = "0x258FAB4", VA = "0x258FAB4", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x258FAB8", Offset = "0x258FAB8", VA = "0x258FAB8")]
		public Task()
		{
		}

		[Token(Token = "0x6001DB2")]
		public static T Create<T>(ITaskSystem newOwnerSystem) where T : Task
		{
			return null;
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x258C63C", Offset = "0x258C63C", VA = "0x258C63C")]
		public static Task Create(Type type, ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x258FB00", Offset = "0x258FB00", VA = "0x258FB00", Slot = "6")]
		public virtual Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x258FAC0", Offset = "0x258FAC0", VA = "0x258FAC0")]
		public void Validate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x258FC30", Offset = "0x258FC30", VA = "0x258FC30")]
		public void SetOwnerSystem(ITaskSystem newOwnerSystem)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x2590AE0", Offset = "0x2590AE0", VA = "0x2590AE0")]
		protected bool Set(Component newAgent, IBlackboard newBB)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x2590CD4", Offset = "0x2590CD4", VA = "0x2590CD4")]
		private bool Initialize(Component newAgent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x2590E9C", Offset = "0x2590E9C", VA = "0x2590E9C")]
		private bool InitializeFieldAttributes(Component newAgent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x2590E94", Offset = "0x2590E94", VA = "0x2590E94")]
		protected bool Error(string error, string tag = "Execution")
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x25911A4", Offset = "0x25911A4", VA = "0x25911A4")]
		protected Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x259124C", Offset = "0x259124C", VA = "0x259124C")]
		protected void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x25912F0", Offset = "0x25912F0", VA = "0x25912F0")]
		protected void SendEvent(string name)
		{
		}

		[Token(Token = "0x6001DD2")]
		protected void SendEvent<T>(string name, T value)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x25913C4", Offset = "0x25913C4", VA = "0x25913C4", Slot = "9")]
		internal virtual string GetWarningOrError()
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x2591A0C", Offset = "0x2591A0C", VA = "0x2591A0C", Slot = "10")]
		protected virtual string OnErrorCheck()
		{
			return null;
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x258FCCC", Offset = "0x258FCCC", VA = "0x258FCCC")]
		private string GetHardError()
		{
			return null;
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x2591A14", Offset = "0x2591A14", VA = "0x2591A14", Slot = "11")]
		protected virtual string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x2591A1C", Offset = "0x2591A1C", VA = "0x2591A1C", Slot = "12")]
		public virtual void OnCreate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x2591A20", Offset = "0x2591A20", VA = "0x2591A20", Slot = "13")]
		public virtual void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x2591A24", Offset = "0x2591A24", VA = "0x2591A24", Slot = "14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2A5CC", Offset = "0xE2A5CC")]
		public virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x2591A34", Offset = "0x2591A34", VA = "0x2591A34", Slot = "15")]
		public virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x2591A38", Offset = "0x2591A38", VA = "0x2591A38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1474C", Offset = "0xE1474C")]
	public class AssetBlackboard : ScriptableObject, ISerializationCallbackReceiver, IGlobalBlackboard, IBlackboard
	{
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _serializedBlackboard;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _UID;

		[NonSerialized]
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _identifier;

		[NonSerialized]
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BlackboardSource _blackboard;

		[Token(Token = "0x170004AE")]
		private Dictionary<string, Variable> NodeCanvas.Framework.IBlackboard.variables
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x2AA9230", Offset = "0x2AA9230", VA = "0x2AA9230", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x2AA924C", Offset = "0x2AA924C", VA = "0x2AA924C", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		private UnityEngine.Object NodeCanvas.Framework.IBlackboard.unityContextObject
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x2AA9268", Offset = "0x2AA9268", VA = "0x2AA9268", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private IBlackboard NodeCanvas.Framework.IBlackboard.parent
		{
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x2AA926C", Offset = "0x2AA926C", VA = "0x2AA926C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B1")]
		private Component NodeCanvas.Framework.IBlackboard.propertiesBindTarget
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x2AA9274", Offset = "0x2AA9274", VA = "0x2AA9274", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		private string NodeCanvas.Framework.IBlackboard.independantVariablesFieldName
		{
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x2AA927C", Offset = "0x2AA927C", VA = "0x2AA927C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B3")]
		public string identifier
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x2AA9364", Offset = "0x2AA9364", VA = "0x2AA9364", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B4")]
		public string UID
		{
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x2AA936C", Offset = "0x2AA936C", VA = "0x2AA936C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x2AA8D8C", Offset = "0x2AA8D8C", VA = "0x2AA8D8C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A604", Offset = "0xE2A604")]
			add
			{
			}
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x2AA8E2C", Offset = "0x2AA8E2C", VA = "0x2AA8E2C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A614", Offset = "0xE2A614")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x2AA8ECC", Offset = "0x2AA8ECC", VA = "0x2AA8ECC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A624", Offset = "0xE2A624")]
			add
			{
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x2AA8F6C", Offset = "0x2AA8F6C", VA = "0x2AA8F6C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A634", Offset = "0xE2A634")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x2AA900C", Offset = "0x2AA900C", VA = "0x2AA900C", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x2AA9144", Offset = "0x2AA9144", VA = "0x2AA9144", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x2AA9010", Offset = "0x2AA9010", VA = "0x2AA9010")]
		private void SelfSerialize()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x2AA9148", Offset = "0x2AA9148", VA = "0x2AA9148")]
		private void SelfDeserialize()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x2AA9284", Offset = "0x2AA9284", VA = "0x2AA9284", Slot = "18")]
		private void NodeCanvas.Framework.IBlackboard.TryInvokeOnVariableAdded(Variable variable)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x2AA92F4", Offset = "0x2AA92F4", VA = "0x2AA92F4", Slot = "19")]
		private void NodeCanvas.Framework.IBlackboard.TryInvokeOnVariableRemoved(Variable variable)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x2AA9374", Offset = "0x2AA9374", VA = "0x2AA9374")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2A644", Offset = "0xE2A644")]
		private void ShowJson()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x2AA93F4", Offset = "0x2AA93F4", VA = "0x2AA93F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x2AA93FC", Offset = "0x2AA93FC", VA = "0x2AA93FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x2AA942C", Offset = "0x2AA942C", VA = "0x2AA942C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x2AA94F8", Offset = "0x2AA94F8", VA = "0x2AA94F8")]
		public AssetBlackboard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "fsAutoInstance", RVA = "0xE14790", Offset = "0xE14790")]
	[fsUninitialized]
	[SpoofAOT]
	public abstract class BBParameter : ISerializationCollectable, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE147DC", Offset = "0xE147DC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IBlackboard bb;

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x27294E8", Offset = "0x27294E8", VA = "0x27294E8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x27294F0", Offset = "0x27294F0", VA = "0x27294F0")]
			internal void <SetBBFields>b__0(object o, fsData d)
			{
			}
		}

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _targetVariableID;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IBlackboard _bb;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Variable _varRef;

		[Token(Token = "0x170004B5")]
		public string targetVariableID
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x2AAA818", Offset = "0x2AAA818", VA = "0x2AAA818")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x2AAA820", Offset = "0x2AAA820", VA = "0x2AAA820")]
			protected set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public Variable varRef
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x2AAA828", Offset = "0x2AAA828", VA = "0x2AAA828")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x2AAA830", Offset = "0x2AAA830", VA = "0x2AAA830")]
			protected set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public string name
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x2AAA8D0", Offset = "0x2AAA8D0", VA = "0x2AAA8D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x2AAA3B4", Offset = "0x2AAA3B4", VA = "0x2AAA3B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		public IBlackboard bb
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x2AAAA90", Offset = "0x2AAAA90", VA = "0x2AAAA90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x2AAA7BC", Offset = "0x2AAA7BC", VA = "0x2AAA7BC")]
			set
			{
			}
		}

		[Token(Token = "0x170004B9")]
		public bool useBlackboard
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x2AAA484", Offset = "0x2AAA484", VA = "0x2AAA484")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x2AAAA98", Offset = "0x2AAAA98", VA = "0x2AAAA98")]
			set
			{
			}
		}

		[Token(Token = "0x170004BA")]
		public bool isPresumedDynamic
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x2AAAB4C", Offset = "0x2AAAB4C", VA = "0x2AAAB4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BB")]
		public bool isNone
		{
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x2AAABAC", Offset = "0x2AAABAC", VA = "0x2AAABAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BC")]
		public bool isNull
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x2AAAC04", Offset = "0x2AAAC04", VA = "0x2AAAC04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BD")]
		public bool isNoneOrNull
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x2AAAC28", Offset = "0x2AAAC28", VA = "0x2AAAC28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BE")]
		public bool isDefined
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x2AAAC74", Offset = "0x2AAAC74", VA = "0x2AAAC74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BF")]
		public Type refType
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x2AAAC98", Offset = "0x2AAAC98", VA = "0x2AAAC98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		public object value
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x2AAA3A8", Offset = "0x2AAA3A8", VA = "0x2AAA3A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x2AAACB0", Offset = "0x2AAACB0", VA = "0x2AAACB0")]
			set
			{
			}
		}

		[Token(Token = "0x170004C1")]
		public abstract Type varType
		{
			[Token(Token = "0x6001E0D")]
			get;
		}

		[Token(Token = "0x1400001D")]
		public event Action<Variable> onVariableReferenceChanged
		{
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x2AAA498", Offset = "0x2AAA498", VA = "0x2AAA498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A67C", Offset = "0xE2A67C")]
			add
			{
			}
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x2AAA538", Offset = "0x2AAA538", VA = "0x2AAA538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A68C", Offset = "0xE2A68C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x2AAA46C", Offset = "0x2AAA46C", VA = "0x2AAA46C", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x2AAA494", Offset = "0x2AAA494", VA = "0x2AAA494", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x2AAA5D8", Offset = "0x2AAA5D8", VA = "0x2AAA5D8")]
		public BBParameter()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x2AAA5E0", Offset = "0x2AAA5E0", VA = "0x2AAA5E0")]
		public static BBParameter CreateInstance(Type t, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x2A9DF6C", Offset = "0x2A9DF6C", VA = "0x2A9DF6C")]
		public static void SetBBFields(object target, IBlackboard bb)
		{
		}

		[Token(Token = "0x6001E0E")]
		protected abstract void SetDefaultValue();

		[Token(Token = "0x6001E0F")]
		protected abstract void Bind(Variable data);

		[Token(Token = "0x6001E10")]
		public abstract object GetValueBoxed();

		[Token(Token = "0x6001E11")]
		public abstract void SetValueBoxed(object value);

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x2AAACBC", Offset = "0x2AAACBC", VA = "0x2AAACBC")]
		public void SetTargetVariable(IBlackboard targetBB, Variable targetVariable)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x2AAA8D8", Offset = "0x2AAA8D8", VA = "0x2AAA8D8")]
		private Variable ResolveReference(IBlackboard targetBlackboard, bool useID)
		{
			return null;
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x2AAAE54", Offset = "0x2AAAE54", VA = "0x2AAAE54")]
		public Variable PromoteToVariable(IBlackboard targetBB)
		{
			return null;
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x2AAAFDC", Offset = "0x2AAAFDC", VA = "0x2AAAFDC", Slot = "3")]
		public sealed override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005E6")]
	public class BBParameter<T> : BBParameter
	{
		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE147EC", Offset = "0xE147EC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<object> convertFunc;

			[Token(Token = "0x6001E2A")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001E2B")]
			internal T <BindGetter>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE147FC", Offset = "0xE147FC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<object> convertFunc;

			[Token(Token = "0x6001E2C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001E2D")]
			internal void <BindSetter>b__0(T value)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1480C", Offset = "0xE1480C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<T> <>9__21_1;

			[Token(Token = "0x6001E2F")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E30")]
			internal void <BindSetter>b__21_1(T value)
			{
			}
		}

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _value;

		[Token(Token = "0x170004C2")]
		public new T value
		{
			[Token(Token = "0x6001E1C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001E1D")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public override Type varType
		{
			[Token(Token = "0x6001E1E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001E")]
		private event Func<T> getter
		{
			[Token(Token = "0x6001E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A69C", Offset = "0xE2A69C")]
			add
			{
			}
			[Token(Token = "0x6001E19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A6AC", Offset = "0xE2A6AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		private event Action<T> setter
		{
			[Token(Token = "0x6001E1A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A6BC", Offset = "0xE2A6BC")]
			add
			{
			}
			[Token(Token = "0x6001E1B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A6CC", Offset = "0xE2A6CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E1F")]
		public BBParameter()
		{
		}

		[Token(Token = "0x6001E20")]
		public BBParameter(T value)
		{
		}

		[Token(Token = "0x6001E21")]
		public override object GetValueBoxed()
		{
			return null;
		}

		[Token(Token = "0x6001E22")]
		public override void SetValueBoxed(object newValue)
		{
		}

		[Token(Token = "0x6001E23")]
		public T GetValue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001E24")]
		public void SetValue(T value)
		{
		}

		[Token(Token = "0x6001E25")]
		protected override void SetDefaultValue()
		{
		}

		[Token(Token = "0x6001E26")]
		protected override void Bind(Variable variable)
		{
		}

		[Token(Token = "0x6001E27")]
		private bool BindGetter(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E28")]
		private bool BindSetter(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E29")]
		public static implicit operator BBParameter<T>(T value)
		{
			return null;
		}
	}
	[Token(Token = "0x20005EA")]
	[SpoofAOT]
	public class Blackboard : MonoBehaviour, ISerializationCallbackReceiver, IBlackboard
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22AF0", Offset = "0xE22AF0")]
		private AssetBlackboard _parentBlackboard;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _serializedBlackboard;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SerializationPair[] _serializedVariables;

		[NonSerialized]
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BlackboardSource _blackboard;

		[NonSerialized]
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool haltForUndo;

		[NonSerialized]
		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _identifier;

		[Token(Token = "0x170004C4")]
		private string NodeCanvas.Framework.IBlackboard.identifier
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x2DF3D3C", Offset = "0x2DF3D3C", VA = "0x2DF3D3C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C5")]
		private Dictionary<string, Variable> NodeCanvas.Framework.IBlackboard.variables
		{
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x2DF3D44", Offset = "0x2DF3D44", VA = "0x2DF3D44", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x2DF3D60", Offset = "0x2DF3D60", VA = "0x2DF3D60", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		private Component NodeCanvas.Framework.IBlackboard.propertiesBindTarget
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x2DF3D7C", Offset = "0x2DF3D7C", VA = "0x2DF3D7C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C7")]
		private UnityEngine.Object NodeCanvas.Framework.IBlackboard.unityContextObject
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x2DF3D80", Offset = "0x2DF3D80", VA = "0x2DF3D80", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private IBlackboard NodeCanvas.Framework.IBlackboard.parent
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x2DF3D84", Offset = "0x2DF3D84", VA = "0x2DF3D84", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C9")]
		private string NodeCanvas.Framework.IBlackboard.independantVariablesFieldName
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x2DF3D8C", Offset = "0x2DF3D8C", VA = "0x2DF3D8C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x2DF3ABC", Offset = "0x2DF3ABC", VA = "0x2DF3ABC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A6DC", Offset = "0xE2A6DC")]
			add
			{
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x2DF3B5C", Offset = "0x2DF3B5C", VA = "0x2DF3B5C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A6EC", Offset = "0xE2A6EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x2DF3BFC", Offset = "0x2DF3BFC", VA = "0x2DF3BFC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A6FC", Offset = "0xE2A6FC")]
			add
			{
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x2DF3C9C", Offset = "0x2DF3C9C", VA = "0x2DF3C9C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A70C", Offset = "0xE2A70C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x2DF312C", Offset = "0x2DF312C", VA = "0x2DF312C", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x2DF359C", Offset = "0x2DF359C", VA = "0x2DF359C", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x2DF3130", Offset = "0x2DF3130", VA = "0x2DF3130")]
		public void SelfSerialize()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x2DF35A0", Offset = "0x2DF35A0", VA = "0x2DF35A0")]
		public void SelfDeserialize()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x2DF3890", Offset = "0x2DF3890", VA = "0x2DF3890")]
		public string Serialize(List<UnityEngine.Object> references, bool pretyJson = false)
		{
			return null;
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x2DF396C", Offset = "0x2DF396C", VA = "0x2DF396C")]
		public bool Deserialize(string json, List<UnityEngine.Object> references, bool removeMissingVariables = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x2DF3DD0", Offset = "0x2DF3DD0", VA = "0x2DF3DD0", Slot = "17")]
		private void NodeCanvas.Framework.IBlackboard.TryInvokeOnVariableAdded(Variable variable)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x2DF3E40", Offset = "0x2DF3E40", VA = "0x2DF3E40", Slot = "18")]
		private void NodeCanvas.Framework.IBlackboard.TryInvokeOnVariableRemoved(Variable variable)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x2DF3EB0", Offset = "0x2DF3EB0", VA = "0x2DF3EB0", Slot = "19")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x2DF3F94", Offset = "0x2DF3F94", VA = "0x2DF3F94")]
		public Variable AddVariable(string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x2DF3F9C", Offset = "0x2DF3F9C", VA = "0x2DF3F9C")]
		public Variable AddVariable(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x2DF3FA4", Offset = "0x2DF3FA4", VA = "0x2DF3FA4")]
		public Variable RemoveVariable(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x2DF3FAC", Offset = "0x2DF3FAC", VA = "0x2DF3FAC")]
		public Variable GetVariable(string name, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x2DF3FB4", Offset = "0x2DF3FB4", VA = "0x2DF3FB4")]
		public Variable GetVariableByID(string ID)
		{
			return null;
		}

		[Token(Token = "0x6001E4A")]
		public Variable<T> GetVariable<T>(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E4B")]
		public T GetVariableValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x2DF3FBC", Offset = "0x2DF3FBC", VA = "0x2DF3FBC")]
		public Variable SetVariableValue(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2A71C", Offset = "0xE2A71C")]
		public T GetValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x2DF3FC4", Offset = "0x2DF3FC4", VA = "0x2DF3FC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2A754", Offset = "0xE2A754")]
		public Variable SetValue(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x2DF3FCC", Offset = "0x2DF3FCC", VA = "0x2DF3FCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2A78C", Offset = "0xE2A78C")]
		private void ShowJson()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x2DF404C", Offset = "0x2DF404C", VA = "0x2DF404C")]
		public string Save()
		{
			return null;
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x2DF409C", Offset = "0x2DF409C", VA = "0x2DF409C")]
		public string Save(string saveKey)
		{
			return null;
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x2DF40DC", Offset = "0x2DF40DC", VA = "0x2DF40DC")]
		public bool Load()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x2DF4108", Offset = "0x2DF4108", VA = "0x2DF4108")]
		public bool Load(string saveKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x2DF41E8", Offset = "0x2DF41E8", VA = "0x2DF41E8", Slot = "20")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x2DF4228", Offset = "0x2DF4228", VA = "0x2DF4228", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x2DF4230", Offset = "0x2DF4230", VA = "0x2DF4230")]
		public Blackboard()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	[ExecuteInEditMode]
	public class GlobalBlackboard : Blackboard, IGlobalBlackboard, IBlackboard
	{
		[Token(Token = "0x20005EC")]
		public enum SingletonMode
		{
			[Token(Token = "0x4001594")]
			DestroyComponentOnly,
			[Token(Token = "0x4001595")]
			DestroyEntireGameObject
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1483C", Offset = "0xE1483C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x2730FA0", Offset = "0x2730FA0", VA = "0x2730FA0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x2730FA8", Offset = "0x2730FA8", VA = "0x2730FA8")]
			internal bool <Find>b__0(GlobalBlackboard b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _UID;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22B9C", Offset = "0xE22B9C")]
		[SerializeField]
		private string _identifier;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22BE8", Offset = "0xE22BE8")]
		private SingletonMode _singletonMode;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22C34", Offset = "0xE22C34")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<GlobalBlackboard> _allGlobals;

		[Token(Token = "0x170004CA")]
		public string identifier
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x29BD0B4", Offset = "0x29BD0B4", VA = "0x29BD0B4", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CB")]
		public string UID
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x29BD0BC", Offset = "0x29BD0BC", VA = "0x29BD0BC", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CC")]
		public new string name
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x29BD0C4", Offset = "0x29BD0C4", VA = "0x29BD0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x29BD0CC", Offset = "0x29BD0CC", VA = "0x29BD0CC")]
		public static IEnumerable<GlobalBlackboard> GetAll()
		{
			return null;
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x29BD130", Offset = "0x29BD130", VA = "0x29BD130")]
		public static GlobalBlackboard Create()
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x29BD1F0", Offset = "0x29BD1F0", VA = "0x29BD1F0")]
		public static GlobalBlackboard Find(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x29BD31C", Offset = "0x29BD31C", VA = "0x29BD31C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x29BD618", Offset = "0x29BD618", VA = "0x29BD618")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x29BD6A4", Offset = "0x29BD6A4", VA = "0x29BD6A4", Slot = "20")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x29BD87C", Offset = "0x29BD87C", VA = "0x29BD87C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x29BD610", Offset = "0x29BD610", VA = "0x29BD610")]
		private bool IsPrefabAsset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x29BD884", Offset = "0x29BD884", VA = "0x29BD884")]
		public GlobalBlackboard()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public interface IBlackboard
	{
		[Token(Token = "0x170004CD")]
		string identifier
		{
			[Token(Token = "0x6001E6A")]
			get;
		}

		[Token(Token = "0x170004CE")]
		IBlackboard parent
		{
			[Token(Token = "0x6001E6B")]
			get;
		}

		[Token(Token = "0x170004CF")]
		Dictionary<string, Variable> variables
		{
			[Token(Token = "0x6001E6C")]
			get;
			[Token(Token = "0x6001E6D")]
			set;
		}

		[Token(Token = "0x170004D0")]
		Component propertiesBindTarget
		{
			[Token(Token = "0x6001E6E")]
			get;
		}

		[Token(Token = "0x170004D1")]
		UnityEngine.Object unityContextObject
		{
			[Token(Token = "0x6001E6F")]
			get;
		}

		[Token(Token = "0x170004D2")]
		string independantVariablesFieldName
		{
			[Token(Token = "0x6001E70")]
			get;
		}

		[Token(Token = "0x14000022")]
		event Action<Variable> onVariableAdded;

		[Token(Token = "0x14000023")]
		event Action<Variable> onVariableRemoved;

		[Token(Token = "0x6001E71")]
		void TryInvokeOnVariableAdded(Variable variable);

		[Token(Token = "0x6001E72")]
		void TryInvokeOnVariableRemoved(Variable variable);
	}
	[Token(Token = "0x20005EF")]
	public interface IGlobalBlackboard : IBlackboard
	{
		[Token(Token = "0x170004D3")]
		string UID
		{
			[Token(Token = "0x6001E73")]
			get;
		}
	}
	[Token(Token = "0x20005F0")]
	[SpoofAOT]
	public static class IBlackboardExtensions
	{
		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14884", Offset = "0xE14884")]
		private sealed class <GetAllParents>d__1 : IEnumerable<IBlackboard>, IEnumerable, IEnumerator<IBlackboard>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IBlackboard <>2__current;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IBlackboard blackboard;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IBlackboard <>3__blackboard;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool includeSelf;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool <>3__includeSelf;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IBlackboard <current>5__2;

			[Token(Token = "0x170004D4")]
			private IBlackboard System.Collections.Generic.IEnumerator<NodeCanvas.Framework.IBlackboard>.Current
			{
				[Token(Token = "0x6001E88")]
				[Address(RVA = "0x2734D28", Offset = "0x2734D28", VA = "0x2734D28", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8A")]
				[Address(RVA = "0x2734D70", Offset = "0x2734D70", VA = "0x2734D70", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x2734B14", Offset = "0x2734B14", VA = "0x2734B14")]
			[DebuggerHidden]
			public <GetAllParents>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x2734B4C", Offset = "0x2734B4C", VA = "0x2734B4C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x2734B50", Offset = "0x2734B50", VA = "0x2734B50", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x2734D30", Offset = "0x2734D30", VA = "0x2734D30", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x2734D78", Offset = "0x2734D78", VA = "0x2734D78", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<IBlackboard> System.Collections.Generic.IEnumerable<NodeCanvas.Framework.IBlackboard>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x2734E30", Offset = "0x2734E30", VA = "0x2734E30", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14894", Offset = "0xE14894")]
		private sealed class <GetVariables>d__14 : IEnumerable<Variable>, IEnumerable, IEnumerator<Variable>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Variable <>2__current;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IBlackboard blackboard;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IBlackboard <>3__blackboard;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Type ofType;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Type <>3__ofType;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Variable> <>7__wrap1;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Dictionary<string, Variable>.Enumerator <>7__wrap2;

			[Token(Token = "0x170004D6")]
			private Variable System.Collections.Generic.IEnumerator<NodeCanvas.Framework.Variable>.Current
			{
				[Token(Token = "0x6001E92")]
				[Address(RVA = "0x273560C", Offset = "0x273560C", VA = "0x273560C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E94")]
				[Address(RVA = "0x2735654", Offset = "0x2735654", VA = "0x2735654", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x2734E34", Offset = "0x2734E34", VA = "0x2734E34")]
			[DebuggerHidden]
			public <GetVariables>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x2734E6C", Offset = "0x2734E6C", VA = "0x2734E6C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x273500C", Offset = "0x273500C", VA = "0x273500C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x2734EFC", Offset = "0x2734EFC", VA = "0x2734EFC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x2734FB8", Offset = "0x2734FB8", VA = "0x2734FB8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x2735614", Offset = "0x2735614", VA = "0x2735614", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x273565C", Offset = "0x273565C", VA = "0x273565C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Variable> System.Collections.Generic.IEnumerable<NodeCanvas.Framework.Variable>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x273571C", Offset = "0x273571C", VA = "0x273571C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x30A93F4", Offset = "0x30A93F4", VA = "0x30A93F4")]
		public static IBlackboard GetRoot(this IBlackboard blackboard)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x30A951C", Offset = "0x30A951C", VA = "0x30A951C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A814", Offset = "0xE2A814")]
		public static IEnumerable<IBlackboard> GetAllParents(this IBlackboard blackboard, bool includeSelf)
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x30A95A8", Offset = "0x30A95A8", VA = "0x30A95A8")]
		public static bool IsPartOf(this IBlackboard blackboard, IBlackboard child)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E77")]
		public static Variable<T> AddVariable<T>(this IBlackboard blackboard, string varName, T value)
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		public static Variable<T> AddVariable<T>(this IBlackboard blackboard, string varName)
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x30A9688", Offset = "0x30A9688", VA = "0x30A9688")]
		public static Variable AddVariable(this IBlackboard blackboard, string varName, object value)
		{
			return null;
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x30A96F8", Offset = "0x30A96F8", VA = "0x30A96F8")]
		public static Variable AddVariable(this IBlackboard blackboard, string varName, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x30A9A80", Offset = "0x30A9A80", VA = "0x30A9A80")]
		public static Variable RemoveVariable(this IBlackboard blackboard, string varName)
		{
			return null;
		}

		[Token(Token = "0x6001E7C")]
		public static T GetVariableValue<T>(this IBlackboard blackboard, string varName)
		{
			return (T)null;
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x30A9C74", Offset = "0x30A9C74", VA = "0x30A9C74")]
		public static Variable SetVariableValue(this IBlackboard blackboard, string varName, object value)
		{
			return null;
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x30A9E14", Offset = "0x30A9E14", VA = "0x30A9E14")]
		public static void InitializePropertiesBinding(this IBlackboard blackboard, Component target, bool callSetter)
		{
		}

		[Token(Token = "0x6001E7F")]
		public static Variable<T> GetVariable<T>(this IBlackboard blackboard, string varName)
		{
			return null;
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x30AA090", Offset = "0x30AA090", VA = "0x30AA090")]
		public static Variable GetVariable(this IBlackboard blackboard, string varName, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x30AA384", Offset = "0x30AA384", VA = "0x30AA384")]
		public static Variable GetVariableByID(this IBlackboard blackboard, string ID)
		{
			return null;
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x30AA6C8", Offset = "0x30AA6C8", VA = "0x30AA6C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A944", Offset = "0xE2A944")]
		public static IEnumerable<Variable> GetVariables(this IBlackboard blackboard, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x30AA75C", Offset = "0x30AA75C", VA = "0x30AA75C")]
		public static Variable ChangeVariableType(this IBlackboard blackboard, Variable target, Type newType)
		{
			return null;
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x30AAAC8", Offset = "0x30AAAC8", VA = "0x30AAAC8")]
		public static void OverwriteFrom(this IBlackboard blackboard, IBlackboard sourceBlackboard, bool removeMissingVariables = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F3")]
	[fsUninitialized]
	[SpoofAOT]
	public abstract class Variable
	{
		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE148DC", Offset = "0xE148DC")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable <>4__this;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<object, object> converter;

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x3135658", Offset = "0x3135658", VA = "0x3135658")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x3135660", Offset = "0x3135660", VA = "0x3135660")]
			internal object <GetGetConverter>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x313567C", Offset = "0x313567C", VA = "0x313567C")]
			internal object <GetGetConverter>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE148EC", Offset = "0xE148EC")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable <>4__this;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<object, object> converter;

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x31356E8", Offset = "0x31356E8", VA = "0x31356E8")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x31356F0", Offset = "0x31356F0", VA = "0x31356F0")]
			internal void <GetSetConverter>b__0(object x)
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x313570C", Offset = "0x313570C", VA = "0x313570C")]
			internal void <GetSetConverter>b__1(object x)
			{
			}
		}

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isPublic;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[fsIgnoreInBuild]
		[SerializeField]
		private bool _debugBoundValue;

		[Token(Token = "0x170004D8")]
		public string name
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x27C470C", Offset = "0x27C470C", VA = "0x27C470C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x27C4714", Offset = "0x27C4714", VA = "0x27C4714")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public string ID
		{
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x27C47AC", Offset = "0x27C47AC", VA = "0x27C47AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DA")]
		public object value
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x27C485C", Offset = "0x27C485C", VA = "0x27C485C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x27C4868", Offset = "0x27C4868", VA = "0x27C4868")]
			set
			{
			}
		}

		[Token(Token = "0x170004DB")]
		public bool isExposedPublic
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x27C4874", Offset = "0x27C4874", VA = "0x27C4874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x27C48D0", Offset = "0x27C48D0", VA = "0x27C48D0")]
			set
			{
			}
		}

		[Token(Token = "0x170004DC")]
		public bool debugBoundValue
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x27C48DC", Offset = "0x27C48DC", VA = "0x27C48DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x27C48E4", Offset = "0x27C48E4", VA = "0x27C48E4")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public bool isPropertyBound
		{
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x27C48A4", Offset = "0x27C48A4", VA = "0x27C48A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DE")]
		public abstract bool isDataBound
		{
			[Token(Token = "0x6001EA7")]
			get;
		}

		[Token(Token = "0x170004DF")]
		public abstract Type varType
		{
			[Token(Token = "0x6001EA8")]
			get;
		}

		[Token(Token = "0x170004E0")]
		public abstract string propertyPath
		{
			[Token(Token = "0x6001EA9")]
			get;
			[Token(Token = "0x6001EAA")]
			set;
		}

		[Token(Token = "0x14000024")]
		public event Action<string> onNameChanged
		{
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x27C434C", Offset = "0x27C434C", VA = "0x27C434C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AAB4", Offset = "0xE2AAB4")]
			add
			{
			}
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x27C43EC", Offset = "0x27C43EC", VA = "0x27C43EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AAC4", Offset = "0xE2AAC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<object> onValueChanged
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x27C448C", Offset = "0x27C448C", VA = "0x27C448C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AAD4", Offset = "0xE2AAD4")]
			add
			{
			}
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x27C452C", Offset = "0x27C452C", VA = "0x27C452C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AAE4", Offset = "0xE2AAE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action onDestroy
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x27C45CC", Offset = "0x27C45CC", VA = "0x27C45CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AAF4", Offset = "0xE2AAF4")]
			add
			{
			}
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x27C466C", Offset = "0x27C466C", VA = "0x27C466C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB04", Offset = "0xE2AB04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EAB")]
		public abstract void BindProperty(MemberInfo prop, [Optional] GameObject target);

		[Token(Token = "0x6001EAC")]
		public abstract void UnBind();

		[Token(Token = "0x6001EAD")]
		public abstract void InitializePropertyBinding(GameObject go, bool callSetter = false);

		[Token(Token = "0x6001EAE")]
		public abstract object GetValueBoxed();

		[Token(Token = "0x6001EAF")]
		public abstract void SetValueBoxed(object value);

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x27C48F0", Offset = "0x27C48F0", VA = "0x27C48F0")]
		public Variable()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x27C498C", Offset = "0x27C498C", VA = "0x27C498C")]
		public Variable(string name, string ID)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x27C49DC", Offset = "0x27C49DC", VA = "0x27C49DC")]
		internal void OnDestroy()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x27C49F0", Offset = "0x27C49F0", VA = "0x27C49F0")]
		public Variable Duplicate(IBlackboard targetBB)
		{
			return null;
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x27C4BAC", Offset = "0x27C4BAC", VA = "0x27C4BAC")]
		protected bool HasValueChangeEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x27C4BBC", Offset = "0x27C4BBC", VA = "0x27C4BBC")]
		protected void TryInvokeValueChangeEvent(object value)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x27C4C2C", Offset = "0x27C4C2C", VA = "0x27C4C2C")]
		public bool CanConvertTo(Type toType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x27C4C48", Offset = "0x27C4C48", VA = "0x27C4C48")]
		public Func<object> GetGetConverter(Type toType)
		{
			return null;
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x27C4DDC", Offset = "0x27C4DDC", VA = "0x27C4DDC")]
		public bool CanConvertFrom(Type fromType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x27C4DF8", Offset = "0x27C4DF8", VA = "0x27C4DF8")]
		public Action<object> GetSetConverter(Type fromType)
		{
			return null;
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x27C4F90", Offset = "0x27C4F90", VA = "0x27C4F90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005F6")]
	public class Variable<T> : Variable
	{
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE148FC", Offset = "0xE148FC")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FieldInfo field;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Component instance;

			[Token(Token = "0x6001ED5")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001ED6")]
			internal T <InitializePropertyBinding>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x6001ED7")]
			internal void <InitializePropertyBinding>b__1(T o)
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1490C", Offset = "0xE1490C")]
		private sealed class <>c__DisplayClass27_1
		{
			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x6001ED8")]
			public <>c__DisplayClass27_1()
			{
			}

			[Token(Token = "0x6001ED9")]
			internal T <InitializePropertyBinding>b__2()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1491C", Offset = "0xE1491C")]
		private sealed class <>c__DisplayClass27_2
		{
			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MethodInfo getMethod;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Component instance;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MethodInfo setMethod;

			[Token(Token = "0x6001EDA")]
			public <>c__DisplayClass27_2()
			{
			}

			[Token(Token = "0x6001EDB")]
			internal T <InitializePropertyBinding>b__3()
			{
				return (T)null;
			}

			[Token(Token = "0x6001EDC")]
			internal void <InitializePropertyBinding>b__5(T o)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1492C", Offset = "0xE1492C")]
		private sealed class <>c
		{
			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T> <>9__27_4;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<T> <>9__27_6;

			[Token(Token = "0x6001EDE")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EDF")]
			internal T <InitializePropertyBinding>b__27_4()
			{
				return (T)null;
			}

			[Token(Token = "0x6001EE0")]
			internal void <InitializePropertyBinding>b__27_6(T o)
			{
			}
		}

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _value;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _propertyPath;

		[Token(Token = "0x170004E1")]
		public override Type varType
		{
			[Token(Token = "0x6001EC5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		public override bool isDataBound
		{
			[Token(Token = "0x6001EC6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E3")]
		public override string propertyPath
		{
			[Token(Token = "0x6001EC7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EC8")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public new T value
		{
			[Token(Token = "0x6001EC9")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001ECA")]
			set
			{
			}
		}

		[Token(Token = "0x14000027")]
		private event Func<T> getter
		{
			[Token(Token = "0x6001EC1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB14", Offset = "0xE2AB14")]
			add
			{
			}
			[Token(Token = "0x6001EC2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB24", Offset = "0xE2AB24")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		private event Action<T> setter
		{
			[Token(Token = "0x6001EC3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB34", Offset = "0xE2AB34")]
			add
			{
			}
			[Token(Token = "0x6001EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB44", Offset = "0xE2AB44")]
			remove
			{
			}
		}

		[Token(Token = "0x6001ECB")]
		public Variable()
		{
		}

		[Token(Token = "0x6001ECC")]
		public Variable(string name, string ID)
		{
		}

		[Token(Token = "0x6001ECD")]
		public override object GetValueBoxed()
		{
			return null;
		}

		[Token(Token = "0x6001ECE")]
		public override void SetValueBoxed(object newValue)
		{
		}

		[Token(Token = "0x6001ECF")]
		public T GetValue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001ED0")]
		public void SetValue(T newValue)
		{
		}

		[Token(Token = "0x6001ED1")]
		public override void BindProperty(MemberInfo prop, [Optional] GameObject target)
		{
		}

		[Token(Token = "0x6001ED2")]
		public void BindGetSet(Func<T> _get, Action<T> _set)
		{
		}

		[Token(Token = "0x6001ED3")]
		public override void UnBind()
		{
		}

		[Token(Token = "0x6001ED4")]
		public override void InitializePropertyBinding(GameObject go, bool callSetter = false)
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class VariableSeperator
	{
		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22D58", Offset = "0xE22D58")]
		private bool <isEditingName>k__BackingField;

		[Token(Token = "0x170004E5")]
		public bool isEditingName
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x27C53C0", Offset = "0x27C53C0", VA = "0x27C53C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB54", Offset = "0xE2AB54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x27C53C8", Offset = "0x27C53C8", VA = "0x27C53C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB64", Offset = "0xE2AB64")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x27C53B8", Offset = "0x27C53B8", VA = "0x27C53B8")]
		public VariableSeperator()
		{
		}
	}
}
namespace NodeCanvas.Framework.Internal
{
	[Token(Token = "0x20005FC")]
	public struct GraphLoadData
	{
		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GraphSource source;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string json;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<UnityEngine.Object> references;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Component agent;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IBlackboard parentBlackboard;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool preInitializeSubGraphs;
	}
	[Serializable]
	[Token(Token = "0x20005FD")]
	[fsDeserializeOverwrite]
	public class GraphSource : ISerializationCollector, ISerializationCollectable
	{
		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22D68", Offset = "0xE22D68")]
		private List<Task> <allTasks>k__BackingField;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22D78", Offset = "0xE22D78")]
		private List<BBParameter> <allParameters>k__BackingField;

		[Token(Token = "0x40015C9")]
		public const float FRAMEWORK_VERSION = 3.21f;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22D88", Offset = "0xE22D88")]
		[fsWriteOnly]
		[fsIgnoreInBuild]
		private float _version;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22DF4", Offset = "0xE22DF4")]
		[SerializeField]
		[fsWriteOnly]
		[fsIgnoreInBuild]
		private string _category;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[fsWriteOnly]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22E60", Offset = "0xE22E60")]
		[SerializeField]
		[fsIgnoreInBuild]
		private string _comments;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[fsWriteOnly]
		[fsIgnoreInBuild]
		[SerializeField]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22ECC", Offset = "0xE22ECC")]
		private Vector2 _translation;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[fsIgnoreInBuild]
		[fsWriteOnly]
		[SerializeField]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22F38", Offset = "0xE22F38")]
		private float _zoomFactor;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22FA4", Offset = "0xE22FA4")]
		private string _type;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE22FDC", Offset = "0xE22FDC")]
		private List<Node> _nodes;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE23014", Offset = "0xE23014")]
		private List<Connection> _connections;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE2304C", Offset = "0xE2304C")]
		[fsIgnoreInBuild]
		private List<CanvasGroup> _canvasGroups;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE23098", Offset = "0xE23098")]
		private BlackboardSource _localBlackboard;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0xE230D0", Offset = "0xE230D0")]
		private object _derivedData;

		[Token(Token = "0x170004E6")]
		public List<Task> allTasks
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x29D10B4", Offset = "0x29D10B4", VA = "0x29D10B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB74", Offset = "0xE2AB74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x29D10BC", Offset = "0x29D10BC", VA = "0x29D10BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB84", Offset = "0xE2AB84")]
			private set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public List<BBParameter> allParameters
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x29D10C4", Offset = "0x29D10C4", VA = "0x29D10C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB94", Offset = "0xE2AB94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x29D10CC", Offset = "0x29D10CC", VA = "0x29D10CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ABA4", Offset = "0xE2ABA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public float version
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x29D12BC", Offset = "0x29D12BC", VA = "0x29D12BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x29D12C4", Offset = "0x29D12C4", VA = "0x29D12C4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public string category
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x29D12CC", Offset = "0x29D12CC", VA = "0x29D12CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x29D12D4", Offset = "0x29D12D4", VA = "0x29D12D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004EA")]
		public string comments
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x29D12DC", Offset = "0x29D12DC", VA = "0x29D12DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x29D12E4", Offset = "0x29D12E4", VA = "0x29D12E4")]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public Vector2 translation
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x29D12EC", Offset = "0x29D12EC", VA = "0x29D12EC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x29D12F4", Offset = "0x29D12F4", VA = "0x29D12F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public float zoomFactor
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x29D12FC", Offset = "0x29D12FC", VA = "0x29D12FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x29D1304", Offset = "0x29D1304", VA = "0x29D1304")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public string type
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x29D130C", Offset = "0x29D130C", VA = "0x29D130C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x29D1314", Offset = "0x29D1314", VA = "0x29D1314")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public List<Node> nodes
		{
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x29D131C", Offset = "0x29D131C", VA = "0x29D131C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0x29D1324", Offset = "0x29D1324", VA = "0x29D1324")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public List<Connection> connections
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x29D132C", Offset = "0x29D132C", VA = "0x29D132C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0x29D1334", Offset = "0x29D1334", VA = "0x29D1334")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public List<CanvasGroup> canvasGroups
		{
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0x29D133C", Offset = "0x29D133C", VA = "0x29D133C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x29D1344", Offset = "0x29D1344", VA = "0x29D1344")]
			set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public BlackboardSource localBlackboard
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x29D134C", Offset = "0x29D134C", VA = "0x29D134C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x29D1354", Offset = "0x29D1354", VA = "0x29D1354")]
			set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public object derivedData
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x29D135C", Offset = "0x29D135C", VA = "0x29D135C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x29D1364", Offset = "0x29D1364", VA = "0x29D1364")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x29D10D4", Offset = "0x29D10D4", VA = "0x29D10D4", Slot = "4")]
		private void ParadoxNotion.Serialization.FullSerializer.ISerializationCollector.OnPush(ISerializationCollector parent)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x29D1198", Offset = "0x29D1198", VA = "0x29D1198", Slot = "5")]
		private void ParadoxNotion.Serialization.FullSerializer.ISerializationCollector.OnCollect(ISerializationCollectable child, int depth)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x29D12B8", Offset = "0x29D12B8", VA = "0x29D12B8", Slot = "6")]
		private void ParadoxNotion.Serialization.FullSerializer.ISerializationCollector.OnPop(ISerializationCollector parent)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x29C9A00", Offset = "0x29C9A00", VA = "0x29C9A00")]
		public GraphSource()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x29C9458", Offset = "0x29C9458", VA = "0x29C9458")]
		public GraphSource Pack(Graph graph)
		{
			return null;
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x29C967C", Offset = "0x29C967C", VA = "0x29C967C")]
		public GraphSource Unpack(Graph graph)
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x29C9B10", Offset = "0x29C9B10", VA = "0x29C9B10")]
		public GraphSource SetMetaData(GraphSource source)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x29C8D10", Offset = "0x29C8D10", VA = "0x29C8D10")]
		public void PurgeRedundantReferences()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE1494C", Offset = "0xE1494C")]
	public sealed class MissingConnection : Connection, IMissingRecoverable
	{
		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x170004F3")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x2D0BDBC", Offset = "0x2D0BDBC", VA = "0x2D0BDBC", Slot = "11")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x2D0BDC4", Offset = "0x2D0BDC4", VA = "0x2D0BDC4", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x2D0BDCC", Offset = "0x2D0BDCC", VA = "0x2D0BDCC", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x2D0BDD4", Offset = "0x2D0BDD4", VA = "0x2D0BDD4", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x2D0BDDC", Offset = "0x2D0BDDC", VA = "0x2D0BDDC")]
		public MissingConnection()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE14998", Offset = "0xE14998")]
	[DoNotList]
	public sealed class MissingNode : Node, IMissingRecoverable
	{
		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x170004F5")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x2D0BDE4", Offset = "0x2D0BDE4", VA = "0x2D0BDE4", Slot = "40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x2D0BDEC", Offset = "0x2D0BDEC", VA = "0x2D0BDEC", Slot = "41")]
			set
			{
			}
		}

		[Token(Token = "0x170004F6")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x2D0BDF4", Offset = "0x2D0BDF4", VA = "0x2D0BDF4", Slot = "42")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x2D0BDFC", Offset = "0x2D0BDFC", VA = "0x2D0BDFC", Slot = "43")]
			set
			{
			}
		}

		[Token(Token = "0x170004F7")]
		public override string name
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x2D0BE04", Offset = "0x2D0BE04", VA = "0x2D0BE04", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		public override Type outConnectionType
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x2D0BE78", Offset = "0x2D0BE78", VA = "0x2D0BE78", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F9")]
		public override int maxInConnections
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x2D0BE80", Offset = "0x2D0BE80", VA = "0x2D0BE80", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004FA")]
		public override int maxOutConnections
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x2D0BE88", Offset = "0x2D0BE88", VA = "0x2D0BE88", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004FB")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x2D0BE90", Offset = "0x2D0BE90", VA = "0x2D0BE90", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FC")]
		public override bool canSelfConnect
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x2D0BE98", Offset = "0x2D0BE98", VA = "0x2D0BE98", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FD")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x2D0BEA0", Offset = "0x2D0BEA0", VA = "0x2D0BEA0", Slot = "18")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x170004FE")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x2D0BEA8", Offset = "0x2D0BEA8", VA = "0x2D0BEA8", Slot = "19")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x2D0BEB0", Offset = "0x2D0BEB0", VA = "0x2D0BEB0")]
		public MissingNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000600")]
	public class ReflectedAction : ReflectedActionWrapper
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ActionCall call;

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x2689B08", Offset = "0x2689B08", VA = "0x2689B08", Slot = "5")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x2689B50", Offset = "0x2689B50", VA = "0x2689B50", Slot = "6")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x2689C08", Offset = "0x2689C08", VA = "0x2689C08", Slot = "7")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x2689C24", Offset = "0x2689C24", VA = "0x2689C24")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000601")]
	[SpoofAOT]
	public class ReflectedAction<T1> : ReflectedActionWrapper
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1> call;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x6001F1C")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F1D")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F1E")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F1F")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000602")]
	public class ReflectedAction<T1, T2> : ReflectedActionWrapper
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2> call;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x6001F20")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F22")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F23")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000603")]
	public class ReflectedAction<T1, T2, T3> : ReflectedActionWrapper
	{
		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3> call;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x6001F24")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F26")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F27")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000604")]
	public class ReflectedAction<T1, T2, T3, T4> : ReflectedActionWrapper
	{
		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4> call;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x6001F28")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F2A")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F2B")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000605")]
	public class ReflectedAction<T1, T2, T3, T4, T5> : ReflectedActionWrapper
	{
		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5> call;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x6001F2C")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F2D")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F2E")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F2F")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000606")]
	public class ReflectedAction<T1, T2, T3, T4, T5, T6> : ReflectedActionWrapper
	{
		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6> call;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T6> p6;

		[Token(Token = "0x6001F30")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F31")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F32")]
		public override void Call()
		{
		}

		[Token(Token = "0x6001F33")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	[SpoofAOT]
	public class ReflectedFunction<TResult> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<TResult> call;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F34")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F35")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F36")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F37")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public class ReflectedFunction<TResult, T1> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, TResult> call;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F38")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F39")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F3A")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F3B")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000609")]
	public class ReflectedFunction<TResult, T1, T2> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, TResult> call;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F3C")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F3D")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F3E")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F3F")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060A")]
	public class ReflectedFunction<TResult, T1, T2, T3> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, TResult> call;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F40")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F42")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060B")]
	public class ReflectedFunction<TResult, T1, T2, T3, T4> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, TResult> call;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F44")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F46")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F47")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060C")]
	public class ReflectedFunction<TResult, T1, T2, T3, T4, T5> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, TResult> call;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F48")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F49")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F4A")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F4B")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060D")]
	public class ReflectedFunction<TResult, T1, T2, T3, T4, T5, T6> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, TResult> call;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T6> p6;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x6001F4C")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x6001F4E")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		public ReflectedFunction()
		{
		}
	}
	[Token(Token = "0x200060E")]
	public abstract class ReflectedWrapper : IReflectedWrapper
	{
		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected SerializedMethodInfo _targetMethod;

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x268A39C", Offset = "0x268A39C", VA = "0x268A39C")]
		public ReflectedWrapper()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x26901AC", Offset = "0x26901AC", VA = "0x26901AC")]
		public static ReflectedWrapper Create(MethodInfo method, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x26902A8", Offset = "0x26902A8", VA = "0x26902A8", Slot = "4")]
		private ISerializedReflectedInfo NodeCanvas.Framework.IReflectedWrapper.GetSerializedInfo()
		{
			return null;
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x26902B0", Offset = "0x26902B0", VA = "0x26902B0")]
		public void SetVariablesBB(IBlackboard bb)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x269033C", Offset = "0x269033C", VA = "0x269033C")]
		public SerializedMethodInfo GetSerializedMethod()
		{
			return null;
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x2689BFC", Offset = "0x2689BFC", VA = "0x2689BFC")]
		public MethodInfo GetMethod()
		{
			return null;
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x2690344", Offset = "0x2690344", VA = "0x2690344")]
		public bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x2690364", Offset = "0x2690364", VA = "0x2690364")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x2690378", Offset = "0x2690378", VA = "0x2690378", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001F59")]
		public abstract BBParameter[] GetVariables();

		[Token(Token = "0x6001F5A")]
		public abstract void Init(object instance);
	}
	[Token(Token = "0x200060F")]
	public abstract class ReflectedActionWrapper : ReflectedWrapper
	{
		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x2689DE8", Offset = "0x2689DE8", VA = "0x2689DE8")]
		public new static ReflectedActionWrapper Create(MethodInfo method, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x6001F5C")]
		public abstract void Call();

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x2689C2C", Offset = "0x2689C2C", VA = "0x2689C2C")]
		protected ReflectedActionWrapper()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public abstract class ReflectedFunctionWrapper : ReflectedWrapper
	{
		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x268BC64", Offset = "0x268BC64", VA = "0x268BC64")]
		public new static ReflectedFunctionWrapper Create(MethodInfo method, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x6001F5F")]
		public abstract object Call();

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x268C260", Offset = "0x268C260", VA = "0x268C260")]
		protected ReflectedFunctionWrapper()
		{
		}
	}
	[Token(Token = "0x2000611")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE14A04", Offset = "0xE14A04")]
	public class MissingAction : ActionTask, IMissingRecoverable
	{
		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x170004FF")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x2D0BBB0", Offset = "0x2D0BBB0", VA = "0x2D0BBB0", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x2D0BBB8", Offset = "0x2D0BBB8", VA = "0x2D0BBB8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000500")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x2D0BBC0", Offset = "0x2D0BBC0", VA = "0x2D0BBC0", Slot = "24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x2D0BBC8", Offset = "0x2D0BBC8", VA = "0x2D0BBC8", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000501")]
		protected override string info
		{
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x2D0BBD0", Offset = "0x2D0BBD0", VA = "0x2D0BBD0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x2D0BC78", Offset = "0x2D0BC78", VA = "0x2D0BC78")]
		public MissingAction()
		{
		}
	}
	[Token(Token = "0x2000612")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xE14A50", Offset = "0xE14A50")]
	public class MissingCondition : ConditionTask, IMissingRecoverable
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x17000502")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x2D0BCEC", Offset = "0x2D0BCEC", VA = "0x2D0BCEC", Slot = "19")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x2D0BCF4", Offset = "0x2D0BCF4", VA = "0x2D0BCF4", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000503")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x2D0BCFC", Offset = "0x2D0BCFC", VA = "0x2D0BCFC", Slot = "21")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x2D0BD04", Offset = "0x2D0BD04", VA = "0x2D0BD04", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		protected override string info
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x2D0BD0C", Offset = "0x2D0BD0C", VA = "0x2D0BD0C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x2D0BDB4", Offset = "0x2D0BDB4", VA = "0x2D0BDB4")]
		public MissingCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000613")]
	[AttributeAttribute(Name = "fsAutoInstance", RVA = "0xE14A9C", Offset = "0xE14A9C")]
	public sealed class TaskAgentParameter : BBParameter<UnityEngine.Object>
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Type _type;

		[Token(Token = "0x17000505")]
		public override Type varType
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x2591A3C", Offset = "0x2591A3C", VA = "0x2591A3C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		public new UnityEngine.Object value
		{
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x2590940", Offset = "0x2590940", VA = "0x2590940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x2591ACC", Offset = "0x2591ACC", VA = "0x2591ACC")]
			set
			{
			}
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x2591AD4", Offset = "0x2591AD4", VA = "0x2591AD4", Slot = "9")]
		public override object GetValueBoxed()
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x2591AD8", Offset = "0x2591AD8", VA = "0x2591AD8", Slot = "10")]
		public override void SetValueBoxed(object newValue)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x258F9EC", Offset = "0x258F9EC", VA = "0x258F9EC")]
		public void SetType(Type newType)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x25907E8", Offset = "0x25907E8", VA = "0x25907E8")]
		public TaskAgentParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000614")]
	public class BBMappingParameter : BBObjectParameter
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _targetSubGraphVariableID;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _canRead;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool _canWrite;

		[Token(Token = "0x17000507")]
		public string targetSubGraphVariableID
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x2AA9DA4", Offset = "0x2AA9DA4", VA = "0x2AA9DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000508")]
		public bool canRead
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x2AA9DAC", Offset = "0x2AA9DAC", VA = "0x2AA9DAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x2AA9DB4", Offset = "0x2AA9DB4", VA = "0x2AA9DB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public bool canWrite
		{
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x2AA9DC0", Offset = "0x2AA9DC0", VA = "0x2AA9DC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x2AA9DC8", Offset = "0x2AA9DC8", VA = "0x2AA9DC8")]
			set
			{
			}
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x2AA9DD4", Offset = "0x2AA9DD4", VA = "0x2AA9DD4")]
		public BBMappingParameter()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x2AA9E80", Offset = "0x2AA9E80", VA = "0x2AA9E80")]
		public BBMappingParameter(Variable subVariable)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000615")]
	public class BBObjectParameter : BBParameter<object>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _type;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23258", Offset = "0xE23258")]
		private Type <type>k__BackingField;

		[Token(Token = "0x1700050A")]
		private Type type
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x2AAA1A4", Offset = "0x2AAA1A4", VA = "0x2AAA1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ABB4", Offset = "0xE2ABB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x2AAA1AC", Offset = "0x2AAA1AC", VA = "0x2AAA1AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ABC4", Offset = "0xE2ABC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public override Type varType
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x2AAA1B4", Offset = "0x2AAA1B4", VA = "0x2AAA1B4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x2AAA07C", Offset = "0x2AAA07C", VA = "0x2AAA07C", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x2AAA124", Offset = "0x2AAA124", VA = "0x2AAA124", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x2AA9DD8", Offset = "0x2AA9DD8", VA = "0x2AA9DD8")]
		public BBObjectParameter()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x2AAA27C", Offset = "0x2AAA27C", VA = "0x2AAA27C")]
		public BBObjectParameter(Type t)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x2AAA2E0", Offset = "0x2AAA2E0", VA = "0x2AAA2E0")]
		public BBObjectParameter(BBParameter source)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x2AA9EE0", Offset = "0x2AA9EE0", VA = "0x2AA9EE0")]
		public void SetType(Type t)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000616")]
	public class BlackboardSource : IBlackboard
	{
		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Dictionary<string, Variable> _variables;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23298", Offset = "0xE23298")]
		private IBlackboard <parent>k__BackingField;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE232A8", Offset = "0xE232A8")]
		private UnityEngine.Object <unityContextObject>k__BackingField;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE232B8", Offset = "0xE232B8")]
		private Component <propertiesBindTarget>k__BackingField;

		[Token(Token = "0x1700050C")]
		public string identifier
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x2DF4524", Offset = "0x2DF4524", VA = "0x2DF4524", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050D")]
		public Dictionary<string, Variable> variables
		{
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x2DF4568", Offset = "0x2DF4568", VA = "0x2DF4568", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x2DF4570", Offset = "0x2DF4570", VA = "0x2DF4570", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700050E")]
		public IBlackboard parent
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x2DF4578", Offset = "0x2DF4578", VA = "0x2DF4578", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC14", Offset = "0xE2AC14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x2DF4580", Offset = "0x2DF4580", VA = "0x2DF4580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC24", Offset = "0xE2AC24")]
			set
			{
			}
		}

		[Token(Token = "0x1700050F")]
		public UnityEngine.Object unityContextObject
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x2DF4588", Offset = "0x2DF4588", VA = "0x2DF4588", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC34", Offset = "0xE2AC34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x2DF4590", Offset = "0x2DF4590", VA = "0x2DF4590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC44", Offset = "0xE2AC44")]
			set
			{
			}
		}

		[Token(Token = "0x17000510")]
		public Component propertiesBindTarget
		{
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x2DF4598", Offset = "0x2DF4598", VA = "0x2DF4598", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC54", Offset = "0xE2AC54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x2DF45A0", Offset = "0x2DF45A0", VA = "0x2DF45A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC64", Offset = "0xE2AC64")]
			set
			{
			}
		}

		[Token(Token = "0x17000511")]
		private string NodeCanvas.Framework.IBlackboard.independantVariablesFieldName
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x2DF45A8", Offset = "0x2DF45A8", VA = "0x2DF45A8", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x2DF42A4", Offset = "0x2DF42A4", VA = "0x2DF42A4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ABD4", Offset = "0xE2ABD4")]
			add
			{
			}
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x2DF4344", Offset = "0x2DF4344", VA = "0x2DF4344", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ABE4", Offset = "0xE2ABE4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x2DF43E4", Offset = "0x2DF43E4", VA = "0x2DF43E4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ABF4", Offset = "0xE2ABF4")]
			add
			{
			}
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x2DF4484", Offset = "0x2DF4484", VA = "0x2DF4484", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC04", Offset = "0xE2AC04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x2DF45B0", Offset = "0x2DF45B0", VA = "0x2DF45B0", Slot = "15")]
		private void NodeCanvas.Framework.IBlackboard.TryInvokeOnVariableAdded(Variable variable)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x2DF4620", Offset = "0x2DF4620", VA = "0x2DF4620", Slot = "16")]
		private void NodeCanvas.Framework.IBlackboard.TryInvokeOnVariableRemoved(Variable variable)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x2DF3790", Offset = "0x2DF3790", VA = "0x2DF3790")]
		public BlackboardSource()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x2DF4690", Offset = "0x2DF4690", VA = "0x2DF4690", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000617")]
	public class MissingBBParameterType : BBParameter<object>, IMissingRecoverable
	{
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x17000512")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x2D0BC80", Offset = "0x2D0BC80", VA = "0x2D0BC80", Slot = "11")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x2D0BC88", Offset = "0x2D0BC88", VA = "0x2D0BC88", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000513")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x2D0BC90", Offset = "0x2D0BC90", VA = "0x2D0BC90", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x2D0BC98", Offset = "0x2D0BC98", VA = "0x2D0BC98", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x2D0BCA0", Offset = "0x2D0BCA0", VA = "0x2D0BCA0")]
		public MissingBBParameterType()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class MissingVariableType : Variable<object>, IMissingRecoverable
	{
		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x17000514")]
		public string missingType
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x2D0BEB8", Offset = "0x2D0BEB8", VA = "0x2D0BEB8", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x2D0BEC0", Offset = "0x2D0BEC0", VA = "0x2D0BEC0", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x17000515")]
		public string recoveryState
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x2D0BEC8", Offset = "0x2D0BEC8", VA = "0x2D0BEC8", Slot = "15")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x2D0BED0", Offset = "0x2D0BED0", VA = "0x2D0BED0", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x2D0BED8", Offset = "0x2D0BED8", VA = "0x2D0BED8")]
		public MissingVariableType()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class fsBBParameterProcessor : fsRecoveryProcessor<BBParameter, MissingBBParameterType>
	{
		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x2D16A30", Offset = "0x2D16A30", VA = "0x2D16A30", Slot = "8")]
		public override void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x2D17530", Offset = "0x2D17530", VA = "0x2D17530")]
		public fsBBParameterProcessor()
		{
		}
	}
}
namespace ParadoxNotion
{
	[Token(Token = "0x200061A")]
	public delegate void ActionCall();
	[Token(Token = "0x200061B")]
	public delegate void ActionCall<T1>(T1 a);
	[Token(Token = "0x200061C")]
	public delegate void ActionCall<T1, T2>(T1 a, T2 b);
	[Token(Token = "0x200061D")]
	public delegate void ActionCall<T1, T2, T3>(T1 a, T2 b, T3 c);
	[Token(Token = "0x200061E")]
	public delegate void ActionCall<T1, T2, T3, T4>(T1 a, T2 b, T3 c, T4 d);
	[Token(Token = "0x200061F")]
	public delegate void ActionCall<T1, T2, T3, T4, T5>(T1 a, T2 b, T3 c, T4 d, T5 e);
	[Token(Token = "0x2000620")]
	public delegate void ActionCall<T1, T2, T3, T4, T5, T6>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);
	[Token(Token = "0x2000621")]
	public delegate void ActionCall<T1, T2, T3, T4, T5, T6, T7>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);
	[Token(Token = "0x2000622")]
	public delegate void ActionCall<T1, T2, T3, T4, T5, T6, T7, T8>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);
	[Token(Token = "0x2000623")]
	public delegate TResult FunctionCall<TResult>();
	[Token(Token = "0x2000624")]
	public delegate TResult FunctionCall<T1, TResult>(T1 a);
	[Token(Token = "0x2000625")]
	public delegate TResult FunctionCall<T1, T2, TResult>(T1 a, T2 b);
	[Token(Token = "0x2000626")]
	public delegate TResult FunctionCall<T1, T2, T3, TResult>(T1 a, T2 b, T3 c);
	[Token(Token = "0x2000627")]
	public delegate TResult FunctionCall<T1, T2, T3, T4, TResult>(T1 a, T2 b, T3 c, T4 d);
	[Token(Token = "0x2000628")]
	public delegate TResult FunctionCall<T1, T2, T3, T4, T5, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e);
	[Token(Token = "0x2000629")]
	public delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);
	[Token(Token = "0x200062A")]
	public delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, T7, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);
	[Token(Token = "0x200062B")]
	public delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);
	[Serializable]
	[Token(Token = "0x200062C")]
	public sealed class DynamicParameterDefinition : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _ID;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _type;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23338", Offset = "0xE23338")]
		private Type <type>k__BackingField;

		[Token(Token = "0x17000516")]
		public string ID
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x2831674", Offset = "0x2831674", VA = "0x2831674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x283F150", Offset = "0x283F150", VA = "0x283F150")]
			private set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public string name
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x283F158", Offset = "0x283F158", VA = "0x283F158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x283F160", Offset = "0x283F160", VA = "0x283F160")]
			set
			{
			}
		}

		[Token(Token = "0x17000518")]
		public Type type
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x283F168", Offset = "0x283F168", VA = "0x283F168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC74", Offset = "0xE2AC74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x283F170", Offset = "0x283F170", VA = "0x283F170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC84", Offset = "0xE2AC84")]
			set
			{
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x283F028", Offset = "0x283F028", VA = "0x283F028", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x283F0D0", Offset = "0x283F0D0", VA = "0x283F0D0", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x283F178", Offset = "0x283F178", VA = "0x283F178")]
		public DynamicParameterDefinition()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x283211C", Offset = "0x283211C", VA = "0x283211C")]
		public DynamicParameterDefinition(string name, Type type)
		{
		}
	}
	[Token(Token = "0x200062D")]
	public enum CompareMethod
	{
		[Token(Token = "0x4001632")]
		EqualTo,
		[Token(Token = "0x4001633")]
		GreaterThan,
		[Token(Token = "0x4001634")]
		LessThan,
		[Token(Token = "0x4001635")]
		GreaterOrEqualTo,
		[Token(Token = "0x4001636")]
		LessOrEqualTo
	}
	[Token(Token = "0x200062E")]
	public enum OperationMethod
	{
		[Token(Token = "0x4001638")]
		Set,
		[Token(Token = "0x4001639")]
		Add,
		[Token(Token = "0x400163A")]
		Subtract,
		[Token(Token = "0x400163B")]
		Multiply,
		[Token(Token = "0x400163C")]
		Divide
	}
	[Token(Token = "0x200062F")]
	public enum ButtonKeys
	{
		[Token(Token = "0x400163E")]
		Left,
		[Token(Token = "0x400163F")]
		Right,
		[Token(Token = "0x4001640")]
		Middle
	}
	[Token(Token = "0x2000630")]
	public enum PressTypes
	{
		[Token(Token = "0x4001642")]
		Down,
		[Token(Token = "0x4001643")]
		Up,
		[Token(Token = "0x4001644")]
		Pressed
	}
	[Token(Token = "0x2000631")]
	public enum MouseClickEvent
	{
		[Token(Token = "0x4001646")]
		MouseDown,
		[Token(Token = "0x4001647")]
		MouseUp
	}
	[Token(Token = "0x2000632")]
	public enum TriggerTypes
	{
		[Token(Token = "0x4001649")]
		TriggerEnter,
		[Token(Token = "0x400164A")]
		TriggerExit,
		[Token(Token = "0x400164B")]
		TriggerStay
	}
	[Token(Token = "0x2000633")]
	public enum CollisionTypes
	{
		[Token(Token = "0x400164D")]
		CollisionEnter,
		[Token(Token = "0x400164E")]
		CollisionExit,
		[Token(Token = "0x400164F")]
		CollisionStay
	}
	[Token(Token = "0x2000634")]
	public enum MouseInteractionTypes
	{
		[Token(Token = "0x4001651")]
		MouseEnter,
		[Token(Token = "0x4001652")]
		MouseExit,
		[Token(Token = "0x4001653")]
		MouseOver
	}
	[Token(Token = "0x2000635")]
	public enum CompactStatus
	{
		[Token(Token = "0x4001655")]
		Failure,
		[Token(Token = "0x4001656")]
		Success
	}
	[Token(Token = "0x2000636")]
	public enum PlayDirections
	{
		[Token(Token = "0x4001658")]
		Forward,
		[Token(Token = "0x4001659")]
		Backward,
		[Token(Token = "0x400165A")]
		Toggle
	}
	[Token(Token = "0x2000637")]
	public enum PlanarDirection
	{
		[Token(Token = "0x400165C")]
		Horizontal,
		[Token(Token = "0x400165D")]
		Vertical,
		[Token(Token = "0x400165E")]
		Auto
	}
	[Token(Token = "0x2000638")]
	public enum Alignment2x2
	{
		[Token(Token = "0x4001660")]
		Default,
		[Token(Token = "0x4001661")]
		Left,
		[Token(Token = "0x4001662")]
		Right,
		[Token(Token = "0x4001663")]
		Top,
		[Token(Token = "0x4001664")]
		Bottom
	}
	[Token(Token = "0x2000639")]
	public enum Alignment3x3
	{
		[Token(Token = "0x4001666")]
		TopLeft,
		[Token(Token = "0x4001667")]
		TopCenter,
		[Token(Token = "0x4001668")]
		TopRight,
		[Token(Token = "0x4001669")]
		MiddleLeft,
		[Token(Token = "0x400166A")]
		MiddleCenter,
		[Token(Token = "0x400166B")]
		MiddleRight,
		[Token(Token = "0x400166C")]
		BottomLeft,
		[Token(Token = "0x400166D")]
		BottomCenter,
		[Token(Token = "0x400166E")]
		BottomRight
	}
	[Token(Token = "0x200063A")]
	public class HierarchyTree
	{
		[Token(Token = "0x200063B")]
		public class Element
		{
			[Token(Token = "0x200063C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14AB0", Offset = "0xE14AB0")]
			private sealed class <GetAllChildrenReferencesOfType>d__15<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001672")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>1__state;

				[Token(Token = "0x4001673")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private T <>2__current;

				[Token(Token = "0x4001674")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4001675")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Element <>4__this;

				[Token(Token = "0x4001676")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <i>5__2;

				[Token(Token = "0x4001677")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private Element <element>5__3;

				[Token(Token = "0x4001678")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private IEnumerator<T> <>7__wrap3;

				[Token(Token = "0x1700051C")]
				private T System.Collections.Generic.IEnumerator<T>.Current
				{
					[Token(Token = "0x6002003")]
					[DebuggerHidden]
					get
					{
						return (T)null;
					}
				}

				[Token(Token = "0x1700051D")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002005")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001FFF")]
				[DebuggerHidden]
				public <GetAllChildrenReferencesOfType>d__15(int <>1__state)
				{
				}

				[Token(Token = "0x6002000")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002001")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002002")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x6002004")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6002006")]
				[DebuggerHidden]
				private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6002007")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private object _reference;

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Element _parent;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<Element> _children;

			[Token(Token = "0x17000519")]
			public object reference
			{
				[Token(Token = "0x6001FF5")]
				[Address(RVA = "0x27335AC", Offset = "0x27335AC", VA = "0x27335AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			public Element parent
			{
				[Token(Token = "0x6001FF6")]
				[Address(RVA = "0x27335B4", Offset = "0x27335B4", VA = "0x27335B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051B")]
			public IEnumerable<Element> children
			{
				[Token(Token = "0x6001FF7")]
				[Address(RVA = "0x27335BC", Offset = "0x27335BC", VA = "0x27335BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x27315AC", Offset = "0x27315AC", VA = "0x27315AC")]
			public Element(object reference)
			{
			}

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x27315E0", Offset = "0x27315E0", VA = "0x27315E0")]
			public Element AddChild(Element child)
			{
				return null;
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x27335C4", Offset = "0x27335C4", VA = "0x27335C4")]
			public void RemoveChild(Element child)
			{
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x2733634", Offset = "0x2733634", VA = "0x2733634")]
			public Element GetRoot()
			{
				return null;
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x2733640", Offset = "0x2733640", VA = "0x2733640")]
			public Element FindReferenceElement(object target)
			{
				return null;
			}

			[Token(Token = "0x6001FFD")]
			public T GetFirstParentReferenceOfType<T>()
			{
				return (T)null;
			}

			[Token(Token = "0x6001FFE")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2AC94", Offset = "0xE2AC94")]
			public IEnumerable<T> GetAllChildrenReferencesOfType<T>()
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x30A7C6C", Offset = "0x30A7C6C", VA = "0x30A7C6C")]
		public HierarchyTree()
		{
		}
	}
	[Token(Token = "0x200063D")]
	public interface IEventData
	{
		[Token(Token = "0x1700051E")]
		GameObject receiver
		{
			[Token(Token = "0x6002008")]
			get;
		}

		[Token(Token = "0x1700051F")]
		object sender
		{
			[Token(Token = "0x6002009")]
			get;
		}

		[Token(Token = "0x17000520")]
		object valueBoxed
		{
			[Token(Token = "0x600200A")]
			get;
		}
	}
	[Token(Token = "0x200063E")]
	public struct EventData : IEventData
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23348", Offset = "0xE23348")]
		private GameObject <receiver>k__BackingField;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23358", Offset = "0xE23358")]
		private object <sender>k__BackingField;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23368", Offset = "0xE23368")]
		private object <value>k__BackingField;

		[Token(Token = "0x17000521")]
		public GameObject receiver
		{
			[Token(Token = "0x600200B")]
			[Address(RVA = "0x28C00CC", Offset = "0x28C00CC", VA = "0x28C00CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AD64", Offset = "0xE2AD64")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600200C")]
			[Address(RVA = "0x28C00D4", Offset = "0x28C00D4", VA = "0x28C00D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AD9C", Offset = "0xE2AD9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000522")]
		public object sender
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x28C00DC", Offset = "0x28C00DC", VA = "0x28C00DC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ADAC", Offset = "0xE2ADAC")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x28C00E4", Offset = "0x28C00E4", VA = "0x28C00E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ADE4", Offset = "0xE2ADE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000523")]
		public object value
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x28C00EC", Offset = "0x28C00EC", VA = "0x28C00EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ADF4", Offset = "0xE2ADF4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x28C00F4", Offset = "0x28C00F4", VA = "0x28C00F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AE2C", Offset = "0xE2AE2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000524")]
		public object valueBoxed
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x28C00FC", Offset = "0x28C00FC", VA = "0x28C00FC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x28C0104", Offset = "0x28C0104", VA = "0x28C0104")]
		public EventData(object value, GameObject receiver, object sender)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x28C0154", Offset = "0x28C0154", VA = "0x28C0154")]
		public EventData(GameObject receiver, object sender)
		{
		}
	}
	[Token(Token = "0x200063F")]
	public struct EventData<T> : IEventData
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23378", Offset = "0xE23378")]
		private GameObject <receiver>k__BackingField;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23388", Offset = "0xE23388")]
		private object <sender>k__BackingField;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23398", Offset = "0xE23398")]
		private T <value>k__BackingField;

		[Token(Token = "0x17000525")]
		public GameObject receiver
		{
			[Token(Token = "0x6002014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AE3C", Offset = "0xE2AE3C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002015")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AE74", Offset = "0xE2AE74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000526")]
		public object sender
		{
			[Token(Token = "0x6002016")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AE84", Offset = "0xE2AE84")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002017")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AEBC", Offset = "0xE2AEBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public T value
		{
			[Token(Token = "0x6002018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AECC", Offset = "0xE2AECC")]
			readonly get
			{
				return (T)null;
			}
			[Token(Token = "0x6002019")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AF04", Offset = "0xE2AF04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public object valueBoxed
		{
			[Token(Token = "0x600201A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201B")]
		public EventData(T value, GameObject receiver, object sender)
		{
		}
	}
	[Token(Token = "0x2000640")]
	public static class OperationTools
	{
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x26A21DC", Offset = "0x26A21DC", VA = "0x26A21DC")]
		public static string GetOperationString(OperationMethod om)
		{
			return null;
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x26A2280", Offset = "0x26A2280", VA = "0x26A2280")]
		public static float Operate(float a, float b, OperationMethod om, float delta = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x26A22DC", Offset = "0x26A22DC", VA = "0x26A22DC")]
		public static int Operate(int a, int b, OperationMethod om)
		{
			return default(int);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x26A2328", Offset = "0x26A2328", VA = "0x26A2328")]
		public static Vector3 Operate(Vector3 a, Vector3 b, OperationMethod om, float delta = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x26A23C8", Offset = "0x26A23C8", VA = "0x26A23C8")]
		public static string GetCompareString(CompareMethod cm)
		{
			return null;
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x26A246C", Offset = "0x26A246C", VA = "0x26A246C")]
		public static bool Compare(float a, float b, CompareMethod cm, float floatingPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x26A24D8", Offset = "0x26A24D8", VA = "0x26A24D8")]
		public static bool Compare(int a, int b, CompareMethod cm)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000641")]
	public static class ReflectionTools
	{
		[Token(Token = "0x2000642")]
		public enum MethodType
		{
			[Token(Token = "0x400169E")]
			Normal,
			[Token(Token = "0x400169F")]
			PropertyAccessor,
			[Token(Token = "0x40016A0")]
			Event,
			[Token(Token = "0x40016A1")]
			Operator
		}

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14AD0", Offset = "0xE14AD0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool includeObsolete;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Type, bool> <>9__2;

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x2EE64B0", Offset = "0x2EE64B0", VA = "0x2EE64B0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0x2EE64B8", Offset = "0x2EE64B8", VA = "0x2EE64B8")]
			internal bool <GetAllTypes>b__2(Type t)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14AE0", Offset = "0xE14AE0")]
		private sealed class <>c
		{
			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, string> <>9__33_0;

			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__33_1;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ParameterInfo, Type> <>9__102_0;

			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ParameterInfo, Type> <>9__110_0;

			[Token(Token = "0x6002088")]
			[Address(RVA = "0x2EE63DC", Offset = "0x2EE63DC", VA = "0x2EE63DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x2EE63E4", Offset = "0x2EE63E4", VA = "0x2EE63E4")]
			internal string <GetAllTypes>b__33_0(Type t)
			{
				return null;
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0x2EE6408", Offset = "0x2EE6408", VA = "0x2EE6408")]
			internal string <GetAllTypes>b__33_1(Type t)
			{
				return null;
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0x2EE6470", Offset = "0x2EE6470", VA = "0x2EE6470")]
			internal Type <RTCreateDelegate>b__102_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0x2EE6490", Offset = "0x2EE6490", VA = "0x2EE6490")]
			internal Type <GetBaseDefinition>b__110_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14AF0", Offset = "0xE14AF0")]
		private sealed class <RTGetAttributesRecursive>d__99<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable where T : Attribute
		{
			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type <>3__type;

			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type <current>5__2;

			[Token(Token = "0x1700052A")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6002090")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002092")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600208D")]
			[DebuggerHidden]
			public <RTGetAttributesRecursive>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x600208E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600208F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002091")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002093")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002094")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14B00", Offset = "0xE14B00")]
		private sealed class <>c__DisplayClass128_0<T, TResult>
		{
			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FieldInfo info;

			[Token(Token = "0x6002095")]
			public <>c__DisplayClass128_0()
			{
			}

			[Token(Token = "0x6002096")]
			internal TResult <GetFieldGetter>b__0(T instance)
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14B10", Offset = "0xE14B10")]
		private sealed class <>c__DisplayClass129_0<T, TValue>
		{
			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FieldInfo info;

			[Token(Token = "0x6002097")]
			public <>c__DisplayClass129_0()
			{
			}

			[Token(Token = "0x6002098")]
			internal void <GetFieldSetter>b__0(T instance, TValue value)
			{
			}
		}

		[Token(Token = "0x400167F")]
		public const BindingFlags FLAGS_ALL = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy;

		[Token(Token = "0x4001680")]
		public const BindingFlags FLAGS_ALL_DECLARED = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Assembly[] _loadedAssemblies;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type[] _allTypes;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static object[] _tempArgs;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<string, Type> _typesMap;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<Type, Type[]> _subTypesMap;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<MethodBase, MethodType> _methodSpecialType;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<Type, string> _typeFriendlyName;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Dictionary<Type, string> _typeFriendlyNameCompileSafe;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<MethodBase, string> _methodSignatures;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Dictionary<Type, ConstructorInfo[]> _typeConstructors;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<Type, MethodInfo[]> _typeMethods;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Dictionary<Type, FieldInfo[]> _typeFields;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Dictionary<Type, PropertyInfo[]> _typeProperties;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Dictionary<Type, EventInfo[]> _typeEvents;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Dictionary<Type, object[]> _typeAttributes;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Dictionary<MemberInfo, object[]> _memberAttributes;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Dictionary<MemberInfo, bool> _obsoleteCache;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static Dictionary<Type, MethodInfo[]> _typeExtensions;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static Dictionary<Type, Type[]> _genericArgsTypeCache;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Dictionary<MethodInfo, Type[]> _genericArgsMathodCache;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly Dictionary<string, string> op_FriendlyNamesLong;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly Dictionary<string, string> op_FriendlyNamesShort;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static readonly Dictionary<string, string> op_CSharpAliases;

		[Token(Token = "0x4001698")]
		public const string METHOD_SPECIAL_NAME_GET = "get_";

		[Token(Token = "0x4001699")]
		public const string METHOD_SPECIAL_NAME_SET = "set_";

		[Token(Token = "0x400169A")]
		public const string METHOD_SPECIAL_NAME_ADD = "add_";

		[Token(Token = "0x400169B")]
		public const string METHOD_SPECIAL_NAME_REMOVE = "remove_";

		[Token(Token = "0x400169C")]
		public const string METHOD_SPECIAL_NAME_OP = "op_";

		[Token(Token = "0x17000529")]
		private static Assembly[] loadedAssemblies
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0x2691680", Offset = "0x2691680", VA = "0x2691680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x269038C", Offset = "0x269038C", VA = "0x269038C")]
		static ReflectionTools()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x26910E4", Offset = "0x26910E4", VA = "0x26910E4")]
		public static void FlushMem()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x269175C", Offset = "0x269175C", VA = "0x269175C")]
		public static Type GetType(string typeFullName)
		{
			return null;
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x2691AE8", Offset = "0x2691AE8", VA = "0x2691AE8")]
		public static Type GetType(string typeFullName, Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x26917C4", Offset = "0x26917C4", VA = "0x26917C4")]
		public static Type GetType(string typeFullName, bool fallbackNoNamespace = false, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x2691B5C", Offset = "0x2691B5C", VA = "0x2691B5C")]
		private static Type GetTypeDirect(string typeFullName)
		{
			return null;
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x2691DA4", Offset = "0x2691DA4", VA = "0x2691DA4")]
		private static Type TryResolveGenericType(string typeFullName, bool fallbackNoNamespace = false, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x2692458", Offset = "0x2692458", VA = "0x2692458")]
		private static Type TryResolveDeserializeFromAttribute(string typeName)
		{
			return null;
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x26925EC", Offset = "0x26925EC", VA = "0x26925EC")]
		private static Type TryResolveWithoutNamespace(string typeName, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x2692818", Offset = "0x2692818", VA = "0x2692818")]
		public static Type[] GetAllTypes(bool includeObsolete)
		{
			return null;
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x2692D78", Offset = "0x2692D78", VA = "0x2692D78")]
		public static Type[] GetImplementationsOf(Type baseType)
		{
			return null;
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x2693000", Offset = "0x2693000", VA = "0x2693000")]
		public static object[] SingleTempArgsArray(object arg)
		{
			return null;
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x26930CC", Offset = "0x26930CC", VA = "0x26930CC")]
		public static MethodType GetMethodSpecialType(this MethodBase method)
		{
			return default(MethodType);
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x2680FB0", Offset = "0x2680FB0", VA = "0x2680FB0")]
		public static string FriendlyName(this Type t, bool compileSafe = false)
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x26934E0", Offset = "0x26934E0", VA = "0x26934E0")]
		public static string FriendlyName(this MemberInfo info)
		{
			return null;
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x2693668", Offset = "0x2693668", VA = "0x2693668")]
		public static string FriendlyName(this MethodBase method)
		{
			return null;
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x268D4E8", Offset = "0x268D4E8", VA = "0x268D4E8")]
		public static string FriendlyName(this MethodBase method, out MethodType specialNameType)
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x26936DC", Offset = "0x26936DC", VA = "0x26936DC")]
		public static string SignatureName(this MethodBase method)
		{
			return null;
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x2693BC8", Offset = "0x2693BC8", VA = "0x2693BC8")]
		public static string FriendlyTypeName(string fullName)
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x268EF00", Offset = "0x268EF00", VA = "0x268EF00")]
		public static Type RTReflectedOrDeclaredType(this MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x2692D58", Offset = "0x2692D58", VA = "0x2692D58")]
		public static bool RTIsAssignableFrom(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x2693D10", Offset = "0x2693D10", VA = "0x2693D10")]
		public static bool RTIsAssignableTo(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x2692FE8", Offset = "0x2692FE8", VA = "0x2692FE8")]
		public static bool RTIsAbstract(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x268C770", Offset = "0x268C770", VA = "0x268C770")]
		public static bool RTIsValueType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x268E604", Offset = "0x268E604", VA = "0x268E604")]
		public static bool RTIsArray(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x2693D94", Offset = "0x2693D94", VA = "0x2693D94")]
		public static bool RTIsInterface(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x268FD7C", Offset = "0x268FD7C", VA = "0x268FD7C")]
		public static bool RTIsSubclassOf(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x2693380", Offset = "0x2693380", VA = "0x2693380")]
		public static bool RTIsGenericParameter(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x26933A0", Offset = "0x26933A0", VA = "0x26933A0")]
		public static bool RTIsGenericType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x2693DAC", Offset = "0x2693DAC", VA = "0x2693DAC")]
		public static MethodInfo RTGetGetMethod(this PropertyInfo prop)
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x2693DC4", Offset = "0x2693DC4", VA = "0x2693DC4")]
		public static MethodInfo RTGetSetMethod(this PropertyInfo prop)
		{
			return null;
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x2693DDC", Offset = "0x2693DDC", VA = "0x2693DDC")]
		public static MethodInfo RTGetDelegateMethodInfo(this Delegate del)
		{
			return null;
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x268A37C", Offset = "0x268A37C", VA = "0x268A37C")]
		public static Type RTMakeGenericType(this Type type, params Type[] typeArgs)
		{
			return null;
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x26933C0", Offset = "0x26933C0", VA = "0x26933C0")]
		public static Type[] RTGetGenericArguments(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x268D800", Offset = "0x268D800", VA = "0x268D800")]
		public static Type[] RTGetGenericArguments(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x2693DF4", Offset = "0x2693DF4", VA = "0x2693DF4")]
		public static Type[] RTGetEmptyTypes()
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x268E61C", Offset = "0x268E61C", VA = "0x268E61C")]
		public static Type RTGetElementType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x268E6B4", Offset = "0x268E6B4", VA = "0x268E6B4")]
		public static bool RTIsByRef(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x2693E58", Offset = "0x2693E58", VA = "0x2693E58")]
		public static object CreateObject(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x2693EE0", Offset = "0x2693EE0", VA = "0x2693EE0")]
		public static object CreateObjectUninitialized(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x2693F94", Offset = "0x2693F94", VA = "0x2693F94")]
		public static ConstructorInfo RTGetDefaultConstructor(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x2694198", Offset = "0x2694198", VA = "0x2694198")]
		public static ConstructorInfo RTGetConstructor(this Type type, Type[] paramTypes)
		{
			return null;
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x269433C", Offset = "0x269433C", VA = "0x269433C")]
		private static bool MemberResolvedFromDeserializeAttribute(MemberInfo member, string targetName)
		{
			return default(bool);
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x268FD9C", Offset = "0x268FD9C", VA = "0x268FD9C")]
		public static MethodInfo RTGetMethod(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x2694500", Offset = "0x2694500", VA = "0x2694500")]
		public static MethodInfo RTGetMethod(this Type type, string name, Type[] paramTypes, [Optional] Type returnType, [Optional] Type[] genericArgumentTypes)
		{
			return null;
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x268B4A0", Offset = "0x268B4A0", VA = "0x268B4A0")]
		public static FieldInfo RTGetField(this Type type, string name, bool includePrivateBase = false)
		{
			return null;
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x26948F4", Offset = "0x26948F4", VA = "0x26948F4")]
		public static PropertyInfo RTGetProperty(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x2694B20", Offset = "0x2694B20", VA = "0x2694B20")]
		public static MemberInfo RTGetFieldOrProp(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x2694CD8", Offset = "0x2694CD8", VA = "0x2694CD8")]
		public static EventInfo RTGetEvent(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x2694F04", Offset = "0x2694F04", VA = "0x2694F04")]
		public static object RTGetFieldOrPropValue(this MemberInfo member, object instance, int index = -1)
		{
			return null;
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x2695080", Offset = "0x2695080", VA = "0x2695080")]
		public static void RTSetFieldOrPropValue(this MemberInfo member, object instance, object value, int index = -1)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x2694080", Offset = "0x2694080", VA = "0x2694080")]
		public static ConstructorInfo[] RTGetConstructors(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x26943E8", Offset = "0x26943E8", VA = "0x26943E8")]
		public static MethodInfo[] RTGetMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x26947DC", Offset = "0x26947DC", VA = "0x26947DC")]
		public static FieldInfo[] RTGetFields(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x2694A08", Offset = "0x2694A08", VA = "0x2694A08")]
		public static PropertyInfo[] RTGetProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x2694DEC", Offset = "0x2694DEC", VA = "0x2694DEC")]
		public static EventInfo[] RTGetEvents(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x26951F4", Offset = "0x26951F4", VA = "0x26951F4")]
		public static object[] RTGetAllAttributes(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600205D")]
		public static bool RTIsDefined<T>(this Type type, bool inherited) where T : Attribute
		{
			return default(bool);
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x2695308", Offset = "0x2695308", VA = "0x2695308")]
		public static bool RTIsDefined(this Type type, Type attributeType, bool inherited)
		{
			return default(bool);
		}

		[Token(Token = "0x600205F")]
		public static T RTGetAttribute<T>(this Type type, bool inherited) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x26953C0", Offset = "0x26953C0", VA = "0x26953C0")]
		public static Attribute RTGetAttribute(this Type type, Type attributeType, bool inherited)
		{
			return null;
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x269554C", Offset = "0x269554C", VA = "0x269554C")]
		public static object[] RTGetAllAttributes(this MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x6002062")]
		public static bool RTIsDefined<T>(this MemberInfo member, bool inherited) where T : Attribute
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x2695660", Offset = "0x2695660", VA = "0x2695660")]
		public static bool RTIsDefined(this MemberInfo member, Type attributeType, bool inherited)
		{
			return default(bool);
		}

		[Token(Token = "0x6002064")]
		public static T RTGetAttribute<T>(this MemberInfo member, bool inherited) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x2695718", Offset = "0x2695718", VA = "0x2695718")]
		public static Attribute RTGetAttribute(this MemberInfo member, Type attributeType, bool inherited)
		{
			return null;
		}

		[Token(Token = "0x6002066")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B244", Offset = "0xE2B244")]
		public static IEnumerable<T> RTGetAttributesRecursive<T>(this Type type) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x26958A4", Offset = "0x26958A4", VA = "0x26958A4")]
		public static ParameterInfo[] RTGetDelegateTypeParameters(this Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6002068")]
		public static T RTCreateDelegate<T>(this MethodInfo method, object instance) where T : Delegate
		{
			return null;
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x268B008", Offset = "0x268B008", VA = "0x268B008")]
		public static Delegate RTCreateDelegate(this MethodInfo method, Type type, object instance)
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x2695A24", Offset = "0x2695A24", VA = "0x2695A24")]
		public static Delegate ConvertDelegate(Delegate originalDelegate, Type targetDelegateType)
		{
			return null;
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x26809A4", Offset = "0x26809A4", VA = "0x26809A4")]
		public static bool IsReadOnly(this FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x2680F28", Offset = "0x2680F28", VA = "0x2680F28")]
		public static bool IsConstant(this FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x2695A64", Offset = "0x2695A64", VA = "0x2695A64")]
		public static bool IsStatic(this EventInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x2695ABC", Offset = "0x2695ABC", VA = "0x2695ABC")]
		public static bool IsStatic(this PropertyInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x2682A00", Offset = "0x2682A00", VA = "0x2682A00")]
		public static bool IsParams(this ParameterInfo parameter, ParameterInfo[] parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x2695B14", Offset = "0x2695B14", VA = "0x2695B14")]
		public static bool IsObsolete(this MemberInfo member, bool inherited = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x2695E28", Offset = "0x2695E28", VA = "0x2695E28")]
		public static PropertyInfo GetBaseDefinition(this PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x268BB38", Offset = "0x268BB38", VA = "0x268BB38")]
		public static FieldInfo GetBaseDefinition(this FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x2696094", Offset = "0x2696094", VA = "0x2696094")]
		public static MethodInfo[] GetExtensionMethods(this Type targetType)
		{
			return null;
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x268D920", Offset = "0x268D920", VA = "0x268D920")]
		public static bool IsExtensionMethod(this MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x2695CF0", Offset = "0x2695CF0", VA = "0x2695CF0")]
		public static bool IsPropertyAccessor(this MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x2696408", Offset = "0x2696408", VA = "0x2696408")]
		public static bool IsIndexerProperty(this PropertyInfo property)
		{
			return default(bool);
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x2696440", Offset = "0x2696440", VA = "0x2696440")]
		public static bool IsAutoProperty(this PropertyInfo property)
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x2695D5C", Offset = "0x2695D5C", VA = "0x2695D5C")]
		public static PropertyInfo GetAccessorProperty(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x2696568", Offset = "0x2696568", VA = "0x2696568")]
		public static bool IsEnumerableCollection(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x2682AE4", Offset = "0x2682AE4", VA = "0x2682AE4")]
		public static Type GetEnumerableElementType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x26966E4", Offset = "0x26966E4", VA = "0x26966E4")]
		public static Type GetSingleGenericArgument(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x269679C", Offset = "0x269679C", VA = "0x269679C")]
		public static Type GetFirstGenericParameterConstraintType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x268DC74", Offset = "0x268DC74", VA = "0x268DC74")]
		public static Type GetFirstGenericParameterConstraintType(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x2696970", Offset = "0x2696970", VA = "0x2696970")]
		public static bool TryMakeGeneric(this Type def, Type argType, out Type result)
		{
			return default(bool);
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x2696B8C", Offset = "0x2696B8C", VA = "0x2696B8C")]
		public static bool TryMakeGeneric(this MethodInfo def, Type argType, out MethodInfo result)
		{
			return default(bool);
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x2696D90", Offset = "0x2696D90", VA = "0x2696D90")]
		public static Array Resize(this Array array, int newSize)
		{
			return null;
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x2696E7C", Offset = "0x2696E7C", VA = "0x2696E7C")]
		public static bool TryConvert(Type fromType, Type toType, out UnaryExpression exp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x2696FA4", Offset = "0x2696FA4", VA = "0x2696FA4")]
		public static void DigFields(object root, Predicate<FieldInfo> move, Action<object> push, Action<object> pop)
		{
		}

		[Token(Token = "0x6002083")]
		public static Func<T, TResult> GetFieldGetter<T, TResult>(FieldInfo info)
		{
			return null;
		}

		[Token(Token = "0x6002084")]
		public static Action<T, TValue> GetFieldSetter<T, TValue>(FieldInfo info)
		{
			return null;
		}
	}
	[Token(Token = "0x2000648")]
	public static class TypeConverter
	{
		[Token(Token = "0x2000649")]
		public delegate Func<object, object> CustomConverter(Type fromType, Type toType);

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14B20", Offset = "0xE14B20")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type toType;

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x3133470", Offset = "0x3133470", VA = "0x3133470")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x3133478", Offset = "0x3133478", VA = "0x3133478")]
			internal object <Get>b__2(object value)
			{
				return null;
			}

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x31335D0", Offset = "0x31335D0", VA = "0x31335D0")]
			internal object <Get>b__4(object value)
			{
				return null;
			}

			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x31336B4", Offset = "0x31336B4", VA = "0x31336B4")]
			internal object <Get>b__6(object value)
			{
				return null;
			}

			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x31337D0", Offset = "0x31337D0", VA = "0x31337D0")]
			internal object <Get>b__7(object value)
			{
				return null;
			}

			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x31338B4", Offset = "0x31338B4", VA = "0x31338B4")]
			internal object <Get>b__8(object value)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14B30", Offset = "0xE14B30")]
		private sealed class <>c
		{
			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, object> <>9__4_0;

			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<object, object> <>9__4_1;

			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<object, object> <>9__4_3;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<object, object> <>9__4_5;

			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<object, object> <>9__4_9;

			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<object, object> <>9__4_10;

			[Token(Token = "0x40016BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<object, object> <>9__4_11;

			[Token(Token = "0x40016BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<object, object> <>9__4_12;

			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<object, object> <>9__4_13;

			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<object, object> <>9__4_14;

			[Token(Token = "0x40016BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<object, object> <>9__4_15;

			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<object, object> <>9__4_16;

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x3132B3C", Offset = "0x3132B3C", VA = "0x3132B3C")]
			public <>c()
			{
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x3132B44", Offset = "0x3132B44", VA = "0x3132B44")]
			internal object <Get>b__4_0(object value)
			{
				return null;
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x3132B4C", Offset = "0x3132B4C", VA = "0x3132B4C")]
			internal object <Get>b__4_1(object value)
			{
				return null;
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x3132BAC", Offset = "0x3132BAC", VA = "0x3132BAC")]
			internal object <Get>b__4_3(object value)
			{
				return null;
			}

			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x3132C10", Offset = "0x3132C10", VA = "0x3132C10")]
			internal object <Get>b__4_5(object value)
			{
				return null;
			}

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x3132D10", Offset = "0x3132D10", VA = "0x3132D10")]
			internal object <Get>b__4_9(object value)
			{
				return null;
			}

			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x3132E24", Offset = "0x3132E24", VA = "0x3132E24")]
			internal object <Get>b__4_10(object value)
			{
				return null;
			}

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x3132F64", Offset = "0x3132F64", VA = "0x3132F64")]
			internal object <Get>b__4_11(object value)
			{
				return null;
			}

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x313307C", Offset = "0x313307C", VA = "0x313307C")]
			internal object <Get>b__4_12(object value)
			{
				return null;
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x31331C0", Offset = "0x31331C0", VA = "0x31331C0")]
			internal object <Get>b__4_13(object value)
			{
				return null;
			}

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x3133278", Offset = "0x3133278", VA = "0x3133278")]
			internal object <Get>b__4_14(object value)
			{
				return null;
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x313332C", Offset = "0x313332C", VA = "0x313332C")]
			internal object <Get>b__4_15(object value)
			{
				return null;
			}

			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x31333D0", Offset = "0x31333D0", VA = "0x31333D0")]
			internal object <Get>b__4_16(object value)
			{
				return null;
			}
		}

		[Token(Token = "0x1400002B")]
		public static event CustomConverter customConverter
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x27B64C8", Offset = "0x27B64C8", VA = "0x27B64C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B4B4", Offset = "0xE2B4B4")]
			add
			{
			}
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x27B6584", Offset = "0x27B6584", VA = "0x27B6584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B4C4", Offset = "0xE2B4C4")]
			remove
			{
			}
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x27B6640", Offset = "0x27B6640", VA = "0x27B6640")]
		public static Func<object, object> Get(Type fromType, Type toType)
		{
			return null;
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x27B7984", Offset = "0x27B7984", VA = "0x27B7984")]
		public static bool CanConvert(Type fromType, Type toType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200064C")]
	public static class ColorUtils
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Color32, string> colorHexCache;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Color> hexColorCache;

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x22B7304", Offset = "0x22B7304", VA = "0x22B7304")]
		public static Color WithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x22B730C", Offset = "0x22B730C", VA = "0x22B730C")]
		public static Color Grey(float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x22B7348", Offset = "0x22B7348", VA = "0x22B7348")]
		public static string ColorToHex(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x22B74F4", Offset = "0x22B74F4", VA = "0x22B74F4")]
		public static Color HexToColor(string hex)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200064D")]
	public static class CurveUtils
	{
		[Token(Token = "0x40016C2")]
		private const float POS_CHECK_RES = 100f;

		[Token(Token = "0x40016C3")]
		private const float POS_CHECK_DISTANCE = 10f;

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x2830454", Offset = "0x2830454", VA = "0x2830454")]
		public static Vector2 GetPosAlongCurve(Vector2 from, Vector2 to, Vector2 fromTangent, Vector2 toTangent, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x28304D0", Offset = "0x28304D0", VA = "0x28304D0")]
		public static bool IsPosAlongCurve(Vector2 from, Vector2 to, Vector2 fromTangent, Vector2 toTangent, Vector2 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x2830500", Offset = "0x2830500", VA = "0x2830500")]
		public static bool IsPosAlongCurve(Vector2 from, Vector2 to, Vector2 fromTangent, Vector2 toTangent, Vector2 targetPosition, out float norm)
		{
			return default(bool);
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x283067C", Offset = "0x283067C", VA = "0x283067C")]
		public static void ResolveTangents(Vector2 from, Vector2 to, float rigidMlt, PlanarDirection direction, out Vector2 fromTangent, out Vector2 toTangent)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x2830788", Offset = "0x2830788", VA = "0x2830788")]
		public static void ResolveTangents(Vector2 from, Vector2 to, Rect fromRect, Rect toRect, float rigidMlt, PlanarDirection direction, out Vector2 fromTangent, out Vector2 toTangent)
		{
		}
	}
	[Token(Token = "0x200064E")]
	public static class GUIStyleUtils
	{
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x2934560", Offset = "0x2934560", VA = "0x2934560")]
		public static GUIStyle Margin(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x2934604", Offset = "0x2934604", VA = "0x2934604")]
		public static GUIStyle Padding(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x29346A8", Offset = "0x29346A8", VA = "0x29346A8")]
		public static GUIStyle Border(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x293474C", Offset = "0x293474C", VA = "0x293474C")]
		public static GUIStyle Overflow(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x29347F0", Offset = "0x29347F0", VA = "0x29347F0")]
		public static GUIStyle TextAlignment(this GUIStyle style, TextAnchor anchor)
		{
			return null;
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x2934820", Offset = "0x2934820", VA = "0x2934820")]
		public static GUIStyle RichText(this GUIStyle style, bool rich)
		{
			return null;
		}
	}
	[Token(Token = "0x200064F")]
	public static class LayerUtils
	{
		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x2CF7B20", Offset = "0x2CF7B20", VA = "0x2CF7B20")]
		public static LayerMask CreateFromNames(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x2CF7BEC", Offset = "0x2CF7BEC", VA = "0x2CF7BEC")]
		public static LayerMask CreateFromNumbers(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x2CF7B38", Offset = "0x2CF7B38", VA = "0x2CF7B38")]
		public static LayerMask LayerNamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x2CF7C04", Offset = "0x2CF7C04", VA = "0x2CF7C04")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x2CF7CA8", Offset = "0x2CF7CA8", VA = "0x2CF7CA8")]
		public static LayerMask Inverse(this LayerMask mask)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x2CF7CD4", Offset = "0x2CF7CD4", VA = "0x2CF7CD4")]
		public static LayerMask AddToMask(this LayerMask mask, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x2CF7D24", Offset = "0x2CF7D24", VA = "0x2CF7D24")]
		public static LayerMask RemoveFromMask(this LayerMask mask, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x2CF7D90", Offset = "0x2CF7D90", VA = "0x2CF7D90")]
		public static bool ContainsAnyLayer(this LayerMask mask, params string[] layerNames)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x2CF7E48", Offset = "0x2CF7E48", VA = "0x2CF7E48")]
		public static bool ContainsAllLayers(this LayerMask mask, params string[] layerNames)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x2CF7F10", Offset = "0x2CF7F10", VA = "0x2CF7F10")]
		public static string[] MaskToNames(this LayerMask mask)
		{
			return null;
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x2CF8024", Offset = "0x2CF8024", VA = "0x2CF8024")]
		public static string MaskToString(this LayerMask mask)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x2CF8080", Offset = "0x2CF8080", VA = "0x2CF8080")]
		public static string MaskToString(this LayerMask mask, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000650")]
	public static class ObjectUtils
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14B80", Offset = "0xE14B80")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject exclude;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LayerMask mask;

			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x2EE27C4", Offset = "0x2EE27C4", VA = "0x2EE27C4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x2EE27CC", Offset = "0x2EE27CC", VA = "0x2EE27CC")]
			internal bool <FindGameObjectsWithinLayerMask>b__0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x26A117C", Offset = "0x26A117C", VA = "0x26A117C")]
		public static bool AnyEquals(object a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		public static List<T> Shuffle<T>(this List<T> list)
		{
			return null;
		}

		[Token(Token = "0x60020D3")]
		public static bool Is<T>(this object o, out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D4")]
		public static T GetAddComponent<T>(this GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x26A12F0", Offset = "0x26A12F0", VA = "0x26A12F0")]
		public static Component TransformToType(this Component current, Type type)
		{
			return null;
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x26A14CC", Offset = "0x26A14CC", VA = "0x26A14CC")]
		public static IEnumerable<GameObject> FindGameObjectsWithinLayerMask(LayerMask mask, [Optional] GameObject exclude)
		{
			return null;
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x26A1618", Offset = "0x26A1618", VA = "0x26A1618")]
		public static bool IsInLayerMask(this GameObject gameObject, LayerMask mask)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000652")]
	public static class RectUtils
	{
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x2688E7C", Offset = "0x2688E7C", VA = "0x2688E7C")]
		public static Rect GetBoundRect(params Rect[] rects)
		{
			return default(Rect);
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x2688FDC", Offset = "0x2688FDC", VA = "0x2688FDC")]
		public static Rect GetBoundRect(params Vector2[] positions)
		{
			return default(Rect);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x2689108", Offset = "0x2689108", VA = "0x2689108")]
		public static bool Encapsulates(this Rect a, Rect b)
		{
			return default(bool);
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x26891D0", Offset = "0x26891D0", VA = "0x26891D0")]
		public static Rect ExpandBy(this Rect rect, float margin)
		{
			return default(Rect);
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x26891E0", Offset = "0x26891E0", VA = "0x26891E0")]
		public static Rect ExpandBy(this Rect rect, float xMargin, float yMargin)
		{
			return default(Rect);
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x26891EC", Offset = "0x26891EC", VA = "0x26891EC")]
		public static Rect ExpandBy(this Rect rect, float left, float top, float right, float bottom)
		{
			return default(Rect);
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x2689294", Offset = "0x2689294", VA = "0x2689294")]
		public static Rect TransformSpace(this Rect rect, Rect oldContainer, Rect newContainer)
		{
			return default(Rect);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x26894E0", Offset = "0x26894E0", VA = "0x26894E0")]
		public static Vector2 TransformSpace(this Vector2 vector, Rect oldContainer, Rect newContainer)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000653")]
	public static class StringUtils
	{
		[Token(Token = "0x40016C6")]
		public const string SPACE = " ";

		[Token(Token = "0x40016C7")]
		public const string ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly char[] CHAR_SPACE_ARRAY;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> splitCaseCache;

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x2583DE4", Offset = "0x2583DE4", VA = "0x2583DE4")]
		public static string SplitCamelCase(this string s)
		{
			return null;
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x258A8F4", Offset = "0x258A8F4", VA = "0x258A8F4")]
		public static string CapitalizeFirst(this string s)
		{
			return null;
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x258A9B0", Offset = "0x258A9B0", VA = "0x258A9B0")]
		public static string CapLength(this string s, int max)
		{
			return null;
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x258AA68", Offset = "0x258AA68", VA = "0x258AA68")]
		public static string GetCapitals(this string s)
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x258ABA8", Offset = "0x258ABA8", VA = "0x258ABA8")]
		public static string FormatError(this string input)
		{
			return null;
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x258ABF8", Offset = "0x258ABF8", VA = "0x258ABF8")]
		public static string GetAlphabetLetter(int index)
		{
			return null;
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x258AC9C", Offset = "0x258AC9C", VA = "0x258AC9C")]
		public static string GetStringWithinOuter(this string input, char from, char to)
		{
			return null;
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x258AD14", Offset = "0x258AD14", VA = "0x258AD14")]
		public static string GetStringWithinInner(this string input, char from, char to)
		{
			return null;
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x25884D0", Offset = "0x25884D0", VA = "0x25884D0")]
		public static string ReplaceWithin(this string text, char startChar, char endChar, Func<string, string> Process)
		{
			return null;
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x258ADD8", Offset = "0x258ADD8", VA = "0x258ADD8")]
		public static float ScoreSearchMatch(string input, string leafName, string categoryName = "")
		{
			return default(float);
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x258B0B4", Offset = "0x258B0B4", VA = "0x258B0B4")]
		public static bool SearchMatch(string input, string leafName, string categoryName = "")
		{
			return default(bool);
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x258B400", Offset = "0x258B400", VA = "0x258B400")]
		public static string ToStringAdvanced(this object o)
		{
			return null;
		}
	}
	[Token(Token = "0x2000654")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE14BB0", Offset = "0xE14BB0")]
	public class WeakReferenceList<T> where T : class
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<WeakReference<T>> list;

		[Token(Token = "0x1700052C")]
		public int Count
		{
			[Token(Token = "0x60020EF")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700052D")]
		public T Item
		{
			[Token(Token = "0x60020F2")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020F3")]
			set
			{
			}
		}

		[Token(Token = "0x60020F0")]
		public WeakReferenceList()
		{
		}

		[Token(Token = "0x60020F1")]
		public WeakReferenceList(int capacity)
		{
		}

		[Token(Token = "0x60020F4")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60020F5")]
		public void Remove(T item)
		{
		}

		[Token(Token = "0x60020F6")]
		public bool Contains(T item, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F7")]
		public void Clear()
		{
		}

		[Token(Token = "0x60020F8")]
		public List<T> ToReferenceList()
		{
			return null;
		}

		[Token(Token = "0x60020F9")]
		public static implicit operator WeakReferenceList<T>(List<T> value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000655")]
	public class WeakReferenceTable<TKey, TValue> where TKey : class where TValue : IDisposable
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<WeakReference<TKey>> keys;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<TValue> values;

		[Token(Token = "0x1700052E")]
		public int Count
		{
			[Token(Token = "0x60020FA")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020FB")]
		public WeakReferenceTable()
		{
		}

		[Token(Token = "0x60020FC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60020FD")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x60020FE")]
		public void Remove(TKey key)
		{
		}

		[Token(Token = "0x60020FF")]
		public bool TryGetValueWithRefCheck(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002100")]
		public void RemoveMissingReferences()
		{
		}

		[Token(Token = "0x6002101")]
		private void CheckCount()
		{
		}
	}
}
namespace ParadoxNotion.Services
{
	[Token(Token = "0x2000656")]
	public class EventRouter : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, IDragHandler, IScrollHandler, IUpdateSelectedHandler, ISelectHandler, IDeselectHandler, IMoveHandler, ISubmitHandler, IDropHandler
	{
		[Token(Token = "0x2000657")]
		public delegate void EventDelegate(EventData msg);

		[Token(Token = "0x2000658")]
		public delegate void EventDelegate<T>(EventData<T> msg);

		[Token(Token = "0x2000659")]
		public delegate void CustomEventDelegate(string name, IEventData data);

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventRouterAnimatorMove _routerAnimatorMove;

		[Token(Token = "0x1400002C")]
		public event EventDelegate<PointerEventData> onPointerEnter
		{
			[Token(Token = "0x6002102")]
			[Address(RVA = "0x28C0490", Offset = "0x28C0490", VA = "0x28C0490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B704", Offset = "0xE2B704")]
			add
			{
			}
			[Token(Token = "0x6002103")]
			[Address(RVA = "0x28C0530", Offset = "0x28C0530", VA = "0x28C0530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B714", Offset = "0xE2B714")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event EventDelegate<PointerEventData> onPointerExit
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x28C05D0", Offset = "0x28C05D0", VA = "0x28C05D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B724", Offset = "0xE2B724")]
			add
			{
			}
			[Token(Token = "0x6002105")]
			[Address(RVA = "0x28C0670", Offset = "0x28C0670", VA = "0x28C0670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B734", Offset = "0xE2B734")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event EventDelegate<PointerEventData> onPointerDown
		{
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x28C0710", Offset = "0x28C0710", VA = "0x28C0710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B744", Offset = "0xE2B744")]
			add
			{
			}
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x28C07B0", Offset = "0x28C07B0", VA = "0x28C07B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B754", Offset = "0xE2B754")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event EventDelegate<PointerEventData> onPointerUp
		{
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x28C0850", Offset = "0x28C0850", VA = "0x28C0850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B764", Offset = "0xE2B764")]
			add
			{
			}
			[Token(Token = "0x6002109")]
			[Address(RVA = "0x28C08F0", Offset = "0x28C08F0", VA = "0x28C08F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B774", Offset = "0xE2B774")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event EventDelegate<PointerEventData> onPointerClick
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0x28C0990", Offset = "0x28C0990", VA = "0x28C0990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B784", Offset = "0xE2B784")]
			add
			{
			}
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x28C0A30", Offset = "0x28C0A30", VA = "0x28C0A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B794", Offset = "0xE2B794")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event EventDelegate<PointerEventData> onDrag
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x28C0AD0", Offset = "0x28C0AD0", VA = "0x28C0AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B7A4", Offset = "0xE2B7A4")]
			add
			{
			}
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x28C0B70", Offset = "0x28C0B70", VA = "0x28C0B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B7B4", Offset = "0xE2B7B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event EventDelegate<PointerEventData> onDrop
		{
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x28C0C10", Offset = "0x28C0C10", VA = "0x28C0C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B7C4", Offset = "0xE2B7C4")]
			add
			{
			}
			[Token(Token = "0x600210F")]
			[Address(RVA = "0x28C0CB0", Offset = "0x28C0CB0", VA = "0x28C0CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B7D4", Offset = "0xE2B7D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event EventDelegate<PointerEventData> onScroll
		{
			[Token(Token = "0x6002110")]
			[Address(RVA = "0x28C0D50", Offset = "0x28C0D50", VA = "0x28C0D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B7E4", Offset = "0xE2B7E4")]
			add
			{
			}
			[Token(Token = "0x6002111")]
			[Address(RVA = "0x28C0DF0", Offset = "0x28C0DF0", VA = "0x28C0DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B7F4", Offset = "0xE2B7F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event EventDelegate<BaseEventData> onUpdateSelected
		{
			[Token(Token = "0x6002112")]
			[Address(RVA = "0x28C0E90", Offset = "0x28C0E90", VA = "0x28C0E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B804", Offset = "0xE2B804")]
			add
			{
			}
			[Token(Token = "0x6002113")]
			[Address(RVA = "0x28C0F30", Offset = "0x28C0F30", VA = "0x28C0F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B814", Offset = "0xE2B814")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event EventDelegate<BaseEventData> onSelect
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x28C0FD0", Offset = "0x28C0FD0", VA = "0x28C0FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B824", Offset = "0xE2B824")]
			add
			{
			}
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x28C1070", Offset = "0x28C1070", VA = "0x28C1070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B834", Offset = "0xE2B834")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event EventDelegate<BaseEventData> onDeselect
		{
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x28C1110", Offset = "0x28C1110", VA = "0x28C1110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B844", Offset = "0xE2B844")]
			add
			{
			}
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x28C11B0", Offset = "0x28C11B0", VA = "0x28C11B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B854", Offset = "0xE2B854")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event EventDelegate<AxisEventData> onMove
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x28C1250", Offset = "0x28C1250", VA = "0x28C1250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B864", Offset = "0xE2B864")]
			add
			{
			}
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x28C12F0", Offset = "0x28C12F0", VA = "0x28C12F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B874", Offset = "0xE2B874")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event EventDelegate<BaseEventData> onSubmit
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x28C1390", Offset = "0x28C1390", VA = "0x28C1390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B884", Offset = "0xE2B884")]
			add
			{
			}
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x28C1430", Offset = "0x28C1430", VA = "0x28C1430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B894", Offset = "0xE2B894")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event EventDelegate onMouseDown
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x28C1E90", Offset = "0x28C1E90", VA = "0x28C1E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B8A4", Offset = "0xE2B8A4")]
			add
			{
			}
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x28C1F30", Offset = "0x28C1F30", VA = "0x28C1F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B8B4", Offset = "0xE2B8B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event EventDelegate onMouseDrag
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x28C1FD0", Offset = "0x28C1FD0", VA = "0x28C1FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B8C4", Offset = "0xE2B8C4")]
			add
			{
			}
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x28C2070", Offset = "0x28C2070", VA = "0x28C2070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B8D4", Offset = "0xE2B8D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event EventDelegate onMouseEnter
		{
			[Token(Token = "0x600212D")]
			[Address(RVA = "0x28C2110", Offset = "0x28C2110", VA = "0x28C2110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B8E4", Offset = "0xE2B8E4")]
			add
			{
			}
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x28C21B0", Offset = "0x28C21B0", VA = "0x28C21B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B8F4", Offset = "0xE2B8F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event EventDelegate onMouseExit
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x28C2250", Offset = "0x28C2250", VA = "0x28C2250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B904", Offset = "0xE2B904")]
			add
			{
			}
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x28C22F0", Offset = "0x28C22F0", VA = "0x28C22F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B914", Offset = "0xE2B914")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event EventDelegate onMouseOver
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x28C2390", Offset = "0x28C2390", VA = "0x28C2390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B924", Offset = "0xE2B924")]
			add
			{
			}
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x28C2430", Offset = "0x28C2430", VA = "0x28C2430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B934", Offset = "0xE2B934")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event EventDelegate onMouseUp
		{
			[Token(Token = "0x6002133")]
			[Address(RVA = "0x28C24D0", Offset = "0x28C24D0", VA = "0x28C24D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B944", Offset = "0xE2B944")]
			add
			{
			}
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x28C2570", Offset = "0x28C2570", VA = "0x28C2570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B954", Offset = "0xE2B954")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event EventDelegate onEnable
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x28C2898", Offset = "0x28C2898", VA = "0x28C2898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B964", Offset = "0xE2B964")]
			add
			{
			}
			[Token(Token = "0x600213C")]
			[Address(RVA = "0x28C2938", Offset = "0x28C2938", VA = "0x28C2938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B974", Offset = "0xE2B974")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event EventDelegate onDisable
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0x28C29D8", Offset = "0x28C29D8", VA = "0x28C29D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B984", Offset = "0xE2B984")]
			add
			{
			}
			[Token(Token = "0x600213E")]
			[Address(RVA = "0x28C2A78", Offset = "0x28C2A78", VA = "0x28C2A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B994", Offset = "0xE2B994")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event EventDelegate onDestroy
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0x28C2B18", Offset = "0x28C2B18", VA = "0x28C2B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B9A4", Offset = "0xE2B9A4")]
			add
			{
			}
			[Token(Token = "0x6002140")]
			[Address(RVA = "0x28C2BB8", Offset = "0x28C2BB8", VA = "0x28C2BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B9B4", Offset = "0xE2B9B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event EventDelegate onTransformChildrenChanged
		{
			[Token(Token = "0x6002144")]
			[Address(RVA = "0x28C2D9C", Offset = "0x28C2D9C", VA = "0x28C2D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B9C4", Offset = "0xE2B9C4")]
			add
			{
			}
			[Token(Token = "0x6002145")]
			[Address(RVA = "0x28C2E3C", Offset = "0x28C2E3C", VA = "0x28C2E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B9D4", Offset = "0xE2B9D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event EventDelegate onTransformParentChanged
		{
			[Token(Token = "0x6002146")]
			[Address(RVA = "0x28C2EDC", Offset = "0x28C2EDC", VA = "0x28C2EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B9E4", Offset = "0xE2B9E4")]
			add
			{
			}
			[Token(Token = "0x6002147")]
			[Address(RVA = "0x28C2F7C", Offset = "0x28C2F7C", VA = "0x28C2F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B9F4", Offset = "0xE2B9F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event EventDelegate<int> onAnimatorIK
		{
			[Token(Token = "0x600214A")]
			[Address(RVA = "0x28C30F4", Offset = "0x28C30F4", VA = "0x28C30F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA04", Offset = "0xE2BA04")]
			add
			{
			}
			[Token(Token = "0x600214B")]
			[Address(RVA = "0x28C3194", Offset = "0x28C3194", VA = "0x28C3194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA14", Offset = "0xE2BA14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event EventDelegate onAnimatorMove
		{
			[Token(Token = "0x600214C")]
			[Address(RVA = "0x28C3234", Offset = "0x28C3234", VA = "0x28C3234")]
			add
			{
			}
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x28C33A0", Offset = "0x28C33A0", VA = "0x28C33A0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event EventDelegate onBecameInvisible
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0x28C35A0", Offset = "0x28C35A0", VA = "0x28C35A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA24", Offset = "0xE2BA24")]
			add
			{
			}
			[Token(Token = "0x6002150")]
			[Address(RVA = "0x28C3640", Offset = "0x28C3640", VA = "0x28C3640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA34", Offset = "0xE2BA34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event EventDelegate onBecameVisible
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0x28C36E0", Offset = "0x28C36E0", VA = "0x28C36E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA44", Offset = "0xE2BA44")]
			add
			{
			}
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x28C3780", Offset = "0x28C3780", VA = "0x28C3780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA54", Offset = "0xE2BA54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event EventDelegate<ControllerColliderHit> onControllerColliderHit
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0x28C38F8", Offset = "0x28C38F8", VA = "0x28C38F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA64", Offset = "0xE2BA64")]
			add
			{
			}
			[Token(Token = "0x6002156")]
			[Address(RVA = "0x28C3998", Offset = "0x28C3998", VA = "0x28C3998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA74", Offset = "0xE2BA74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event EventDelegate<GameObject> onParticleCollision
		{
			[Token(Token = "0x6002157")]
			[Address(RVA = "0x28C3A38", Offset = "0x28C3A38", VA = "0x28C3A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA84", Offset = "0xE2BA84")]
			add
			{
			}
			[Token(Token = "0x6002158")]
			[Address(RVA = "0x28C3ADC", Offset = "0x28C3ADC", VA = "0x28C3ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BA94", Offset = "0xE2BA94")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event EventDelegate<Collision> onCollisionEnter
		{
			[Token(Token = "0x600215B")]
			[Address(RVA = "0x28C3D00", Offset = "0x28C3D00", VA = "0x28C3D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BAA4", Offset = "0xE2BAA4")]
			add
			{
			}
			[Token(Token = "0x600215C")]
			[Address(RVA = "0x28C3DA4", Offset = "0x28C3DA4", VA = "0x28C3DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BAB4", Offset = "0xE2BAB4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event EventDelegate<Collision> onCollisionExit
		{
			[Token(Token = "0x600215D")]
			[Address(RVA = "0x28C3E48", Offset = "0x28C3E48", VA = "0x28C3E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BAC4", Offset = "0xE2BAC4")]
			add
			{
			}
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x28C3EEC", Offset = "0x28C3EEC", VA = "0x28C3EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BAD4", Offset = "0xE2BAD4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event EventDelegate<Collision> onCollisionStay
		{
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x28C3F90", Offset = "0x28C3F90", VA = "0x28C3F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BAE4", Offset = "0xE2BAE4")]
			add
			{
			}
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x28C4034", Offset = "0x28C4034", VA = "0x28C4034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BAF4", Offset = "0xE2BAF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event EventDelegate<Collision2D> onCollisionEnter2D
		{
			[Token(Token = "0x6002164")]
			[Address(RVA = "0x28C4318", Offset = "0x28C4318", VA = "0x28C4318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB04", Offset = "0xE2BB04")]
			add
			{
			}
			[Token(Token = "0x6002165")]
			[Address(RVA = "0x28C43BC", Offset = "0x28C43BC", VA = "0x28C43BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB14", Offset = "0xE2BB14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event EventDelegate<Collision2D> onCollisionExit2D
		{
			[Token(Token = "0x6002166")]
			[Address(RVA = "0x28C4460", Offset = "0x28C4460", VA = "0x28C4460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB24", Offset = "0xE2BB24")]
			add
			{
			}
			[Token(Token = "0x6002167")]
			[Address(RVA = "0x28C4504", Offset = "0x28C4504", VA = "0x28C4504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB34", Offset = "0xE2BB34")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event EventDelegate<Collision2D> onCollisionStay2D
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0x28C45A8", Offset = "0x28C45A8", VA = "0x28C45A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB44", Offset = "0xE2BB44")]
			add
			{
			}
			[Token(Token = "0x6002169")]
			[Address(RVA = "0x28C464C", Offset = "0x28C464C", VA = "0x28C464C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB54", Offset = "0xE2BB54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event EventDelegate<Collider> onTriggerEnter
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x28C4930", Offset = "0x28C4930", VA = "0x28C4930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB64", Offset = "0xE2BB64")]
			add
			{
			}
			[Token(Token = "0x600216E")]
			[Address(RVA = "0x28C49D4", Offset = "0x28C49D4", VA = "0x28C49D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB74", Offset = "0xE2BB74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event EventDelegate<Collider> onTriggerExit
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x28C4A78", Offset = "0x28C4A78", VA = "0x28C4A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB84", Offset = "0xE2BB84")]
			add
			{
			}
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x28C4B1C", Offset = "0x28C4B1C", VA = "0x28C4B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BB94", Offset = "0xE2BB94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event EventDelegate<Collider> onTriggerStay
		{
			[Token(Token = "0x6002171")]
			[Address(RVA = "0x28C4BC0", Offset = "0x28C4BC0", VA = "0x28C4BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BBA4", Offset = "0xE2BBA4")]
			add
			{
			}
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x28C4C64", Offset = "0x28C4C64", VA = "0x28C4C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BBB4", Offset = "0xE2BBB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event EventDelegate<Collider2D> onTriggerEnter2D
		{
			[Token(Token = "0x6002176")]
			[Address(RVA = "0x28C4F48", Offset = "0x28C4F48", VA = "0x28C4F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BBC4", Offset = "0xE2BBC4")]
			add
			{
			}
			[Token(Token = "0x6002177")]
			[Address(RVA = "0x28C4FEC", Offset = "0x28C4FEC", VA = "0x28C4FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BBD4", Offset = "0xE2BBD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event EventDelegate<Collider2D> onTriggerExit2D
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0x28C5090", Offset = "0x28C5090", VA = "0x28C5090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BBE4", Offset = "0xE2BBE4")]
			add
			{
			}
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x28C5134", Offset = "0x28C5134", VA = "0x28C5134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BBF4", Offset = "0xE2BBF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event EventDelegate<Collider2D> onTriggerStay2D
		{
			[Token(Token = "0x600217A")]
			[Address(RVA = "0x28C51D8", Offset = "0x28C51D8", VA = "0x28C51D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC04", Offset = "0xE2BC04")]
			add
			{
			}
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x28C527C", Offset = "0x28C527C", VA = "0x28C527C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC14", Offset = "0xE2BC14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action<RenderTexture, RenderTexture> onRenderImage
		{
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x28C5560", Offset = "0x28C5560", VA = "0x28C5560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC24", Offset = "0xE2BC24")]
			add
			{
			}
			[Token(Token = "0x6002180")]
			[Address(RVA = "0x28C5604", Offset = "0x28C5604", VA = "0x28C5604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC34", Offset = "0xE2BC34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event EventDelegate onDrawGizmos
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x28C5720", Offset = "0x28C5720", VA = "0x28C5720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC44", Offset = "0xE2BC44")]
			add
			{
			}
			[Token(Token = "0x6002183")]
			[Address(RVA = "0x28C57C4", Offset = "0x28C57C4", VA = "0x28C57C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC54", Offset = "0xE2BC54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event CustomEventDelegate onCustomEvent
		{
			[Token(Token = "0x6002185")]
			[Address(RVA = "0x28C58D4", Offset = "0x28C58D4", VA = "0x28C58D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC64", Offset = "0xE2BC64")]
			add
			{
			}
			[Token(Token = "0x6002186")]
			[Address(RVA = "0x28C5978", Offset = "0x28C5978", VA = "0x28C5978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC74", Offset = "0xE2BC74")]
			remove
			{
			}
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x28C14D0", Offset = "0x28C14D0", VA = "0x28C14D0", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x28C1590", Offset = "0x28C1590", VA = "0x28C1590", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x28C1650", Offset = "0x28C1650", VA = "0x28C1650", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x28C1710", Offset = "0x28C1710", VA = "0x28C1710", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x28C17D0", Offset = "0x28C17D0", VA = "0x28C17D0", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x28C1890", Offset = "0x28C1890", VA = "0x28C1890", Slot = "9")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x28C1950", Offset = "0x28C1950", VA = "0x28C1950", Slot = "16")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x28C1A10", Offset = "0x28C1A10", VA = "0x28C1A10", Slot = "10")]
		private void UnityEngine.EventSystems.IScrollHandler.OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x28C1AD0", Offset = "0x28C1AD0", VA = "0x28C1AD0", Slot = "11")]
		private void UnityEngine.EventSystems.IUpdateSelectedHandler.OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x28C1B90", Offset = "0x28C1B90", VA = "0x28C1B90", Slot = "12")]
		private void UnityEngine.EventSystems.ISelectHandler.OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x28C1C50", Offset = "0x28C1C50", VA = "0x28C1C50", Slot = "13")]
		private void UnityEngine.EventSystems.IDeselectHandler.OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x28C1D10", Offset = "0x28C1D10", VA = "0x28C1D10", Slot = "14")]
		private void UnityEngine.EventSystems.IMoveHandler.OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x28C1DD0", Offset = "0x28C1DD0", VA = "0x28C1DD0", Slot = "15")]
		private void UnityEngine.EventSystems.ISubmitHandler.OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x28C2610", Offset = "0x28C2610", VA = "0x28C2610")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x28C267C", Offset = "0x28C267C", VA = "0x28C267C")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x28C26E8", Offset = "0x28C26E8", VA = "0x28C26E8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x28C2754", Offset = "0x28C2754", VA = "0x28C2754")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x28C27C0", Offset = "0x28C27C0", VA = "0x28C27C0")]
		private void OnMouseOver()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x28C282C", Offset = "0x28C282C", VA = "0x28C282C")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x28C2C58", Offset = "0x28C2C58", VA = "0x28C2C58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x28C2CC4", Offset = "0x28C2CC4", VA = "0x28C2CC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x28C2D30", Offset = "0x28C2D30", VA = "0x28C2D30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x28C301C", Offset = "0x28C301C", VA = "0x28C301C")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x28C3088", Offset = "0x28C3088", VA = "0x28C3088")]
		private void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x28C34E0", Offset = "0x28C34E0", VA = "0x28C34E0")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x28C3820", Offset = "0x28C3820", VA = "0x28C3820")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x28C388C", Offset = "0x28C388C", VA = "0x28C388C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x28C3B80", Offset = "0x28C3B80", VA = "0x28C3B80")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x28C3C40", Offset = "0x28C3C40", VA = "0x28C3C40")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x28C40D8", Offset = "0x28C40D8", VA = "0x28C40D8")]
		private void OnCollisionEnter(Collision collisionInfo)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x28C4198", Offset = "0x28C4198", VA = "0x28C4198")]
		private void OnCollisionExit(Collision collisionInfo)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x28C4258", Offset = "0x28C4258", VA = "0x28C4258")]
		private void OnCollisionStay(Collision collisionInfo)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x28C46F0", Offset = "0x28C46F0", VA = "0x28C46F0")]
		private void OnCollisionEnter2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x28C47B0", Offset = "0x28C47B0", VA = "0x28C47B0")]
		private void OnCollisionExit2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x28C4870", Offset = "0x28C4870", VA = "0x28C4870")]
		private void OnCollisionStay2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x28C4D08", Offset = "0x28C4D08", VA = "0x28C4D08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x28C4DC8", Offset = "0x28C4DC8", VA = "0x28C4DC8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x28C4E88", Offset = "0x28C4E88", VA = "0x28C4E88")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x28C5320", Offset = "0x28C5320", VA = "0x28C5320")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x28C53E0", Offset = "0x28C53E0", VA = "0x28C53E0")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x28C54A0", Offset = "0x28C54A0", VA = "0x28C54A0")]
		private void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x28C56A8", Offset = "0x28C56A8", VA = "0x28C56A8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x28C5868", Offset = "0x28C5868", VA = "0x28C5868")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x28C5A1C", Offset = "0x28C5A1C", VA = "0x28C5A1C")]
		public void InvokeCustomEvent(string name, object value, object sender)
		{
		}

		[Token(Token = "0x6002188")]
		public void InvokeCustomEvent<T>(string name, T value, object sender)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x28C5AE4", Offset = "0x28C5AE4", VA = "0x28C5AE4")]
		public EventRouter()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public class EventRouterAnimatorMove : MonoBehaviour
	{
		[Token(Token = "0x14000059")]
		public event EventRouter.EventDelegate onAnimatorMove
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0x28C3300", Offset = "0x28C3300", VA = "0x28C3300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC84", Offset = "0xE2BC84")]
			add
			{
			}
			[Token(Token = "0x6002197")]
			[Address(RVA = "0x28C3440", Offset = "0x28C3440", VA = "0x28C3440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BC94", Offset = "0xE2BC94")]
			remove
			{
			}
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x28C5AEC", Offset = "0x28C5AEC", VA = "0x28C5AEC")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x28C5B58", Offset = "0x28C5B58", VA = "0x28C5B58")]
		public EventRouterAnimatorMove()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public static class Logger
	{
		[Token(Token = "0x200065C")]
		public struct Message
		{
			[Token(Token = "0x40016FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private WeakReference<object> _contextRef;

			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LogType type;

			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string text;

			[Token(Token = "0x40016FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tag;

			[Token(Token = "0x1700052F")]
			public object context
			{
				[Token(Token = "0x60021A3")]
				[Address(RVA = "0x2EE15A4", Offset = "0x2EE15A4", VA = "0x2EE15A4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021A4")]
				[Address(RVA = "0x2EE160C", Offset = "0x2EE160C", VA = "0x2EE160C")]
				set
				{
				}
			}

			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x2EE1694", Offset = "0x2EE1694", VA = "0x2EE1694")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200065D")]
		public delegate bool LogHandler(Message message);

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LogHandler> subscribers;

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x2CF8F6C", Offset = "0x2CF8F6C", VA = "0x2CF8F6C")]
		public static void AddListener(LogHandler callback)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x2CF8FF8", Offset = "0x2CF8FF8", VA = "0x2CF8FF8")]
		public static void RemoveListener(LogHandler callback)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x2CF9084", Offset = "0x2CF9084", VA = "0x2CF9084")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2BCA4", Offset = "0xE2BCA4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2BCA4", Offset = "0xE2BCA4")]
		public static void Log(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x2CF9578", Offset = "0x2CF9578", VA = "0x2CF9578")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2BD04", Offset = "0xE2BD04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2BD04", Offset = "0xE2BD04")]
		public static void LogWarning(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x2CF95F4", Offset = "0x2CF95F4", VA = "0x2CF95F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2BD64", Offset = "0xE2BD64")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2BD64", Offset = "0xE2BD64")]
		public static void LogError(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x2CF9670", Offset = "0x2CF9670", VA = "0x2CF9670")]
		public static void LogException(Exception exception, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x2CF9100", Offset = "0x2CF9100", VA = "0x2CF9100")]
		private static void Internal_Log(LogType type, object message, string tag, object context)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x2CF96EC", Offset = "0x2CF96EC", VA = "0x2CF96EC")]
		private static void ForwardToUnity(LogType type, object message, string tag, object context)
		{
		}
	}
	[Token(Token = "0x200065E")]
	public class MonoManager : MonoBehaviour
	{
		[Token(Token = "0x200065F")]
		public enum UpdateMode
		{
			[Token(Token = "0x4001709")]
			NormalUpdate,
			[Token(Token = "0x400170A")]
			LateUpdate,
			[Token(Token = "0x400170B")]
			FixedUpdate
		}

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuiting;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MonoManager _current;

		[Token(Token = "0x17000530")]
		public static MonoManager current
		{
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x2D0C8B4", Offset = "0x2D0C8B4", VA = "0x2D0C8B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005A")]
		public event Action onUpdate
		{
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x2D0C134", Offset = "0x2D0C134", VA = "0x2D0C134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BDC4", Offset = "0xE2BDC4")]
			add
			{
			}
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x2D0C1D4", Offset = "0x2D0C1D4", VA = "0x2D0C1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BDD4", Offset = "0xE2BDD4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event Action onLateUpdate
		{
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x2D0C274", Offset = "0x2D0C274", VA = "0x2D0C274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BDE4", Offset = "0xE2BDE4")]
			add
			{
			}
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x2D0C314", Offset = "0x2D0C314", VA = "0x2D0C314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BDF4", Offset = "0xE2BDF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event Action onFixedUpdate
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x2D0C3B4", Offset = "0x2D0C3B4", VA = "0x2D0C3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE04", Offset = "0xE2BE04")]
			add
			{
			}
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x2D0C454", Offset = "0x2D0C454", VA = "0x2D0C454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE14", Offset = "0xE2BE14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event Action onApplicationQuit
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x2D0C4F4", Offset = "0x2D0C4F4", VA = "0x2D0C4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE24", Offset = "0xE2BE24")]
			add
			{
			}
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x2D0C594", Offset = "0x2D0C594", VA = "0x2D0C594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE34", Offset = "0xE2BE34")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action<bool> onApplicationPause
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x2D0C634", Offset = "0x2D0C634", VA = "0x2D0C634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE44", Offset = "0xE2BE44")]
			add
			{
			}
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x2D0C6D4", Offset = "0x2D0C6D4", VA = "0x2D0C6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE54", Offset = "0xE2BE54")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action onGUI
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x2D0C774", Offset = "0x2D0C774", VA = "0x2D0C774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE64", Offset = "0xE2BE64")]
			add
			{
			}
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x2D0C814", Offset = "0x2D0C814", VA = "0x2D0C814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE74", Offset = "0xE2BE74")]
			remove
			{
			}
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x2D0CAC0", Offset = "0x2D0CAC0", VA = "0x2D0CAC0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE2BE84", Offset = "0xE2BE84")]
		private static void Purge()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x2D0CB0C", Offset = "0x2D0CB0C", VA = "0x2D0CB0C")]
		public static void Create()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x2D0CB64", Offset = "0x2D0CB64", VA = "0x2D0CB64")]
		public void AddUpdateCall(UpdateMode mode, Action call)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x2D0CB94", Offset = "0x2D0CB94", VA = "0x2D0CB94")]
		public void RemoveUpdateCall(UpdateMode mode, Action call)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x2D0CBC4", Offset = "0x2D0CBC4", VA = "0x2D0CBC4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x2D0CD20", Offset = "0x2D0CD20", VA = "0x2D0CD20")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x2D0CD8C", Offset = "0x2D0CD8C", VA = "0x2D0CD8C")]
		protected void OnApplicationPause(bool isPause)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x2D0CDFC", Offset = "0x2D0CDFC", VA = "0x2D0CDFC")]
		protected void Update()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x2D0CE10", Offset = "0x2D0CE10", VA = "0x2D0CE10")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x2D0CE24", Offset = "0x2D0CE24", VA = "0x2D0CE24")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x2D0CE38", Offset = "0x2D0CE38", VA = "0x2D0CE38")]
		public MonoManager()
		{
		}
	}
	[Token(Token = "0x2000660")]
	public static class Threader
	{
		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14BE8", Offset = "0xE14BE8")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action function;

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x3130200", Offset = "0x3130200", VA = "0x3130200")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x3130208", Offset = "0x3130208", VA = "0x3130208")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14BF8", Offset = "0xE14BF8")]
		private sealed class <>c__DisplayClass8_0<T1>
		{
			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> function;

			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x60021D2")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60021D3")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C08", Offset = "0xE14C08")]
		private sealed class <>c__DisplayClass9_0<T1, T2>
		{
			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> function;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x60021D4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60021D5")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C18", Offset = "0xE14C18")]
		private sealed class <>c__DisplayClass10_0<T1, T2, T3>
		{
			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> function;

			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 parameter3;

			[Token(Token = "0x60021D6")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60021D7")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C28", Offset = "0xE14C28")]
		private sealed class <>c__DisplayClass11_0<TResult>
		{
			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TResult> function;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x60021D8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60021D9")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x60021DA")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C38", Offset = "0xE14C38")]
		private sealed class <>c__DisplayClass12_0<TResult, T1>
		{
			[Token(Token = "0x400171A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x400171B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, TResult> function;

			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x60021DB")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60021DC")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x60021DD")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C48", Offset = "0xE14C48")]
		private sealed class <>c__DisplayClass13_0<TResult, T1, T2>
		{
			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, TResult> function;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x60021DE")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60021DF")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x60021E0")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C58", Offset = "0xE14C58")]
		private sealed class <>c__DisplayClass14_0<TResult, T1, T2, T3>
		{
			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, T3, TResult> function;

			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4001726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x4001727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 parameter3;

			[Token(Token = "0x4001728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x60021E1")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60021E2")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x60021E3")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C68", Offset = "0xE14C68")]
		private sealed class <ThreadMonitor>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Thread thread;

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x17000533")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021E7")]
				[Address(RVA = "0x3130310", Offset = "0x3130310", VA = "0x3130310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000534")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021E9")]
				[Address(RVA = "0x3130358", Offset = "0x3130358", VA = "0x3130358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x3130224", Offset = "0x3130224", VA = "0x3130224")]
			[DebuggerHidden]
			public <ThreadMonitor>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x3130250", Offset = "0x3130250", VA = "0x3130250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x3130254", Offset = "0x3130254", VA = "0x3130254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x3130318", Offset = "0x3130318", VA = "0x3130318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE236E8", Offset = "0xE236E8")]
		private static bool <applicationIsPlaying>k__BackingField;

		[Token(Token = "0x17000531")]
		public static bool applicationIsPlaying
		{
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x2592204", Offset = "0x2592204", VA = "0x2592204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BE98", Offset = "0xE2BE98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x2592268", Offset = "0x2592268", VA = "0x2592268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BEA8", Offset = "0xE2BEA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000532")]
		public static bool isMainThread
		{
			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x25922D4", Offset = "0x25922D4", VA = "0x25922D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x259219C", Offset = "0x259219C", VA = "0x259219C")]
		static Threader()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x2592304", Offset = "0x2592304", VA = "0x2592304")]
		public static Thread StartAction(Thread thread, Action function, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60021C7")]
		public static Thread StartAction<T1>(Thread thread, Action<T1> function, T1 parameter1, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60021C8")]
		public static Thread StartAction<T1, T2>(Thread thread, Action<T1, T2> function, T1 parameter1, T2 parameter2, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60021C9")]
		public static Thread StartAction<T1, T2, T3>(Thread thread, Action<T1, T2, T3> function, T1 parameter1, T2 parameter2, T3 parameter3, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60021CA")]
		public static Thread StartFunction<TResult>(Thread thread, Func<TResult> function, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		public static Thread StartFunction<TResult, T1>(Thread thread, Func<T1, TResult> function, T1 parameter1, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60021CC")]
		public static Thread StartFunction<TResult, T1, T2>(Thread thread, Func<T1, T2, TResult> function, T1 parameter1, T2 parameter2, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60021CD")]
		public static Thread StartFunction<TResult, T1, T2, T3>(Thread thread, Func<T1, T2, T3, TResult> function, T1 parameter1, T2 parameter2, T3 parameter3, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x2592450", Offset = "0x2592450", VA = "0x2592450")]
		private static void Begin(Thread thread, Action callback)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x25924F8", Offset = "0x25924F8", VA = "0x25924F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BEB8", Offset = "0xE2BEB8")]
		private static IEnumerator ThreadMonitor(Thread thread, Action callback)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization
{
	[Token(Token = "0x200066A")]
	public class DeserializeFromAttribute : Attribute
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string previousTypeFullName;

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x283B468", Offset = "0x283B468", VA = "0x283B468")]
		public DeserializeFromAttribute(string previousTypeFullName)
		{
		}
	}
	[Token(Token = "0x200066B")]
	public interface IMissingRecoverable
	{
		[Token(Token = "0x17000535")]
		string missingType
		{
			[Token(Token = "0x60021EB")]
			get;
			[Token(Token = "0x60021EC")]
			set;
		}

		[Token(Token = "0x17000536")]
		string recoveryState
		{
			[Token(Token = "0x60021ED")]
			get;
			[Token(Token = "0x60021EE")]
			set;
		}
	}
	[Token(Token = "0x200066C")]
	public interface ISerializedMethodBaseInfo : ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Token(Token = "0x60021EF")]
		MethodBase GetMethodBase();

		[Token(Token = "0x60021F0")]
		bool HasChanged();
	}
	[Token(Token = "0x200066D")]
	public interface ISerializedReflectedInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x60021F1")]
		MemberInfo AsMemberInfo();

		[Token(Token = "0x60021F2")]
		string AsString();
	}
	[Token(Token = "0x200066E")]
	public static class JSONSerializer
	{
		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object serializerLock;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static fsSerializer serializer;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, fsData> dataCache;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x2E3712C", Offset = "0x2E3712C", VA = "0x2E3712C")]
		static JSONSerializer()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x2E371A8", Offset = "0x2E371A8", VA = "0x2E371A8")]
		public static void FlushMem()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x2E372BC", Offset = "0x2E372BC", VA = "0x2E372BC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE2BF68", Offset = "0xE2BF68")]
		private static void __FlushDataCache()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x2E37360", Offset = "0x2E37360", VA = "0x2E37360")]
		public static string Serialize(Type type, object instance, [Optional] List<UnityEngine.Object> references, bool pretyJson = false)
		{
			return null;
		}

		[Token(Token = "0x60021F7")]
		public static T Deserialize<T>(string json, [Optional] List<UnityEngine.Object> references)
		{
			return (T)null;
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x2E37778", Offset = "0x2E37778", VA = "0x2E37778")]
		public static object Deserialize(Type type, string json, [Optional] List<UnityEngine.Object> references)
		{
			return null;
		}

		[Token(Token = "0x60021F9")]
		public static T TryDeserializeOverwrite<T>(T instance, string json, [Optional] List<UnityEngine.Object> references) where T : class
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x2E37C48", Offset = "0x2E37C48", VA = "0x2E37C48")]
		public static object TryDeserializeOverwrite(object instance, string json, [Optional] List<UnityEngine.Object> references)
		{
			return null;
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x2E377F4", Offset = "0x2E377F4", VA = "0x2E377F4")]
		private static object Internal_Deserialize(Type type, string json, List<UnityEngine.Object> references, object instance)
		{
			return null;
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x2E37CE0", Offset = "0x2E37CE0", VA = "0x2E37CE0")]
		public static void SerializeAndExecuteNoCycles(Type type, object instance, Action<object, fsData> call)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x2E37F10", Offset = "0x2E37F10", VA = "0x2E37F10")]
		public static void SerializeAndExecuteNoCycles(Type type, object instance, Action<object> beforeCall, Action<object, fsData> afterCall)
		{
		}

		[Token(Token = "0x60021FE")]
		public static T Clone<T>(T original)
		{
			return (T)null;
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x2E3818C", Offset = "0x2E3818C", VA = "0x2E3818C")]
		public static object Clone(object original)
		{
			return null;
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x2E38268", Offset = "0x2E38268", VA = "0x2E38268")]
		public static void CopySerialized(object source, object target)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x2E38348", Offset = "0x2E38348", VA = "0x2E38348")]
		public static void ShowData(string json, string fileName = "")
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x2E384AC", Offset = "0x2E384AC", VA = "0x2E384AC")]
		public static string PrettifyJson(string json)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200066F")]
	public sealed class SerializationPair
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _json;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UnityEngine.Object> _references;

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x2B484BC", Offset = "0x2B484BC", VA = "0x2B484BC")]
		public SerializationPair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000670")]
	public class SerializedConstructorInfo : ISerializedMethodBaseInfo, ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C78", Offset = "0xE14C78")]
		private sealed class <>c
		{
			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, string> <>9__4_0;

			[Token(Token = "0x600220F")]
			[Address(RVA = "0x312E760", Offset = "0x312E760", VA = "0x312E760")]
			public <>c()
			{
			}

			[Token(Token = "0x6002210")]
			[Address(RVA = "0x312E768", Offset = "0x312E768", VA = "0x312E768")]
			internal string <UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize>b__4_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C88", Offset = "0xE14C88")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type[] parameterTypes;

			[Token(Token = "0x6002211")]
			[Address(RVA = "0x312E7A0", Offset = "0x312E7A0", VA = "0x312E7A0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002212")]
			[Address(RVA = "0x312E7A8", Offset = "0x312E7A8", VA = "0x312E7A8")]
			internal bool <UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize>b__0(ConstructorInfo c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _paramsInfo;

		[NonSerialized]
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConstructorInfo _constructor;

		[NonSerialized]
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasChanged;

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x2B48540", Offset = "0x2B48540", VA = "0x2B48540", Slot = "8")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x2B487C4", Offset = "0x2B487C4", VA = "0x2B487C4", Slot = "9")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x2B48CB0", Offset = "0x2B48CB0", VA = "0x2B48CB0")]
		public SerializedConstructorInfo()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x2B48CB8", Offset = "0x2B48CB8", VA = "0x2B48CB8")]
		public SerializedConstructorInfo(ConstructorInfo constructor)
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x2B48CF0", Offset = "0x2B48CF0", VA = "0x2B48CF0", Slot = "6")]
		public MemberInfo AsMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x2B48CF8", Offset = "0x2B48CF8", VA = "0x2B48CF8", Slot = "4")]
		public MethodBase GetMethodBase()
		{
			return null;
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x2B48D00", Offset = "0x2B48D00", VA = "0x2B48D00", Slot = "5")]
		public bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x2B48D08", Offset = "0x2B48D08", VA = "0x2B48D08", Slot = "7")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x2B48DD8", Offset = "0x2B48DD8", VA = "0x2B48DD8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x2B48DDC", Offset = "0x2B48DDC", VA = "0x2B48DDC")]
		public static implicit operator ConstructorInfo(SerializedConstructorInfo value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000673")]
	public class SerializedEventInfo : ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventInfo _event;

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x2B48DE8", Offset = "0x2B48DE8", VA = "0x2B48DE8", Slot = "6")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x2B48EE0", Offset = "0x2B48EE0", VA = "0x2B48EE0", Slot = "7")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x2B49074", Offset = "0x2B49074", VA = "0x2B49074")]
		public SerializedEventInfo()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x2B4907C", Offset = "0x2B4907C", VA = "0x2B4907C")]
		public SerializedEventInfo(EventInfo info)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x2B490B0", Offset = "0x2B490B0", VA = "0x2B490B0", Slot = "4")]
		public MemberInfo AsMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x2B490B8", Offset = "0x2B490B8", VA = "0x2B490B8", Slot = "5")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x2B49130", Offset = "0x2B49130", VA = "0x2B49130", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x2B49134", Offset = "0x2B49134", VA = "0x2B49134")]
		public static implicit operator EventInfo(SerializedEventInfo value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000674")]
	public class SerializedFieldInfo : ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FieldInfo _field;

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x2B49140", Offset = "0x2B49140", VA = "0x2B49140", Slot = "6")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x2B49238", Offset = "0x2B49238", VA = "0x2B49238", Slot = "7")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x2B493D0", Offset = "0x2B493D0", VA = "0x2B493D0")]
		public SerializedFieldInfo()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x2B493D8", Offset = "0x2B493D8", VA = "0x2B493D8")]
		public SerializedFieldInfo(FieldInfo info)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x2B4940C", Offset = "0x2B4940C", VA = "0x2B4940C", Slot = "4")]
		public MemberInfo AsMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x2B49414", Offset = "0x2B49414", VA = "0x2B49414", Slot = "5")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x2B494A4", Offset = "0x2B494A4", VA = "0x2B494A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x2B494A8", Offset = "0x2B494A8", VA = "0x2B494A8")]
		public static implicit operator FieldInfo(SerializedFieldInfo value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000675")]
	public class SerializedMethodInfo : ISerializedMethodBaseInfo, ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14C98", Offset = "0xE14C98")]
		private sealed class <>c
		{
			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, string> <>9__5_0;

			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__5_1;

			[Token(Token = "0x600222E")]
			[Address(RVA = "0x312E864", Offset = "0x312E864", VA = "0x312E864")]
			public <>c()
			{
			}

			[Token(Token = "0x600222F")]
			[Address(RVA = "0x312E86C", Offset = "0x312E86C", VA = "0x312E86C")]
			internal string <UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize>b__5_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002230")]
			[Address(RVA = "0x312E8A4", Offset = "0x312E8A4", VA = "0x312E8A4")]
			internal string <UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize>b__5_1(Type a)
			{
				return null;
			}
		}

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14CA8", Offset = "0xE14CA8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type[] parameterTypes;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isSerializedGeneric;

			[Token(Token = "0x6002231")]
			[Address(RVA = "0x312E8C8", Offset = "0x312E8C8", VA = "0x312E8C8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002232")]
			[Address(RVA = "0x312E8D0", Offset = "0x312E8D0", VA = "0x312E8D0")]
			internal bool <UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize>b__0(MethodInfo m)
			{
				return default(bool);
			}

			[Token(Token = "0x6002233")]
			[Address(RVA = "0x312E978", Offset = "0x312E978", VA = "0x312E978")]
			internal bool <UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize>b__1(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _paramsInfo;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _genericArgumentsInfo;

		[NonSerialized]
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MethodInfo _method;

		[NonSerialized]
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasChanged;

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x2B494B4", Offset = "0x2B494B4", VA = "0x2B494B4", Slot = "8")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x2B498E0", Offset = "0x2B498E0", VA = "0x2B498E0", Slot = "9")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x2B4A170", Offset = "0x2B4A170", VA = "0x2B4A170")]
		public SerializedMethodInfo()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x2B4A178", Offset = "0x2B4A178", VA = "0x2B4A178")]
		public SerializedMethodInfo(MethodInfo method)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x2B4A1B0", Offset = "0x2B4A1B0", VA = "0x2B4A1B0", Slot = "6")]
		public MemberInfo AsMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x2B4A1B8", Offset = "0x2B4A1B8", VA = "0x2B4A1B8", Slot = "4")]
		public MethodBase GetMethodBase()
		{
			return null;
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x2B4A1C0", Offset = "0x2B4A1C0", VA = "0x2B4A1C0", Slot = "5")]
		public bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x2B4A1C8", Offset = "0x2B4A1C8", VA = "0x2B4A1C8", Slot = "7")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x2B4A298", Offset = "0x2B4A298", VA = "0x2B4A298", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x2B4A29C", Offset = "0x2B4A29C", VA = "0x2B4A29C")]
		public static implicit operator MethodInfo(SerializedMethodInfo value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000678")]
	public class SerializedTypeInfo : ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type _type;

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x2B4A2A8", Offset = "0x2B4A2A8", VA = "0x2B4A2A8", Slot = "6")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x2B4A350", Offset = "0x2B4A350", VA = "0x2B4A350", Slot = "7")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x2B4A3E0", Offset = "0x2B4A3E0", VA = "0x2B4A3E0")]
		public SerializedTypeInfo()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x2B4A3E8", Offset = "0x2B4A3E8", VA = "0x2B4A3E8")]
		public SerializedTypeInfo(Type info)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x2B4A42C", Offset = "0x2B4A42C", VA = "0x2B4A42C", Slot = "4")]
		public MemberInfo AsMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x2B4A434", Offset = "0x2B4A434", VA = "0x2B4A434", Slot = "5")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x2B4A43C", Offset = "0x2B4A43C", VA = "0x2B4A43C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x2B4A444", Offset = "0x2B4A444", VA = "0x2B4A444")]
		public static implicit operator Type(SerializedTypeInfo value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000679")]
	public class SerializedUnityEventInfo : ISerializedReflectedInfo, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MemberInfo _memberInfo;

		[Token(Token = "0x17000537")]
		public bool isStatic
		{
			[Token(Token = "0x600223C")]
			[Address(RVA = "0x2B4A450", Offset = "0x2B4A450", VA = "0x2B4A450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000538")]
		public Type memberType
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0x2B4A588", Offset = "0x2B4A588", VA = "0x2B4A588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x2B4A65C", Offset = "0x2B4A65C", VA = "0x2B4A65C", Slot = "6")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x2B4A754", Offset = "0x2B4A754", VA = "0x2B4A754", Slot = "7")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x2B4AAE0", Offset = "0x2B4AAE0", VA = "0x2B4AAE0")]
		public SerializedUnityEventInfo()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x2B4AAE8", Offset = "0x2B4AAE8", VA = "0x2B4AAE8")]
		public SerializedUnityEventInfo(FieldInfo info)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x2B4AB1C", Offset = "0x2B4AB1C", VA = "0x2B4AB1C")]
		public SerializedUnityEventInfo(PropertyInfo info)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x2B4AB50", Offset = "0x2B4AB50", VA = "0x2B4AB50")]
		public SerializedUnityEventInfo(MemberInfo info)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x2B4AC68", Offset = "0x2B4AC68", VA = "0x2B4AC68", Slot = "4")]
		public MemberInfo AsMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x2B4AC70", Offset = "0x2B4AC70", VA = "0x2B4AC70", Slot = "5")]
		public string AsString()
		{
			return null;
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x2B4AD00", Offset = "0x2B4AD00", VA = "0x2B4AD00", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x2B4AD04", Offset = "0x2B4AD04", VA = "0x2B4AD04")]
		public static implicit operator FieldInfo(SerializedUnityEventInfo value)
		{
			return null;
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x2B4AD88", Offset = "0x2B4AD88", VA = "0x2B4AD88")]
		public static implicit operator PropertyInfo(SerializedUnityEventInfo value)
		{
			return null;
		}
	}
	[Token(Token = "0x200067A")]
	public class fsRecoveryProcessor<TCanProcess, TMissing> : fsObjectProcessor where TMissing : TCanProcess, IMissingRecoverable
	{
		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14CB8", Offset = "0xE14CB8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Dictionary<string, fsData> json;

			[Token(Token = "0x600224C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600224D")]
			internal bool <OnBeforeDeserialize>b__0(KeyValuePair<string, fsData> kvp)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14CC8", Offset = "0xE14CC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<string, fsData>, string> <>9__3_1;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<string, fsData>, fsData> <>9__3_2;

			[Token(Token = "0x600224F")]
			public <>c()
			{
			}

			[Token(Token = "0x6002250")]
			internal string <OnBeforeDeserialize>b__3_1(KeyValuePair<string, fsData> c)
			{
				return null;
			}

			[Token(Token = "0x6002251")]
			internal fsData <OnBeforeDeserialize>b__3_2(KeyValuePair<string, fsData> c)
			{
				return null;
			}
		}

		[Token(Token = "0x400174D")]
		private const string FIELD_NAME_TYPE = "_missingType";

		[Token(Token = "0x400174E")]
		private const string FIELD_NAME_STATE = "_recoveryState";

		[Token(Token = "0x6002249")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		public override void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x600224B")]
		public fsRecoveryProcessor()
		{
		}
	}
	[Token(Token = "0x200067D")]
	public class fsUnityObjectConverter : fsConverter
	{
		[Token(Token = "0x6002252")]
		[Address(RVA = "0x2725A7C", Offset = "0x2725A7C", VA = "0x2725A7C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x2725B3C", Offset = "0x2725B3C", VA = "0x2725B3C", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x2725B44", Offset = "0x2725B44", VA = "0x2725B44", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x2725B4C", Offset = "0x2725B4C", VA = "0x2725B4C", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x2725D50", Offset = "0x2725D50", VA = "0x2725D50", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x2725F20", Offset = "0x2725F20", VA = "0x2725F20", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x2725F28", Offset = "0x2725F28", VA = "0x2725F28")]
		public fsUnityObjectConverter()
		{
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer
{
	[Token(Token = "0x200067E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14CD8", Offset = "0xE14CD8")]
	public sealed class fsForwardAttribute : Attribute
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MemberName;

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x2D1BA18", Offset = "0x2D1BA18", VA = "0x2D1BA18")]
		public fsForwardAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x200067F")]
	public interface IMigratable
	{
	}
	[Token(Token = "0x2000680")]
	public interface IMigratable<T> : IMigratable
	{
		[Token(Token = "0x600225A")]
		void Migrate(T model);
	}
	[Token(Token = "0x2000681")]
	public interface ISerializationCollector : ISerializationCollectable
	{
		[Token(Token = "0x600225B")]
		void OnPush(ISerializationCollector parent);

		[Token(Token = "0x600225C")]
		void OnCollect(ISerializationCollectable child, int depth);

		[Token(Token = "0x600225D")]
		void OnPop(ISerializationCollector parent);
	}
	[Token(Token = "0x2000682")]
	public interface ISerializationCollectable
	{
	}
	[Token(Token = "0x2000683")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14CEC", Offset = "0xE14CEC")]
	public sealed class fsWriteOnlyAttribute : Attribute
	{
		[Token(Token = "0x600225E")]
		[Address(RVA = "0x2725F30", Offset = "0x2725F30", VA = "0x2725F30")]
		public fsWriteOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D00", Offset = "0xE14D00")]
	public sealed class fsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x600225F")]
		[Address(RVA = "0x2D2304C", Offset = "0x2D2304C", VA = "0x2D2304C")]
		public fsReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D14", Offset = "0xE14D14")]
	public sealed class fsIgnoreAttribute : Attribute
	{
		[Token(Token = "0x6002260")]
		[Address(RVA = "0x2D1C38C", Offset = "0x2D1C38C", VA = "0x2D1C38C")]
		public fsIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x2000686")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D28", Offset = "0xE14D28")]
	public sealed class fsIgnoreInBuildAttribute : Attribute
	{
		[Token(Token = "0x6002261")]
		[Address(RVA = "0x2D1C394", Offset = "0x2D1C394", VA = "0x2D1C394")]
		public fsIgnoreInBuildAttribute()
		{
		}
	}
	[Token(Token = "0x2000687")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D3C", Offset = "0xE14D3C")]
	public sealed class fsSerializeAsAttribute : Attribute
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x2D23FF0", Offset = "0x2D23FF0", VA = "0x2D23FF0")]
		public fsSerializeAsAttribute()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x2D23FF8", Offset = "0x2D23FF8", VA = "0x2D23FF8")]
		public fsSerializeAsAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D50", Offset = "0xE14D50")]
	public class fsMigrateToAttribute : Attribute
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type targetType;

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x2D218C4", Offset = "0x2D218C4", VA = "0x2D218C4")]
		public fsMigrateToAttribute(Type targetType)
		{
		}
	}
	[Token(Token = "0x2000689")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D64", Offset = "0xE14D64")]
	public class fsMigrateVersionsAttribute : Attribute
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type[] previousTypes;

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x2D218F8", Offset = "0x2D218F8", VA = "0x2D218F8")]
		public fsMigrateVersionsAttribute(params Type[] previousTypes)
		{
		}
	}
	[Token(Token = "0x200068A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D78", Offset = "0xE14D78")]
	public sealed class fsSerializeAsReference : Attribute
	{
		[Token(Token = "0x6002266")]
		[Address(RVA = "0x2D2402C", Offset = "0x2D2402C", VA = "0x2D2402C")]
		public fsSerializeAsReference()
		{
		}
	}
	[Token(Token = "0x200068B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14D8C", Offset = "0xE14D8C")]
	public sealed class fsDeserializeOverwrite : Attribute
	{
		[Token(Token = "0x6002267")]
		[Address(RVA = "0x2D19BAC", Offset = "0x2D19BAC", VA = "0x2D19BAC")]
		public fsDeserializeOverwrite()
		{
		}
	}
	[Token(Token = "0x200068C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14DA0", Offset = "0xE14DA0")]
	public class fsUninitialized : Attribute
	{
		[Token(Token = "0x6002268")]
		[Address(RVA = "0x2725A74", Offset = "0x2725A74", VA = "0x2725A74")]
		public fsUninitialized()
		{
		}
	}
	[Token(Token = "0x200068D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14DB4", Offset = "0xE14DB4")]
	public sealed class fsAutoInstance : Attribute
	{
		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool makeInstance;

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x2D16A00", Offset = "0x2D16A00", VA = "0x2D16A00")]
		public fsAutoInstance(bool makeInstance = true)
		{
		}
	}
	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14DC8", Offset = "0xE14DC8")]
	public sealed class fsObjectAttribute : Attribute
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Converter;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Processor;

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x2D2192C", Offset = "0x2D2192C", VA = "0x2D2192C")]
		public fsObjectAttribute()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public abstract class fsBaseConverter
	{
		[Serializable]
		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14DDC", Offset = "0xE14DDC")]
		private sealed class <>c
		{
			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<fsDataType, string> <>9__6_0;

			[Token(Token = "0x6002278")]
			[Address(RVA = "0x31367F0", Offset = "0x31367F0", VA = "0x31367F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0x31367F8", Offset = "0x31367F8", VA = "0x31367F8")]
			internal string <FailExpectedType>b__6_0(fsDataType t)
			{
				return null;
			}
		}

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public fsSerializer Serializer;

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x2D1757C", Offset = "0x2D1757C", VA = "0x2D1757C", Slot = "4")]
		public virtual object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x2D177AC", Offset = "0x2D177AC", VA = "0x2D177AC", Slot = "5")]
		public virtual bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x2D17878", Offset = "0x2D17878", VA = "0x2D17878", Slot = "6")]
		public virtual bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600226E")]
		public abstract fsResult TrySerialize(object instance, out fsData serialized, Type storageType);

		[Token(Token = "0x600226F")]
		public abstract fsResult TryDeserialize(fsData data, ref object instance, Type storageType);

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x2D178A4", Offset = "0x2D178A4", VA = "0x2D178A4")]
		protected fsResult FailExpectedType(fsData data, params fsDataType[] types)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x2D163FC", Offset = "0x2D163FC", VA = "0x2D163FC")]
		protected fsResult CheckType(fsData data, fsDataType type)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x2D17F6C", Offset = "0x2D17F6C", VA = "0x2D17F6C")]
		protected fsResult CheckKey(fsData data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x2D17FB8", Offset = "0x2D17FB8", VA = "0x2D17FB8")]
		protected fsResult CheckKey(Dictionary<string, fsData> data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002274")]
		protected fsResult SerializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002275")]
		protected fsResult DeserializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, out T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x2D1825C", Offset = "0x2D1825C", VA = "0x2D1825C")]
		protected fsBaseConverter()
		{
		}
	}
	[Token(Token = "0x2000691")]
	public abstract class fsConverter : fsBaseConverter
	{
		[Token(Token = "0x600227A")]
		public abstract bool CanProcess(Type type);

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x2D169F8", Offset = "0x2D169F8", VA = "0x2D169F8")]
		protected fsConverter()
		{
		}
	}
	[Token(Token = "0x2000692")]
	public class fsCyclicReferenceManager
	{
		[Token(Token = "0x2000693")]
		private class ObjectReferenceEqualityComparator : IEqualityComparer<object>
		{
			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IEqualityComparer<object> Instance;

			[Token(Token = "0x6002285")]
			[Address(RVA = "0x3136878", Offset = "0x3136878", VA = "0x3136878", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Object>.Equals(object x, object y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0x3136884", Offset = "0x3136884", VA = "0x3136884", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0x3136890", Offset = "0x3136890", VA = "0x3136890")]
			public ObjectReferenceEqualityComparator()
			{
			}
		}

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<object, int> _objectIds;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _nextId;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, object> _marked;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _depth;

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x2D18264", Offset = "0x2D18264", VA = "0x2D18264")]
		public fsCyclicReferenceManager()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x2D18378", Offset = "0x2D18378", VA = "0x2D18378")]
		public void Clear()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x2D183F8", Offset = "0x2D183F8", VA = "0x2D183F8")]
		public bool Enter()
		{
			return default(bool);
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x2D18414", Offset = "0x2D18414", VA = "0x2D18414")]
		public bool Exit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x2D18500", Offset = "0x2D18500", VA = "0x2D18500")]
		public object GetReferenceObject(int id)
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x2D185FC", Offset = "0x2D185FC", VA = "0x2D185FC")]
		public void AddReferenceWithId(int id, object reference)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x2D18668", Offset = "0x2D18668", VA = "0x2D18668")]
		public int GetReferenceId(object item)
		{
			return default(int);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x2D18718", Offset = "0x2D18718", VA = "0x2D18718")]
		public bool IsReference(object item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x2D1878C", Offset = "0x2D1878C", VA = "0x2D1878C")]
		public void MarkSerialized(object item)
		{
		}
	}
	[Token(Token = "0x2000694")]
	public enum fsDataType
	{
		[Token(Token = "0x4001763")]
		Array,
		[Token(Token = "0x4001764")]
		Object,
		[Token(Token = "0x4001765")]
		Double,
		[Token(Token = "0x4001766")]
		Int64,
		[Token(Token = "0x4001767")]
		Boolean,
		[Token(Token = "0x4001768")]
		String,
		[Token(Token = "0x4001769")]
		Null
	}
	[Token(Token = "0x2000695")]
	public sealed class fsData
	{
		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _value;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly fsData True;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly fsData False;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly fsData Null;

		[Token(Token = "0x17000539")]
		public fsDataType Type
		{
			[Token(Token = "0x6002289")]
			[Address(RVA = "0x2D17D04", Offset = "0x2D17D04", VA = "0x2D17D04")]
			get
			{
				return default(fsDataType);
			}
		}

		[Token(Token = "0x1700053A")]
		public bool IsNull
		{
			[Token(Token = "0x6002296")]
			[Address(RVA = "0x2D18EE4", Offset = "0x2D18EE4", VA = "0x2D18EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700053B")]
		public bool IsDouble
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0x2D18EF4", Offset = "0x2D18EF4", VA = "0x2D18EF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700053C")]
		public bool IsInt64
		{
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x2D18F58", Offset = "0x2D18F58", VA = "0x2D18F58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700053D")]
		public bool IsBool
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x2D18FBC", Offset = "0x2D18FBC", VA = "0x2D18FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700053E")]
		public bool IsString
		{
			[Token(Token = "0x600229A")]
			[Address(RVA = "0x2D19020", Offset = "0x2D19020", VA = "0x2D19020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700053F")]
		public bool IsDictionary
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0x2D16D14", Offset = "0x2D16D14", VA = "0x2D16D14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000540")]
		public bool IsList
		{
			[Token(Token = "0x600229C")]
			[Address(RVA = "0x2D19084", Offset = "0x2D19084", VA = "0x2D19084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000541")]
		public double AsDouble
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0x2D19104", Offset = "0x2D19104", VA = "0x2D19104")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000542")]
		public long AsInt64
		{
			[Token(Token = "0x600229E")]
			[Address(RVA = "0x2D19150", Offset = "0x2D19150", VA = "0x2D19150")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000543")]
		public bool AsBool
		{
			[Token(Token = "0x600229F")]
			[Address(RVA = "0x2D1919C", Offset = "0x2D1919C", VA = "0x2D1919C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000544")]
		public string AsString
		{
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x2D191E8", Offset = "0x2D191E8", VA = "0x2D191E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000545")]
		public Dictionary<string, fsData> AsDictionary
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x2D16D94", Offset = "0x2D16D94", VA = "0x2D16D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000546")]
		public List<fsData> AsList
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x2D16058", Offset = "0x2D16058", VA = "0x2D16058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x2D188CC", Offset = "0x2D188CC", VA = "0x2D188CC")]
		public fsData()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x2D188FC", Offset = "0x2D188FC", VA = "0x2D188FC")]
		public fsData(bool boolean)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x2D18978", Offset = "0x2D18978", VA = "0x2D18978")]
		public fsData(double f)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x2D189F4", Offset = "0x2D189F4", VA = "0x2D189F4")]
		public fsData(long i)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x2D18A70", Offset = "0x2D18A70", VA = "0x2D18A70")]
		public fsData(string str)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x2D18AA4", Offset = "0x2D18AA4", VA = "0x2D18AA4")]
		public fsData(Dictionary<string, fsData> dict)
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x2D18AD8", Offset = "0x2D18AD8", VA = "0x2D18AD8")]
		public fsData(List<fsData> list)
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x2D18B0C", Offset = "0x2D18B0C", VA = "0x2D18B0C")]
		public static fsData CreateDictionary()
		{
			return null;
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x2D18CBC", Offset = "0x2D18CBC", VA = "0x2D18CBC")]
		public static fsData CreateList()
		{
			return null;
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x2D15FAC", Offset = "0x2D15FAC", VA = "0x2D15FAC")]
		public static fsData CreateList(int capacity)
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x2D18D60", Offset = "0x2D18D60", VA = "0x2D18D60")]
		internal void BecomeDictionary()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x2D18E54", Offset = "0x2D18E54", VA = "0x2D18E54")]
		internal fsData Clone()
		{
			return null;
		}

		[Token(Token = "0x60022A3")]
		private T Cast<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x2D19234", Offset = "0x2D19234", VA = "0x2D19234", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x2D193E4", Offset = "0x2D193E4", VA = "0x2D193E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x2D19454", Offset = "0x2D19454", VA = "0x2D19454")]
		public bool Equals(fsData other)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x2D19924", Offset = "0x2D19924", VA = "0x2D19924")]
		public static bool operator ==(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x2D19A4C", Offset = "0x2D19A4C", VA = "0x2D19A4C")]
		public static bool operator !=(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x2D19AC8", Offset = "0x2D19AC8", VA = "0x2D19AC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000696")]
	public abstract class fsDirectConverter : fsBaseConverter
	{
		[Token(Token = "0x17000547")]
		public abstract Type ModelType
		{
			[Token(Token = "0x60022AB")]
			get;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x2D1AF00", Offset = "0x2D1AF00", VA = "0x2D1AF00")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x2000697")]
	public abstract class fsDirectConverter<TModel> : fsDirectConverter
	{
		[Token(Token = "0x17000548")]
		public override Type ModelType
		{
			[Token(Token = "0x60022AD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022AE")]
		public sealed override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022AF")]
		public sealed override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022B0")]
		protected abstract fsResult DoSerialize(TModel model, Dictionary<string, fsData> serialized);

		[Token(Token = "0x60022B1")]
		protected abstract fsResult DoDeserialize(Dictionary<string, fsData> data, ref TModel model);

		[Token(Token = "0x60022B2")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x2000698")]
	public static class fsGlobalConfig
	{
		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool SerializeDefaultValues;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool IsCaseSensitive;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type[] IgnoreSerializeAttributes;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type[] SerializeAttributes;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CustomDateTimeFormatString;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool Serialize64BitIntegerAsString;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public static bool SerializeEnumsAsInteger;
	}
	[Token(Token = "0x2000699")]
	public class fsJsonParser
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _start;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _input;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly StringBuilder _cachedStringBuilder;

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x2D1C39C", Offset = "0x2D1C39C", VA = "0x2D1C39C")]
		private fsResult MakeFailure(string message)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x2D1C640", Offset = "0x2D1C640", VA = "0x2D1C640")]
		private bool TryMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x2D1C67C", Offset = "0x2D1C67C", VA = "0x2D1C67C")]
		private bool HasValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x2D1C6B0", Offset = "0x2D1C6B0", VA = "0x2D1C6B0")]
		private bool HasValue(int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x2D1C6E8", Offset = "0x2D1C6E8", VA = "0x2D1C6E8")]
		private char Character()
		{
			return default(char);
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x2D1C6F0", Offset = "0x2D1C6F0", VA = "0x2D1C6F0")]
		private char Character(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x2D1C718", Offset = "0x2D1C718", VA = "0x2D1C718")]
		private void SkipSpace()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x2D1C9C4", Offset = "0x2D1C9C4", VA = "0x2D1C9C4")]
		private bool IsHex(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x2D1CA00", Offset = "0x2D1CA00", VA = "0x2D1CA00")]
		private uint ParseSingleChar(char c1, uint multipliyer)
		{
			return default(uint);
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x2D1CA58", Offset = "0x2D1CA58", VA = "0x2D1CA58")]
		private uint ParseUnicode(char c1, char c2, char c3, char c4)
		{
			return default(uint);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x2D1CBC8", Offset = "0x2D1CBC8", VA = "0x2D1CBC8")]
		private fsResult TryUnescapeChar(out char escaped)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x2D1D298", Offset = "0x2D1D298", VA = "0x2D1D298")]
		private fsResult TryParseExact(string content)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x2D1D400", Offset = "0x2D1D400", VA = "0x2D1D400")]
		private fsResult TryParseTrue(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x2D1D4F8", Offset = "0x2D1D4F8", VA = "0x2D1D4F8")]
		private fsResult TryParseFalse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x2D1D5F0", Offset = "0x2D1D5F0", VA = "0x2D1D5F0")]
		private fsResult TryParseNull(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x2D1D6F8", Offset = "0x2D1D6F8", VA = "0x2D1D6F8")]
		private bool IsSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x2D1D788", Offset = "0x2D1D788", VA = "0x2D1D788")]
		private fsResult TryParseNumber(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x2D1DB20", Offset = "0x2D1DB20", VA = "0x2D1DB20")]
		private fsResult TryParseString(out string str)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x2D1DE1C", Offset = "0x2D1DE1C", VA = "0x2D1DE1C")]
		private fsResult TryParseArray(out fsData arr)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x2D1E420", Offset = "0x2D1E420", VA = "0x2D1E420")]
		private fsResult TryParseObject(out fsData obj)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x2D1E14C", Offset = "0x2D1E14C", VA = "0x2D1E14C")]
		private fsResult RunParse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x2D1E934", Offset = "0x2D1E934", VA = "0x2D1E934")]
		public static fsResult Parse(string input, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x2D1EAB4", Offset = "0x2D1EAB4", VA = "0x2D1EAB4")]
		public static fsData Parse(string input)
		{
			return null;
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x2D1EA1C", Offset = "0x2D1EA1C", VA = "0x2D1EA1C")]
		private fsJsonParser(string input)
		{
		}
	}
	[Token(Token = "0x200069A")]
	public static class fsJsonPrinter
	{
		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x2D1EB28", Offset = "0x2D1EB28", VA = "0x2D1EB28")]
		private static void InsertSpacing(TextWriter stream, int count)
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x2D1EBA8", Offset = "0x2D1EBA8", VA = "0x2D1EBA8")]
		private static string EscapeString(string str)
		{
			return null;
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x2D1EF34", Offset = "0x2D1EF34", VA = "0x2D1EF34")]
		private static void BuildCompressedString(fsData data, TextWriter stream)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x2D1F558", Offset = "0x2D1F558", VA = "0x2D1F558")]
		private static void BuildPrettyString(fsData data, TextWriter stream, int depth)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x2D1FABC", Offset = "0x2D1FABC", VA = "0x2D1FABC")]
		public static string ToJson(fsData data, bool pretty)
		{
			return null;
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x2D1FC78", Offset = "0x2D1FC78", VA = "0x2D1FC78")]
		public static void PrettyJson(fsData data, TextWriter outputStream)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x2D1FAC8", Offset = "0x2D1FAC8", VA = "0x2D1FAC8")]
		public static string PrettyJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x2D1FC80", Offset = "0x2D1FC80", VA = "0x2D1FC80")]
		public static void CompressedJson(fsData data, StreamWriter outputStream)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x2D19238", Offset = "0x2D19238", VA = "0x2D19238")]
		public static string CompressedJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x2D1F388", Offset = "0x2D1F388", VA = "0x2D1F388")]
		private static string ConvertDoubleToString(double d)
		{
			return null;
		}
	}
	[Token(Token = "0x200069B")]
	public class fsMetaProperty
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23788", Offset = "0xE23788")]
		private FieldInfo <Field>k__BackingField;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23798", Offset = "0xE23798")]
		private string <JsonName>k__BackingField;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE237A8", Offset = "0xE237A8")]
		private bool <ReadOnly>k__BackingField;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE237B8", Offset = "0xE237B8")]
		private bool <WriteOnly>k__BackingField;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE237C8", Offset = "0xE237C8")]
		private bool <AutoInstance>k__BackingField;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE237D8", Offset = "0xE237D8")]
		private bool <AsReference>k__BackingField;

		[Token(Token = "0x17000549")]
		public FieldInfo Field
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x2D2081C", Offset = "0x2D2081C", VA = "0x2D2081C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BF7C", Offset = "0xE2BF7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x2D20824", Offset = "0x2D20824", VA = "0x2D20824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BF8C", Offset = "0xE2BF8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054A")]
		public string JsonName
		{
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x2D2082C", Offset = "0x2D2082C", VA = "0x2D2082C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BF9C", Offset = "0xE2BF9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x2D20834", Offset = "0x2D20834", VA = "0x2D20834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BFAC", Offset = "0xE2BFAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		public Type StorageType
		{
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0x2D1BEC8", Offset = "0x2D1BEC8", VA = "0x2D1BEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054C")]
		public string MemberName
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x2D1BD14", Offset = "0x2D1BD14", VA = "0x2D1BD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054D")]
		public bool ReadOnly
		{
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x2D2083C", Offset = "0x2D2083C", VA = "0x2D2083C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BFBC", Offset = "0xE2BFBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x2D20844", Offset = "0x2D20844", VA = "0x2D20844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BFCC", Offset = "0xE2BFCC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054E")]
		public bool WriteOnly
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x2D20850", Offset = "0x2D20850", VA = "0x2D20850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BFDC", Offset = "0xE2BFDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x2D20858", Offset = "0x2D20858", VA = "0x2D20858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BFEC", Offset = "0xE2BFEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054F")]
		public bool AutoInstance
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x2D20864", Offset = "0x2D20864", VA = "0x2D20864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BFFC", Offset = "0xE2BFFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x2D2086C", Offset = "0x2D2086C", VA = "0x2D2086C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C00C", Offset = "0xE2C00C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000550")]
		public bool AsReference
		{
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x2D20878", Offset = "0x2D20878", VA = "0x2D20878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C01C", Offset = "0xE2C01C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x2D20880", Offset = "0x2D20880", VA = "0x2D20880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C02C", Offset = "0xE2C02C")]
			private set
			{
			}
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x2D2088C", Offset = "0x2D2088C", VA = "0x2D2088C")]
		internal fsMetaProperty(FieldInfo field)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x2D1BEA4", Offset = "0x2D1BEA4", VA = "0x2D1BEA4")]
		public object Read(object context)
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x2D1C068", Offset = "0x2D1C068", VA = "0x2D1C068")]
		public void Write(object context, object value)
		{
		}
	}
	[Token(Token = "0x200069C")]
	public class fsMetaType
	{
		[Token(Token = "0x200069D")]
		private delegate object ObjectGenerator();

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14DEC", Offset = "0xE14DEC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type reflectedType;

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x31369B4", Offset = "0x31369B4", VA = "0x31369B4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x31369BC", Offset = "0x31369BC", VA = "0x31369BC")]
			internal object <GetGenerator>b__0()
			{
				return null;
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x3136A54", Offset = "0x3136A54", VA = "0x3136A54")]
			internal object <GetGenerator>b__1()
			{
				return null;
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x3136A60", Offset = "0x3136A60", VA = "0x3136A60")]
			internal object <GetGenerator>b__2()
			{
				return null;
			}

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x3136A94", Offset = "0x3136A94", VA = "0x3136A94")]
			internal object <GetGenerator>b__4()
			{
				return null;
			}

			[Token(Token = "0x6002300")]
			[Address(RVA = "0x3136AFC", Offset = "0x3136AFC", VA = "0x3136AFC")]
			internal object <GetGenerator>b__5()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14DFC", Offset = "0xE14DFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ObjectGenerator <>9__21_3;

			[Token(Token = "0x6002302")]
			[Address(RVA = "0x3136960", Offset = "0x3136960", VA = "0x3136960")]
			public <>c()
			{
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x3136968", Offset = "0x3136968", VA = "0x3136968")]
			internal object <GetGenerator>b__21_3()
			{
				return null;
			}
		}

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, fsMetaType> _metaTypes;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Type, object> _defaultInstances;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectGenerator generator;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE237E8", Offset = "0xE237E8")]
		private Type <reflectedType>k__BackingField;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE237F8", Offset = "0xE237F8")]
		private fsMetaProperty[] <Properties>k__BackingField;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23808", Offset = "0xE23808")]
		private bool <DeserializeOverwriteRequest>k__BackingField;

		[Token(Token = "0x17000551")]
		public Type reflectedType
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x2D20CD8", Offset = "0x2D20CD8", VA = "0x2D20CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C03C", Offset = "0xE2C03C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x2D20CE0", Offset = "0x2D20CE0", VA = "0x2D20CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C04C", Offset = "0xE2C04C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000552")]
		public fsMetaProperty[] Properties
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x2D20CE8", Offset = "0x2D20CE8", VA = "0x2D20CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C05C", Offset = "0xE2C05C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x2D20CF0", Offset = "0x2D20CF0", VA = "0x2D20CF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C06C", Offset = "0xE2C06C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000553")]
		public bool DeserializeOverwriteRequest
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x2D20CF8", Offset = "0x2D20CF8", VA = "0x2D20CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C07C", Offset = "0xE2C07C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x2D20D00", Offset = "0x2D20D00", VA = "0x2D20D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C08C", Offset = "0xE2C08C")]
			private set
			{
			}
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x2D16838", Offset = "0x2D16838", VA = "0x2D16838")]
		public static fsMetaType Get(Type type)
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x2D20BE4", Offset = "0x2D20BE4", VA = "0x2D20BE4")]
		public static void FlushMem()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x2D20ACC", Offset = "0x2D20ACC", VA = "0x2D20ACC")]
		private fsMetaType(Type reflectedType)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x2D210C0", Offset = "0x2D210C0", VA = "0x2D210C0")]
		private static void CollectProperties(List<fsMetaProperty> properties, Type reflectedType)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x2D212F0", Offset = "0x2D212F0", VA = "0x2D212F0")]
		public static bool CanSerializeField(FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x2D20D0C", Offset = "0x2D20D0C", VA = "0x2D20D0C")]
		private static ObjectGenerator GetGenerator(Type reflectedType)
		{
			return null;
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x2D215F8", Offset = "0x2D215F8", VA = "0x2D215F8")]
		private static bool HasDefaultConstructor(Type reflectedType)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x2D216D8", Offset = "0x2D216D8", VA = "0x2D216D8")]
		public object GetDefaultInstance()
		{
			return null;
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x2D16944", Offset = "0x2D16944", VA = "0x2D16944")]
		public object CreateInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x20006A0")]
	public abstract class fsObjectProcessor
	{
		[Token(Token = "0x6002304")]
		[Address(RVA = "0x2D21934", Offset = "0x2D21934", VA = "0x2D21934", Slot = "4")]
		public virtual bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x2D21974", Offset = "0x2D21974", VA = "0x2D21974", Slot = "5")]
		public virtual void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x2D21978", Offset = "0x2D21978", VA = "0x2D21978", Slot = "6")]
		public virtual void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x2D2197C", Offset = "0x2D2197C", VA = "0x2D2197C", Slot = "7")]
		public virtual void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x2D21980", Offset = "0x2D21980", VA = "0x2D21980", Slot = "8")]
		public virtual void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x2D21984", Offset = "0x2D21984", VA = "0x2D21984", Slot = "9")]
		public virtual void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x2D21988", Offset = "0x2D21988", VA = "0x2D21988")]
		protected fsObjectProcessor()
		{
		}
	}
	[Token(Token = "0x20006A1")]
	public struct fsResult
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] EmptyStringArray;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _success;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<string> _messages;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static fsResult Success;

		[Token(Token = "0x17000554")]
		public bool Failed
		{
			[Token(Token = "0x6002311")]
			[Address(RVA = "0x2D16178", Offset = "0x2D16178", VA = "0x2D16178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000555")]
		public bool Succeeded
		{
			[Token(Token = "0x6002312")]
			[Address(RVA = "0x2D23C9C", Offset = "0x2D23C9C", VA = "0x2D23C9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000556")]
		public bool HasWarnings
		{
			[Token(Token = "0x6002313")]
			[Address(RVA = "0x2D23CA4", Offset = "0x2D23CA4", VA = "0x2D23CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000557")]
		public Exception AsException
		{
			[Token(Token = "0x6002316")]
			[Address(RVA = "0x2D23D00", Offset = "0x2D23D00", VA = "0x2D23D00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000558")]
		public IEnumerable<string> RawMessages
		{
			[Token(Token = "0x6002317")]
			[Address(RVA = "0x2D23E70", Offset = "0x2D23E70", VA = "0x2D23E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000559")]
		public string FormattedMessages
		{
			[Token(Token = "0x6002318")]
			[Address(RVA = "0x2D23EE0", Offset = "0x2D23EE0", VA = "0x2D23EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x2D23A38", Offset = "0x2D23A38", VA = "0x2D23A38")]
		public static fsResult Warn(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x2D17EB0", Offset = "0x2D17EB0", VA = "0x2D17EB0")]
		public static fsResult Fail(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x2D23B00", Offset = "0x2D23B00", VA = "0x2D23B00")]
		public void AddMessage(string message)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x2D160AC", Offset = "0x2D160AC", VA = "0x2D160AC")]
		public void AddMessages(fsResult result)
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x2D23BB8", Offset = "0x2D23BB8", VA = "0x2D23BB8")]
		private fsResult Merge(fsResult other)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x2D16798", Offset = "0x2D16798", VA = "0x2D16798")]
		public static fsResult operator +(fsResult a, fsResult b)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x2D1EAE8", Offset = "0x2D1EAE8", VA = "0x2D1EAE8")]
		public fsResult AssertSuccess()
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x2D23DE8", Offset = "0x2D23DE8", VA = "0x2D23DE8")]
		public fsResult AssertSuccessWithoutWarnings()
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x2D23F58", Offset = "0x2D23F58", VA = "0x2D23F58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20006A2")]
	public class fsSerializer
	{
		[Token(Token = "0x20006A3")]
		internal class fsLazyCycleDefinitionWriter
		{
			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, fsData> _pendingDefinitions;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HashSet<int> _references;

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x3136EC8", Offset = "0x3136EC8", VA = "0x3136EC8")]
			public void WriteDefinition(int id, fsData data)
			{
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0x3137024", Offset = "0x3137024", VA = "0x3137024")]
			public void WriteReference(int id, Dictionary<string, fsData> dict)
			{
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x313720C", Offset = "0x313720C", VA = "0x313720C")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0x3137284", Offset = "0x3137284", VA = "0x3137284")]
			public fsLazyCycleDefinitionWriter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE14E0C", Offset = "0xE14E0C")]
		private sealed class <>c
		{
			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MethodInfo, bool> <>9__58_0;

			[Token(Token = "0x6002345")]
			[Address(RVA = "0x3136E5C", Offset = "0x3136E5C", VA = "0x3136E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002346")]
			[Address(RVA = "0x3136E64", Offset = "0x3136E64", VA = "0x3136E64")]
			internal bool <TryDeserializeMigration>b__58_0(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400178B")]
		public const string KEY_OBJECT_REFERENCE = "$ref";

		[Token(Token = "0x400178C")]
		public const string KEY_OBJECT_DEFINITION = "$id";

		[Token(Token = "0x400178D")]
		public const string KEY_INSTANCE_TYPE = "$type";

		[Token(Token = "0x400178E")]
		public const string KEY_VERSION = "$version";

		[Token(Token = "0x400178F")]
		public const string KEY_CONTENT = "$content";

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, fsBaseConverter> _cachedOverrideConverterInstances;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, fsBaseConverter> _cachedConverters;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<fsConverter> _availableConverters;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Type, fsDirectConverter> _availableDirectConverters;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<fsObjectProcessor> _processors;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Type, List<fsObjectProcessor>> _cachedProcessors;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private fsCyclicReferenceManager _references;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private fsLazyCycleDefinitionWriter _lazyReferenceWriter;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stack<ISerializationCollector> _collectors;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _collectableDepth;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23818", Offset = "0xE23818")]
		private List<UnityEngine.Object> <ReferencesDatabase>k__BackingField;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23828", Offset = "0xE23828")]
		private bool <IgnoreSerializeCycleReferences>k__BackingField;

		[Token(Token = "0x1700055A")]
		public List<UnityEngine.Object> ReferencesDatabase
		{
			[Token(Token = "0x6002328")]
			[Address(RVA = "0x2D24AF4", Offset = "0x2D24AF4", VA = "0x2D24AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C09C", Offset = "0xE2C09C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002329")]
			[Address(RVA = "0x2D24AFC", Offset = "0x2D24AFC", VA = "0x2D24AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C0AC", Offset = "0xE2C0AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700055B")]
		public bool IgnoreSerializeCycleReferences
		{
			[Token(Token = "0x600232A")]
			[Address(RVA = "0x2D24B04", Offset = "0x2D24B04", VA = "0x2D24B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C0BC", Offset = "0xE2C0BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600232B")]
			[Address(RVA = "0x2D24B0C", Offset = "0x2D24B0C", VA = "0x2D24B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C0CC", Offset = "0xE2C0CC")]
			set
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event Action<object> onBeforeObjectSerialized
		{
			[Token(Token = "0x600232C")]
			[Address(RVA = "0x2D24B18", Offset = "0x2D24B18", VA = "0x2D24B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C0DC", Offset = "0xE2C0DC")]
			add
			{
			}
			[Token(Token = "0x600232D")]
			[Address(RVA = "0x2D24BB8", Offset = "0x2D24BB8", VA = "0x2D24BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C0EC", Offset = "0xE2C0EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event Action<object, fsData> onAfterObjectSerialized
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0x2D24C58", Offset = "0x2D24C58", VA = "0x2D24C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C0FC", Offset = "0xE2C0FC")]
			add
			{
			}
			[Token(Token = "0x600232F")]
			[Address(RVA = "0x2D24CF8", Offset = "0x2D24CF8", VA = "0x2D24CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C10C", Offset = "0xE2C10C")]
			remove
			{
			}
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x2D1ADF0", Offset = "0x2D1ADF0", VA = "0x2D1ADF0")]
		public static bool IsReservedKeyword(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x2D24034", Offset = "0x2D24034", VA = "0x2D24034")]
		public static void RemoveMetaData(ref fsData data)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x2D24184", Offset = "0x2D24184", VA = "0x2D24184")]
		private static void EnsureDictionary(ref fsData data)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x2D24238", Offset = "0x2D24238", VA = "0x2D24238")]
		private static bool IsObjectReference(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x2D242C8", Offset = "0x2D242C8", VA = "0x2D242C8")]
		private static bool IsObjectDefinition(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x2D24358", Offset = "0x2D24358", VA = "0x2D24358")]
		private static bool IsVersioned(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x2D243E8", Offset = "0x2D243E8", VA = "0x2D243E8")]
		private static bool IsTypeSpecified(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x2D24478", Offset = "0x2D24478", VA = "0x2D24478")]
		private static bool IsWrappedData(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x2D24508", Offset = "0x2D24508", VA = "0x2D24508")]
		private static void Invoke_OnBeforeSerialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x2D246D4", Offset = "0x2D246D4", VA = "0x2D246D4")]
		private static void Invoke_OnAfterSerialize(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x2D2479C", Offset = "0x2D2479C", VA = "0x2D2479C")]
		private static void Invoke_OnBeforeDeserialize(List<fsObjectProcessor> processors, Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x2D24850", Offset = "0x2D24850", VA = "0x2D24850")]
		private static void Invoke_OnBeforeDeserializeAfterInstanceCreation(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x2D24914", Offset = "0x2D24914", VA = "0x2D24914")]
		private static void Invoke_OnAfterDeserialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x2D16DE0", Offset = "0x2D16DE0", VA = "0x2D16DE0")]
		public fsSerializer()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x2D24FF0", Offset = "0x2D24FF0", VA = "0x2D24FF0")]
		public void PurgeTemporaryData()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x2D25060", Offset = "0x2D25060", VA = "0x2D25060")]
		private List<fsObjectProcessor> GetProcessors(Type type)
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x2D24D98", Offset = "0x2D24D98", VA = "0x2D24D98")]
		public void AddConverter(fsBaseConverter converter)
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x2D25344", Offset = "0x2D25344", VA = "0x2D25344")]
		private fsBaseConverter GetConverter(Type type, Type overrideConverterType)
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x2D160A4", Offset = "0x2D160A4", VA = "0x2D160A4")]
		public fsResult TrySerialize(Type storageType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x2D25780", Offset = "0x2D25780", VA = "0x2D25780")]
		public fsResult TrySerialize(Type storageType, object instance, out fsData data, Type overrideConverterType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x2D259F4", Offset = "0x2D259F4", VA = "0x2D259F4")]
		private fsResult Internal_Serialize(Type storageType, object instance, out fsData data, Type overrideConverterType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x2D167C4", Offset = "0x2D167C4", VA = "0x2D167C4")]
		public fsResult TryDeserialize(fsData data, Type storageType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x2D23824", Offset = "0x2D23824", VA = "0x2D23824")]
		public fsResult TryDeserialize(fsData data, Type storageType, ref object result, Type overrideConverterType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x2D2636C", Offset = "0x2D2636C", VA = "0x2D2636C")]
		private fsResult Internal_Deserialize(fsData data, Type storageType, ref object result, Type overrideConverterType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x2D25F04", Offset = "0x2D25F04", VA = "0x2D25F04")]
		private void TryPush(object o)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x2D261EC", Offset = "0x2D261EC", VA = "0x2D261EC")]
		private void TryPop(object o)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x2D25D84", Offset = "0x2D25D84", VA = "0x2D25D84")]
		private void TrySerializeVersioning(object currentInstance, ref fsData data)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x2D26B1C", Offset = "0x2D26B1C", VA = "0x2D26B1C")]
		private void TryDeserializeVersioning(ref object currentInstance, ref fsData currentData)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x2D26CB0", Offset = "0x2D26CB0", VA = "0x2D26CB0")]
		private void TryDeserializeMigration(ref object currentInstance, ref fsData currentData, Type previousType, object previousInstance)
		{
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer.Internal
{
	[Token(Token = "0x20006A5")]
	public class fsArrayConverter : fsConverter
	{
		[Token(Token = "0x6002347")]
		[Address(RVA = "0x2D15C38", Offset = "0x2D15C38", VA = "0x2D15C38", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x2D15C54", Offset = "0x2D15C54", VA = "0x2D15C54", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x2D15C5C", Offset = "0x2D15C5C", VA = "0x2D15C5C", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x2D15C64", Offset = "0x2D15C64", VA = "0x2D15C64", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x2D16188", Offset = "0x2D16188", VA = "0x2D16188", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x2D167CC", Offset = "0x2D167CC", VA = "0x2D167CC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x2D169F0", Offset = "0x2D169F0", VA = "0x2D169F0")]
		public fsArrayConverter()
		{
		}
	}
	[Token(Token = "0x20006A6")]
	public class fsDictionaryConverter : fsConverter
	{
		[Token(Token = "0x600234E")]
		[Address(RVA = "0x2D19BB4", Offset = "0x2D19BB4", VA = "0x2D19BB4", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x2D19C8C", Offset = "0x2D19C8C", VA = "0x2D19C8C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x2D19CF8", Offset = "0x2D19CF8", VA = "0x2D19CF8", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x2D1A5BC", Offset = "0x2D1A5BC", VA = "0x2D1A5BC", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x2D1AEF8", Offset = "0x2D1AEF8", VA = "0x2D1AEF8")]
		public fsDictionaryConverter()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	public class fsEnumConverter : fsConverter
	{
		[Token(Token = "0x6002353")]
		[Address(RVA = "0x2D1AF08", Offset = "0x2D1AF08", VA = "0x2D1AF08", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x2D1AF2C", Offset = "0x2D1AF2C", VA = "0x2D1AF2C", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x2D1AF34", Offset = "0x2D1AF34", VA = "0x2D1AF34", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x2D1AF3C", Offset = "0x2D1AF3C", VA = "0x2D1AF3C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x2D1AFDC", Offset = "0x2D1AFDC", VA = "0x2D1AFDC", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x2D1B530", Offset = "0x2D1B530", VA = "0x2D1B530", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002359")]
		private static bool ArrayContains<T>(T[] values, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x2D1BA10", Offset = "0x2D1BA10", VA = "0x2D1BA10")]
		public fsEnumConverter()
		{
		}
	}
	[Token(Token = "0x20006A8")]
	public class fsForwardConverter : fsConverter
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _memberName;

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x2D1BA4C", Offset = "0x2D1BA4C", VA = "0x2D1BA4C")]
		public fsForwardConverter(fsForwardAttribute attribute)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x2D1BA88", Offset = "0x2D1BA88", VA = "0x2D1BA88", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x2D1BADC", Offset = "0x2D1BADC", VA = "0x2D1BADC")]
		private fsResult GetProperty(object instance, out fsMetaProperty property)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x2D1BD34", Offset = "0x2D1BD34", VA = "0x2D1BD34", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x2D1BEEC", Offset = "0x2D1BEEC", VA = "0x2D1BEEC", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x2D1C084", Offset = "0x2D1C084", VA = "0x2D1C084", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}
	}
	[Token(Token = "0x20006A9")]
	public class fsListConverter : fsConverter
	{
		[Token(Token = "0x6002361")]
		[Address(RVA = "0x2D1FC84", Offset = "0x2D1FC84", VA = "0x2D1FC84", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x2D1FD5C", Offset = "0x2D1FD5C", VA = "0x2D1FD5C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x2D1FDC8", Offset = "0x2D1FDC8", VA = "0x2D1FDC8", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x2D20224", Offset = "0x2D20224", VA = "0x2D20224", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x2D20814", Offset = "0x2D20814", VA = "0x2D20814")]
		public fsListConverter()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public class fsPrimitiveConverter : fsConverter
	{
		[Token(Token = "0x6002366")]
		[Address(RVA = "0x2D21990", Offset = "0x2D21990", VA = "0x2D21990", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x2D21AA0", Offset = "0x2D21AA0", VA = "0x2D21AA0", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x2D21AA8", Offset = "0x2D21AA8", VA = "0x2D21AA8", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x2D21AB0", Offset = "0x2D21AB0", VA = "0x2D21AB0")]
		private static bool UseBool(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x2D21B3C", Offset = "0x2D21B3C", VA = "0x2D21B3C")]
		private static bool UseInt64(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x2D21E14", Offset = "0x2D21E14", VA = "0x2D21E14")]
		private static bool UseDouble(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x2D21F5C", Offset = "0x2D21F5C", VA = "0x2D21F5C")]
		private static bool UseString(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x2D22054", Offset = "0x2D22054", VA = "0x2D22054", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x2D22798", Offset = "0x2D22798", VA = "0x2D22798", Slot = "8")]
		public override fsResult TryDeserialize(fsData storage, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x2D23044", Offset = "0x2D23044", VA = "0x2D23044")]
		public fsPrimitiveConverter()
		{
		}
	}
	[Token(Token = "0x20006AB")]
	public class fsReflectedConverter : fsConverter
	{
		[Token(Token = "0x6002370")]
		[Address(RVA = "0x2D23054", Offset = "0x2D23054", VA = "0x2D23054", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x2D23114", Offset = "0x2D23114", VA = "0x2D23114", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x2D234E0", Offset = "0x2D234E0", VA = "0x2D234E0", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x2D239C4", Offset = "0x2D239C4", VA = "0x2D239C4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x2D23A30", Offset = "0x2D23A30", VA = "0x2D23A30")]
		public fsReflectedConverter()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public class fsTypeConverter : fsConverter
	{
		[Token(Token = "0x6002375")]
		[Address(RVA = "0x2725704", Offset = "0x2725704", VA = "0x2725704", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x272579C", Offset = "0x272579C", VA = "0x272579C", Slot = "5")]
		public override bool RequestCycleSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x27257A4", Offset = "0x27257A4", VA = "0x27257A4", Slot = "6")]
		public override bool RequestInheritanceSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x27257AC", Offset = "0x27257AC", VA = "0x27257AC", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x27258C4", Offset = "0x27258C4", VA = "0x27258C4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x2725A64", Offset = "0x2725A64", VA = "0x2725A64", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x2725A6C", Offset = "0x2725A6C", VA = "0x2725A6C")]
		public fsTypeConverter()
		{
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer.Internal.DirectConverters
{
	[Token(Token = "0x20006AD")]
	public class AnimationCurve_DirectConverter : fsDirectConverter<AnimationCurve>
	{
		[Token(Token = "0x600237C")]
		[Address(RVA = "0x2AA330C", Offset = "0x2AA330C", VA = "0x2AA330C", Slot = "10")]
		protected override fsResult DoSerialize(AnimationCurve model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x2AA34C4", Offset = "0x2AA34C4", VA = "0x2AA34C4", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref AnimationCurve model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x2AA36F0", Offset = "0x2AA36F0", VA = "0x2AA36F0", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x2AA3748", Offset = "0x2AA3748", VA = "0x2AA3748")]
		public AnimationCurve_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006AE")]
	public class Bounds_DirectConverter : fsDirectConverter<Bounds>
	{
		[Token(Token = "0x6002380")]
		[Address(RVA = "0x2DF5348", Offset = "0x2DF5348", VA = "0x2DF5348", Slot = "10")]
		protected override fsResult DoSerialize(Bounds model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x2DF5480", Offset = "0x2DF5480", VA = "0x2DF5480", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Bounds model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x2DF5624", Offset = "0x2DF5624", VA = "0x2DF5624", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x2DF5680", Offset = "0x2DF5680", VA = "0x2DF5680")]
		public Bounds_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006AF")]
	public class GUIStyleState_DirectConverter : fsDirectConverter<GUIStyleState>
	{
		[Token(Token = "0x6002384")]
		[Address(RVA = "0x29341A0", Offset = "0x29341A0", VA = "0x29341A0", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyleState model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x29342F8", Offset = "0x29342F8", VA = "0x29342F8", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyleState model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x29344BC", Offset = "0x29344BC", VA = "0x29344BC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x2934514", Offset = "0x2934514", VA = "0x2934514")]
		public GUIStyleState_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	public class GUIStyle_DirectConverter : fsDirectConverter<GUIStyle>
	{
		[Token(Token = "0x6002388")]
		[Address(RVA = "0x2934854", Offset = "0x2934854", VA = "0x2934854", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyle model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x2935314", Offset = "0x2935314", VA = "0x2935314", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyle model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x2936130", Offset = "0x2936130", VA = "0x2936130", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x2936188", Offset = "0x2936188", VA = "0x2936188")]
		public GUIStyle_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	public class Gradient_DirectConverter : fsDirectConverter<Gradient>
	{
		[Token(Token = "0x600238C")]
		[Address(RVA = "0x29C78D0", Offset = "0x29C78D0", VA = "0x29C78D0", Slot = "10")]
		protected override fsResult DoSerialize(Gradient model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x29C7A2C", Offset = "0x29C7A2C", VA = "0x29C7A2C", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Gradient model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x29C7BE4", Offset = "0x29C7BE4", VA = "0x29C7BE4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x29C7C3C", Offset = "0x29C7C3C", VA = "0x29C7C3C")]
		public Gradient_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	public class Keyframe_DirectConverter : fsDirectConverter<Keyframe>
	{
		[Token(Token = "0x6002390")]
		[Address(RVA = "0x2E388BC", Offset = "0x2E388BC", VA = "0x2E388BC", Slot = "10")]
		protected override fsResult DoSerialize(Keyframe model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x2E38B14", Offset = "0x2E38B14", VA = "0x2E38B14", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Keyframe model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x2E38E0C", Offset = "0x2E38E0C", VA = "0x2E38E0C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x2E38E70", Offset = "0x2E38E70", VA = "0x2E38E70")]
		public Keyframe_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class LayerMask_DirectConverter : fsDirectConverter<LayerMask>
	{
		[Token(Token = "0x6002394")]
		[Address(RVA = "0x2CF7888", Offset = "0x2CF7888", VA = "0x2CF7888", Slot = "10")]
		protected override fsResult DoSerialize(LayerMask model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x2CF7970", Offset = "0x2CF7970", VA = "0x2CF7970", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref LayerMask model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x2CF7A84", Offset = "0x2CF7A84", VA = "0x2CF7A84", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x2CF7AD4", Offset = "0x2CF7AD4", VA = "0x2CF7AD4")]
		public LayerMask_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B4")]
	public class RectOffset_DirectConverter : fsDirectConverter<RectOffset>
	{
		[Token(Token = "0x6002398")]
		[Address(RVA = "0x2688940", Offset = "0x2688940", VA = "0x2688940", Slot = "10")]
		protected override fsResult DoSerialize(RectOffset model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x2688B40", Offset = "0x2688B40", VA = "0x2688B40", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref RectOffset model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x2688DD8", Offset = "0x2688DD8", VA = "0x2688DD8", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x2688E30", Offset = "0x2688E30", VA = "0x2688E30")]
		public RectOffset_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public class Rect_DirectConverter : fsDirectConverter<Rect>
	{
		[Token(Token = "0x600239C")]
		[Address(RVA = "0x26895FC", Offset = "0x26895FC", VA = "0x26895FC", Slot = "10")]
		protected override fsResult DoSerialize(Rect model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x26897F4", Offset = "0x26897F4", VA = "0x26897F4", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Rect model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x2689A64", Offset = "0x2689A64", VA = "0x2689A64", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x2689ABC", Offset = "0x2689ABC", VA = "0x2689ABC")]
		public Rect_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	public class Vector2Int_DirectConverter : fsDirectConverter<Vector2Int>
	{
		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x27C53D4", Offset = "0x27C53D4", VA = "0x27C53D4", Slot = "10")]
		protected override fsResult DoSerialize(Vector2Int model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x27C54CC", Offset = "0x27C54CC", VA = "0x27C54CC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Vector2Int model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x27C55E0", Offset = "0x27C55E0", VA = "0x27C55E0", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x27C5630", Offset = "0x27C5630", VA = "0x27C5630")]
		public Vector2Int_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	public class Vector2_DirectConverter : fsDirectConverter<Vector2>
	{
		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x27C58FC", Offset = "0x27C58FC", VA = "0x27C58FC", Slot = "10")]
		protected override fsResult DoSerialize(Vector2 model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x27C59F4", Offset = "0x27C59F4", VA = "0x27C59F4", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Vector2 model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x27C5B08", Offset = "0x27C5B08", VA = "0x27C5B08", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x27C5B58", Offset = "0x27C5B58", VA = "0x27C5B58")]
		public Vector2_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20006B8")]
	public class Vector3Int_DirectConverter : fsDirectConverter<Vector3Int>
	{
		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x27C5CB0", Offset = "0x27C5CB0", VA = "0x27C5CB0", Slot = "10")]
		protected override fsResult DoSerialize(Vector3Int model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x27C5DFC", Offset = "0x27C5DFC", VA = "0x27C5DFC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Vector3Int model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x27C5F80", Offset = "0x27C5F80", VA = "0x27C5F80", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x27C5FDC", Offset = "0x27C5FDC", VA = "0x27C5FDC")]
		public Vector3Int_DirectConverter()
		{
		}
	}
}
namespace ParadoxNotion.Animation
{
	[Token(Token = "0x20006B9")]
	public enum EaseType
	{
		[Token(Token = "0x40017A4")]
		Linear,
		[Token(Token = "0x40017A5")]
		QuadraticIn,
		[Token(Token = "0x40017A6")]
		QuadraticOut,
		[Token(Token = "0x40017A7")]
		QuadraticInOut,
		[Token(Token = "0x40017A8")]
		QuarticIn,
		[Token(Token = "0x40017A9")]
		QuarticOut,
		[Token(Token = "0x40017AA")]
		QuarticInOut,
		[Token(Token = "0x40017AB")]
		QuinticIn,
		[Token(Token = "0x40017AC")]
		QuinticOut,
		[Token(Token = "0x40017AD")]
		QuinticInOut,
		[Token(Token = "0x40017AE")]
		CubicIn,
		[Token(Token = "0x40017AF")]
		CubicOut,
		[Token(Token = "0x40017B0")]
		CubicInOut,
		[Token(Token = "0x40017B1")]
		ExponentialIn,
		[Token(Token = "0x40017B2")]
		ExponentialOut,
		[Token(Token = "0x40017B3")]
		ExponentialInOut,
		[Token(Token = "0x40017B4")]
		CircularIn,
		[Token(Token = "0x40017B5")]
		CircularOut,
		[Token(Token = "0x40017B6")]
		CircularInOut,
		[Token(Token = "0x40017B7")]
		SinusoidalIn,
		[Token(Token = "0x40017B8")]
		SinusoidalOut,
		[Token(Token = "0x40017B9")]
		SinusoidalInOut,
		[Token(Token = "0x40017BA")]
		ElasticIn,
		[Token(Token = "0x40017BB")]
		ElasticOut,
		[Token(Token = "0x40017BC")]
		ElasticInOut,
		[Token(Token = "0x40017BD")]
		BounceIn,
		[Token(Token = "0x40017BE")]
		BounceOut,
		[Token(Token = "0x40017BF")]
		BounceInOut,
		[Token(Token = "0x40017C0")]
		BackIn,
		[Token(Token = "0x40017C1")]
		BackOut,
		[Token(Token = "0x40017C2")]
		BackInOut
	}
	[Token(Token = "0x20006BA")]
	public static class Easing
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Func<float, float, float, float>[] EaseFunctions;

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x283F180", Offset = "0x283F180", VA = "0x283F180")]
		public static float Ease(EaseType type, float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x283FB34", Offset = "0x283FB34", VA = "0x283FB34")]
		public static Vector3 Ease(EaseType type, Vector3 from, Vector3 to, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x283FC58", Offset = "0x283FC58", VA = "0x283FC58")]
		public static Quaternion Ease(EaseType type, Quaternion from, Quaternion to, float t)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x283FDAC", Offset = "0x283FDAC", VA = "0x283FDAC")]
		public static Color Ease(EaseType type, Color from, Color to, float t)
		{
			return default(Color);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x283FF00", Offset = "0x283FF00", VA = "0x283FF00")]
		public static float Difference(this float f, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x283FF14", Offset = "0x283FF14", VA = "0x283FF14")]
		public static float Linear(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x283FF1C", Offset = "0x283FF1C", VA = "0x283FF1C")]
		public static float QuadraticIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x283FFBC", Offset = "0x283FFBC", VA = "0x283FFBC")]
		public static float QuadraticOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x2840064", Offset = "0x2840064", VA = "0x2840064")]
		public static float QuadraticInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x284013C", Offset = "0x284013C", VA = "0x284013C")]
		public static float QuarticIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x28401E4", Offset = "0x28401E4", VA = "0x28401E4")]
		public static float QuarticOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x284029C", Offset = "0x284029C", VA = "0x284029C")]
		public static float QuarticInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x2840384", Offset = "0x2840384", VA = "0x2840384")]
		public static float QuinticIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x2840430", Offset = "0x2840430", VA = "0x2840430")]
		public static float QuinticOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x28404EC", Offset = "0x28404EC", VA = "0x28404EC")]
		public static float QuinticInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x28405E0", Offset = "0x28405E0", VA = "0x28405E0")]
		public static float CubicIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x2840684", Offset = "0x2840684", VA = "0x2840684")]
		public static float CubicOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x2840738", Offset = "0x2840738", VA = "0x2840738")]
		public static float CubicInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x2840810", Offset = "0x2840810", VA = "0x2840810")]
		public static float SinusoidalIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x28408CC", Offset = "0x28408CC", VA = "0x28408CC")]
		public static float SinusoidalOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x2840980", Offset = "0x2840980", VA = "0x2840980")]
		public static float SinusoidalInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x2840A3C", Offset = "0x2840A3C", VA = "0x2840A3C")]
		public static float ExponentialIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x2840B08", Offset = "0x2840B08", VA = "0x2840B08")]
		public static float ExponentialOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x2840BD0", Offset = "0x2840BD0", VA = "0x2840BD0")]
		public static float ExponentialInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x2840CEC", Offset = "0x2840CEC", VA = "0x2840CEC")]
		public static float CircularIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x2840DAC", Offset = "0x2840DAC", VA = "0x2840DAC")]
		public static float CircularOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x2840E70", Offset = "0x2840E70", VA = "0x2840E70")]
		public static float CircularInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x2840F60", Offset = "0x2840F60", VA = "0x2840F60")]
		public static float ElasticIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x2841074", Offset = "0x2841074", VA = "0x2841074")]
		public static float ElasticOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x2841190", Offset = "0x2841190", VA = "0x2841190")]
		public static float ElasticInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x2841310", Offset = "0x2841310", VA = "0x2841310")]
		public static float BounceIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x28413C4", Offset = "0x28413C4", VA = "0x28413C4")]
		public static float BounceOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x2841518", Offset = "0x2841518", VA = "0x2841518")]
		public static float BounceInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x284162C", Offset = "0x284162C", VA = "0x284162C")]
		public static float BackIn(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x28416E8", Offset = "0x28416E8", VA = "0x28416E8")]
		public static float BackOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x28417B4", Offset = "0x28417B4", VA = "0x28417B4")]
		public static float BackInOut(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x283F25C", Offset = "0x283F25C", VA = "0x283F25C")]
		public static Func<float, float, float, float> Function(EaseType type)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Design
{
	[Token(Token = "0x20006BB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14E2C", Offset = "0xE14E2C")]
	public class SpoofAOTAttribute : Attribute
	{
		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x2587A74", Offset = "0x2587A74", VA = "0x2587A74")]
		public SpoofAOTAttribute()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14E40", Offset = "0xE14E40")]
	public class DoNotListAttribute : Attribute
	{
		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x283E9B4", Offset = "0x283E9B4", VA = "0x283E9B4")]
		public DoNotListAttribute()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14E54", Offset = "0xE14E54")]
	public class ProtectedSingletonAttribute : Attribute
	{
		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x267FFAC", Offset = "0x267FFAC", VA = "0x267FFAC")]
		public ProtectedSingletonAttribute()
		{
		}
	}
	[Token(Token = "0x20006BE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14E68", Offset = "0xE14E68")]
	public class ExecutionPriorityAttribute : Attribute
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int priority;

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x28CA6DC", Offset = "0x28CA6DC", VA = "0x28CA6DC")]
		public ExecutionPriorityAttribute(int priority)
		{
		}
	}
	[Token(Token = "0x20006BF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14E7C", Offset = "0xE14E7C")]
	public class ExposeAsDefinitionAttribute : Attribute
	{
		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x28CDAE0", Offset = "0x28CDAE0", VA = "0x28CDAE0")]
		public ExposeAsDefinitionAttribute()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14E90", Offset = "0xE14E90")]
	public class ExposeFieldAttribute : Attribute
	{
		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x28CDAE8", Offset = "0x28CDAE8", VA = "0x28CDAE8")]
		public ExposeFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14EA4", Offset = "0xE14EA4")]
	public class ListInspectorOptionAttribute : Attribute
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool allowAdd;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool allowRemove;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool showFoldout;

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x2CF8978", Offset = "0x2CF8978", VA = "0x2CF8978")]
		public ListInspectorOptionAttribute(bool allowAdd, bool allowRemove, bool alwaysExpanded)
		{
		}
	}
	[Token(Token = "0x20006C2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14EB8", Offset = "0xE14EB8")]
	public class NameAttribute : Attribute
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int priority;

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x269B640", Offset = "0x269B640", VA = "0x269B640")]
		public NameAttribute(string name, int priority = 0)
		{
		}
	}
	[Token(Token = "0x20006C3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14ECC", Offset = "0xE14ECC")]
	public class CategoryAttribute : Attribute
	{
		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string category;

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x2DFE500", Offset = "0x2DFE500", VA = "0x2DFE500")]
		public CategoryAttribute(string category)
		{
		}
	}
	[Token(Token = "0x20006C4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14EE0", Offset = "0xE14EE0")]
	public class DescriptionAttribute : Attribute
	{
		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string description;

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x283B434", Offset = "0x283B434", VA = "0x283B434")]
		public DescriptionAttribute(string description)
		{
		}
	}
	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14EF4", Offset = "0xE14EF4")]
	public class IconAttribute : Attribute
	{
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string iconName;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool fixedColor;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string runtimeIconTypeCallback;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Type fromType;

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x2E25D50", Offset = "0x2E25D50", VA = "0x2E25D50")]
		public IconAttribute(string iconName = "", bool fixedColor = false, string runtimeIconTypeCallback = "")
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x2E25DAC", Offset = "0x2E25DAC", VA = "0x2E25DAC")]
		public IconAttribute(Type fromType)
		{
		}
	}
	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F08", Offset = "0xE14F08")]
	public class ColorAttribute : Attribute
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string hexColor;

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x22B7070", Offset = "0x22B7070", VA = "0x22B7070")]
		public ColorAttribute(string hexColor)
		{
		}
	}
	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F1C", Offset = "0xE14F1C")]
	public abstract class DrawerAttribute : Attribute
	{
		[Token(Token = "0x1700055C")]
		public virtual int priority
		{
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x283EEB4", Offset = "0x283EEB4", VA = "0x283EEB4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700055D")]
		public virtual bool isDecorator
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x283EEBC", Offset = "0x283EEBC", VA = "0x283EEBC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x283A0D0", Offset = "0x283A0D0", VA = "0x283A0D0")]
		protected DrawerAttribute()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F30", Offset = "0xE14F30")]
	public class HeaderAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string title;

		[Token(Token = "0x1700055E")]
		public override bool isDecorator
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x30A6D90", Offset = "0x30A6D90", VA = "0x30A6D90", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x30A6D98", Offset = "0x30A6D98", VA = "0x30A6D98")]
		public HeaderAttribute(string title)
		{
		}
	}
	[Token(Token = "0x20006C9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F44", Offset = "0xE14F44")]
	public class DimIfDefaultAttribute : DrawerAttribute
	{
		[Token(Token = "0x1700055F")]
		public override bool isDecorator
		{
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x283E8C8", Offset = "0x283E8C8", VA = "0x283E8C8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000560")]
		public override int priority
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x283E8D0", Offset = "0x283E8D0", VA = "0x283E8D0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x283E8D8", Offset = "0x283E8D8", VA = "0x283E8D8")]
		public DimIfDefaultAttribute()
		{
		}
	}
	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F58", Offset = "0xE14F58")]
	public class ShowIfAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string fieldName;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int checkValue;

		[Token(Token = "0x17000561")]
		public override bool isDecorator
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x25815B8", Offset = "0x25815B8", VA = "0x25815B8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000562")]
		public override int priority
		{
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0x25815C0", Offset = "0x25815C0", VA = "0x25815C0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x25815C8", Offset = "0x25815C8", VA = "0x25815C8")]
		public ShowIfAttribute(string fieldName, int checkValue)
		{
		}
	}
	[Token(Token = "0x20006CB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F6C", Offset = "0xE14F6C")]
	public class RequiredFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x17000563")]
		public override bool isDecorator
		{
			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x2B3AE70", Offset = "0x2B3AE70", VA = "0x2B3AE70", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000564")]
		public override int priority
		{
			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x2B3AE78", Offset = "0x2B3AE78", VA = "0x2B3AE78", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x2B3AE80", Offset = "0x2B3AE80", VA = "0x2B3AE80")]
		public RequiredFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20006CC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F80", Offset = "0xE14F80")]
	public class ShowButtonAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string buttonTitle;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string methodName;

		[Token(Token = "0x17000565")]
		public override bool isDecorator
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x2B4FA18", Offset = "0x2B4FA18", VA = "0x2B4FA18", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000566")]
		public override int priority
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x2B4FA20", Offset = "0x2B4FA20", VA = "0x2B4FA20", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x2B4FA28", Offset = "0x2B4FA28", VA = "0x2B4FA28")]
		public ShowButtonAttribute(string buttonTitle, string methodnameCallback)
		{
		}
	}
	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14F94", Offset = "0xE14F94")]
	public class CallbackAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string methodName;

		[Token(Token = "0x17000567")]
		public override bool isDecorator
		{
			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x2DFA3B4", Offset = "0x2DFA3B4", VA = "0x2DFA3B4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000568")]
		public override int priority
		{
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x2DFA3BC", Offset = "0x2DFA3BC", VA = "0x2DFA3BC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x2DFA3C4", Offset = "0x2DFA3C4", VA = "0x2DFA3C4")]
		public CallbackAttribute(string methodName)
		{
		}
	}
	[Token(Token = "0x20006CE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14FA8", Offset = "0xE14FA8")]
	public class MinValueAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x17000569")]
		public override int priority
		{
			[Token(Token = "0x60023F3")]
			[Address(RVA = "0x2D0BB44", Offset = "0x2D0BB44", VA = "0x2D0BB44", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x2D0BB4C", Offset = "0x2D0BB4C", VA = "0x2D0BB4C")]
		public MinValueAttribute(float min)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x2D0BB80", Offset = "0x2D0BB80", VA = "0x2D0BB80")]
		public MinValueAttribute(int min)
		{
		}
	}
	[Token(Token = "0x20006CF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14FBC", Offset = "0xE14FBC")]
	public class DelayedFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x283A0C8", Offset = "0x283A0C8", VA = "0x283A0C8")]
		public DelayedFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14FD0", Offset = "0xE14FD0")]
	public class LayerFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x2CF7320", Offset = "0x2CF7320", VA = "0x2CF7320")]
		public LayerFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14FE4", Offset = "0xE14FE4")]
	public class TagFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x258EE3C", Offset = "0x258EE3C", VA = "0x258EE3C")]
		public TagFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE14FF8", Offset = "0xE14FF8")]
	public class TextAreaFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int numberOfLines;

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x2591FA8", Offset = "0x2591FA8", VA = "0x2591FA8")]
		public TextAreaFieldAttribute(int numberOfLines)
		{
		}
	}
	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE1500C", Offset = "0xE1500C")]
	public class PopupFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly object[] options;

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x26AB394", Offset = "0x26AB394", VA = "0x26AB394")]
		public PopupFieldAttribute(params object[] options)
		{
		}
	}
	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE15020", Offset = "0xE15020")]
	public class SliderFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x2586C50", Offset = "0x2586C50", VA = "0x2586C50")]
		public SliderFieldAttribute(float min, float max)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x2586C88", Offset = "0x2586C88", VA = "0x2586C88")]
		public SliderFieldAttribute(int min, int max)
		{
		}
	}
	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE15034", Offset = "0xE15034")]
	public class ForceObjectFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x2930198", Offset = "0x2930198", VA = "0x2930198")]
		public ForceObjectFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	public static class UndoUtility
	{
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23858", Offset = "0xE23858")]
		private static string <lastOperationName>k__BackingField;

		[Token(Token = "0x1700056A")]
		public static string lastOperationName
		{
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x27BA9FC", Offset = "0x27BA9FC", VA = "0x27BA9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C12C", Offset = "0xE2C12C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x27BAA48", Offset = "0x27BAA48", VA = "0x27BAA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C13C", Offset = "0xE2C13C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x27BAA9C", Offset = "0x27BAA9C", VA = "0x27BAA9C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C14C", Offset = "0xE2C14C")]
		public static void RecordObject(UnityEngine.Object target, string name)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x27BAAA0", Offset = "0x27BAAA0", VA = "0x27BAAA0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C184", Offset = "0xE2C184")]
		public static void RecordObjectComplete(UnityEngine.Object target, string name)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x27BAAA4", Offset = "0x27BAAA4", VA = "0x27BAAA4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C1BC", Offset = "0xE2C1BC")]
		public static void SetDirty(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x27BAAA8", Offset = "0x27BAAA8", VA = "0x27BAAA8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C1F4", Offset = "0xE2C1F4")]
		public static void RecordObject(UnityEngine.Object target, string name, Action operation)
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x27BAAC4", Offset = "0x27BAAC4", VA = "0x27BAAC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C22C", Offset = "0xE2C22C")]
		public static void RecordObjectComplete(UnityEngine.Object target, string name, Action operation)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x27BAAE0", Offset = "0x27BAAE0", VA = "0x27BAAE0")]
		public static string GetLastOperationNameOr(string operation)
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x27BAB70", Offset = "0x27BAB70", VA = "0x27BAB70")]
		public static void CheckUndo(UnityEngine.Object target, string name)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x27BAC2C", Offset = "0x27BAC2C", VA = "0x27BAC2C")]
		public static void CheckDirty(UnityEngine.Object target)
		{
		}
	}
}
namespace EzySlice
{
	[Token(Token = "0x20006D7")]
	public sealed class IntersectionResult
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool is_success;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Triangle[] upper_hull;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Triangle[] lower_hull;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3[] intersection_pt;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int upper_hull_count;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int lower_hull_count;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int intersection_pt_count;

		[Token(Token = "0x1700056B")]
		public Triangle[] upperHull
		{
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x2E33268", Offset = "0x2E33268", VA = "0x2E33268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		public Triangle[] lowerHull
		{
			[Token(Token = "0x600240A")]
			[Address(RVA = "0x2E33270", Offset = "0x2E33270", VA = "0x2E33270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056D")]
		public Vector3[] intersectionPoints
		{
			[Token(Token = "0x600240B")]
			[Address(RVA = "0x2E33278", Offset = "0x2E33278", VA = "0x2E33278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056E")]
		public int upperHullCount
		{
			[Token(Token = "0x600240C")]
			[Address(RVA = "0x2E33280", Offset = "0x2E33280", VA = "0x2E33280")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700056F")]
		public int lowerHullCount
		{
			[Token(Token = "0x600240D")]
			[Address(RVA = "0x2E33288", Offset = "0x2E33288", VA = "0x2E33288")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000570")]
		public int intersectionPointCount
		{
			[Token(Token = "0x600240E")]
			[Address(RVA = "0x2E33290", Offset = "0x2E33290", VA = "0x2E33290")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000571")]
		public bool isValid
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x2E33298", Offset = "0x2E33298", VA = "0x2E33298")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x2E331A4", Offset = "0x2E331A4", VA = "0x2E331A4")]
		public IntersectionResult()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x2E332A0", Offset = "0x2E332A0", VA = "0x2E332A0")]
		public IntersectionResult AddUpperHull(Triangle tri)
		{
			return null;
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x2E3333C", Offset = "0x2E3333C", VA = "0x2E3333C")]
		public IntersectionResult AddLowerHull(Triangle tri)
		{
			return null;
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x2E333D8", Offset = "0x2E333D8", VA = "0x2E333D8")]
		public void AddIntersectionPoint(Vector3 pt)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x2E33428", Offset = "0x2E33428", VA = "0x2E33428")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x2E33438", Offset = "0x2E33438", VA = "0x2E33438")]
		public void OnDebugDraw()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x2E33440", Offset = "0x2E33440", VA = "0x2E33440")]
		public void OnDebugDraw(Color drawColor)
		{
		}
	}
	[Token(Token = "0x20006D8")]
	public sealed class Intersector
	{
		[Token(Token = "0x40017E4")]
		public const float Epsilon = 0.0001f;

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x2E33444", Offset = "0x2E33444", VA = "0x2E33444")]
		public static bool Intersect(Plane pl, Line ln, out Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x2E33480", Offset = "0x2E33480", VA = "0x2E33480")]
		public static bool Intersect(Plane pl, Vector3 a, Vector3 b, out Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x2E33534", Offset = "0x2E33534", VA = "0x2E33534")]
		public static float TriArea2D(float x1, float y1, float x2, float y2, float x3, float y3)
		{
			return default(float);
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x2E33554", Offset = "0x2E33554", VA = "0x2E33554")]
		public static void Intersect(Plane pl, Triangle tri, IntersectionResult result)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x2E34F94", Offset = "0x2E34F94", VA = "0x2E34F94")]
		public Intersector()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public struct Line
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 m_pos_a;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Vector3 m_pos_b;

		[Token(Token = "0x17000572")]
		public float dist
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0x2CF8908", Offset = "0x2CF8908", VA = "0x2CF8908")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000573")]
		public float distSq
		{
			[Token(Token = "0x600241D")]
			[Address(RVA = "0x2CF891C", Offset = "0x2CF891C", VA = "0x2CF891C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000574")]
		public Vector3 positionA
		{
			[Token(Token = "0x600241E")]
			[Address(RVA = "0x2CF8960", Offset = "0x2CF8960", VA = "0x2CF8960")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000575")]
		public Vector3 positionB
		{
			[Token(Token = "0x600241F")]
			[Address(RVA = "0x2CF896C", Offset = "0x2CF896C", VA = "0x2CF896C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x2CF88F8", Offset = "0x2CF88F8", VA = "0x2CF88F8")]
		public Line(Vector3 pta, Vector3 ptb)
		{
		}
	}
	[Token(Token = "0x20006DA")]
	public enum SideOfPlane
	{
		[Token(Token = "0x40017E8")]
		UP,
		[Token(Token = "0x40017E9")]
		DOWN,
		[Token(Token = "0x40017EA")]
		ON
	}
	[Token(Token = "0x20006DB")]
	public struct Plane
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_normal;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_dist;

		[Token(Token = "0x17000576")]
		public Vector3 normal
		{
			[Token(Token = "0x6002426")]
			[Address(RVA = "0x26A8C9C", Offset = "0x26A8C9C", VA = "0x26A8C9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000577")]
		public float dist
		{
			[Token(Token = "0x6002427")]
			[Address(RVA = "0x26A8CA8", Offset = "0x26A8CA8", VA = "0x26A8CA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x26A8B18", Offset = "0x26A8B18", VA = "0x26A8B18")]
		public Plane(Vector3 pos, Vector3 norm)
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x26A8B38", Offset = "0x26A8B38", VA = "0x26A8B38")]
		public Plane(Vector3 norm, float dot)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x26A8B44", Offset = "0x26A8B44", VA = "0x26A8B44")]
		public Plane(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x26A8BCC", Offset = "0x26A8BCC", VA = "0x26A8BCC")]
		public void Compute(Vector3 pos, Vector3 norm)
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x26A8BEC", Offset = "0x26A8BEC", VA = "0x26A8BEC")]
		public void Compute(Transform trans)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x26A8C64", Offset = "0x26A8C64", VA = "0x26A8C64")]
		public void Compute(GameObject obj)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x26A8CB0", Offset = "0x26A8CB0", VA = "0x26A8CB0")]
		public SideOfPlane SideOf(Vector3 pt)
		{
			return default(SideOfPlane);
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x26A8D00", Offset = "0x26A8D00", VA = "0x26A8D00")]
		public void OnDebugDraw()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x26A8D08", Offset = "0x26A8D08", VA = "0x26A8D08")]
		public void OnDebugDraw(Color drawColor)
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public struct TextureRegion
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float pos_start_x;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private readonly float pos_start_y;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly float pos_end_x;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly float pos_end_y;

		[Token(Token = "0x17000578")]
		public float startX
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0x2591FD4", Offset = "0x2591FD4", VA = "0x2591FD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000579")]
		public float startY
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0x2591FDC", Offset = "0x2591FDC", VA = "0x2591FDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057A")]
		public float endX
		{
			[Token(Token = "0x600242E")]
			[Address(RVA = "0x2591FE4", Offset = "0x2591FE4", VA = "0x2591FE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057B")]
		public float endY
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x2591FEC", Offset = "0x2591FEC", VA = "0x2591FEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057C")]
		public Vector2 start
		{
			[Token(Token = "0x6002430")]
			[Address(RVA = "0x2591FF4", Offset = "0x2591FF4", VA = "0x2591FF4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700057D")]
		public Vector2 end
		{
			[Token(Token = "0x6002431")]
			[Address(RVA = "0x2591FFC", Offset = "0x2591FFC", VA = "0x2591FFC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x2586590", Offset = "0x2586590", VA = "0x2586590")]
		public TextureRegion(float startX, float startY, float endX, float endY)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x2592004", Offset = "0x2592004", VA = "0x2592004")]
		public Vector2 Map(Vector2 uv)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x2592020", Offset = "0x2592020", VA = "0x2592020")]
		public Vector2 Map(float x, float y)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x259203C", Offset = "0x259203C", VA = "0x259203C")]
		private static float MAP(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20006DD")]
	public static class TextureRegionExtension
	{
		[Token(Token = "0x6002435")]
		[Address(RVA = "0x2592058", Offset = "0x2592058", VA = "0x2592058")]
		public static TextureRegion GetTextureRegion(this Material mat, int pixX, int pixY, int pixWidth, int pixHeight)
		{
			return default(TextureRegion);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x25920A8", Offset = "0x25920A8", VA = "0x25920A8")]
		public static TextureRegion GetTextureRegion(this Texture tex, int pixX, int pixY, int pixWidth, int pixHeight)
		{
			return default(TextureRegion);
		}
	}
	[Token(Token = "0x20006DE")]
	public struct Triangle
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 m_pos_a;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Vector3 m_pos_b;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_pos_c;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_uv_set;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 m_uv_a;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 m_uv_b;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 m_uv_c;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_nor_set;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_nor_a;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_nor_b;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_nor_c;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_tan_set;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector4 m_tan_a;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector4 m_tan_b;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector4 m_tan_c;

		[Token(Token = "0x1700057E")]
		public Vector3 positionA
		{
			[Token(Token = "0x6002438")]
			[Address(RVA = "0x2598368", Offset = "0x2598368", VA = "0x2598368")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700057F")]
		public Vector3 positionB
		{
			[Token(Token = "0x6002439")]
			[Address(RVA = "0x2598374", Offset = "0x2598374", VA = "0x2598374")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000580")]
		public Vector3 positionC
		{
			[Token(Token = "0x600243A")]
			[Address(RVA = "0x2598380", Offset = "0x2598380", VA = "0x2598380")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000581")]
		public bool hasUV
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x259838C", Offset = "0x259838C", VA = "0x259838C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000582")]
		public Vector2 uvA
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0x2598394", Offset = "0x2598394", VA = "0x2598394")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000583")]
		public Vector2 uvB
		{
			[Token(Token = "0x600243E")]
			[Address(RVA = "0x259839C", Offset = "0x259839C", VA = "0x259839C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000584")]
		public Vector2 uvC
		{
			[Token(Token = "0x600243F")]
			[Address(RVA = "0x25983A4", Offset = "0x25983A4", VA = "0x25983A4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000585")]
		public bool hasNormal
		{
			[Token(Token = "0x6002440")]
			[Address(RVA = "0x25983AC", Offset = "0x25983AC", VA = "0x25983AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000586")]
		public Vector3 normalA
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x25983B4", Offset = "0x25983B4", VA = "0x25983B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000587")]
		public Vector3 normalB
		{
			[Token(Token = "0x6002443")]
			[Address(RVA = "0x25983C0", Offset = "0x25983C0", VA = "0x25983C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000588")]
		public Vector3 normalC
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0x25983CC", Offset = "0x25983CC", VA = "0x25983CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000589")]
		public bool hasTangent
		{
			[Token(Token = "0x6002445")]
			[Address(RVA = "0x25983D8", Offset = "0x25983D8", VA = "0x25983D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058A")]
		public Vector4 tangentA
		{
			[Token(Token = "0x6002447")]
			[Address(RVA = "0x25983E0", Offset = "0x25983E0", VA = "0x25983E0")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700058B")]
		public Vector4 tangentB
		{
			[Token(Token = "0x6002448")]
			[Address(RVA = "0x25983EC", Offset = "0x25983EC", VA = "0x25983EC")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700058C")]
		public Vector4 tangentC
		{
			[Token(Token = "0x6002449")]
			[Address(RVA = "0x25983F8", Offset = "0x25983F8", VA = "0x25983F8")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x2585848", Offset = "0x2585848", VA = "0x2585848")]
		public Triangle(Vector3 posa, Vector3 posb, Vector3 posc)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x2585910", Offset = "0x2585910", VA = "0x2585910")]
		public void SetUV(Vector2 uvA, Vector2 uvB, Vector2 uvC)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x2585928", Offset = "0x2585928", VA = "0x2585928")]
		public void SetNormal(Vector3 norA, Vector3 norB, Vector3 norC)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x2585950", Offset = "0x2585950", VA = "0x2585950")]
		public void SetTangent(Vector4 tanA, Vector4 tanB, Vector4 tanC)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x2598404", Offset = "0x2598404", VA = "0x2598404")]
		public void ComputeTangents()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x25986E0", Offset = "0x25986E0", VA = "0x25986E0")]
		public Vector3 Barycentric(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x25988AC", Offset = "0x25988AC", VA = "0x25988AC")]
		public Vector2 GenerateUV(Vector3 pt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x2598904", Offset = "0x2598904", VA = "0x2598904")]
		public Vector3 GenerateNormal(Vector3 pt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x2598980", Offset = "0x2598980", VA = "0x2598980")]
		public Vector4 GenerateTangent(Vector3 pt)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x2585974", Offset = "0x2585974", VA = "0x2585974")]
		public bool Split(Plane pl, IntersectionResult result)
		{
			return default(bool);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x2598AC0", Offset = "0x2598AC0", VA = "0x2598AC0")]
		public bool IsCW()
		{
			return default(bool);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x2598B20", Offset = "0x2598B20", VA = "0x2598B20")]
		public static float SignedSquare(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x2598B64", Offset = "0x2598B64", VA = "0x2598B64")]
		public void OnDebugDraw()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x2598B6C", Offset = "0x2598B6C", VA = "0x2598B6C")]
		public void OnDebugDraw(Color drawColor)
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public sealed class Triangulator
	{
		[Token(Token = "0x20006E0")]
		internal struct Mapped2D
		{
			[Token(Token = "0x4001800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Vector3 original;

			[Token(Token = "0x4001801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private readonly Vector2 mapped;

			[Token(Token = "0x1700058D")]
			public Vector2 mappedValue
			{
				[Token(Token = "0x6002458")]
				[Address(RVA = "0x3131430", Offset = "0x3131430", VA = "0x3131430")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x1700058E")]
			public Vector3 originalValue
			{
				[Token(Token = "0x6002459")]
				[Address(RVA = "0x3131438", Offset = "0x3131438", VA = "0x3131438")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0x31313F0", Offset = "0x31313F0", VA = "0x31313F0")]
			public Mapped2D(Vector3 newOriginal, Vector3 u, Vector3 v)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15058", Offset = "0xE15058")]
		private sealed class <>c
		{
			[Token(Token = "0x4001802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Mapped2D> <>9__2_0;

			[Token(Token = "0x600245B")]
			[Address(RVA = "0x31313B4", Offset = "0x31313B4", VA = "0x31313B4")]
			public <>c()
			{
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x31313BC", Offset = "0x31313BC", VA = "0x31313BC")]
			internal int <MonotoneChain>b__2_0(Mapped2D a, Mapped2D b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x27B18A0", Offset = "0x27B18A0", VA = "0x27B18A0")]
		public static bool MonotoneChain(List<Vector3> vertices, Vector3 normal, out List<Triangle> tri)
		{
			return default(bool);
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x27B1928", Offset = "0x27B1928", VA = "0x27B1928")]
		public static bool MonotoneChain(List<Vector3> vertices, Vector3 normal, out List<Triangle> tri, TextureRegion texRegion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x27B2188", Offset = "0x27B2188", VA = "0x27B2188")]
		public Triangulator()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public sealed class SlicedHull
	{
		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh upper_hull;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh lower_hull;

		[Token(Token = "0x1700058F")]
		public Mesh upperHull
		{
			[Token(Token = "0x6002464")]
			[Address(RVA = "0x2584B98", Offset = "0x2584B98", VA = "0x2584B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000590")]
		public Mesh lowerHull
		{
			[Token(Token = "0x6002465")]
			[Address(RVA = "0x2584BA0", Offset = "0x2584BA0", VA = "0x2584BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x2584420", Offset = "0x2584420", VA = "0x2584420")]
		public SlicedHull(Mesh upperHull, Mesh lowerHull)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x2584470", Offset = "0x2584470", VA = "0x2584470")]
		public GameObject CreateUpperHull(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x2584478", Offset = "0x2584478", VA = "0x2584478")]
		public GameObject CreateUpperHull(GameObject original, Material crossSectionMat)
		{
			return null;
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x2584780", Offset = "0x2584780", VA = "0x2584780")]
		public GameObject CreateLowerHull(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x2584788", Offset = "0x2584788", VA = "0x2584788")]
		public GameObject CreateLowerHull(GameObject original, Material crossSectionMat)
		{
			return null;
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x2584734", Offset = "0x2584734", VA = "0x2584734")]
		public GameObject CreateUpperHull()
		{
			return null;
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x2584A44", Offset = "0x2584A44", VA = "0x2584A44")]
		public GameObject CreateLowerHull()
		{
			return null;
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x2584A90", Offset = "0x2584A90", VA = "0x2584A90")]
		private static GameObject CreateEmptyObject(string name, Mesh hull)
		{
			return null;
		}
	}
	[Token(Token = "0x20006E3")]
	public sealed class Slicer
	{
		[Token(Token = "0x20006E4")]
		internal class SlicedSubmesh
		{
			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly List<Triangle> upperHull;

			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly List<Triangle> lowerHull;

			[Token(Token = "0x17000591")]
			public bool hasUV
			{
				[Token(Token = "0x600246F")]
				[Address(RVA = "0x312EED4", Offset = "0x312EED4", VA = "0x312EED4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000592")]
			public bool hasNormal
			{
				[Token(Token = "0x6002470")]
				[Address(RVA = "0x312EF60", Offset = "0x312EF60", VA = "0x312EF60")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000593")]
			public bool hasTangent
			{
				[Token(Token = "0x6002471")]
				[Address(RVA = "0x312EFEC", Offset = "0x312EFEC", VA = "0x312EFEC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000594")]
			public bool isValid
			{
				[Token(Token = "0x6002472")]
				[Address(RVA = "0x312F078", Offset = "0x312F078", VA = "0x312F078")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002473")]
			[Address(RVA = "0x312F0E8", Offset = "0x312F0E8", VA = "0x312F0E8")]
			public SlicedSubmesh()
			{
			}
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x2584BA8", Offset = "0x2584BA8", VA = "0x2584BA8")]
		public static SlicedHull Slice(GameObject obj, Plane pl, TextureRegion crossRegion, Material crossMaterial)
		{
			return null;
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x2584F64", Offset = "0x2584F64", VA = "0x2584F64")]
		public static SlicedHull Slice(Mesh sharedMesh, Plane pl, TextureRegion region, int crossIndex)
		{
			return null;
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x2585A28", Offset = "0x2585A28", VA = "0x2585A28")]
		private static SlicedHull CreateFrom(SlicedSubmesh[] meshes, List<Triangle> cross, int crossSectionIndex)
		{
			return null;
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x2585B48", Offset = "0x2585B48", VA = "0x2585B48")]
		private static Mesh CreateUpperHull(SlicedSubmesh[] mesh, int total, List<Triangle> crossSection, int crossSectionIndex)
		{
			return null;
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x2585B50", Offset = "0x2585B50", VA = "0x2585B50")]
		private static Mesh CreateLowerHull(SlicedSubmesh[] mesh, int total, List<Triangle> crossSection, int crossSectionIndex)
		{
			return null;
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x2585B58", Offset = "0x2585B58", VA = "0x2585B58")]
		private static Mesh CreateHull(SlicedSubmesh[] meshes, int total, List<Triangle> crossSection, int crossIndex, bool isUpper)
		{
			return null;
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x25859F4", Offset = "0x25859F4", VA = "0x25859F4")]
		private static List<Triangle> CreateFrom(List<Vector3> intPoints, Vector3 planeNormal, TextureRegion region)
		{
			return null;
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x2586574", Offset = "0x2586574", VA = "0x2586574")]
		public Slicer()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	public static class SlicerExtensions
	{
		[Token(Token = "0x6002474")]
		[Address(RVA = "0x258657C", Offset = "0x258657C", VA = "0x258657C")]
		public static SlicedHull Slice(this GameObject obj, Plane pl, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x25865A0", Offset = "0x25865A0", VA = "0x25865A0")]
		public static SlicedHull Slice(this GameObject obj, Vector3 position, Vector3 direction, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x25865C4", Offset = "0x25865C4", VA = "0x25865C4")]
		public static SlicedHull Slice(this GameObject obj, Vector3 position, Vector3 direction, TextureRegion textureRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x258659C", Offset = "0x258659C", VA = "0x258659C")]
		public static SlicedHull Slice(this GameObject obj, Plane pl, TextureRegion textureRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x2586764", Offset = "0x2586764", VA = "0x2586764")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Plane pl)
		{
			return null;
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x2586A64", Offset = "0x2586A64", VA = "0x2586A64")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Vector3 position, Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x2586A8C", Offset = "0x2586A8C", VA = "0x2586A8C")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Vector3 position, Vector3 direction, Material crossSectionMat)
		{
			return null;
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x2586AB0", Offset = "0x2586AB0", VA = "0x2586AB0")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Vector3 position, Vector3 direction, TextureRegion cuttingRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x258677C", Offset = "0x258677C", VA = "0x258677C")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Plane pl, TextureRegion cuttingRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}
	}
}
namespace Exploder
{
	[Token(Token = "0x20006E6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE15078", Offset = "0xE15078")]
	public class Array<T>
	{
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] array;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x17000595")]
		public int Count
		{
			[Token(Token = "0x600247F")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000596")]
		public T Item
		{
			[Token(Token = "0x6002480")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600247D")]
		public Array(int size)
		{
		}

		[Token(Token = "0x600247E")]
		public void Initialize(int newSize)
		{
		}

		[Token(Token = "0x6002481")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002482")]
		public void Add(T data)
		{
		}

		[Token(Token = "0x6002483")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE150B0", Offset = "0xE150B0")]
	internal class ArrayDictionary<T>
	{
		[Token(Token = "0x20006E8")]
		private struct DicItem
		{
			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;
		}

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Size;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DicItem[] dictionary;

		[Token(Token = "0x17000597")]
		public T Item
		{
			[Token(Token = "0x6002486")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6002487")]
			set
			{
			}
		}

		[Token(Token = "0x6002484")]
		public ArrayDictionary(int size)
		{
		}

		[Token(Token = "0x6002485")]
		public bool ContainsKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002488")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002489")]
		public void Add(int key, T data)
		{
		}

		[Token(Token = "0x600248A")]
		public void Remove(int key)
		{
		}

		[Token(Token = "0x600248B")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x600248C")]
		public bool TryGetValue(int key, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600248D")]
		public T GetFirstValue()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20006E9")]
	internal class BakeSkinManager
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject parent;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GameObject> bakedObjects;

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x2AAB5DC", Offset = "0x2AAB5DC", VA = "0x2AAB5DC")]
		public BakeSkinManager(Core core)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x2AAB734", Offset = "0x2AAB734", VA = "0x2AAB734")]
		public GameObject CreateBakeObject(string name)
		{
			return null;
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x2AAB808", Offset = "0x2AAB808", VA = "0x2AAB808")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public class Contour
	{
		[Token(Token = "0x20006EB")]
		private struct MidPoint
		{
			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexId;

			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int idNext;

			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int idPrev;
		}

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Dictionary<int, int>> contour;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArrayDictionary<MidPoint> midPoints;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LSHash lsHash;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23868", Offset = "0xE23868")]
		private int <MidPointsCount>k__BackingField;

		[Token(Token = "0x17000598")]
		public int MidPointsCount
		{
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x282C2C8", Offset = "0x282C2C8", VA = "0x282C2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C314", Offset = "0xE2C314")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x282C2D0", Offset = "0x282C2D0", VA = "0x282C2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C324", Offset = "0xE2C324")]
			private set
			{
			}
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x282BFBC", Offset = "0x282BFBC", VA = "0x282BFBC")]
		public Contour(int trianglesNum)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x282BFEC", Offset = "0x282BFEC", VA = "0x282BFEC")]
		public void AllocateBuffers(int trianglesNum)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x282C2D8", Offset = "0x282C2D8", VA = "0x282C2D8")]
		public void AddTriangle(int triangleID, int id0, int id1, Vector3 v0, Vector3 v1)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x282C51C", Offset = "0x282C51C", VA = "0x282C51C")]
		public bool FindContours()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006EC")]
	internal class Core : Singleton<Core>
	{
		[NonSerialized]
		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderParams parameters;

		[NonSerialized]
		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderQueue queue;

		[NonSerialized]
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stopwatch explosionWatch;

		[NonSerialized]
		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Stopwatch frameWatch;

		[NonSerialized]
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HashSet<MeshObject> meshSet;

		[NonSerialized]
		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<int, int> targetFragments;

		[NonSerialized]
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshObject> postList;

		[NonSerialized]
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Fragment> pool;

		[NonSerialized]
		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CrackManager crackManager;

		[NonSerialized]
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int processingFrames;

		[NonSerialized]
		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int poolIdx;

		[NonSerialized]
		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool splitMeshIslands;

		[NonSerialized]
		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BakeSkinManager bakeSkinManager;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ExploderTask[] tasks;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TaskType currTaskType;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool initialized;

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x282D68C", Offset = "0x282D68C", VA = "0x282D68C")]
		public void Initialize(ExploderObject exploder)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x282E138", Offset = "0x282E138", VA = "0x282E138")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] obj)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x282E158", Offset = "0x282E158", VA = "0x282E158")]
		public void ExplodeCracked(GameObject obj, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x282E548", Offset = "0x282E548", VA = "0x282E548")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x282E800", Offset = "0x282E800", VA = "0x282E800")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x282E87C", Offset = "0x282E87C", VA = "0x282E87C")]
		public void StartExplosionFromQueue(ExploderParams p)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x282EBB4", Offset = "0x282EBB4", VA = "0x282EBB4")]
		public void Update()
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x282ECC4", Offset = "0x282ECC4", VA = "0x282ECC4", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x282DFDC", Offset = "0x282DFDC", VA = "0x282DFDC")]
		private void PreAllocateBuffers()
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x282EABC", Offset = "0x282EABC", VA = "0x282EABC")]
		private bool RunTask(TaskType taskType, float budget = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x282EA74", Offset = "0x282EA74", VA = "0x282EA74")]
		private void InitTask(TaskType taskType)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x282EB04", Offset = "0x282EB04", VA = "0x282EB04")]
		private TaskType NextTask(TaskType taskType)
		{
			return default(TaskType);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x282ED78", Offset = "0x282ED78", VA = "0x282ED78")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	internal class CrackManager
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<GameObject, CrackedObject> crackedObjects;

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x282DB28", Offset = "0x282DB28", VA = "0x282DB28")]
		public CrackManager(Core core)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x282F108", Offset = "0x282F108", VA = "0x282F108")]
		public CrackedObject Create(GameObject originalObject, ExploderParams parameters)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x282E220", Offset = "0x282E220", VA = "0x282E220")]
		public long Explode(GameObject gameObject)
		{
			return default(long);
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x282E678", Offset = "0x282E678", VA = "0x282E678")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x282E3DC", Offset = "0x282E3DC", VA = "0x282E3DC")]
		public long ExplodeAll()
		{
			return default(long);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x282E818", Offset = "0x282E818", VA = "0x282E818")]
		public bool IsCracked(GameObject gameObject)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006EE")]
	internal class CrackedObject
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Fragment> pool;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch watch;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Quaternion initRot;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 initPos;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly GameObject originalObject;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExploderParams parameters;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly FractureGrid fractureGrid;

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x282F1A8", Offset = "0x282F1A8", VA = "0x282F1A8")]
		public CrackedObject(GameObject originalObject, ExploderParams parameters)
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x282FAF8", Offset = "0x282FAF8", VA = "0x282FAF8")]
		public void CalculateFractureGrid()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x282F2CC", Offset = "0x282F2CC", VA = "0x282F2CC")]
		public long Explode()
		{
			return default(long);
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x282F7C4", Offset = "0x282F7C4", VA = "0x282F7C4")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}
	}
	[Token(Token = "0x20006EF")]
	internal class CuttingPlane
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random random;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Plane plane;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Core core;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] rectAxis;

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x2833140", Offset = "0x2833140", VA = "0x2833140")]
		public CuttingPlane(Core core)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x2835EBC", Offset = "0x2835EBC", VA = "0x2835EBC")]
		private Plane GetRandomPlane(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x2835F74", Offset = "0x2835F74", VA = "0x2835F74")]
		private Plane GetRectangularRegularPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x28360BC", Offset = "0x28360BC", VA = "0x28360BC")]
		private Plane GetRectangularRandom(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x28352CC", Offset = "0x28352CC", VA = "0x28352CC")]
		public Plane GetPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}
	}
	[Token(Token = "0x20006F0")]
	public class ExploderParams
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 ForceVector;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CubeRadius;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 HitPosition;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ShotDir;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Force;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float FrameBudget;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Radius;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BulletSize;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int id;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int TargetFragments;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int FragmentPoolSize;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject.ThreadOptions ThreadOptions;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ExploderObject.OnExplosion Callback;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ExploderObject.CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] Targets;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject ExploderGameObject;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool UseCubeRadius;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool DontUseTag;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool UseForceVector;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool ExplodeSelf;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool HideSelf;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		public bool Use2DCollision;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool DisableTriangulation;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool Crack;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool processing;

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x28CBF4C", Offset = "0x28CBF4C", VA = "0x28CBF4C")]
		public ExploderParams(ExploderObject exploder)
		{
		}
	}
	[Token(Token = "0x20006F1")]
	internal class ExploderQueue
	{
		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<ExploderParams> queue;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Core core;

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x28CC118", Offset = "0x28CC118", VA = "0x28CC118")]
		public ExploderQueue(Core core)
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x28CC1B8", Offset = "0x28CC1B8", VA = "0x28CC1B8")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] target)
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x28CC294", Offset = "0x28CC294", VA = "0x28CC294")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x28CC34C", Offset = "0x28CC34C", VA = "0x28CC34C")]
		public void OnExplosionFinished(int id, long ellapsedMS)
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public struct ExploderTransform
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x28CC75C", Offset = "0x28CC75C", VA = "0x28CC75C")]
		public ExploderTransform(Transform unityTransform)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x28CC7D8", Offset = "0x28CC7D8", VA = "0x28CC7D8")]
		public Vector3 InverseTransformDirection(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x28CC828", Offset = "0x28CC828", VA = "0x28CC828")]
		public Vector3 InverseTransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x28CC8B8", Offset = "0x28CC8B8", VA = "0x28CC8B8")]
		public Vector3 TransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20006F3")]
	internal class FractureGrid
	{
		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x29304C8", Offset = "0x29304C8", VA = "0x29304C8")]
		public FractureGrid(CrackedObject obj)
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x29304D0", Offset = "0x29304D0", VA = "0x29304D0")]
		public void CreateGrid()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class LSHash
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] buckets;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float bucketSize2;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int count;

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x2E38F70", Offset = "0x2E38F70", VA = "0x2E38F70")]
		public LSHash(float bucketSize, int allocSize)
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x2E39000", Offset = "0x2E39000", VA = "0x2E39000")]
		public int Capacity()
		{
			return default(int);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x2E3901C", Offset = "0x2E3901C", VA = "0x2E3901C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x2E390A0", Offset = "0x2E390A0", VA = "0x2E390A0")]
		public int Hash(Vector3 p)
		{
			return default(int);
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x2E39178", Offset = "0x2E39178", VA = "0x2E39178")]
		public void Hash(Vector3 p0, Vector3 p1, out int hash0, out int hash1)
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class ExploderMesh
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] triangles;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 centroid;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 min;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 max;

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x28CAD48", Offset = "0x28CAD48", VA = "0x28CAD48")]
		public ExploderMesh()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x28CAD50", Offset = "0x28CAD50", VA = "0x28CAD50")]
		public ExploderMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x28CAE9C", Offset = "0x28CAE9C", VA = "0x28CAE9C")]
		public static void CalculateCentroid(List<Vector3> vertices, ref Vector3 ctr, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x28CB204", Offset = "0x28CB204", VA = "0x28CB204")]
		public Mesh ToUnityMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x20006F6")]
	public class MeshCutter
	{
		[Token(Token = "0x20006F7")]
		private struct Triangle
		{
			[Token(Token = "0x400187B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] ids;

			[Token(Token = "0x400187C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] pos;

			[Token(Token = "0x400187D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normal;

			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uvs;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] colors;
		}

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int>[] triangles;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3>[] vertices;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3>[] normals;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2>[] uvs;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector4>[] tangents;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Color32>[] vertexColors;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> cutTris;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triCache;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] centroid;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triCounter;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Array<int> polygonIndicesArray;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Contour contour;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<long, int>[] cutVertCache;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, int>[] cornerVertCache;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int contourBufferSize;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color crossSectionVertexColour;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector4 crossSectionUV;

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x2D01F20", Offset = "0x2D01F20", VA = "0x2D01F20")]
		public void Init(int trianglesNum, int verticesNum)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x2D01F5C", Offset = "0x2D01F5C", VA = "0x2D01F5C")]
		private void AllocateBuffers(int trianglesNum, int verticesNum, bool useMeshTangents, bool useVertexColors)
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x2D02A88", Offset = "0x2D02A88", VA = "0x2D02A88")]
		private void AllocateContours(int cutTrianglesNum)
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x2D02FA4", Offset = "0x2D02FA4", VA = "0x2D02FA4")]
		public float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes, Color crossSectionVertexColor, Vector4 crossUV)
		{
			return default(float);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x2D02FC0", Offset = "0x2D02FC0", VA = "0x2D02FC0")]
		private float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes)
		{
			return default(float);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x2D08EE8", Offset = "0x2D08EE8", VA = "0x2D08EE8")]
		private int AddIntersectionPoint(Vector3 pos, Triangle tri, int edge0, int edge1, Dictionary<long, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors32, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x2D092A8", Offset = "0x2D092A8", VA = "0x2D092A8")]
		private int AddTrianglePoint(Vector3 pos, Vector3 normal, Vector2 uv, Vector4 tangent, Color32 color, int idx, int[] triCache, Dictionary<int, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x2D094E4", Offset = "0x2D094E4", VA = "0x2D094E4")]
		private void Triangulate(List<Dictionary<int, int>> contours, Plane plane, List<Vector3>[] vertices, List<Vector3>[] normals, List<Vector2>[] uvs, List<Vector4>[] tangents, List<Color32>[] colors, List<int>[] triangles, bool uvCutMesh, bool useTangents, bool useColors, bool useNormals)
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x2D0A79C", Offset = "0x2D0A79C", VA = "0x2D0A79C")]
		public MeshCutter()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	internal struct MeshObject
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExploderMesh mesh;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderTransform transform;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform parent;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion rotation;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 localScale;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject original;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExploderOption option;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject skinnedOriginal;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bakeObject;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float distanceRatio;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int id;
	}
	[Token(Token = "0x20006F9")]
	public static class MeshUtils
	{
		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x2D0A6C8", Offset = "0x2D0A6C8", VA = "0x2D0A6C8")]
		public static Vector3 ComputeBarycentricCoordinates(Vector3 a, Vector3 b, Vector3 c, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024D2")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x2D0A7A4", Offset = "0x2D0A7A4", VA = "0x2D0A7A4")]
		public static void CenterPivot(Vector3[] vertices, Vector3 centroid)
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x2D0A814", Offset = "0x2D0A814", VA = "0x2D0A814")]
		public static List<ExploderMesh> IsolateMeshIslands(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x2D0B9E4", Offset = "0x2D0B9E4", VA = "0x2D0B9E4")]
		public static void GeneratePolygonCollider(PolygonCollider2D collider, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class Plane
	{
		[Token(Token = "0x20006FB")]
		[Flags]
		public enum PointClass
		{
			[Token(Token = "0x4001893")]
			Coplanar = 0,
			[Token(Token = "0x4001894")]
			Front = 1,
			[Token(Token = "0x4001895")]
			Back = 2,
			[Token(Token = "0x4001896")]
			Intersection = 3
		}

		[Token(Token = "0x400188E")]
		private const float epsylon = 0.0001f;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Normal;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23878", Offset = "0xE23878")]
		private Vector3 <Pnt>k__BackingField;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x17000599")]
		public Vector3 Pnt
		{
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x26A8524", Offset = "0x26A8524", VA = "0x26A8524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C334", Offset = "0xE2C334")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x26A8530", Offset = "0x26A8530", VA = "0x26A8530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C344", Offset = "0xE2C344")]
			private set
			{
			}
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x26A853C", Offset = "0x26A853C", VA = "0x26A853C")]
		public Plane(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x26A8604", Offset = "0x26A8604", VA = "0x26A8604")]
		public Plane(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x26A8674", Offset = "0x26A8674", VA = "0x26A8674")]
		public void Set(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x26A86EC", Offset = "0x26A86EC", VA = "0x26A86EC")]
		public Plane(Plane instance)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x26A8744", Offset = "0x26A8744", VA = "0x26A8744")]
		public PointClass ClassifyPoint(Vector3 p)
		{
			return default(PointClass);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x26A8794", Offset = "0x26A8794", VA = "0x26A8794")]
		public bool GetSide(Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x26A87CC", Offset = "0x26A87CC", VA = "0x26A87CC")]
		public void Flip()
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x26A87F4", Offset = "0x26A87F4", VA = "0x26A87F4")]
		public bool GetSideFix(ref Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x26A88C0", Offset = "0x26A88C0", VA = "0x26A88C0")]
		public bool SameSide(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x26A8900", Offset = "0x26A8900", VA = "0x26A8900")]
		public bool IntersectSegment(Vector3 a, Vector3 b, out float t, ref Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x26A89CC", Offset = "0x26A89CC", VA = "0x26A89CC")]
		public void InverseTransform(ExploderTransform transform)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x26A8A54", Offset = "0x26A8A54", VA = "0x26A8A54")]
		public Matrix4x4 GetPlaneMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x20006FC")]
	public class Polygon
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] Points;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float Area;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Min;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 Max;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Polygon> holes;

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x26AA0D0", Offset = "0x26AA0D0", VA = "0x26AA0D0")]
		public Polygon(Vector2[] pnts)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x26AA17C", Offset = "0x26AA17C", VA = "0x26AA17C")]
		public float GetArea()
		{
			return default(float);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x26AA290", Offset = "0x26AA290", VA = "0x26AA290")]
		public bool IsPointInside(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x26AA3A0", Offset = "0x26AA3A0", VA = "0x26AA3A0")]
		public bool IsPolygonInside(Polygon polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x26AA3F8", Offset = "0x26AA3F8", VA = "0x26AA3F8")]
		public void AddHole(Polygon polygon)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x26AA45C", Offset = "0x26AA45C", VA = "0x26AA45C")]
		public bool Triangulate(Array<int> indicesArray)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x26AB120", Offset = "0x26AB120", VA = "0x26AB120")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x26AB318", Offset = "0x26AB318", VA = "0x26AB318")]
		private bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006FD")]
	internal class CutterMT : CutterST
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected readonly int THREAD_MAX;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly CutterWorker[] workers;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] splitIDs;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Stopwatch localWatch;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool cutInitialized;

		[Token(Token = "0x1700059A")]
		public override TaskType Type
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x2833498", Offset = "0x2833498", VA = "0x2833498", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x282DCF8", Offset = "0x282DCF8", VA = "0x282DCF8")]
		public CutterMT(Core Core)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x28334A0", Offset = "0x28334A0", VA = "0x28334A0", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x2833604", Offset = "0x2833604", VA = "0x2833604", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x28336A4", Offset = "0x28336A4", VA = "0x28336A4", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x28338A4", Offset = "0x28338A4", VA = "0x28338A4", Slot = "8")]
		protected override bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x28345F8", Offset = "0x28345F8", VA = "0x28345F8")]
		private int[] SplitMeshTargetFragments(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x20006FE")]
	internal class CutterST : ExploderTask
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly MeshCutter cutter;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cutAttempt;

		[Token(Token = "0x1700059B")]
		public override TaskType Type
		{
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x283488C", Offset = "0x283488C", VA = "0x283488C", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x282DBAC", Offset = "0x282DBAC", VA = "0x282DBAC")]
		public CutterST(Core Core)
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x2833528", Offset = "0x2833528", VA = "0x2833528", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x2834894", Offset = "0x2834894", VA = "0x2834894", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x28348E0", Offset = "0x28348E0", VA = "0x28348E0", Slot = "8")]
		protected virtual bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x28343E8", Offset = "0x28343E8", VA = "0x28343E8")]
		protected List<ExploderMesh> CutSingleMesh(MeshObject mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x20006FF")]
	internal class CutterWorker
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly HashSet<MeshObject> meshSet;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Core core;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool running;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int cutAttempt;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ManualResetEvent mre;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread thread;

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x283325C", Offset = "0x283325C", VA = "0x283325C")]
		public CutterWorker(Core core, CuttingPlane cuttingPlane)
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x28335A0", Offset = "0x28335A0", VA = "0x28335A0")]
		public void Init()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x2834770", Offset = "0x2834770", VA = "0x2834770")]
		public void AddMesh(MeshObject meshObject)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x283484C", Offset = "0x283484C", VA = "0x283484C")]
		public void Run()
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x2835324", Offset = "0x2835324", VA = "0x2835324")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x2833800", Offset = "0x2833800", VA = "0x2833800")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x283382C", Offset = "0x283382C", VA = "0x283382C")]
		public HashSet<MeshObject> GetResults()
		{
			return null;
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x2833680", Offset = "0x2833680", VA = "0x2833680")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x28354B0", Offset = "0x28354B0", VA = "0x28354B0")]
		private void Cut()
		{
		}
	}
	[Token(Token = "0x2000700")]
	public enum TaskType
	{
		[Token(Token = "0x40018B1")]
		None,
		[Token(Token = "0x40018B2")]
		Preprocess,
		[Token(Token = "0x40018B3")]
		ProcessCutter,
		[Token(Token = "0x40018B4")]
		IsolateMeshIslands,
		[Token(Token = "0x40018B5")]
		PostprocessExplode,
		[Token(Token = "0x40018B6")]
		PostprocessCrack,
		[Token(Token = "0x40018B7")]
		TaskMax
	}
	[Token(Token = "0x2000701")]
	internal abstract class ExploderTask
	{
		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Core core;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23888", Offset = "0xE23888")]
		private Stopwatch <Watch>k__BackingField;

		[Token(Token = "0x1700059C")]
		public abstract TaskType Type
		{
			[Token(Token = "0x6002502")]
			get;
		}

		[Token(Token = "0x1700059D")]
		public Stopwatch Watch
		{
			[Token(Token = "0x6002503")]
			[Address(RVA = "0x28CC674", Offset = "0x28CC674", VA = "0x28CC674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C354", Offset = "0xE2C354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002504")]
			[Address(RVA = "0x28CC67C", Offset = "0x28CC67C", VA = "0x28CC67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C364", Offset = "0xE2C364")]
			private set
			{
			}
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x28CC684", Offset = "0x28CC684", VA = "0x28CC684")]
		protected ExploderTask(Core Core)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x28CC71C", Offset = "0x28CC71C", VA = "0x28CC71C", Slot = "5")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x28CC720", Offset = "0x28CC720", VA = "0x28CC720", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6002508")]
		public abstract bool Run(float frameBudget);
	}
	[Token(Token = "0x2000702")]
	internal class IsolateMeshIslands : ExploderTask
	{
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshObject> islands;

		[Token(Token = "0x1700059E")]
		public override TaskType Type
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0x2E365A8", Offset = "0x2E365A8", VA = "0x2E365A8", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x2E36514", Offset = "0x2E36514", VA = "0x2E36514")]
		public IsolateMeshIslands(Core Core)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x2E365B0", Offset = "0x2E365B0", VA = "0x2E365B0", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x2E36680", Offset = "0x2E36680", VA = "0x2E36680", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000703")]
	internal abstract class Postprocess : ExploderTask
	{
		[Token(Token = "0x600250D")]
		[Address(RVA = "0x26ACBC8", Offset = "0x26ACBC8", VA = "0x26ACBC8")]
		protected Postprocess(Core Core)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x26ACBD0", Offset = "0x26ACBD0", VA = "0x26ACBD0", Slot = "6")]
		public override void Init()
		{
		}
	}
	[Token(Token = "0x2000704")]
	internal class PostprocessCrack : Postprocess
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrackedObject crackedObject;

		[Token(Token = "0x1700059F")]
		public override TaskType Type
		{
			[Token(Token = "0x6002510")]
			[Address(RVA = "0x26ACC8C", Offset = "0x26ACC8C", VA = "0x26ACC8C", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x26ACC84", Offset = "0x26ACC84", VA = "0x26ACC84")]
		public PostprocessCrack(Core Core)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x26ACC94", Offset = "0x26ACC94", VA = "0x26ACC94", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x26ACEE4", Offset = "0x26ACEE4", VA = "0x26ACEE4", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000705")]
	internal class PostprocessExplode : Postprocess
	{
		[Token(Token = "0x170005A0")]
		public override TaskType Type
		{
			[Token(Token = "0x6002514")]
			[Address(RVA = "0x267BBB0", Offset = "0x267BBB0", VA = "0x267BBB0", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x267BBA8", Offset = "0x267BBA8", VA = "0x267BBA8")]
		public PostprocessExplode(Core Core)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x267BBB8", Offset = "0x267BBB8", VA = "0x267BBB8", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x267BD20", Offset = "0x267BD20", VA = "0x267BD20", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000706")]
	internal class Preprocess : ExploderTask
	{
		[Token(Token = "0x2000707")]
		private struct MeshData
		{
			[Token(Token = "0x40018BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sharedMesh;

			[Token(Token = "0x40018BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material sharedMaterial;

			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parentObject;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject skinnedBakeOriginal;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 centroid;
		}

		[Token(Token = "0x170005A1")]
		public override TaskType Type
		{
			[Token(Token = "0x6002518")]
			[Address(RVA = "0x267C878", Offset = "0x267C878", VA = "0x267C878", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x267C7D8", Offset = "0x267C7D8", VA = "0x267C7D8")]
		public Preprocess(Core Core)
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x267C880", Offset = "0x267C880", VA = "0x267C880", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x267C8E8", Offset = "0x267C8E8", VA = "0x267C8E8", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x267CBB8", Offset = "0x267CBB8", VA = "0x267CBB8")]
		private List<MeshObject> GetMeshList()
		{
			return null;
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x267DF9C", Offset = "0x267DF9C", VA = "0x267DF9C")]
		private List<MeshData> GetMeshData(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x267E718", Offset = "0x267E718", VA = "0x267E718")]
		private float GetDistanceRatio(float distance, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x267DDEC", Offset = "0x267DDEC", VA = "0x267DDEC")]
		private bool IsInRadius(GameObject o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000708")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject Exploder;

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x28C5DB8", Offset = "0x28C5DB8", VA = "0x28C5DB8")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x28C5F2C", Offset = "0x28C5F2C", VA = "0x28C5F2C")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x28C5F30", Offset = "0x28C5F30", VA = "0x28C5F30")]
		private void CrackAndExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x28C60A4", Offset = "0x28C60A4", VA = "0x28C60A4")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x28C6158", Offset = "0x28C6158", VA = "0x28C6158")]
		public Example()
		{
		}
	}
	[Token(Token = "0x2000709")]
	public class Explodable : MonoBehaviour
	{
		[Token(Token = "0x6002524")]
		[Address(RVA = "0x28CA708", Offset = "0x28CA708", VA = "0x28CA708")]
		public Explodable()
		{
		}
	}
	[Token(Token = "0x200070A")]
	public class ExploderObject : MonoBehaviour
	{
		[Token(Token = "0x200070B")]
		public enum ThreadOptions
		{
			[Token(Token = "0x40018DD")]
			WorkerThread1x,
			[Token(Token = "0x40018DE")]
			WorkerThread2x,
			[Token(Token = "0x40018DF")]
			WorkerThread3x,
			[Token(Token = "0x40018E0")]
			Disabled
		}

		[Token(Token = "0x200070C")]
		public enum CuttingStyleOption
		{
			[Token(Token = "0x40018E2")]
			Random,
			[Token(Token = "0x40018E3")]
			RectangularRandom,
			[Token(Token = "0x40018E4")]
			RectangularRegular
		}

		[Token(Token = "0x200070D")]
		public delegate void OnExplosion(float timeMS, ExplosionState state);

		[Token(Token = "0x200070E")]
		public enum ExplosionState
		{
			[Token(Token = "0x40018E6")]
			ExplosionStarted,
			[Token(Token = "0x40018E7")]
			ExplosionFinished,
			[Token(Token = "0x40018E8")]
			ObjectCracked
		}

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Tag;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DontUseTag;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CubeRadius;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseCubeRadius;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ForceVector;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseForceVector;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FrameBudget;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int TargetFragments;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ThreadOptions ThreadOption;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ExplodeSelf;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool DisableRadiusScan;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool HideSelf;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool SplitMeshIslands;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool DisableTriangulation;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int FragmentPoolSize;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Use2DCollision;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CuttingStyleOption CuttingStyle;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Core core;

		[Token(Token = "0x170005A2")]
		public int ProcessingFrames
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0x28CB8D8", Offset = "0x28CB8D8", VA = "0x28CB8D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x28CAC88", Offset = "0x28CAC88", VA = "0x28CAC88")]
		public void ExplodeRadius()
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x28CB73C", Offset = "0x28CB73C", VA = "0x28CB73C")]
		public void ExplodeRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x28CB76C", Offset = "0x28CB76C", VA = "0x28CB76C")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x28C5E50", Offset = "0x28C5E50", VA = "0x28C5E50")]
		public void ExplodeObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x28CA7E4", Offset = "0x28CA7E4", VA = "0x28CA7E4")]
		public void ExplodeObjects(params GameObject[] objects)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x28CB774", Offset = "0x28CB774", VA = "0x28CB774")]
		public void ExplodeObjects(OnExplosion callback, params GameObject[] objects)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x28CB7A4", Offset = "0x28CB7A4", VA = "0x28CB7A4")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x28CB7C4", Offset = "0x28CB7C4", VA = "0x28CB7C4")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, OnExplosion callback)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x28CB7E0", Offset = "0x28CB7E0", VA = "0x28CB7E0")]
		public void CrackRadius()
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x28CB7E8", Offset = "0x28CB7E8", VA = "0x28CB7E8")]
		public void CrackRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x28CB818", Offset = "0x28CB818", VA = "0x28CB818")]
		public void CrackObject(GameObject obj)
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x28C5FC8", Offset = "0x28C5FC8", VA = "0x28C5FC8")]
		public void CrackObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x28CB820", Offset = "0x28CB820", VA = "0x28CB820")]
		public bool CanCrack()
		{
			return default(bool);
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x28CB85C", Offset = "0x28CB85C", VA = "0x28CB85C")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x28CB878", Offset = "0x28CB878", VA = "0x28CB878")]
		public void ExplodeCracked(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x28CB894", Offset = "0x28CB894", VA = "0x28CB894")]
		public void ExplodeCracked(GameObject obj)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x28C6134", Offset = "0x28C6134", VA = "0x28C6134")]
		public void ExplodeCracked(OnExplosion callback)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x28CB8B4", Offset = "0x28CB8B4", VA = "0x28CB8B4")]
		public void ExplodeCracked()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x28CB8F4", Offset = "0x28CB8F4", VA = "0x28CB8F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x28CB994", Offset = "0x28CB994", VA = "0x28CB994")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x28CBB20", Offset = "0x28CBB20", VA = "0x28CBB20")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x28CBC30", Offset = "0x28CBC30", VA = "0x28CBC30")]
		public ExploderObject()
		{
		}
	}
	[Token(Token = "0x200070F")]
	public class ExploderOption : MonoBehaviour
	{
		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Plane2D;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color CrossSectionVertexColor;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 CrossSectionUV;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool SplitMeshIslands;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool UseLocalForce;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FragmentMaterial;

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x28CBE88", Offset = "0x28CBE88", VA = "0x28CBE88")]
		public void DuplicateSettings(ExploderOption options)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x28CBEDC", Offset = "0x28CBEDC", VA = "0x28CBEDC")]
		public ExploderOption()
		{
		}
	}
	[Token(Token = "0x2000710")]
	public class Fragment : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Cracked;

		[NonSerialized]
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Visible;

		[NonSerialized]
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsActive;

		[NonSerialized]
		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRenderer;

		[NonSerialized]
		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshCollider meshCollider;

		[NonSerialized]
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter meshFilter;

		[NonSerialized]
		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoxCollider boxCollider;

		[NonSerialized]
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PolygonCollider2D polygonCollider2D;

		[NonSerialized]
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject particleChild;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigid2D;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidBody;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ExploderParams settings;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 originalScale;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float visibilityCheckTimer;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float deactivateTimer;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float emmitersTimeout;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stopEmitOnTimeout;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool collided;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioSource activePlayback;

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x2930544", Offset = "0x2930544", VA = "0x2930544")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x29305DC", Offset = "0x29305DC", VA = "0x29305DC")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x2930674", Offset = "0x2930674", VA = "0x2930674")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x293070C", Offset = "0x293070C", VA = "0x293070C")]
		public void SetConstraints(RigidbodyConstraints constraints)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x29307AC", Offset = "0x29307AC", VA = "0x29307AC")]
		public void InitSFX(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x2930A7C", Offset = "0x2930A7C", VA = "0x2930A7C")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x2930C1C", Offset = "0x2930C1C", VA = "0x2930C1C")]
		public void DisableColliders(bool disable, bool meshColliders, bool physics2d)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x2930EA0", Offset = "0x2930EA0", VA = "0x2930EA0")]
		public void ApplyExplosion(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original, ExploderParams set)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x2931240", Offset = "0x2931240", VA = "0x2931240")]
		private void ApplyExplosion2D(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x29314B8", Offset = "0x29314B8", VA = "0x29314B8")]
		public void RefreshComponentsCache()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x2931674", Offset = "0x2931674", VA = "0x2931674")]
		public void Explode(ExploderParams parameters)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x29317D0", Offset = "0x29317D0", VA = "0x29317D0")]
		public void Emit(bool centerToBound)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x2931950", Offset = "0x2931950", VA = "0x2931950")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x2931B64", Offset = "0x2931B64", VA = "0x2931B64")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x2931C48", Offset = "0x2931C48", VA = "0x2931C48")]
		private void Start()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x2931C74", Offset = "0x2931C74", VA = "0x2931C74")]
		private void Update()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x293217C", Offset = "0x293217C", VA = "0x293217C")]
		public Fragment()
		{
		}
	}
	[Token(Token = "0x2000711")]
	public enum DeactivateOptions
	{
		[Token(Token = "0x4001906")]
		Never,
		[Token(Token = "0x4001907")]
		OutsideOfCamera,
		[Token(Token = "0x4001908")]
		Timeout
	}
	[Token(Token = "0x2000712")]
	public enum FadeoutOptions
	{
		[Token(Token = "0x400190A")]
		None,
		[Token(Token = "0x400190B")]
		FadeoutAlpha,
		[Token(Token = "0x400190C")]
		ScaleDown
	}
	[Serializable]
	[Token(Token = "0x2000713")]
	public class FragmentDeactivation
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DeactivateTimeout;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x2932184", Offset = "0x2932184", VA = "0x2932184")]
		public FragmentDeactivation Clone()
		{
			return null;
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x2932208", Offset = "0x2932208", VA = "0x2932208")]
		public FragmentDeactivation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000714")]
	public class FragmentOption
	{
		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FreezePositionX;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool FreezePositionY;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool FreezePositionZ;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool FreezeRotationX;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FreezeRotationY;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool FreezeRotationZ;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Layer;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ExplodeFragments;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxVelocity;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool InheritParentPhysicsProperty;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Mass;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UseGravity;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DisableColliders;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool MeshColliders;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float AngularVelocity;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxAngularVelocity;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 AngularVelocityVector;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RandomAngularVelocityVector;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material FragmentMaterial;

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x2932218", Offset = "0x2932218", VA = "0x2932218")]
		public FragmentOption Clone()
		{
			return null;
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x2932334", Offset = "0x2932334", VA = "0x2932334")]
		public FragmentOption()
		{
		}
	}
	[Token(Token = "0x2000715")]
	public class FragmentPool : MonoBehaviour
	{
		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FragmentPool instance;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fragment[] pool;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool meshColliders;

		[Token(Token = "0x170005A3")]
		public static FragmentPool Instance
		{
			[Token(Token = "0x6002558")]
			[Address(RVA = "0x2932344", Offset = "0x2932344", VA = "0x2932344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A4")]
		public int PoolSize
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x293267C", Offset = "0x293267C", VA = "0x293267C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005A5")]
		public Fragment[] Pool
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0x2932698", Offset = "0x2932698", VA = "0x2932698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x293245C", Offset = "0x293245C", VA = "0x293245C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x29324FC", Offset = "0x29324FC", VA = "0x29324FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x29326A0", Offset = "0x29326A0", VA = "0x29326A0")]
		public List<Fragment> GetAvailableFragments(int size)
		{
			return null;
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x2932A54", Offset = "0x2932A54", VA = "0x2932A54")]
		public int GetAvailableCrackFragmentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x2932AC4", Offset = "0x2932AC4", VA = "0x2932AC4")]
		public void Reset(ExploderParams parameters)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x2932B34", Offset = "0x2932B34", VA = "0x2932B34")]
		public void Allocate(int poolSize, bool useMeshColliders, bool use2dCollision)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x293352C", Offset = "0x293352C", VA = "0x293352C")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x29335AC", Offset = "0x29335AC", VA = "0x29335AC")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x2933614", Offset = "0x2933614", VA = "0x2933614")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x2932558", Offset = "0x2932558", VA = "0x2932558")]
		public void DestroyFragments()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x293367C", Offset = "0x293367C", VA = "0x293367C")]
		public void DeactivateFragments()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x29330D8", Offset = "0x29330D8", VA = "0x29330D8")]
		public void SetExplodableFragments(bool explodable, bool dontUseTag)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x29332D0", Offset = "0x29332D0", VA = "0x29332D0")]
		public void SetFragmentPhysicsOptions(FragmentOption options, bool physics2d)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x2933480", Offset = "0x2933480", VA = "0x2933480")]
		public void SetSFXOptions(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x2933750", Offset = "0x2933750", VA = "0x2933750")]
		public List<Fragment> GetActiveFragments()
		{
			return null;
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x29338A8", Offset = "0x29338A8", VA = "0x29338A8")]
		public FragmentPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000716")]
	public class FragmentSFX
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentEmitter;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChanceToPlay;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool PlayOnlyOnce;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool MixMultipleSounds;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EmitersMax;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ParticleTimeout;

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x29338B0", Offset = "0x29338B0", VA = "0x29338B0")]
		public FragmentSFX Clone()
		{
			return null;
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x2933954", Offset = "0x2933954", VA = "0x2933954")]
		public FragmentSFX()
		{
		}
	}
	[Token(Token = "0x2000717")]
	public static class Profiler
	{
		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Stopwatch> timeSegments;

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x267FA84", Offset = "0x267FA84", VA = "0x267FA84")]
		public static void Start(string key)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x267FBD4", Offset = "0x267FBD4", VA = "0x267FBD4")]
		public static void End(string key)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x267FC6C", Offset = "0x267FC6C", VA = "0x267FC6C")]
		public static string[] PrintResults()
		{
			return null;
		}
	}
	[Token(Token = "0x2000718")]
	public class ExploderSlowMotion : MonoBehaviour
	{
		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMotionTime;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float slowMotionSpeed;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool slowmo;

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x28CC484", Offset = "0x28CC484", VA = "0x28CC484")]
		private void Start()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x28CC4DC", Offset = "0x28CC4DC", VA = "0x28CC4DC")]
		public void EnableSlowMotion(bool status)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x28CC5E8", Offset = "0x28CC5E8", VA = "0x28CC5E8")]
		public void Update()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x28CC660", Offset = "0x28CC660", VA = "0x28CC660")]
		public ExploderSlowMotion()
		{
		}
	}
	[Token(Token = "0x2000719")]
	public static class ExploderUtils
	{
		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<MeshRenderer> meshRenderers;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Collider> colliders;

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x28CC950", Offset = "0x28CC950", VA = "0x28CC950")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C374", Offset = "0xE2C374")]
		public static void Assert(bool condition, string message)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x28CCA08", Offset = "0x28CCA08", VA = "0x28CCA08")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C3AC", Offset = "0xE2C3AC")]
		public static void Warning(bool condition, string message)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x28CCAB8", Offset = "0x28CCAB8", VA = "0x28CCAB8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE2C3E4", Offset = "0xE2C3E4")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x28CA964", Offset = "0x28CA964", VA = "0x28CA964")]
		public static Vector3 GetCentroid(GameObject obj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x28CCB1C", Offset = "0x28CCB1C", VA = "0x28CCB1C")]
		public static void SetVisible(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x28CCD2C", Offset = "0x28CCD2C", VA = "0x28CCD2C")]
		public static void ClearLog()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x28CCD30", Offset = "0x28CCD30", VA = "0x28CCD30")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x28CA8C8", Offset = "0x28CA8C8", VA = "0x28CA8C8")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x28CCDBC", Offset = "0x28CCDBC", VA = "0x28CCDBC")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x28CCF00", Offset = "0x28CCF00", VA = "0x28CCF00")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x28CD110", Offset = "0x28CD110", VA = "0x28CD110")]
		public static bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x28CD200", Offset = "0x28CD200", VA = "0x28CD200")]
		public static void CopyAudioSource(AudioSource src, AudioSource dst)
		{
		}
	}
	[Token(Token = "0x200071A")]
	public class HUDFPS : MonoBehaviour
	{
		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text text;

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x30A63BC", Offset = "0x30A63BC", VA = "0x30A63BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x30A64C8", Offset = "0x30A64C8", VA = "0x30A64C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x30A6658", Offset = "0x30A6658", VA = "0x30A6658")]
		public HUDFPS()
		{
		}
	}
	[Token(Token = "0x200071B")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuitting;

		[Token(Token = "0x170005A6")]
		public static T Instance
		{
			[Token(Token = "0x6002585")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002586")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002587")]
		public Singleton()
		{
		}
	}
}
namespace Exploder.Utils
{
	[Token(Token = "0x200071C")]
	public static class Compatibility
	{
		[Token(Token = "0x6002589")]
		[Address(RVA = "0x22B7890", Offset = "0x22B7890", VA = "0x22B7890")]
		public static void SetVisible(GameObject obj, bool status, bool includeInactive)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x22B7A00", Offset = "0x22B7A00", VA = "0x22B7A00")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x22B7A8C", Offset = "0x22B7A8C", VA = "0x22B7A8C")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x22B7B28", Offset = "0x22B7B28", VA = "0x22B7B28")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x22B7C28", Offset = "0x22B7C28", VA = "0x22B7C28")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x22B7D20", Offset = "0x22B7D20", VA = "0x22B7D20")]
		public static void Destroy(UnityEngine.Object obj, bool allowDestroyingAssets)
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x22B7DD0", Offset = "0x22B7DD0", VA = "0x22B7DD0")]
		public static void SetCursorVisible(bool status)
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x22B7DDC", Offset = "0x22B7DDC", VA = "0x22B7DDC")]
		public static void LockCursor(bool status)
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x22B7DF0", Offset = "0x22B7DF0", VA = "0x22B7DF0")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200071D")]
	public class ExploderSingleton : MonoBehaviour
	{
		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE23898", Offset = "0xE23898")]
		public static ExploderObject ExploderInstance;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ExploderObject Instance;

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x28CC3E0", Offset = "0x28CC3E0", VA = "0x28CC3E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x28CC47C", Offset = "0x28CC47C", VA = "0x28CC47C")]
		public ExploderSingleton()
		{
		}
	}
	[Token(Token = "0x200071E")]
	internal class Hull2D
	{
		[Serializable]
		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE150F8", Offset = "0xE150F8")]
		private sealed class <>c
		{
			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__0_0;

			[Token(Token = "0x600259A")]
			[Address(RVA = "0x2734AB4", Offset = "0x2734AB4", VA = "0x2734AB4")]
			public <>c()
			{
			}

			[Token(Token = "0x600259B")]
			[Address(RVA = "0x2734ABC", Offset = "0x2734ABC", VA = "0x2734ABC")]
			internal int <Sort>b__0_0(Vector2 value0, Vector2 value1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x30A8F08", Offset = "0x30A8F08", VA = "0x30A8F08")]
		public static void Sort(Vector2[] array)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x30A9028", Offset = "0x30A9028", VA = "0x30A9028")]
		public static void DumpArray(Vector2[] array)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x30A9134", Offset = "0x30A9134", VA = "0x30A9134")]
		public static Vector2[] ChainHull2D(Vector2[] Pnts)
		{
			return null;
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x30A93C4", Offset = "0x30A93C4", VA = "0x30A93C4")]
		private static float Hull2DCross(ref Vector2 O, ref Vector2 A, ref Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x30A93EC", Offset = "0x30A93EC", VA = "0x30A93EC")]
		public Hull2D()
		{
		}
	}
}
namespace Exploder.Examples
{
	[Token(Token = "0x2000720")]
	public class ExplodeAllObjects : MonoBehaviour
	{
		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x28CA710", Offset = "0x28CA710", VA = "0x28CA710")]
		private void Start()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x28CA798", Offset = "0x28CA798", VA = "0x28CA798")]
		private void Update()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x28CA7F0", Offset = "0x28CA7F0", VA = "0x28CA7F0")]
		private void ExplodeObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x28CAC90", Offset = "0x28CAC90", VA = "0x28CAC90")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x28CAD40", Offset = "0x28CAD40", VA = "0x28CAD40")]
		public ExplodeAllObjects()
		{
		}
	}
}
namespace Exploder.Demo
{
	[Token(Token = "0x2000721")]
	public class DemoClickExplode : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15108", Offset = "0xE15108")]
		private sealed class <>c
		{
			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Explodable, bool> <>9__3_0;

			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Explodable, GameObject> <>9__3_1;

			[Token(Token = "0x60025AB")]
			[Address(RVA = "0x272C1EC", Offset = "0x272C1EC", VA = "0x272C1EC")]
			public <>c()
			{
			}

			[Token(Token = "0x60025AC")]
			[Address(RVA = "0x272C1F4", Offset = "0x272C1F4", VA = "0x272C1F4")]
			internal bool <Start>b__3_0(Explodable ex)
			{
				return default(bool);
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x272C258", Offset = "0x272C258", VA = "0x272C258")]
			internal GameObject <Start>b__3_1(Explodable ex)
			{
				return null;
			}
		}

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera Camera;

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x283A970", Offset = "0x283A970", VA = "0x283A970")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x283AD4C", Offset = "0x283AD4C", VA = "0x283AD4C")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x283AE54", Offset = "0x283AE54", VA = "0x283AE54")]
		private void Update()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x283AFB0", Offset = "0x283AFB0", VA = "0x283AFB0")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x283B050", Offset = "0x283B050", VA = "0x283B050")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x283B054", Offset = "0x283B054", VA = "0x283B054")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x283B04C", Offset = "0x283B04C", VA = "0x283B04C")]
		private void ExplodeAfterCrack(GameObject obj)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x283B058", Offset = "0x283B058", VA = "0x283B058")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x283B2B0", Offset = "0x283B2B0", VA = "0x283B2B0")]
		public DemoClickExplode()
		{
		}
	}
	[Token(Token = "0x2000723")]
	public class QuickStartDemo : MonoBehaviour
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject sphereObject;

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x2685168", Offset = "0x2685168", VA = "0x2685168")]
		private void Start()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x26851CC", Offset = "0x26851CC", VA = "0x26851CC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x2685358", Offset = "0x2685358", VA = "0x2685358")]
		public QuickStartDemo()
		{
		}
	}
	[Token(Token = "0x2000724")]
	public class CursorLocking : MonoBehaviour
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockCursor;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode LockKey;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode UnlockKey;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsLocked;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CursorLocking instance;

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x282FDBC", Offset = "0x282FDBC", VA = "0x282FDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x282FE10", Offset = "0x282FE10", VA = "0x282FE10")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x282FEC8", Offset = "0x282FEC8", VA = "0x282FEC8")]
		public static void Lock()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x282FF3C", Offset = "0x282FF3C", VA = "0x282FF3C")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x282FFAC", Offset = "0x282FFAC", VA = "0x282FFAC")]
		public CursorLocking()
		{
		}
	}
	[Token(Token = "0x2000725")]
	public class ExploderMouseLook : MonoBehaviour
	{
		[Token(Token = "0x2000726")]
		public enum RotationAxes
		{
			[Token(Token = "0x400195B")]
			MouseXAndY,
			[Token(Token = "0x400195C")]
			MouseX,
			[Token(Token = "0x400195D")]
			MouseY
		}

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationY;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float kickTimeout;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float kickBackRot;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool kickBack;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTarget;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x28CB2C8", Offset = "0x28CB2C8", VA = "0x28CB2C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x28CB5F4", Offset = "0x28CB5F4", VA = "0x28CB5F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x28CB6BC", Offset = "0x28CB6BC", VA = "0x28CB6BC")]
		public void Kick()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x28CB71C", Offset = "0x28CB71C", VA = "0x28CB71C")]
		public ExploderMouseLook()
		{
		}
	}
	[Token(Token = "0x2000727")]
	public class GrenadeController : MonoBehaviour
	{
		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Throw;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource Source;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeObject Grenade;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera MainCamera;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float explodeTimer;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float throwTimer;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool exploding;

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x29D136C", Offset = "0x29D136C", VA = "0x29D136C")]
		private void Start()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x29D1380", Offset = "0x29D1380", VA = "0x29D1380")]
		private void Update()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x29D17A8", Offset = "0x29D17A8", VA = "0x29D17A8")]
		public GrenadeController()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public class GrenadeObject : MonoBehaviour
	{
		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light Flash;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ExplodeFinished;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool Impact;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool throwing;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float explodeTimeoutMax;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool explosionInProgress;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderObject exploder;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int flashing;

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x29D1640", Offset = "0x29D1640", VA = "0x29D1640")]
		public void Throw()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x29D1660", Offset = "0x29D1660", VA = "0x29D1660")]
		public void Explode()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x29D17B0", Offset = "0x29D17B0", VA = "0x29D17B0")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x29D1934", Offset = "0x29D1934", VA = "0x29D1934")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x29D1954", Offset = "0x29D1954", VA = "0x29D1954")]
		private void Update()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x29D19FC", Offset = "0x29D19FC", VA = "0x29D19FC")]
		public GrenadeObject()
		{
		}
	}
	[Token(Token = "0x2000729")]
	public class MoveController : MonoBehaviour
	{
		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpSpeed;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gravity;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController controller;

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x26990E8", Offset = "0x26990E8", VA = "0x26990E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x2699144", Offset = "0x2699144", VA = "0x2699144")]
		private void Update()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x269929C", Offset = "0x269929C", VA = "0x269929C")]
		public MoveController()
		{
		}
	}
	[Token(Token = "0x200072A")]
	public class PanelChairBomb : UseObject
	{
		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderObject Exploder;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChairBomb;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light Flash;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x26A2C50", Offset = "0x26A2C50", VA = "0x26A2C50", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x26A2D7C", Offset = "0x26A2D7C", VA = "0x26A2D7C")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x26A2E74", Offset = "0x26A2E74", VA = "0x26A2E74")]
		private void Update()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x26A2ED4", Offset = "0x26A2ED4", VA = "0x26A2ED4")]
		public PanelChairBomb()
		{
		}
	}
	[Token(Token = "0x200072B")]
	public class PanelResetScene : UseObject
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> objectList;

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x26A2EDC", Offset = "0x26A2EDC", VA = "0x26A2EDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x26A2F88", Offset = "0x26A2F88", VA = "0x26A2F88", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x26A310C", Offset = "0x26A310C", VA = "0x26A310C")]
		private void Update()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x26A3150", Offset = "0x26A3150", VA = "0x26A3150")]
		public PanelResetScene()
		{
		}
	}
	[Token(Token = "0x200072C")]
	public class PanelThrowObject : UseObject
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ThrowBox;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ThrowObjects;

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x26A3158", Offset = "0x26A3158", VA = "0x26A3158")]
		private void Start()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x26A315C", Offset = "0x26A315C", VA = "0x26A315C", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x26A34A4", Offset = "0x26A34A4", VA = "0x26A34A4")]
		public PanelThrowObject()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public class RPGController : MonoBehaviour
	{
		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject exploder;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rocket Rocket;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextShotTimeout;

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x2685360", Offset = "0x2685360", VA = "0x2685360")]
		private void Start()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x26853F4", Offset = "0x26853F4", VA = "0x26853F4")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x2685410", Offset = "0x2685410", VA = "0x2685410")]
		private void OnRocketHit(Vector3 position)
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x26854E4", Offset = "0x26854E4", VA = "0x26854E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x2685704", Offset = "0x2685704", VA = "0x2685704")]
		public RPGController()
		{
		}
	}
	[Token(Token = "0x200072E")]
	internal class RobotScript : MonoBehaviour
	{
		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float angle;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x2B3EF94", Offset = "0x2B3EF94", VA = "0x2B3EF94")]
		private void Start()
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x2B3EFDC", Offset = "0x2B3EFDC", VA = "0x2B3EFDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x2B3F038", Offset = "0x2B3F038", VA = "0x2B3F038")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x2B3F160", Offset = "0x2B3F160", VA = "0x2B3F160")]
		public RobotScript()
		{
		}
	}
	[Token(Token = "0x200072F")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x2000730")]
		public delegate void OnHit(Vector3 pos);

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Explosion;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject RocketStatic;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RocketLight;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RocketVelocity;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnHit HitCallback;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray direction;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool launch;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float launchTimeout;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform parent;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 shotPos;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float targetDistance;

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x2B3F174", Offset = "0x2B3F174", VA = "0x2B3F174")]
		private void Start()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x2B3F228", Offset = "0x2B3F228", VA = "0x2B3F228")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x2B3F340", Offset = "0x2B3F340", VA = "0x2B3F340")]
		public void Reset()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x2B3F3C4", Offset = "0x2B3F3C4", VA = "0x2B3F3C4")]
		public void Launch(Ray ray)
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x2B3F5D0", Offset = "0x2B3F5D0", VA = "0x2B3F5D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x2B3F9D0", Offset = "0x2B3F9D0", VA = "0x2B3F9D0")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x2000731")]
	public class ShotgunController : MonoBehaviour
	{
		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Reload;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flash;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation ReloadAnim;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip HideAnim;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MuzzleFlash;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float reloadTimeout;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextShotTimeout;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TargetType lastTarget;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject exploder;

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x2B4E8A0", Offset = "0x2B4E8A0", VA = "0x2B4E8A0")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x2B4E90C", Offset = "0x2B4E90C", VA = "0x2B4E90C")]
		private void Update()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x2B4EDA4", Offset = "0x2B4EDA4", VA = "0x2B4EDA4")]
		public ShotgunController()
		{
		}
	}
	[Token(Token = "0x2000732")]
	public enum TargetType
	{
		[Token(Token = "0x40019A1")]
		DestroyableObject,
		[Token(Token = "0x40019A2")]
		UseObject,
		[Token(Token = "0x40019A3")]
		Default,
		[Token(Token = "0x40019A4")]
		None
	}
	[Token(Token = "0x2000733")]
	public class TargetManager : MonoBehaviour
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TargetManager instance;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetObject;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType TargetType;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 TargetPosition;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image CrosshairGun;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image CrosshairHand;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text PanelText;

		[Token(Token = "0x170005A7")]
		public static TargetManager Instance
		{
			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x258EE44", Offset = "0x258EE44", VA = "0x258EE44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x258EE90", Offset = "0x258EE90", VA = "0x258EE90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x258EEE4", Offset = "0x258EEE4", VA = "0x258EEE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x258EFA0", Offset = "0x258EFA0", VA = "0x258EFA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x258F604", Offset = "0x258F604", VA = "0x258F604")]
		private bool IsDestroyableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x258F700", Offset = "0x258F700", VA = "0x258F700")]
		private bool IsUseObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x258F810", Offset = "0x258F810", VA = "0x258F810")]
		public TargetManager()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x258F818", Offset = "0x258F818", VA = "0x258F818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C41C", Offset = "0xE2C41C")]
		private int <Update>b__12_0(RaycastHit a, RaycastHit b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000734")]
	public class ThrowObject : MonoBehaviour
	{
		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float destroyTimer;

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x259258C", Offset = "0x259258C", VA = "0x259258C")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x2592598", Offset = "0x2592598", VA = "0x2592598")]
		private void Update()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x2592644", Offset = "0x2592644", VA = "0x2592644")]
		public ThrowObject()
		{
		}
	}
	[Token(Token = "0x2000735")]
	public abstract class UseObject : MonoBehaviour
	{
		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UseRadius;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HelperText;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip UseClip;

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x27BEC2C", Offset = "0x27BEC2C", VA = "0x27BEC2C", Slot = "4")]
		public virtual void Use()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x27BED18", Offset = "0x27BED18", VA = "0x27BED18")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x27BED68", Offset = "0x27BED68", VA = "0x27BED68")]
		protected UseObject()
		{
		}
	}
	[Token(Token = "0x2000736")]
	public class WeaponManager : MonoBehaviour
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shotgun;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RPG;

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x2D10C98", Offset = "0x2D10C98", VA = "0x2D10C98")]
		private void Update()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x2D10DE8", Offset = "0x2D10DE8", VA = "0x2D10DE8")]
		public WeaponManager()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000737")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE15118", Offset = "0xE15118")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float delay;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float duration;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Ease easeType;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LoopType loopType;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int loops;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string id;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isRelative;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool isFrom;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool isIndependentUpdate;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool autoKill;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool isActive;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool isValid;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Component target;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DOTweenAnimationType animationType;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public TargetType targetType;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TargetType forcedTargetType;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool autoPlay;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool useTargetAsV3;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float endValueFloat;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 endValueV3;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector2 endValueV2;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color endValueColor;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string endValueString;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Rect endValueRect;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform endValueTransform;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool optionalBool0;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float optionalFloat0;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int optionalInt0;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string optionalString;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _tweenCreated;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int _playCount;

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x28362A0", Offset = "0x28362A0", VA = "0x28362A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x28377A4", Offset = "0x28377A4", VA = "0x28377A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x28377E8", Offset = "0x28377E8", VA = "0x28377E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x28362F0", Offset = "0x28362F0", VA = "0x28362F0")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x28379E8", Offset = "0x28379E8", VA = "0x28379E8", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x2837A60", Offset = "0x2837A60", VA = "0x2837A60", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x2837AD8", Offset = "0x2837AD8", VA = "0x2837AD8", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x2837B50", Offset = "0x2837B50", VA = "0x2837B50", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x2837BC8", Offset = "0x2837BC8", VA = "0x2837BC8", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x2837C40", Offset = "0x2837C40", VA = "0x2837C40", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x2837D38", Offset = "0x2837D38", VA = "0x2837D38", Slot = "10")]
		public override void DORestart(bool fromHere = false)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x2837F8C", Offset = "0x2837F8C", VA = "0x2837F8C", Slot = "11")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x2838008", Offset = "0x2838008", VA = "0x2838008", Slot = "12")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x2838094", Offset = "0x2838094", VA = "0x2838094")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x283811C", Offset = "0x283811C", VA = "0x283811C")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x2838180", Offset = "0x2838180", VA = "0x2838180")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x28381E4", Offset = "0x28381E4", VA = "0x28381E4")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x283826C", Offset = "0x283826C", VA = "0x283826C")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x28382D0", Offset = "0x28382D0", VA = "0x28382D0")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x2838358", Offset = "0x2838358", VA = "0x2838358")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x28383BC", Offset = "0x28383BC", VA = "0x28383BC")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x2838504", Offset = "0x2838504", VA = "0x2838504")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x2838590", Offset = "0x2838590", VA = "0x2838590")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x2838628", Offset = "0x2838628", VA = "0x2838628")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x28386A8", Offset = "0x28386A8", VA = "0x28386A8")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x283782C", Offset = "0x283782C", VA = "0x283782C")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x2837E38", Offset = "0x2837E38", VA = "0x2837E38")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x28387B4", Offset = "0x28387B4", VA = "0x28387B4")]
		public DOTweenAnimation()
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x28389B4", Offset = "0x28389B4", VA = "0x28389B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C42C", Offset = "0xE2C42C")]
		private void <CreateTween>b__37_0()
		{
		}
	}
	[Token(Token = "0x2000738")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6002614")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
}
namespace TinyTeam.Debuger
{
	[Token(Token = "0x2000739")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x200073A")]
		public enum MessageType
		{
			[Token(Token = "0x40019FF")]
			NORMAL,
			[Token(Token = "0x4001A00")]
			WARNING,
			[Token(Token = "0x4001A01")]
			ERROR,
			[Token(Token = "0x4001A02")]
			SYSTEM,
			[Token(Token = "0x4001A03")]
			INPUT,
			[Token(Token = "0x4001A04")]
			OUTPUT,
			[Token(Token = "0x4001A05")]
			UNITY
		}

		[Token(Token = "0x200073B")]
		private struct Message
		{
			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string text;

			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string formatted;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customType;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MessageType type;

			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE238D0", Offset = "0xE238D0")]
			private Color <color>k__BackingField;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Color defaultColor;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Color warningColor;

			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Color errorColor;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Color systemColor;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Color inputColor;

			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Color outputColor;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Color unityColor;

			[Token(Token = "0x170005AF")]
			public Color color
			{
				[Token(Token = "0x6002657")]
				[Address(RVA = "0x272A12C", Offset = "0x272A12C", VA = "0x272A12C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C45C", Offset = "0xE2C45C")]
				readonly get
				{
					return default(Color);
				}
				[Token(Token = "0x6002658")]
				[Address(RVA = "0x272A138", Offset = "0x272A138", VA = "0x272A138")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C494", Offset = "0xE2C494")]
				private set
				{
				}
			}

			[Token(Token = "0x6002659")]
			[Address(RVA = "0x272A144", Offset = "0x272A144", VA = "0x272A144")]
			public Message(object messageObject, MessageType messageType, Color displayColor, string customType)
			{
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0x272A154", Offset = "0x272A154", VA = "0x272A154")]
			public void Set(object messageObject, MessageType messageType, Color displayColor, string customType)
			{
			}

			[Token(Token = "0x600265B")]
			[Address(RVA = "0x272A3DC", Offset = "0x272A3DC", VA = "0x272A3DC")]
			public static Message Log(object message, string customType)
			{
				return default(Message);
			}

			[Token(Token = "0x600265C")]
			[Address(RVA = "0x272A4D4", Offset = "0x272A4D4", VA = "0x272A4D4")]
			public static Message Log(object message, string customType, Color col)
			{
				return default(Message);
			}

			[Token(Token = "0x600265D")]
			[Address(RVA = "0x272A5A0", Offset = "0x272A5A0", VA = "0x272A5A0")]
			public static Message Log(object message, MessageType messageType)
			{
				return default(Message);
			}

			[Token(Token = "0x600265E")]
			[Address(RVA = "0x272A6B8", Offset = "0x272A6B8", VA = "0x272A6B8")]
			public static Message System(object message)
			{
				return default(Message);
			}

			[Token(Token = "0x600265F")]
			[Address(RVA = "0x272A7CC", Offset = "0x272A7CC", VA = "0x272A7CC")]
			public static Message Warning(object message, string customType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002660")]
			[Address(RVA = "0x272A8C4", Offset = "0x272A8C4", VA = "0x272A8C4")]
			public static Message Error(object message, string customType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002661")]
			[Address(RVA = "0x272A9BC", Offset = "0x272A9BC", VA = "0x272A9BC")]
			public static Message Output(object message)
			{
				return default(Message);
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0x272AAD0", Offset = "0x272AAD0", VA = "0x272AAD0")]
			public static Message Input(object message)
			{
				return default(Message);
			}

			[Token(Token = "0x6002663")]
			[Address(RVA = "0x272ABE4", Offset = "0x272ABE4", VA = "0x272ABE4")]
			public static Message Unity(object message, LogType logType)
			{
				return default(Message);
			}

			[Token(Token = "0x6002664")]
			[Address(RVA = "0x272AD8C", Offset = "0x272AD8C", VA = "0x272AD8C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0x272AD90", Offset = "0x272AD90", VA = "0x272AD90")]
			public string ToGUIString()
			{
				return null;
			}
		}

		[Token(Token = "0x200073C")]
		private class History
		{
			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<string> history;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int index;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string current;

			[Token(Token = "0x6002667")]
			[Address(RVA = "0x2729F18", Offset = "0x2729F18", VA = "0x2729F18")]
			public void Add(string item)
			{
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0x2729F90", Offset = "0x2729F90", VA = "0x2729F90")]
			public string Fetch(string cur, bool next)
			{
				return null;
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0x272A07C", Offset = "0x272A07C", VA = "0x272A07C")]
			public History()
			{
			}
		}

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15160", Offset = "0xE15160")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string cached;

			[Token(Token = "0x600266A")]
			[Address(RVA = "0x2729EA0", Offset = "0x2729EA0", VA = "0x2729EA0")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0x2729EA8", Offset = "0x2729EA8", VA = "0x2729EA8")]
			internal void <CMDSetOutputToUnityMsgType>b__0(string str)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15170", Offset = "0xE15170")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Texture> <>9__72_0;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<AudioClip> <>9__72_1;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, DateTime> <>9__103_0;

			[Token(Token = "0x600266D")]
			[Address(RVA = "0x2729D94", Offset = "0x2729D94", VA = "0x2729D94")]
			public <>c()
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0x2729D9C", Offset = "0x2729D9C", VA = "0x2729D9C")]
			internal int <CMDShowMemory>b__72_0(Texture a, Texture b)
			{
				return default(int);
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0x2729DE8", Offset = "0x2729DE8", VA = "0x2729DE8")]
			internal int <CMDShowMemory>b__72_1(AudioClip a, AudioClip b)
			{
				return default(int);
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0x2729E34", Offset = "0x2729E34", VA = "0x2729E34")]
			internal DateTime <get_logFolder>b__103_0(string ss)
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInit;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Console _instance;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static object _lock;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_isOpen;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isNeedBindUnityLog;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float preOpenTime;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action delegateInitEventSystem;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Console> delegateInitCMD;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject ui_root_obj;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text text_content;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ScrollRect sr_content;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputField input;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text text_pageCount;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject ui_fps_root;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text text_fps;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal bool isNeedRefreshContent;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int maxLinesForDisplay;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int maxLinesForAsyncRecord;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int beginMsgIndex;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int endMsgIndex;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int maxMsgCount;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool needAutoToMax;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int currentShowMessageType;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string currentShowMessageCustom;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int fpsMode;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FPSCounter fps;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MemoryCounter memoryCounter;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, Func<string[], object>> _cmdTable;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<string, string> _cmdTableDiscribes;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<string> _outputToUnityMsgType;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Queue<Message> _messages;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<string, Queue<Message>> customQueueMessages;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private History _history;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Queue<string> LogQueue;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private object thisLock;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Thread logThread;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string _currentAsyncLogFilePath;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int asyncWriteCounter;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool isAsyncWritingLog;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string _logBuff;

		[Token(Token = "0x170005A8")]
		public static Console Instance
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0x22BA974", Offset = "0x22BA974", VA = "0x22BA974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A9")]
		public bool IsOpen
		{
			[Token(Token = "0x6002617")]
			[Address(RVA = "0x22BAED4", Offset = "0x22BAED4", VA = "0x22BAED4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002618")]
			[Address(RVA = "0x22BAEDC", Offset = "0x22BAEDC", VA = "0x22BAEDC")]
			set
			{
			}
		}

		[Token(Token = "0x170005AA")]
		private int currentPersent
		{
			[Token(Token = "0x6002629")]
			[Address(RVA = "0x22BE834", Offset = "0x22BE834", VA = "0x22BE834")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005AB")]
		public string currentAsyncLogFilePath
		{
			[Token(Token = "0x600264B")]
			[Address(RVA = "0x22C258C", Offset = "0x22C258C", VA = "0x22C258C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AC")]
		private string logFolder
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x22C2594", Offset = "0x22C2594", VA = "0x22C2594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AD")]
		private string logPath
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x22C285C", Offset = "0x22C285C", VA = "0x22C285C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AE")]
		private string logBuff
		{
			[Token(Token = "0x6002652")]
			[Address(RVA = "0x22C295C", Offset = "0x22C295C", VA = "0x22C295C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x22BADB8", Offset = "0x22BADB8", VA = "0x22BADB8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x22BB568", Offset = "0x22BB568", VA = "0x22BB568")]
		private static Queue<Message> FindCustomQueue(string customType)
		{
			return null;
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x22BB700", Offset = "0x22BB700", VA = "0x22BB700")]
		private static Message CreateNew(object messageObject, MessageType messageType, Color displayColor, string customType)
		{
			return default(Message);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x22BB8E4", Offset = "0x22BB8E4", VA = "0x22BB8E4")]
		public void Init()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x22BC568", Offset = "0x22BC568", VA = "0x22BC568")]
		public void Start()
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x22BC610", Offset = "0x22BC610", VA = "0x22BC610")]
		public void HandleUnityLog(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x22BCDA8", Offset = "0x22BCDA8", VA = "0x22BCDA8")]
		private void UpdateKeyCode()
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x22BD19C", Offset = "0x22BD19C", VA = "0x22BD19C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x22BCD04", Offset = "0x22BCD04", VA = "0x22BCD04")]
		private static string ColorToHex(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x22BD630", Offset = "0x22BD630", VA = "0x22BD630")]
		private static Color HexToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x22BD6EC", Offset = "0x22BD6EC", VA = "0x22BD6EC")]
		private void InitEventSystem()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x22BB344", Offset = "0x22BB344", VA = "0x22BB344")]
		private void DrawWindow(bool isHide)
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x22BD820", Offset = "0x22BD820", VA = "0x22BD820")]
		private void InitBlackground(GameObject windows)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x22BD9E8", Offset = "0x22BD9E8", VA = "0x22BD9E8")]
		private void InitScrollView(GameObject windows)
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x22BDC64", Offset = "0x22BDC64", VA = "0x22BDC64")]
		private void InitScrollContent(GameObject scrollView)
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x22BDFBC", Offset = "0x22BDFBC", VA = "0x22BDFBC")]
		private void InitInput(GameObject windows)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x22BD4B4", Offset = "0x22BD4B4", VA = "0x22BD4B4")]
		private void DrawingContent()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x22BEBFC", Offset = "0x22BEBFC", VA = "0x22BEBFC")]
		private void DrawFPS()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x22BF018", Offset = "0x22BF018", VA = "0x22BF018")]
		private object CMDClose(string[] args)
		{
			return null;
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x22BF06C", Offset = "0x22BF06C", VA = "0x22BF06C")]
		private object CMDClear(string[] args)
		{
			return null;
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x22BF17C", Offset = "0x22BF17C", VA = "0x22BF17C")]
		private object CMDHelp(string[] args)
		{
			return null;
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x22BF400", Offset = "0x22BF400", VA = "0x22BF400")]
		private object CMDSystemInfo(string[] args)
		{
			return null;
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x22C013C", Offset = "0x22C013C", VA = "0x22C013C")]
		private object CMDShowMessageType(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x22C02BC", Offset = "0x22C02BC", VA = "0x22C02BC")]
		private object CMDShowCustomMessage(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x22C037C", Offset = "0x22C037C", VA = "0x22C037C")]
		private object CMDShowNetMessage(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x22C04B8", Offset = "0x22C04B8", VA = "0x22C04B8")]
		private object CMDShowAssetManagerMessage(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x22C05F4", Offset = "0x22C05F4", VA = "0x22C05F4")]
		private object CMDSetOutputToUnityMsgType(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x22C08C4", Offset = "0x22C08C4", VA = "0x22C08C4")]
		private object CMDShowFPS(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x22C0A14", Offset = "0x22C0A14", VA = "0x22C0A14")]
		private object CMDShowMemory(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x22C1124", Offset = "0x22C1124", VA = "0x22C1124")]
		private object CMDStartAsyncLoging(string[] args)
		{
			return null;
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x22BC1F0", Offset = "0x22BC1F0", VA = "0x22BC1F0")]
		private void LogMessage(Message msg)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x22BF0BC", Offset = "0x22BF0BC", VA = "0x22BF0BC")]
		private void ClearLog()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x22BB1C8", Offset = "0x22BB1C8", VA = "0x22BB1C8")]
		private int CaculateCurrentMaxMsgCount()
		{
			return default(int);
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x22BC270", Offset = "0x22BC270", VA = "0x22BC270")]
		private void RegisterCommandCallback(string commandString, Func<string[], object> commandCallback, string CMD_Discribes)
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x22C1298", Offset = "0x22C1298", VA = "0x22C1298")]
		private void UnRegisterCommandCallback(string commandString)
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x22C1414", Offset = "0x22C1414", VA = "0x22C1414")]
		private void EvalInputString(string inputString)
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x22C1678", Offset = "0x22C1678", VA = "0x22C1678")]
		public void ExecCMDInputString(string inputCMD)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x22C167C", Offset = "0x22C167C", VA = "0x22C167C")]
		internal static object Log(object message, string customType)
		{
			return null;
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x22C1900", Offset = "0x22C1900", VA = "0x22C1900")]
		internal static object Log(object message, string customType, Color col)
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x22BFFDC", Offset = "0x22BFFDC", VA = "0x22BFFDC")]
		internal static object Log(object message, MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x22C1BB4", Offset = "0x22C1BB4", VA = "0x22C1BB4")]
		internal static object LogWarning(object message, string customType)
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x22C1E38", Offset = "0x22C1E38", VA = "0x22C1E38")]
		internal static object LogError(object message, string customType)
		{
			return null;
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x22C20BC", Offset = "0x22C20BC", VA = "0x22C20BC")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x22C2190", Offset = "0x22C2190", VA = "0x22C2190")]
		public static void RegisterCommand(string commandString, Func<string[], object> commandCallback, string CMD_Discribes)
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x22C2294", Offset = "0x22C2294", VA = "0x22C2294")]
		public static void UnRegisterCommand(string commandString)
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x22C237C", Offset = "0x22C237C", VA = "0x22C237C")]
		private void ProcessInput(string cmd)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x22BD0F8", Offset = "0x22BD0F8", VA = "0x22BD0F8")]
		private void AddPage(int val)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x22BE900", Offset = "0x22BE900", VA = "0x22BE900")]
		private List<Message> GetAllCurrentTypeMessages()
		{
			return null;
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x22BB218", Offset = "0x22BB218", VA = "0x22BB218")]
		private int FindBeginMsgIndexFromEnd()
		{
			return default(int);
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x22C2454", Offset = "0x22C2454", VA = "0x22C2454")]
		private int FindEndMsgIndexFromBegin()
		{
			return default(int);
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x22BC438", Offset = "0x22BC438", VA = "0x22BC438")]
		internal void StartAsyncWriteLog()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x22BAE54", Offset = "0x22BAE54", VA = "0x22BAE54")]
		internal void StopAsyncWriteLog()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x22BD390", Offset = "0x22BD390", VA = "0x22BD390")]
		internal void CreateNewLogFile()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x22C1194", Offset = "0x22C1194", VA = "0x22C1194")]
		private void AddToAsyncWriteBuff(string text)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x22C2B14", Offset = "0x22C2B14", VA = "0x22C2B14")]
		private void RunningAsyncWritingLog()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x22C2CF8", Offset = "0x22C2CF8", VA = "0x22C2CF8")]
		public Console()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x22C308C", Offset = "0x22C308C", VA = "0x22C308C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C44C", Offset = "0xE2C44C")]
		private void <Init>b__45_0(Scene scene, LoadSceneMode mode)
		{
		}
	}
	[Token(Token = "0x200073F")]
	public class FPSCounter
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float current;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float updateInterval;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float accum;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int frames;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeleft;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float delta;

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x2922888", Offset = "0x2922888", VA = "0x2922888")]
		public FPSCounter()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x29228C4", Offset = "0x29228C4", VA = "0x29228C4")]
		public bool Update()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000740")]
	public class MemoryCounter
	{
		[Token(Token = "0x4001A20")]
		public const float MEMORY_DIVIDER = 9.536743E-07f;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float preTime;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float interval;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long totalReserved;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long allocated;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long monoMemory;

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x2D00718", Offset = "0x2D00718", VA = "0x2D00718")]
		public bool Update(int updateInterval)
		{
			return default(bool);
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x2D007CC", Offset = "0x2D007CC", VA = "0x2D007CC")]
		public new string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x2D00AA8", Offset = "0x2D00AA8", VA = "0x2D00AA8")]
		public MemoryCounter()
		{
		}
	}
}
namespace Chronos
{
	[Token(Token = "0x2000741")]
	public enum AreaClockMode
	{
		[Token(Token = "0x4001A27")]
		Instant,
		[Token(Token = "0x4001A28")]
		PointToEdge,
		[Token(Token = "0x4001A29")]
		DistanceFromEntry
	}
	[Token(Token = "0x2000742")]
	public interface IAreaClock
	{
		[Token(Token = "0x170005B0")]
		float timeScale
		{
			[Token(Token = "0x6002679")]
			get;
		}

		[Token(Token = "0x170005B1")]
		AreaClockMode mode
		{
			[Token(Token = "0x600267A")]
			get;
		}

		[Token(Token = "0x170005B2")]
		ClockBlend innerBlend
		{
			[Token(Token = "0x600267B")]
			get;
			[Token(Token = "0x600267C")]
			set;
		}

		[Token(Token = "0x170005B3")]
		AnimationCurve curve
		{
			[Token(Token = "0x600267E")]
			get;
			[Token(Token = "0x600267F")]
			set;
		}

		[Token(Token = "0x6002676")]
		void Release(Timeline timeline);

		[Token(Token = "0x6002677")]
		void ReleaseAll();

		[Token(Token = "0x6002678")]
		float TimeScale(Timeline timeline);

		[Token(Token = "0x600267D")]
		bool ContainsPoint(Vector3 point);
	}
	[Token(Token = "0x2000743")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE15180", Offset = "0xE15180")]
	public abstract class AreaClock<TCollider, TVector> : Clock, IAreaClock
	{
		[Serializable]
		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE151B8", Offset = "0xE151B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Timeline, bool> <>9__28_0;

			[Token(Token = "0x6002696")]
			public <>c()
			{
			}

			[Token(Token = "0x6002697")]
			internal bool <ReleaseAll>b__28_0(Timeline w)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Dictionary<Timeline, Vector3> within;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected HashSet<Timeline> outOfBounds;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TCollider collider;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AreaClockMode _mode;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AnimationCurve _curve;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TVector _center;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _padding;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ClockBlend _innerBlend;

		[Token(Token = "0x170005B4")]
		public AreaClockMode mode
		{
			[Token(Token = "0x6002683")]
			get
			{
				return default(AreaClockMode);
			}
			[Token(Token = "0x6002684")]
			set
			{
			}
		}

		[Token(Token = "0x170005B5")]
		public AnimationCurve curve
		{
			[Token(Token = "0x6002685")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002686")]
			set
			{
			}
		}

		[Token(Token = "0x170005B6")]
		public TVector center
		{
			[Token(Token = "0x6002687")]
			get
			{
				return (TVector)null;
			}
			[Token(Token = "0x6002688")]
			set
			{
			}
		}

		[Token(Token = "0x170005B7")]
		public float padding
		{
			[Token(Token = "0x6002689")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600268A")]
			set
			{
			}
		}

		[Token(Token = "0x170005B8")]
		public ClockBlend innerBlend
		{
			[Token(Token = "0x600268B")]
			get
			{
				return default(ClockBlend);
			}
			[Token(Token = "0x600268C")]
			set
			{
			}
		}

		[Token(Token = "0x6002680")]
		public AreaClock()
		{
		}

		[Token(Token = "0x6002681")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002682")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600268D")]
		protected virtual void Capture(Timeline timeline, Vector3 entry)
		{
		}

		[Token(Token = "0x600268E")]
		public virtual void Release(Timeline timeline)
		{
		}

		[Token(Token = "0x600268F")]
		public virtual void ReleaseAll()
		{
		}

		[Token(Token = "0x6002690")]
		private float Chronos.IAreaClock.TimeScale(Timeline timeline)
		{
			return default(float);
		}

		[Token(Token = "0x6002691")]
		protected virtual float DistanceFromEntryTimeScale(Vector3 entry, Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6002692")]
		protected abstract float PointToEdgeTimeScale(Vector3 position);

		[Token(Token = "0x6002693")]
		public abstract bool ContainsPoint(Vector3 point);

		[Token(Token = "0x6002694")]
		public virtual void CacheComponents()
		{
		}
	}
	[Token(Token = "0x2000745")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE151C8", Offset = "0xE151C8")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE151C8", Offset = "0xE151C8")]
	public class AreaClock2D : AreaClock<Collider2D, Vector2>
	{
		[Token(Token = "0x6002698")]
		[Address(RVA = "0x2AA783C", Offset = "0x2AA783C", VA = "0x2AA783C", Slot = "27")]
		protected virtual void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x2AA7954", Offset = "0x2AA7954", VA = "0x2AA7954", Slot = "28")]
		protected virtual void OnTriggerExit2D(Collider2D collider)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x2AA7A24", Offset = "0x2AA7A24", VA = "0x2AA7A24", Slot = "24")]
		protected override float PointToEdgeTimeScale(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x2AA7F00", Offset = "0x2AA7F00", VA = "0x2AA7F00", Slot = "25")]
		public override bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x2AA7FA0", Offset = "0x2AA7FA0", VA = "0x2AA7FA0", Slot = "26")]
		public override void CacheComponents()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x2AA80AC", Offset = "0x2AA80AC", VA = "0x2AA80AC")]
		public AreaClock2D()
		{
		}
	}
	[Token(Token = "0x2000746")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE15238", Offset = "0xE15238")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE15238", Offset = "0xE15238")]
	public class AreaClock3D : AreaClock<Collider, Vector3>
	{
		[Token(Token = "0x600269E")]
		[Address(RVA = "0x2AA80F8", Offset = "0x2AA80F8", VA = "0x2AA80F8", Slot = "27")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x2AA8210", Offset = "0x2AA8210", VA = "0x2AA8210", Slot = "28")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x2AA82E0", Offset = "0x2AA82E0", VA = "0x2AA82E0")]
		public void OnEnterArea(GameObject other)
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x2AA83F8", Offset = "0x2AA83F8", VA = "0x2AA83F8", Slot = "29")]
		public virtual void OnExitArea(GameObject other)
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x2AA84C8", Offset = "0x2AA84C8", VA = "0x2AA84C8", Slot = "24")]
		protected override float PointToEdgeTimeScale(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x2AA89C4", Offset = "0x2AA89C4", VA = "0x2AA89C4", Slot = "25")]
		public override bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x2AA8A44", Offset = "0x2AA8A44", VA = "0x2AA8A44", Slot = "26")]
		public override void CacheComponents()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x2AA8B50", Offset = "0x2AA8B50", VA = "0x2AA8B50")]
		public AreaClock3D()
		{
		}
	}
	[Token(Token = "0x2000747")]
	public class ChronosException : Exception
	{
		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x22B3A48", Offset = "0x22B3A48", VA = "0x22B3A48")]
		public ChronosException()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x22B3AAC", Offset = "0x22B3AAC", VA = "0x22B3AAC")]
		public ChronosException(string message)
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x22B3B20", Offset = "0x22B3B20", VA = "0x22B3B20")]
		public ChronosException(string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x2000748")]
	public enum ClockBlend
	{
		[Token(Token = "0x4001A35")]
		Multiplicative,
		[Token(Token = "0x4001A36")]
		Additive
	}
	[Token(Token = "0x2000749")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE152A8", Offset = "0xE152A8")]
	public abstract class Clock : MonoBehaviour
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool enabledOnce;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool isLerping;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float lerpStart;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float lerpEnd;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float lerpFrom;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lerpTo;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _localTimeScale;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23940", Offset = "0xE23940")]
		private float <timeScale>k__BackingField;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23950", Offset = "0xE23950")]
		private float <time>k__BackingField;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23960", Offset = "0xE23960")]
		private float <unscaledTime>k__BackingField;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23970", Offset = "0xE23970")]
		private float <deltaTime>k__BackingField;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23980", Offset = "0xE23980")]
		private float <fixedDeltaTime>k__BackingField;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23990", Offset = "0xE23990")]
		private float <startTime>k__BackingField;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _paused;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[GlobalClock]
		private string _parentKey;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GlobalClock _parent;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ClockBlend _parentBlend;

		[Token(Token = "0x170005B9")]
		public float localTimeScale
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x22B43DC", Offset = "0x22B43DC", VA = "0x22B43DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x22B43E4", Offset = "0x22B43E4", VA = "0x22B43E4")]
			set
			{
			}
		}

		[Token(Token = "0x170005BA")]
		public float timeScale
		{
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x22B43EC", Offset = "0x22B43EC", VA = "0x22B43EC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4A4", Offset = "0xE2C4A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x22B43F4", Offset = "0x22B43F4", VA = "0x22B43F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4B4", Offset = "0xE2C4B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005BB")]
		public float time
		{
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x22B43FC", Offset = "0x22B43FC", VA = "0x22B43FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4C4", Offset = "0xE2C4C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x22B4404", Offset = "0x22B4404", VA = "0x22B4404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4D4", Offset = "0xE2C4D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005BC")]
		public float unscaledTime
		{
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x22B440C", Offset = "0x22B440C", VA = "0x22B440C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4E4", Offset = "0xE2C4E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x22B4414", Offset = "0x22B4414", VA = "0x22B4414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4F4", Offset = "0xE2C4F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005BD")]
		public float deltaTime
		{
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x22B441C", Offset = "0x22B441C", VA = "0x22B441C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C504", Offset = "0xE2C504")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x22B4424", Offset = "0x22B4424", VA = "0x22B4424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C514", Offset = "0xE2C514")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005BE")]
		public float fixedDeltaTime
		{
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x22B442C", Offset = "0x22B442C", VA = "0x22B442C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C524", Offset = "0xE2C524")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x22B4434", Offset = "0x22B4434", VA = "0x22B4434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C534", Offset = "0xE2C534")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005BF")]
		public float startTime
		{
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0x22B443C", Offset = "0x22B443C", VA = "0x22B443C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C544", Offset = "0xE2C544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x22B4444", Offset = "0x22B4444", VA = "0x22B4444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C554", Offset = "0xE2C554")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005C0")]
		public bool paused
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x22B444C", Offset = "0x22B444C", VA = "0x22B444C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x22B4454", Offset = "0x22B4454", VA = "0x22B4454")]
			set
			{
			}
		}

		[Token(Token = "0x170005C1")]
		public GlobalClock parent
		{
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0x22B4460", Offset = "0x22B4460", VA = "0x22B4460")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C0")]
			[Address(RVA = "0x22B40DC", Offset = "0x22B40DC", VA = "0x22B40DC")]
			set
			{
			}
		}

		[Token(Token = "0x170005C2")]
		public ClockBlend parentBlend
		{
			[Token(Token = "0x60026C1")]
			[Address(RVA = "0x22B4468", Offset = "0x22B4468", VA = "0x22B4468")]
			get
			{
				return default(ClockBlend);
			}
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x22B4470", Offset = "0x22B4470", VA = "0x22B4470")]
			set
			{
			}
		}

		[Token(Token = "0x170005C3")]
		public TimeState state
		{
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x22B4478", Offset = "0x22B4478", VA = "0x22B4478")]
			get
			{
				return default(TimeState);
			}
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x22B3ED8", Offset = "0x22B3ED8", VA = "0x22B3ED8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x22B3EDC", Offset = "0x22B3EDC", VA = "0x22B3EDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x22B3EE8", Offset = "0x22B3EE8", VA = "0x22B3EE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x22B3F08", Offset = "0x22B3F08", VA = "0x22B3F08", Slot = "5")]
		protected virtual void OnStartOrReEnable()
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x22B4290", Offset = "0x22B4290", VA = "0x22B4290", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x22B4340", Offset = "0x22B4340", VA = "0x22B4340", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x22B4484", Offset = "0x22B4484", VA = "0x22B4484", Slot = "9")]
		public virtual void ComputeTimeScale()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x22B4540", Offset = "0x22B4540", VA = "0x22B4540")]
		public void LerpTimeScale(float timeScale, float duration, bool steady = false)
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x22B460C", Offset = "0x22B460C", VA = "0x22B460C")]
		protected Clock()
		{
		}
	}
	[Token(Token = "0x200074A")]
	public interface IComponentTimeline
	{
		[Token(Token = "0x60026C7")]
		void Initialize();

		[Token(Token = "0x60026C8")]
		void OnStartOrReEnable();

		[Token(Token = "0x60026C9")]
		void Update();

		[Token(Token = "0x60026CA")]
		void FixedUpdate();

		[Token(Token = "0x60026CB")]
		void OnDisable();

		[Token(Token = "0x60026CC")]
		void AdjustProperties();

		[Token(Token = "0x60026CD")]
		void Reset();
	}
	[Token(Token = "0x200074B")]
	public interface IComponentTimeline<T> : IComponentTimeline where T : Component
	{
		[Token(Token = "0x170005C4")]
		T component
		{
			[Token(Token = "0x60026CE")]
			get;
		}
	}
	[Token(Token = "0x200074C")]
	public abstract class ComponentTimeline<T> : IComponentTimeline<T>, IComponentTimeline where T : Component
	{
		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE239F8", Offset = "0xE239F8")]
		private Timeline <timeline>k__BackingField;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23A08", Offset = "0xE23A08")]
		private T <component>k__BackingField;

		[Token(Token = "0x170005C5")]
		protected Timeline timeline
		{
			[Token(Token = "0x60026CF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C564", Offset = "0xE2C564")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C574", Offset = "0xE2C574")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C6")]
		public T component
		{
			[Token(Token = "0x60026D1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C584", Offset = "0xE2C584")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026D2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C594", Offset = "0xE2C594")]
			internal set
			{
			}
		}

		[Token(Token = "0x60026D3")]
		public ComponentTimeline(Timeline timeline, T component)
		{
		}

		[Token(Token = "0x60026D4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60026D5")]
		public virtual void OnStartOrReEnable()
		{
		}

		[Token(Token = "0x60026D6")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60026D7")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60026D8")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60026D9")]
		public virtual void CopyProperties(T source)
		{
		}

		[Token(Token = "0x60026DA")]
		public virtual void AdjustProperties(float timeScale)
		{
		}

		[Token(Token = "0x60026DB")]
		public void AdjustProperties()
		{
		}

		[Token(Token = "0x60026DC")]
		public virtual void Reset()
		{
		}
	}
	[Token(Token = "0x200074D")]
	public class CustomRecorder : Recorder<CustomRecorder.Snapshot>
	{
		[Token(Token = "0x200074E")]
		public class Snapshot
		{
			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23AB0", Offset = "0xE23AB0")]
			private object[] <values>k__BackingField;

			[Token(Token = "0x170005C7")]
			public object[] values
			{
				[Token(Token = "0x60026E2")]
				[Address(RVA = "0x272C0B4", Offset = "0x272C0B4", VA = "0x272C0B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C5A4", Offset = "0xE2C5A4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026E3")]
				[Address(RVA = "0x272C0BC", Offset = "0x272C0BC", VA = "0x272C0BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C5B4", Offset = "0xE2C5B4")]
				private set
				{
				}
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x272C0C4", Offset = "0x272C0C4", VA = "0x272C0C4")]
			public Snapshot(int size)
			{
			}
		}

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[SelfTargeted]
		[AttributeAttribute(Name = "FilterAttribute", RVA = "0xE23A18", Offset = "0xE23A18")]
		private List<UnityVariable> variables;

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x2832690", Offset = "0x2832690", VA = "0x2832690")]
		public CustomRecorder()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x2832728", Offset = "0x2832728", VA = "0x2832728", Slot = "10")]
		protected override void ApplySnapshot(Snapshot snapshot)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x28328A0", Offset = "0x28328A0", VA = "0x28328A0", Slot = "11")]
		protected override Snapshot CopySnapshot()
		{
			return null;
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x2832A98", Offset = "0x2832A98", VA = "0x2832A98", Slot = "12")]
		protected override Snapshot LerpSnapshots(Snapshot from, Snapshot to, float t)
		{
			return null;
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x2832BF0", Offset = "0x2832BF0", VA = "0x2832BF0")]
		private static object LerpValue(object from, object to, float t)
		{
			return null;
		}
	}
	[Token(Token = "0x200074F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE152E0", Offset = "0xE152E0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE152E0", Offset = "0xE152E0")]
	public class GlobalClock : Clock
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected HashSet<Clock> clocks;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected HashSet<Timeline> timelines;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x170005C8")]
		public string key
		{
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x29BDA84", Offset = "0x29BDA84", VA = "0x29BDA84")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x29BDA8C", Offset = "0x29BDA8C", VA = "0x29BDA8C")]
			internal set
			{
			}
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x29BD9B4", Offset = "0x29BD9B4", VA = "0x29BD9B4")]
		public GlobalClock()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x29BDA94", Offset = "0x29BDA94", VA = "0x29BDA94", Slot = "10")]
		internal virtual void Register(Timeline timeline)
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x29BDB80", Offset = "0x29BDB80", VA = "0x29BDB80", Slot = "11")]
		internal virtual void Unregister(Timeline timeline)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x29BDC6C", Offset = "0x29BDC6C", VA = "0x29BDC6C", Slot = "12")]
		internal virtual void Register(Clock clock)
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x29BDD58", Offset = "0x29BDD58", VA = "0x29BDD58", Slot = "13")]
		internal virtual void Unregister(Clock clock)
		{
		}
	}
	[Token(Token = "0x2000750")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE15340", Offset = "0xE15340")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE15340", Offset = "0xE15340")]
	[DisallowMultipleComponent]
	public class LocalClock : Clock
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Timeline timeline;

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x2CF8D88", Offset = "0x2CF8D88", VA = "0x2CF8D88", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x2CF8DB8", Offset = "0x2CF8DB8", VA = "0x2CF8DB8", Slot = "10")]
		public virtual void CacheComponents()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x2CF8EC4", Offset = "0x2CF8EC4", VA = "0x2CF8EC4")]
		public LocalClock()
		{
		}
	}
	[Token(Token = "0x2000751")]
	public delegate void ForwardAction();
	[Token(Token = "0x2000752")]
	public delegate void BackwardAction();
	[Token(Token = "0x2000753")]
	internal sealed class ActionOccurence : Occurrence
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23AD0", Offset = "0xE23AD0")]
		private ForwardAction <forward>k__BackingField;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23AE0", Offset = "0xE23AE0")]
		private BackwardAction <backward>k__BackingField;

		[Token(Token = "0x170005C9")]
		private ForwardAction forward
		{
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x2A9E684", Offset = "0x2A9E684", VA = "0x2A9E684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C5C4", Offset = "0xE2C5C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x2A9E68C", Offset = "0x2A9E68C", VA = "0x2A9E68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C5D4", Offset = "0xE2C5D4")]
			set
			{
			}
		}

		[Token(Token = "0x170005CA")]
		private BackwardAction backward
		{
			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x2A9E694", Offset = "0x2A9E694", VA = "0x2A9E694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C5E4", Offset = "0xE2C5E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x2A9E69C", Offset = "0x2A9E69C", VA = "0x2A9E69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C5F4", Offset = "0xE2C5F4")]
			set
			{
			}
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x2A9E6A4", Offset = "0x2A9E6A4", VA = "0x2A9E6A4")]
		public ActionOccurence(ForwardAction forward, BackwardAction backward)
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x2A9E6F4", Offset = "0x2A9E6F4", VA = "0x2A9E6F4", Slot = "4")]
		public override void Forward()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x2A9E710", Offset = "0x2A9E710", VA = "0x2A9E710", Slot = "5")]
		public override void Backward()
		{
		}
	}
	[Token(Token = "0x2000754")]
	internal sealed class ForwardActionOccurence : Occurrence
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23AF0", Offset = "0xE23AF0")]
		private ForwardAction <forward>k__BackingField;

		[Token(Token = "0x170005CB")]
		private ForwardAction forward
		{
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x29303F8", Offset = "0x29303F8", VA = "0x29303F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C604", Offset = "0xE2C604")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x2930400", Offset = "0x2930400", VA = "0x2930400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C614", Offset = "0xE2C614")]
			set
			{
			}
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x2930408", Offset = "0x2930408", VA = "0x2930408")]
		public ForwardActionOccurence(ForwardAction forward)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x293043C", Offset = "0x293043C", VA = "0x293043C", Slot = "4")]
		public override void Forward()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x2930454", Offset = "0x2930454", VA = "0x2930454", Slot = "5")]
		public override void Backward()
		{
		}
	}
	[Token(Token = "0x2000755")]
	public delegate T ForwardFunc<T>();
	[Token(Token = "0x2000756")]
	public delegate void BackwardFunc<T>(T transfer);
	[Token(Token = "0x2000757")]
	internal sealed class FuncOccurence<T> : Occurrence
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23B00", Offset = "0xE23B00")]
		private ForwardFunc<T> <forward>k__BackingField;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23B10", Offset = "0xE23B10")]
		private BackwardFunc<T> <backward>k__BackingField;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23B20", Offset = "0xE23B20")]
		private T <transfer>k__BackingField;

		[Token(Token = "0x170005CC")]
		private ForwardFunc<T> forward
		{
			[Token(Token = "0x600270B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C624", Offset = "0xE2C624")]
			get
			{
				return null;
			}
			[Token(Token = "0x600270C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C634", Offset = "0xE2C634")]
			set
			{
			}
		}

		[Token(Token = "0x170005CD")]
		private BackwardFunc<T> backward
		{
			[Token(Token = "0x600270D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C644", Offset = "0xE2C644")]
			get
			{
				return null;
			}
			[Token(Token = "0x600270E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C654", Offset = "0xE2C654")]
			set
			{
			}
		}

		[Token(Token = "0x170005CE")]
		private T transfer
		{
			[Token(Token = "0x600270F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C664", Offset = "0xE2C664")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6002710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C674", Offset = "0xE2C674")]
			set
			{
			}
		}

		[Token(Token = "0x6002711")]
		public FuncOccurence(ForwardFunc<T> forward, BackwardFunc<T> backward)
		{
		}

		[Token(Token = "0x6002712")]
		public override void Forward()
		{
		}

		[Token(Token = "0x6002713")]
		public override void Backward()
		{
		}
	}
	[Token(Token = "0x2000758")]
	public abstract class Occurrence
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23B30", Offset = "0xE23B30")]
		private float <time>k__BackingField;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23B40", Offset = "0xE23B40")]
		private bool <repeatable>k__BackingField;

		[Token(Token = "0x170005CF")]
		public float time
		{
			[Token(Token = "0x6002714")]
			[Address(RVA = "0x26A1688", Offset = "0x26A1688", VA = "0x26A1688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C684", Offset = "0xE2C684")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002715")]
			[Address(RVA = "0x26A1690", Offset = "0x26A1690", VA = "0x26A1690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C694", Offset = "0xE2C694")]
			internal set
			{
			}
		}

		[Token(Token = "0x170005D0")]
		public bool repeatable
		{
			[Token(Token = "0x6002716")]
			[Address(RVA = "0x26A1698", Offset = "0x26A1698", VA = "0x26A1698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C6A4", Offset = "0xE2C6A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002717")]
			[Address(RVA = "0x26A16A0", Offset = "0x26A16A0", VA = "0x26A16A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C6B4", Offset = "0xE2C6B4")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002718")]
		public abstract void Forward();

		[Token(Token = "0x6002719")]
		public abstract void Backward();

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x26A16AC", Offset = "0x26A16AC", VA = "0x26A16AC")]
		protected Occurrence()
		{
		}
	}
	[Token(Token = "0x2000759")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE153B0", Offset = "0xE153B0")]
	public abstract class Recorder<TSnapshot> : MonoBehaviour
	{
		[Token(Token = "0x200075A")]
		private class DelegatedRecorder : RecorderTimeline<Component, TSnapshot>
		{
			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Recorder<TSnapshot> parent;

			[Token(Token = "0x6002726")]
			public DelegatedRecorder(Recorder<TSnapshot> parent, Timeline timeline)
			{
			}

			[Token(Token = "0x6002727")]
			protected override void ApplySnapshot(TSnapshot snapshot)
			{
			}

			[Token(Token = "0x6002728")]
			protected override TSnapshot CopySnapshot()
			{
				return (TSnapshot)null;
			}

			[Token(Token = "0x6002729")]
			protected override TSnapshot LerpSnapshots(TSnapshot from, TSnapshot to, float t)
			{
				return (TSnapshot)null;
			}
		}

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool enabledOnce;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Timeline timeline;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RecorderTimeline<Component, TSnapshot> recorder;

		[Token(Token = "0x600271B")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600271C")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600271D")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600271E")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600271F")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002720")]
		public virtual void ModifySnapshots(RecorderTimeline<Component, TSnapshot>.SnapshotModifier modifier)
		{
		}

		[Token(Token = "0x6002721")]
		protected abstract void ApplySnapshot(TSnapshot snapshot);

		[Token(Token = "0x6002722")]
		protected abstract TSnapshot CopySnapshot();

		[Token(Token = "0x6002723")]
		protected abstract TSnapshot LerpSnapshots(TSnapshot from, TSnapshot to, float t);

		[Token(Token = "0x6002724")]
		public virtual void CacheComponents()
		{
		}

		[Token(Token = "0x6002725")]
		protected Recorder()
		{
		}
	}
	[Token(Token = "0x200075B")]
	public interface IRecorder
	{
		[Token(Token = "0x600272A")]
		void Reset();

		[Token(Token = "0x600272B")]
		int EstimateMemoryUsage();
	}
	[Token(Token = "0x200075C")]
	public abstract class RecorderTimeline<TComponent, TSnapshot> : ComponentTimeline<TComponent>, IRecorder where TComponent : Component
	{
		[Token(Token = "0x200075D")]
		public delegate TSnapshot SnapshotModifier(TSnapshot snapshot, float time);

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TSnapshot> snapshots;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<float> times;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int capacity;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float recordingTimer;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float lastTimeScale;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool canRewind;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TSnapshot laterSnapshot;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float laterTime;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TSnapshot earlierSnapshot;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float earlierTime;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TSnapshot interpolatedSnapshot;

		[Token(Token = "0x170005D1")]
		public bool exhaustedRewind
		{
			[Token(Token = "0x600272F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005D2")]
		public float availableRewindDuration
		{
			[Token(Token = "0x6002730")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600272C")]
		public RecorderTimeline(Timeline timeline, TComponent component)
		{
		}

		[Token(Token = "0x600272D")]
		public override void OnStartOrReEnable()
		{
		}

		[Token(Token = "0x600272E")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002731")]
		protected void Progress()
		{
		}

		[Token(Token = "0x6002732")]
		public void Record()
		{
		}

		[Token(Token = "0x6002733")]
		protected void Rewind()
		{
		}

		[Token(Token = "0x6002734")]
		protected void OnExhaustRewind()
		{
		}

		[Token(Token = "0x6002735")]
		protected abstract TSnapshot LerpSnapshots(TSnapshot from, TSnapshot to, float t);

		[Token(Token = "0x6002736")]
		protected abstract TSnapshot CopySnapshot();

		[Token(Token = "0x6002737")]
		protected abstract void ApplySnapshot(TSnapshot snapshot);

		[Token(Token = "0x6002738")]
		protected bool TryFindEarlierSnapshot(bool pop)
		{
			return default(bool);
		}

		[Token(Token = "0x6002739")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600273A")]
		public virtual void ModifySnapshots(SnapshotModifier modifier)
		{
		}

		[Token(Token = "0x600273B")]
		internal static int EstimateMemoryUsage(float duration, float interval)
		{
			return default(int);
		}

		[Token(Token = "0x600273C")]
		public int EstimateMemoryUsage()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200075E")]
	public enum TimeState
	{
		[Token(Token = "0x4001A68")]
		Accelerated,
		[Token(Token = "0x4001A69")]
		Normal,
		[Token(Token = "0x4001A6A")]
		Slowed,
		[Token(Token = "0x4001A6B")]
		Paused,
		[Token(Token = "0x4001A6C")]
		Reversed
	}
	[Token(Token = "0x200075F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE153E8", Offset = "0xE153E8")]
	[DisallowMultipleComponent]
	public class Timekeeper : Singleton<Timekeeper>
	{
		[Token(Token = "0x4001A6D")]
		public const int DefaultMaxParticleLoops = 10;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _debug;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _maxParticleLoops;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, GlobalClock> _clocks;

		[Token(Token = "0x170005D3")]
		public bool debug
		{
			[Token(Token = "0x6002743")]
			[Address(RVA = "0x25927EC", Offset = "0x25927EC", VA = "0x25927EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002744")]
			[Address(RVA = "0x25927F4", Offset = "0x25927F4", VA = "0x25927F4")]
			set
			{
			}
		}

		[Token(Token = "0x170005D4")]
		public int maxParticleLoops
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0x2592800", Offset = "0x2592800", VA = "0x2592800")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002746")]
			[Address(RVA = "0x2592808", Offset = "0x2592808", VA = "0x2592808")]
			set
			{
			}
		}

		[Token(Token = "0x170005D5")]
		public IEnumerable<GlobalClock> clocks
		{
			[Token(Token = "0x6002747")]
			[Address(RVA = "0x2592810", Offset = "0x2592810", VA = "0x2592810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D6")]
		internal static float unscaledDeltaTime
		{
			[Token(Token = "0x600274D")]
			[Address(RVA = "0x2592CEC", Offset = "0x2592CEC", VA = "0x2592CEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x259264C", Offset = "0x259264C", VA = "0x259264C")]
		public Timekeeper()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x2592720", Offset = "0x2592720", VA = "0x2592720", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x2592864", Offset = "0x2592864", VA = "0x2592864", Slot = "6")]
		public virtual bool HasClock(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x2592914", Offset = "0x2592914", VA = "0x2592914", Slot = "7")]
		public virtual GlobalClock Clock(string key)
		{
			return null;
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x2592A30", Offset = "0x2592A30", VA = "0x2592A30", Slot = "8")]
		public virtual GlobalClock AddClock(string key)
		{
			return null;
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x2592B98", Offset = "0x2592B98", VA = "0x2592B98", Slot = "9")]
		public virtual void RemoveClock(string key)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x2592CB4", Offset = "0x2592CB4", VA = "0x2592CB4")]
		internal static TimeState GetTimeState(float timeScale)
		{
			return default(TimeState);
		}
	}
	[Token(Token = "0x2000760")]
	public enum TimelineMode
	{
		[Token(Token = "0x4001A72")]
		Local,
		[Token(Token = "0x4001A73")]
		Global
	}
	[Token(Token = "0x2000761")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE15434", Offset = "0xE15434")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE15434", Offset = "0xE15434")]
	public class Timeline : TimelineEffector
	{
		[Serializable]
		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE154A4", Offset = "0xE154A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IAreaClock, bool> <>9__55_0;

			[Token(Token = "0x600278F")]
			[Address(RVA = "0x31303C4", Offset = "0x31303C4", VA = "0x31303C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x31303CC", Offset = "0x31303CC", VA = "0x31303CC")]
			internal bool <ReleaseFromAll>b__55_0(IAreaClock ac)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE154B4", Offset = "0xE154B4")]
		private sealed class <WaitingForSeconds>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timeline <>4__this;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <start>5__2;

			[Token(Token = "0x170005E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002794")]
				[Address(RVA = "0x3130494", Offset = "0x3130494", VA = "0x3130494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002796")]
				[Address(RVA = "0x31304DC", Offset = "0x31304DC", VA = "0x31304DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0x31303D8", Offset = "0x31303D8", VA = "0x31303D8")]
			[DebuggerHidden]
			public <WaitingForSeconds>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x3130404", Offset = "0x3130404", VA = "0x3130404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x3130408", Offset = "0x3130408", VA = "0x3130408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x313049C", Offset = "0x313049C", VA = "0x313049C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A74")]
		protected internal const float DefaultRecordingDuration = 30f;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected internal float lastTimeScale;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Queue<float> previousDeltaTimes;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<Occurrence> occurrences;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected HashSet<Occurrence> handledOccurrences;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Occurrence nextForwardOccurrence;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Occurrence nextBackwardOccurrence;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected internal List<IAreaClock> areaClocks;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected internal List<TimelineChild> children;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private TimelineMode _mode;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[GlobalClock]
		private string _globalClockKey;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Clock _clock;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23BB8", Offset = "0xE23BB8")]
		private float <timeScale>k__BackingField;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23BC8", Offset = "0xE23BC8")]
		private float <deltaTime>k__BackingField;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23BD8", Offset = "0xE23BD8")]
		private float <fixedDeltaTime>k__BackingField;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int smoothingDeltas;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23BE8", Offset = "0xE23BE8")]
		private float <time>k__BackingField;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23BF8", Offset = "0xE23BF8")]
		private float <unscaledTime>k__BackingField;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE23C08", Offset = "0xE23C08")]
		[SerializeField]
		private bool _rewindable;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float _recordingDuration;

		[Token(Token = "0x170005D7")]
		protected override Timeline timeline
		{
			[Token(Token = "0x6002753")]
			[Address(RVA = "0x2593C64", Offset = "0x2593C64", VA = "0x2593C64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D8")]
		public TimelineMode mode
		{
			[Token(Token = "0x6002754")]
			[Address(RVA = "0x2593C68", Offset = "0x2593C68", VA = "0x2593C68")]
			get
			{
				return default(TimelineMode);
			}
			[Token(Token = "0x6002755")]
			[Address(RVA = "0x2593C70", Offset = "0x2593C70", VA = "0x2593C70")]
			set
			{
			}
		}

		[Token(Token = "0x170005D9")]
		public string globalClockKey
		{
			[Token(Token = "0x6002756")]
			[Address(RVA = "0x2593C80", Offset = "0x2593C80", VA = "0x2593C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002757")]
			[Address(RVA = "0x2593C88", Offset = "0x2593C88", VA = "0x2593C88")]
			set
			{
			}
		}

		[Token(Token = "0x170005DA")]
		public Clock clock
		{
			[Token(Token = "0x6002758")]
			[Address(RVA = "0x2593028", Offset = "0x2593028", VA = "0x2593028")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002759")]
			[Address(RVA = "0x2593CB8", Offset = "0x2593CB8", VA = "0x2593CB8")]
			set
			{
			}
		}

		[Token(Token = "0x170005DB")]
		public float timeScale
		{
			[Token(Token = "0x600275A")]
			[Address(RVA = "0x2593CC0", Offset = "0x2593CC0", VA = "0x2593CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C6C4", Offset = "0xE2C6C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600275B")]
			[Address(RVA = "0x2593CC8", Offset = "0x2593CC8", VA = "0x2593CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C6D4", Offset = "0xE2C6D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DC")]
		public float deltaTime
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x2593CD0", Offset = "0x2593CD0", VA = "0x2593CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C6E4", Offset = "0xE2C6E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x2593CD8", Offset = "0x2593CD8", VA = "0x2593CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C6F4", Offset = "0xE2C6F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DD")]
		public float fixedDeltaTime
		{
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x2593CE0", Offset = "0x2593CE0", VA = "0x2593CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C704", Offset = "0xE2C704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600275F")]
			[Address(RVA = "0x2593CE8", Offset = "0x2593CE8", VA = "0x2593CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C714", Offset = "0xE2C714")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005DE")]
		public float smoothDeltaTime
		{
			[Token(Token = "0x6002760")]
			[Address(RVA = "0x2593CF0", Offset = "0x2593CF0", VA = "0x2593CF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005DF")]
		public float time
		{
			[Token(Token = "0x6002761")]
			[Address(RVA = "0x2593D64", Offset = "0x2593D64", VA = "0x2593D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C724", Offset = "0xE2C724")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002762")]
			[Address(RVA = "0x2593D6C", Offset = "0x2593D6C", VA = "0x2593D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C734", Offset = "0xE2C734")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170005E0")]
		public float unscaledTime
		{
			[Token(Token = "0x6002763")]
			[Address(RVA = "0x2593D74", Offset = "0x2593D74", VA = "0x2593D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C744", Offset = "0xE2C744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002764")]
			[Address(RVA = "0x2593D7C", Offset = "0x2593D7C", VA = "0x2593D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C754", Offset = "0xE2C754")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005E1")]
		public TimeState state
		{
			[Token(Token = "0x6002765")]
			[Address(RVA = "0x2593D84", Offset = "0x2593D84", VA = "0x2593D84")]
			get
			{
				return default(TimeState);
			}
		}

		[Token(Token = "0x170005E2")]
		public bool rewindable
		{
			[Token(Token = "0x6002788")]
			[Address(RVA = "0x25952F8", Offset = "0x25952F8", VA = "0x25952F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002789")]
			[Address(RVA = "0x2595300", Offset = "0x2595300", VA = "0x2595300")]
			set
			{
			}
		}

		[Token(Token = "0x170005E3")]
		public float recordingDuration
		{
			[Token(Token = "0x600278A")]
			[Address(RVA = "0x2595320", Offset = "0x2595320", VA = "0x2595320")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600278B")]
			[Address(RVA = "0x2595328", Offset = "0x2595328", VA = "0x2595328")]
			set
			{
			}
		}

		[Token(Token = "0x170005E4")]
		public float availableRewindDuration
		{
			[Token(Token = "0x600278C")]
			[Address(RVA = "0x2595448", Offset = "0x2595448", VA = "0x2595448")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x2592D48", Offset = "0x2592D48", VA = "0x2592D48")]
		public Timeline()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x2592FF0", Offset = "0x2592FF0", VA = "0x2592FF0", Slot = "6")]
		protected override void OnStartOrReEnable()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x2593240", Offset = "0x2593240", VA = "0x2593240", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x2593944", Offset = "0x2593944", VA = "0x2593944", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x2593A84", Offset = "0x2593A84", VA = "0x2593A84", Slot = "11")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x2593DC0", Offset = "0x2593DC0", VA = "0x2593DC0", Slot = "12")]
		protected virtual Clock FindClock()
		{
			return null;
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x2594070", Offset = "0x2594070", VA = "0x2594070", Slot = "13")]
		public virtual void ReleaseFrom(IAreaClock areaClock)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x2594128", Offset = "0x2594128", VA = "0x2594128", Slot = "14")]
		public virtual void ReleaseFromAll()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x2594358", Offset = "0x2594358", VA = "0x2594358", Slot = "15")]
		protected virtual void TriggerEvents()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x25945CC", Offset = "0x25945CC", VA = "0x25945CC", Slot = "16")]
		protected virtual void RecordSmoothing()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x2593720", Offset = "0x2593720", VA = "0x2593720")]
		protected void TriggerForwardOccurrences()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x2593814", Offset = "0x2593814", VA = "0x2593814")]
		protected void TriggerBackwardOccurrences()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x25948C8", Offset = "0x25948C8", VA = "0x25948C8")]
		protected Occurrence OccurrenceAfter(float time, params Occurrence[] ignored)
		{
			return null;
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x25946C0", Offset = "0x25946C0", VA = "0x25946C0")]
		protected Occurrence OccurrenceAfter(float time, IEnumerable<Occurrence> ignored)
		{
			return null;
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x25948CC", Offset = "0x25948CC", VA = "0x25948CC")]
		protected Occurrence OccurrenceBefore(float time, params Occurrence[] ignored)
		{
			return null;
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x25947C4", Offset = "0x25947C4", VA = "0x25947C4")]
		protected Occurrence OccurrenceBefore(float time, IEnumerable<Occurrence> ignored)
		{
			return null;
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x25948D0", Offset = "0x25948D0", VA = "0x25948D0", Slot = "17")]
		protected virtual void PlaceOccurence(Occurrence occurrence, float time)
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x259498C", Offset = "0x259498C", VA = "0x259498C", Slot = "18")]
		public virtual Occurrence Schedule(float time, bool repeatable, Occurrence occurrence)
		{
			return null;
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x2594A34", Offset = "0x2594A34", VA = "0x2594A34")]
		public Occurrence Do(bool repeatable, Occurrence occurrence)
		{
			return null;
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x2594A4C", Offset = "0x2594A4C", VA = "0x2594A4C")]
		public Occurrence Plan(float delay, bool repeatable, Occurrence occurrence)
		{
			return null;
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x2594AC4", Offset = "0x2594AC4", VA = "0x2594AC4")]
		public Occurrence Memory(float delay, bool repeatable, Occurrence occurrence)
		{
			return null;
		}

		[Token(Token = "0x6002776")]
		public Occurrence Schedule<T>(float time, bool repeatable, ForwardFunc<T> forward, BackwardFunc<T> backward)
		{
			return null;
		}

		[Token(Token = "0x6002777")]
		public Occurrence Do<T>(bool repeatable, ForwardFunc<T> forward, BackwardFunc<T> backward)
		{
			return null;
		}

		[Token(Token = "0x6002778")]
		public Occurrence Plan<T>(float delay, bool repeatable, ForwardFunc<T> forward, BackwardFunc<T> backward)
		{
			return null;
		}

		[Token(Token = "0x6002779")]
		public Occurrence Memory<T>(float delay, bool repeatable, ForwardFunc<T> forward, BackwardFunc<T> backward)
		{
			return null;
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x2594B3C", Offset = "0x2594B3C", VA = "0x2594B3C")]
		public Occurrence Schedule(float time, bool repeatable, ForwardAction forward, BackwardAction backward)
		{
			return null;
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x2594BE0", Offset = "0x2594BE0", VA = "0x2594BE0")]
		public Occurrence Do(bool repeatable, ForwardAction forward, BackwardAction backward)
		{
			return null;
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x2594C78", Offset = "0x2594C78", VA = "0x2594C78")]
		public Occurrence Plan(float delay, bool repeatable, ForwardAction forward, BackwardAction backward)
		{
			return null;
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x2594D10", Offset = "0x2594D10", VA = "0x2594D10")]
		public Occurrence Memory(float delay, bool repeatable, ForwardAction forward, BackwardAction backward)
		{
			return null;
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x2594DA8", Offset = "0x2594DA8", VA = "0x2594DA8")]
		public Occurrence Schedule(float time, ForwardAction forward)
		{
			return null;
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x2594E38", Offset = "0x2594E38", VA = "0x2594E38")]
		public Occurrence Plan(float delay, ForwardAction forward)
		{
			return null;
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x2594EBC", Offset = "0x2594EBC", VA = "0x2594EBC")]
		public Occurrence Memory(float delay, ForwardAction forward)
		{
			return null;
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x2594F40", Offset = "0x2594F40", VA = "0x2594F40")]
		public void Cancel(Occurrence occurrence)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x2595144", Offset = "0x2595144", VA = "0x2595144")]
		public bool TryCancel(Occurrence occurrence)
		{
			return default(bool);
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x25951C8", Offset = "0x25951C8", VA = "0x25951C8")]
		public void Reschedule(Occurrence occurrence, float time)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x25951EC", Offset = "0x25951EC", VA = "0x25951EC")]
		public void Postpone(Occurrence occurrence, float delay)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x2595218", Offset = "0x2595218", VA = "0x2595218")]
		public void Prepone(Occurrence occurrence, float delay)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x2595244", Offset = "0x2595244", VA = "0x2595244")]
		public Coroutine WaitForSeconds(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x2595270", Offset = "0x2595270", VA = "0x2595270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2C764", Offset = "0xE2C764")]
		protected IEnumerator WaitingForSeconds(float seconds)
		{
			return null;
		}
	}
	[Token(Token = "0x2000764")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE154C4", Offset = "0xE154C4")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE154C4", Offset = "0xE154C4")]
	public class TimelineChild : TimelineEffector
	{
		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C64", Offset = "0xE23C64")]
		private Timeline <parent>k__BackingField;

		[Token(Token = "0x170005E7")]
		public Timeline parent
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0x25954EC", Offset = "0x25954EC", VA = "0x25954EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C814", Offset = "0xE2C814")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002798")]
			[Address(RVA = "0x25954F4", Offset = "0x25954F4", VA = "0x25954F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C824", Offset = "0xE2C824")]
			private set
			{
			}
		}

		[Token(Token = "0x170005E8")]
		protected override Timeline timeline
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x25954FC", Offset = "0x25954FC", VA = "0x25954FC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x2595504", Offset = "0x2595504", VA = "0x2595504", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x2595530", Offset = "0x2595530", VA = "0x2595530")]
		public void CacheParent()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x25956C8", Offset = "0x25956C8", VA = "0x25956C8")]
		public TimelineChild()
		{
		}
	}
	[Token(Token = "0x2000765")]
	public abstract class TimelineEffector : MonoBehaviour
	{
		[Token(Token = "0x4001A90")]
		protected internal const float DefaultRecordingInterval = 0.5f;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool enabledOnce;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _recordingInterval;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<IComponentTimeline> components;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C84", Offset = "0xE23C84")]
		private AnimationTimeline <animation>k__BackingField;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C94", Offset = "0xE23C94")]
		private AnimatorTimeline <animator>k__BackingField;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CA4", Offset = "0xE23CA4")]
		private List<AudioSourceTimeline> <audioSources>k__BackingField;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CB4", Offset = "0xE23CB4")]
		private AudioSourceTimeline <audioSource>k__BackingField;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CC4", Offset = "0xE23CC4")]
		private NavMeshAgentTimeline <navMeshAgent>k__BackingField;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CD4", Offset = "0xE23CD4")]
		private IParticleSystemTimeline <particleSystem>k__BackingField;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CE4", Offset = "0xE23CE4")]
		private RigidbodyTimeline3D <rigidbody>k__BackingField;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CF4", Offset = "0xE23CF4")]
		private RigidbodyTimeline2D <rigidbody2D>k__BackingField;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D04", Offset = "0xE23D04")]
		private TransformTimeline <transform>k__BackingField;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D14", Offset = "0xE23D14")]
		private WindZoneTimeline <windZone>k__BackingField;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D24", Offset = "0xE23D24")]
		private TerrainTimeline <terrain>k__BackingField;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D34", Offset = "0xE23D34")]
		private TrailRendererTimeline <trailRenderer>k__BackingField;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D44", Offset = "0xE23D44")]
		private WheelColliderTimeline <wheelCollider>k__BackingField;

		[Token(Token = "0x170005E9")]
		protected abstract Timeline timeline
		{
			[Token(Token = "0x600279E")]
			get;
		}

		[Token(Token = "0x170005EA")]
		public float recordingInterval
		{
			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x2595808", Offset = "0x2595808", VA = "0x2595808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x2595810", Offset = "0x2595810", VA = "0x2595810")]
			set
			{
			}
		}

		[Token(Token = "0x170005EB")]
		public AnimationTimeline animation
		{
			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x2595910", Offset = "0x2595910", VA = "0x2595910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C834", Offset = "0xE2C834")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x2595918", Offset = "0x2595918", VA = "0x2595918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C844", Offset = "0xE2C844")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005EC")]
		public AnimatorTimeline animator
		{
			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x2595920", Offset = "0x2595920", VA = "0x2595920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C854", Offset = "0xE2C854")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x2595928", Offset = "0x2595928", VA = "0x2595928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C864", Offset = "0xE2C864")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005ED")]
		public List<AudioSourceTimeline> audioSources
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x2595930", Offset = "0x2595930", VA = "0x2595930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C874", Offset = "0xE2C874")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x2595938", Offset = "0x2595938", VA = "0x2595938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C884", Offset = "0xE2C884")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005EE")]
		public AudioSourceTimeline audioSource
		{
			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x2595940", Offset = "0x2595940", VA = "0x2595940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C894", Offset = "0xE2C894")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x2595948", Offset = "0x2595948", VA = "0x2595948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8A4", Offset = "0xE2C8A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005EF")]
		public NavMeshAgentTimeline navMeshAgent
		{
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x2595950", Offset = "0x2595950", VA = "0x2595950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8B4", Offset = "0xE2C8B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x2595958", Offset = "0x2595958", VA = "0x2595958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8C4", Offset = "0xE2C8C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F0")]
		public IParticleSystemTimeline particleSystem
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x2595960", Offset = "0x2595960", VA = "0x2595960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8D4", Offset = "0xE2C8D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x2595968", Offset = "0x2595968", VA = "0x2595968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8E4", Offset = "0xE2C8E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F1")]
		public RigidbodyTimeline3D rigidbody
		{
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x2595970", Offset = "0x2595970", VA = "0x2595970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8F4", Offset = "0xE2C8F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0x2595978", Offset = "0x2595978", VA = "0x2595978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C904", Offset = "0xE2C904")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F2")]
		public RigidbodyTimeline2D rigidbody2D
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x2595980", Offset = "0x2595980", VA = "0x2595980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C914", Offset = "0xE2C914")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x2595988", Offset = "0x2595988", VA = "0x2595988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C924", Offset = "0xE2C924")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public new TransformTimeline transform
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x2595990", Offset = "0x2595990", VA = "0x2595990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C934", Offset = "0xE2C934")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0x2595998", Offset = "0x2595998", VA = "0x2595998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C944", Offset = "0xE2C944")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		public WindZoneTimeline windZone
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x25959A0", Offset = "0x25959A0", VA = "0x25959A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C954", Offset = "0xE2C954")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x25959A8", Offset = "0x25959A8", VA = "0x25959A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C964", Offset = "0xE2C964")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F5")]
		public TerrainTimeline terrain
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x25959B0", Offset = "0x25959B0", VA = "0x25959B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C974", Offset = "0xE2C974")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x25959B8", Offset = "0x25959B8", VA = "0x25959B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C984", Offset = "0xE2C984")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F6")]
		public TrailRendererTimeline trailRenderer
		{
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x25959C0", Offset = "0x25959C0", VA = "0x25959C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C994", Offset = "0xE2C994")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x25959C8", Offset = "0x25959C8", VA = "0x25959C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9A4", Offset = "0xE2C9A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F7")]
		public WheelColliderTimeline wheelCollider
		{
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x25959D0", Offset = "0x25959D0", VA = "0x25959D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9B4", Offset = "0xE2C9B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x25959D8", Offset = "0x25959D8", VA = "0x25959D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9C4", Offset = "0xE2C9C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170005F8")]
		protected IRecorder recorder
		{
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x2595428", Offset = "0x2595428", VA = "0x2595428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x2592F18", Offset = "0x2592F18", VA = "0x2592F18")]
		public TimelineEffector()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x25956BC", Offset = "0x25956BC", VA = "0x25956BC", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x25956CC", Offset = "0x25956CC", VA = "0x25956CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x25956D8", Offset = "0x25956D8", VA = "0x25956D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x25930CC", Offset = "0x25930CC", VA = "0x25930CC", Slot = "6")]
		protected virtual void OnStartOrReEnable()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x2593610", Offset = "0x2593610", VA = "0x2593610", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x25956F8", Offset = "0x25956F8", VA = "0x25956F8", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x2593974", Offset = "0x2593974", VA = "0x2593974", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x25959E0", Offset = "0x25959E0", VA = "0x25959E0", Slot = "10")]
		public virtual void CacheComponents()
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x2593B54", Offset = "0x2593B54", VA = "0x2593B54", Slot = "11")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x2596C30", Offset = "0x2596C30", VA = "0x2596C30")]
		public void ResetRecording()
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x2596CEC", Offset = "0x2596CEC", VA = "0x2596CEC")]
		public int EstimateMemoryUsage()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000766")]
	public class AnimationTimeline : ComponentTimeline<Animation>
	{
		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _speed;

		[Token(Token = "0x170005F9")]
		public float speed
		{
			[Token(Token = "0x60027C8")]
			[Address(RVA = "0x2AA37F8", Offset = "0x2AA37F8", VA = "0x2AA37F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x2AA3800", Offset = "0x2AA3800", VA = "0x2AA3800")]
			set
			{
			}
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x2AA3794", Offset = "0x2AA3794", VA = "0x2AA3794")]
		public AnimationTimeline(Timeline timeline, Animation component)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x2AA385C", Offset = "0x2AA385C", VA = "0x2AA385C", Slot = "16")]
		public override void CopyProperties(Animation source)
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x2AA3B8C", Offset = "0x2AA3B8C", VA = "0x2AA3B8C", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class AnimatorTimeline : ComponentTimeline<Animator>
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _speed;

		[Token(Token = "0x170005FA")]
		public float speed
		{
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0x2AA6410", Offset = "0x2AA6410", VA = "0x2AA6410")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x2AA6418", Offset = "0x2AA6418", VA = "0x2AA6418")]
			set
			{
			}
		}

		[Token(Token = "0x170005FB")]
		private int recordedFrames
		{
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x2AA6474", Offset = "0x2AA6474", VA = "0x2AA6474")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x2AA63AC", Offset = "0x2AA63AC", VA = "0x2AA63AC")]
		public AnimatorTimeline(Timeline timeline, Animator component)
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x2AA64F4", Offset = "0x2AA64F4", VA = "0x2AA64F4", Slot = "16")]
		public override void CopyProperties(Animator source)
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x2AA6528", Offset = "0x2AA6528", VA = "0x2AA6528", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x2AA659C", Offset = "0x2AA659C", VA = "0x2AA659C", Slot = "12")]
		public override void OnStartOrReEnable()
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x2AA6620", Offset = "0x2AA6620", VA = "0x2AA6620", Slot = "15")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x2AA6694", Offset = "0x2AA6694", VA = "0x2AA6694", Slot = "13")]
		public override void Update()
		{
		}
	}
	[Token(Token = "0x2000768")]
	public class AudioSourceTimeline : ComponentTimeline<AudioSource>
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _pitch;

		[Token(Token = "0x170005FC")]
		public float pitch
		{
			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x2AA95CC", Offset = "0x2AA95CC", VA = "0x2AA95CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x2AA95D4", Offset = "0x2AA95D4", VA = "0x2AA95D4")]
			set
			{
			}
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x2AA9630", Offset = "0x2AA9630", VA = "0x2AA9630")]
		public AudioSourceTimeline(Timeline timeline, AudioSource component)
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x2AA9694", Offset = "0x2AA9694", VA = "0x2AA9694", Slot = "16")]
		public override void CopyProperties(AudioSource source)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x2AA96C8", Offset = "0x2AA96C8", VA = "0x2AA96C8", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x2000769")]
	public interface IParticleSystemTimeline : IComponentTimeline<ParticleSystem>, IComponentTimeline
	{
		[Token(Token = "0x170005FD")]
		float playbackSpeed
		{
			[Token(Token = "0x60027DA")]
			get;
			[Token(Token = "0x60027DB")]
			set;
		}

		[Token(Token = "0x170005FE")]
		float time
		{
			[Token(Token = "0x60027DC")]
			get;
			[Token(Token = "0x60027DD")]
			set;
		}

		[Token(Token = "0x170005FF")]
		bool enableEmission
		{
			[Token(Token = "0x60027DE")]
			get;
			[Token(Token = "0x60027DF")]
			set;
		}

		[Token(Token = "0x17000600")]
		bool isPlaying
		{
			[Token(Token = "0x60027E0")]
			get;
		}

		[Token(Token = "0x17000601")]
		bool isPaused
		{
			[Token(Token = "0x60027E1")]
			get;
		}

		[Token(Token = "0x17000602")]
		bool isStopped
		{
			[Token(Token = "0x60027E2")]
			get;
		}

		[Token(Token = "0x60027E3")]
		void Play(bool withChildren = true);

		[Token(Token = "0x60027E4")]
		void Pause(bool withChildren = true);

		[Token(Token = "0x60027E5")]
		void Stop(bool withChildren = true);

		[Token(Token = "0x60027E6")]
		bool IsAlive(bool withChildren = true);
	}
	[Token(Token = "0x200076A")]
	public class NavMeshAgentTimeline : ComponentTimeline<NavMeshAgent>
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _speed;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _angularSpeed;

		[Token(Token = "0x17000603")]
		public float speed
		{
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x269B688", Offset = "0x269B688", VA = "0x269B688")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027E8")]
			[Address(RVA = "0x269B690", Offset = "0x269B690", VA = "0x269B690")]
			set
			{
			}
		}

		[Token(Token = "0x17000604")]
		public float angularSpeed
		{
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x269B6EC", Offset = "0x269B6EC", VA = "0x269B6EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x269B6F4", Offset = "0x269B6F4", VA = "0x269B6F4")]
			set
			{
			}
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x269B750", Offset = "0x269B750", VA = "0x269B750")]
		public NavMeshAgentTimeline(Timeline timeline, NavMeshAgent component)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x269B7B4", Offset = "0x269B7B4", VA = "0x269B7B4", Slot = "13")]
		public override void Update()
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x269B844", Offset = "0x269B844", VA = "0x269B844", Slot = "16")]
		public override void CopyProperties(NavMeshAgent source)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x269B88C", Offset = "0x269B88C", VA = "0x269B88C", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x200076B")]
	public class NonRewindableParticleSystemTimeline : ComponentTimeline<ParticleSystem>, IParticleSystemTimeline, IComponentTimeline<ParticleSystem>, IComponentTimeline
	{
		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool warnedRewind;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _playbackSpeed;

		[Token(Token = "0x17000605")]
		public float playbackSpeed
		{
			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x269FF4C", Offset = "0x269FF4C", VA = "0x269FF4C", Slot = "19")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x269FF54", Offset = "0x269FF54", VA = "0x269FF54", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000606")]
		public float time
		{
			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x269FFB0", Offset = "0x269FFB0", VA = "0x269FFB0", Slot = "21")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x269FFFC", Offset = "0x269FFFC", VA = "0x269FFFC", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000607")]
		public bool enableEmission
		{
			[Token(Token = "0x60027F4")]
			[Address(RVA = "0x26A0058", Offset = "0x26A0058", VA = "0x26A0058", Slot = "23")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x26A00C8", Offset = "0x26A00C8", VA = "0x26A00C8", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000608")]
		public bool isPlaying
		{
			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x26A013C", Offset = "0x26A013C", VA = "0x26A013C", Slot = "25")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000609")]
		public bool isPaused
		{
			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x26A0188", Offset = "0x26A0188", VA = "0x26A0188", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060A")]
		public bool isStopped
		{
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x26A01D4", Offset = "0x26A01D4", VA = "0x26A01D4", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x269FEE8", Offset = "0x269FEE8", VA = "0x269FEE8")]
		public NonRewindableParticleSystemTimeline(Timeline timeline, ParticleSystem component)
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x26A0220", Offset = "0x26A0220", VA = "0x26A0220", Slot = "28")]
		public void Play(bool withChildren = true)
		{
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x26A027C", Offset = "0x26A027C", VA = "0x26A027C", Slot = "29")]
		public void Pause(bool withChildren = true)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x26A02D8", Offset = "0x26A02D8", VA = "0x26A02D8", Slot = "30")]
		public void Stop(bool withChildren = true)
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x26A0334", Offset = "0x26A0334", VA = "0x26A0334", Slot = "31")]
		public bool IsAlive(bool withChildren = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x26A0390", Offset = "0x26A0390", VA = "0x26A0390", Slot = "16")]
		public override void CopyProperties(ParticleSystem source)
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x26A03D8", Offset = "0x26A03D8", VA = "0x26A03D8", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x200076C")]
	public class RewindableParticleSystemTimeline : ComponentTimeline<ParticleSystem>, IParticleSystemTimeline, IComponentTimeline<ParticleSystem>, IComponentTimeline
	{
		[Token(Token = "0x200076D")]
		private enum State
		{
			[Token(Token = "0x4001AB3")]
			Playing,
			[Token(Token = "0x4001AB4")]
			Paused,
			[Token(Token = "0x4001AB5")]
			Stopping,
			[Token(Token = "0x4001AB6")]
			Stopped
		}

		[Token(Token = "0x200076E")]
		private enum EmissionAction
		{
			[Token(Token = "0x4001AB8")]
			EnableEmission,
			[Token(Token = "0x4001AB9")]
			DisableEmission,
			[Token(Token = "0x4001ABA")]
			Play,
			[Token(Token = "0x4001ABB")]
			Stop
		}

		[Token(Token = "0x200076F")]
		private struct StateEvent
		{
			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public State state;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float time;

			[Token(Token = "0x6002819")]
			[Address(RVA = "0x2EE7A90", Offset = "0x2EE7A90", VA = "0x2EE7A90")]
			public StateEvent(State state, float time)
			{
			}
		}

		[Token(Token = "0x2000770")]
		private struct EmissionEvent
		{
			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public EmissionAction action;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float time;

			[Token(Token = "0x600281A")]
			[Address(RVA = "0x2EE7A84", Offset = "0x2EE7A84", VA = "0x2EE7A84")]
			public EmissionEvent(EmissionAction action, float time)
			{
			}
		}

		[Token(Token = "0x2000771")]
		private delegate void ChildNativeAction(ParticleSystem target);

		[Token(Token = "0x2000772")]
		private delegate void ChildChronosAction(IParticleSystemTimeline target);

		[Token(Token = "0x2000773")]
		private delegate bool ChildNativeCheck(ParticleSystem target);

		[Token(Token = "0x2000774")]
		private delegate bool ChildChronosCheck(IParticleSystemTimeline target);

		[Serializable]
		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15534", Offset = "0xE15534")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ChildNativeAction <>9__41_0;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ChildChronosAction <>9__41_1;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ChildNativeAction <>9__42_0;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ChildChronosAction <>9__42_1;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ChildNativeAction <>9__43_0;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ChildChronosAction <>9__43_1;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ChildNativeCheck <>9__44_0;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ChildChronosCheck <>9__44_1;

			[Token(Token = "0x600282C")]
			[Address(RVA = "0x2EE6804", Offset = "0x2EE6804", VA = "0x2EE6804")]
			public <>c()
			{
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x2EE680C", Offset = "0x2EE680C", VA = "0x2EE680C")]
			internal void <Play>b__41_0(ParticleSystem ps)
			{
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0x2EE682C", Offset = "0x2EE682C", VA = "0x2EE682C")]
			internal void <Play>b__41_1(IParticleSystemTimeline ps)
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x2EE68DC", Offset = "0x2EE68DC", VA = "0x2EE68DC")]
			internal void <Pause>b__42_0(ParticleSystem ps)
			{
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0x2EE68FC", Offset = "0x2EE68FC", VA = "0x2EE68FC")]
			internal void <Pause>b__42_1(IParticleSystemTimeline ps)
			{
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x2EE69AC", Offset = "0x2EE69AC", VA = "0x2EE69AC")]
			internal void <Stop>b__43_0(ParticleSystem ps)
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0x2EE69CC", Offset = "0x2EE69CC", VA = "0x2EE69CC")]
			internal void <Stop>b__43_1(IParticleSystemTimeline ps)
			{
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x2EE6A7C", Offset = "0x2EE6A7C", VA = "0x2EE6A7C")]
			internal bool <IsAlive>b__44_0(ParticleSystem ps)
			{
				return default(bool);
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x2EE6A9C", Offset = "0x2EE6A9C", VA = "0x2EE6A9C")]
			internal bool <IsAlive>b__44_1(IParticleSystemTimeline ps)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float absoluteSimulationTime;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float loopedSimulationTime;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float relativeStartTime;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D54", Offset = "0xE23D54")]
		private float <playbackSpeed>k__BackingField;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StateEvent> stateEvents;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State stateOnStart;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<EmissionEvent> emissionEvents;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableEmissionOnStart;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private State _state;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _enableEmission;

		[Token(Token = "0x1700060B")]
		public float playbackSpeed
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x2B3B1D0", Offset = "0x2B3B1D0", VA = "0x2B3B1D0", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9D4", Offset = "0xE2C9D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002800")]
			[Address(RVA = "0x2B3B1D8", Offset = "0x2B3B1D8", VA = "0x2B3B1D8", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9E4", Offset = "0xE2C9E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700060C")]
		public float time
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0x2B3B1E0", Offset = "0x2B3B1E0", VA = "0x2B3B1E0", Slot = "21")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002802")]
			[Address(RVA = "0x2B3B264", Offset = "0x2B3B264", VA = "0x2B3B264", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x1700060D")]
		public bool isPlaying
		{
			[Token(Token = "0x6002803")]
			[Address(RVA = "0x2B3B274", Offset = "0x2B3B274", VA = "0x2B3B274", Slot = "25")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060E")]
		public bool isPaused
		{
			[Token(Token = "0x6002804")]
			[Address(RVA = "0x2B3B288", Offset = "0x2B3B288", VA = "0x2B3B288", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060F")]
		public bool isStopped
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0x2B3B298", Offset = "0x2B3B298", VA = "0x2B3B298", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000610")]
		private float stateEventsTime
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x2B3B2A8", Offset = "0x2B3B2A8", VA = "0x2B3B2A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000611")]
		private float emissionEventsTime
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x2B3B2F4", Offset = "0x2B3B2F4", VA = "0x2B3B2F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000612")]
		private State state
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0x2B3B504", Offset = "0x2B3B504", VA = "0x2B3B504")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x600280C")]
			[Address(RVA = "0x2B3B50C", Offset = "0x2B3B50C", VA = "0x2B3B50C")]
			set
			{
			}
		}

		[Token(Token = "0x17000613")]
		public bool enableEmission
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x2B3B6FC", Offset = "0x2B3B6FC", VA = "0x2B3B6FC", Slot = "23")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600280E")]
			[Address(RVA = "0x2B3B704", Offset = "0x2B3B704", VA = "0x2B3B704", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x2B3B2FC", Offset = "0x2B3B2FC", VA = "0x2B3B2FC")]
		private void RegisterState(State state)
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x2B3B384", Offset = "0x2B3B384", VA = "0x2B3B384")]
		private void RegisterEmission(EmissionAction action)
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x2B3B408", Offset = "0x2B3B408", VA = "0x2B3B408")]
		public RewindableParticleSystemTimeline(Timeline timeline, ParticleSystem component)
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x2B3B79C", Offset = "0x2B3B79C", VA = "0x2B3B79C", Slot = "16")]
		public override void CopyProperties(ParticleSystem source)
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x2B3B8CC", Offset = "0x2B3B8CC", VA = "0x2B3B8CC", Slot = "13")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x2B3BD1C", Offset = "0x2B3BD1C", VA = "0x2B3BD1C", Slot = "28")]
		public void Play(bool withChildren = true)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x2B3C248", Offset = "0x2B3C248", VA = "0x2B3C248", Slot = "29")]
		public void Pause(bool withChildren = true)
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x2B3C440", Offset = "0x2B3C440", VA = "0x2B3C440", Slot = "30")]
		public void Stop(bool withChildren = true)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x2B3C644", Offset = "0x2B3C644", VA = "0x2B3C644", Slot = "31")]
		public bool IsAlive(bool withChildren = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x2B3C09C", Offset = "0x2B3C09C", VA = "0x2B3C09C")]
		private void ExecuteOnChildren(ChildNativeAction native, ChildChronosAction chronos)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x2B3C810", Offset = "0x2B3C810", VA = "0x2B3C810")]
		private bool CheckOnChildren(ChildNativeCheck native, ChildChronosCheck chronos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x2B3BF2C", Offset = "0x2B3BF2C", VA = "0x2B3BF2C")]
		private bool AssertForwardMethod(string method, Severity severity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x2B3B58C", Offset = "0x2B3B58C", VA = "0x2B3B58C")]
		private bool AssertForwardProperty(string property, Severity severity)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000776")]
	public interface IRigidbodyTimeline
	{
		[Token(Token = "0x17000614")]
		float mass
		{
			[Token(Token = "0x6002835")]
			get;
			[Token(Token = "0x6002836")]
			set;
		}

		[Token(Token = "0x17000615")]
		float drag
		{
			[Token(Token = "0x6002837")]
			get;
			[Token(Token = "0x6002838")]
			set;
		}

		[Token(Token = "0x17000616")]
		float angularDrag
		{
			[Token(Token = "0x6002839")]
			get;
			[Token(Token = "0x600283A")]
			set;
		}
	}
	[Token(Token = "0x2000777")]
	public abstract class RigidbodyTimeline<TComponent, TSnapshot> : RecorderTimeline<TComponent, TSnapshot>, IRigidbodyTimeline where TComponent : Component
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float lastPositiveTimeScale;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TSnapshot zeroSnapshot;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float zeroTime;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Vector3 zeroDestination;

		[Token(Token = "0x17000617")]
		protected abstract bool isReallyManual
		{
			[Token(Token = "0x600283F")]
			get;
			[Token(Token = "0x6002840")]
			set;
		}

		[Token(Token = "0x17000618")]
		protected abstract float realMass
		{
			[Token(Token = "0x6002841")]
			get;
			[Token(Token = "0x6002842")]
			set;
		}

		[Token(Token = "0x17000619")]
		protected abstract Vector3 realVelocity
		{
			[Token(Token = "0x6002843")]
			get;
			[Token(Token = "0x6002844")]
			set;
		}

		[Token(Token = "0x1700061A")]
		protected abstract Vector3 realAngularVelocity
		{
			[Token(Token = "0x6002845")]
			get;
			[Token(Token = "0x6002846")]
			set;
		}

		[Token(Token = "0x1700061B")]
		protected abstract float realDrag
		{
			[Token(Token = "0x6002847")]
			get;
			[Token(Token = "0x6002848")]
			set;
		}

		[Token(Token = "0x1700061C")]
		protected abstract float realAngularDrag
		{
			[Token(Token = "0x6002849")]
			get;
			[Token(Token = "0x600284A")]
			set;
		}

		[Token(Token = "0x1700061D")]
		protected abstract bool isManual
		{
			[Token(Token = "0x600284D")]
			get;
		}

		[Token(Token = "0x1700061E")]
		public float mass
		{
			[Token(Token = "0x600284E")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600284F")]
			set
			{
			}
		}

		[Token(Token = "0x1700061F")]
		public float drag
		{
			[Token(Token = "0x6002850")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002851")]
			set
			{
			}
		}

		[Token(Token = "0x17000620")]
		public float angularDrag
		{
			[Token(Token = "0x6002852")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002853")]
			set
			{
			}
		}

		[Token(Token = "0x600283B")]
		public RigidbodyTimeline(Timeline timeline, TComponent component)
		{
		}

		[Token(Token = "0x600283C")]
		public override void Update()
		{
		}

		[Token(Token = "0x600283D")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600283E")]
		public override void ModifySnapshots(SnapshotModifier modifier)
		{
		}

		[Token(Token = "0x600284B")]
		protected abstract bool IsSleeping();

		[Token(Token = "0x600284C")]
		protected abstract void WakeUp();

		[Token(Token = "0x6002854")]
		protected virtual float AdjustForce(float force)
		{
			return default(float);
		}

		[Token(Token = "0x6002855")]
		protected virtual Vector2 AdjustForce(Vector2 force)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002856")]
		protected virtual Vector3 AdjustForce(Vector3 force)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002857")]
		protected bool AssertForwardProperty(string property, Severity severity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002858")]
		protected bool AssertForwardForce(Severity severity)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000778")]
	public class RigidbodyTimeline2D : RigidbodyTimeline<Rigidbody2D, RigidbodyTimeline2D.Snapshot>
	{
		[Token(Token = "0x2000779")]
		public struct Snapshot
		{
			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2 velocity;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float angularVelocity;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float drag;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float angularDrag;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float lastPositiveTimeScale;

			[Token(Token = "0x600287E")]
			[Address(RVA = "0x2EE7A9C", Offset = "0x2EE7A9C", VA = "0x2EE7A9C")]
			public static Snapshot Lerp(Snapshot from, Snapshot to, float t)
			{
				return default(Snapshot);
			}
		}

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private RigidbodyType2D _bodyType;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D64", Offset = "0xE23D64")]
		private float <gravityScale>k__BackingField;

		[Token(Token = "0x17000621")]
		protected float realGravityScale
		{
			[Token(Token = "0x600285F")]
			[Address(RVA = "0x2B3D090", Offset = "0x2B3D090", VA = "0x2B3D090")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002860")]
			[Address(RVA = "0x2B3D0DC", Offset = "0x2B3D0DC", VA = "0x2B3D0DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000622")]
		protected override bool isReallyManual
		{
			[Token(Token = "0x6002861")]
			[Address(RVA = "0x2B3D138", Offset = "0x2B3D138", VA = "0x2B3D138", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002862")]
			[Address(RVA = "0x2B3D1A0", Offset = "0x2B3D1A0", VA = "0x2B3D1A0", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000623")]
		private RigidbodyType2D realBodyType
		{
			[Token(Token = "0x6002863")]
			[Address(RVA = "0x2B3D154", Offset = "0x2B3D154", VA = "0x2B3D154")]
			get
			{
				return default(RigidbodyType2D);
			}
			[Token(Token = "0x6002864")]
			[Address(RVA = "0x2B3D1C4", Offset = "0x2B3D1C4", VA = "0x2B3D1C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000624")]
		protected override float realMass
		{
			[Token(Token = "0x6002865")]
			[Address(RVA = "0x2B3D220", Offset = "0x2B3D220", VA = "0x2B3D220", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002866")]
			[Address(RVA = "0x2B3D26C", Offset = "0x2B3D26C", VA = "0x2B3D26C", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000625")]
		protected override Vector3 realVelocity
		{
			[Token(Token = "0x6002867")]
			[Address(RVA = "0x2B3D2C8", Offset = "0x2B3D2C8", VA = "0x2B3D2C8", Slot = "35")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002868")]
			[Address(RVA = "0x2B3D31C", Offset = "0x2B3D31C", VA = "0x2B3D31C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000626")]
		protected override Vector3 realAngularVelocity
		{
			[Token(Token = "0x6002869")]
			[Address(RVA = "0x2B3D380", Offset = "0x2B3D380", VA = "0x2B3D380", Slot = "37")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600286A")]
			[Address(RVA = "0x2B3D3F0", Offset = "0x2B3D3F0", VA = "0x2B3D3F0", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000627")]
		protected override float realDrag
		{
			[Token(Token = "0x600286B")]
			[Address(RVA = "0x2B3D44C", Offset = "0x2B3D44C", VA = "0x2B3D44C", Slot = "39")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600286C")]
			[Address(RVA = "0x2B3D498", Offset = "0x2B3D498", VA = "0x2B3D498", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x17000628")]
		protected override float realAngularDrag
		{
			[Token(Token = "0x600286D")]
			[Address(RVA = "0x2B3D4F4", Offset = "0x2B3D4F4", VA = "0x2B3D4F4", Slot = "41")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600286E")]
			[Address(RVA = "0x2B3D540", Offset = "0x2B3D540", VA = "0x2B3D540", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000629")]
		public RigidbodyType2D bodyType
		{
			[Token(Token = "0x6002871")]
			[Address(RVA = "0x2B3D634", Offset = "0x2B3D634", VA = "0x2B3D634")]
			get
			{
				return default(RigidbodyType2D);
			}
			[Token(Token = "0x6002872")]
			[Address(RVA = "0x2B3CA94", Offset = "0x2B3CA94", VA = "0x2B3CA94")]
			set
			{
			}
		}

		[Token(Token = "0x1700062A")]
		protected override bool isManual
		{
			[Token(Token = "0x6002873")]
			[Address(RVA = "0x2B3D63C", Offset = "0x2B3D63C", VA = "0x2B3D63C", Slot = "45")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700062B")]
		public float gravityScale
		{
			[Token(Token = "0x6002874")]
			[Address(RVA = "0x2B3D64C", Offset = "0x2B3D64C", VA = "0x2B3D64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9F4", Offset = "0xE2C9F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002875")]
			[Address(RVA = "0x2B3D654", Offset = "0x2B3D654", VA = "0x2B3D654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA04", Offset = "0xE2CA04")]
			set
			{
			}
		}

		[Token(Token = "0x1700062C")]
		public Vector2 velocity
		{
			[Token(Token = "0x6002876")]
			[Address(RVA = "0x2B3CC6C", Offset = "0x2B3CC6C", VA = "0x2B3CC6C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002877")]
			[Address(RVA = "0x2B3CCF4", Offset = "0x2B3CCF4", VA = "0x2B3CCF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700062D")]
		public float angularVelocity
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0x2B3D65C", Offset = "0x2B3D65C", VA = "0x2B3D65C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002879")]
			[Address(RVA = "0x2B3D6DC", Offset = "0x2B3D6DC", VA = "0x2B3D6DC")]
			set
			{
			}
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x2B3C9D0", Offset = "0x2B3C9D0", VA = "0x2B3C9D0")]
		public RigidbodyTimeline2D(Timeline timeline, Rigidbody2D component)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x2B3CA34", Offset = "0x2B3CA34", VA = "0x2B3CA34", Slot = "16")]
		public override void CopyProperties(Rigidbody2D source)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x2B3CB10", Offset = "0x2B3CB10", VA = "0x2B3CB10", Slot = "14")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x2B3CDBC", Offset = "0x2B3CDBC", VA = "0x2B3CDBC", Slot = "21")]
		protected override Snapshot LerpSnapshots(Snapshot from, Snapshot to, float t)
		{
			return default(Snapshot);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x2B3CE40", Offset = "0x2B3CE40", VA = "0x2B3CE40", Slot = "22")]
		protected override Snapshot CopySnapshot()
		{
			return default(Snapshot);
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x2B3CF84", Offset = "0x2B3CF84", VA = "0x2B3CF84", Slot = "23")]
		protected override void ApplySnapshot(Snapshot snapshot)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x2B3D59C", Offset = "0x2B3D59C", VA = "0x2B3D59C", Slot = "43")]
		protected override bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x2B3D5E8", Offset = "0x2B3D5E8", VA = "0x2B3D5E8", Slot = "44")]
		protected override void WakeUp()
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x2B3D7B4", Offset = "0x2B3D7B4", VA = "0x2B3D7B4")]
		public void AddForce(Vector2 force, ForceMode2D mode = ForceMode2D.Force)
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x2B3D87C", Offset = "0x2B3D87C", VA = "0x2B3D87C")]
		public void AddRelativeForce(Vector2 force, ForceMode2D mode = ForceMode2D.Force)
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x2B3D944", Offset = "0x2B3D944", VA = "0x2B3D944")]
		public void AddForceAtPosition(Vector2 force, Vector2 position, ForceMode2D mode = ForceMode2D.Force)
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x2B3DA28", Offset = "0x2B3DA28", VA = "0x2B3DA28")]
		public void AddTorque(float torque, ForceMode2D mode = ForceMode2D.Force)
		{
		}
	}
	[Token(Token = "0x200077A")]
	public class RigidbodyTimeline3D : RigidbodyTimeline<Rigidbody, RigidbodyTimeline3D.Snapshot>
	{
		[Token(Token = "0x200077B")]
		public struct Snapshot
		{
			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 velocity;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float drag;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float angularDrag;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float lastPositiveTimeScale;

			[Token(Token = "0x60028A7")]
			[Address(RVA = "0x2EE7C10", Offset = "0x2EE7C10", VA = "0x2EE7C10")]
			public static Snapshot Lerp(Snapshot from, Snapshot to, float t)
			{
				return default(Snapshot);
			}
		}

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool _isKinematic;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D74", Offset = "0xE23D74")]
		private bool <useGravity>k__BackingField;

		[Token(Token = "0x1700062E")]
		protected bool reallyUsesGravity
		{
			[Token(Token = "0x6002886")]
			[Address(RVA = "0x2B3E32C", Offset = "0x2B3E32C", VA = "0x2B3E32C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002887")]
			[Address(RVA = "0x2B3E378", Offset = "0x2B3E378", VA = "0x2B3E378")]
			set
			{
			}
		}

		[Token(Token = "0x1700062F")]
		private bool isReallyKinematic
		{
			[Token(Token = "0x6002888")]
			[Address(RVA = "0x2B3E3D4", Offset = "0x2B3E3D4", VA = "0x2B3E3D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002889")]
			[Address(RVA = "0x2B3E420", Offset = "0x2B3E420", VA = "0x2B3E420")]
			set
			{
			}
		}

		[Token(Token = "0x17000630")]
		protected override bool isReallyManual
		{
			[Token(Token = "0x600288A")]
			[Address(RVA = "0x2B3E47C", Offset = "0x2B3E47C", VA = "0x2B3E47C", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600288B")]
			[Address(RVA = "0x2B3E480", Offset = "0x2B3E480", VA = "0x2B3E480", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000631")]
		protected override float realMass
		{
			[Token(Token = "0x600288C")]
			[Address(RVA = "0x2B3E488", Offset = "0x2B3E488", VA = "0x2B3E488", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600288D")]
			[Address(RVA = "0x2B3E4D4", Offset = "0x2B3E4D4", VA = "0x2B3E4D4", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000632")]
		protected override Vector3 realVelocity
		{
			[Token(Token = "0x600288E")]
			[Address(RVA = "0x2B3E530", Offset = "0x2B3E530", VA = "0x2B3E530", Slot = "35")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600288F")]
			[Address(RVA = "0x2B3E57C", Offset = "0x2B3E57C", VA = "0x2B3E57C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000633")]
		protected override Vector3 realAngularVelocity
		{
			[Token(Token = "0x6002890")]
			[Address(RVA = "0x2B3E5F0", Offset = "0x2B3E5F0", VA = "0x2B3E5F0", Slot = "37")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002891")]
			[Address(RVA = "0x2B3E63C", Offset = "0x2B3E63C", VA = "0x2B3E63C", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000634")]
		protected override float realDrag
		{
			[Token(Token = "0x6002892")]
			[Address(RVA = "0x2B3E6B0", Offset = "0x2B3E6B0", VA = "0x2B3E6B0", Slot = "39")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002893")]
			[Address(RVA = "0x2B3E6FC", Offset = "0x2B3E6FC", VA = "0x2B3E6FC", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x17000635")]
		protected override float realAngularDrag
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0x2B3E758", Offset = "0x2B3E758", VA = "0x2B3E758", Slot = "41")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002895")]
			[Address(RVA = "0x2B3E7A4", Offset = "0x2B3E7A4", VA = "0x2B3E7A4", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000636")]
		public bool isKinematic
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x2B3E898", Offset = "0x2B3E898", VA = "0x2B3E898")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002899")]
			[Address(RVA = "0x2B3DBAC", Offset = "0x2B3DBAC", VA = "0x2B3DBAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000637")]
		protected override bool isManual
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0x2B3E8A0", Offset = "0x2B3E8A0", VA = "0x2B3E8A0", Slot = "45")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000638")]
		public bool useGravity
		{
			[Token(Token = "0x600289B")]
			[Address(RVA = "0x2B3E8A8", Offset = "0x2B3E8A8", VA = "0x2B3E8A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA14", Offset = "0xE2CA14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600289C")]
			[Address(RVA = "0x2B3E8B0", Offset = "0x2B3E8B0", VA = "0x2B3E8B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA24", Offset = "0xE2CA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000639")]
		public Vector3 velocity
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0x2B3DD10", Offset = "0x2B3DD10", VA = "0x2B3DD10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600289E")]
			[Address(RVA = "0x2B3DDA0", Offset = "0x2B3DDA0", VA = "0x2B3DDA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700063A")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x600289F")]
			[Address(RVA = "0x2B3E8BC", Offset = "0x2B3E8BC", VA = "0x2B3E8BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x2B3E94C", Offset = "0x2B3E94C", VA = "0x2B3E94C")]
			set
			{
			}
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x2B3DAE8", Offset = "0x2B3DAE8", VA = "0x2B3DAE8")]
		public RigidbodyTimeline3D(Timeline timeline, Rigidbody component)
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x2B3DB4C", Offset = "0x2B3DB4C", VA = "0x2B3DB4C", Slot = "16")]
		public override void CopyProperties(Rigidbody source)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x2B3DC2C", Offset = "0x2B3DC2C", VA = "0x2B3DC2C", Slot = "14")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x2B3DE78", Offset = "0x2B3DE78", VA = "0x2B3DE78", Slot = "21")]
		protected override Snapshot LerpSnapshots(Snapshot from, Snapshot to, float t)
		{
			return default(Snapshot);
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x2B3DEE0", Offset = "0x2B3DEE0", VA = "0x2B3DEE0")]
		private NavMeshAgent GetNavMeshAgentOverride()
		{
			return null;
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x2B3DFD0", Offset = "0x2B3DFD0", VA = "0x2B3DFD0", Slot = "22")]
		protected override Snapshot CopySnapshot()
		{
			return default(Snapshot);
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x2B3E154", Offset = "0x2B3E154", VA = "0x2B3E154", Slot = "23")]
		protected override void ApplySnapshot(Snapshot snapshot)
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x2B3E800", Offset = "0x2B3E800", VA = "0x2B3E800", Slot = "44")]
		protected override void WakeUp()
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x2B3E84C", Offset = "0x2B3E84C", VA = "0x2B3E84C", Slot = "43")]
		protected override bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x2B3EA24", Offset = "0x2B3EA24", VA = "0x2B3EA24")]
		public void AddForce(Vector3 force, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x2B3EB00", Offset = "0x2B3EB00", VA = "0x2B3EB00")]
		public void AddRelativeForce(Vector3 force, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x2B3EBDC", Offset = "0x2B3EBDC", VA = "0x2B3EBDC")]
		public void AddForceAtPosition(Vector3 force, Vector3 position, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x2B3ECDC", Offset = "0x2B3ECDC", VA = "0x2B3ECDC")]
		public void AddExplosionForce(float explosionForce, Vector3 explosionPosition, float explosionRadius, float upwardsModifier = 0f, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x2B3EDDC", Offset = "0x2B3EDDC", VA = "0x2B3EDDC")]
		public void AddTorque(Vector3 torque, ForceMode mode = ForceMode.Force)
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x2B3EEB8", Offset = "0x2B3EEB8", VA = "0x2B3EEB8")]
		public void AddRelativeTorque(Vector3 torque, ForceMode mode = ForceMode.Force)
		{
		}
	}
	[Token(Token = "0x200077C")]
	public class TerrainTimeline : ComponentTimeline<Terrain>
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _wavingGrassSpeed;

		[Token(Token = "0x1700063B")]
		public float wavingGrassSpeed
		{
			[Token(Token = "0x60028A8")]
			[Address(RVA = "0x2591E9C", Offset = "0x2591E9C", VA = "0x2591E9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x2591EA4", Offset = "0x2591EA4", VA = "0x2591EA4")]
			set
			{
			}
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x2591F00", Offset = "0x2591F00", VA = "0x2591F00")]
		public TerrainTimeline(Timeline timeline, Terrain component)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x2591F64", Offset = "0x2591F64", VA = "0x2591F64", Slot = "16")]
		public override void CopyProperties(Terrain source)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x2591FA4", Offset = "0x2591FA4", VA = "0x2591FA4", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x200077D")]
	public class TrailRendererTimeline : ComponentTimeline<TrailRenderer>
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _time;

		[Token(Token = "0x1700063C")]
		public float time
		{
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0x2597990", Offset = "0x2597990", VA = "0x2597990")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x2597998", Offset = "0x2597998", VA = "0x2597998")]
			set
			{
			}
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x2596B68", Offset = "0x2596B68", VA = "0x2596B68")]
		public TrailRendererTimeline(Timeline timeline, TrailRenderer component)
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x25979F4", Offset = "0x25979F4", VA = "0x25979F4", Slot = "16")]
		public override void CopyProperties(TrailRenderer source)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x2597A28", Offset = "0x2597A28", VA = "0x2597A28", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x200077E")]
	public class TransformTimeline : RecorderTimeline<Transform, TransformTimeline.Snapshot>
	{
		[Token(Token = "0x200077F")]
		public struct Snapshot
		{
			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x31312A0", Offset = "0x31312A0", VA = "0x31312A0")]
			public static Snapshot Lerp(Snapshot from, Snapshot to, float t)
			{
				return default(Snapshot);
			}
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x2596BCC", Offset = "0x2596BCC", VA = "0x2596BCC")]
		public TransformTimeline(Timeline timeline, Transform component)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x25981F0", Offset = "0x25981F0", VA = "0x25981F0", Slot = "21")]
		protected override Snapshot LerpSnapshots(Snapshot from, Snapshot to, float t)
		{
			return default(Snapshot);
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x2598258", Offset = "0x2598258", VA = "0x2598258", Slot = "22")]
		protected override Snapshot CopySnapshot()
		{
			return default(Snapshot);
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x25982F0", Offset = "0x25982F0", VA = "0x25982F0", Slot = "23")]
		protected override void ApplySnapshot(Snapshot snapshot)
		{
		}
	}
	[Token(Token = "0x2000780")]
	public class WheelColliderTimeline : ComponentTimeline<WheelCollider>
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _spring;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _damper;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _targetPosition;

		[Token(Token = "0x1700063D")]
		public float spring
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x2D10DF0", Offset = "0x2D10DF0", VA = "0x2D10DF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x2D10DF8", Offset = "0x2D10DF8", VA = "0x2D10DF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700063E")]
		public float damper
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x2D10E54", Offset = "0x2D10E54", VA = "0x2D10E54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x2D10E5C", Offset = "0x2D10E5C", VA = "0x2D10E5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700063F")]
		public float targetPosition
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x2D10EB8", Offset = "0x2D10EB8", VA = "0x2D10EB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x2D10EC0", Offset = "0x2D10EC0", VA = "0x2D10EC0")]
			set
			{
			}
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x2D10F1C", Offset = "0x2D10F1C", VA = "0x2D10F1C")]
		public WheelColliderTimeline(Timeline timeline, WheelCollider component)
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x2D10F80", Offset = "0x2D10F80", VA = "0x2D10F80", Slot = "16")]
		public override void CopyProperties(WheelCollider source)
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x2D10FB8", Offset = "0x2D10FB8", VA = "0x2D10FB8", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x2000781")]
	public class WindZoneTimeline : ComponentTimeline<WindZone>
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _windMain;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _windTurbulence;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _windPulseFrequency;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _windPulseMagnitude;

		[Token(Token = "0x17000640")]
		public float windMain
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x2D11314", Offset = "0x2D11314", VA = "0x2D11314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x2D1131C", Offset = "0x2D1131C", VA = "0x2D1131C")]
			set
			{
			}
		}

		[Token(Token = "0x17000641")]
		public float windTurbulence
		{
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x2D11378", Offset = "0x2D11378", VA = "0x2D11378")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x2D11380", Offset = "0x2D11380", VA = "0x2D11380")]
			set
			{
			}
		}

		[Token(Token = "0x17000642")]
		public float windPulseMagnitude
		{
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x2D113DC", Offset = "0x2D113DC", VA = "0x2D113DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x2D113E4", Offset = "0x2D113E4", VA = "0x2D113E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000643")]
		public float windPulseFrequency
		{
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x2D11440", Offset = "0x2D11440", VA = "0x2D11440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x2D11448", Offset = "0x2D11448", VA = "0x2D11448")]
			set
			{
			}
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x2D114A4", Offset = "0x2D114A4", VA = "0x2D114A4")]
		public WindZoneTimeline(Timeline timeline, WindZone component)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x2D11508", Offset = "0x2D11508", VA = "0x2D11508", Slot = "16")]
		public override void CopyProperties(WindZone source)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x2D11570", Offset = "0x2D11570", VA = "0x2D11570", Slot = "17")]
		public override void AdjustProperties(float timeScale)
		{
		}
	}
	[Token(Token = "0x2000782")]
	public enum Severity
	{
		[Token(Token = "0x4001AEB")]
		Ignore,
		[Token(Token = "0x4001AEC")]
		Warn,
		[Token(Token = "0x4001AED")]
		Error
	}
	[Token(Token = "0x2000783")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool destroyed;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool persistent;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool automatic;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool missing;

		[Token(Token = "0x17000644")]
		public static bool instantiated
		{
			[Token(Token = "0x60028CB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000645")]
		public static T instance
		{
			[Token(Token = "0x60028CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028CD")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60028CE")]
		protected Singleton(bool persistent, bool automatic)
		{
		}
	}
}
namespace Chronos.Reflection
{
	[Serializable]
	[Token(Token = "0x2000784")]
	public class AnimatorParameter
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator _target;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23DA4", Offset = "0xE23DA4")]
		private AnimatorControllerParameter <parameterInfo>k__BackingField;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23DB4", Offset = "0xE23DB4")]
		private bool <isLinked>k__BackingField;

		[Token(Token = "0x17000646")]
		public Animator target
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x2AA58D8", Offset = "0x2AA58D8", VA = "0x2AA58D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x2AA58E0", Offset = "0x2AA58E0", VA = "0x2AA58E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000647")]
		public string name
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x2AA590C", Offset = "0x2AA590C", VA = "0x2AA590C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x2AA5914", Offset = "0x2AA5914", VA = "0x2AA5914")]
			set
			{
			}
		}

		[Token(Token = "0x17000648")]
		public AnimatorControllerParameter parameterInfo
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x2AA5940", Offset = "0x2AA5940", VA = "0x2AA5940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA34", Offset = "0xE2CA34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x2AA5948", Offset = "0x2AA5948", VA = "0x2AA5948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA44", Offset = "0xE2CA44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000649")]
		public bool isLinked
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x2AA5950", Offset = "0x2AA5950", VA = "0x2AA5950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA54", Offset = "0xE2CA54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x2AA5958", Offset = "0x2AA5958", VA = "0x2AA5958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA64", Offset = "0xE2CA64")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064A")]
		public bool isAssigned
		{
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x2AA5964", Offset = "0x2AA5964", VA = "0x2AA5964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700064B")]
		public Type type
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0x2AA61B8", Offset = "0x2AA61B8", VA = "0x2AA61B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x2AA59F4", Offset = "0x2AA59F4", VA = "0x2AA59F4")]
		public AnimatorParameter()
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x2AA59FC", Offset = "0x2AA59FC", VA = "0x2AA59FC")]
		public AnimatorParameter(string name)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x2AA5A38", Offset = "0x2AA5A38", VA = "0x2AA5A38")]
		public AnimatorParameter(string name, Animator target)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x2AA5A98", Offset = "0x2AA5A98", VA = "0x2AA5A98")]
		public void Link()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x2AA5C38", Offset = "0x2AA5C38", VA = "0x2AA5C38")]
		protected void EnsureLinked()
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x2AA5C48", Offset = "0x2AA5C48", VA = "0x2AA5C48")]
		public object Get()
		{
			return null;
		}

		[Token(Token = "0x60028DF")]
		public T Get<T>() where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x2AA5E14", Offset = "0x2AA5E14", VA = "0x2AA5E14")]
		public void Set(object value)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x2AA6050", Offset = "0x2AA6050", VA = "0x2AA6050")]
		public void SetTrigger()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x2AA6104", Offset = "0x2AA6104", VA = "0x2AA6104")]
		public void ResetTrigger()
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x2AA62F4", Offset = "0x2AA62F4", VA = "0x2AA62F4")]
		public bool Corresponds(AnimatorParameter other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000785")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE15544", Offset = "0xE15544")]
	public sealed class FilterAttribute : Attribute
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23DC4", Offset = "0xE23DC4")]
		private bool <Inherited>k__BackingField;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23DD4", Offset = "0xE23DD4")]
		private bool <Instance>k__BackingField;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23DE4", Offset = "0xE23DE4")]
		private bool <Static>k__BackingField;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23DF4", Offset = "0xE23DF4")]
		private bool <Public>k__BackingField;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E04", Offset = "0xE23E04")]
		private bool <NonPublic>k__BackingField;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E14", Offset = "0xE23E14")]
		private bool <ReadOnly>k__BackingField;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E24", Offset = "0xE23E24")]
		private bool <WriteOnly>k__BackingField;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E34", Offset = "0xE23E34")]
		private bool <Extension>k__BackingField;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E44", Offset = "0xE23E44")]
		private bool <Parameters>k__BackingField;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E54", Offset = "0xE23E54")]
		private TypeFamily <TypeFamilies>k__BackingField;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Type> types;

		[Token(Token = "0x1700064C")]
		public bool Inherited
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x29259F0", Offset = "0x29259F0", VA = "0x29259F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA74", Offset = "0xE2CA74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x29259F8", Offset = "0x29259F8", VA = "0x29259F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA84", Offset = "0xE2CA84")]
			set
			{
			}
		}

		[Token(Token = "0x1700064D")]
		public bool Instance
		{
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x2925A04", Offset = "0x2925A04", VA = "0x2925A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CA94", Offset = "0xE2CA94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x2925A0C", Offset = "0x2925A0C", VA = "0x2925A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CAA4", Offset = "0xE2CAA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700064E")]
		public bool Static
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x2925A18", Offset = "0x2925A18", VA = "0x2925A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CAB4", Offset = "0xE2CAB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0x2925A20", Offset = "0x2925A20", VA = "0x2925A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CAC4", Offset = "0xE2CAC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700064F")]
		public bool Public
		{
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x2925A2C", Offset = "0x2925A2C", VA = "0x2925A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CAD4", Offset = "0xE2CAD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0x2925A34", Offset = "0x2925A34", VA = "0x2925A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CAE4", Offset = "0xE2CAE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000650")]
		public bool NonPublic
		{
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0x2925A40", Offset = "0x2925A40", VA = "0x2925A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CAF4", Offset = "0xE2CAF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0x2925A48", Offset = "0x2925A48", VA = "0x2925A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB04", Offset = "0xE2CB04")]
			set
			{
			}
		}

		[Token(Token = "0x17000651")]
		public bool ReadOnly
		{
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0x2925A54", Offset = "0x2925A54", VA = "0x2925A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB14", Offset = "0xE2CB14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0x2925A5C", Offset = "0x2925A5C", VA = "0x2925A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB24", Offset = "0xE2CB24")]
			set
			{
			}
		}

		[Token(Token = "0x17000652")]
		public bool WriteOnly
		{
			[Token(Token = "0x60028F1")]
			[Address(RVA = "0x2925A68", Offset = "0x2925A68", VA = "0x2925A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB34", Offset = "0xE2CB34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028F2")]
			[Address(RVA = "0x2925A70", Offset = "0x2925A70", VA = "0x2925A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB44", Offset = "0xE2CB44")]
			set
			{
			}
		}

		[Token(Token = "0x17000653")]
		public bool Extension
		{
			[Token(Token = "0x60028F3")]
			[Address(RVA = "0x2925A7C", Offset = "0x2925A7C", VA = "0x2925A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB54", Offset = "0xE2CB54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0x2925A84", Offset = "0x2925A84", VA = "0x2925A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB64", Offset = "0xE2CB64")]
			set
			{
			}
		}

		[Token(Token = "0x17000654")]
		public bool Parameters
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x2925A90", Offset = "0x2925A90", VA = "0x2925A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB74", Offset = "0xE2CB74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028F6")]
			[Address(RVA = "0x2925A98", Offset = "0x2925A98", VA = "0x2925A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB84", Offset = "0xE2CB84")]
			set
			{
			}
		}

		[Token(Token = "0x17000655")]
		public TypeFamily TypeFamilies
		{
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0x2925AA4", Offset = "0x2925AA4", VA = "0x2925AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CB94", Offset = "0xE2CB94")]
			get
			{
				return default(TypeFamily);
			}
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x2925AAC", Offset = "0x2925AAC", VA = "0x2925AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CBA4", Offset = "0xE2CBA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000656")]
		public List<Type> Types
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x2925AB4", Offset = "0x2925AB4", VA = "0x2925AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x2925ABC", Offset = "0x2925ABC", VA = "0x2925ABC")]
		public FilterAttribute(params Type[] types)
		{
		}
	}
	[Token(Token = "0x2000786")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xE1557C", Offset = "0xE1557C")]
	public sealed class SelfTargetedAttribute : Attribute
	{
		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x2B4757C", Offset = "0x2B4757C", VA = "0x2B4757C")]
		public SelfTargetedAttribute()
		{
		}
	}
	[Token(Token = "0x2000787")]
	[Flags]
	public enum TypeFamily
	{
		[Token(Token = "0x4001B04")]
		None = 0,
		[Token(Token = "0x4001B05")]
		All = -1,
		[Token(Token = "0x4001B06")]
		Value = 1,
		[Token(Token = "0x4001B07")]
		Reference = 2,
		[Token(Token = "0x4001B08")]
		Primitive = 4,
		[Token(Token = "0x4001B09")]
		Array = 8,
		[Token(Token = "0x4001B0A")]
		Class = 0x10,
		[Token(Token = "0x4001B0B")]
		Enum = 0x20,
		[Token(Token = "0x4001B0C")]
		Interface = 0x40,
		[Token(Token = "0x4001B0D")]
		Void = 0x80
	}
	[Serializable]
	[Token(Token = "0x2000788")]
	public class UnityGetter : UnityMember
	{
		[Token(Token = "0x2000789")]
		private enum SourceType
		{
			[Token(Token = "0x4001B16")]
			Unknown,
			[Token(Token = "0x4001B17")]
			Field,
			[Token(Token = "0x4001B18")]
			Property,
			[Token(Token = "0x4001B19")]
			Method
		}

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SourceType sourceType;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E64", Offset = "0xE23E64")]
		private FieldInfo <fieldInfo>k__BackingField;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E74", Offset = "0xE23E74")]
		private PropertyInfo <propertyInfo>k__BackingField;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E84", Offset = "0xE23E84")]
		private MethodInfo <methodInfo>k__BackingField;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23E94", Offset = "0xE23E94")]
		private bool <isExtension>k__BackingField;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string[] _parameterTypes;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Type[] __parameterTypes;

		[Token(Token = "0x17000657")]
		public FieldInfo fieldInfo
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x27BC174", Offset = "0x27BC174", VA = "0x27BC174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CBB4", Offset = "0xE2CBB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x27BC17C", Offset = "0x27BC17C", VA = "0x27BC17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CBC4", Offset = "0xE2CBC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000658")]
		public PropertyInfo propertyInfo
		{
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x27BC184", Offset = "0x27BC184", VA = "0x27BC184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CBD4", Offset = "0xE2CBD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x27BC18C", Offset = "0x27BC18C", VA = "0x27BC18C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CBE4", Offset = "0xE2CBE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000659")]
		public MethodInfo methodInfo
		{
			[Token(Token = "0x6002900")]
			[Address(RVA = "0x27BC194", Offset = "0x27BC194", VA = "0x27BC194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CBF4", Offset = "0xE2CBF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002901")]
			[Address(RVA = "0x27BC19C", Offset = "0x27BC19C", VA = "0x27BC19C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC04", Offset = "0xE2CC04")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065A")]
		public bool isExtension
		{
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x27BC1A4", Offset = "0x27BC1A4", VA = "0x27BC1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC14", Offset = "0xE2CC14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002903")]
			[Address(RVA = "0x27BC1AC", Offset = "0x27BC1AC", VA = "0x27BC1AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC24", Offset = "0xE2CC24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065B")]
		public Type[] parameterTypes
		{
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x27BC1B8", Offset = "0x27BC1B8", VA = "0x27BC1B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002905")]
			[Address(RVA = "0x27BC1C0", Offset = "0x27BC1C0", VA = "0x27BC1C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700065C")]
		public Type returnType
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0x27BD228", Offset = "0x27BD228", VA = "0x27BD228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x27BC1EC", Offset = "0x27BC1EC", VA = "0x27BC1EC")]
		public UnityGetter()
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x27BC1FC", Offset = "0x27BC1FC", VA = "0x27BC1FC")]
		public UnityGetter(string name)
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x27BC274", Offset = "0x27BC274", VA = "0x27BC274")]
		public UnityGetter(string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x27BC2E0", Offset = "0x27BC2E0", VA = "0x27BC2E0")]
		public UnityGetter(string component, string name)
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x27BC340", Offset = "0x27BC340", VA = "0x27BC340")]
		public UnityGetter(string component, string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x27BC3C4", Offset = "0x27BC3C4", VA = "0x27BC3C4")]
		public UnityGetter(string name, Type[] parameterTypes)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x27BC420", Offset = "0x27BC420", VA = "0x27BC420")]
		public UnityGetter(string name, Type[] parameterTypes, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x27BC490", Offset = "0x27BC490", VA = "0x27BC490")]
		public UnityGetter(string component, string name, Type[] parameterTypes)
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x27BC4C8", Offset = "0x27BC4C8", VA = "0x27BC4C8")]
		public UnityGetter(string component, string name, Type[] parameterTypes, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x27BC52C", Offset = "0x27BC52C", VA = "0x27BC52C", Slot = "4")]
		public override void Reflect()
		{
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x27BCFC8", Offset = "0x27BCFC8", VA = "0x27BCFC8")]
		public object Get(params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6002911")]
		public T Get<T>(params object[] parameters)
		{
			return (T)null;
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x27BD2F0", Offset = "0x27BD2F0", VA = "0x27BD2F0", Slot = "5")]
		public override bool Corresponds(UnityMember other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200078A")]
	public abstract class UnityMember
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private UnityEngine.Object _target;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _component;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23EE4", Offset = "0xE23EE4")]
		private bool <isTargeted>k__BackingField;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23EF4", Offset = "0xE23EF4")]
		private bool <isReflected>k__BackingField;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23F04", Offset = "0xE23F04")]
		private UnityEngine.Object <reflectionTarget>k__BackingField;

		[Token(Token = "0x1700065D")]
		public UnityEngine.Object target
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x27BD4FC", Offset = "0x27BD4FC", VA = "0x27BD4FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x27BC464", Offset = "0x27BC464", VA = "0x27BC464")]
			set
			{
			}
		}

		[Token(Token = "0x1700065E")]
		public string component
		{
			[Token(Token = "0x6002916")]
			[Address(RVA = "0x27BD504", Offset = "0x27BD504", VA = "0x27BD504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002917")]
			[Address(RVA = "0x27BD50C", Offset = "0x27BD50C", VA = "0x27BD50C")]
			set
			{
			}
		}

		[Token(Token = "0x1700065F")]
		public string name
		{
			[Token(Token = "0x6002918")]
			[Address(RVA = "0x27BD538", Offset = "0x27BD538", VA = "0x27BD538")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002919")]
			[Address(RVA = "0x27BD540", Offset = "0x27BD540", VA = "0x27BD540")]
			set
			{
			}
		}

		[Token(Token = "0x17000660")]
		protected bool isTargeted
		{
			[Token(Token = "0x600291A")]
			[Address(RVA = "0x27BD56C", Offset = "0x27BD56C", VA = "0x27BD56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC34", Offset = "0xE2CC34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600291B")]
			[Address(RVA = "0x27BD574", Offset = "0x27BD574", VA = "0x27BD574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC44", Offset = "0xE2CC44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000661")]
		public bool isReflected
		{
			[Token(Token = "0x600291C")]
			[Address(RVA = "0x27BD580", Offset = "0x27BD580", VA = "0x27BD580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC54", Offset = "0xE2CC54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600291D")]
			[Address(RVA = "0x27BD588", Offset = "0x27BD588", VA = "0x27BD588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC64", Offset = "0xE2CC64")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000662")]
		public bool isAssigned
		{
			[Token(Token = "0x600291E")]
			[Address(RVA = "0x27BD594", Offset = "0x27BD594", VA = "0x27BD594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000663")]
		protected UnityEngine.Object reflectionTarget
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0x27BD624", Offset = "0x27BD624", VA = "0x27BD624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC74", Offset = "0xE2CC74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002920")]
			[Address(RVA = "0x27BD62C", Offset = "0x27BD62C", VA = "0x27BD62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC84", Offset = "0xE2CC84")]
			private set
			{
			}
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x27BC1F4", Offset = "0x27BC1F4", VA = "0x27BC1F4")]
		public UnityMember()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x27BC238", Offset = "0x27BC238", VA = "0x27BC238")]
		public UnityMember(string name)
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x27BC278", Offset = "0x27BC278", VA = "0x27BC278")]
		public UnityMember(string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x27BC2E4", Offset = "0x27BC2E4", VA = "0x27BC2E4")]
		public UnityMember(string component, string name)
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x27BC344", Offset = "0x27BC344", VA = "0x27BC344")]
		public UnityMember(string component, string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x27BD634", Offset = "0x27BD634", VA = "0x27BD634")]
		protected void Target()
		{
		}

		[Token(Token = "0x6002927")]
		public abstract void Reflect();

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x27BD0AC", Offset = "0x27BD0AC", VA = "0x27BD0AC")]
		public void EnsureReflected()
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x27BC7CC", Offset = "0x27BC7CC", VA = "0x27BC7CC")]
		public void EnsureTargeted()
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x27BC768", Offset = "0x27BC768", VA = "0x27BC768")]
		public void EnsureAssigned()
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x27BD430", Offset = "0x27BD430", VA = "0x27BD430", Slot = "5")]
		public virtual bool Corresponds(UnityMember other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200078B")]
	public class UnityMethod : UnityMember, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE155C4", Offset = "0xE155C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, Type> <>9__13_0;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__14_0;

			[Token(Token = "0x6002943")]
			[Address(RVA = "0x3134288", Offset = "0x3134288", VA = "0x3134288")]
			public <>c()
			{
			}

			[Token(Token = "0x6002944")]
			[Address(RVA = "0x3134290", Offset = "0x3134290", VA = "0x3134290")]
			internal Type <OnAfterDeserialize>b__13_0(string typeName)
			{
				return null;
			}

			[Token(Token = "0x6002945")]
			[Address(RVA = "0x313429C", Offset = "0x313429C", VA = "0x313429C")]
			internal string <OnBeforeSerialize>b__14_0(Type type)
			{
				return null;
			}
		}

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23F14", Offset = "0xE23F14")]
		private MethodInfo <methodInfo>k__BackingField;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23F24", Offset = "0xE23F24")]
		private bool <isExtension>k__BackingField;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string[] _parameterTypes;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Type[] __parameterTypes;

		[Token(Token = "0x17000664")]
		public MethodInfo methodInfo
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x27BDA88", Offset = "0x27BDA88", VA = "0x27BDA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CC94", Offset = "0xE2CC94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x27BDA90", Offset = "0x27BDA90", VA = "0x27BDA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CCA4", Offset = "0xE2CCA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000665")]
		public bool isExtension
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x27BDA98", Offset = "0x27BDA98", VA = "0x27BDA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CCB4", Offset = "0xE2CCB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x27BDAA0", Offset = "0x27BDAA0", VA = "0x27BDAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CCC4", Offset = "0xE2CCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000666")]
		public Type[] parameterTypes
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x27BDAAC", Offset = "0x27BDAAC", VA = "0x27BDAAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x27BDAB4", Offset = "0x27BDAB4", VA = "0x27BDAB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000667")]
		public Type returnType
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x27BDFF0", Offset = "0x27BDFF0", VA = "0x27BDFF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x27BDAE0", Offset = "0x27BDAE0", VA = "0x27BDAE0", Slot = "7")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x27BDC44", Offset = "0x27BDC44", VA = "0x27BDC44", Slot = "6")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x27BDDB4", Offset = "0x27BDDB4", VA = "0x27BDDB4")]
		public UnityMethod()
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x27BDDBC", Offset = "0x27BDDBC", VA = "0x27BDDBC")]
		public UnityMethod(string name)
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x27BDDF8", Offset = "0x27BDDF8", VA = "0x27BDDF8")]
		public UnityMethod(string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x27BDDFC", Offset = "0x27BDDFC", VA = "0x27BDDFC")]
		public UnityMethod(string component, string name)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x27BDE00", Offset = "0x27BDE00", VA = "0x27BDE00")]
		public UnityMethod(string component, string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x27BDE04", Offset = "0x27BDE04", VA = "0x27BDE04")]
		public UnityMethod(string name, Type[] parameterTypes)
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x27BDE60", Offset = "0x27BDE60", VA = "0x27BDE60")]
		public UnityMethod(string name, Type[] parameterTypes, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x27BDEA4", Offset = "0x27BDEA4", VA = "0x27BDEA4")]
		public UnityMethod(string component, string name, Type[] parameterTypes)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x27BDEDC", Offset = "0x27BDEDC", VA = "0x27BDEDC")]
		public UnityMethod(string component, string name, Type[] parameterTypes, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x27BDF40", Offset = "0x27BDF40", VA = "0x27BDF40", Slot = "4")]
		public override void Reflect()
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x27BDFAC", Offset = "0x27BDFAC", VA = "0x27BDFAC")]
		public object Invoke(params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x600293F")]
		public T Invoke<T>(params object[] parameters)
		{
			return (T)null;
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x27BE03C", Offset = "0x27BE03C", VA = "0x27BE03C", Slot = "5")]
		public override bool Corresponds(UnityMember other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200078D")]
	public class UnityReflectionException : Exception
	{
		[Token(Token = "0x6002946")]
		[Address(RVA = "0x27BD1C4", Offset = "0x27BD1C4", VA = "0x27BD1C4")]
		public UnityReflectionException()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x27BCF54", Offset = "0x27BCF54", VA = "0x27BCF54")]
		public UnityReflectionException(string message)
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x27BE134", Offset = "0x27BE134", VA = "0x27BE134")]
		public UnityReflectionException(string message, Exception innerException)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200078E")]
	public class UnityVariable : UnityMember
	{
		[Token(Token = "0x200078F")]
		private enum SourceType
		{
			[Token(Token = "0x4001B2B")]
			Unknown,
			[Token(Token = "0x4001B2C")]
			Field,
			[Token(Token = "0x4001B2D")]
			Property
		}

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SourceType sourceType;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23F44", Offset = "0xE23F44")]
		private FieldInfo <fieldInfo>k__BackingField;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23F54", Offset = "0xE23F54")]
		private PropertyInfo <propertyInfo>k__BackingField;

		[Token(Token = "0x17000668")]
		public FieldInfo fieldInfo
		{
			[Token(Token = "0x6002949")]
			[Address(RVA = "0x27BE1B0", Offset = "0x27BE1B0", VA = "0x27BE1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CCD4", Offset = "0xE2CCD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600294A")]
			[Address(RVA = "0x27BE1B8", Offset = "0x27BE1B8", VA = "0x27BE1B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CCE4", Offset = "0xE2CCE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000669")]
		public PropertyInfo propertyInfo
		{
			[Token(Token = "0x600294B")]
			[Address(RVA = "0x27BE1C0", Offset = "0x27BE1C0", VA = "0x27BE1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CCF4", Offset = "0xE2CCF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x27BE1C8", Offset = "0x27BE1C8", VA = "0x27BE1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2CD04", Offset = "0xE2CD04")]
			private set
			{
			}
		}

		[Token(Token = "0x1700066A")]
		public Type type
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0x27BE528", Offset = "0x27BE528", VA = "0x27BE528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x27BE1D0", Offset = "0x27BE1D0", VA = "0x27BE1D0")]
		public UnityVariable()
		{
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x27BE1D8", Offset = "0x27BE1D8", VA = "0x27BE1D8")]
		public UnityVariable(string name)
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x27BE214", Offset = "0x27BE214", VA = "0x27BE214")]
		public UnityVariable(string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x27BE218", Offset = "0x27BE218", VA = "0x27BE218")]
		public UnityVariable(string component, string name)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x27BE21C", Offset = "0x27BE21C", VA = "0x27BE21C")]
		public UnityVariable(string component, string name, UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x27BE220", Offset = "0x27BE220", VA = "0x27BE220", Slot = "4")]
		public override void Reflect()
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x27BE3AC", Offset = "0x27BE3AC", VA = "0x27BE3AC")]
		public object Get()
		{
			return null;
		}

		[Token(Token = "0x6002954")]
		public T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x27BE468", Offset = "0x27BE468", VA = "0x27BE468")]
		public void Set(object value)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x27BE5D0", Offset = "0x27BE5D0", VA = "0x27BE5D0", Slot = "5")]
		public override bool Corresponds(UnityMember other)
		{
			return default(bool);
		}
	}
}
namespace Chronos.Reflection.Internal
{
	[Token(Token = "0x2000790")]
	internal static class UnityMemberHelper
	{
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE155D4", Offset = "0xE155D4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type[] parameterTypes;

			[Token(Token = "0x600295D")]
			[Address(RVA = "0x3134028", Offset = "0x3134028", VA = "0x3134028")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600295E")]
			[Address(RVA = "0x3134030", Offset = "0x3134030", VA = "0x3134030")]
			internal bool <TryReflectMethod>b__0(MethodInfo extension)
			{
				return default(bool);
			}

			[Token(Token = "0x600295F")]
			[Address(RVA = "0x3134070", Offset = "0x3134070", VA = "0x3134070")]
			internal bool <TryReflectMethod>b__1(MethodInfo extension)
			{
				return default(bool);
			}

			[Token(Token = "0x6002960")]
			[Address(RVA = "0x31341E4", Offset = "0x31341E4", VA = "0x31341E4")]
			internal bool <TryReflectMethod>b__4(MethodInfo extension)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE155E4", Offset = "0xE155E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__0_3;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__0_2;

			[Token(Token = "0x6002962")]
			[Address(RVA = "0x3133FE0", Offset = "0x3133FE0", VA = "0x3133FE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002963")]
			[Address(RVA = "0x3133FE8", Offset = "0x3133FE8", VA = "0x3133FE8")]
			internal Type <TryReflectMethod>b__0_3(ParameterInfo paramInfo)
			{
				return null;
			}

			[Token(Token = "0x6002964")]
			[Address(RVA = "0x3134008", Offset = "0x3134008", VA = "0x3134008")]
			internal string <TryReflectMethod>b__0_2(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x27BC934", Offset = "0x27BC934", VA = "0x27BC934")]
		internal static bool TryReflectMethod(out MethodInfo methodInfo, out UnityReflectionException exception, UnityEngine.Object reflectionTarget, string name, Type[] parameterTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x27BD9CC", Offset = "0x27BD9CC", VA = "0x27BD9CC")]
		internal static MethodInfo ReflectMethod(UnityEngine.Object reflectionTarget, string name, Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x27BD0C4", Offset = "0x27BD0C4", VA = "0x27BD0C4")]
		internal static object InvokeMethod(UnityEngine.Object reflectionTarget, MethodInfo methodInfo, bool isExtension, params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x27BC7DC", Offset = "0x27BC7DC", VA = "0x27BC7DC")]
		internal static bool TryReflectVariable(out MemberInfo variableInfo, out UnityReflectionException exception, UnityEngine.Object reflectionTarget, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x27BDA2C", Offset = "0x27BDA2C", VA = "0x27BDA2C")]
		internal static MemberInfo ReflectVariable(UnityEngine.Object reflectionTarget, string name)
		{
			return null;
		}
	}
	[Token(Token = "0x2000793")]
	public static class Extensions
	{
		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15604", Offset = "0xE15604")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x6002969")]
			[Address(RVA = "0x272F1E0", Offset = "0x272F1E0", VA = "0x272F1E0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600296A")]
			[Address(RVA = "0x272F1E8", Offset = "0x272F1E8", VA = "0x272F1E8")]
			internal bool <GetExtensionMethods>b__4(MethodInfo method)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15614", Offset = "0xE15614")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__3_0;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, bool> <>9__3_1;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Type, IEnumerable<MethodInfo>> <>9__3_2;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MethodInfo, bool> <>9__3_3;

			[Token(Token = "0x600296C")]
			[Address(RVA = "0x272F118", Offset = "0x272F118", VA = "0x272F118")]
			public <>c()
			{
			}

			[Token(Token = "0x600296D")]
			[Address(RVA = "0x272F120", Offset = "0x272F120", VA = "0x272F120")]
			internal IEnumerable<Type> <GetExtensionMethods>b__3_0(Assembly assembly)
			{
				return null;
			}

			[Token(Token = "0x600296E")]
			[Address(RVA = "0x272F144", Offset = "0x272F144", VA = "0x272F144")]
			internal bool <GetExtensionMethods>b__3_1(Type potentialType)
			{
				return default(bool);
			}

			[Token(Token = "0x600296F")]
			[Address(RVA = "0x272F1AC", Offset = "0x272F1AC", VA = "0x272F1AC")]
			internal IEnumerable<MethodInfo> <GetExtensionMethods>b__3_2(Type extensionType)
			{
				return null;
			}

			[Token(Token = "0x6002970")]
			[Address(RVA = "0x272F1D4", Offset = "0x272F1D4", VA = "0x272F1D4")]
			internal bool <GetExtensionMethods>b__3_3(MethodInfo method)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MethodInfo[] extensionMethodsCache;

		[Token(Token = "0x6002965")]
		public static IEnumerable<T> IntersectAll<T>(this IEnumerable<IEnumerable<T>> groups)
		{
			return null;
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x28CDCC8", Offset = "0x28CDCC8", VA = "0x28CDCC8")]
		public static bool HasFlag(this Enum value, Enum flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x28CDD54", Offset = "0x28CDD54", VA = "0x28CDD54")]
		public static IEnumerable<MethodInfo> GetExtensionMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x28CE244", Offset = "0x28CE244", VA = "0x28CE244")]
		public static bool IsExtension(this MethodInfo methodInfo)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000796")]
	public static class TypeSerializer
	{
		[Token(Token = "0x6002971")]
		[Address(RVA = "0x27B79A0", Offset = "0x27B79A0", VA = "0x27B79A0")]
		public static string Serialize(Type type)
		{
			return null;
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x27B79C0", Offset = "0x27B79C0", VA = "0x27B79C0")]
		public static Type Deserialize(string fullName)
		{
			return null;
		}
	}
}
namespace Chronos.Example
{
	[Token(Token = "0x2000797")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE15624", Offset = "0xE15624")]
	public abstract class ExampleBaseBehaviour : MonoBehaviour
	{
		[Token(Token = "0x1700066B")]
		public Timeline time
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0x28C6160", Offset = "0x28C6160", VA = "0x28C6160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x28C61AC", Offset = "0x28C61AC", VA = "0x28C61AC")]
		protected ExampleBaseBehaviour()
		{
		}
	}
	[Token(Token = "0x2000798")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE15684", Offset = "0xE15684")]
	public class ExampleBubble : MonoBehaviour
	{
		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE156E4", Offset = "0xE156E4")]
		private sealed class <ChangeDestinationCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExampleBubble <>4__this;

			[Token(Token = "0x1700066C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600297D")]
				[Address(RVA = "0x272E574", Offset = "0x272E574", VA = "0x272E574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600297F")]
				[Address(RVA = "0x272E5BC", Offset = "0x272E5BC", VA = "0x272E5BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600297A")]
			[Address(RVA = "0x272E490", Offset = "0x272E490", VA = "0x272E490")]
			[DebuggerHidden]
			public <ChangeDestinationCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600297B")]
			[Address(RVA = "0x272E4BC", Offset = "0x272E4BC", VA = "0x272E4BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600297C")]
			[Address(RVA = "0x272E4C0", Offset = "0x272E4C0", VA = "0x272E4C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600297E")]
			[Address(RVA = "0x272E57C", Offset = "0x272E57C", VA = "0x272E57C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 areaCenter;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 areaSize;

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x28C61B4", Offset = "0x28C61B4", VA = "0x28C61B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x28C61E0", Offset = "0x28C61E0", VA = "0x28C61E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2CD54", Offset = "0xE2CD54")]
		private IEnumerator ChangeDestinationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x28C6258", Offset = "0x28C6258", VA = "0x28C6258")]
		private void ChangeDestination()
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x28C6330", Offset = "0x28C6330", VA = "0x28C6330")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x28C636C", Offset = "0x28C636C", VA = "0x28C636C")]
		public ExampleBubble()
		{
		}
	}
	[Token(Token = "0x200079A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE156F4", Offset = "0xE156F4")]
	public class ExampleNavigator : ExampleBaseBehaviour
	{
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE15754", Offset = "0xE15754")]
		private sealed class <ChangeDestinationCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExampleNavigator <>4__this;

			[Token(Token = "0x1700066E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002988")]
				[Address(RVA = "0x272E678", Offset = "0x272E678", VA = "0x272E678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600298A")]
				[Address(RVA = "0x272E6C0", Offset = "0x272E6C0", VA = "0x272E6C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002985")]
			[Address(RVA = "0x272E5C4", Offset = "0x272E5C4", VA = "0x272E5C4")]
			[DebuggerHidden]
			public <ChangeDestinationCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002986")]
			[Address(RVA = "0x272E5F0", Offset = "0x272E5F0", VA = "0x272E5F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002987")]
			[Address(RVA = "0x272E5F4", Offset = "0x272E5F4", VA = "0x272E5F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002989")]
			[Address(RVA = "0x272E680", Offset = "0x272E680", VA = "0x272E680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 areaCenter;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 areaSize;

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x28C637C", Offset = "0x28C637C", VA = "0x28C637C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x28C63A8", Offset = "0x28C63A8", VA = "0x28C63A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2CE04", Offset = "0xE2CE04")]
		private IEnumerator ChangeDestinationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x28C6420", Offset = "0x28C6420", VA = "0x28C6420")]
		private void ChangeDestination()
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x28C64F8", Offset = "0x28C64F8", VA = "0x28C64F8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x28C6534", Offset = "0x28C6534", VA = "0x28C6534")]
		public ExampleNavigator()
		{
		}
	}
	[Token(Token = "0x200079C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE15764", Offset = "0xE15764")]
	public class ExampleOccurrences : ExampleBaseBehaviour
	{
		[Token(Token = "0x200079D")]
		private class ChangeColorOccurrence : Occurrence
		{
			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Material material;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Color newColor;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color previousColor;

			[Token(Token = "0x600298D")]
			[Address(RVA = "0x272E6C8", Offset = "0x272E6C8", VA = "0x272E6C8")]
			public ChangeColorOccurrence(Material material, Color newColor)
			{
			}

			[Token(Token = "0x600298E")]
			[Address(RVA = "0x272E728", Offset = "0x272E728", VA = "0x272E728", Slot = "4")]
			public override void Forward()
			{
			}

			[Token(Token = "0x600298F")]
			[Address(RVA = "0x272E774", Offset = "0x272E774", VA = "0x272E774", Slot = "5")]
			public override void Backward()
			{
			}
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x28C6544", Offset = "0x28C6544", VA = "0x28C6544")]
		private void Start()
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x28C67F8", Offset = "0x28C67F8", VA = "0x28C67F8")]
		public ExampleOccurrences()
		{
		}
	}
	[Token(Token = "0x200079E")]
	public class ExamplePhysics : ExampleBaseBehaviour
	{
		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE157C4", Offset = "0xE157C4")]
		private sealed class <SpawnCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExamplePhysics <>4__this;

			[Token(Token = "0x17000670")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002997")]
				[Address(RVA = "0x272E850", Offset = "0x272E850", VA = "0x272E850", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000671")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002999")]
				[Address(RVA = "0x272E898", Offset = "0x272E898", VA = "0x272E898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002994")]
			[Address(RVA = "0x272E79C", Offset = "0x272E79C", VA = "0x272E79C")]
			[DebuggerHidden]
			public <SpawnCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002995")]
			[Address(RVA = "0x272E7C8", Offset = "0x272E7C8", VA = "0x272E7C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002996")]
			[Address(RVA = "0x272E7CC", Offset = "0x272E7CC", VA = "0x272E7CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002998")]
			[Address(RVA = "0x272E858", Offset = "0x272E858", VA = "0x272E858", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float amount;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> spawned;

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x28C6800", Offset = "0x28C6800", VA = "0x28C6800")]
		private void Start()
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x28C682C", Offset = "0x28C682C", VA = "0x28C682C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2CEB4", Offset = "0xE2CEB4")]
		private IEnumerator SpawnCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x28C68A4", Offset = "0x28C68A4", VA = "0x28C68A4")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x28C6C10", Offset = "0x28C6C10", VA = "0x28C6C10")]
		public ExamplePhysics()
		{
		}
	}
	[Token(Token = "0x20007A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE157D4", Offset = "0xE157D4")]
	public class ExampleSlider : MonoBehaviour
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GlobalClock clock;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x17000672")]
		private Slider slider
		{
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x28C6CA0", Offset = "0x28C6CA0", VA = "0x28C6CA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x28C6CEC", Offset = "0x28C6CEC", VA = "0x28C6CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x28C6DB4", Offset = "0x28C6DB4", VA = "0x28C6DB4")]
		public void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x28C6DD0", Offset = "0x28C6DD0", VA = "0x28C6DD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x28C70BC", Offset = "0x28C70BC", VA = "0x28C70BC")]
		public ExampleSlider()
		{
		}
	}
	[Token(Token = "0x20007A1")]
	public class ExampleSpin : ExampleBaseBehaviour
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x28C70C4", Offset = "0x28C70C4", VA = "0x28C70C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x28C7160", Offset = "0x28C7160", VA = "0x28C7160")]
		public ExampleSpin()
		{
		}
	}
	[Token(Token = "0x20007A2")]
	public class ExampleTimeColor : MonoBehaviour
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color rewind;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color pause;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color slow;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color play;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color accelerate;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float slowTimeScale;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float rewindTimeScale;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float accelerateTimeScale;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Timeline time;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Renderer renderer;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x28C7170", Offset = "0x28C7170", VA = "0x28C7170")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x28C722C", Offset = "0x28C722C", VA = "0x28C722C")]
		private void Update()
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x28C7594", Offset = "0x28C7594", VA = "0x28C7594")]
		public ExampleTimeColor()
		{
		}
	}
}
namespace PostProcess
{
	[Token(Token = "0x20007A3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE15834", Offset = "0xE15834")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE15834", Offset = "0xE15834")]
	public class BlinkEffect : MonoBehaviour
	{
		[Token(Token = "0x20007A4")]
		private enum State
		{
			[Token(Token = "0x4001B72")]
			FadingIn,
			[Token(Token = "0x4001B73")]
			FadingOut,
			[Token(Token = "0x4001B74")]
			WaitingForFadeOut,
			[Token(Token = "0x4001B75")]
			Idle
		}

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader standard;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader curved;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23F64", Offset = "0xE23F64")]
		public float smoothness;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23F7C", Offset = "0xE23F7C")]
		public float curvature;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23F94", Offset = "0xE23F94")]
		public float time;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23FAC", Offset = "0xE23FAC")]
		public float fadeOutDelay;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fadeInTime;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeOutTime;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve fadeInCurve;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve fadeOutCurve;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material material;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material materialCurved;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float localTime;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private State state;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool inAndOut;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action onFadeInComplete;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action onFadeOutComplete;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _Curvature;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _LocalTime;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _Smoothness;

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x2DF46D4", Offset = "0x2DF46D4", VA = "0x2DF46D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x2DF4B58", Offset = "0x2DF4B58", VA = "0x2DF4B58")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x2DF4868", Offset = "0x2DF4868", VA = "0x2DF4868")]
		private void SetDefaultFadeInAnimationCurves()
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x2DF49E0", Offset = "0x2DF49E0", VA = "0x2DF49E0")]
		private void SetDefaultFadeOutAnimationCurves()
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x2DF4CC4", Offset = "0x2DF4CC4", VA = "0x2DF4CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x2DF4DF8", Offset = "0x2DF4DF8", VA = "0x2DF4DF8")]
		public void Blink([Optional] Action onComplete, [Optional] Action onFadeInComplete)
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x2DF4EF8", Offset = "0x2DF4EF8", VA = "0x2DF4EF8")]
		public void FadeIn([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x2DF4FA8", Offset = "0x2DF4FA8", VA = "0x2DF4FA8")]
		public void FadeOut([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x2DF5068", Offset = "0x2DF5068", VA = "0x2DF5068")]
		public BlinkEffect()
		{
		}
	}
}
